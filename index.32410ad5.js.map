{"mappings":"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,O,O,wB,C,E,G,U,A,E,E,E,I,C,K,C,E,E,C,O,C,C,S,E,C,E,I,I,E,E,E,U,M,C,I,C,I,E,M,S,C,E,C,S,C,E,C,C,C,C,E,E,E,O,G,C,G,O,C,S,C,E,E,E,E,C,C,E,C,G,O,yB,C,O,gB,C,E,O,yB,C,I,E,O,I,O,C,S,C,E,O,c,C,E,E,O,wB,C,E,G,E,C,O,C,C,S,E,C,E,O,S,C,E,G,M,O,C,G,O,E,E,E,I,S,C,E,G,a,O,Q,M,C,C,O,Q,C,E,M,C,C,a,C,O,M,I,C,E,E,I,S,C,C,C,E,G,E,C,G,U,O,E,O,E,E,K,G,I,E,O,S,C,Q,C,I,C,G,K,C,E,I,M,W,G,E,W,E,C,E,E,W,C,I,A,E,Q,G,Q,E,M,I,C,G,c,G,2C,I,C,G,E,E,K,G,K,C,C,E,I,W,M,A,U,uI,G,C,S,E,C,C,C,E,A,C,M,G,E,E,M,A,G,C,E,E,M,A,E,I,I,E,E,E,A,M,G,E,E,I,C,C,E,C,C,C,E,C,O,C,C,S,E,C,C,C,C,C,E,M,A,C,E,E,E,I,E,O,c,C,E,E,C,M,E,W,C,E,a,C,E,S,C,C,G,C,C,E,C,E,C,C,S,E,C,E,I,E,S,C,C,C,E,G,W,E,I,O,E,O,E,I,E,C,C,O,W,C,C,G,K,I,E,C,I,E,E,I,C,E,U,G,W,E,G,O,C,O,A,U,+C,C,O,O,E,E,G,M,W,E,G,E,O,E,CCouBZ,IAAA,EAvuBgB,e,EAoCd,SAAAC,EAAYr7E,CAAAA,CAAWoB,CAAAA,EAAS,IAAAk6E,EAAA,IAAA,CAC9B,G,S,C,C,C,E,G,C,C,a,C,E,M,A,U,oC,EAD8B,IAAA,CAAAD,GAAAG,EAAA,IAAA,CAAA,QAnCxB,CACNn8E,gBAAiB,KACjBC,cAAe,KACfC,WAAY,KACZC,WAAY,EAAA,CACZC,UAAW,KACXC,gBAAAA,CAAiB,EACjBC,oBAAqB,EAAA,CACrBC,aAAc,EAAA,CACdC,aAAc,EAAA,CACdC,eAAgB,KAChBC,SAAU,CACRC,UAAW,KACXC,QAASC,SAASC,aAAAA,CAAc,QAChCC,OAAQF,SAASC,aAAAA,CAAc,OAAA,CAAA,GAElCq7E,EAAA,IAAA,CAAA,UAES,CACRn7E,QAAS,KACTD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,cAAA,CAAA,IAAA,CAAA,QAAA,C,W,C,E,a,C,E,S,C,EAAuB,MAAA,CAAE,GACzB,OAAA,cAAA,CAAA,IAAA,CAAA,IAAA,C,W,C,E,a,C,E,S,C,EAAmB,MAAA,CAAE,GACrB,OAAA,cAAA,CAAA,IAAA,CAAA,IAAA,C,W,C,E,a,C,E,S,C,EAAmB,MAAA,CAAE,GACrB,OAAA,cAAA,CAAA,IAAA,CAAA,QAAA,C,W,C,E,a,C,E,S,C,EAAwB,MAAA,CAAA,CAAM,GAC9B,OAAA,cAAA,CAAA,IAAA,CAAA,QAAA,C,W,C,E,a,C,E,S,C,EAA4B,MAAA,IAAI,EAAc,GAE9C,OAAA,cAAA,CAAA,IAAA,CAAA,SAAA,C,W,C,E,a,C,E,S,C,E,M,K,CAAuB,GAEvB,OAAA,cAAA,CAAA,IAAA,CAAA,kBAAA,C,W,C,E,a,C,E,S,C,E,M,K,CAAgC,GAChC,OAAA,cAAA,CAAA,IAAA,CAAA,uBAAA,C,W,C,E,a,C,E,S,C,E,M,K,CAAqC,GAErC,OAAA,cAAA,CAAA,IAAA,CAAA,eAAA,C,W,C,E,a,C,E,S,C,EAA8B,MAAA,IAAI,EAAS,GAC3C,OAAA,cAAA,CAAA,IAAA,CAAA,UAAA,C,W,C,E,a,C,E,S,C,EAAyB,MAAA,IAAI,EAAS,GAEtC,OAAA,cAAA,CAAA,IAAA,CAAA,WAAA,C,W,C,E,a,C,E,S,C,EAA6B,MAAA,IAAI,EAAS,GAE1C,OAAA,cAAA,CAAA,IAAA,CAAA,YAAA,C,W,C,E,a,C,E,S,C,E,M,K,CAAiC,GACjC,OAAA,cAAA,CAAA,IAAA,CAAA,UAAA,C,W,C,E,a,C,E,S,C,E,M,K,CAA4C,GAE5C,OAAA,cAAA,CAAA,IAAA,CAAA,eAAA,C,W,C,E,a,C,E,S,C,E,M,K,CAA4C,GAC5C,OAAA,cAAA,CAAA,IAAA,CAAA,UAAA,C,W,C,E,a,C,E,S,C,E,M,K,CAAuC,GACvC,OAAA,cAAA,CAAA,IAAA,CAAA,WAAA,C,W,C,E,a,C,E,S,C,E,M,K,CAAoC,GAInC,IAAI,CAAC,SAAS,CAAG,CAClB,CAEU,UAAU,CAAe,CAAzB,CACT,MAAO,CACN,SAAW,AAAiB,MAAjB,IAAI,CAAC,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EAAE,CAAE,IAAI,CAAC,EAAE,CAAE,IAAI,CAAC,MAAM,CAE/D,CAGO,UAAU,CAAgB,CAA1B,CA0BP,CACA,CAKD,MAAM,WAAe,GACpB,YAAmB,CAAS,CAAS,CAAS,CAA9C,CAAkD,KAAK,G,O,c,C,I,C,I,C,W,C,E,a,C,E,S,C,EAApC,MAAA,C,G,O,c,C,I,C,I,C,W,C,E,a,C,E,S,C,EAAkB,MAAA,C,EAAsB,CAEpD,KAAK,CAAiC,CAAtC,CACN,EAAQ,MAAM,CAAC,IAAI,CAAC,CAAC,CAAE,IAAI,CAAC,CAAC,CAC9B,CAEO,UAAU,CAAe,CAAzB,CACN,GAAS,EAAQ,CAAE,EAAG,IAAI,CAAC,CAAC,CAAE,EAAG,IAAI,CAAC,CAAC,AAAA,EACxC,CACA,CAKD,MAAM,WAAe,GACpB,YAAmB,CAAS,CAAS,CAAS,CAA9C,CAAkD,KAAK,G,O,c,C,I,C,I,C,W,C,E,a,C,E,S,C,EAApC,MAAA,C,G,O,c,C,I,C,I,C,W,C,E,a,C,E,S,C,EAAkB,MAAA,C,EAAsB,CAEpD,KAAK,CAAiC,CAAtC,CACN,EAAQ,MAAM,CAAC,IAAI,CAAC,CAAC,CAAE,IAAI,CAAC,CAAC,CAC9B,CAEO,UAAU,CAAe,CAAzB,CACN,GAAS,EAAQ,CAAE,EAAG,IAAI,CAAC,CAAC,CAAE,EAAG,IAAI,CAAC,CAAC,AAAA,EACxC,CACA,CAKD,MAAM,WAAkB,GAChB,KAAK,CAAiC,CAAtC,CACN,EAAQ,SAAS,EAClB,CACA,CAKD,MAAM,WAAsB,GAC3B,YACQ,CAAW,CACX,CAAW,CACX,CAAY,CACZ,CAAY,CACZ,CAAW,CACX,CAAW,CANnB,CAOI,KAAK,G,O,c,C,I,C,M,C,W,C,E,a,C,E,S,C,EAND,MAAA,C,G,O,c,C,I,C,M,C,W,C,E,a,C,E,S,C,EACA,MAAA,C,G,O,c,C,I,C,O,C,W,C,E,a,C,E,S,C,EACA,MAAA,C,G,O,c,C,I,C,O,C,W,C,E,a,C,E,S,C,EACA,MAAA,C,G,O,c,C,I,C,M,C,W,C,E,a,C,E,S,C,EACA,MAAA,C,G,O,c,C,I,C,M,C,W,C,E,a,C,E,S,C,EACA,MAAA,C,EACK,CA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CxC,EAAY,sBAAsB,CAAG,EAAI,EACzC,KACD,SACC,EAAY,qBAAqB,CAAG,EACpC,EAAY,sBAAsB,CAAG,CACtC,CAED,OAAO,CACR,CAEA,CAKK,MAAO,GAAb,aAAA,CAEC,OAAA,cAAA,CAAA,IAAA,CAAA,OAAA,C,W,C,E,a,C,E,S,C,E,M,K,CAAqD,GACrD,OAAA,cAAA,CAAA,IAAA,CAAA,cAAA,C,W,C,E,a,C,E,S,C,E,M,K,CAA4B,GAC5B,OAAA,cAAA,CAAA,IAAA,CAAA,YAAA,C,W,C,E,a,C,E,S,C,E,M,K,CAAiE,GACjE,OAAA,cAAA,CAAA,IAAA,CAAA,aAAA,C,W,C,E,a,C,E,S,C,E,M,K,CAA2B,GAC3B,OAAA,cAAA,CAAA,IAAA,CAAA,WAAA,C,W,C,E,a,C,E,S,C,E,M,K,CAAkC,GAClC,OAAA,cAAA,CAAA,IAAA,CAAA,aAAA,C,W,C,E,a,C,E,S,C,E,M,K,CAAoI,GACpI,OAAA,cAAA,CAAA,IAAA,CAAA,YAAA,C,W,C,E,a,C,E,S,C,E,M,K,CAAmD,GACnD,OAAA,cAAA,CAAA,IAAA,CAAA,cAAA,C,W,C,E,a,C,E,S,C,E,M,K,CAA6C,GAC7C,OAAA,cAAA,CAAA,IAAA,CAAA,iBAAA,C,W,C,E,a,C,E,S,C,E,M,K,CAAqD,GACrD,OAAA,cAAA,CAAA,IAAA,CAAA,cAAA,C,W,C,E,a,C,E,S,C,E,M,K,CAAkC,GAClC,OAAA,cAAA,CAAA,IAAA,CAAA,aAAA,C,W,C,E,a,C,E,S,C,E,M,K,CAA2B,GAC3B,OAAA,cAAA,CAAA,IAAA,CAAA,gBAAA,C,W,C,E,a,C,E,S,C,E,M,K,CAA8B,GAC9B,OAAA,cAAA,CAAA,IAAA,CAAA,gBAAA,C,W,C,E,a,C,E,S,C,E,M,K,CAA8B,GAC9B,OAAA,cAAA,CAAA,IAAA,CAAA,gBAAA,C,W,C,E,a,C,E,S,C,E,M,K,CAA8B,GAG9B,OAAA,cAAA,CAAA,IAAA,CAAA,aAAA,C,W,C,E,a,C,E,S,C,EAAuC,MAAA,AAAA,EAAQ,IAAK,GACpD,OAAA,cAAA,CAAA,IAAA,CAAA,gBAAA,C,W,C,E,a,C,E,S,C,EAAgC,MAAA,GAAK,GAMrC,OAAA,cAAA,CAAA,IAAA,CAAA,YAAA,C,W,C,E,a,C,E,S,C,E,M,K,CAAiC,GACjC,OAAA,cAAA,CAAA,IAAA,CAAA,eAAA,C,W,C,E,a,C,E,S,C,E,M,K,CAA6F,GAC7F,OAAA,cAAA,CAAA,IAAA,CAAA,oBAAA,C,W,C,E,a,C,E,S,C,EAA6F,MAAA,MAAO,GACpG,OAAA,cAAA,CAAA,IAAA,CAAA,aAAA,C,W,C,E,a,C,E,S,C,EAA8B,MAAA,CAAA,CAAM,GACpC,OAAA,cAAA,CAAA,IAAA,CAAA,WAAA,C,W,C,E,a,C,E,S,C,EAA2B,MAAA,GAAI,GAC/B,OAAA,cAAA,CAAA,IAAA,CAAA,WAAA,C,W,C,E,a,C,E,S,C,E,M,K,CAAyB,GACzB,OAAA,cAAA,CAAA,IAAA,CAAA,YAAA,C,W,C,E,a,C,E,S,C,E,M,K,CAA0B,GAC1B,OAAA,cAAA,CAAA,IAAA,CAAA,WAAA,C,W,C,E,a,C,E,S,C,E,M,K,CAAyB,GACzB,OAAA,cAAA,CAAA,IAAA,CAAA,mBAAA,C,W,C,E,a,C,E,S,C,EAAoC,MAAA,CAAA,CAAM,EAC3C,CAAC,CAKK,MAAO,WAAyB,GAAtC,aAAA,C,K,I,WACC,OAAA,cAAA,CAAA,IAAA,CAAA,WAAA,C,W,C,E,a,C,E,S,C,EAA+E,MAAA,UAAW,GAC1F,OAAA,cAAA,CAAA,IAAA,CAAA,SAAA,C,W,C,E,a,C,E,S,C,E,M,K,CAAuB,GACvB,OAAA,cAAA,CAAA,IAAA,CAAA,aAAA,C,W,C,E,a,C,E,S,C,E,M,K,CAA2B,GAC3B,OAAA,cAAA,CAAA,IAAA,CAAA,SAAA,C,W,C,E,a,C,E,S,C,EAA0B,MAAA,CAAA,CAAM,GAChC,OAAA,cAAA,CAAA,IAAA,CAAA,cAAA,C,W,C,E,a,C,E,S,C,EAAqD,MAAA,MAAO,GAC5D,OAAA,cAAA,CAAA,IAAA,CAAA,UAAA,C,W,C,E,a,C,E,S,C,EAA0B,MAAA,CAAE,GAE5B,OAAA,cAAA,CAAA,IAAA,CAAA,gBAAA,C,W,C,E,a,C,E,S,C,EAAiC,MAAA,CAAA,CAAM,EAmcxC,CAjcQ,QAAQ,CAAe,CAAvB,CAEA,aA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ErC,OAAA,cAAA,CAAA,IAAA,CAAA,SAAA,C,W,C,E,a,C,E,S,C,EAA4B,MAAA,CAAA,CAAM,GAClC,OAAA,cAAA,CAAA,IAAA,CAAA,qBAAA,C,W,C,E,a,C,E,S,C,EAAwC,MAAA,CAAA,CAAM,GAC9C,OAAA,cAAA,CAAA,IAAA,CAAA,yBAAA,C,W,C,E,a,C,E,S,C,E,M,K,CAA6D,GAC7D,OAAA,cAAA,CAAA,IAAA,CAAA,iBAAA,C,W,C,E,a,C,E,S,C,E,M,K,CAA6C,GAC7C,OAAA,cAAA,CAAA,IAAA,CAAA,WAAA,C,W,C,E,a,C,E,S,C,E,M,K,CAAwC,GACxC,OAAA,cAAA,CAAA,IAAA,CAAA,qBAAA,C,W,C,E,a,C,E,S,C,E,M,K,CAAiD,GACjD,OAAA,cAAA,CAAA,IAAA,CAAA,2BAAA,C,W,C,E,a,C,E,S,C,E,M,K,CAA+D,GAC/D,OAAA,cAAA,CAAA,IAAA,CAAA,sBAAA,C,W,C,E,a,C,E,S,C,E,M,K,CAA0D,GAE1D,OAAA,cAAA,CAAA,IAAA,CAAA,QAAA,C,W,C,E,a,C,E,S,C,E,M,K,CAAyB,GAEzB,OAAA,cAAA,CAAA,IAAA,CAAA,cAAA,C,W,C,E,a,C,E,S,C,E,M,K,CAA+C,GAK/C,OAAA,cAAA,CAAA,IAAA,CAAA,QAAA,C,W,C,E,a,C,E,S,C,E,M,K,CAAsB,GAOtB,OAAA,cAAA,CAAA,IAAA,CAAA,kBAAA,C,W,C,E,a,C,E,S,C,E,M,K,CAAwC,GAQxC,OAAA,cAAA,CAAA,IAAA,CAAA,iBAAA,C,W,C,E,a,C,E,S,C,EAAwC,MAAA,AAAA,GAAe,GAAG,CAAC,IAAI,CAAE,CAAA,EAAI,GAQrE,OAAA,cAAA,CAAA,IAAA,CAAA,mBAAA,C,W,C,E,a,C,E,S,C,EAA0C,MAAA,AAAA,GAAiB,GAAG,CAAC,IAAI,CAAE,CAAA,EAAI,GAQzE,OAAA,cAAA,CAAA,IAAA,CAAA,aAAA,C,W,C,E,a,C,E,S,C,EAAoC,MAAA,AAAA,GAAW,GAAG,CAAC,IAAI,CAAE,CAAA,EAAI,GAE7D,OAAA,cAAA,CAAA,IAAA,CAAA,UAAA,C,W,C,E,a,C,E,S,C,EAA0B,MAAA,CA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","sources":["<anon>","src/app.js","node_modules/typewriter-effect/dist/core.js","node_modules/typewriter-effect/dist/webpack:/Typewriter/webpack/universalModuleDefinition","node_modules/typewriter-effect/dist/webpack:/Typewriter/node_modules/performance-now/lib/performance-now.js","node_modules/typewriter-effect/dist/webpack:/Typewriter/node_modules/raf/index.js","node_modules/typewriter-effect/dist/webpack:/Typewriter/webpack/bootstrap","node_modules/typewriter-effect/dist/webpack:/Typewriter/webpack/runtime/compat get default export","node_modules/typewriter-effect/dist/webpack:/Typewriter/webpack/runtime/define property getters","node_modules/typewriter-effect/dist/webpack:/Typewriter/webpack/runtime/global","node_modules/typewriter-effect/dist/webpack:/Typewriter/webpack/runtime/hasOwnProperty shorthand","node_modules/typewriter-effect/dist/webpack:/Typewriter/src/utils/does-string-contain-html-tag.js","node_modules/typewriter-effect/dist/webpack:/Typewriter/src/utils/get-random-integer.js","node_modules/typewriter-effect/dist/webpack:/Typewriter/src/core/constants.js","node_modules/typewriter-effect/dist/webpack:/Typewriter/src/core/Typewriter.js","node_modules/typewriter-effect/dist/webpack:/Typewriter/src/utils/get-dom-element-from-string.js","node_modules/typewriter-effect/dist/webpack:/Typewriter/src/utils/add-styles.js","node_modules/process/browser.js","node_modules/@amcharts/amcharts5/.internal/core/render/Container.js","node_modules/src/.internal/core/render/Container.ts","node_modules/@amcharts/amcharts5/.internal/core/util/Children.js","node_modules/src/.internal/core/util/Children.ts","node_modules/@amcharts/amcharts5/.internal/core/util/List.js","node_modules/src/.internal/core/util/List.ts","node_modules/@amcharts/amcharts5/.internal/core/util/EventDispatcher.js","node_modules/src/.internal/core/util/EventDispatcher.ts","node_modules/@amcharts/amcharts5/.internal/core/util/Disposer.js","node_modules/src/.internal/core/util/Disposer.ts","node_modules/@amcharts/amcharts5/.internal/core/util/Array.js","node_modules/src/.internal/core/util/Array.ts","node_modules/@amcharts/amcharts5/.internal/core/util/Type.js","node_modules/src/.internal/core/util/Type.ts","node_modules/@amcharts/amcharts5/.internal/core/util/Percent.js","node_modules/src/.internal/core/util/Percent.ts","node_modules/@amcharts/amcharts5/.internal/core/render/Sprite.js","node_modules/src/.internal/core/render/Sprite.ts","node_modules/tslib/tslib.es6.js","node_modules/@amcharts/amcharts5/.internal/core/util/Entity.js","node_modules/src/.internal/core/util/Entity.ts","node_modules/@amcharts/amcharts5/.internal/core/util/Animation.js","node_modules/src/.internal/core/util/Animation.ts","node_modules/@amcharts/amcharts5/.internal/core/util/Color.js","node_modules/src/.internal/core/util/Color.ts","node_modules/@amcharts/amcharts5/.internal/core/util/Utils.js","node_modules/src/.internal/core/util/Utils.ts","node_modules/@amcharts/amcharts5/.internal/core/util/Object.js","node_modules/src/.internal/core/util/Object.ts","node_modules/@amcharts/amcharts5/.internal/core/util/States.js","node_modules/src/.internal/core/util/States.ts","node_modules/@amcharts/amcharts5/.internal/core/util/Ease.js","node_modules/src/.internal/core/util/Ease.ts","node_modules/@amcharts/amcharts5/.internal/core/util/Math.js","node_modules/src/.internal/core/util/Math.ts","node_modules/@amcharts/amcharts5/.internal/core/Registry.js","node_modules/src/.internal/core/Registry.ts","node_modules/@amcharts/amcharts5/.internal/core/util/Order.js","node_modules/src/.internal/core/util/Order.ts","node_modules/@amcharts/amcharts5/.internal/core/util/Template.js","node_modules/src/.internal/core/util/Template.ts","node_modules/@amcharts/amcharts5/.internal/core/render/Rectangle.js","node_modules/src/.internal/core/render/Rectangle.ts","node_modules/@amcharts/amcharts5/.internal/core/render/Graphics.js","node_modules/src/.internal/core/render/Graphics.ts","node_modules/@amcharts/amcharts5/.internal/core/render/patterns/PicturePattern.js","node_modules/src/.internal/core/render/patterns/PicturePattern.ts","node_modules/@amcharts/amcharts5/.internal/core/render/patterns/Pattern.js","node_modules/src/.internal/core/render/patterns/Pattern.ts","node_modules/@amcharts/amcharts5/.internal/core/render/backend/Renderer.js","node_modules/src/.internal/core/render/backend/Renderer.ts","node_modules/@amcharts/amcharts5/.internal/core/render/HorizontalLayout.js","node_modules/src/.internal/core/render/HorizontalLayout.ts","node_modules/@amcharts/amcharts5/.internal/core/render/Layout.js","node_modules/src/.internal/core/render/Layout.ts","node_modules/@amcharts/amcharts5/.internal/core/render/VerticalLayout.js","node_modules/src/.internal/core/render/VerticalLayout.ts","node_modules/@amcharts/amcharts5/.internal/core/render/GridLayout.js","node_modules/src/.internal/core/render/GridLayout.ts","node_modules/@amcharts/amcharts5/.internal/core/util/PopulateString.js","node_modules/src/.internal/core/util/PopulateString.ts","node_modules/@amcharts/amcharts5/.internal/core/util/TextFormatter.js","node_modules/src/.internal/core/util/TextFormatter.ts","node_modules/@amcharts/amcharts5/.internal/core/Root.js","node_modules/src/.internal/core/Root.ts","node_modules/@amcharts/amcharts5/.internal/core/render/Text.js","node_modules/src/.internal/core/render/Text.ts","node_modules/@amcharts/amcharts5/.internal/core/util/ResizeSensor.js","node_modules/src/.internal/core/util/ResizeSensor.ts","node_modules/@amcharts/amcharts5/.internal/core/util/InterfaceColors.js","node_modules/src/.internal/core/util/InterfaceColors.ts","node_modules/@amcharts/amcharts5/.internal/core/render/Tooltip.js","node_modules/src/.internal/core/render/Tooltip.ts","node_modules/@amcharts/amcharts5/.internal/core/render/Label.js","node_modules/src/.internal/core/render/Label.ts","node_modules/@amcharts/amcharts5/.internal/core/render/PointedRectangle.js","node_modules/src/.internal/core/render/PointedRectangle.ts","node_modules/@amcharts/amcharts5/.internal/core/util/NumberFormatter.js","node_modules/src/.internal/core/util/NumberFormatter.ts","node_modules/@amcharts/amcharts5/.internal/core/util/DateFormatter.js","node_modules/src/.internal/core/util/DateFormatter.ts","node_modules/@amcharts/amcharts5/.internal/core/util/Timezone.js","node_modules/src/.internal/core/util/Timezone.ts","node_modules/@amcharts/amcharts5/.internal/core/util/DurationFormatter.js","node_modules/src/.internal/core/util/DurationFormatter.ts","node_modules/@amcharts/amcharts5/.internal/core/util/Language.js","node_modules/src/.internal/core/util/Language.ts","node_modules/@amcharts/amcharts5/locales/en.js","node_modules/src/locales/en.ts","node_modules/@amcharts/amcharts5/.internal/themes/DefaultTheme.js","node_modules/src/.internal/themes/DefaultTheme.ts","node_modules/@amcharts/amcharts5/.internal/core/Theme.js","node_modules/src/.internal/core/Theme.ts","node_modules/@amcharts/amcharts5/.internal/core/render/backend/CanvasRenderer.js","node_modules/src/.internal/core/render/backend/CanvasRenderer.ts","node_modules/@amcharts/amcharts5/.internal/core/util/Matrix.js","node_modules/src/.internal/core/util/Matrix.ts","node_modules/svg-arc-to-cubic-bezier/modules/index.js","node_modules/@amcharts/amcharts5/.internal/core/render/ZoomableContainer.js","node_modules/src/.internal/core/render/ZoomableContainer.ts","node_modules/@amcharts/amcharts5/.internal/core/render/ZoomTools.js","node_modules/src/.internal/core/render/ZoomTools.ts","node_modules/@amcharts/amcharts5/.internal/core/render/Button.js","node_modules/src/.internal/core/render/Button.ts","node_modules/@amcharts/amcharts5/.internal/core/render/RoundedRectangle.js","node_modules/src/.internal/core/render/RoundedRectangle.ts","node_modules/@amcharts/amcharts5/.internal/charts/hierarchy/ForceDirected.js","node_modules/src/.internal/charts/hierarchy/ForceDirected.ts","node_modules/@amcharts/amcharts5/.internal/charts/hierarchy/LinkedHierarchy.js","node_modules/src/.internal/charts/hierarchy/LinkedHierarchy.ts","node_modules/@amcharts/amcharts5/.internal/charts/hierarchy/Hierarchy.js","node_modules/src/.internal/charts/hierarchy/Hierarchy.ts","node_modules/@amcharts/amcharts5/.internal/charts/hierarchy/HierarchyDefaultTheme.js","node_modules/src/.internal/charts/hierarchy/HierarchyDefaultTheme.ts","node_modules/@amcharts/amcharts5/.internal/core/util/ColorSet.js","node_modules/src/.internal/core/util/ColorSet.ts","node_modules/@amcharts/amcharts5/.internal/core/render/Series.js","node_modules/src/.internal/core/render/Series.ts","node_modules/@amcharts/amcharts5/.internal/core/render/Component.js","node_modules/src/.internal/core/render/Component.ts","node_modules/@amcharts/amcharts5/.internal/core/util/Data.js","node_modules/src/.internal/core/util/Data.ts","node_modules/@amcharts/amcharts5/.internal/core/util/Time.js","node_modules/src/.internal/core/util/Time.ts","node_modules/@amcharts/amcharts5/.internal/charts/hierarchy/HierarchyNode.js","node_modules/src/.internal/charts/hierarchy/HierarchyNode.ts","node_modules/d3-hierarchy/src/hierarchy/index.js","node_modules/d3-hierarchy/src/hierarchy/count.js","node_modules/d3-hierarchy/src/hierarchy/each.js","node_modules/d3-hierarchy/src/hierarchy/eachBefore.js","node_modules/d3-hierarchy/src/hierarchy/eachAfter.js","node_modules/d3-hierarchy/src/hierarchy/find.js","node_modules/d3-hierarchy/src/hierarchy/sum.js","node_modules/d3-hierarchy/src/hierarchy/sort.js","node_modules/d3-hierarchy/src/hierarchy/path.js","node_modules/d3-hierarchy/src/hierarchy/ancestors.js","node_modules/d3-hierarchy/src/hierarchy/descendants.js","node_modules/d3-hierarchy/src/hierarchy/leaves.js","node_modules/d3-hierarchy/src/hierarchy/links.js","node_modules/d3-hierarchy/src/hierarchy/iterator.js","node_modules/@amcharts/amcharts5/.internal/charts/hierarchy/LinkedHierarchyNode.js","node_modules/src/.internal/charts/hierarchy/LinkedHierarchyNode.ts","node_modules/@amcharts/amcharts5/.internal/charts/hierarchy/HierarchyLink.js","node_modules/src/.internal/charts/hierarchy/HierarchyLink.ts","node_modules/@amcharts/amcharts5/.internal/core/render/Circle.js","node_modules/src/.internal/core/render/Circle.ts","node_modules/d3-force/src/collide.js","node_modules/d3-quadtree/src/quadtree.js","node_modules/d3-quadtree/src/add.js","node_modules/d3-quadtree/src/cover.js","node_modules/d3-quadtree/src/data.js","node_modules/d3-quadtree/src/extent.js","node_modules/d3-quadtree/src/find.js","node_modules/d3-quadtree/src/quad.js","node_modules/d3-quadtree/src/remove.js","node_modules/d3-quadtree/src/root.js","node_modules/d3-quadtree/src/size.js","node_modules/d3-quadtree/src/visit.js","node_modules/d3-quadtree/src/visitAfter.js","node_modules/d3-quadtree/src/x.js","node_modules/d3-quadtree/src/y.js","node_modules/d3-force/src/constant.js","node_modules/d3-force/src/jiggle.js","node_modules/d3-force/src/link.js","node_modules/d3-force/src/manyBody.js","node_modules/d3-force/src/simulation.js","node_modules/d3-dispatch/src/dispatch.js","node_modules/d3-timer/src/timer.js","node_modules/d3-force/src/lcg.js","node_modules/d3-force/src/x.js","node_modules/d3-force/src/y.js","node_modules/@amcharts/amcharts5/themes/Animated.js","node_modules/src/themes/Animated.ts","node_modules/@amcharts/amcharts5/.internal/themes/AnimatedTheme.js","node_modules/src/.internal/themes/AnimatedTheme.ts"],"sourcesContent":["\nfunction $parcel$interopDefault(a) {\n  return a && a.__esModule ? a.default : a;\n}\nvar $634f9492ccea7012$exports = {};\nvar $cfae44f0dfdf62c0$exports = {};\n// shim for using process in browser\nvar $cfae44f0dfdf62c0$var$process = $cfae44f0dfdf62c0$exports = {};\n// cached from whatever global is present so that test runners that stub it\n// don't break things.  But we need to wrap it in a try catch in case it is\n// wrapped in strict mode code which doesn't define any globals.  It's inside a\n// function because try/catches deoptimize in certain engines.\nvar $cfae44f0dfdf62c0$var$cachedSetTimeout;\nvar $cfae44f0dfdf62c0$var$cachedClearTimeout;\nfunction $cfae44f0dfdf62c0$var$defaultSetTimout() {\n    throw new Error('setTimeout has not been defined');\n}\nfunction $cfae44f0dfdf62c0$var$defaultClearTimeout() {\n    throw new Error('clearTimeout has not been defined');\n}\n(function() {\n    try {\n        if (typeof setTimeout === 'function') $cfae44f0dfdf62c0$var$cachedSetTimeout = setTimeout;\n        else $cfae44f0dfdf62c0$var$cachedSetTimeout = $cfae44f0dfdf62c0$var$defaultSetTimout;\n    } catch (e) {\n        $cfae44f0dfdf62c0$var$cachedSetTimeout = $cfae44f0dfdf62c0$var$defaultSetTimout;\n    }\n    try {\n        if (typeof clearTimeout === 'function') $cfae44f0dfdf62c0$var$cachedClearTimeout = clearTimeout;\n        else $cfae44f0dfdf62c0$var$cachedClearTimeout = $cfae44f0dfdf62c0$var$defaultClearTimeout;\n    } catch (e) {\n        $cfae44f0dfdf62c0$var$cachedClearTimeout = $cfae44f0dfdf62c0$var$defaultClearTimeout;\n    }\n})();\nfunction $cfae44f0dfdf62c0$var$runTimeout(fun) {\n    if ($cfae44f0dfdf62c0$var$cachedSetTimeout === setTimeout) //normal enviroments in sane situations\n    return setTimeout(fun, 0);\n    // if setTimeout wasn't available but was latter defined\n    if (($cfae44f0dfdf62c0$var$cachedSetTimeout === $cfae44f0dfdf62c0$var$defaultSetTimout || !$cfae44f0dfdf62c0$var$cachedSetTimeout) && setTimeout) {\n        $cfae44f0dfdf62c0$var$cachedSetTimeout = setTimeout;\n        return setTimeout(fun, 0);\n    }\n    try {\n        // when when somebody has screwed with setTimeout but no I.E. maddness\n        return $cfae44f0dfdf62c0$var$cachedSetTimeout(fun, 0);\n    } catch (e) {\n        try {\n            // When we are in I.E. but the script has been evaled so I.E. doesn't trust the global object when called normally\n            return $cfae44f0dfdf62c0$var$cachedSetTimeout.call(null, fun, 0);\n        } catch (e) {\n            // same as above but when it's a version of I.E. that must have the global object for 'this', hopfully our context correct otherwise it will throw a global error\n            return $cfae44f0dfdf62c0$var$cachedSetTimeout.call(this, fun, 0);\n        }\n    }\n}\nfunction $cfae44f0dfdf62c0$var$runClearTimeout(marker) {\n    if ($cfae44f0dfdf62c0$var$cachedClearTimeout === clearTimeout) //normal enviroments in sane situations\n    return clearTimeout(marker);\n    // if clearTimeout wasn't available but was latter defined\n    if (($cfae44f0dfdf62c0$var$cachedClearTimeout === $cfae44f0dfdf62c0$var$defaultClearTimeout || !$cfae44f0dfdf62c0$var$cachedClearTimeout) && clearTimeout) {\n        $cfae44f0dfdf62c0$var$cachedClearTimeout = clearTimeout;\n        return clearTimeout(marker);\n    }\n    try {\n        // when when somebody has screwed with setTimeout but no I.E. maddness\n        return $cfae44f0dfdf62c0$var$cachedClearTimeout(marker);\n    } catch (e) {\n        try {\n            // When we are in I.E. but the script has been evaled so I.E. doesn't  trust the global object when called normally\n            return $cfae44f0dfdf62c0$var$cachedClearTimeout.call(null, marker);\n        } catch (e) {\n            // same as above but when it's a version of I.E. that must have the global object for 'this', hopfully our context correct otherwise it will throw a global error.\n            // Some versions of I.E. have different rules for clearTimeout vs setTimeout\n            return $cfae44f0dfdf62c0$var$cachedClearTimeout.call(this, marker);\n        }\n    }\n}\nvar $cfae44f0dfdf62c0$var$queue = [];\nvar $cfae44f0dfdf62c0$var$draining = false;\nvar $cfae44f0dfdf62c0$var$currentQueue;\nvar $cfae44f0dfdf62c0$var$queueIndex = -1;\nfunction $cfae44f0dfdf62c0$var$cleanUpNextTick() {\n    if (!$cfae44f0dfdf62c0$var$draining || !$cfae44f0dfdf62c0$var$currentQueue) return;\n    $cfae44f0dfdf62c0$var$draining = false;\n    if ($cfae44f0dfdf62c0$var$currentQueue.length) $cfae44f0dfdf62c0$var$queue = $cfae44f0dfdf62c0$var$currentQueue.concat($cfae44f0dfdf62c0$var$queue);\n    else $cfae44f0dfdf62c0$var$queueIndex = -1;\n    if ($cfae44f0dfdf62c0$var$queue.length) $cfae44f0dfdf62c0$var$drainQueue();\n}\nfunction $cfae44f0dfdf62c0$var$drainQueue() {\n    if ($cfae44f0dfdf62c0$var$draining) return;\n    var timeout = $cfae44f0dfdf62c0$var$runTimeout($cfae44f0dfdf62c0$var$cleanUpNextTick);\n    $cfae44f0dfdf62c0$var$draining = true;\n    var len = $cfae44f0dfdf62c0$var$queue.length;\n    while(len){\n        $cfae44f0dfdf62c0$var$currentQueue = $cfae44f0dfdf62c0$var$queue;\n        $cfae44f0dfdf62c0$var$queue = [];\n        while(++$cfae44f0dfdf62c0$var$queueIndex < len)if ($cfae44f0dfdf62c0$var$currentQueue) $cfae44f0dfdf62c0$var$currentQueue[$cfae44f0dfdf62c0$var$queueIndex].run();\n        $cfae44f0dfdf62c0$var$queueIndex = -1;\n        len = $cfae44f0dfdf62c0$var$queue.length;\n    }\n    $cfae44f0dfdf62c0$var$currentQueue = null;\n    $cfae44f0dfdf62c0$var$draining = false;\n    $cfae44f0dfdf62c0$var$runClearTimeout(timeout);\n}\n$cfae44f0dfdf62c0$var$process.nextTick = function(fun) {\n    var args = new Array(arguments.length - 1);\n    if (arguments.length > 1) for(var i = 1; i < arguments.length; i++)args[i - 1] = arguments[i];\n    $cfae44f0dfdf62c0$var$queue.push(new $cfae44f0dfdf62c0$var$Item(fun, args));\n    if ($cfae44f0dfdf62c0$var$queue.length === 1 && !$cfae44f0dfdf62c0$var$draining) $cfae44f0dfdf62c0$var$runTimeout($cfae44f0dfdf62c0$var$drainQueue);\n};\n// v8 likes predictible objects\nfunction $cfae44f0dfdf62c0$var$Item(fun, array) {\n    this.fun = fun;\n    this.array = array;\n}\n$cfae44f0dfdf62c0$var$Item.prototype.run = function() {\n    this.fun.apply(null, this.array);\n};\n$cfae44f0dfdf62c0$var$process.title = 'browser';\n$cfae44f0dfdf62c0$var$process.browser = true;\n$cfae44f0dfdf62c0$var$process.env = {};\n$cfae44f0dfdf62c0$var$process.argv = [];\n$cfae44f0dfdf62c0$var$process.version = ''; // empty string to avoid regexp issues\n$cfae44f0dfdf62c0$var$process.versions = {};\nfunction $cfae44f0dfdf62c0$var$noop() {}\n$cfae44f0dfdf62c0$var$process.on = $cfae44f0dfdf62c0$var$noop;\n$cfae44f0dfdf62c0$var$process.addListener = $cfae44f0dfdf62c0$var$noop;\n$cfae44f0dfdf62c0$var$process.once = $cfae44f0dfdf62c0$var$noop;\n$cfae44f0dfdf62c0$var$process.off = $cfae44f0dfdf62c0$var$noop;\n$cfae44f0dfdf62c0$var$process.removeListener = $cfae44f0dfdf62c0$var$noop;\n$cfae44f0dfdf62c0$var$process.removeAllListeners = $cfae44f0dfdf62c0$var$noop;\n$cfae44f0dfdf62c0$var$process.emit = $cfae44f0dfdf62c0$var$noop;\n$cfae44f0dfdf62c0$var$process.prependListener = $cfae44f0dfdf62c0$var$noop;\n$cfae44f0dfdf62c0$var$process.prependOnceListener = $cfae44f0dfdf62c0$var$noop;\n$cfae44f0dfdf62c0$var$process.listeners = function(name) {\n    return [];\n};\n$cfae44f0dfdf62c0$var$process.binding = function(name) {\n    throw new Error('process.binding is not supported');\n};\n$cfae44f0dfdf62c0$var$process.cwd = function() {\n    return '/';\n};\n$cfae44f0dfdf62c0$var$process.chdir = function(dir) {\n    throw new Error('process.chdir is not supported');\n};\n$cfae44f0dfdf62c0$var$process.umask = function() {\n    return 0;\n};\n\n\n!function(e, t) {\n    $634f9492ccea7012$exports = t();\n}(\"undefined\" != typeof self ? self : $634f9492ccea7012$exports, ()=>(()=>{\n        var e = {\n            75: function(e) {\n                (function() {\n                    var t, n, r, o, a, i;\n                    \"undefined\" != typeof performance && null !== performance && performance.now ? e.exports = function() {\n                        return performance.now();\n                    } : \"undefined\" != typeof $cfae44f0dfdf62c0$exports && null !== $cfae44f0dfdf62c0$exports && $cfae44f0dfdf62c0$exports.hrtime ? (e.exports = function() {\n                        return (t() - a) / 1e6;\n                    }, n = $cfae44f0dfdf62c0$exports.hrtime, o = (t = function() {\n                        var e;\n                        return 1e9 * (e = n())[0] + e[1];\n                    })(), i = 1e9 * $cfae44f0dfdf62c0$exports.uptime(), a = o - i) : Date.now ? (e.exports = function() {\n                        return Date.now() - r;\n                    }, r = Date.now()) : (e.exports = function() {\n                        return (new Date).getTime() - r;\n                    }, r = (new Date).getTime());\n                }).call(this);\n            },\n            4087: (e, t, n)=>{\n                for(var r = n(75), o = \"undefined\" == typeof window ? n.g : window, a = [\n                    \"moz\",\n                    \"webkit\"\n                ], i = \"AnimationFrame\", s = o[\"request\" + i], u = o[\"cancel\" + i] || o[\"cancelRequest\" + i], l = 0; !s && l < a.length; l++)s = o[a[l] + \"Request\" + i], u = o[a[l] + \"Cancel\" + i] || o[a[l] + \"CancelRequest\" + i];\n                if (!s || !u) {\n                    var c = 0, p = 0, d = [];\n                    s = function(e) {\n                        if (0 === d.length) {\n                            var t = r(), n = Math.max(0, 16.666666666666668 - (t - c));\n                            c = n + t, setTimeout(function() {\n                                var e = d.slice(0);\n                                d.length = 0;\n                                for(var t = 0; t < e.length; t++)if (!e[t].cancelled) try {\n                                    e[t].callback(c);\n                                } catch (e) {\n                                    setTimeout(function() {\n                                        throw e;\n                                    }, 0);\n                                }\n                            }, Math.round(n));\n                        }\n                        return d.push({\n                            handle: ++p,\n                            callback: e,\n                            cancelled: !1\n                        }), p;\n                    }, u = function(e) {\n                        for(var t = 0; t < d.length; t++)d[t].handle === e && (d[t].cancelled = !0);\n                    };\n                }\n                e.exports = function(e) {\n                    return s.call(o, e);\n                }, e.exports.cancel = function() {\n                    u.apply(o, arguments);\n                }, e.exports.polyfill = function(e) {\n                    e || (e = o), e.requestAnimationFrame = s, e.cancelAnimationFrame = u;\n                };\n            }\n        }, t = {};\n        function n(r) {\n            var o = t[r];\n            if (void 0 !== o) return o.exports;\n            var a = t[r] = {\n                exports: {}\n            };\n            return e[r].call(a.exports, a, a.exports, n), a.exports;\n        }\n        n.n = (e)=>{\n            var t = e && e.__esModule ? ()=>e.default : ()=>e;\n            return n.d(t, {\n                a: t\n            }), t;\n        }, n.d = (e, t)=>{\n            for(var r in t)n.o(t, r) && !n.o(e, r) && Object.defineProperty(e, r, {\n                enumerable: !0,\n                get: t[r]\n            });\n        }, n.g = function() {\n            if (\"object\" == typeof globalThis) return globalThis;\n            try {\n                return this || new Function(\"return this\")();\n            } catch (e) {\n                if (\"object\" == typeof window) return window;\n            }\n        }(), n.o = (e, t)=>Object.prototype.hasOwnProperty.call(e, t);\n        var r = {};\n        return (()=>{\n            \"use strict\";\n            n.d(r, {\n                default: ()=>C\n            });\n            var e = n(4087), t = n.n(e);\n            const o = function(e) {\n                return new RegExp(/<[a-z][\\s\\S]*>/i).test(e);\n            }, a = function(e, t) {\n                return Math.floor(Math.random() * (t - e + 1)) + e;\n            };\n            var i = \"TYPE_CHARACTER\", s = \"REMOVE_CHARACTER\", u = \"REMOVE_ALL\", l = \"REMOVE_LAST_VISIBLE_NODE\", c = \"PAUSE_FOR\", p = \"CALL_FUNCTION\", d = \"ADD_HTML_TAG_ELEMENT\", f = \"CHANGE_DELETE_SPEED\", v = \"CHANGE_DELAY\", h = \"CHANGE_CURSOR\", m = \"PASTE_STRING\", y = \"HTML_TAG\";\n            function g(e) {\n                return g = \"function\" == typeof Symbol && \"symbol\" == typeof Symbol.iterator ? function(e) {\n                    return typeof e;\n                } : function(e) {\n                    return e && \"function\" == typeof Symbol && e.constructor === Symbol && e !== Symbol.prototype ? \"symbol\" : typeof e;\n                }, g(e);\n            }\n            function E(e, t) {\n                var n = Object.keys(e);\n                if (Object.getOwnPropertySymbols) {\n                    var r = Object.getOwnPropertySymbols(e);\n                    t && (r = r.filter(function(t) {\n                        return Object.getOwnPropertyDescriptor(e, t).enumerable;\n                    })), n.push.apply(n, r);\n                }\n                return n;\n            }\n            function w(e) {\n                for(var t = 1; t < arguments.length; t++){\n                    var n = null != arguments[t] ? arguments[t] : {};\n                    t % 2 ? E(Object(n), !0).forEach(function(t) {\n                        A(e, t, n[t]);\n                    }) : Object.getOwnPropertyDescriptors ? Object.defineProperties(e, Object.getOwnPropertyDescriptors(n)) : E(Object(n)).forEach(function(t) {\n                        Object.defineProperty(e, t, Object.getOwnPropertyDescriptor(n, t));\n                    });\n                }\n                return e;\n            }\n            function b(e) {\n                return function(e) {\n                    if (Array.isArray(e)) return T(e);\n                }(e) || function(e) {\n                    if (\"undefined\" != typeof Symbol && null != e[Symbol.iterator] || null != e[\"@@iterator\"]) return Array.from(e);\n                }(e) || function(e, t) {\n                    if (e) {\n                        if (\"string\" == typeof e) return T(e, t);\n                        var n = Object.prototype.toString.call(e).slice(8, -1);\n                        return \"Object\" === n && e.constructor && (n = e.constructor.name), \"Map\" === n || \"Set\" === n ? Array.from(e) : \"Arguments\" === n || /^(?:Ui|I)nt(?:8|16|32)(?:Clamped)?Array$/.test(n) ? T(e, t) : void 0;\n                    }\n                }(e) || function() {\n                    throw new TypeError(\"Invalid attempt to spread non-iterable instance.\\nIn order to be iterable, non-array objects must have a [Symbol.iterator]() method.\");\n                }();\n            }\n            function T(e, t) {\n                (null == t || t > e.length) && (t = e.length);\n                for(var n = 0, r = new Array(t); n < t; n++)r[n] = e[n];\n                return r;\n            }\n            function S(e, t) {\n                for(var n = 0; n < t.length; n++){\n                    var r = t[n];\n                    r.enumerable = r.enumerable || !1, r.configurable = !0, \"value\" in r && (r.writable = !0), Object.defineProperty(e, N(r.key), r);\n                }\n            }\n            function A(e, t, n) {\n                return (t = N(t)) in e ? Object.defineProperty(e, t, {\n                    value: n,\n                    enumerable: !0,\n                    configurable: !0,\n                    writable: !0\n                }) : e[t] = n, e;\n            }\n            function N(e) {\n                var t = function(e, t) {\n                    if (\"object\" !== g(e) || null === e) return e;\n                    var n = e[Symbol.toPrimitive];\n                    if (void 0 !== n) {\n                        var r = n.call(e, \"string\");\n                        if (\"object\" !== g(r)) return r;\n                        throw new TypeError(\"@@toPrimitive must return a primitive value.\");\n                    }\n                    return String(e);\n                }(e);\n                return \"symbol\" === g(t) ? t : String(t);\n            }\n            const C = function() {\n                function n(r, g) {\n                    var E = this;\n                    if (function(e, t) {\n                        if (!(e instanceof t)) throw new TypeError(\"Cannot call a class as a function\");\n                    }(this, n), A(this, \"state\", {\n                        cursorAnimation: null,\n                        lastFrameTime: null,\n                        pauseUntil: null,\n                        eventQueue: [],\n                        eventLoop: null,\n                        eventLoopPaused: !1,\n                        reverseCalledEvents: [],\n                        calledEvents: [],\n                        visibleNodes: [],\n                        initialOptions: null,\n                        elements: {\n                            container: null,\n                            wrapper: document.createElement(\"span\"),\n                            cursor: document.createElement(\"span\")\n                        }\n                    }), A(this, \"options\", {\n                        strings: null,\n                        cursor: \"|\",\n                        delay: \"natural\",\n                        pauseFor: 1500,\n                        deleteSpeed: \"natural\",\n                        loop: !1,\n                        autoStart: !1,\n                        devMode: !1,\n                        skipAddStyles: !1,\n                        wrapperClassName: \"Typewriter__wrapper\",\n                        cursorClassName: \"Typewriter__cursor\",\n                        stringSplitter: null,\n                        onCreateTextNode: null,\n                        onRemoveNode: null\n                    }), A(this, \"setupWrapperElement\", function() {\n                        E.state.elements.container && (E.state.elements.wrapper.className = E.options.wrapperClassName, E.state.elements.cursor.className = E.options.cursorClassName, E.state.elements.cursor.innerHTML = E.options.cursor, E.state.elements.container.innerHTML = \"\", E.state.elements.container.appendChild(E.state.elements.wrapper), E.state.elements.container.appendChild(E.state.elements.cursor));\n                    }), A(this, \"start\", function() {\n                        return E.state.eventLoopPaused = !1, E.runEventLoop(), E;\n                    }), A(this, \"pause\", function() {\n                        return E.state.eventLoopPaused = !0, E;\n                    }), A(this, \"stop\", function() {\n                        return E.state.eventLoop && ((0, e.cancel)(E.state.eventLoop), E.state.eventLoop = null), E;\n                    }), A(this, \"pauseFor\", function(e) {\n                        return E.addEventToQueue(c, {\n                            ms: e\n                        }), E;\n                    }), A(this, \"typeOutAllStrings\", function() {\n                        return \"string\" == typeof E.options.strings ? (E.typeString(E.options.strings).pauseFor(E.options.pauseFor), E) : (E.options.strings.forEach(function(e) {\n                            E.typeString(e).pauseFor(E.options.pauseFor).deleteAll(E.options.deleteSpeed);\n                        }), E);\n                    }), A(this, \"typeString\", function(e) {\n                        var t = arguments.length > 1 && void 0 !== arguments[1] ? arguments[1] : null;\n                        if (o(e)) return E.typeOutHTMLString(e, t);\n                        if (e) {\n                            var n = (E.options || {}).stringSplitter, r = \"function\" == typeof n ? n(e) : e.split(\"\");\n                            E.typeCharacters(r, t);\n                        }\n                        return E;\n                    }), A(this, \"pasteString\", function(e) {\n                        var t = arguments.length > 1 && void 0 !== arguments[1] ? arguments[1] : null;\n                        return o(e) ? E.typeOutHTMLString(e, t, !0) : (e && E.addEventToQueue(m, {\n                            character: e,\n                            node: t\n                        }), E);\n                    }), A(this, \"typeOutHTMLString\", function(e) {\n                        var t = arguments.length > 1 && void 0 !== arguments[1] ? arguments[1] : null, n = arguments.length > 2 ? arguments[2] : void 0, r = function(e) {\n                            var t = document.createElement(\"div\");\n                            return t.innerHTML = e, t.childNodes;\n                        }(e);\n                        if (r.length > 0) for(var o = 0; o < r.length; o++){\n                            var a = r[o], i = a.innerHTML;\n                            a && 3 !== a.nodeType ? (a.innerHTML = \"\", E.addEventToQueue(d, {\n                                node: a,\n                                parentNode: t\n                            }), n ? E.pasteString(i, a) : E.typeString(i, a)) : a.textContent && (n ? E.pasteString(a.textContent, t) : E.typeString(a.textContent, t));\n                        }\n                        return E;\n                    }), A(this, \"deleteAll\", function() {\n                        var e = arguments.length > 0 && void 0 !== arguments[0] ? arguments[0] : \"natural\";\n                        return E.addEventToQueue(u, {\n                            speed: e\n                        }), E;\n                    }), A(this, \"changeDeleteSpeed\", function(e) {\n                        if (!e) throw new Error(\"Must provide new delete speed\");\n                        return E.addEventToQueue(f, {\n                            speed: e\n                        }), E;\n                    }), A(this, \"changeDelay\", function(e) {\n                        if (!e) throw new Error(\"Must provide new delay\");\n                        return E.addEventToQueue(v, {\n                            delay: e\n                        }), E;\n                    }), A(this, \"changeCursor\", function(e) {\n                        if (!e) throw new Error(\"Must provide new cursor\");\n                        return E.addEventToQueue(h, {\n                            cursor: e\n                        }), E;\n                    }), A(this, \"deleteChars\", function(e) {\n                        if (!e) throw new Error(\"Must provide amount of characters to delete\");\n                        for(var t = 0; t < e; t++)E.addEventToQueue(s);\n                        return E;\n                    }), A(this, \"callFunction\", function(e, t) {\n                        if (!e || \"function\" != typeof e) throw new Error(\"Callback must be a function\");\n                        return E.addEventToQueue(p, {\n                            cb: e,\n                            thisArg: t\n                        }), E;\n                    }), A(this, \"typeCharacters\", function(e) {\n                        var t = arguments.length > 1 && void 0 !== arguments[1] ? arguments[1] : null;\n                        if (!e || !Array.isArray(e)) throw new Error(\"Characters must be an array\");\n                        return e.forEach(function(e) {\n                            E.addEventToQueue(i, {\n                                character: e,\n                                node: t\n                            });\n                        }), E;\n                    }), A(this, \"removeCharacters\", function(e) {\n                        if (!e || !Array.isArray(e)) throw new Error(\"Characters must be an array\");\n                        return e.forEach(function() {\n                            E.addEventToQueue(s);\n                        }), E;\n                    }), A(this, \"addEventToQueue\", function(e, t) {\n                        var n = arguments.length > 2 && void 0 !== arguments[2] && arguments[2];\n                        return E.addEventToStateProperty(e, t, n, \"eventQueue\");\n                    }), A(this, \"addReverseCalledEvent\", function(e, t) {\n                        var n = arguments.length > 2 && void 0 !== arguments[2] && arguments[2];\n                        return E.options.loop ? E.addEventToStateProperty(e, t, n, \"reverseCalledEvents\") : E;\n                    }), A(this, \"addEventToStateProperty\", function(e, t) {\n                        var n = arguments.length > 2 && void 0 !== arguments[2] && arguments[2], r = arguments.length > 3 ? arguments[3] : void 0, o = {\n                            eventName: e,\n                            eventArgs: t || {}\n                        };\n                        return E.state[r] = n ? [\n                            o\n                        ].concat(b(E.state[r])) : [].concat(b(E.state[r]), [\n                            o\n                        ]), E;\n                    }), A(this, \"runEventLoop\", function() {\n                        E.state.lastFrameTime || (E.state.lastFrameTime = Date.now());\n                        var e = Date.now(), n = e - E.state.lastFrameTime;\n                        if (!E.state.eventQueue.length) {\n                            if (!E.options.loop) return;\n                            E.state.eventQueue = b(E.state.calledEvents), E.state.calledEvents = [], E.options = w({}, E.state.initialOptions);\n                        }\n                        if (E.state.eventLoop = t()(E.runEventLoop), !E.state.eventLoopPaused) {\n                            if (E.state.pauseUntil) {\n                                if (e < E.state.pauseUntil) return;\n                                E.state.pauseUntil = null;\n                            }\n                            var r, o = b(E.state.eventQueue), g = o.shift();\n                            if (!(n <= (r = g.eventName === l || g.eventName === s ? \"natural\" === E.options.deleteSpeed ? a(40, 80) : E.options.deleteSpeed : \"natural\" === E.options.delay ? a(120, 160) : E.options.delay))) {\n                                var T = g.eventName, S = g.eventArgs;\n                                switch(E.logInDevMode({\n                                    currentEvent: g,\n                                    state: E.state,\n                                    delay: r\n                                }), T){\n                                    case m:\n                                    case i:\n                                        var A = S.character, N = S.node, C = document.createTextNode(A), _ = C;\n                                        E.options.onCreateTextNode && \"function\" == typeof E.options.onCreateTextNode && (_ = E.options.onCreateTextNode(A, C)), _ && (N ? N.appendChild(_) : E.state.elements.wrapper.appendChild(_)), E.state.visibleNodes = [].concat(b(E.state.visibleNodes), [\n                                            {\n                                                type: \"TEXT_NODE\",\n                                                character: A,\n                                                node: _\n                                            }\n                                        ]);\n                                        break;\n                                    case s:\n                                        o.unshift({\n                                            eventName: l,\n                                            eventArgs: {\n                                                removingCharacterNode: !0\n                                            }\n                                        });\n                                        break;\n                                    case c:\n                                        var O = g.eventArgs.ms;\n                                        E.state.pauseUntil = Date.now() + parseInt(O);\n                                        break;\n                                    case p:\n                                        var L = g.eventArgs, D = L.cb, M = L.thisArg;\n                                        D.call(M, {\n                                            elements: E.state.elements\n                                        });\n                                        break;\n                                    case d:\n                                        var x = g.eventArgs, P = x.node, j = x.parentNode;\n                                        j ? j.appendChild(P) : E.state.elements.wrapper.appendChild(P), E.state.visibleNodes = [].concat(b(E.state.visibleNodes), [\n                                            {\n                                                type: y,\n                                                node: P,\n                                                parentNode: j || E.state.elements.wrapper\n                                            }\n                                        ]);\n                                        break;\n                                    case u:\n                                        var R = E.state.visibleNodes, k = S.speed, Q = [];\n                                        k && Q.push({\n                                            eventName: f,\n                                            eventArgs: {\n                                                speed: k,\n                                                temp: !0\n                                            }\n                                        });\n                                        for(var F = 0, H = R.length; F < H; F++)Q.push({\n                                            eventName: l,\n                                            eventArgs: {\n                                                removingCharacterNode: !1\n                                            }\n                                        });\n                                        k && Q.push({\n                                            eventName: f,\n                                            eventArgs: {\n                                                speed: E.options.deleteSpeed,\n                                                temp: !0\n                                            }\n                                        }), o.unshift.apply(o, Q);\n                                        break;\n                                    case l:\n                                        var I = g.eventArgs.removingCharacterNode;\n                                        if (E.state.visibleNodes.length) {\n                                            var U = E.state.visibleNodes.pop(), q = U.type, G = U.node, Y = U.character;\n                                            E.options.onRemoveNode && \"function\" == typeof E.options.onRemoveNode && E.options.onRemoveNode({\n                                                node: G,\n                                                character: Y\n                                            }), G && G.parentNode.removeChild(G), q === y && I && o.unshift({\n                                                eventName: l,\n                                                eventArgs: {}\n                                            });\n                                        }\n                                        break;\n                                    case f:\n                                        E.options.deleteSpeed = g.eventArgs.speed;\n                                        break;\n                                    case v:\n                                        E.options.delay = g.eventArgs.delay;\n                                        break;\n                                    case h:\n                                        E.options.cursor = g.eventArgs.cursor, E.state.elements.cursor.innerHTML = g.eventArgs.cursor;\n                                }\n                                E.options.loop && (g.eventName === l || g.eventArgs && g.eventArgs.temp || (E.state.calledEvents = [].concat(b(E.state.calledEvents), [\n                                    g\n                                ]))), E.state.eventQueue = o, E.state.lastFrameTime = e;\n                            }\n                        }\n                    }), r) {\n                        if (\"string\" == typeof r) {\n                            var T = document.querySelector(r);\n                            if (!T) throw new Error(\"Could not find container element\");\n                            this.state.elements.container = T;\n                        } else this.state.elements.container = r;\n                    }\n                    g && (this.options = w(w({}, this.options), g)), this.state.initialOptions = w({}, this.options), this.init();\n                }\n                var r, g;\n                return r = n, g = [\n                    {\n                        key: \"init\",\n                        value: function() {\n                            var e, t;\n                            this.setupWrapperElement(), this.addEventToQueue(h, {\n                                cursor: this.options.cursor\n                            }, !0), this.addEventToQueue(u, null, !0), !window || window.___TYPEWRITER_JS_STYLES_ADDED___ || this.options.skipAddStyles || (e = \".Typewriter__cursor{-webkit-animation:Typewriter-cursor 1s infinite;animation:Typewriter-cursor 1s infinite;margin-left:1px}@-webkit-keyframes Typewriter-cursor{0%{opacity:0}50%{opacity:1}100%{opacity:0}}@keyframes Typewriter-cursor{0%{opacity:0}50%{opacity:1}100%{opacity:0}}\", (t = document.createElement(\"style\")).appendChild(document.createTextNode(e)), document.head.appendChild(t), window.___TYPEWRITER_JS_STYLES_ADDED___ = !0), !0 === this.options.autoStart && this.options.strings && this.typeOutAllStrings().start();\n                        }\n                    },\n                    {\n                        key: \"logInDevMode\",\n                        value: function(e) {\n                            this.options.devMode && console.log(e);\n                        }\n                    }\n                ], S(r.prototype, g), Object.defineProperty(r, \"prototype\", {\n                    writable: !1\n                }), n;\n            }();\n        })(), r.default;\n    })());\n\n\n/**\r\n * Event Dispatcher module is used for registering listeners and dispatching\r\n * events across amCharts system.\r\n */ /**\r\n * ============================================================================\r\n * IMPORTS\r\n * ============================================================================\r\n * @hidden\r\n */ /**\r\n * ============================================================================\r\n * IMPORTS\r\n * ============================================================================\r\n * @hidden\r\n */ /**\r\n * A collection of utility functions for various type checks and conversion\r\n * @hidden\r\n */ /**\r\n * ============================================================================\r\n * TYPE CHECK\r\n * ============================================================================\r\n * @hidden\r\n */ /**\r\n * Returns `true` if value is not a number (NaN).\r\n *\r\n * @param value Input value\r\n * @return Is NaN?\r\n */ function $f63bdea45a89cf24$export$c9f5652083b8129d(value) {\n    return Number(value) !== value;\n}\nfunction $f63bdea45a89cf24$export$e2b5c5db9e2009fd(value) {\n    return ({}).toString.call(value);\n}\nfunction $f63bdea45a89cf24$export$a7a9523472993e97(condition, message = \"Assertion failed\") {\n    if (!condition) throw new Error(message);\n}\nfunction $f63bdea45a89cf24$export$a0a81dc3380ce7d3(value) {\n    if (value != null && !$f63bdea45a89cf24$export$7e4aa119212bc614(value)) {\n        let converted = Number(value);\n        if ($f63bdea45a89cf24$export$c9f5652083b8129d(converted) && $f63bdea45a89cf24$export$844ec244b1367d54(value) && value != \"\") return $f63bdea45a89cf24$export$a0a81dc3380ce7d3(value.replace(/[^0-9.\\-]+/g, ''));\n        return converted;\n    }\n    return value;\n}\nfunction $f63bdea45a89cf24$export$e67a095c620b86fe(value) {\n    if ($f63bdea45a89cf24$export$871608497c498473(value)) // TODO maybe don't create a new Date ?\n    return new Date(value);\n    else if ($f63bdea45a89cf24$export$7e4aa119212bc614(value)) return new Date(value);\n    else {\n        // Try converting to number (assuming timestamp)\n        let num = Number(value);\n        if (!$f63bdea45a89cf24$export$7e4aa119212bc614(num)) return new Date(value);\n        else return new Date(num);\n    }\n}\nfunction $f63bdea45a89cf24$export$f67be9d9b0e25d7b(value) {\n    // TODO handle Infinity and -Infinity\n    if ($f63bdea45a89cf24$export$c9f5652083b8129d(value)) return \"NaN\";\n    if (value === Infinity) return \"Infinity\";\n    if (value === -Infinity) return \"-Infinity\";\n    // Negative 0\n    if (value === 0 && 1 / value === -Infinity) return \"-0\";\n    // Preserve negative and deal with absoute values\n    let negative = value < 0;\n    value = Math.abs(value);\n    // TODO test this\n    let parsed = /^([0-9]+)(?:\\.([0-9]+))?(?:e[\\+\\-]([0-9]+))?$/.exec(\"\" + value);\n    let digits = parsed[1];\n    let decimals = parsed[2] || \"\";\n    let res;\n    // Leave the nummber as it is if it does not use exponents\n    if (parsed[3] === undefined) res = decimals === \"\" ? digits : digits + \".\" + decimals;\n    else {\n        let exponent = +parsed[3];\n        // Deal with decimals\n        if (value < 1) {\n            let zeros = exponent - 1;\n            res = \"0.\" + $f63bdea45a89cf24$export$76d90c956114f2c2(\"0\", zeros) + digits + decimals;\n        // Deal with integers\n        } else {\n            let zeros = exponent - decimals.length;\n            if (zeros === 0) res = digits + decimals;\n            else if (zeros < 0) res = digits + decimals.slice(0, zeros) + \".\" + decimals.slice(zeros);\n            else res = digits + decimals + $f63bdea45a89cf24$export$76d90c956114f2c2(\"0\", zeros);\n        }\n    }\n    return negative ? \"-\" + res : res;\n}\nfunction $f63bdea45a89cf24$export$76d90c956114f2c2(string, amount) {\n    return new Array(amount + 1).join(string);\n}\nfunction $f63bdea45a89cf24$export$871608497c498473(value) {\n    return $f63bdea45a89cf24$export$e2b5c5db9e2009fd(value) === \"[object Date]\";\n}\nfunction $f63bdea45a89cf24$export$844ec244b1367d54(value) {\n    return typeof value === \"string\";\n}\nfunction $f63bdea45a89cf24$export$7e4aa119212bc614(value) {\n    return typeof value === \"number\" && Number(value) == value;\n}\nfunction $f63bdea45a89cf24$export$a6cdc56e425d0d0a(value) {\n    return typeof value === \"object\" && value !== null;\n}\nfunction $f63bdea45a89cf24$export$43bee75e5e14138e(value) {\n    return Array.isArray(value);\n}\nconst $f63bdea45a89cf24$export$55fc5ffc49a23c34 = \"__\\xa7\\xa7\\xa7__\";\nconst $f63bdea45a89cf24$export$cea82ace3c81ccd9 = \"__\\xa7\\xa7\\xa7\\xa7__\";\n\n\nfunction $2f30431acd054e2f$export$305f7d4e9d4624f2(array, value) {\n    const length = array.length;\n    for(let i = 0; i < length; ++i){\n        // TODO handle NaN\n        if (array[i] === value) return i;\n    }\n    return -1;\n}\nfunction $2f30431acd054e2f$export$4154a199d7d90455(array, test) {\n    const length = array.length;\n    for(let i = 0; i < length; ++i){\n        if (test(array[i])) return true;\n    }\n    return false;\n}\nfunction $2f30431acd054e2f$export$871de8747c9eaa88(array, fn) {\n    const length = array.length;\n    const output = new Array(length);\n    for(let i = 0; i < length; ++i)output[i] = fn(array[i], i);\n    return output;\n}\nfunction $2f30431acd054e2f$export$79b2f7037acddd43(array, fn) {\n    const length = array.length;\n    for(let i = 0; i < length; ++i)fn(array[i], i);\n}\nfunction $2f30431acd054e2f$export$a40ba8785b7efce8(array, fn) {\n    let i = array.length;\n    while(i > 0){\n        --i;\n        fn(array[i], i);\n    }\n}\nfunction $2f30431acd054e2f$export$1e016427912bfd78(array, fn) {\n    const length = array.length;\n    for(let i = 0; i < length; ++i){\n        if (!fn(array[i], i)) break;\n    }\n}\nfunction $2f30431acd054e2f$export$f613292be21d0bc3(array, index) {\n    const length = array.length;\n    for(let i = index; i < length; ++i)array[i - index] = array[i];\n    array.length = length - index;\n}\nfunction $2f30431acd054e2f$export$4c7897fafd92b108(array) {\n    const length = array.length;\n    return length ? array[length - 1] : undefined;\n}\nfunction $2f30431acd054e2f$export$43128fadae87b74a(array) {\n    return array[0];\n}\nfunction $2f30431acd054e2f$export$21a5ca8aa77d35ff(array, element, index) {\n    //if (array) {\n    index = Math.max(0, Math.min(index, array.length));\n    array.splice(index, 0, element);\n//}\n}\nfunction $2f30431acd054e2f$export$28faab0720fecb61(array, element, index) {\n    $2f30431acd054e2f$export$cd7f480d6b8286c3(array, element);\n    $2f30431acd054e2f$export$21a5ca8aa77d35ff(array, element, index);\n}\nfunction $2f30431acd054e2f$export$907644183e99da16(array, input) {\n    const length = input.length;\n    for(let i = 0; i < length; ++i)array.push(input[i]);\n}\nfunction $2f30431acd054e2f$export$cd7f480d6b8286c3(array, element) {\n    let found = false;\n    let index = 0;\n    for(;;){\n        index = array.indexOf(element, index);\n        if (index === -1) return found;\n        else {\n            found = true;\n            array.splice(index, 1);\n        }\n    }\n}\nfunction $2f30431acd054e2f$export$2529f734547e2830(array, element) {\n    let index = array.indexOf(element);\n    if (index !== -1) {\n        array.splice(index, 1);\n        return true;\n    } else return false;\n}\nfunction $2f30431acd054e2f$export$d947e5f4f4c48d48(array, element, toIndex) {\n    // @todo this implementation must be the same as the List.moveValue method\n    // @todo don't do anything if the desired index is the same as the current index\n    let index = $2f30431acd054e2f$export$305f7d4e9d4624f2(array, element);\n    // @todo remove all old values rather than only the first ?\n    if (index !== -1) $2f30431acd054e2f$export$c36ae5e7e50e8840(array, index);\n    if (toIndex == null) array.push(element);\n    else $2f30431acd054e2f$export$5a98a36321617fd4(array, toIndex, element);\n}\nfunction $2f30431acd054e2f$export$e16d8520af44a096(array, element, index) {\n    // Append to the end if index is not set\n    if (!$f63bdea45a89cf24$export$7e4aa119212bc614(index)) array.push(element);\n    else if (index === 0) array.unshift(element);\n    else array.splice(index, 0, element);\n}\nfunction $2f30431acd054e2f$export$3589e1fa93f0a8a5(array, element) {\n    if (array.indexOf(element) === -1) array.push(element);\n}\nfunction $2f30431acd054e2f$export$77ad94ebf1c2b9ed(array, element, index) {\n    // check if exists\n    let ind = array.indexOf(element);\n    // remove if exists\n    if (ind !== -1) array.splice(ind, 1);\n    // add to end if index is not set\n    if (!$f63bdea45a89cf24$export$7e4aa119212bc614(index)) array.push(element);\n    else array.splice(index, 0, element);\n}\nfunction $2f30431acd054e2f$export$45b10814cc054894(input) {\n    if (Array.isArray(input)) return input;\n    else return [\n        input\n    ];\n}\nfunction $2f30431acd054e2f$export$a4f4bb6b1453fff5(array, element) {\n    return $2f30431acd054e2f$export$305f7d4e9d4624f2(array, element) !== -1;\n}\nfunction $2f30431acd054e2f$export$784d13d8ee351f07(array) {\n    const length = array.length;\n    // It's faster to create the array with a pre-defined length\n    const output = new Array(length);\n    for(let i = 0; i < length; ++i)// Because the array has a pre-defined length, we have to assign rather than push\n    // This is also faster than pushing\n    output[i] = array[i];\n    return output;\n}\nfunction $2f30431acd054e2f$export$58adb3bec8346d0f(array, start, end = array.length) {\n    const output = new Array(end - start);\n    for(let i = start; i < end; ++i)output[i - start] = array[i];\n    return output;\n}\nfunction $2f30431acd054e2f$export$5a98a36321617fd4(array, index, value) {\n    array.splice(index, 0, value);\n}\nfunction $2f30431acd054e2f$export$c36ae5e7e50e8840(array, index) {\n    array.splice(index, 1);\n}\nfunction $2f30431acd054e2f$export$de3a4d4a0d731119(array, matches) {\n    const length = array.length;\n    for(let i = 0; i < length; ++i){\n        if (matches(array[i], i)) return i;\n    }\n    return -1;\n}\nfunction $2f30431acd054e2f$export$226e5ded3ade49e5(array, matches) {\n    let i = array.length;\n    while(i > 0){\n        --i;\n        if (matches(array[i], i)) return i;\n    }\n    return -1;\n}\nfunction $2f30431acd054e2f$export$71aa6c912b956294(array, matches) {\n    const index = $2f30431acd054e2f$export$de3a4d4a0d731119(array, matches);\n    if (index !== -1) return array[index];\n}\nfunction $2f30431acd054e2f$export$cda8c4def7b6e027(array, matches) {\n    const index = $2f30431acd054e2f$export$226e5ded3ade49e5(array, matches);\n    if (index !== -1) return array[index];\n}\nfunction $2f30431acd054e2f$export$23e5dcedfce4509c(array, matches) {\n    const length = array.length;\n    for(let i = 0; i < length; ++i){\n        const value = matches(array[i], i);\n        if (value !== undefined) return value;\n    }\n}\nfunction $2f30431acd054e2f$export$448332262467e042(array) {\n    // https://stackoverflow.com/a/2450976/449477\n    let currentIndex = array.length, temporaryValue, randomIndex;\n    // While there remain elements to shuffle...\n    while(0 !== currentIndex){\n        // Pick a remaining element...\n        randomIndex = Math.floor(Math.random() * currentIndex);\n        currentIndex -= 1;\n        // And swap it with the current element.\n        temporaryValue = array[currentIndex];\n        array[currentIndex] = array[randomIndex];\n        array[randomIndex] = temporaryValue;\n    }\n}\nfunction $2f30431acd054e2f$export$5637f53fe994488d(array, ordering) {\n    let start = 0;\n    let end = array.length;\n    let found = false;\n    while(start < end){\n        // TODO is this faster/slower than using Math.floor ?\n        const pivot = start + end >> 1;\n        const order = ordering(array[pivot]);\n        // less\n        if (order < 0) start = pivot + 1;\n        else if (order === 0) {\n            found = true;\n            start = pivot + 1;\n        // more\n        } else end = pivot;\n    }\n    return {\n        found: found,\n        index: found ? start - 1 : start\n    };\n}\nfunction $2f30431acd054e2f$export$227c6173d90c5e68(array, ordering) {\n    let start = 0;\n    let end = array.length;\n    let found = false;\n    while(start < end){\n        // TODO is this faster/slower than using Math.floor ?\n        const pivot = start + end >> 1;\n        const order = ordering(array[pivot]);\n        // less\n        if (order < 0) start = pivot + 1;\n        else if (order === 0) {\n            found = true;\n            end = pivot;\n        // more\n        } else end = pivot;\n    }\n    return {\n        found: found,\n        index: start\n    };\n}\nfunction $2f30431acd054e2f$export$249f83d169a7c462(array, keep) {\n    let i = array.length;\n    while(i > 0){\n        --i;\n        if (!keep(array[i])) array.splice(i, 1);\n    }\n}\n\n\nclass $a363f66303166aa1$export$9a67fa5e19f51a52 {\n    /**\r\n     * Constructor.\r\n     */ constructor(){\n        /**\r\n         * Is object disposed?\r\n         */ Object.defineProperty(this, \"_disposed\", {\n            enumerable: true,\n            configurable: true,\n            writable: true,\n            value: void 0\n        });\n        this._disposed = false;\n    }\n    /**\r\n     * Checks if object is disposed.\r\n     *\r\n     * @return Disposed?\r\n     */ isDisposed() {\n        return this._disposed;\n    }\n    /**\r\n     * Disposes the object.\r\n     */ dispose() {\n        if (!this._disposed) {\n            this._disposed = true;\n            this._dispose();\n        }\n    }\n}\nclass $a363f66303166aa1$export$6039fc6176d96e35 {\n    /**\r\n     * Constructor.\r\n     *\r\n     * @param dispose  Function that disposes object\r\n     */ constructor(dispose){\n        /**\r\n         * Is object disposed?\r\n         */ Object.defineProperty(this, \"_disposed\", {\n            enumerable: true,\n            configurable: true,\n            writable: true,\n            value: void 0\n        });\n        /**\r\n         * Method that disposes the object.\r\n         */ Object.defineProperty(this, \"_dispose\", {\n            enumerable: true,\n            configurable: true,\n            writable: true,\n            value: void 0\n        });\n        this._disposed = false;\n        this._dispose = dispose;\n    }\n    /**\r\n     * Checks if object is disposed.\r\n     *\r\n     * @return Disposed?\r\n     */ isDisposed() {\n        return this._disposed;\n    }\n    /**\r\n     * Disposes the object.\r\n     */ dispose() {\n        if (!this._disposed) {\n            this._disposed = true;\n            this._dispose();\n        }\n    }\n}\nclass $a363f66303166aa1$export$e5175346f02c1d15 extends $a363f66303166aa1$export$9a67fa5e19f51a52 {\n    constructor(){\n        super(...arguments);\n        Object.defineProperty(this, \"_disposers\", {\n            enumerable: true,\n            configurable: true,\n            writable: true,\n            value: []\n        });\n    }\n    _dispose() {\n        $2f30431acd054e2f$export$79b2f7037acddd43(this._disposers, (x)=>{\n            x.dispose();\n        });\n    }\n}\nclass $a363f66303166aa1$export$9720df365053d143 extends $a363f66303166aa1$export$9a67fa5e19f51a52 {\n    constructor(disposers){\n        super();\n        Object.defineProperty(this, \"_disposers\", {\n            enumerable: true,\n            configurable: true,\n            writable: true,\n            value: void 0\n        });\n        this._disposers = disposers;\n    }\n    _dispose() {\n        $2f30431acd054e2f$export$79b2f7037acddd43(this._disposers, (x)=>{\n            x.dispose();\n        });\n    }\n    get disposers() {\n        return this._disposers;\n    }\n}\nclass $a363f66303166aa1$export$1ac3b860a0f32be9 extends $a363f66303166aa1$export$9a67fa5e19f51a52 {\n    constructor(){\n        super(...arguments);\n        /**\r\n         * Current disposer.\r\n         */ Object.defineProperty(this, \"_disposer\", {\n            enumerable: true,\n            configurable: true,\n            writable: true,\n            value: void 0\n        });\n        /**\r\n         * Current value.\r\n         */ Object.defineProperty(this, \"_value\", {\n            enumerable: true,\n            configurable: true,\n            writable: true,\n            value: void 0\n        });\n    }\n    _dispose() {\n        if (this._disposer != null) {\n            this._disposer.dispose();\n            this._disposer = undefined;\n        }\n    }\n    /**\r\n     * Returns current value.\r\n     *\r\n     * @return Value\r\n     */ get() {\n        return this._value;\n    }\n    /**\r\n     * Sets value and disposes previous disposer if it was set.\r\n     *\r\n     * @param value     New value\r\n     * @param disposer  Disposer\r\n     */ set(value, disposer) {\n        if (this._disposer != null) this._disposer.dispose();\n        this._disposer = disposer;\n        this._value = value;\n    }\n    /**\r\n     * Resets the disposer value.\r\n     */ reset() {\n        this.set(undefined, undefined);\n    }\n}\nclass $a363f66303166aa1$export$8a02b29de282f67f extends $a363f66303166aa1$export$6039fc6176d96e35 {\n    constructor(){\n        super(...arguments);\n        /**\r\n         * [_counter description]\r\n         *\r\n         * @todo Description\r\n         */ Object.defineProperty(this, \"_counter\", {\n            enumerable: true,\n            configurable: true,\n            writable: true,\n            value: 0\n        });\n    }\n    /**\r\n     * [increment description]\r\n     *\r\n     * @todo Description\r\n     */ increment() {\n        // TODO throw an error if it is disposed\n        ++this._counter;\n        // TODO make this more efficient\n        return new $a363f66303166aa1$export$6039fc6176d96e35(()=>{\n            --this._counter;\n            if (this._counter === 0) this.dispose();\n        });\n    }\n}\n\n\n\n\nclass $7e417cbab1b21893$export$ec8b666c5fe2c75a {\n    /**\r\n     * Constructor\r\n     */ constructor(){\n        Object.defineProperty(this, \"_listeners\", {\n            enumerable: true,\n            configurable: true,\n            writable: true,\n            value: void 0\n        });\n        Object.defineProperty(this, \"_killed\", {\n            enumerable: true,\n            configurable: true,\n            writable: true,\n            value: void 0\n        });\n        Object.defineProperty(this, \"_disabled\", {\n            enumerable: true,\n            configurable: true,\n            writable: true,\n            value: void 0\n        });\n        Object.defineProperty(this, \"_iterating\", {\n            enumerable: true,\n            configurable: true,\n            writable: true,\n            value: void 0\n        });\n        Object.defineProperty(this, \"_enabled\", {\n            enumerable: true,\n            configurable: true,\n            writable: true,\n            value: void 0\n        });\n        Object.defineProperty(this, \"_disposed\", {\n            enumerable: true,\n            configurable: true,\n            writable: true,\n            value: void 0\n        });\n        this._listeners = [];\n        this._killed = [];\n        this._disabled = {};\n        this._iterating = 0;\n        this._enabled = true;\n        this._disposed = false;\n    }\n    /**\r\n     * Returns if this object has been already disposed.\r\n     *\r\n     * @return Disposed?\r\n     */ isDisposed() {\n        return this._disposed;\n    }\n    /**\r\n     * Dispose (destroy) this object.\r\n     */ dispose() {\n        if (!this._disposed) {\n            this._disposed = true;\n            const a = this._listeners;\n            this._iterating = 1;\n            this._listeners = null;\n            this._disabled = null;\n            try {\n                $2f30431acd054e2f$export$79b2f7037acddd43(a, (x)=>{\n                    x.disposer.dispose();\n                });\n            } finally{\n                this._killed = null;\n                this._iterating = null;\n            }\n        }\n    }\n    /**\r\n     * Checks if this particular event dispatcher has any listeners set.\r\n     *\r\n     * @return Has listeners?\r\n     */ hasListeners() {\n        return this._listeners.length !== 0;\n    }\n    /**\r\n     * Checks if this particular event dispatcher has any particular listeners set.\r\n     *\r\n     * @return Has particular event listeners?\r\n     */ hasListenersByType(type) {\n        return $2f30431acd054e2f$export$4154a199d7d90455(this._listeners, (x)=>(x.type === null || x.type === type) && !x.killed);\n    }\n    /**\r\n     * Enable dispatching of events if they were previously disabled by\r\n     * `disable()`.\r\n     */ enable() {\n        this._enabled = true;\n    }\n    /**\r\n     * Disable dispatching of events until re-enabled by `enable()`.\r\n     */ disable() {\n        this._enabled = false;\n    }\n    /**\r\n     * Enable dispatching particular event, if it was disabled before by\r\n     * `disableType()`.\r\n     *\r\n     * @param type Event type\r\n     */ enableType(type) {\n        delete this._disabled[type];\n    }\n    /**\r\n     * Disable dispatching of events for a certain event type.\r\n     *\r\n     * Optionally, can set how many dispatches to skip before automatically\r\n     * re-enabling the dispatching.\r\n     *\r\n     * @param type    Event type\r\n     * @param amount  Number of event dispatches to skip\r\n     */ disableType(type, amount = Infinity) {\n        this._disabled[type] = amount;\n    }\n    /**\r\n     * Removes listener from dispatcher.\r\n     *\r\n     * Will throw an exception if such listener does not exists.\r\n     *\r\n     * @param listener Listener to remove\r\n     */ _removeListener(listener) {\n        if (this._iterating === 0) {\n            const index = this._listeners.indexOf(listener);\n            if (index === -1) throw new Error(\"Invalid state: could not remove listener\");\n            this._listeners.splice(index, 1);\n        } else this._killed.push(listener);\n    }\n    /**\r\n     * Removes existing listener by certain parameters.\r\n     *\r\n     * @param once         Listener's once setting\r\n     * @param type         Listener's type\r\n     * @param callback     Callback function\r\n     * @param context      Callback context\r\n     */ _removeExistingListener(once, type, callback, context) {\n        if (this._disposed) throw new Error(\"EventDispatcher is disposed\");\n        this._eachListener((info)=>{\n            if (info.once === once && // TODO is this correct ?\n            info.type === type && (callback === undefined || info.callback === callback) && info.context === context) info.disposer.dispose();\n        });\n    }\n    /**\r\n     * Checks if dispatching for particular event type is enabled.\r\n     *\r\n     * @param type  Event type\r\n     * @return Enabled?\r\n     */ isEnabled(type) {\n        if (this._disposed) throw new Error(\"EventDispatcher is disposed\");\n        // TODO is this check correct ?\n        return this._enabled && this._listeners.length > 0 && this.hasListenersByType(type) && this._disabled[type] === undefined;\n    }\n    /**\r\n     * Removes all listeners of a particular event type\r\n     *\r\n     * @param type  Listener's type\r\n     */ removeType(type) {\n        if (this._disposed) throw new Error(\"EventDispatcher is disposed\");\n        this._eachListener((info)=>{\n            if (info.type === type) info.disposer.dispose();\n        });\n    }\n    /**\r\n     * Checks if there's already a listener with specific parameters.\r\n     *\r\n     * @param type      Listener's type\r\n     * @param callback  Callback function\r\n     * @param context   Callback context\r\n     * @return Has listener?\r\n     */ has(type, callback, context) {\n        const index = $2f30431acd054e2f$export$de3a4d4a0d731119(this._listeners, (info)=>{\n            return info.once !== true && // Ignoring \"once\" listeners\n            info.type === type && (callback === undefined || info.callback === callback) && info.context === context;\n        });\n        return index !== -1;\n    }\n    /**\r\n     * Checks whether event of the particular type should be dispatched.\r\n     *\r\n     * @param type  Event type\r\n     * @return Dispatch?\r\n     */ _shouldDispatch(type) {\n        if (this._disposed) throw new Error(\"EventDispatcher is disposed\");\n        const count = this._disabled[type];\n        if (!$f63bdea45a89cf24$export$7e4aa119212bc614(count)) return this._enabled;\n        else {\n            if (count <= 1) delete this._disabled[type];\n            else --this._disabled[type];\n            return false;\n        }\n    }\n    /**\r\n     * [_eachListener description]\r\n     *\r\n     * All of this extra code is needed when a listener is removed while iterating\r\n     *\r\n     * @todo Description\r\n     * @param fn [description]\r\n     */ _eachListener(fn) {\n        ++this._iterating;\n        try {\n            $2f30431acd054e2f$export$79b2f7037acddd43(this._listeners, fn);\n        } finally{\n            --this._iterating;\n            // TODO should this be inside or outside the finally ?\n            if (this._iterating === 0 && this._killed.length !== 0) {\n                // Remove killed listeners\n                $2f30431acd054e2f$export$79b2f7037acddd43(this._killed, (killed)=>{\n                    this._removeListener(killed);\n                });\n                this._killed.length = 0;\n            }\n        }\n    }\n    /**\r\n     * Dispatches an event immediately without waiting for next cycle.\r\n     *\r\n     * @param type   Event type\r\n     * @param event  Event object\r\n     * @todo automatically add in type and target properties if they are missing\r\n     */ dispatch(type, event) {\n        if (this._shouldDispatch(type)) // TODO check if it's faster to use an object of listeners rather than a single big array\n        // TODO if the function throws, maybe it should keep going ?\n        this._eachListener((listener)=>{\n            if (!listener.killed && (listener.type === null || listener.type === type)) listener.dispatch(type, event);\n        });\n    }\n    /**\r\n     * Shelves the event to be dispatched within next update cycle.\r\n     *\r\n     * @param type   Event type\r\n     * @param event  Event object\r\n     * @todo automatically add in type and target properties if they are missing\r\n     */ /*public dispatchLater<Key extends keyof T>(type: Key, event: T[Key]): void {\r\n        if (this._shouldDispatch(type)) {\r\n            this._eachListener((listener) => {\r\n                // TODO check if it's faster to use an object of listeners rather than a single big array\r\n                if (!listener.killed && (listener.type === null || listener.type === type)) {\r\n                    // TODO if the function throws, maybe it should keep going ?\r\n                    // TODO dispatch during the update cycle, rather than using whenIdle\r\n                    $async.whenIdle(() => {\r\n                        if (!listener.killed) {\r\n                            listener.dispatch(type, event);\r\n                        }\r\n                    });\r\n                }\r\n            });\r\n        }\r\n    }*/ /**\r\n     * Creates, catalogs and returns an [[EventListener]].\r\n     *\r\n     * Event listener can be disposed.\r\n     *\r\n     * @param once         Listener's once setting\r\n     * @param type         Listener's type\r\n     * @param callback     Callback function\r\n     * @param context      Callback context\r\n     * @param shouldClone  Whether the listener should be copied when the EventDispatcher is copied\r\n     * @param dispatch\r\n     * @returns An event listener\r\n     */ _on(once, type, callback, context, shouldClone, dispatch) {\n        if (this._disposed) throw new Error(\"EventDispatcher is disposed\");\n        this._removeExistingListener(once, type, callback, context);\n        const info = {\n            type: type,\n            callback: callback,\n            context: context,\n            shouldClone: shouldClone,\n            dispatch: dispatch,\n            killed: false,\n            once: once,\n            disposer: new (0, $a363f66303166aa1$export$6039fc6176d96e35)(()=>{\n                info.killed = true;\n                this._removeListener(info);\n            })\n        };\n        this._listeners.push(info);\n        return info;\n    }\n    /**\r\n     * Creates an event listener to be invoked on **any** event.\r\n     *\r\n     * @param callback     Callback function\r\n     * @param context      Callback context\r\n     * @param shouldClone  Whether the listener should be copied when the EventDispatcher is copied\r\n     * @returns A disposable event listener\r\n     */ onAll(callback, context, shouldClone = true) {\n        return this._on(false, null, callback, context, shouldClone, (_type, event)=>callback.call(context, event)).disposer;\n    }\n    /**\r\n     * Creates an event listener to be invoked on a specific event type.\r\n     *\r\n     * ```TypeScript\r\n     * button.events.once(\"click\", (ev) => {\r\n     *   console.log(\"Button clicked\");\r\n     * }, this);\r\n     * ```\r\n     * ```JavaScript\r\n     * button.events.once(\"click\", (ev) => {\r\n     *   console.log(\"Button clicked\");\r\n     * }, this);\r\n     * ```\r\n     *\r\n     * The above will invoke our custom event handler whenever series we put\r\n     * event on is hidden.\r\n     *\r\n     * @param type         Listener's type\r\n     * @param callback     Callback function\r\n     * @param context      Callback context\r\n     * @param shouldClone  Whether the listener should be copied when the EventDispatcher is copied\r\n     * @returns A disposable event listener\r\n     */ on(type, callback, context, shouldClone = true) {\n        return this._on(false, type, callback, context, shouldClone, (_type, event)=>callback.call(context, event)).disposer;\n    }\n    /**\r\n     * Creates an event listener to be invoked on a specific event type once.\r\n     *\r\n     * Once the event listener is invoked, it is automatically disposed.\r\n     *\r\n     * ```TypeScript\r\n     * button.events.once(\"click\", (ev) => {\r\n     *   console.log(\"Button clicked\");\r\n     * }, this);\r\n     * ```\r\n     * ```JavaScript\r\n     * button.events.once(\"click\", (ev) => {\r\n     *   console.log(\"Button clicked\");\r\n     * }, this);\r\n     * ```\r\n     *\r\n     * The above will invoke our custom event handler the first time series we\r\n     * put event on is hidden.\r\n     *\r\n     * @param type         Listener's type\r\n     * @param callback     Callback function\r\n     * @param context      Callback context\r\n     * @param shouldClone  Whether the listener should be copied when the EventDispatcher is copied\r\n     * @returns A disposable event listener\r\n     */ once(type, callback, context, shouldClone = true) {\n        const x = this._on(true, type, callback, context, shouldClone, (_type, event)=>{\n            x.disposer.dispose();\n            callback.call(context, event);\n        });\n        // TODO maybe this should return a different Disposer ?\n        return x.disposer;\n    }\n    /**\r\n     * Removes the event listener with specific parameters.\r\n     *\r\n     * @param type         Listener's type\r\n     * @param callback     Callback function\r\n     * @param context      Callback context\r\n     */ off(type, callback, context) {\n        this._removeExistingListener(false, type, callback, context);\n    }\n    /**\r\n     * Copies all dispatcher parameters, including listeners, from another event\r\n     * dispatcher.\r\n     *\r\n     * @param source Source event dispatcher\r\n     * @ignore\r\n     */ copyFrom(source) {\n        if (this._disposed) throw new Error(\"EventDispatcher is disposed\");\n        if (source === this) throw new Error(\"Cannot copyFrom the same TargetedEventDispatcher\");\n        const disposers = [];\n        $2f30431acd054e2f$export$79b2f7037acddd43(source._listeners, (x)=>{\n            // TODO is this correct ?\n            if (!x.killed && x.shouldClone) {\n                if (x.type === null) disposers.push(this.onAll(x.callback, x.context));\n                else if (x.once) disposers.push(this.once(x.type, x.callback, x.context));\n                else disposers.push(this.on(x.type, x.callback, x.context));\n            }\n        });\n        return new (0, $a363f66303166aa1$export$9720df365053d143)(disposers);\n    }\n}\nclass $7e417cbab1b21893$export$778360f0cf920e44 extends $7e417cbab1b21893$export$ec8b666c5fe2c75a {\n    /**\r\n     * Constructor\r\n     *\r\n     * @param target Event dispatcher target\r\n     */ constructor(target){\n        super();\n        /**\r\n         * A target object which is originating events using this dispatcher.\r\n         */ Object.defineProperty(this, \"target\", {\n            enumerable: true,\n            configurable: true,\n            writable: true,\n            value: void 0\n        });\n        this.target = target;\n    }\n    /**\r\n     * Copies all dispatcher parameters, including listeners, from another event\r\n     * dispatcher.\r\n     *\r\n     * @param source Source event dispatcher\r\n     * @ignore\r\n     */ copyFrom(source) {\n        if (this._disposed) throw new Error(\"EventDispatcher is disposed\");\n        if (source === this) throw new Error(\"Cannot copyFrom the same TargetedEventDispatcher\");\n        const disposers = [];\n        $2f30431acd054e2f$export$79b2f7037acddd43(source._listeners, (x)=>{\n            // TODO very hacky\n            if (x.context === source.target) return;\n            // TODO is this correct ?\n            if (!x.killed && x.shouldClone) {\n                if (x.type === null) disposers.push(this.onAll(x.callback, x.context));\n                else if (x.once) disposers.push(this.once(x.type, x.callback, x.context));\n                else disposers.push(this.on(x.type, x.callback, x.context));\n            }\n        });\n        return new (0, $a363f66303166aa1$export$9720df365053d143)(disposers);\n    }\n}\n\n\n\n/**\r\n * Checks if specific index fits into length.\r\n *\r\n * @param index  Index\r\n * @param len    Length\r\n * @ignore\r\n */ function $ddd3cfc9bee47cd2$var$checkBounds(index, len) {\n    if (!(index >= 0 && index < len)) throw new Error(\"Index out of bounds: \" + index);\n}\nclass $ddd3cfc9bee47cd2$export$54c2e3dc7acea9f5 {\n    /**\r\n     * Constructor\r\n     *\r\n     * @param initial  Inital list of values to add to list\r\n     */ constructor(initial = []){\n        /**\r\n         * List values.\r\n         */ Object.defineProperty(this, \"_values\", {\n            enumerable: true,\n            configurable: true,\n            writable: true,\n            value: void 0\n        });\n        Object.defineProperty(this, \"events\", {\n            enumerable: true,\n            configurable: true,\n            writable: true,\n            value: new (0, $7e417cbab1b21893$export$ec8b666c5fe2c75a)()\n        });\n        this._values = initial;\n    }\n    /**\r\n     * An array of values in the list.\r\n     *\r\n     * Do not use this property to add values. Rather use dedicated methods, like\r\n     * `push()`, `removeIndex()`, etc.\r\n     *\r\n     * @readonly\r\n     * @return List values\r\n     */ get values() {\n        return this._values;\n    }\n    /**\r\n     * Checks if list contains specific item reference.\r\n     *\r\n     * @param item  Item to search for\r\n     * @return `true` if found, `false` if not found\r\n     */ contains(value) {\n        return this._values.indexOf(value) !== -1;\n    }\n    /**\r\n     * Removes specific item from the list.\r\n     *\r\n     * @param item An item to remove\r\n     */ removeValue(value) {\n        let i = 0;\n        let length = this._values.length;\n        while(i < length)// TODO handle NaN\n        if (this._values[i] === value) {\n            this.removeIndex(i);\n            --length;\n        } else ++i;\n    }\n    /**\r\n     * Searches the list for specific item and returns its index.\r\n     *\r\n     * @param item  An item to search for\r\n     * @return Index or -1 if not found\r\n     */ indexOf(value) {\n        return $2f30431acd054e2f$export$305f7d4e9d4624f2(this._values, value);\n    }\n    /**\r\n     * Number of items in list.\r\n     *\r\n     * @readonly\r\n     * @return Number of items\r\n     */ get length() {\n        return this._values.length;\n    }\n    /**\r\n     * Checks if there's a value at specific index.\r\n     *\r\n     * @param index  Index\r\n     * @return Value exists?\r\n     */ hasIndex(index) {\n        return index >= 0 && index < this._values.length;\n    }\n    /**\r\n     * Returns an item at specified index.\r\n     *\r\n     * @param index  Index\r\n     * @return List item\r\n     */ getIndex(index) {\n        return this._values[index];\n    }\n    _onPush(newValue) {\n        if (this.events.isEnabled(\"push\")) this.events.dispatch(\"push\", {\n            type: \"push\",\n            target: this,\n            newValue: newValue\n        });\n    }\n    _onInsertIndex(index, newValue) {\n        if (this.events.isEnabled(\"insertIndex\")) this.events.dispatch(\"insertIndex\", {\n            type: \"insertIndex\",\n            target: this,\n            index: index,\n            newValue: newValue\n        });\n    }\n    _onSetIndex(index, oldValue, newValue) {\n        if (this.events.isEnabled(\"setIndex\")) this.events.dispatch(\"setIndex\", {\n            type: \"setIndex\",\n            target: this,\n            index: index,\n            oldValue: oldValue,\n            newValue: newValue\n        });\n    }\n    _onRemoveIndex(index, oldValue) {\n        if (this.events.isEnabled(\"removeIndex\")) this.events.dispatch(\"removeIndex\", {\n            type: \"removeIndex\",\n            target: this,\n            index: index,\n            oldValue: oldValue\n        });\n    }\n    _onMoveIndex(oldIndex, newIndex, value) {\n        if (this.events.isEnabled(\"moveIndex\")) this.events.dispatch(\"moveIndex\", {\n            type: \"moveIndex\",\n            target: this,\n            oldIndex: oldIndex,\n            newIndex: newIndex,\n            value: value\n        });\n    }\n    _onClear(oldValues) {\n        if (this.events.isEnabled(\"clear\")) this.events.dispatch(\"clear\", {\n            type: \"clear\",\n            target: this,\n            oldValues: oldValues\n        });\n    }\n    /**\r\n     * Sets value at specific index.\r\n     *\r\n     * If there's already a value at the index, it is overwritten.\r\n     *\r\n     * @param index  Index\r\n     * @param value  New value\r\n     * @return New value\r\n     */ setIndex(index, value) {\n        $ddd3cfc9bee47cd2$var$checkBounds(index, this._values.length);\n        const oldValue = this._values[index];\n        // Do nothing if the old value and the new value are the same\n        if (oldValue !== value) {\n            this._values[index] = value;\n            this._onSetIndex(index, oldValue, value);\n        }\n        return oldValue;\n    }\n    /**\r\n     * Adds an item to the list at a specific index, which pushes all the other\r\n     * items further down the list.\r\n     *\r\n     * @param index Index\r\n     * @param item  An item to add\r\n     */ insertIndex(index, value) {\n        $ddd3cfc9bee47cd2$var$checkBounds(index, this._values.length + 1);\n        $2f30431acd054e2f$export$5a98a36321617fd4(this._values, index, value);\n        this._onInsertIndex(index, value);\n        return value;\n    }\n    /**\r\n     * Swaps indexes of two items in the list.\r\n     *\r\n     * @param a  Item 1\r\n     * @param b  Item 2\r\n     */ swap(a, b) {\n        const len = this._values.length;\n        $ddd3cfc9bee47cd2$var$checkBounds(a, len);\n        $ddd3cfc9bee47cd2$var$checkBounds(b, len);\n        if (a !== b) {\n            const value_a = this._values[a];\n            const value_b = this._values[b];\n            this._values[a] = value_b;\n            this._onSetIndex(a, value_a, value_b);\n            this._values[b] = value_a;\n            this._onSetIndex(b, value_b, value_a);\n        }\n    }\n    /**\r\n     * Removes a value at specific index.\r\n     *\r\n     * @param index  Index of value to remove\r\n     * @return Removed value\r\n     */ removeIndex(index) {\n        $ddd3cfc9bee47cd2$var$checkBounds(index, this._values.length);\n        const oldValue = this._values[index];\n        $2f30431acd054e2f$export$c36ae5e7e50e8840(this._values, index);\n        this._onRemoveIndex(index, oldValue);\n        return oldValue;\n    }\n    /**\r\n     * Moves an item to a specific index within the list.\r\n     *\r\n     * If the index is not specified it will move the item to the end of the\r\n     * list.\r\n     *\r\n     * @param value  Item to move\r\n     * @param index  Index to place item at\r\n     */ moveValue(value, toIndex) {\n        // TODO don't do anything if the desired index is the same as the current index\n        let index = this.indexOf(value);\n        // TODO remove all old values rather than only the first ?\n        if (index !== -1) {\n            $2f30431acd054e2f$export$c36ae5e7e50e8840(this._values, index);\n            if (toIndex == null) {\n                const toIndex = this._values.length;\n                this._values.push(value);\n                this._onMoveIndex(index, toIndex, value);\n            } else {\n                $2f30431acd054e2f$export$5a98a36321617fd4(this._values, toIndex, value);\n                this._onMoveIndex(index, toIndex, value);\n            }\n        } else if (toIndex == null) {\n            this._values.push(value);\n            this._onPush(value);\n        } else {\n            $2f30431acd054e2f$export$5a98a36321617fd4(this._values, toIndex, value);\n            this._onInsertIndex(toIndex, value);\n        }\n        return value;\n    }\n    /**\r\n     * Adds an item to the end of the list.\r\n     *\r\n     * @param item  An item to add\r\n     */ push(value) {\n        this._values.push(value);\n        this._onPush(value);\n        return value;\n    }\n    /**\r\n     * Adds an item as a first item in the list.\r\n     *\r\n     * @param item  An item to add\r\n     */ unshift(value) {\n        this.insertIndex(0, value);\n        return value;\n    }\n    /**\r\n     * Adds multiple items to the list.\r\n     *\r\n     * @param items  An Array of items to add\r\n     */ pushAll(values) {\n        $2f30431acd054e2f$export$79b2f7037acddd43(values, (value)=>{\n            this.push(value);\n        });\n    }\n    /**\r\n     * Copies and adds items from abother list.\r\n     *\r\n     * @param source  A list top copy items from\r\n     */ copyFrom(source) {\n        this.pushAll(source._values);\n    }\n    /**\r\n     * Returns the last item from the list, and removes it.\r\n     *\r\n     * @return Item\r\n     */ pop() {\n        let index = this._values.length - 1;\n        return index < 0 ? undefined : this.removeIndex(this._values.length - 1);\n    }\n    /**\r\n     * Returns the first item from the list, and removes it.\r\n     *\r\n     * @return Item\r\n     */ shift() {\n        return this._values.length ? this.removeIndex(0) : undefined;\n    }\n    /**\r\n     * Sets multiple items to the list.\r\n     *\r\n     * All current items are removed.\r\n     *\r\n     * @param newArray  New items\r\n     */ setAll(newArray) {\n        const old = this._values;\n        this._values = [];\n        this._onClear(old);\n        $2f30431acd054e2f$export$79b2f7037acddd43(newArray, (value)=>{\n            this._values.push(value);\n            this._onPush(value);\n        });\n    }\n    /**\r\n     * Removes all items from the list.\r\n     */ clear() {\n        this.setAll([]);\n    }\n    /**\r\n     * Returns an ES6 iterator for the list.\r\n     */ *[Symbol.iterator]() {\n        const length = this._values.length;\n        for(let i = 0; i < length; ++i)yield this._values[i];\n    }\n    /**\r\n     * Calls `f` for each element in the list.\r\n     *\r\n     * `f` should have at least one parameter defined which will get a current\r\n     * item, with optional second argument - index.\r\n     */ each(f) {\n        $2f30431acd054e2f$export$79b2f7037acddd43(this._values, f);\n    }\n    /**\r\n     * Calls `f` for each element in the list, from right to left.\r\n     *\r\n     * `f` should have at least one parameter defined which will get a current\r\n     * item, with optional second argument - index.\r\n     */ eachReverse(f) {\n        $2f30431acd054e2f$export$a40ba8785b7efce8(this._values, f);\n    }\n}\nclass $ddd3cfc9bee47cd2$export$82bb93f974543403 extends $ddd3cfc9bee47cd2$export$54c2e3dc7acea9f5 {\n    constructor(){\n        super(...arguments);\n        /**\r\n         * Automatically disposes elements that are removed from the list.\r\n         *\r\n         * @default true\r\n         */ Object.defineProperty(this, \"autoDispose\", {\n            enumerable: true,\n            configurable: true,\n            writable: true,\n            value: true\n        });\n        Object.defineProperty(this, \"_disposed\", {\n            enumerable: true,\n            configurable: true,\n            writable: true,\n            value: false\n        });\n    }\n    _onSetIndex(index, oldValue, newValue) {\n        if (this.autoDispose) oldValue.dispose();\n        super._onSetIndex(index, oldValue, newValue);\n    }\n    _onRemoveIndex(index, oldValue) {\n        if (this.autoDispose) oldValue.dispose();\n        super._onRemoveIndex(index, oldValue);\n    }\n    _onClear(oldValues) {\n        if (this.autoDispose) $2f30431acd054e2f$export$79b2f7037acddd43(oldValues, (x)=>{\n            x.dispose();\n        });\n        super._onClear(oldValues);\n    }\n    _dispose() {\n        if (this.autoDispose) $2f30431acd054e2f$export$79b2f7037acddd43(this._values, (x)=>{\n            x.dispose();\n        });\n    }\n    isDisposed() {\n        return this._disposed;\n    }\n    dispose() {\n        if (!this._disposed) {\n            this._disposed = true;\n            this._dispose();\n        }\n    }\n}\nclass $ddd3cfc9bee47cd2$export$92d9ebaedf6ba994 extends $ddd3cfc9bee47cd2$export$82bb93f974543403 {\n    constructor(template, make){\n        super();\n        Object.defineProperty(this, \"template\", {\n            enumerable: true,\n            configurable: true,\n            writable: true,\n            value: void 0\n        });\n        Object.defineProperty(this, \"make\", {\n            enumerable: true,\n            configurable: true,\n            writable: true,\n            value: void 0\n        });\n        this.template = template;\n        this.make = make;\n    }\n    _dispose() {\n        super._dispose();\n        if (this.autoDispose) this.template.dispose();\n    }\n}\n\n\n\nclass $5e30d142a93206ce$export$dca3b0875bd9a954 extends (0, $ddd3cfc9bee47cd2$export$54c2e3dc7acea9f5) {\n    constructor(container){\n        super();\n        Object.defineProperty(this, \"_disposed\", {\n            enumerable: true,\n            configurable: true,\n            writable: true,\n            value: false\n        });\n        Object.defineProperty(this, \"_container\", {\n            enumerable: true,\n            configurable: true,\n            writable: true,\n            value: void 0\n        });\n        Object.defineProperty(this, \"_events\", {\n            enumerable: true,\n            configurable: true,\n            writable: true,\n            value: void 0\n        });\n        this._container = container;\n        this._events = this.events.onAll((change)=>{\n            if (change.type === \"clear\") $2f30431acd054e2f$export$79b2f7037acddd43(change.oldValues, (x)=>{\n                this._onRemoved(x);\n            });\n            else if (change.type === \"push\") this._onInserted(change.newValue);\n            else if (change.type === \"setIndex\") {\n                this._onRemoved(change.oldValue);\n                this._onInserted(change.newValue, change.index);\n            } else if (change.type === \"insertIndex\") this._onInserted(change.newValue, change.index);\n            else if (change.type === \"removeIndex\") this._onRemoved(change.oldValue);\n            else if (change.type === \"moveIndex\") {\n                this._onRemoved(change.value);\n                this._onInserted(change.value, change.newIndex);\n            } else throw new Error(\"Unknown IListEvent type\");\n        });\n    }\n    _onInserted(child, index) {\n        child._setParent(this._container, true);\n        const childrenDisplay = this._container._childrenDisplay;\n        if (index === undefined) childrenDisplay.addChild(child._display);\n        else childrenDisplay.addChildAt(child._display, index);\n    }\n    _onRemoved(child) {\n        this._container._childrenDisplay.removeChild(child._display);\n        this._container.markDirtyBounds();\n        this._container.markDirty();\n    }\n    /**\r\n     * Returns `true` if obejct is disposed.\r\n     */ isDisposed() {\n        return this._disposed;\n    }\n    /**\r\n     * Permanently dispose this object.\r\n     */ dispose() {\n        if (!this._disposed) {\n            this._disposed = true;\n            this._events.dispose();\n            $2f30431acd054e2f$export$79b2f7037acddd43(this.values, (child)=>{\n                child.dispose();\n            });\n        }\n    }\n}\n\n\n/**\r\n * ============================================================================\r\n * MAIN CLASS\r\n * ============================================================================\r\n * @hidden\r\n */ /**\r\n * Represents a relative value (percent).\r\n *\r\n * The Percent object, can be instantiated using two ways:\r\n *\r\n * * Via `new Percent(X)`.\r\n * * Via `am5.percent(X)`.\r\n *\r\n * You can also use shortcut functions for `0%`, `50%`, and `100%`:\r\n * * `am5.p0`\r\n * * `am5.p50`\r\n * * `am5.p100`\r\n */ class $bd0d0c10fd30006b$export$cbc348af47898b5e {\n    /**\r\n     * Constructor.\r\n     *\r\n     * @param percent  Percent value\r\n     */ constructor(percent){\n        /**\r\n         * Value in percent.\r\n         */ Object.defineProperty(this, \"_value\", {\n            enumerable: true,\n            configurable: true,\n            writable: true,\n            value: void 0\n        });\n        this._value = percent;\n    }\n    /**\r\n     * Relative value.\r\n     *\r\n     * E.g. 100% is 1, 50% is 0.5, etc.\r\n     *\r\n     * This is useful to apply transformations to other values. E.g.:\r\n     *\r\n     * ```TypeScript\r\n     * let value = 256;\r\n     * let percent = new am5.p50;\r\n     * console.log(value * percent.value); // outputs 128\r\n     * ```\r\n     * ```JavaScript\r\n     * var value = 256;\r\n     * var percent = new am5.p50;\r\n     * console.log(value * percent.value); // outputs 128\r\n     * ```\r\n     *\r\n     * Alternatively, you can use `am5.percent()` helper function:\r\n     *\r\n     * ```TypeScript\r\n     * let value = 256;\r\n     * let percent = am5.p50;\r\n     * console.log(value * percent.value); // outputs 128\r\n     * ```\r\n     * ```JavaScript\r\n     * var value = 256;\r\n     * var percent = am5.p50;\r\n     * console.log(value * percent.value); // outputs 128\r\n     * ```\r\n     *\r\n     * @readonly\r\n     * @return Relative value\r\n     */ get value() {\n        return this._value / 100;\n    }\n    /**\r\n     * Value in percent.\r\n     *\r\n     * @readonly\r\n     * @return Percent\r\n     */ get percent() {\n        return this._value;\n    }\n    toString() {\n        return \"\" + this._value + \"%\";\n    }\n    interpolate(min, max) {\n        return min + this.value * (max - min);\n    }\n    static normalize(percent, min, max) {\n        if (percent instanceof $bd0d0c10fd30006b$export$cbc348af47898b5e) return percent;\n        else {\n            if (min === max) return new $bd0d0c10fd30006b$export$cbc348af47898b5e(0);\n            else return new $bd0d0c10fd30006b$export$cbc348af47898b5e(Math.min(Math.max((percent - min) * (1 / (max - min)), 0), 1) * 100);\n        }\n    }\n}\nfunction $bd0d0c10fd30006b$export$626336c2cd4b14de(value) {\n    return new $bd0d0c10fd30006b$export$cbc348af47898b5e(value);\n}\nconst $bd0d0c10fd30006b$export$3f300ce68008be7 = $bd0d0c10fd30006b$export$626336c2cd4b14de(0);\nconst $bd0d0c10fd30006b$export$46342ea78d85883c = $bd0d0c10fd30006b$export$626336c2cd4b14de(100);\nconst $bd0d0c10fd30006b$export$888d047b0ce6de72 = $bd0d0c10fd30006b$export$626336c2cd4b14de(50);\nfunction $bd0d0c10fd30006b$export$e50269385c77c348(value) {\n    return value instanceof $bd0d0c10fd30006b$export$cbc348af47898b5e;\n}\n\n\n/******************************************************************************\r\nCopyright (c) Microsoft Corporation.\r\n\r\nPermission to use, copy, modify, and/or distribute this software for any\r\npurpose with or without fee is hereby granted.\r\n\r\nTHE SOFTWARE IS PROVIDED \"AS IS\" AND THE AUTHOR DISCLAIMS ALL WARRANTIES WITH\r\nREGARD TO THIS SOFTWARE INCLUDING ALL IMPLIED WARRANTIES OF MERCHANTABILITY\r\nAND FITNESS. IN NO EVENT SHALL THE AUTHOR BE LIABLE FOR ANY SPECIAL, DIRECT,\r\nINDIRECT, OR CONSEQUENTIAL DAMAGES OR ANY DAMAGES WHATSOEVER RESULTING FROM\r\nLOSS OF USE, DATA OR PROFITS, WHETHER IN AN ACTION OF CONTRACT, NEGLIGENCE OR\r\nOTHER TORTIOUS ACTION, ARISING OUT OF OR IN CONNECTION WITH THE USE OR\r\nPERFORMANCE OF THIS SOFTWARE.\r\n***************************************************************************** */ /* global Reflect, Promise, SuppressedError, Symbol, Iterator */ var $5c96a02c592fcff1$var$extendStatics = function(d, b) {\n    $5c96a02c592fcff1$var$extendStatics = Object.setPrototypeOf || ({\n        __proto__: []\n    }) instanceof Array && function(d, b) {\n        d.__proto__ = b;\n    } || function(d, b) {\n        for(var p in b)if (Object.prototype.hasOwnProperty.call(b, p)) d[p] = b[p];\n    };\n    return $5c96a02c592fcff1$var$extendStatics(d, b);\n};\nfunction $5c96a02c592fcff1$export$a8ba968b8961cb8a(d, b) {\n    if (typeof b !== \"function\" && b !== null) throw new TypeError(\"Class extends value \" + String(b) + \" is not a constructor or null\");\n    $5c96a02c592fcff1$var$extendStatics(d, b);\n    function __() {\n        this.constructor = d;\n    }\n    d.prototype = b === null ? Object.create(b) : (__.prototype = b.prototype, new __());\n}\nvar $5c96a02c592fcff1$export$18ce0697a983be9b = function() {\n    $5c96a02c592fcff1$export$18ce0697a983be9b = Object.assign || function __assign(t) {\n        for(var s, i = 1, n = arguments.length; i < n; i++){\n            s = arguments[i];\n            for(var p in s)if (Object.prototype.hasOwnProperty.call(s, p)) t[p] = s[p];\n        }\n        return t;\n    };\n    return $5c96a02c592fcff1$export$18ce0697a983be9b.apply(this, arguments);\n};\nfunction $5c96a02c592fcff1$export$3c9a16f847548506(s, e) {\n    var t = {};\n    for(var p in s)if (Object.prototype.hasOwnProperty.call(s, p) && e.indexOf(p) < 0) t[p] = s[p];\n    if (s != null && typeof Object.getOwnPropertySymbols === \"function\") {\n        for(var i = 0, p = Object.getOwnPropertySymbols(s); i < p.length; i++)if (e.indexOf(p[i]) < 0 && Object.prototype.propertyIsEnumerable.call(s, p[i])) t[p[i]] = s[p[i]];\n    }\n    return t;\n}\nfunction $5c96a02c592fcff1$export$29e00dfd3077644b(decorators, target, key, desc) {\n    var c = arguments.length, r = c < 3 ? target : desc === null ? desc = Object.getOwnPropertyDescriptor(target, key) : desc, d;\n    if (typeof Reflect === \"object\" && typeof Reflect.decorate === \"function\") r = Reflect.decorate(decorators, target, key, desc);\n    else for(var i = decorators.length - 1; i >= 0; i--)if (d = decorators[i]) r = (c < 3 ? d(r) : c > 3 ? d(target, key, r) : d(target, key)) || r;\n    return c > 3 && r && Object.defineProperty(target, key, r), r;\n}\nfunction $5c96a02c592fcff1$export$d5ad3fd78186038f(paramIndex, decorator) {\n    return function(target, key) {\n        decorator(target, key, paramIndex);\n    };\n}\nfunction $5c96a02c592fcff1$export$3a84e1ae4e97e9b0(ctor, descriptorIn, decorators, contextIn, initializers, extraInitializers) {\n    function accept(f) {\n        if (f !== void 0 && typeof f !== \"function\") throw new TypeError(\"Function expected\");\n        return f;\n    }\n    var kind = contextIn.kind, key = kind === \"getter\" ? \"get\" : kind === \"setter\" ? \"set\" : \"value\";\n    var target = !descriptorIn && ctor ? contextIn[\"static\"] ? ctor : ctor.prototype : null;\n    var descriptor = descriptorIn || (target ? Object.getOwnPropertyDescriptor(target, contextIn.name) : {});\n    var _, done = false;\n    for(var i = decorators.length - 1; i >= 0; i--){\n        var context = {};\n        for(var p in contextIn)context[p] = p === \"access\" ? {} : contextIn[p];\n        for(var p in contextIn.access)context.access[p] = contextIn.access[p];\n        context.addInitializer = function(f) {\n            if (done) throw new TypeError(\"Cannot add initializers after decoration has completed\");\n            extraInitializers.push(accept(f || null));\n        };\n        var result = (0, decorators[i])(kind === \"accessor\" ? {\n            get: descriptor.get,\n            set: descriptor.set\n        } : descriptor[key], context);\n        if (kind === \"accessor\") {\n            if (result === void 0) continue;\n            if (result === null || typeof result !== \"object\") throw new TypeError(\"Object expected\");\n            if (_ = accept(result.get)) descriptor.get = _;\n            if (_ = accept(result.set)) descriptor.set = _;\n            if (_ = accept(result.init)) initializers.unshift(_);\n        } else if (_ = accept(result)) {\n            if (kind === \"field\") initializers.unshift(_);\n            else descriptor[key] = _;\n        }\n    }\n    if (target) Object.defineProperty(target, contextIn.name, descriptor);\n    done = true;\n}\nfunction $5c96a02c592fcff1$export$d831c04e792af3d(thisArg, initializers, value) {\n    var useValue = arguments.length > 2;\n    for(var i = 0; i < initializers.length; i++)value = useValue ? initializers[i].call(thisArg, value) : initializers[i].call(thisArg);\n    return useValue ? value : void 0;\n}\nfunction $5c96a02c592fcff1$export$6a2a36740a146cb8(x) {\n    return typeof x === \"symbol\" ? x : \"\".concat(x);\n}\nfunction $5c96a02c592fcff1$export$d1a06452d3489bc7(f, name, prefix) {\n    if (typeof name === \"symbol\") name = name.description ? \"[\".concat(name.description, \"]\") : \"\";\n    return Object.defineProperty(f, \"name\", {\n        configurable: true,\n        value: prefix ? \"\".concat(prefix, \" \", name) : name\n    });\n}\nfunction $5c96a02c592fcff1$export$f1db080c865becb9(metadataKey, metadataValue) {\n    if (typeof Reflect === \"object\" && typeof Reflect.metadata === \"function\") return Reflect.metadata(metadataKey, metadataValue);\n}\nfunction $5c96a02c592fcff1$export$1050f835b63b671e(thisArg, _arguments, P, generator) {\n    function adopt(value) {\n        return value instanceof P ? value : new P(function(resolve) {\n            resolve(value);\n        });\n    }\n    return new (P || (P = Promise))(function(resolve, reject) {\n        function fulfilled(value) {\n            try {\n                step(generator.next(value));\n            } catch (e) {\n                reject(e);\n            }\n        }\n        function rejected(value) {\n            try {\n                step(generator[\"throw\"](value));\n            } catch (e) {\n                reject(e);\n            }\n        }\n        function step(result) {\n            result.done ? resolve(result.value) : adopt(result.value).then(fulfilled, rejected);\n        }\n        step((generator = generator.apply(thisArg, _arguments || [])).next());\n    });\n}\nfunction $5c96a02c592fcff1$export$67ebef60e6f28a6(thisArg, body) {\n    var _ = {\n        label: 0,\n        sent: function() {\n            if (t[0] & 1) throw t[1];\n            return t[1];\n        },\n        trys: [],\n        ops: []\n    }, f, y, t, g = Object.create((typeof Iterator === \"function\" ? Iterator : Object).prototype);\n    return g.next = verb(0), g[\"throw\"] = verb(1), g[\"return\"] = verb(2), typeof Symbol === \"function\" && (g[Symbol.iterator] = function() {\n        return this;\n    }), g;\n    function verb(n) {\n        return function(v) {\n            return step([\n                n,\n                v\n            ]);\n        };\n    }\n    function step(op) {\n        if (f) throw new TypeError(\"Generator is already executing.\");\n        while(g && (g = 0, op[0] && (_ = 0)), _)try {\n            if (f = 1, y && (t = op[0] & 2 ? y[\"return\"] : op[0] ? y[\"throw\"] || ((t = y[\"return\"]) && t.call(y), 0) : y.next) && !(t = t.call(y, op[1])).done) return t;\n            if (y = 0, t) op = [\n                op[0] & 2,\n                t.value\n            ];\n            switch(op[0]){\n                case 0:\n                case 1:\n                    t = op;\n                    break;\n                case 4:\n                    _.label++;\n                    return {\n                        value: op[1],\n                        done: false\n                    };\n                case 5:\n                    _.label++;\n                    y = op[1];\n                    op = [\n                        0\n                    ];\n                    continue;\n                case 7:\n                    op = _.ops.pop();\n                    _.trys.pop();\n                    continue;\n                default:\n                    if (!(t = _.trys, t = t.length > 0 && t[t.length - 1]) && (op[0] === 6 || op[0] === 2)) {\n                        _ = 0;\n                        continue;\n                    }\n                    if (op[0] === 3 && (!t || op[1] > t[0] && op[1] < t[3])) {\n                        _.label = op[1];\n                        break;\n                    }\n                    if (op[0] === 6 && _.label < t[1]) {\n                        _.label = t[1];\n                        t = op;\n                        break;\n                    }\n                    if (t && _.label < t[2]) {\n                        _.label = t[2];\n                        _.ops.push(op);\n                        break;\n                    }\n                    if (t[2]) _.ops.pop();\n                    _.trys.pop();\n                    continue;\n            }\n            op = body.call(thisArg, _);\n        } catch (e) {\n            op = [\n                6,\n                e\n            ];\n            y = 0;\n        } finally{\n            f = t = 0;\n        }\n        if (op[0] & 5) throw op[1];\n        return {\n            value: op[0] ? op[1] : void 0,\n            done: true\n        };\n    }\n}\nvar $5c96a02c592fcff1$export$45d3717a4c69092e = Object.create ? function(o, m, k, k2) {\n    if (k2 === undefined) k2 = k;\n    var desc = Object.getOwnPropertyDescriptor(m, k);\n    if (!desc || (\"get\" in desc ? !m.__esModule : desc.writable || desc.configurable)) desc = {\n        enumerable: true,\n        get: function() {\n            return m[k];\n        }\n    };\n    Object.defineProperty(o, k2, desc);\n} : function(o, m, k, k2) {\n    if (k2 === undefined) k2 = k;\n    o[k2] = m[k];\n};\nfunction $5c96a02c592fcff1$export$f33643c0debef087(m, o) {\n    for(var p in m)if (p !== \"default\" && !Object.prototype.hasOwnProperty.call(o, p)) $5c96a02c592fcff1$export$45d3717a4c69092e(o, m, p);\n}\nfunction $5c96a02c592fcff1$export$19a8beecd37a4c45(o) {\n    var s = typeof Symbol === \"function\" && Symbol.iterator, m = s && o[s], i = 0;\n    if (m) return m.call(o);\n    if (o && typeof o.length === \"number\") return {\n        next: function() {\n            if (o && i >= o.length) o = void 0;\n            return {\n                value: o && o[i++],\n                done: !o\n            };\n        }\n    };\n    throw new TypeError(s ? \"Object is not iterable.\" : \"Symbol.iterator is not defined.\");\n}\nfunction $5c96a02c592fcff1$export$8d051b38c9118094(o, n) {\n    var m = typeof Symbol === \"function\" && o[Symbol.iterator];\n    if (!m) return o;\n    var i = m.call(o), r, ar = [], e;\n    try {\n        while((n === void 0 || n-- > 0) && !(r = i.next()).done)ar.push(r.value);\n    } catch (error) {\n        e = {\n            error: error\n        };\n    } finally{\n        try {\n            if (r && !r.done && (m = i[\"return\"])) m.call(i);\n        } finally{\n            if (e) throw e.error;\n        }\n    }\n    return ar;\n}\nfunction $5c96a02c592fcff1$export$afc72e2116322959() {\n    for(var ar = [], i = 0; i < arguments.length; i++)ar = ar.concat($5c96a02c592fcff1$export$8d051b38c9118094(arguments[i]));\n    return ar;\n}\nfunction $5c96a02c592fcff1$export$6388937ca91ccae8() {\n    for(var s = 0, i = 0, il = arguments.length; i < il; i++)s += arguments[i].length;\n    for(var r = Array(s), k = 0, i = 0; i < il; i++)for(var a = arguments[i], j = 0, jl = a.length; j < jl; j++, k++)r[k] = a[j];\n    return r;\n}\nfunction $5c96a02c592fcff1$export$1216008129fb82ed(to, from, pack) {\n    if (pack || arguments.length === 2) {\n        for(var i = 0, l = from.length, ar; i < l; i++)if (ar || !(i in from)) {\n            if (!ar) ar = Array.prototype.slice.call(from, 0, i);\n            ar[i] = from[i];\n        }\n    }\n    return to.concat(ar || Array.prototype.slice.call(from));\n}\nfunction $5c96a02c592fcff1$export$10c90e4f7922046c(v) {\n    return this instanceof $5c96a02c592fcff1$export$10c90e4f7922046c ? (this.v = v, this) : new $5c96a02c592fcff1$export$10c90e4f7922046c(v);\n}\nfunction $5c96a02c592fcff1$export$e427f37a30a4de9b(thisArg, _arguments, generator) {\n    if (!Symbol.asyncIterator) throw new TypeError(\"Symbol.asyncIterator is not defined.\");\n    var g = generator.apply(thisArg, _arguments || []), i, q = [];\n    return i = Object.create((typeof AsyncIterator === \"function\" ? AsyncIterator : Object).prototype), verb(\"next\"), verb(\"throw\"), verb(\"return\", awaitReturn), i[Symbol.asyncIterator] = function() {\n        return this;\n    }, i;\n    function awaitReturn(f) {\n        return function(v) {\n            return Promise.resolve(v).then(f, reject);\n        };\n    }\n    function verb(n, f) {\n        if (g[n]) {\n            i[n] = function(v) {\n                return new Promise(function(a, b) {\n                    q.push([\n                        n,\n                        v,\n                        a,\n                        b\n                    ]) > 1 || resume(n, v);\n                });\n            };\n            if (f) i[n] = f(i[n]);\n        }\n    }\n    function resume(n, v) {\n        try {\n            step(g[n](v));\n        } catch (e) {\n            settle(q[0][3], e);\n        }\n    }\n    function step(r) {\n        r.value instanceof $5c96a02c592fcff1$export$10c90e4f7922046c ? Promise.resolve(r.value.v).then(fulfill, reject) : settle(q[0][2], r);\n    }\n    function fulfill(value) {\n        resume(\"next\", value);\n    }\n    function reject(value) {\n        resume(\"throw\", value);\n    }\n    function settle(f, v) {\n        if (f(v), q.shift(), q.length) resume(q[0][0], q[0][1]);\n    }\n}\nfunction $5c96a02c592fcff1$export$bbd80228419bb833(o) {\n    var i, p;\n    return i = {}, verb(\"next\"), verb(\"throw\", function(e) {\n        throw e;\n    }), verb(\"return\"), i[Symbol.iterator] = function() {\n        return this;\n    }, i;\n    function verb(n, f) {\n        i[n] = o[n] ? function(v) {\n            return (p = !p) ? {\n                value: $5c96a02c592fcff1$export$10c90e4f7922046c(o[n](v)),\n                done: false\n            } : f ? f(v) : v;\n        } : f;\n    }\n}\nfunction $5c96a02c592fcff1$export$e3b29a3d6162315f(o) {\n    if (!Symbol.asyncIterator) throw new TypeError(\"Symbol.asyncIterator is not defined.\");\n    var m = o[Symbol.asyncIterator], i;\n    return m ? m.call(o) : (o = typeof $5c96a02c592fcff1$export$19a8beecd37a4c45 === \"function\" ? $5c96a02c592fcff1$export$19a8beecd37a4c45(o) : o[Symbol.iterator](), i = {}, verb(\"next\"), verb(\"throw\"), verb(\"return\"), i[Symbol.asyncIterator] = function() {\n        return this;\n    }, i);\n    function verb(n) {\n        i[n] = o[n] && function(v) {\n            return new Promise(function(resolve, reject) {\n                v = o[n](v), settle(resolve, reject, v.done, v.value);\n            });\n        };\n    }\n    function settle(resolve, reject, d, v) {\n        Promise.resolve(v).then(function(v) {\n            resolve({\n                value: v,\n                done: d\n            });\n        }, reject);\n    }\n}\nfunction $5c96a02c592fcff1$export$4fb47efe1390b86f(cooked, raw) {\n    if (Object.defineProperty) Object.defineProperty(cooked, \"raw\", {\n        value: raw\n    });\n    else cooked.raw = raw;\n    return cooked;\n}\nvar $5c96a02c592fcff1$var$__setModuleDefault = Object.create ? function(o, v) {\n    Object.defineProperty(o, \"default\", {\n        enumerable: true,\n        value: v\n    });\n} : function(o, v) {\n    o[\"default\"] = v;\n};\nvar $5c96a02c592fcff1$var$ownKeys = function(o) {\n    $5c96a02c592fcff1$var$ownKeys = Object.getOwnPropertyNames || function(o) {\n        var ar = [];\n        for(var k in o)if (Object.prototype.hasOwnProperty.call(o, k)) ar[ar.length] = k;\n        return ar;\n    };\n    return $5c96a02c592fcff1$var$ownKeys(o);\n};\nfunction $5c96a02c592fcff1$export$c21735bcef00d192(mod) {\n    if (mod && mod.__esModule) return mod;\n    var result = {};\n    if (mod != null) {\n        for(var k = $5c96a02c592fcff1$var$ownKeys(mod), i = 0; i < k.length; i++)if (k[i] !== \"default\") $5c96a02c592fcff1$export$45d3717a4c69092e(result, mod, k[i]);\n    }\n    $5c96a02c592fcff1$var$__setModuleDefault(result, mod);\n    return result;\n}\nfunction $5c96a02c592fcff1$export$da59b14a69baef04(mod) {\n    return mod && mod.__esModule ? mod : {\n        default: mod\n    };\n}\nfunction $5c96a02c592fcff1$export$d5dcaf168c640c35(receiver, state, kind, f) {\n    if (kind === \"a\" && !f) throw new TypeError(\"Private accessor was defined without a getter\");\n    if (typeof state === \"function\" ? receiver !== state || !f : !state.has(receiver)) throw new TypeError(\"Cannot read private member from an object whose class did not declare it\");\n    return kind === \"m\" ? f : kind === \"a\" ? f.call(receiver) : f ? f.value : state.get(receiver);\n}\nfunction $5c96a02c592fcff1$export$d40a35129aaff81f(receiver, state, value, kind, f) {\n    if (kind === \"m\") throw new TypeError(\"Private method is not writable\");\n    if (kind === \"a\" && !f) throw new TypeError(\"Private accessor was defined without a setter\");\n    if (typeof state === \"function\" ? receiver !== state || !f : !state.has(receiver)) throw new TypeError(\"Cannot write private member to an object whose class did not declare it\");\n    return kind === \"a\" ? f.call(receiver, value) : f ? f.value = value : state.set(receiver, value), value;\n}\nfunction $5c96a02c592fcff1$export$81fdc39f203e4e04(state, receiver) {\n    if (receiver === null || typeof receiver !== \"object\" && typeof receiver !== \"function\") throw new TypeError(\"Cannot use 'in' operator on non-object\");\n    return typeof state === \"function\" ? receiver === state : state.has(receiver);\n}\nfunction $5c96a02c592fcff1$export$88ac25d8e944e405(env, value, async) {\n    if (value !== null && value !== void 0) {\n        if (typeof value !== \"object\" && typeof value !== \"function\") throw new TypeError(\"Object expected.\");\n        var dispose, inner;\n        if (async) {\n            if (!Symbol.asyncDispose) throw new TypeError(\"Symbol.asyncDispose is not defined.\");\n            dispose = value[Symbol.asyncDispose];\n        }\n        if (dispose === void 0) {\n            if (!Symbol.dispose) throw new TypeError(\"Symbol.dispose is not defined.\");\n            dispose = value[Symbol.dispose];\n            if (async) inner = dispose;\n        }\n        if (typeof dispose !== \"function\") throw new TypeError(\"Object not disposable.\");\n        if (inner) dispose = function() {\n            try {\n                inner.call(this);\n            } catch (e) {\n                return Promise.reject(e);\n            }\n        };\n        env.stack.push({\n            value: value,\n            dispose: dispose,\n            async: async\n        });\n    } else if (async) env.stack.push({\n        async: true\n    });\n    return value;\n}\nvar $5c96a02c592fcff1$var$_SuppressedError = typeof SuppressedError === \"function\" ? SuppressedError : function(error, suppressed, message) {\n    var e = new Error(message);\n    return e.name = \"SuppressedError\", e.error = error, e.suppressed = suppressed, e;\n};\nfunction $5c96a02c592fcff1$export$8f076105dc360e92(env) {\n    function fail(e) {\n        env.error = env.hasError ? new $5c96a02c592fcff1$var$_SuppressedError(e, env.error, \"An error was suppressed during disposal.\") : e;\n        env.hasError = true;\n    }\n    var r, s = 0;\n    function next() {\n        while(r = env.stack.pop())try {\n            if (!r.async && s === 1) return s = 0, env.stack.push(r), Promise.resolve().then(next);\n            if (r.dispose) {\n                var result = r.dispose.call(r.value);\n                if (r.async) return s |= 2, Promise.resolve(result).then(next, function(e) {\n                    fail(e);\n                    return next();\n                });\n            } else s |= 1;\n        } catch (e) {\n            fail(e);\n        }\n        if (s === 1) return env.hasError ? Promise.reject(env.error) : Promise.resolve();\n        if (env.hasError) throw env.error;\n    }\n    return next();\n}\nfunction $5c96a02c592fcff1$export$889dfb5d17574b0b(path, preserveJsx) {\n    if (typeof path === \"string\" && /^\\.\\.?\\//.test(path)) return path.replace(/\\.(tsx)$|((?:\\.d)?)((?:\\.[^./]+?)?)\\.([cm]?)ts$/i, function(m, tsx, d, ext, cm) {\n        return tsx ? preserveJsx ? \".jsx\" : \".js\" : d && (!ext || !cm) ? m : d + ext + \".\" + cm.toLowerCase() + \"js\";\n    });\n    return path;\n}\nvar $5c96a02c592fcff1$export$2e2bcd8739ae039 = {\n    __extends: $5c96a02c592fcff1$export$a8ba968b8961cb8a,\n    __assign: $5c96a02c592fcff1$export$18ce0697a983be9b,\n    __rest: $5c96a02c592fcff1$export$3c9a16f847548506,\n    __decorate: $5c96a02c592fcff1$export$29e00dfd3077644b,\n    __param: $5c96a02c592fcff1$export$d5ad3fd78186038f,\n    __esDecorate: $5c96a02c592fcff1$export$3a84e1ae4e97e9b0,\n    __runInitializers: $5c96a02c592fcff1$export$d831c04e792af3d,\n    __propKey: $5c96a02c592fcff1$export$6a2a36740a146cb8,\n    __setFunctionName: $5c96a02c592fcff1$export$d1a06452d3489bc7,\n    __metadata: $5c96a02c592fcff1$export$f1db080c865becb9,\n    __awaiter: $5c96a02c592fcff1$export$1050f835b63b671e,\n    __generator: $5c96a02c592fcff1$export$67ebef60e6f28a6,\n    __createBinding: $5c96a02c592fcff1$export$45d3717a4c69092e,\n    __exportStar: $5c96a02c592fcff1$export$f33643c0debef087,\n    __values: $5c96a02c592fcff1$export$19a8beecd37a4c45,\n    __read: $5c96a02c592fcff1$export$8d051b38c9118094,\n    __spread: $5c96a02c592fcff1$export$afc72e2116322959,\n    __spreadArrays: $5c96a02c592fcff1$export$6388937ca91ccae8,\n    __spreadArray: $5c96a02c592fcff1$export$1216008129fb82ed,\n    __await: $5c96a02c592fcff1$export$10c90e4f7922046c,\n    __asyncGenerator: $5c96a02c592fcff1$export$e427f37a30a4de9b,\n    __asyncDelegator: $5c96a02c592fcff1$export$bbd80228419bb833,\n    __asyncValues: $5c96a02c592fcff1$export$e3b29a3d6162315f,\n    __makeTemplateObject: $5c96a02c592fcff1$export$4fb47efe1390b86f,\n    __importStar: $5c96a02c592fcff1$export$c21735bcef00d192,\n    __importDefault: $5c96a02c592fcff1$export$da59b14a69baef04,\n    __classPrivateFieldGet: $5c96a02c592fcff1$export$d5dcaf168c640c35,\n    __classPrivateFieldSet: $5c96a02c592fcff1$export$d40a35129aaff81f,\n    __classPrivateFieldIn: $5c96a02c592fcff1$export$81fdc39f203e4e04,\n    __addDisposableResource: $5c96a02c592fcff1$export$88ac25d8e944e405,\n    __disposeResources: $5c96a02c592fcff1$export$8f076105dc360e92,\n    __rewriteRelativeImportExtension: $5c96a02c592fcff1$export$889dfb5d17574b0b\n};\n\n\n\n\n\n\n\n\n\n\nfunction $e66f9343b5144e1a$export$ed97f33186d4b816(object) {\n    return Object.keys(object);\n}\nfunction $e66f9343b5144e1a$export$dc3913a2a38a46a4(object, order) {\n    return $e66f9343b5144e1a$export$ed97f33186d4b816(object).sort(order);\n}\nfunction $e66f9343b5144e1a$export$784d13d8ee351f07(object) {\n    return Object.assign({}, object);\n}\nfunction $e66f9343b5144e1a$export$79b2f7037acddd43(object, f) {\n    $e66f9343b5144e1a$export$ed97f33186d4b816(object).forEach((key)=>{\n        f(key, object[key]);\n    });\n}\nfunction $e66f9343b5144e1a$export$1e016427912bfd78(object, fn) {\n    for(let key in object)if ($e66f9343b5144e1a$export$94df19ecb868bc1a(object, key)) {\n        if (!fn(key, object[key])) break;\n    }\n}\nfunction $e66f9343b5144e1a$export$f0e38b9506e07ad4(object, fn, ord) {\n    $2f30431acd054e2f$export$79b2f7037acddd43($e66f9343b5144e1a$export$dc3913a2a38a46a4(object, ord), (key)=>{\n        fn(key, object[key]);\n    });\n}\nfunction $e66f9343b5144e1a$export$94df19ecb868bc1a(object, key) {\n    return ({}).hasOwnProperty.call(object, key);\n}\nfunction $e66f9343b5144e1a$export$b3c97e0cc54202d1(source, target) {\n    $e66f9343b5144e1a$export$79b2f7037acddd43(source, (key, value)=>{\n        // only if value is set\n        //if ($type.hasValue(value) && !($type.hasValue((<any>target)[key]))) {\n        if (value != null && target[key] == null) target[key] = value;\n    });\n    return target;\n}\n\n\n\nfunction $05b1b40b69b15016$export$28ee1007e174a2a6(f) {\n    if (document.readyState !== \"loading\") f();\n    else {\n        const listener = ()=>{\n            if (document.readyState !== \"loading\") {\n                document.removeEventListener(\"readystatechange\", listener);\n                f();\n            }\n        };\n        document.addEventListener(\"readystatechange\", listener);\n    }\n}\nfunction $05b1b40b69b15016$export$f883456a56996078(el) {\n    if (el.parentNode) el.parentNode.removeChild(el);\n}\nfunction $05b1b40b69b15016$export$3f65cefe8380dbea(dom, type, listener, options) {\n    //@todo proper type check for options: EventListenerOptions | boolean (TS for some reason gives error on passive parameter)\n    dom.addEventListener(type, listener, options || false);\n    return new (0, $a363f66303166aa1$export$6039fc6176d96e35)(()=>{\n        dom.removeEventListener(type, listener, options || false);\n    });\n}\nfunction $05b1b40b69b15016$export$6981aa66c6e2c48d(listener) {\n    // TODO use matchMedia instead ?\n    return $05b1b40b69b15016$export$3f65cefe8380dbea(window, \"resize\", (_ev)=>{\n        listener();\n    });\n}\nfunction $05b1b40b69b15016$export$cde6a56f9669daf6(cap) {\n    switch(cap){\n        case \"touchevents\":\n            //return \"ontouchstart\" in document.documentElement;\n            return window.hasOwnProperty(\"TouchEvent\");\n        case \"pointerevents\":\n            return window.hasOwnProperty(\"PointerEvent\");\n        case \"mouseevents\":\n            return window.hasOwnProperty(\"MouseEvent\");\n        case \"wheelevents\":\n            return window.hasOwnProperty(\"WheelEvent\");\n        case \"keyboardevents\":\n            return window.hasOwnProperty(\"KeyboardEvent\");\n    }\n    return false;\n}\nfunction $05b1b40b69b15016$export$a845ff6c553b3014(event) {\n    let id = event.pointerId || 0;\n    return id;\n}\nfunction $05b1b40b69b15016$export$2cc7ff91bcacba5e() {\n    if (document.activeElement && document.activeElement != document.body) {\n        if (document.activeElement.blur) document.activeElement.blur();\n        else {\n            let input = document.createElement(\"button\");\n            input.style.position = \"fixed\";\n            input.style.top = \"0px\";\n            input.style.left = \"-10000px\";\n            document.body.appendChild(input);\n            input.focus();\n            input.blur();\n            document.body.removeChild(input);\n        }\n    }\n}\nfunction $05b1b40b69b15016$export$d7ddd398f22d79ef(el) {\n    if (el) el.focus();\n}\nfunction $05b1b40b69b15016$export$e9a3efe7940d0764(key) {\n    if ($05b1b40b69b15016$export$cde6a56f9669daf6(\"pointerevents\")) return key;\n    else if ($05b1b40b69b15016$export$cde6a56f9669daf6(\"touchevents\")) switch(key){\n        case \"pointerover\":\n            return \"touchstart\";\n        case \"pointerout\":\n            return \"touchend\";\n        case \"pointerleave\":\n            return \"touchend\";\n        case \"pointerdown\":\n            return \"touchstart\";\n        case \"pointermove\":\n            return \"touchmove\";\n        case \"pointerup\":\n            return \"touchend\";\n        case \"click\":\n            return \"click\";\n        case \"dblclick\":\n            return \"dblclick\";\n    }\n    else if ($05b1b40b69b15016$export$cde6a56f9669daf6(\"mouseevents\")) switch(key){\n        case \"pointerover\":\n            return \"mouseover\";\n        case \"pointerout\":\n            return \"mouseout\";\n        case \"pointerleave\":\n            return \"mouseleave\";\n        case \"pointerdown\":\n            return \"mousedown\";\n        case \"pointermove\":\n            return \"mousemove\";\n        case \"pointerup\":\n            return \"mouseup\";\n        case \"click\":\n            return \"click\";\n        case \"dblclick\":\n            return \"dblclick\";\n    }\n    return key;\n}\nfunction $05b1b40b69b15016$export$c4dfce035d43d1e0(ev) {\n    if (typeof Touch !== \"undefined\" && ev instanceof Touch) return true;\n    else if (typeof PointerEvent !== \"undefined\" && ev instanceof PointerEvent && ev.pointerType != null) switch(ev.pointerType){\n        case \"touch\":\n        case \"pen\":\n        case 2:\n            return true;\n        case \"mouse\":\n        case 4:\n            return false;\n        default:\n            return !(ev instanceof MouseEvent);\n    }\n    else if (ev.type != null) {\n        if (ev.type.match(/^mouse/)) return false;\n    }\n    return true;\n}\nfunction $05b1b40b69b15016$export$37a5fde709c1db82(dom, property, value) {\n    dom.style[property] = value;\n}\nfunction $05b1b40b69b15016$export$3d2f074408bd1b82(dom, property) {\n    return dom.style[property];\n}\nfunction $05b1b40b69b15016$export$e58f029f0fbfdb29(event) {\n    if (event.composedPath) {\n        const path = event.composedPath();\n        if (path.length === 0) return null;\n        else return path[0];\n    } else return event.target;\n}\nfunction $05b1b40b69b15016$export$2344b14b097df817(a, b) {\n    let cursor = b;\n    while(true){\n        if (a === cursor) return true;\n        else if (cursor.parentNode === null) {\n            // TODO better ShadowRoot detection\n            if (cursor.host == null) return false;\n            else cursor = cursor.host;\n        } else cursor = cursor.parentNode;\n    }\n}\nfunction $05b1b40b69b15016$export$a3b96849d75e4c53(event, target) {\n    return event.target && $05b1b40b69b15016$export$2344b14b097df817(target.root.dom, event.target);\n}\nfunction $05b1b40b69b15016$export$2dc32695cee26cb(target, interactive) {\n    if (interactive) target.style.pointerEvents = \"auto\";\n    else target.style.pointerEvents = \"none\";\n}\nfunction $05b1b40b69b15016$export$f7a7490116b79d4d(event) {\n    if (event.key !== undefined) return event.key;\n    switch(event.keyCode){\n        case 9:\n            return \"Tab\";\n        case 13:\n            return \"Enter\";\n        case 16:\n            return \"Shift\";\n        case 17:\n            return \"Control\";\n        case 27:\n            return \"Escape\";\n        case 32:\n            return \" \";\n        case 37:\n            return \"ArrowLeft\";\n        case 38:\n            return \"ArrowUp\";\n        case 39:\n            return \"ArrowRight\";\n        case 40:\n            return \"ArrowDown\";\n        case 46:\n            return \"Delete\";\n    }\n    return \"\" + event.keyCode;\n}\nfunction $05b1b40b69b15016$export$70e8259662bb498b(a) {\n    let cursor = a;\n    while(true)if (cursor.parentNode === null) {\n        // TODO better ShadowRoot detection\n        if (cursor.host != null) return cursor;\n        else return null;\n    } else cursor = cursor.parentNode;\n}\n/**\r\n * [rootStylesheet description]\r\n *\r\n * @ignore Exclude from docs\r\n * @todo Description\r\n */ let $05b1b40b69b15016$var$rootStylesheet;\n/**\r\n * @ignore Exclude from docs\r\n */ function $05b1b40b69b15016$var$createStylesheet(element, text, nonce = \"\") {\n    // TODO use createElementNS ?\n    const e = document.createElement(\"style\");\n    e.type = \"text/css\";\n    if (nonce != \"\") e.setAttribute(\"nonce\", nonce);\n    e.textContent = text;\n    if (element === null) document.head.appendChild(e);\n    else element.appendChild(e);\n    return e;\n}\n/**\r\n * [getStylesheet description]\r\n *\r\n * @ignore Exclude from docs\r\n * @todo Description\r\n * @return [description]\r\n */ function $05b1b40b69b15016$var$getStylesheet(element, nonce = \"\") {\n    if (element === null) {\n        if ($05b1b40b69b15016$var$rootStylesheet == null) {\n            // TODO use createElementNS ?\n            const e = document.createElement(\"style\");\n            e.type = \"text/css\";\n            if (nonce != \"\") e.setAttribute(\"nonce\", nonce);\n            document.head.appendChild(e);\n            $05b1b40b69b15016$var$rootStylesheet = e.sheet;\n        }\n        return $05b1b40b69b15016$var$rootStylesheet;\n    } else {\n        // TODO use createElementNS ?\n        const e = document.createElement(\"style\");\n        e.type = \"text/css\";\n        if (nonce != \"\") e.setAttribute(\"nonce\", nonce);\n        element.appendChild(e);\n        return e.sheet;\n    }\n}\n/**\r\n * [makeStylesheet description]\r\n *\r\n * @ignore Exclude from docs\r\n * @todo Description\r\n * @param selector  [description]\r\n * @return [description]\r\n */ function $05b1b40b69b15016$var$appendStylesheet(root, selector) {\n    const index = root.cssRules.length;\n    root.insertRule(selector + \"{}\", index);\n    return root.cssRules[index];\n}\nclass $05b1b40b69b15016$export$536e5d171422e262 extends (0, $a363f66303166aa1$export$9a67fa5e19f51a52) {\n    /**\r\n     * Constructor.\r\n     *\r\n     * @param selector  CSS selector\r\n     * @param styles    An object of style attribute - value pairs\r\n     */ constructor(element, selector, styles, nonce = \"\"){\n        super();\n        Object.defineProperty(this, \"_root\", {\n            enumerable: true,\n            configurable: true,\n            writable: true,\n            value: void 0\n        });\n        /**\r\n         * CSS rule.\r\n         */ Object.defineProperty(this, \"_rule\", {\n            enumerable: true,\n            configurable: true,\n            writable: true,\n            value: void 0\n        });\n        this._root = $05b1b40b69b15016$var$getStylesheet(element, nonce);\n        try {\n            this._rule = $05b1b40b69b15016$var$appendStylesheet(this._root, selector);\n        } catch (err) {\n            // Create an empty rule on failed selectors\n            this._rule = $05b1b40b69b15016$var$appendStylesheet(this._root, \":not(*)\");\n        }\n        $e66f9343b5144e1a$export$79b2f7037acddd43(styles, (key, value)=>{\n            this.setStyle(key, value);\n        });\n    }\n    /**\r\n     * A CSS selector text.\r\n     *\r\n     * E.g.: `.myClass p`\r\n     *\r\n     * @param selector  CSS selector\r\n     */ set selector(selector) {\n        this._rule.selectorText = selector;\n    }\n    /**\r\n     * @return CSS selector\r\n     */ get selector() {\n        return this._rule.selectorText;\n    }\n    // TODO test this\n    _dispose() {\n        // TODO a bit hacky\n        const index = $2f30431acd054e2f$export$305f7d4e9d4624f2(this._root.cssRules, this._rule);\n        if (index === -1) throw new Error(\"Could not dispose StyleRule\");\n        else // TODO if it's empty remove it from the DOM ?\n        this._root.deleteRule(index);\n    }\n    /**\r\n     * Sets the same style properties with browser-specific prefixes.\r\n     *\r\n     * @param name   Attribute name\r\n     * @param value  Attribute value\r\n     */ _setVendorPrefixName(name, value) {\n        const style = this._rule.style;\n        style.setProperty(\"-webkit-\" + name, value, \"\");\n        style.setProperty(\"-moz-\" + name, value, \"\");\n        style.setProperty(\"-ms-\" + name, value, \"\");\n        style.setProperty(\"-o-\" + name, value, \"\");\n        style.setProperty(name, value, \"\");\n    }\n    /**\r\n     * Sets a value for specific style attribute.\r\n     *\r\n     * @param name   Attribute\r\n     * @param value  Value\r\n     */ setStyle(name, value) {\n        if (name === \"transition\") this._setVendorPrefixName(name, value);\n        else this._rule.style.setProperty(name, value, \"\");\n    }\n}\nclass $05b1b40b69b15016$export$9d753cd7ae895cce extends (0, $a363f66303166aa1$export$9a67fa5e19f51a52) {\n    /**\r\n     * Constructor.\r\n     *\r\n     * @param text  CSS stylesheet\r\n     */ constructor(element, text, nonce = \"\"){\n        super();\n        Object.defineProperty(this, \"_element\", {\n            enumerable: true,\n            configurable: true,\n            writable: true,\n            value: void 0\n        });\n        this._element = $05b1b40b69b15016$var$createStylesheet(element, text, nonce);\n    }\n    _dispose() {\n        if (this._element.parentNode) this._element.parentNode.removeChild(this._element);\n    }\n}\nfunction $05b1b40b69b15016$export$d2cf6cd1dc7067d3(element, className) {\n    if (!element) return;\n    if (element.classList) {\n        const classes = className.split(\" \");\n        $2f30431acd054e2f$export$79b2f7037acddd43(classes, (name)=>{\n            element.classList.add(name);\n        });\n    } else {\n        let currentClassName = element.getAttribute(\"class\");\n        if (currentClassName) element.setAttribute(\"class\", currentClassName.split(\" \").filter((item)=>{\n            return item !== className;\n        }).join(\" \") + \" \" + className);\n        else element.setAttribute(\"class\", className);\n    }\n}\nfunction $05b1b40b69b15016$export$c2255604a80b4506(element, className) {\n    if (!element) return;\n    if (element.classList) element.classList.remove(className);\n    else {\n        let currentClassName = element.getAttribute(\"class\");\n        if (currentClassName) element.setAttribute(\"class\", currentClassName.split(\" \").filter((item)=>{\n            return item !== className;\n        }).join(\" \"));\n    }\n}\nfunction $05b1b40b69b15016$export$d81d0eca22fc682c() {\n    return /apple/i.test(navigator.vendor) && \"ontouchend\" in document;\n}\nfunction $05b1b40b69b15016$export$48067e34605ab48a() {\n    return $05b1b40b69b15016$export$d81d0eca22fc682c() ? 1 : undefined;\n}\nfunction $05b1b40b69b15016$export$302dfacf2b0a56fe(percent, full) {\n    if ($f63bdea45a89cf24$export$7e4aa119212bc614(percent)) return percent;\n    else if (percent != null && $f63bdea45a89cf24$export$7e4aa119212bc614(percent.value) && $f63bdea45a89cf24$export$7e4aa119212bc614(full)) return full * percent.value;\n    else return 0;\n}\nfunction $05b1b40b69b15016$export$4aa4df8b0f34e5d(number) {\n    let match = ('' + number).match(/(?:\\.(\\d+))?(?:[eE]([+-]?\\d+))?$/);\n    if (!match) return 0;\n    return Math.max(0, (match[1] ? match[1].length : 0) - (match[2] ? +match[2] : 0));\n}\nfunction $05b1b40b69b15016$export$e3f9b6bf3780ff6e(value, len = 0, char = \"0\") {\n    if (typeof value !== \"string\") value = value.toString();\n    return len > value.length ? Array(len - value.length + 1).join(char) + value : value;\n}\nfunction $05b1b40b69b15016$export$c5557f40488c48ec(text) {\n    return text.replace(/^[\\s]*/, \"\");\n}\nfunction $05b1b40b69b15016$export$da8e5da96e287379(text) {\n    return text.replace(/[\\s]*$/, \"\");\n}\nfunction $05b1b40b69b15016$export$87c2784dc9fc4ab(text) {\n    return $05b1b40b69b15016$export$c5557f40488c48ec($05b1b40b69b15016$export$da8e5da96e287379(text));\n}\nfunction $05b1b40b69b15016$export$c1942c34655b7385(text, maxLength, breakWords = false, ellipsis = \"...\") {\n    if (text.length > maxLength) {\n        // Find the last non-alphanumeric character before maxLength\n        let lastNonAlphanumericIndex = maxLength - 1;\n        while(lastNonAlphanumericIndex >= 0 && text.charAt(lastNonAlphanumericIndex).match(/\\w/))lastNonAlphanumericIndex--;\n        if (lastNonAlphanumericIndex >= 0 && breakWords == false) return text.substring(0, lastNonAlphanumericIndex + 1) + '...';\n        else // If no non-alphanumeric character found, truncate without breaking words\n        return text.substring(0, maxLength) + ellipsis;\n    } else return text;\n}\nfunction $05b1b40b69b15016$export$f61ac8b6f1f46202(format) {\n    // Undefined?\n    if (typeof format === \"undefined\") return \"string\";\n    // Cleanup and lowercase format\n    format = format.toLowerCase().replace(/^\\[[^\\]]*\\]/, \"\");\n    // Remove style tags\n    format = format.replace(/\\[[^\\]]+\\]/, \"\");\n    // Trim\n    format = format.trim();\n    // Check for any explicit format hints (i.e. /Date)\n    let hints = format.match(/\\/(date|number|duration)$/);\n    if (hints) return hints[1];\n    // Check for explicit hints\n    if (format === \"number\") return \"number\";\n    if (format === \"date\") return \"date\";\n    if (format === \"duration\") return \"duration\";\n    // Detect number formatting symbols\n    if (format.match(/[#0]/)) return \"number\";\n    // Detect date formatting symbols\n    if (format.match(/[ymwdhnsqaxkzgtei]/)) return \"date\";\n    // Nothing? Let's display as string\n    return \"string\";\n}\nfunction $05b1b40b69b15016$export$1261c7bb3da8241a(format) {\n    return format.replace(/\\/(date|number|duration)$/i, \"\");\n}\nfunction $05b1b40b69b15016$export$1fbf6f199c05a66(text) {\n    return text ? text.replace(/<[^>]*>/g, \"\") : text;\n}\nfunction $05b1b40b69b15016$export$8557d5da1ec1c0d8(text) {\n    return text ? $05b1b40b69b15016$export$1fbf6f199c05a66((\"\" + text).replace(/[\\n\\r]+/g, \". \")) : text;\n}\nfunction $05b1b40b69b15016$export$4a325aa52b8c4c19(value) {\n    return value.replace(/[-[\\]{}()*+?.,\\\\^$|#\\s]/g, '\\\\$&');\n}\nfunction $05b1b40b69b15016$export$bf6109b2a75a56f3(str) {\n    let result = \"\";\n    for(let i = 0; i < str.length; i++){\n        const char = str.charAt(i);\n        if (char.toUpperCase() == char && i != 0) result += \" \";\n        result += char;\n    }\n    return result;\n}\nfunction $05b1b40b69b15016$export$d05bbe0328e41cc6(source) {\n    // Regular expression to identify RTL characters\n    const rtlChar = /[\\u0590-\\u05FF\\u0600-\\u06FF\\u0750-\\u077F\\u08A0-\\u08FF\\uFB50-\\uFDFF\\uFE70-\\uFEFF]/;\n    // Regular expression to capture segments ending with specific Arabic characters\n    const splitPattern = /([^اأدذرزو]*[اأدذرزو])/gi;\n    // Split input string into array of words or characters, including whitespace\n    let segments = source.split(/(\\s+)/); // Split by whitespace, capturing it\n    let result = [];\n    segments.forEach((segment)=>{\n        if (segment.match(/^\\s+$/)) {\n            // If the segment is purely whitespace\n            segment = \" \";\n            segment = \"  \";\n            result.push(segment);\n        } else if (rtlChar.test(segment)) {\n            // If the segment contains RTL characters, handle special splits\n            let parts = segment.split(splitPattern).filter((part)=>part !== '');\n            // Concatenate parts processed by the split pattern directly to result\n            result = result.concat(parts);\n        } else // Treat this segment as LTR: split into characters\n        result = result.concat([\n            ...segment\n        ]);\n    });\n    return result;\n}\nfunction $05b1b40b69b15016$export$6f157f7a2f040843(date, utc = false) {\n    // TODO: utc needed?\n    utc;\n    const start = new Date(date.getFullYear(), 0, 0);\n    const diff = date.getTime() - start.getTime() + (start.getTimezoneOffset() - date.getTimezoneOffset()) * 60000;\n    const oneDay = 86400000;\n    return Math.floor(diff / oneDay);\n}\nfunction $05b1b40b69b15016$export$efe19b760242b2fc(date, _utc = false) {\n    const d = new Date(Date.UTC(date.getFullYear(), date.getMonth(), date.getDate()));\n    const day = d.getUTCDay() || 7;\n    d.setUTCDate(d.getUTCDate() + 4 - day);\n    const firstDay = new Date(Date.UTC(d.getUTCFullYear(), 0, 1));\n    return Math.ceil(((d.getTime() - firstDay.getTime()) / 86400000 + 1) / 7);\n}\nfunction $05b1b40b69b15016$export$12d572480ceb6e58(date, _utc = false) {\n    const d = new Date(Date.UTC(date.getFullYear(), date.getMonth(), date.getDate()));\n    const day = d.getUTCDay() || 7;\n    d.setUTCDate(d.getUTCDate() + 4 - day);\n    const firstDay = new Date(Date.UTC(d.getUTCFullYear(), 0, 1));\n    return firstDay.getFullYear();\n}\nfunction $05b1b40b69b15016$export$b533a84e84a6dcfa(date, utc = false) {\n    const firstWeek = $05b1b40b69b15016$export$efe19b760242b2fc(new Date(date.getFullYear(), date.getMonth(), 1), utc);\n    let currentWeek = $05b1b40b69b15016$export$efe19b760242b2fc(date, utc);\n    if (currentWeek == 1) currentWeek = 53;\n    return currentWeek - firstWeek + 1;\n}\nfunction $05b1b40b69b15016$export$c5933b95cf2ffa17(week, year, weekday = 1, utc = false) {\n    let date = new Date(year, 0, 4, 0, 0, 0, 0);\n    if (utc) date.setUTCFullYear(year);\n    let day = week * 7 + weekday - ((date.getDay() || 7) + 3);\n    return day;\n}\nfunction $05b1b40b69b15016$export$6ef1a68df5e98f69(hours, base) {\n    if (hours > 12) hours -= 12;\n    else if (hours === 0) hours = 12;\n    return base != null ? hours + (base - 1) : hours;\n}\nfunction $05b1b40b69b15016$export$c3133dbc11f66777(date, long = false, savings = false, utc = false, timezone) {\n    if (utc) return long ? \"Coordinated Universal Time\" : \"UTC\";\n    else if (timezone) {\n        const d1 = date.toLocaleString(\"en-US\", {\n            timeZone: timezone\n        });\n        const d2 = date.toLocaleString(\"en-US\", {\n            timeZone: timezone,\n            timeZoneName: long ? \"long\" : \"short\"\n        });\n        return $05b1b40b69b15016$export$87c2784dc9fc4ab(d2.substr(d1.length));\n    }\n    let wotz = date.toLocaleString(\"UTC\");\n    let wtz = date.toLocaleString(\"UTC\", {\n        timeZoneName: long ? \"long\" : \"short\"\n    }).substr(wotz.length);\n    //wtz = wtz.replace(/[+-]+[0-9]+$/, \"\");\n    if (savings === false) wtz = wtz.replace(/ (standard|daylight|summer|winter) /i, \" \");\n    return $05b1b40b69b15016$export$87c2784dc9fc4ab(wtz);\n}\nfunction $05b1b40b69b15016$export$4c9db454e2785fd9(timezone) {\n    const date = new Date(Date.UTC(2012, 0, 1, 0, 0, 0, 0));\n    const utcDate = new Date(date.toLocaleString(\"en-US\", {\n        timeZone: \"UTC\"\n    }));\n    const tzDate = new Date(date.toLocaleString(\"en-US\", {\n        timeZone: timezone\n    }));\n    return (tzDate.getTime() - utcDate.getTime()) / 6e4 * -1;\n}\nfunction $05b1b40b69b15016$export$8e831c751a9f504f(text) {\n    return text.charAt(0).toUpperCase() + text.slice(1);\n}\nfunction $05b1b40b69b15016$export$29fb7152bd3f781a(color) {\n    let r, g, b;\n    let h = color.h;\n    let s = color.s;\n    let l = color.l;\n    if (s == 0) r = g = b = l; // achromatic\n    else {\n        let hue2rgb = function hue2rgb(p, q, t) {\n            if (t < 0) t += 1;\n            if (t > 1) t -= 1;\n            if (t < 1 / 6) return p + (q - p) * 6 * t;\n            if (t < 0.5) return q;\n            if (t < 2 / 3) return p + (q - p) * (2 / 3 - t) * 6;\n            return p;\n        };\n        let q = l < 0.5 ? l * (1 + s) : l + s - l * s;\n        let p = 2 * l - q;\n        r = hue2rgb(p, q, h + 1 / 3);\n        g = hue2rgb(p, q, h);\n        b = hue2rgb(p, q, h - 1 / 3);\n    }\n    return {\n        r: Math.round(r * 255),\n        g: Math.round(g * 255),\n        b: Math.round(b * 255)\n    };\n}\nfunction $05b1b40b69b15016$export$c85ca4f4753af384(color) {\n    let r = color.r / 255;\n    let g = color.g / 255;\n    let b = color.b / 255;\n    let max = Math.max(r, g, b);\n    let min = Math.min(r, g, b);\n    let h = 0;\n    let s = 0;\n    let l = (max + min) / 2;\n    if (max === min) h = s = 0; // achromatic\n    else {\n        let d = max - min;\n        s = l > 0.5 ? d / (2 - max - min) : d / (max + min);\n        switch(max){\n            case r:\n                h = (g - b) / d + (g < b ? 6 : 0);\n                break;\n            case g:\n                h = (b - r) / d + 2;\n                break;\n            case b:\n                h = (r - g) / d + 4;\n                break;\n        }\n        h /= 6;\n    }\n    return {\n        h: h,\n        s: s,\n        l: l\n    };\n}\nfunction $05b1b40b69b15016$export$4f0921ab3f4919ce(hsv) {\n    const l = hsv.v * (1 - hsv.s / 2);\n    const s = l === 0 || l === 1 ? 0 : (hsv.v - l) / Math.min(l, 1 - l);\n    return {\n        h: hsv.h,\n        s: s,\n        l: l,\n        a: hsv.a\n    };\n}\nfunction $05b1b40b69b15016$export$eca2dde7f2894edb(hsl) {\n    const v = hsl.l + hsl.s * Math.min(hsl.l, 1 - hsl.l);\n    const s = v === 0 ? 0 : 2 * (1 - hsl.l / v);\n    return {\n        h: hsl.h,\n        s: s,\n        v: v,\n        a: hsl.a\n    };\n}\nfunction $05b1b40b69b15016$export$c0816ed86df316af(rgb, percent) {\n    if (rgb) return {\n        r: Math.max(0, Math.min(255, rgb.r + $05b1b40b69b15016$export$137526ec3f31f69a(rgb.r, percent))),\n        g: Math.max(0, Math.min(255, rgb.g + $05b1b40b69b15016$export$137526ec3f31f69a(rgb.g, percent))),\n        b: Math.max(0, Math.min(255, rgb.b + $05b1b40b69b15016$export$137526ec3f31f69a(rgb.b, percent))),\n        a: rgb.a\n    };\n    else // TODO is this correct ?\n    return rgb;\n}\nfunction $05b1b40b69b15016$export$137526ec3f31f69a(value, percent) {\n    let base = percent > 0 ? 255 - value : value;\n    return Math.round(base * percent);\n}\nfunction $05b1b40b69b15016$export$382cdde3a5b8f440(rgb, percent) {\n    if (rgb) {\n        let base = Math.min(Math.max(rgb.r, rgb.g, rgb.b), 230);\n        //let base = Math.max(rgb.r, rgb.g, rgb.b);\n        let step = $05b1b40b69b15016$export$137526ec3f31f69a(base, percent);\n        return {\n            r: Math.max(0, Math.min(255, Math.round(rgb.r + step))),\n            g: Math.max(0, Math.min(255, Math.round(rgb.g + step))),\n            b: Math.max(0, Math.min(255, Math.round(rgb.b + step))),\n            a: rgb.a\n        };\n    } else // TODO is this correct ?\n    return rgb;\n}\nfunction $05b1b40b69b15016$export$a33f12938beace95(_value, percent) {\n    let base = 255; //percent > 0 ? 255 - value : value;\n    return Math.round(base * percent);\n}\nfunction $05b1b40b69b15016$export$44af652f4cca9039(color) {\n    return (color.r * 299 + color.g * 587 + color.b * 114) / 1000 >= 128;\n}\nfunction $05b1b40b69b15016$export$5fcac96f5a87e3db(rgb, saturation) {\n    if (rgb === undefined || saturation == 1) return rgb;\n    let hsl = $05b1b40b69b15016$export$c85ca4f4753af384(rgb);\n    hsl.s = saturation;\n    return $05b1b40b69b15016$export$29fb7152bd3f781a(hsl);\n}\nfunction $05b1b40b69b15016$export$521a2e6212201f40(color, lightAlternative = {\n    r: 255,\n    g: 255,\n    b: 255\n}, darkAlternative = {\n    r: 255,\n    g: 255,\n    b: 255\n}) {\n    let light = lightAlternative;\n    let dark = darkAlternative;\n    if ($05b1b40b69b15016$export$44af652f4cca9039(darkAlternative)) {\n        light = darkAlternative;\n        dark = lightAlternative;\n    }\n    return $05b1b40b69b15016$export$44af652f4cca9039(color) ? dark : light;\n}\nfunction $05b1b40b69b15016$export$88ad500ef99d1561(tags1, tags2) {\n    if (!tags1) tags1 = [];\n    return [\n        ...tags1,\n        ...tags2\n    ].filter((value, index, self)=>{\n        return self.indexOf(value) === index;\n    });\n}\nfunction $05b1b40b69b15016$export$e514d95a51bdfbdf(a, b) {\n    if (!b) return false;\n    if (a.left != b.left) return false;\n    if (a.right != b.right) return false;\n    if (a.top != b.top) return false;\n    if (a.bottom != b.bottom) return false;\n    return true;\n}\n\n\n\n/**\r\n * @ignore\r\n */ function $389de129b6cd18b1$var$string2hex(string) {\n    //string = cssColorNames[string.toLowerCase()] || string;\n    if (string[0] === \"#\") string = string.substr(1);\n    if (string.length == 3) string = string[0].repeat(2) + string[1].repeat(2) + string[2].repeat(2);\n    return parseInt(string, 16);\n}\nfunction $389de129b6cd18b1$export$4e59d32275d2248b(color) {\n    color = color.replace(/[ ]/g, \"\");\n    // Init\n    let matches = color.match(/^rgb\\(([0-9]*),([0-9]*),([0-9]*)\\)/i);\n    // Try rgb() format\n    if (matches) matches.push(\"1\");\n    else {\n        matches = color.match(/^rgba\\(([0-9]*),([0-9]*),([0-9]*),([.0-9]*)\\)/i);\n        if (!matches) return 0x000000;\n    }\n    let hex = \"\";\n    for(let i = 1; i <= 3; i++){\n        let val = parseInt(matches[i]).toString(16);\n        if (val.length == 1) val = \"0\" + val;\n        hex += val;\n    }\n    return $389de129b6cd18b1$var$string2hex(hex);\n}\nfunction $389de129b6cd18b1$export$35e9368ef982300f(input) {\n    return $389de129b6cd18b1$export$892596cec99bc70e.fromAny(input);\n}\nclass $389de129b6cd18b1$export$892596cec99bc70e {\n    constructor(hex){\n        Object.defineProperty(this, \"_hex\", {\n            enumerable: true,\n            configurable: true,\n            writable: true,\n            value: void 0\n        });\n        this._hex = hex | 0;\n    }\n    /**\r\n     * Color numeric value.\r\n     */ get hex() {\n        return this._hex;\n    }\n    /**\r\n     * Value of color's R channel.\r\n     * @return R value\r\n     */ get r() {\n        return this._hex >>> 16;\n    }\n    /**\r\n     * Value of color's G channel.\r\n     * @return G value\r\n     */ get g() {\n        return this._hex >> 8 & 0xFF;\n    }\n    /**\r\n     * Value of color's B channel.\r\n     * @return B value\r\n     */ get b() {\n        return this._hex & 0xFF;\n    }\n    /**\r\n     * Returns color CSS representation in form of `rgba(r, g, b, a)` string.\r\n     *\r\n     * @param   alpha  Opacity\r\n     * @return         CSS string\r\n     */ toCSS(alpha = 1) {\n        return \"rgba(\" + this.r + \", \" + this.g + \", \" + this.b + \", \" + alpha + \")\";\n    }\n    /**\r\n     * Returns color CSS representation in form of `#rgb` string.\r\n     *\r\n     * @return         CSS string\r\n     */ toCSSHex() {\n        return \"#\" + $05b1b40b69b15016$export$e3f9b6bf3780ff6e(this.r.toString(16), 2) + $05b1b40b69b15016$export$e3f9b6bf3780ff6e(this.g.toString(16), 2) + $05b1b40b69b15016$export$e3f9b6bf3780ff6e(this.b.toString(16), 2);\n    }\n    /**\r\n     * Returns color's HSL info.\r\n     * @param   alpha Opacity\r\n     * @return        HSL info\r\n     */ toHSL(alpha = 1) {\n        return $05b1b40b69b15016$export$c85ca4f4753af384({\n            r: this.r,\n            g: this.g,\n            b: this.b,\n            a: alpha\n        });\n    }\n    /**\r\n     * Converts HSL values into a new [[Color]] object.\r\n     *\r\n     * @param   h H value\r\n     * @param   s S value\r\n     * @param   l L value\r\n     * @return    Color object\r\n     */ static fromHSL(h, s, l) {\n        const rgb = $05b1b40b69b15016$export$29fb7152bd3f781a({\n            h: h,\n            s: s,\n            l: l\n        });\n        return this.fromRGB(rgb.r, rgb.g, rgb.b);\n    }\n    toString() {\n        return this.toCSSHex();\n    }\n    /**\r\n     * Converts hex number into a new [[Color]] object.\r\n     *\r\n     * ```TypeScript\r\n     * Color.fromHex(0xff0000) // red\r\n     * ```\r\n     * ```JavaScript\r\n     * Color.fromHex(0xff0000) // red\r\n     * ```\r\n     *\r\n     * @param   hex  Hex color\r\n     * @return       Color\r\n     */ static fromHex(hex) {\n        return new $389de129b6cd18b1$export$892596cec99bc70e(hex);\n    }\n    /**\r\n     * Converts RGB values to a new [[Color]] object.\r\n     *\r\n     * @param   r  R value\r\n     * @param   g  G value\r\n     * @param   b  B value\r\n     * @return     Color\r\n     */ static fromRGB(r, g, b) {\n        return new $389de129b6cd18b1$export$892596cec99bc70e((b | 0) + (g << 8) + (r << 16));\n    }\n    /**\r\n     * Converts RGB string to a new [[Color]] object.\r\n     *\r\n     * ```TypeScript\r\n     * Color.fromString(\"#ff0000\") // red\r\n     * ```\r\n     * ```JavaScript\r\n     * Color.fromString(\"#ff0000\") // red\r\n     * ```\r\n     *\r\n     * @param   s  RGB string\r\n     * @return     Color\r\n     */ static fromString(s) {\n        return new $389de129b6cd18b1$export$892596cec99bc70e($389de129b6cd18b1$var$string2hex(s));\n    }\n    /**\r\n     * Converts CSS rgba() syntax to a new [[Color]] object.\r\n     *\r\n     * ```TypeScript\r\n     * Color.fromCSS(\"rgba(255, 0, 0, 1)\") // red\r\n     * ```\r\n     * ```JavaScript\r\n     * Color.fromCSS(\"rgba(255, 0, 0, 1)\") // red\r\n     * ```\r\n     *\r\n     * @param  {string} s [description]\r\n     * @return {Color}    [description]\r\n     */ static fromCSS(s) {\n        return new $389de129b6cd18b1$export$892596cec99bc70e($389de129b6cd18b1$export$4e59d32275d2248b(s));\n    }\n    /**\r\n     * Convert to color from virtually anything.\r\n     *\r\n     * Will throw an exception if unable to resolve the color.\r\n     *\r\n     * @param   s  Source\r\n     * @return     Color\r\n     */ static fromAny(s) {\n        if ($f63bdea45a89cf24$export$844ec244b1367d54(s)) {\n            if (s[0] == \"#\") return $389de129b6cd18b1$export$892596cec99bc70e.fromString(s);\n            else if (s.substr(0, 3) == \"rgb\") return $389de129b6cd18b1$export$892596cec99bc70e.fromCSS(s);\n        } else if ($f63bdea45a89cf24$export$7e4aa119212bc614(s)) return $389de129b6cd18b1$export$892596cec99bc70e.fromHex(s);\n        else if (s instanceof $389de129b6cd18b1$export$892596cec99bc70e) return $389de129b6cd18b1$export$892596cec99bc70e.fromHex(s.hex);\n        throw new Error(\"Unknown color syntax: \" + s);\n    }\n    /**\r\n     * Returns a new [[Color]] object based on either `lightAlternative` or\r\n     * `darkAlternative` depending on which one is more contrasting with\r\n     * the `color`.\r\n     *\r\n     * @param   color             Reference color\r\n     * @param   lightAlternative  Light color\r\n     * @param   darkAlternative   Dark color\r\n     * @return                    Alternative color\r\n     */ static alternative(color, lightAlternative, darkAlternative) {\n        const rgb = $05b1b40b69b15016$export$521a2e6212201f40({\n            r: color.r,\n            g: color.g,\n            b: color.b\n        }, lightAlternative ? {\n            r: lightAlternative.r,\n            g: lightAlternative.g,\n            b: lightAlternative.b\n        } : undefined, darkAlternative ? {\n            r: darkAlternative.r,\n            g: darkAlternative.g,\n            b: darkAlternative.b\n        } : undefined);\n        return this.fromRGB(rgb.r, rgb.g, rgb.b);\n    }\n    /**\r\n     * Returns an intermediate Color between two reference colors depending on\r\n     * the progress (`diff`) between the two.\r\n     *\r\n     * @param   diff  Progress\r\n     * @param   from  Source color\r\n     * @param   to    Target color\r\n     * @param   mode  Interpolation mode\r\n     * @return        Color\r\n     */ static interpolate(diff, from, to, mode = \"rgb\") {\n        if (mode == \"hsl\") {\n            const fromHSL = from.toHSL();\n            const toHSL = to.toHSL();\n            return $389de129b6cd18b1$export$892596cec99bc70e.fromHSL((0, $43e0e2dc9c95da4e$export$d02631cccf789723)(diff, fromHSL.h, toHSL.h), (0, $43e0e2dc9c95da4e$export$d02631cccf789723)(diff, fromHSL.s, toHSL.s), (0, $43e0e2dc9c95da4e$export$d02631cccf789723)(diff, fromHSL.l, toHSL.l));\n        } else return $389de129b6cd18b1$export$892596cec99bc70e.fromRGB((0, $43e0e2dc9c95da4e$export$d02631cccf789723)(diff, from.r, to.r), (0, $43e0e2dc9c95da4e$export$d02631cccf789723)(diff, from.g, to.g), (0, $43e0e2dc9c95da4e$export$d02631cccf789723)(diff, from.b, to.b));\n    }\n    /**\r\n     * Returns a new [[Color]] lightened by `percent` value.\r\n     *\r\n     * Use negative value to darken the color.\r\n     *\r\n     * @param   color    Source color\r\n     * @param   percent  Percent\r\n     * @return           New color\r\n     */ static lighten(color, percent) {\n        const rgb = $05b1b40b69b15016$export$c0816ed86df316af({\n            r: color.r,\n            g: color.g,\n            b: color.b\n        }, percent);\n        return $389de129b6cd18b1$export$892596cec99bc70e.fromRGB(rgb.r, rgb.g, rgb.b);\n    }\n    /**\r\n     * Returns a new [[Color]] brightened by `percent` value.\r\n     *\r\n     * Use negative value to dim the color.\r\n     *\r\n     * @param   color    Source color\r\n     * @param   percent  Percent\r\n     * @return           New color\r\n     */ static brighten(color, percent) {\n        const rgb = $05b1b40b69b15016$export$382cdde3a5b8f440({\n            r: color.r,\n            g: color.g,\n            b: color.b\n        }, percent);\n        return $389de129b6cd18b1$export$892596cec99bc70e.fromRGB(rgb.r, rgb.g, rgb.b);\n    }\n    /**\r\n     * Returns a new [[Color]] saturated by `percent` value.\r\n     *\r\n     * Value range is between `0` (fully desaturated), to `1` (full color).\r\n     *\r\n     * @param   color    Source color\r\n     * @param   percent  Percent\r\n     * @return           New color\r\n     */ static saturate(color, percent) {\n        const rgb = $05b1b40b69b15016$export$5fcac96f5a87e3db({\n            r: color.r,\n            g: color.g,\n            b: color.b\n        }, percent);\n        return $389de129b6cd18b1$export$892596cec99bc70e.fromRGB(rgb.r, rgb.g, rgb.b);\n    }\n}\n\n\n\n\nfunction $43e0e2dc9c95da4e$export$5bfdbf456b754132(animations) {\n    return (0, $5c96a02c592fcff1$export$1050f835b63b671e)(this, void 0, void 0, function*() {\n        if (animations !== undefined) {\n            const promises = [];\n            $e66f9343b5144e1a$export$79b2f7037acddd43(animations, (_, animation)=>{\n                promises.push(animation.waitForStop());\n            });\n            yield Promise.all(promises);\n        }\n    });\n}\nfunction $43e0e2dc9c95da4e$export$a3295358bff77e(value, min, max) {\n    if (min === max) return 0;\n    else return Math.min(Math.max((value - min) * (1 / (max - min)), 0), 1);\n}\nfunction $43e0e2dc9c95da4e$export$d02631cccf789723(diff, from, to) {\n    return from + diff * (to - from);\n}\nfunction $43e0e2dc9c95da4e$export$f6bd804b3d805842(diff, from, to) {\n    if (diff >= 1) return to;\n    else return from;\n}\nfunction $43e0e2dc9c95da4e$export$71b5eeb90041857f(diff, from, to) {\n    return new (0, $bd0d0c10fd30006b$export$cbc348af47898b5e)($43e0e2dc9c95da4e$export$d02631cccf789723(diff, from.percent, to.percent));\n}\nfunction $43e0e2dc9c95da4e$export$ac63c65a91c8af0f(diff, from, to) {\n    return (0, $389de129b6cd18b1$export$892596cec99bc70e).interpolate(diff, from, to);\n}\nfunction $43e0e2dc9c95da4e$export$d9af756d8d8c2d47(from, to) {\n    if (typeof from === \"number\" && typeof to === \"number\") return $43e0e2dc9c95da4e$export$d02631cccf789723;\n    if (from instanceof (0, $bd0d0c10fd30006b$export$cbc348af47898b5e) && to instanceof (0, $bd0d0c10fd30006b$export$cbc348af47898b5e)) return $43e0e2dc9c95da4e$export$71b5eeb90041857f;\n    if (from instanceof (0, $389de129b6cd18b1$export$892596cec99bc70e) && to instanceof (0, $389de129b6cd18b1$export$892596cec99bc70e)) return $43e0e2dc9c95da4e$export$ac63c65a91c8af0f;\n    return $43e0e2dc9c95da4e$export$f6bd804b3d805842;\n}\nvar $43e0e2dc9c95da4e$export$d0f7a26c90cc1562;\n(function(AnimationState) {\n    AnimationState[AnimationState[\"Stopped\"] = 0] = \"Stopped\";\n    AnimationState[AnimationState[\"Playing\"] = 1] = \"Playing\";\n    AnimationState[AnimationState[\"Paused\"] = 2] = \"Paused\";\n})($43e0e2dc9c95da4e$export$d0f7a26c90cc1562 || ($43e0e2dc9c95da4e$export$d0f7a26c90cc1562 = {}));\nclass $43e0e2dc9c95da4e$export$2846a69d90825eae {\n    constructor(entity, duration){\n        Object.defineProperty(this, \"_entity\", {\n            enumerable: true,\n            configurable: true,\n            writable: true,\n            value: void 0\n        });\n        Object.defineProperty(this, \"_duration\", {\n            enumerable: true,\n            configurable: true,\n            writable: true,\n            value: void 0\n        });\n        Object.defineProperty(this, \"_playingDuration\", {\n            enumerable: true,\n            configurable: true,\n            writable: true,\n            value: null\n        });\n        Object.defineProperty(this, \"_startingTime\", {\n            enumerable: true,\n            configurable: true,\n            writable: true,\n            value: null\n        });\n        Object.defineProperty(this, \"_current\", {\n            enumerable: true,\n            configurable: true,\n            writable: true,\n            value: 0\n        });\n        Object.defineProperty(this, \"_from\", {\n            enumerable: true,\n            configurable: true,\n            writable: true,\n            value: 0\n        });\n        Object.defineProperty(this, \"_to\", {\n            enumerable: true,\n            configurable: true,\n            writable: true,\n            value: 0\n        });\n        Object.defineProperty(this, \"events\", {\n            enumerable: true,\n            configurable: true,\n            writable: true,\n            value: new (0, $7e417cbab1b21893$export$ec8b666c5fe2c75a)()\n        });\n        Object.defineProperty(this, \"easing\", {\n            enumerable: true,\n            configurable: true,\n            writable: true,\n            value: void 0\n        });\n        this._entity = entity;\n        this._duration = duration;\n    }\n    _stopEvent() {\n        const type = \"stopped\";\n        if (this.events.isEnabled(type)) this.events.dispatch(type, {\n            type: type,\n            target: this\n        });\n    }\n    _runAnimation(currentTime) {\n        if (this._playingDuration !== null) {\n            if (this._startingTime === null) {\n                this._startingTime = currentTime;\n                return $43e0e2dc9c95da4e$export$d0f7a26c90cc1562.Playing;\n            } else {\n                const diff = (currentTime - this._startingTime) / this._playingDuration;\n                if (diff >= 1) {\n                    this._playingDuration = null;\n                    this._startingTime = null;\n                    this._from = this._to;\n                    this._current = this._to;\n                    this._entity.markDirty();\n                    this._stopEvent();\n                    const type = \"ended\";\n                    if (this.events.isEnabled(type)) this.events.dispatch(type, {\n                        type: type,\n                        target: this\n                    });\n                    return $43e0e2dc9c95da4e$export$d0f7a26c90cc1562.Stopped;\n                } else {\n                    this._current = $43e0e2dc9c95da4e$export$d02631cccf789723(diff, this._from, this._to);\n                    this._entity.markDirty();\n                    const type = \"progress\";\n                    if (this.events.isEnabled(type)) this.events.dispatch(type, {\n                        type: type,\n                        target: this,\n                        progress: diff\n                    });\n                    return $43e0e2dc9c95da4e$export$d0f7a26c90cc1562.Playing;\n                }\n            }\n        } else return $43e0e2dc9c95da4e$export$d0f7a26c90cc1562.Stopped;\n    }\n    _play() {\n        this._from = this._current;\n        if (this._playingDuration === null) {\n            this._entity._root._addAnimation(this);\n            const type = \"started\";\n            if (this.events.isEnabled(type)) this.events.dispatch(type, {\n                type: type,\n                target: this\n            });\n        } else this._startingTime = null;\n        this._playingDuration = Math.abs(this._to - this._from) * this._duration;\n    }\n    get duration() {\n        return this._duration;\n    }\n    set duration(value) {\n        if (this._duration !== value) {\n            this._duration = value;\n            if (value === 0) this.jumpTo(this._to);\n            else if (this._current !== this._to) this._play();\n        }\n    }\n    get current() {\n        if (this.easing) return this.easing(this._current);\n        else return this._current;\n    }\n    stop() {\n        this.jumpTo(this._current);\n    }\n    jumpTo(value) {\n        if (this._current !== value) this._entity.markDirty();\n        if (this._playingDuration !== null) this._stopEvent();\n        this._playingDuration = null;\n        this._startingTime = null;\n        this._current = value;\n        this._from = value;\n        this._to = value;\n    }\n    tweenTo(value) {\n        if (this._current === value || this._duration === 0) this.jumpTo(value);\n        else if (this._to !== value) {\n            this._to = value;\n            this._play();\n        }\n    }\n} /*export class AnimationValue extends AnimationTime {\r\n    public _min: number;\r\n    public _max: number;\r\n\r\n    constructor(entity: Entity, duration: number, min: number, max: number) {\r\n        super(entity, duration);\r\n        this._min = min;\r\n        this._max = max;\r\n    }\r\n\r\n    public get min(): number {\r\n        return this._min;\r\n    }\r\n\r\n    public set min(value: number) {\r\n        if (this._min !== value) {\r\n            this._min = value;\r\n            this._entity.markDirty();\r\n        }\r\n    }\r\n\r\n    public get max(): number {\r\n        return this._max;\r\n    }\r\n\r\n    public set max(value: number) {\r\n        if (this._max !== value) {\r\n            this._max = value;\r\n            this._entity.markDirty();\r\n        }\r\n    }\r\n\r\n    public currentValue(): number {\r\n        return range(super.currentTime(), this._min, this._max);\r\n    }\r\n\r\n    public jumpToValue(value: number) {\r\n        super.jumpToTime(normalize(value, this._min, this._max));\r\n    }\r\n\r\n    public tweenToValue(value: number) {\r\n        super.tweenToTime(normalize(value, this._min, this._max));\r\n    }\r\n}\r\n*/ \n\n\n\n/**\r\n * A collection of easing functions\r\n *\r\n * Parts of this collection are taken from D3.js library (https://d3js.org/)\r\n */ /**\r\n * ============================================================================\r\n * IMPORTS\r\n * ============================================================================\r\n * @hidden\r\n */ \nconst $f43e9e04b3f0548b$export$6b5c1ceb16d01dc3 = Math.PI;\nconst $f43e9e04b3f0548b$export$19368ff9fe7c15f9 = $f43e9e04b3f0548b$export$6b5c1ceb16d01dc3 / 2;\nconst $f43e9e04b3f0548b$export$fd1bf64c4a4ea04a = $f43e9e04b3f0548b$export$6b5c1ceb16d01dc3 / 180;\nconst $f43e9e04b3f0548b$export$e035ae0f6b8ef5d = 180 / $f43e9e04b3f0548b$export$6b5c1ceb16d01dc3;\nfunction $f43e9e04b3f0548b$export$2077e0241d6afd3c(value, precision, floor) {\n    if (!(0, $f63bdea45a89cf24$export$7e4aa119212bc614)(precision) || precision <= 0) {\n        let rounded = Math.round(value);\n        if (floor) {\n            if (rounded - value == 0.5) rounded--;\n        }\n        return rounded;\n    } else {\n        let d = Math.pow(10, precision);\n        return Math.round(value * d) / d;\n    }\n}\nfunction $f43e9e04b3f0548b$export$803ce6b71a0a94b2(value, precision) {\n    if (!(0, $f63bdea45a89cf24$export$7e4aa119212bc614)(precision) || precision <= 0) return Math.ceil(value);\n    else {\n        let d = Math.pow(10, precision);\n        return Math.ceil(value * d) / d;\n    }\n}\nfunction $f43e9e04b3f0548b$export$14d154ec2f45fa18(p0, p1, p2, tensionX, tensionY) {\n    return {\n        x: (-p0.x + p1.x / tensionX + p2.x) * tensionX,\n        y: (-p0.y + p1.y / tensionY + p2.y) * tensionY\n    };\n}\nfunction $f43e9e04b3f0548b$export$e01ac8bd95dd3fa5(p1, p2, p3, tensionX, tensionY) {\n    return {\n        x: (p1.x + p2.x / tensionX - p3.x) * tensionX,\n        y: (p1.y + p2.y / tensionY - p3.y) * tensionY\n    };\n}\nfunction $f43e9e04b3f0548b$export$386b748ab02f16a0(value, min, max) {\n    return Math.min(Math.max(value, min), max);\n}\nfunction $f43e9e04b3f0548b$export$5de3937cb4b592ed(angle) {\n    return Math.sin($f43e9e04b3f0548b$export$fd1bf64c4a4ea04a * angle);\n}\nfunction $f43e9e04b3f0548b$export$fcdd3b0b3246a325(angle) {\n    return Math.tan($f43e9e04b3f0548b$export$fd1bf64c4a4ea04a * angle);\n}\nfunction $f43e9e04b3f0548b$export$50d414a77b60d802(angle) {\n    return Math.cos($f43e9e04b3f0548b$export$fd1bf64c4a4ea04a * angle);\n}\nfunction $f43e9e04b3f0548b$export$e3df76cf4464bc81(value) {\n    value = value % 360;\n    if (value < 0) value += 360;\n    return value;\n}\nfunction $f43e9e04b3f0548b$export$87d7822d7a31793f(cx, cy, startAngle, endAngle, radius) {\n    let minX = Number.MAX_VALUE;\n    let minY = Number.MAX_VALUE;\n    let maxX = -Number.MAX_VALUE;\n    let maxY = -Number.MAX_VALUE;\n    let bpoints = [];\n    bpoints.push($f43e9e04b3f0548b$export$7fbabd36a4c7fdd8(radius, startAngle));\n    bpoints.push($f43e9e04b3f0548b$export$7fbabd36a4c7fdd8(radius, endAngle));\n    let fromAngle = Math.min(Math.floor(startAngle / 90) * 90, Math.floor(endAngle / 90) * 90);\n    let toAngle = Math.max(Math.ceil(startAngle / 90) * 90, Math.ceil(endAngle / 90) * 90);\n    for(let angle = fromAngle; angle <= toAngle; angle += 90)if (angle >= startAngle && angle <= endAngle) bpoints.push($f43e9e04b3f0548b$export$7fbabd36a4c7fdd8(radius, angle));\n    for(let i = 0; i < bpoints.length; i++){\n        let pt = bpoints[i];\n        if (pt.x < minX) minX = pt.x;\n        if (pt.y < minY) minY = pt.y;\n        if (pt.x > maxX) maxX = pt.x;\n        if (pt.y > maxY) maxY = pt.y;\n    }\n    return {\n        left: cx + minX,\n        top: cy + minY,\n        right: cx + maxX,\n        bottom: cy + maxY\n    };\n}\nfunction $f43e9e04b3f0548b$export$7fbabd36a4c7fdd8(radius, arc) {\n    return {\n        x: radius * $f43e9e04b3f0548b$export$50d414a77b60d802(arc),\n        y: radius * $f43e9e04b3f0548b$export$5de3937cb4b592ed(arc)\n    };\n}\nfunction $f43e9e04b3f0548b$export$579a8a269cc78035(bounds) {\n    const len = bounds.length;\n    if (len > 0) {\n        let bound = bounds[0];\n        let left = bound.left;\n        let top = bound.top;\n        let right = bound.right;\n        let bottom = bound.bottom;\n        if (len > 1) for(let i = 1; i < len; i++){\n            bound = bounds[i];\n            left = Math.min(bound.left, left);\n            right = Math.max(bound.right, right);\n            top = Math.min(bound.top, top);\n            bottom = Math.max(bound.bottom, bottom);\n        }\n        return {\n            left: left,\n            right: right,\n            top: top,\n            bottom: bottom\n        };\n    }\n    return {\n        left: 0,\n        right: 0,\n        top: 0,\n        bottom: 0\n    };\n}\nfunction $f43e9e04b3f0548b$export$11190c390398c8e8(value, startAngle, endAngle) {\n    if (startAngle > endAngle) {\n        let temp = startAngle;\n        startAngle = endAngle;\n        endAngle = temp;\n    }\n    value = $f43e9e04b3f0548b$export$e3df76cf4464bc81(value);\n    let count = (startAngle - $f43e9e04b3f0548b$export$e3df76cf4464bc81(startAngle)) / 360;\n    if (value < startAngle) value += 360 * (count + 1);\n    let maxEnd = startAngle + (endAngle - startAngle) / 2 + 180;\n    let maxStart = startAngle + (endAngle - startAngle) / 2 - 180;\n    if (value > endAngle) {\n        if (value - 360 > startAngle) value -= 360;\n        else if (value < maxEnd) value = endAngle;\n        else value = startAngle;\n    }\n    if (value < startAngle) {\n        if (value > maxStart) value = startAngle;\n        else value = endAngle;\n    }\n    return value;\n}\nfunction $f43e9e04b3f0548b$export$4e985c1b25c164db(point, bounds) {\n    if (point.x >= bounds.left && point.y >= bounds.top && point.x <= bounds.right && point.y <= bounds.bottom) return true;\n    return false;\n}\nfunction $f43e9e04b3f0548b$export$b363da9ded343252(point1, point2) {\n    if (!point2) point2 = {\n        x: point1.x * 2,\n        y: point1.y * 2\n    };\n    let diffX = point2.x - point1.x;\n    let diffY = point2.y - point1.y;\n    let angle = Math.atan2(diffY, diffX) * $f43e9e04b3f0548b$export$e035ae0f6b8ef5d;\n    if (angle < 0) angle += 360;\n    return $f43e9e04b3f0548b$export$e3df76cf4464bc81(angle);\n}\nfunction $f43e9e04b3f0548b$export$7c5d545dd69e252(pointA, pointB, controlPoint, position) {\n    let x = (1 - position) * (1 - position) * pointA.x + 2 * (1 - position) * position * controlPoint.x + position * position * pointB.x;\n    let y = (1 - position) * (1 - position) * pointA.y + 2 * (1 - position) * position * controlPoint.y + position * position * pointB.y;\n    return {\n        x: x,\n        y: y\n    };\n}\nfunction $f43e9e04b3f0548b$export$aa50121ccd6f9820(pointA, pointB, position) {\n    return {\n        x: pointA.x + (pointB.x - pointA.x) * position,\n        y: pointA.y + (pointB.y - pointA.y) * position\n    };\n}\nfunction $f43e9e04b3f0548b$export$ff7f7c97cdce86e(values, referenceValue) {\n    return values.reduce(function(prev, curr) {\n        return Math.abs(curr - referenceValue) < Math.abs(prev - referenceValue) ? curr : prev;\n    });\n}\nfunction $f43e9e04b3f0548b$export$1e5bc424ba85580e(bounds1, bounds2) {\n    const horizontalOverlap = bounds1.left < bounds2.right && bounds1.right > bounds2.left;\n    const verticalOverlap = bounds1.top < bounds2.bottom && bounds1.bottom > bounds2.top;\n    return horizontalOverlap && verticalOverlap;\n}\nfunction $f43e9e04b3f0548b$export$78c3736b1524effc(cx, cy, radius, radiusY, innerRadius, step, radiusStep, startAngle, endAngle) {\n    let r = innerRadius + 0.01;\n    let angle = startAngle * $f43e9e04b3f0548b$export$fd1bf64c4a4ea04a;\n    let points = [];\n    while(r < radius + radiusStep){\n        let stepSize = step;\n        if (stepSize / 2 > r) stepSize = 2 * r;\n        angle += 2 * Math.asin(stepSize / 2 / r);\n        if (angle * $f43e9e04b3f0548b$export$e035ae0f6b8ef5d > endAngle + (radius - innerRadius) / radiusStep * 360) break;\n        let degrees = angle * $f43e9e04b3f0548b$export$e035ae0f6b8ef5d;\n        let point = {\n            x: cx + r * Math.cos(angle),\n            y: cy + r * radiusY / radius * Math.sin(angle)\n        };\n        points.push(point);\n        r = innerRadius + degrees / 360 * radiusStep;\n    }\n    points.shift();\n    return points;\n}\nfunction $f43e9e04b3f0548b$export$e2b16992bf4fd2ff(circle1, circle2) {\n    return Math.hypot(circle1.x - circle2.x, circle1.y - circle2.y) <= circle1.radius + circle2.radius;\n}\n\n\nfunction $b4231ef84a5f8a61$export$45db2fc2f15997e7(t) {\n    return t;\n}\nfunction $b4231ef84a5f8a61$export$9fc5786234c4f1e(t) {\n    return t * t;\n}\nfunction $b4231ef84a5f8a61$export$bdd5293f3cf7a909(t) {\n    return t * t * t;\n}\nfunction $b4231ef84a5f8a61$export$9c297f60e22e3389(t, e) {\n    return Math.pow(t, e);\n}\nfunction $b4231ef84a5f8a61$export$b310ec824aaee37f(t) {\n    return Math.pow(2, 10 * t - 10);\n}\nfunction $b4231ef84a5f8a61$export$ed296354ff2387bf(t) {\n    return 1 - Math.cos(t * $f43e9e04b3f0548b$export$19368ff9fe7c15f9);\n}\nfunction $b4231ef84a5f8a61$export$e1d786d2f707b414(t) {\n    return 1 - Math.sqrt(1 - t * t);\n}\nfunction $b4231ef84a5f8a61$export$1df536d55b20c667(ease) {\n    return function(t) {\n        if (t < 0.5) return ease(t * 2.0);\n        else return ease((1.0 - t) * 2.0);\n    };\n}\nfunction $b4231ef84a5f8a61$export$ca49d7cd8ea40ba7(ease) {\n    return function(t) {\n        return 1.0 - ease(1.0 - t);\n    };\n}\nfunction $b4231ef84a5f8a61$export$5a8263081d3114f8(ease) {\n    return function(t) {\n        if (t <= 0.5) return ease(t * 2.0) / 2.0;\n        else return 1.0 - ease((1.0 - t) * 2.0) / 2.0;\n    };\n}\n/**\r\n * ============================================================================\r\n * BOUNCE\r\n * ============================================================================\r\n * @hidden\r\n */ let $b4231ef84a5f8a61$var$b1 = 4 / 11, $b4231ef84a5f8a61$var$b2 = 6 / 11, $b4231ef84a5f8a61$var$b3 = 8 / 11, $b4231ef84a5f8a61$var$b4 = 3 / 4, $b4231ef84a5f8a61$var$b5 = 9 / 11, $b4231ef84a5f8a61$var$b6 = 10 / 11, $b4231ef84a5f8a61$var$b7 = 15 / 16, $b4231ef84a5f8a61$var$b8 = 21 / 22, $b4231ef84a5f8a61$var$b9 = 63 / 64, $b4231ef84a5f8a61$var$b0 = 1 / $b4231ef84a5f8a61$var$b1 / $b4231ef84a5f8a61$var$b1;\nfunction $b4231ef84a5f8a61$export$e3ce947fb98643bf(t) {\n    return 1 - $b4231ef84a5f8a61$var$bounceOut(1 - t);\n}\n/**\r\n * @ignore\r\n */ function $b4231ef84a5f8a61$var$bounceOut(t) {\n    t;\n    if (t < $b4231ef84a5f8a61$var$b1) return $b4231ef84a5f8a61$var$b0 * t * t;\n    else if (t < $b4231ef84a5f8a61$var$b3) return $b4231ef84a5f8a61$var$b0 * (t -= $b4231ef84a5f8a61$var$b2) * t + $b4231ef84a5f8a61$var$b4;\n    else if (t < $b4231ef84a5f8a61$var$b6) return $b4231ef84a5f8a61$var$b0 * (t -= $b4231ef84a5f8a61$var$b5) * t + $b4231ef84a5f8a61$var$b7;\n    else return $b4231ef84a5f8a61$var$b0 * (t -= $b4231ef84a5f8a61$var$b8) * t + $b4231ef84a5f8a61$var$b9;\n}\n/**\r\n * ============================================================================\r\n * ELASTIC\r\n * ============================================================================\r\n * @hidden\r\n */ /**\r\n * @ignore\r\n */ let $b4231ef84a5f8a61$var$tau = 2 * Math.PI;\n/**\r\n * @ignore\r\n */ let $b4231ef84a5f8a61$var$amplitude = 1;\n/**\r\n * @ignore\r\n */ let $b4231ef84a5f8a61$var$period = 0.3 / $b4231ef84a5f8a61$var$tau;\n/**\r\n * @ignore\r\n */ let $b4231ef84a5f8a61$var$s = Math.asin(1 / $b4231ef84a5f8a61$var$amplitude) * $b4231ef84a5f8a61$var$period;\nfunction $b4231ef84a5f8a61$export$e3f8198a677f57c2(t) {\n    let v = t;\n    return $b4231ef84a5f8a61$var$amplitude * Math.pow(2, 10 * --v) * Math.sin(($b4231ef84a5f8a61$var$s - v) / $b4231ef84a5f8a61$var$period);\n}\n\n\nclass $dad453b54c84e86c$export$7254cc27399e90bd {\n    constructor(entity, settings){\n        Object.defineProperty(this, \"_entity\", {\n            enumerable: true,\n            configurable: true,\n            writable: true,\n            value: void 0\n        });\n        Object.defineProperty(this, \"_settings\", {\n            enumerable: true,\n            configurable: true,\n            writable: true,\n            value: void 0\n        });\n        Object.defineProperty(this, \"_userSettings\", {\n            enumerable: true,\n            configurable: true,\n            writable: true,\n            value: {}\n        });\n        this._entity = entity;\n        this._settings = settings;\n        $e66f9343b5144e1a$export$79b2f7037acddd43(settings, (key)=>{\n            this._userSettings[key] = true;\n        });\n    }\n    get(key, fallback) {\n        const value = this._settings[key];\n        if (value !== undefined) return value;\n        else return fallback;\n    }\n    /**\r\n     * @ignore\r\n     */ setRaw(key, value) {\n        this._settings[key] = value;\n    }\n    /**\r\n     * Sets a setting `value` for the specified `key` to be set when the state\r\n     * is applied.\r\n     *\r\n     * @param   key       Setting key\r\n     * @param   value     Setting value\r\n     * @return            Setting value\r\n     */ set(key, value) {\n        this._userSettings[key] = true;\n        this.setRaw(key, value);\n    }\n    /**\r\n     * Removes a setting value for the specified `key`.\r\n     *\r\n     * @see {@link https://www.amcharts.com/docs/v5/concepts/settings/} for more info\r\n     * @param   key       Setting key\r\n     */ remove(key) {\n        delete this._userSettings[key];\n        delete this._settings[key];\n    }\n    /**\r\n     * Sets multiple settings at once.\r\n     *\r\n     * `settings` must be an object with key: value pairs.\r\n     *\r\n     * @see {@link https://www.amcharts.com/docs/v5/concepts/settings/} for more info\r\n     * @param settings Settings\r\n     */ setAll(settings) {\n        $e66f9343b5144e1a$export$ed97f33186d4b816(settings).forEach((key)=>{\n            this.set(key, settings[key]);\n        });\n    }\n    _eachSetting(f) {\n        $e66f9343b5144e1a$export$79b2f7037acddd43(this._settings, f);\n    }\n    /**\r\n     * Applies the state to the target element.\r\n     *\r\n     * All setting values are set immediately.\r\n     */ apply() {\n        const seen = {};\n        seen[\"stateAnimationEasing\"] = true;\n        seen[\"stateAnimationDuration\"] = true;\n        const defaultState = this._entity.states.lookup(\"default\");\n        this._eachSetting((key, value)=>{\n            if (!seen[key]) {\n                seen[key] = true;\n                // save values to default state\n                if (this !== defaultState) {\n                    if (!(key in defaultState._settings)) defaultState._settings[key] = this._entity.get(key);\n                }\n                this._entity.set(key, value);\n            }\n        });\n    }\n    /**\r\n     * Applies the state to the target element.\r\n     *\r\n     * Returns an object representing all [[Animation]] objects created for\r\n     * each setting key transition.\r\n     *\r\n     * @return           Animations\r\n     */ applyAnimate(duration) {\n        if (duration == null) duration = this._settings.stateAnimationDuration;\n        if (duration == null) duration = this.get(\"stateAnimationDuration\", this._entity.get(\"stateAnimationDuration\", 0));\n        let easing = this._settings.stateAnimationEasing;\n        if (easing == null) easing = this.get(\"stateAnimationEasing\", this._entity.get(\"stateAnimationEasing\", $b4231ef84a5f8a61$export$bdd5293f3cf7a909));\n        const defaultState = this._entity.states.lookup(\"default\");\n        const seen = {};\n        seen[\"stateAnimationEasing\"] = true;\n        seen[\"stateAnimationDuration\"] = true;\n        const animations = {};\n        this._eachSetting((key, value)=>{\n            if (!seen[key]) {\n                seen[key] = true;\n                // save values to default state\n                if (this != defaultState) {\n                    if (!(key in defaultState._settings)) defaultState._settings[key] = this._entity.get(key);\n                }\n                const animation = this._entity.animate({\n                    key: key,\n                    to: value,\n                    duration: duration,\n                    easing: easing\n                });\n                if (animation) animations[key] = animation;\n            }\n        });\n        return animations;\n    }\n}\nclass $dad453b54c84e86c$export$47283907dceba392 {\n    constructor(entity){\n        Object.defineProperty(this, \"_states\", {\n            enumerable: true,\n            configurable: true,\n            writable: true,\n            value: {}\n        });\n        Object.defineProperty(this, \"_entity\", {\n            enumerable: true,\n            configurable: true,\n            writable: true,\n            value: void 0\n        });\n        this._entity = entity;\n    }\n    /**\r\n     * Checks if a state by `name` exists. Returns it there is one.\r\n     *\r\n     * @param  name  State name\r\n     * @return       State\r\n     */ lookup(name) {\n        return this._states[name];\n    }\n    /**\r\n     * Sets supplied `settings` on a state by the `name`.\r\n     *\r\n     * If such state does not yet exists, it is created.\r\n     *\r\n     * @param   name      State name\r\n     * @param   settings  Settings\r\n     * @return            New State\r\n     */ create(name, settings) {\n        const state = this._states[name];\n        if (state) {\n            state.setAll(settings);\n            return state;\n        } else {\n            const state = new $dad453b54c84e86c$export$7254cc27399e90bd(this._entity, settings);\n            this._states[name] = state;\n            return state;\n        }\n    }\n    /**\r\n     * Removes the state called `name`.\r\n     *\r\n     * @param   name      State name\r\n     */ remove(name) {\n        delete this._states[name];\n    }\n    /**\r\n     * Applies a named state to the target element.\r\n     *\r\n     * @param  newState  State name\r\n     */ apply(newState) {\n        const state = this._states[newState];\n        if (state) state.apply();\n        this._entity._applyState(newState);\n    }\n    /**\r\n     * Applies a named state to the element.\r\n     *\r\n     * Returns an object representing all [[Animation]] objects created for\r\n     * each setting key transition.\r\n     *\r\n     * @param   newState  State name\r\n     * @return            Animations\r\n     */ applyAnimate(newState, duration) {\n        let animations;\n        const state = this._states[newState];\n        if (state) animations = state.applyAnimate(duration);\n        this._entity._applyStateAnimated(newState, duration);\n        return animations;\n    }\n}\n\n\n/**\r\n * @ignore\r\n */ class $ca44c6881f0f20f2$export$4d9facee29974f3 {\n    constructor(){\n        /**\r\n         * Currently running version of amCharts.\r\n         */ Object.defineProperty(this, \"version\", {\n            enumerable: true,\n            configurable: true,\n            writable: true,\n            value: \"5.10.8\"\n        });\n        /**\r\n         * List of applied licenses.\r\n         * @ignore\r\n         */ Object.defineProperty(this, \"licenses\", {\n            enumerable: true,\n            configurable: true,\n            writable: true,\n            value: []\n        });\n        /**\r\n         * Entities that have their `id` setting set.\r\n         */ Object.defineProperty(this, \"entitiesById\", {\n            enumerable: true,\n            configurable: true,\n            writable: true,\n            value: {}\n        });\n        /**\r\n         * All created [[Root]] elements.\r\n         */ Object.defineProperty(this, \"rootElements\", {\n            enumerable: true,\n            configurable: true,\n            writable: true,\n            value: []\n        });\n    }\n}\nconst $ca44c6881f0f20f2$export$4bb7493d241fd8a5 = new $ca44c6881f0f20f2$export$4d9facee29974f3();\nfunction $ca44c6881f0f20f2$export$ba39f222840336cc(license) {\n    $ca44c6881f0f20f2$export$4bb7493d241fd8a5.licenses.push(license);\n}\nfunction $ca44c6881f0f20f2$export$f2057baa9f9c7ff0() {\n    let root;\n    while(root = $ca44c6881f0f20f2$export$4bb7493d241fd8a5.rootElements.pop())root.dispose();\n}\nfunction $ca44c6881f0f20f2$export$c2104fb60145748d(id) {\n    let found;\n    $ca44c6881f0f20f2$export$4bb7493d241fd8a5.rootElements.forEach((item)=>{\n        if (item.dom.id == id) found = item;\n    });\n    return found;\n}\n\n\n\n\n\n/**\r\n * @ignore\r\n */ function $919e90129af4490b$export$398604a469f7de9a(left, right) {\n    if (left === right) return 0;\n    else if (left < right) return -1;\n    else return 1;\n}\nfunction $919e90129af4490b$export$cb07857b027678fa(left, right, f) {\n    const leftLength = left.length;\n    const rightLength = right.length;\n    const length = Math.min(leftLength, rightLength);\n    for(let i = 0; i < length; ++i){\n        const order = f(left[i], right[i]);\n        if (order !== 0) return order;\n    }\n    return $919e90129af4490b$export$398604a469f7de9a(leftLength, rightLength);\n}\nfunction $919e90129af4490b$export$66c1ae025e96b4bc(order) {\n    if (order < 0) return 1;\n    else if (order > 0) return -1;\n    else return 0;\n}\nfunction $919e90129af4490b$export$608e63ca0eb1cfcc(a, b) {\n    if (a === b) return 0;\n    else if (a < b) return -1;\n    else return 1;\n}\n\n\nclass $baeade534ece7f4c$export$aa533d00238abcca {\n    constructor(entity){\n        Object.defineProperty(this, \"_entity\", {\n            enumerable: true,\n            configurable: true,\n            writable: true,\n            value: void 0\n        });\n        Object.defineProperty(this, \"_callbacks\", {\n            enumerable: true,\n            configurable: true,\n            writable: true,\n            value: {}\n        });\n        Object.defineProperty(this, \"_disabled\", {\n            enumerable: true,\n            configurable: true,\n            writable: true,\n            value: {}\n        });\n        this._entity = entity;\n    }\n    /**\r\n     * Add a function (`callback`) that will modify value for setting `key`.\r\n     *\r\n     * @see {@link https://www.amcharts.com/docs/v5/concepts/settings/adapters/} for more info\r\n     */ add(key, callback) {\n        let callbacks = this._callbacks[key];\n        if (callbacks === undefined) callbacks = this._callbacks[key] = [];\n        callbacks.push(callback);\n        this._entity._markDirtyKey(key);\n        return new (0, $a363f66303166aa1$export$6039fc6176d96e35)(()=>{\n            if ($2f30431acd054e2f$export$2529f734547e2830(callbacks, callback)) this._entity._markDirtyKey(key);\n        });\n    }\n    /**\r\n     * Removes all adapters for the specific key.\r\n     *\r\n     * @since 5.1.0\r\n     */ remove(key) {\n        const callbacks = this._callbacks[key];\n        if (callbacks !== undefined) {\n            delete this._callbacks[key];\n            if (callbacks.length !== 0) this._entity._markDirtyKey(key);\n        }\n    }\n    /**\r\n     * Enables (previously disabled) adapters for specific key.\r\n     *\r\n     * @since 5.1.0\r\n     */ enable(key) {\n        if (this._disabled[key]) {\n            delete this._disabled[key];\n            this._entity._markDirtyKey(key);\n        }\n    }\n    /**\r\n     * Disables all adapters for specific key.\r\n     *\r\n     * @since 5.1.0\r\n     */ disable(key) {\n        if (!this._disabled[key]) {\n            this._disabled[key] = true;\n            this._entity._markDirtyKey(key);\n        }\n    }\n    /**\r\n     * @ignore\r\n     */ fold(key, value) {\n        if (!this._disabled[key]) {\n            const callbacks = this._callbacks[key];\n            if (callbacks !== undefined) for(let i = 0, len = callbacks.length; i < len; ++i)value = callbacks[i](value, this._entity, key);\n        }\n        return value;\n    }\n}\nclass $baeade534ece7f4c$export$c35d437ae5945fcd {\n    constructor(animation, from, to, duration, easing, loops, startingTime){\n        Object.defineProperty(this, \"_animation\", {\n            enumerable: true,\n            configurable: true,\n            writable: true,\n            value: void 0\n        });\n        Object.defineProperty(this, \"_from\", {\n            enumerable: true,\n            configurable: true,\n            writable: true,\n            value: void 0\n        });\n        Object.defineProperty(this, \"_to\", {\n            enumerable: true,\n            configurable: true,\n            writable: true,\n            value: void 0\n        });\n        Object.defineProperty(this, \"_duration\", {\n            enumerable: true,\n            configurable: true,\n            writable: true,\n            value: void 0\n        });\n        Object.defineProperty(this, \"_easing\", {\n            enumerable: true,\n            configurable: true,\n            writable: true,\n            value: void 0\n        });\n        Object.defineProperty(this, \"_loops\", {\n            enumerable: true,\n            configurable: true,\n            writable: true,\n            value: void 0\n        });\n        Object.defineProperty(this, \"_interpolate\", {\n            enumerable: true,\n            configurable: true,\n            writable: true,\n            value: void 0\n        });\n        Object.defineProperty(this, \"_oldTime\", {\n            enumerable: true,\n            configurable: true,\n            writable: true,\n            value: void 0\n        });\n        Object.defineProperty(this, \"_time\", {\n            enumerable: true,\n            configurable: true,\n            writable: true,\n            value: 0\n        });\n        Object.defineProperty(this, \"_stopped\", {\n            enumerable: true,\n            configurable: true,\n            writable: true,\n            value: false\n        });\n        Object.defineProperty(this, \"_playing\", {\n            enumerable: true,\n            configurable: true,\n            writable: true,\n            value: true\n        });\n        Object.defineProperty(this, \"events\", {\n            enumerable: true,\n            configurable: true,\n            writable: true,\n            value: new (0, $7e417cbab1b21893$export$ec8b666c5fe2c75a)()\n        });\n        this._animation = animation;\n        this._from = from;\n        this._to = to;\n        this._duration = duration;\n        this._easing = easing;\n        this._loops = loops;\n        this._interpolate = (0, $43e0e2dc9c95da4e$export$d9af756d8d8c2d47)(from, to);\n        this._oldTime = startingTime;\n    }\n    get to() {\n        return this._to;\n    }\n    get from() {\n        return this._from;\n    }\n    get playing() {\n        return this._playing;\n    }\n    get stopped() {\n        return this._stopped;\n    }\n    stop() {\n        if (!this._stopped) {\n            this._stopped = true;\n            this._playing = false;\n            if (this.events.isEnabled(\"stopped\")) this.events.dispatch(\"stopped\", {\n                type: \"stopped\",\n                target: this\n            });\n        }\n    }\n    pause() {\n        this._playing = false;\n        this._oldTime = null;\n    }\n    play() {\n        if (!this._stopped && !this._playing) {\n            this._playing = true;\n            this._animation._startAnimation();\n        }\n    }\n    get percentage() {\n        return this._time / this._duration;\n    }\n    waitForStop() {\n        return new Promise((resolve, _reject)=>{\n            if (this._stopped) resolve();\n            else {\n                const listener = ()=>{\n                    stopped.dispose();\n                    resolve();\n                };\n                const stopped = this.events.on(\"stopped\", listener);\n            }\n        });\n    }\n    _checkEnded() {\n        if (this._loops > 1) {\n            --this._loops;\n            return false;\n        } else return true;\n    }\n    _run(currentTime) {\n        if (this._oldTime !== null) {\n            this._time += currentTime - this._oldTime;\n            if (this._time > this._duration) this._time = this._duration;\n        }\n        this._oldTime = currentTime;\n    }\n    _reset(currentTime) {\n        this._oldTime = currentTime;\n        this._time = 0;\n    }\n    _value(diff) {\n        return this._interpolate(this._easing(diff), this._from, this._to);\n    }\n}\n/**\r\n * @ignore\r\n */ let $baeade534ece7f4c$var$counter = 0;\nclass $baeade534ece7f4c$export$c72f6eaae7b9adff {\n    constructor(settings){\n        /**\r\n         * Unique ID.\r\n         */ Object.defineProperty(this, \"uid\", {\n            enumerable: true,\n            configurable: true,\n            writable: true,\n            value: ++$baeade534ece7f4c$var$counter\n        });\n        Object.defineProperty(this, \"_settings\", {\n            enumerable: true,\n            configurable: true,\n            writable: true,\n            value: void 0\n        });\n        Object.defineProperty(this, \"_privateSettings\", {\n            enumerable: true,\n            configurable: true,\n            writable: true,\n            value: {}\n        });\n        Object.defineProperty(this, \"_settingEvents\", {\n            enumerable: true,\n            configurable: true,\n            writable: true,\n            value: {}\n        });\n        Object.defineProperty(this, \"_privateSettingEvents\", {\n            enumerable: true,\n            configurable: true,\n            writable: true,\n            value: {}\n        });\n        Object.defineProperty(this, \"_prevSettings\", {\n            enumerable: true,\n            configurable: true,\n            writable: true,\n            value: {}\n        });\n        Object.defineProperty(this, \"_prevPrivateSettings\", {\n            enumerable: true,\n            configurable: true,\n            writable: true,\n            value: {}\n        });\n        Object.defineProperty(this, \"_animatingSettings\", {\n            enumerable: true,\n            configurable: true,\n            writable: true,\n            value: {}\n        });\n        Object.defineProperty(this, \"_animatingPrivateSettings\", {\n            enumerable: true,\n            configurable: true,\n            writable: true,\n            value: {}\n        });\n        Object.defineProperty(this, \"_disposed\", {\n            enumerable: true,\n            configurable: true,\n            writable: true,\n            value: false\n        });\n        // TODO move this into Entity\n        Object.defineProperty(this, \"_userProperties\", {\n            enumerable: true,\n            configurable: true,\n            writable: true,\n            value: {}\n        });\n        /**\r\n         * If this is set to `false` then disposing does nothing, it's a no-op.\r\n         */ Object.defineProperty(this, \"enableDispose\", {\n            enumerable: true,\n            configurable: true,\n            writable: true,\n            value: true\n        });\n        this._settings = settings;\n    }\n    _checkDirty() {\n        $e66f9343b5144e1a$export$ed97f33186d4b816(this._settings).forEach((key)=>{\n            this._userProperties[key] = true;\n            this._markDirtyKey(key);\n        });\n    }\n    /**\r\n     * @ignore\r\n     */ resetUserSettings() {\n        this._userProperties = {};\n    }\n    _runAnimation(currentTime) {\n        let state = (0, $43e0e2dc9c95da4e$export$d0f7a26c90cc1562).Stopped;\n        if (!this.isDisposed()) {\n            let playing = false;\n            let paused = false;\n            $e66f9343b5144e1a$export$79b2f7037acddd43(this._animatingSettings, (key, animation)=>{\n                if (animation.stopped) this._stopAnimation(key);\n                else if (animation.playing) {\n                    animation._run(currentTime);\n                    const diff = animation.percentage;\n                    if (diff >= 1) {\n                        if (animation._checkEnded()) this.set(key, animation._value(1));\n                        else {\n                            playing = true;\n                            animation._reset(currentTime);\n                            this._set(key, animation._value(1));\n                        }\n                    } else {\n                        playing = true;\n                        this._set(key, animation._value(diff));\n                    }\n                } else paused = true;\n            });\n            $e66f9343b5144e1a$export$79b2f7037acddd43(this._animatingPrivateSettings, (key, animation)=>{\n                if (animation.stopped) this._stopAnimationPrivate(key);\n                else if (animation.playing) {\n                    animation._run(currentTime);\n                    const diff = animation.percentage;\n                    if (diff >= 1) {\n                        if (animation._checkEnded()) this.setPrivate(key, animation._value(1));\n                        else {\n                            playing = true;\n                            animation._reset(currentTime);\n                            this._setPrivate(key, animation._value(1));\n                        }\n                    } else {\n                        playing = true;\n                        this._setPrivate(key, animation._value(diff));\n                    }\n                } else paused = true;\n            });\n            if (playing) state = (0, $43e0e2dc9c95da4e$export$d0f7a26c90cc1562).Playing;\n            else if (paused) state = (0, $43e0e2dc9c95da4e$export$d0f7a26c90cc1562).Paused;\n        }\n        return state;\n    }\n    _markDirtyKey(_key) {\n        this.markDirty();\n    }\n    _markDirtyPrivateKey(_key) {\n        this.markDirty();\n    }\n    /**\r\n     * Sets a callback function to invoke when specific key of settings changes\r\n     * or is set.\r\n     *\r\n     * @see {@link https://www.amcharts.com/docs/v5/concepts/events/#Settings_value_change} for more info\r\n     * @param   key       Settings key\r\n     * @param   callback  Callback\r\n     * @return            Disposer for event\r\n     */ on(key, callback) {\n        let events = this._settingEvents[key];\n        if (events === undefined) events = this._settingEvents[key] = [];\n        events.push(callback);\n        return new (0, $a363f66303166aa1$export$6039fc6176d96e35)(()=>{\n            $2f30431acd054e2f$export$2529f734547e2830(events, callback);\n            if (events.length === 0) delete this._settingEvents[key];\n        });\n    }\n    /**\r\n     * Removes a callback for when value of a setting changes.\r\n     *\r\n     * @see {@link https://www.amcharts.com/docs/v5/concepts/events/#Settings_value_change} for more info\r\n     * @param   key       Private settings key\r\n     * @param   callback  Callback\r\n     * @since 5.9.2\r\n     */ off(key, callback) {\n        let events = this._settingEvents[key];\n        if (events !== undefined && callback !== undefined) $2f30431acd054e2f$export$2529f734547e2830(events, callback);\n        else delete this._settingEvents[key];\n    }\n    /**\r\n     * Sets a callback function to invoke when specific key of private settings\r\n     * changes or is set.\r\n     *\r\n     * @see {@link https://www.amcharts.com/docs/v5/concepts/events/#Settings_value_change} for more info\r\n     * @param   key       Private settings key\r\n     * @param   callback  Callback\r\n     * @return            Disposer for event\r\n     */ onPrivate(key, callback) {\n        let events = this._privateSettingEvents[key];\n        if (events === undefined) events = this._privateSettingEvents[key] = [];\n        events.push(callback);\n        return new (0, $a363f66303166aa1$export$6039fc6176d96e35)(()=>{\n            $2f30431acd054e2f$export$2529f734547e2830(events, callback);\n            if (events.length === 0) delete this._privateSettingEvents[key];\n        });\n    }\n    /**\r\n     * Removes a callback for when value of a private setting changes.\r\n     *\r\n     * @see {@link https://www.amcharts.com/docs/v5/concepts/events/#Settings_value_change} for more info\r\n     * @param   key       Private settings key\r\n     * @param   callback  Callback\r\n     * @since 5.9.2\r\n     */ offPrivate(key, callback) {\n        let events = this._privateSettingEvents[key];\n        if (events !== undefined && callback !== undefined) $2f30431acd054e2f$export$2529f734547e2830(events, callback);\n        else delete this._privateSettingEvents[key];\n    }\n    /**\r\n     * @ignore\r\n     */ getRaw(key, fallback) {\n        const value = this._settings[key];\n        if (value !== undefined) return value;\n        else return fallback;\n    }\n    /**\r\n     * Returns `true` if the setting exists.\r\n     *\r\n     * @see {@link https://www.amcharts.com/docs/v5/concepts/settings/} for more info\r\n     * @param   key        Settings key\r\n     * @return  {boolean}  Key exists\r\n     */ has(key) {\n        return key in this._settings;\n    }\n    get(key, fallback) {\n        return this.getRaw(key, fallback);\n    }\n    _sendKeyEvent(key, value) {\n        const events = this._settingEvents[key];\n        if (events !== undefined) $2f30431acd054e2f$export$79b2f7037acddd43(events, (callback)=>{\n            callback(value, this, key);\n        });\n    }\n    _sendPrivateKeyEvent(key, value) {\n        const events = this._privateSettingEvents[key];\n        if (events !== undefined) $2f30431acd054e2f$export$79b2f7037acddd43(events, (callback)=>{\n            callback(value, this, key);\n        });\n    }\n    /**\r\n     * @ignore\r\n     */ _setRaw(key, old, value) {\n        this._prevSettings[key] = old;\n        this._sendKeyEvent(key, value);\n    }\n    /**\r\n     * @ignore\r\n     */ setRaw(key, value) {\n        const old = this._settings[key];\n        this._settings[key] = value;\n        if (old !== value) this._setRaw(key, old, value);\n    }\n    /**\r\n     * @ignore\r\n     */ _set(key, value) {\n        const old = this._settings[key];\n        this._settings[key] = value;\n        if (old !== value) {\n            this._setRaw(key, old, value);\n            this._markDirtyKey(key);\n        }\n    }\n    _stopAnimation(key) {\n        const animation = this._animatingSettings[key];\n        if (animation) {\n            delete this._animatingSettings[key];\n            animation.stop();\n        }\n    }\n    /**\r\n     * Sets a setting `value` for the specified `key`, and returns the same `value`.\r\n     *\r\n     * @see {@link https://www.amcharts.com/docs/v5/concepts/settings/} for more info\r\n     * @param   key       Setting key\r\n     * @param   value     Setting value\r\n     * @return            Setting value\r\n     */ set(key, value) {\n        this._set(key, value);\n        this._stopAnimation(key);\n        return value;\n    }\n    /**\r\n     * Removes a setting value for the specified `key`;\r\n     *\r\n     * @see {@link https://www.amcharts.com/docs/v5/concepts/settings/} for more info\r\n     * @param   key       Setting key\r\n     */ remove(key) {\n        if (key in this._settings) {\n            this._prevSettings[key] = this._settings[key];\n            delete this._settings[key];\n            this._sendKeyEvent(key, undefined);\n            this._markDirtyKey(key);\n        }\n        this._stopAnimation(key);\n    }\n    /**\r\n     * Removes all keys;\r\n     *\r\n     * @see {@link https://www.amcharts.com/docs/v5/concepts/settings/} for more info\r\n     */ removeAll() {\n        $2f30431acd054e2f$export$79b2f7037acddd43($e66f9343b5144e1a$export$ed97f33186d4b816(this._settings), (key)=>{\n            this.remove(key);\n        });\n    }\n    /**\r\n     * Returns a value of a private setting.\r\n     *\r\n     * @see {@link https://www.amcharts.com/docs/v5/concepts/settings/#Private_settings} for more info\r\n     */ getPrivate(key, fallback) {\n        const value = this._privateSettings[key];\n        if (value !== undefined) return value;\n        else return fallback;\n    }\n    /**\r\n     * @ignore\r\n     */ _setPrivateRaw(key, old, value) {\n        this._prevPrivateSettings[key] = old;\n        this._sendPrivateKeyEvent(key, value);\n    }\n    /**\r\n     * @ignore\r\n     */ setPrivateRaw(key, value) {\n        const old = this._privateSettings[key];\n        this._privateSettings[key] = value;\n        if (old !== value) this._setPrivateRaw(key, old, value);\n    }\n    /**\r\n     * @ignore\r\n     */ _setPrivate(key, value) {\n        const old = this._privateSettings[key];\n        this._privateSettings[key] = value;\n        if (old !== value) {\n            this._setPrivateRaw(key, old, value);\n            this._markDirtyPrivateKey(key);\n        }\n    }\n    _stopAnimationPrivate(key) {\n        const animation = this._animatingPrivateSettings[key];\n        if (animation) {\n            animation.stop();\n            delete this._animatingPrivateSettings[key];\n        }\n    }\n    /**\r\n     * @ignore\r\n     */ setPrivate(key, value) {\n        this._setPrivate(key, value);\n        this._stopAnimationPrivate(key);\n        return value;\n    }\n    /**\r\n     * @ignore\r\n     */ removePrivate(key) {\n        if (key in this._privateSettings) {\n            this._prevPrivateSettings[key] = this._privateSettings[key];\n            delete this._privateSettings[key];\n            this._markDirtyPrivateKey(key);\n        }\n        this._stopAnimationPrivate(key);\n    }\n    /**\r\n     * Sets multiple settings at once.\r\n     *\r\n     * `settings` must be an object with key: value pairs.\r\n     *\r\n     * @see {@link https://www.amcharts.com/docs/v5/concepts/settings/} for more info\r\n     * @param settings Settings\r\n     */ setAll(settings) {\n        $e66f9343b5144e1a$export$79b2f7037acddd43(settings, (key, value)=>{\n            this.set(key, value);\n        });\n    }\n    /**\r\n     * Animates setting values from current/start values to new ones.\r\n     *\r\n     * @see {@link https://www.amcharts.com/docs/v5/concepts/animations/#Animating_settings} for more info\r\n     * @param   options  Animation options\r\n     * @return           Animation object\r\n     */ animate(options) {\n        const key = options.key;\n        const to = options.to;\n        const duration = options.duration || 0;\n        const loops = options.loops || 1;\n        const from = options.from === undefined ? this.get(key) : options.from;\n        const easing = options.easing === undefined ? $b4231ef84a5f8a61$export$45db2fc2f15997e7 : options.easing;\n        if (duration === 0) this.set(key, to);\n        else if (from === undefined || from === to) this.set(key, to);\n        else {\n            this.set(key, from);\n            const animation = this._animatingSettings[key] = new $baeade534ece7f4c$export$c35d437ae5945fcd(this, from, to, duration, easing, loops, this._animationTime());\n            this._startAnimation();\n            return animation;\n        }\n        const animation = new $baeade534ece7f4c$export$c35d437ae5945fcd(this, from, to, duration, easing, loops, null);\n        animation.stop();\n        return animation;\n    }\n    /**\r\n     * @ignore\r\n     */ animatePrivate(options) {\n        const key = options.key;\n        const to = options.to;\n        const duration = options.duration || 0;\n        const loops = options.loops || 1;\n        const from = options.from === undefined ? this.getPrivate(key) : options.from;\n        const easing = options.easing === undefined ? $b4231ef84a5f8a61$export$45db2fc2f15997e7 : options.easing;\n        if (duration === 0) this.setPrivate(key, to);\n        else if (from === undefined || from === to) this.setPrivate(key, to);\n        else {\n            this.setPrivate(key, from);\n            const animation = this._animatingPrivateSettings[key] = new $baeade534ece7f4c$export$c35d437ae5945fcd(this, from, to, duration, easing, loops, this._animationTime());\n            this._startAnimation();\n            return animation;\n        }\n        const animation = new $baeade534ece7f4c$export$c35d437ae5945fcd(this, from, to, duration, easing, loops, null);\n        animation.stop();\n        return animation;\n    }\n    _dispose() {}\n    /**\r\n     * Returns `true` if this element is disposed.\r\n     *\r\n     * @return Disposed\r\n     */ isDisposed() {\n        return this._disposed;\n    }\n    /**\r\n     * Disposes this object.\r\n     */ dispose() {\n        if (this.enableDispose && !this._disposed) {\n            this._disposed = true;\n            this._dispose();\n        }\n    }\n}\nclass $baeade534ece7f4c$export$bc644a473284d944 extends $baeade534ece7f4c$export$c72f6eaae7b9adff {\n    /**\r\n     * IMPORTANT! Do not instantiate this class via `new Class()` syntax.\r\n     *\r\n     * Use static method `Class.new()` instead.\r\n     *\r\n     * @see {@link https://www.amcharts.com/docs/v5/getting-started/#New_element_syntax} for more info\r\n     * @ignore\r\n     */ constructor(root, settings, isReal, templates = []){\n        super(settings);\n        Object.defineProperty(this, \"_root\", {\n            enumerable: true,\n            configurable: true,\n            writable: true,\n            value: void 0\n        });\n        Object.defineProperty(this, \"_user_id\", {\n            enumerable: true,\n            configurable: true,\n            writable: true,\n            value: void 0\n        }); // for testing purposes\n        Object.defineProperty(this, \"states\", {\n            enumerable: true,\n            configurable: true,\n            writable: true,\n            value: new (0, $dad453b54c84e86c$export$47283907dceba392)(this)\n        });\n        Object.defineProperty(this, \"adapters\", {\n            enumerable: true,\n            configurable: true,\n            writable: true,\n            value: new $baeade534ece7f4c$export$aa533d00238abcca(this)\n        });\n        Object.defineProperty(this, \"events\", {\n            enumerable: true,\n            configurable: true,\n            writable: true,\n            value: this._createEvents()\n        });\n        Object.defineProperty(this, \"_userPrivateProperties\", {\n            enumerable: true,\n            configurable: true,\n            writable: true,\n            value: {}\n        });\n        Object.defineProperty(this, \"_dirty\", {\n            enumerable: true,\n            configurable: true,\n            writable: true,\n            value: {}\n        });\n        Object.defineProperty(this, \"_dirtyPrivate\", {\n            enumerable: true,\n            configurable: true,\n            writable: true,\n            value: {}\n        });\n        Object.defineProperty(this, \"_template\", {\n            enumerable: true,\n            configurable: true,\n            writable: true,\n            value: void 0\n        });\n        // Templates for the themes\n        Object.defineProperty(this, \"_templates\", {\n            enumerable: true,\n            configurable: true,\n            writable: true,\n            value: []\n        });\n        // Internal templates which can be overridden by the user's templates\n        Object.defineProperty(this, \"_internalTemplates\", {\n            enumerable: true,\n            configurable: true,\n            writable: true,\n            value: void 0\n        });\n        // Default themes which can be overridden by the user's themes\n        Object.defineProperty(this, \"_defaultThemes\", {\n            enumerable: true,\n            configurable: true,\n            writable: true,\n            value: []\n        });\n        // Disposers for all of the templates\n        Object.defineProperty(this, \"_templateDisposers\", {\n            enumerable: true,\n            configurable: true,\n            writable: true,\n            value: []\n        });\n        Object.defineProperty(this, \"_disposers\", {\n            enumerable: true,\n            configurable: true,\n            writable: true,\n            value: []\n        });\n        // Whether the template setup function should be run\n        Object.defineProperty(this, \"_runSetup\", {\n            enumerable: true,\n            configurable: true,\n            writable: true,\n            value: true\n        });\n        Object.defineProperty(this, \"_disposerProperties\", {\n            enumerable: true,\n            configurable: true,\n            writable: true,\n            value: {}\n        });\n        if (!isReal) throw new Error(\"You cannot use `new Class()`, instead use `Class.new()`\");\n        this._root = root;\n        this._internalTemplates = templates;\n        if (settings.id) this._registerId(settings.id);\n    }\n    /**\r\n     * Use this method to create an instance of this class.\r\n     *\r\n     * @see {@link https://www.amcharts.com/docs/v5/getting-started/#New_element_syntax} for more info\r\n     * @param   root      Root element\r\n     * @param   settings  Settings\r\n     * @param   template  Template\r\n     * @return            Instantiated object\r\n     */ static new(root, settings, template) {\n        const x = new this(root, settings, true);\n        x._template = template;\n        x._afterNew();\n        return x;\n    }\n    static _new(root, settings, templates = []) {\n        const x = new this(root, settings, true, templates);\n        x._afterNew();\n        return x;\n    }\n    _afterNew() {\n        this._checkDirty();\n        let shouldApply = false;\n        const template = this._template;\n        if (template) {\n            shouldApply = true;\n            template._setObjectTemplate(this);\n        }\n        $2f30431acd054e2f$export$79b2f7037acddd43(this._internalTemplates, (template)=>{\n            shouldApply = true;\n            template._setObjectTemplate(this);\n        });\n        if (shouldApply) this._applyTemplates(false);\n        this.states.create(\"default\", {});\n        this._setDefaults();\n    }\n    // This is the same as _afterNew, except it also applies the themes.\n    // This should only be used for classes which don't have a parent (because they extend from Entity and not Sprite).\n    _afterNewApplyThemes() {\n        this._checkDirty();\n        const template = this._template;\n        if (template) template._setObjectTemplate(this);\n        $2f30431acd054e2f$export$79b2f7037acddd43(this._internalTemplates, (template)=>{\n            template._setObjectTemplate(this);\n        });\n        this.states.create(\"default\", {});\n        this._setDefaults();\n        this._applyThemes();\n    }\n    _createEvents() {\n        return new (0, $7e417cbab1b21893$export$ec8b666c5fe2c75a)();\n    }\n    /**\r\n     * @ignore\r\n     */ get classNames() {\n        return this.constructor.classNames;\n    }\n    /**\r\n     * @ignore\r\n     */ get className() {\n        return this.constructor.className;\n    }\n    _setDefaults() {}\n    _setDefaultFn(key, f) {\n        const value = this.get(key);\n        if (value) return value;\n        else {\n            const value = f();\n            this.set(key, value);\n            return value;\n        }\n    }\n    _setDefault(key, value) {\n        if (!this.has(key)) super.set(key, value);\n    }\n    _setRawDefault(key, value) {\n        if (!this.has(key)) super.setRaw(key, value);\n    }\n    _clearDirty() {\n        $e66f9343b5144e1a$export$ed97f33186d4b816(this._dirty).forEach((key)=>{\n            this._dirty[key] = false;\n        });\n        $e66f9343b5144e1a$export$ed97f33186d4b816(this._dirtyPrivate).forEach((key)=>{\n            this._dirtyPrivate[key] = false;\n        });\n    }\n    /**\r\n     * @ignore\r\n     */ isDirty(key) {\n        return !!this._dirty[key];\n    }\n    /**\r\n     * @ignore\r\n     */ isPrivateDirty(key) {\n        return !!this._dirtyPrivate[key];\n    }\n    _markDirtyKey(key) {\n        this._dirty[key] = true;\n        super._markDirtyKey(key);\n    }\n    _markDirtyPrivateKey(key) {\n        this._dirtyPrivate[key] = true;\n        super._markDirtyKey(key);\n    }\n    /**\r\n     * Checks if element is of certain class (or inherits one).\r\n     *\r\n     * @param   type  Class name to check\r\n     * @return {boolean} Is of class?\r\n     */ isType(type) {\n        return this.classNames.indexOf(type) !== -1;\n    }\n    _pushPropertyDisposer(key, disposer) {\n        let disposers = this._disposerProperties[key];\n        if (disposers === undefined) disposers = this._disposerProperties[key] = [];\n        disposers.push(disposer);\n        return disposer;\n    }\n    _disposeProperty(key) {\n        const disposers = this._disposerProperties[key];\n        if (disposers !== undefined) {\n            $2f30431acd054e2f$export$79b2f7037acddd43(disposers, (disposer)=>{\n                disposer.dispose();\n            });\n            delete this._disposerProperties[key];\n        }\n    }\n    /**\r\n     * @todo needs description\r\n     * @param  value  Template\r\n     */ set template(value) {\n        const template = this._template;\n        if (template !== value) {\n            this._template = value;\n            if (template) template._removeObjectTemplate(this);\n            if (value) value._setObjectTemplate(this);\n            this._applyTemplates();\n        }\n    }\n    get template() {\n        return this._template;\n    }\n    /**\r\n     * @ignore\r\n     */ markDirty() {\n        this._root._addDirtyEntity(this);\n    }\n    _startAnimation() {\n        this._root._addAnimation(this);\n    }\n    _animationTime() {\n        return this._root.animationTime;\n    }\n    _applyState(_name) {}\n    _applyStateAnimated(_name, _duration) {}\n    get(key, fallback) {\n        const value = this.adapters.fold(key, this._settings[key]);\n        if (value !== undefined) return value;\n        else return fallback;\n    }\n    /**\r\n     * @ignore\r\n     */ isUserSetting(key) {\n        return this._userProperties[key] || false;\n    }\n    /**\r\n     * Sets a setting `value` for the specified `key`, and returns the same `value`.\r\n     *\r\n     * @see {@link https://www.amcharts.com/docs/v5/concepts/settings/} for more info\r\n     * @param   key       Setting key\r\n     * @param   value     Setting value\r\n     * @return            Setting value\r\n     */ set(key, value) {\n        this._userProperties[key] = true;\n        return super.set(key, value);\n    }\n    /**\r\n     * @ignore\r\n     */ setRaw(key, value) {\n        this._userProperties[key] = true;\n        super.setRaw(key, value);\n    }\n    /**\r\n     * Sets a setting `value` for the specified `key` only if the value for this key was not set previously using set method, and returns the same `value`.\r\n     *\r\n     * @see {@link https://www.amcharts.com/docs/v5/concepts/settings/} for more info\r\n     * @param   key       Setting key\r\n     * @param   value     Setting value\r\n     * @return            Setting value\r\n     */ _setSoft(key, value) {\n        if (!this._userProperties[key]) return super.set(key, value);\n        return value;\n    }\n    /**\r\n     * Removes a setting value for the specified `key`.\r\n     *\r\n     * @see {@link https://www.amcharts.com/docs/v5/concepts/settings/} for more info\r\n     * @param   key       Setting key\r\n     */ remove(key) {\n        delete this._userProperties[key];\n        this._removeTemplateProperty(key);\n    }\n    /**\r\n     * @ignore\r\n     */ setPrivate(key, value) {\n        this._userPrivateProperties[key] = true;\n        return super.setPrivate(key, value);\n    }\n    /**\r\n     * @ignore\r\n     */ setPrivateRaw(key, value) {\n        this._userPrivateProperties[key] = true;\n        super.setPrivateRaw(key, value);\n    }\n    /**\r\n     * @ignore\r\n     */ removePrivate(key) {\n        delete this._userPrivateProperties[key];\n        this._removeTemplatePrivateProperty(key);\n    }\n    _setTemplateProperty(template, key, value) {\n        if (!this._userProperties[key]) {\n            const match = this._findTemplateByKey(key);\n            if (template === match) super.set(key, value);\n        }\n    }\n    _setTemplatePrivateProperty(template, key, value) {\n        if (!this._userPrivateProperties[key]) {\n            const match = this._findTemplateByPrivateKey(key);\n            if (template === match) super.setPrivate(key, value);\n        }\n    }\n    _removeTemplateProperty(key) {\n        if (!this._userProperties[key]) {\n            const match = this._findTemplateByKey(key);\n            if (match) // TODO don't stop the animation if the property didn't change\n            super.set(key, match._settings[key]);\n            else super.remove(key);\n        }\n    }\n    _removeTemplatePrivateProperty(key) {\n        if (!this._userPrivateProperties[key]) {\n            const match = this._findTemplateByPrivateKey(key);\n            if (match) // TODO don't stop the animation if the property didn't change\n            super.setPrivate(key, match._privateSettings[key]);\n            else super.removePrivate(key);\n        }\n    }\n    _walkParents(f) {\n        f(this._root._rootContainer);\n        f(this);\n    }\n    // TODO faster version of this method which is specialized to just 1 key\n    _applyStateByKey(name) {\n        const other = this.states.create(name, {});\n        const seen = {};\n        this._eachTemplate((template)=>{\n            const state = template.states.lookup(name);\n            if (state) state._apply(other, seen);\n        });\n        $e66f9343b5144e1a$export$79b2f7037acddd43(other._settings, (key)=>{\n            if (!seen[key] && !other._userSettings[key]) other.remove(key);\n        });\n    }\n    _applyTemplate(template, state) {\n        this._templateDisposers.push(template._apply(this, state));\n        $e66f9343b5144e1a$export$79b2f7037acddd43(template._settings, (key, value)=>{\n            if (!state.settings[key] && !this._userProperties[key]) {\n                state.settings[key] = true;\n                super.set(key, value);\n            }\n        });\n        $e66f9343b5144e1a$export$79b2f7037acddd43(template._privateSettings, (key, value)=>{\n            if (!state.privateSettings[key] && !this._userPrivateProperties[key]) {\n                state.privateSettings[key] = true;\n                super.setPrivate(key, value);\n            }\n        });\n        if (this._runSetup && template.setup) {\n            this._runSetup = false;\n            template.setup(this);\n        }\n    }\n    /**\r\n     * Calls the closure with each template and returns the first template which is true\r\n     */ _findStaticTemplate(f) {\n        if (this._template) {\n            if (f(this._template)) return this._template;\n        }\n    }\n    _eachTemplate(f) {\n        this._findStaticTemplate((template)=>{\n            f(template);\n            return false;\n        });\n        // _internalTemplates is sorted with most specific to the right\n        $2f30431acd054e2f$export$a40ba8785b7efce8(this._internalTemplates, f);\n        // _templates is sorted with most specific to the left\n        $2f30431acd054e2f$export$79b2f7037acddd43(this._templates, f);\n    }\n    _applyTemplates(remove = true) {\n        if (remove) this._disposeTemplates();\n        const state = {\n            settings: {},\n            privateSettings: {},\n            states: {}\n        };\n        this._eachTemplate((template)=>{\n            this._applyTemplate(template, state);\n        });\n        if (remove) {\n            $e66f9343b5144e1a$export$79b2f7037acddd43(this._settings, (key)=>{\n                if (!this._userProperties[key] && !state.settings[key]) super.remove(key);\n            });\n            $e66f9343b5144e1a$export$79b2f7037acddd43(this._privateSettings, (key)=>{\n                if (!this._userPrivateProperties[key] && !state.privateSettings[key]) super.removePrivate(key);\n            });\n        }\n    }\n    _findTemplate(f) {\n        const value = this._findStaticTemplate(f);\n        if (value === undefined) {\n            // _internalTemplates is sorted with most specific to the right\n            const value = $2f30431acd054e2f$export$cda8c4def7b6e027(this._internalTemplates, f);\n            if (value === undefined) // _templates is sorted with most specific to the left\n            return $2f30431acd054e2f$export$71aa6c912b956294(this._templates, f);\n            else return value;\n        } else return value;\n    }\n    _findTemplateByKey(key) {\n        return this._findTemplate((template)=>{\n            return key in template._settings;\n        });\n    }\n    _findTemplateByPrivateKey(key) {\n        return this._findTemplate((template)=>{\n            return key in template._privateSettings;\n        });\n    }\n    _disposeTemplates() {\n        $2f30431acd054e2f$export$79b2f7037acddd43(this._templateDisposers, (disposer)=>{\n            disposer.dispose();\n        });\n        this._templateDisposers.length = 0;\n    }\n    _removeTemplates() {\n        $2f30431acd054e2f$export$79b2f7037acddd43(this._templates, (template)=>{\n            template._removeObjectTemplate(this);\n        });\n        this._templates.length = 0;\n    }\n    _applyThemes(force = false) {\n        let isConnected = false;\n        const defaults = [];\n        let themes = [];\n        const themeTags = new Set();\n        const tags = this.get(\"themeTagsSelf\");\n        if (tags) $2f30431acd054e2f$export$79b2f7037acddd43(tags, (tag)=>{\n            themeTags.add(tag);\n        });\n        this._walkParents((entity)=>{\n            if (entity === this._root._rootContainer) isConnected = true;\n            if (entity._defaultThemes.length > 0) defaults.push(entity._defaultThemes);\n            const theme = entity.get(\"themes\");\n            if (theme) themes.push(theme);\n            const tags = entity.get(\"themeTags\");\n            if (tags) $2f30431acd054e2f$export$79b2f7037acddd43(tags, (tag)=>{\n                themeTags.add(tag);\n            });\n        });\n        themes = defaults.concat(themes);\n        this._removeTemplates();\n        if (isConnected || force) $2f30431acd054e2f$export$a40ba8785b7efce8(this.classNames, (name)=>{\n            const allRules = [];\n            $2f30431acd054e2f$export$79b2f7037acddd43(themes, (themes)=>{\n                $2f30431acd054e2f$export$79b2f7037acddd43(themes, (theme)=>{\n                    const rules = theme._lookupRules(name);\n                    if (rules) $2f30431acd054e2f$export$a40ba8785b7efce8(rules, (rule)=>{\n                        const matches = rule.tags.every((tag)=>{\n                            return themeTags.has(tag);\n                        });\n                        if (matches) {\n                            const result = $2f30431acd054e2f$export$227c6173d90c5e68(allRules, (x)=>{\n                                const order = $919e90129af4490b$export$398604a469f7de9a(rule.tags.length, x.tags.length);\n                                if (order === 0) return $919e90129af4490b$export$cb07857b027678fa(rule.tags, x.tags, $919e90129af4490b$export$398604a469f7de9a);\n                                else return order;\n                            });\n                            allRules.splice(result.index, 0, rule);\n                        }\n                    });\n                });\n            });\n            $2f30431acd054e2f$export$79b2f7037acddd43(allRules, (rule)=>{\n                this._templates.push(rule.template);\n                rule.template._setObjectTemplate(this);\n            });\n        });\n        this._applyTemplates();\n        if (isConnected || force) // This causes it to only run the setup function the first time that the themes are applied\n        this._runSetup = false;\n        return isConnected || force;\n    }\n    _changed() {}\n    _beforeChanged() {\n        if (this.isDirty(\"id\")) {\n            const id = this.get(\"id\");\n            if (id) this._registerId(id);\n            const prevId = this._prevSettings.id;\n            if (prevId) delete (0, $ca44c6881f0f20f2$export$4bb7493d241fd8a5).entitiesById[prevId];\n        }\n    }\n    _registerId(id) {\n        if ((0, $ca44c6881f0f20f2$export$4bb7493d241fd8a5).entitiesById[id] && (0, $ca44c6881f0f20f2$export$4bb7493d241fd8a5).entitiesById[id] !== this) throw new Error(\"An entity with id \\\"\" + id + \"\\\" already exists.\");\n        (0, $ca44c6881f0f20f2$export$4bb7493d241fd8a5).entitiesById[id] = this;\n    }\n    _afterChanged() {}\n    /**\r\n     * @ignore\r\n     */ addDisposer(disposer) {\n        this._disposers.push(disposer);\n        return disposer;\n    }\n    _dispose() {\n        super._dispose();\n        const template = this._template;\n        if (template) template._removeObjectTemplate(this);\n        $2f30431acd054e2f$export$79b2f7037acddd43(this._internalTemplates, (template)=>{\n            template._removeObjectTemplate(this);\n        });\n        this._removeTemplates();\n        this._disposeTemplates();\n        this.events.dispose();\n        this._disposers.forEach((x)=>{\n            x.dispose();\n        });\n        $e66f9343b5144e1a$export$79b2f7037acddd43(this._disposerProperties, (_, disposers)=>{\n            $2f30431acd054e2f$export$79b2f7037acddd43(disposers, (disposer)=>{\n                disposer.dispose();\n            });\n        });\n        const id = this.get(\"id\");\n        if (id) delete (0, $ca44c6881f0f20f2$export$4bb7493d241fd8a5).entitiesById[id];\n    }\n    /**\r\n     * Creates and returns a \"disposable\" timeout.\r\n     *\r\n     * @param   fn     Callback\r\n     * @param   delay  Delay in milliseconds\r\n     * @return         Timeout disposer\r\n     */ setTimeout(fn, delay) {\n        const id = setTimeout(()=>{\n            this.removeDispose(disposer);\n            fn();\n        }, delay);\n        const disposer = new (0, $a363f66303166aa1$export$6039fc6176d96e35)(()=>{\n            clearTimeout(id);\n        });\n        this._disposers.push(disposer);\n        return disposer;\n    }\n    /**\r\n     * @ignore\r\n     */ removeDispose(target) {\n        if (!this.isDisposed()) {\n            let index = $2f30431acd054e2f$export$305f7d4e9d4624f2(this._disposers, target);\n            if (index > -1) this._disposers.splice(index, 1);\n        }\n        target.dispose();\n    }\n    /**\r\n     * @ignore\r\n     */ hasTag(tag) {\n        return $2f30431acd054e2f$export$305f7d4e9d4624f2(this.get(\"themeTags\", []), tag) !== -1;\n    }\n    /**\r\n     * @ignore\r\n     */ addTag(tag) {\n        if (!this.hasTag(tag)) {\n            const tags = this.get(\"themeTags\", []);\n            tags.push(tag);\n            this.set(\"themeTags\", tags);\n        }\n    }\n    /**\r\n     * @ignore\r\n     */ removeTag(tag) {\n        if (this.hasTag(tag)) {\n            const tags = this.get(\"themeTags\", []);\n            $2f30431acd054e2f$export$cd7f480d6b8286c3(tags, tag);\n            this.set(\"themeTags\", tags);\n        }\n    }\n    _t(text, locale, ...rest) {\n        return this._root.language.translate(text, locale, ...rest);\n    }\n    /**\r\n     * An instance of [[Root]] object.\r\n     *\r\n     * @readonly\r\n     * @since 5.0.6\r\n     * @return Root object\r\n     */ get root() {\n        return this._root;\n    }\n}\nObject.defineProperty($baeade534ece7f4c$export$bc644a473284d944, \"className\", {\n    enumerable: true,\n    configurable: true,\n    writable: true,\n    value: \"Entity\"\n});\nObject.defineProperty($baeade534ece7f4c$export$bc644a473284d944, \"classNames\", {\n    enumerable: true,\n    configurable: true,\n    writable: true,\n    value: [\n        \"Entity\"\n    ]\n});\n\n\n\n\n\n\n\nfunction $2d9a18dcb72760f7$var$disposeSettings(settings) {\n    $e66f9343b5144e1a$export$79b2f7037acddd43(settings, (_key, value)=>{\n        if ($f63bdea45a89cf24$export$a6cdc56e425d0d0a(value) && typeof value.dispose === \"function\") {\n            value.enableDispose = true;\n            value.dispose();\n        }\n    });\n}\nclass $2d9a18dcb72760f7$export$39a8ed24daf9361f {\n    constructor(name, template, settings){\n        Object.defineProperty(this, \"_settings\", {\n            enumerable: true,\n            configurable: true,\n            writable: true,\n            value: void 0\n        });\n        Object.defineProperty(this, \"_name\", {\n            enumerable: true,\n            configurable: true,\n            writable: true,\n            value: void 0\n        });\n        Object.defineProperty(this, \"_template\", {\n            enumerable: true,\n            configurable: true,\n            writable: true,\n            value: void 0\n        });\n        this._name = name;\n        this._template = template;\n        this._settings = settings;\n    }\n    _dispose() {\n        $2d9a18dcb72760f7$var$disposeSettings(this._settings);\n    }\n    get(key, fallback) {\n        const value = this._settings[key];\n        if (value !== undefined) return value;\n        else return fallback;\n    }\n    set(key, value) {\n        this._settings[key] = value;\n        // TODO maybe only do this if the value changed ?\n        this._template._stateChanged(this._name);\n    }\n    remove(key) {\n        delete this._settings[key];\n        // TODO maybe only do this if the value changed ?\n        this._template._stateChanged(this._name);\n    }\n    setAll(settings) {\n        $e66f9343b5144e1a$export$ed97f33186d4b816(settings).forEach((key)=>{\n            this._settings[key] = settings[key];\n        });\n        this._template._stateChanged(this._name);\n    }\n    _apply(other, seen) {\n        $e66f9343b5144e1a$export$79b2f7037acddd43(this._settings, (key, value)=>{\n            if (!seen[key] && !other._userSettings[key]) {\n                seen[key] = true;\n                other.setRaw(key, value);\n            }\n        });\n    }\n}\nclass $2d9a18dcb72760f7$export$d10b0e89859ffbd4 {\n    constructor(template){\n        Object.defineProperty(this, \"_template\", {\n            enumerable: true,\n            configurable: true,\n            writable: true,\n            value: void 0\n        });\n        Object.defineProperty(this, \"_states\", {\n            enumerable: true,\n            configurable: true,\n            writable: true,\n            value: {}\n        });\n        this._template = template;\n    }\n    _dispose() {\n        $e66f9343b5144e1a$export$79b2f7037acddd43(this._states, (_key, state)=>{\n            state._dispose();\n        });\n    }\n    lookup(name) {\n        return this._states[name];\n    }\n    create(name, settings) {\n        const state = this._states[name];\n        if (state) {\n            state.setAll(settings);\n            return state;\n        } else {\n            const state = new $2d9a18dcb72760f7$export$39a8ed24daf9361f(name, this._template, settings);\n            this._states[name] = state;\n            this._template._stateChanged(name);\n            return state;\n        }\n    }\n    remove(name) {\n        delete this._states[name];\n        this._template._stateChanged(name);\n    }\n    _apply(entity, state) {\n        $e66f9343b5144e1a$export$79b2f7037acddd43(this._states, (key, value)=>{\n            let seen = state.states[key];\n            if (seen == null) seen = state.states[key] = {};\n            const other = entity.states.create(key, {});\n            value._apply(other, seen);\n        });\n    }\n}\nclass $2d9a18dcb72760f7$export$a331a2a1dc9c3ce4 {\n    constructor(){\n        Object.defineProperty(this, \"_callbacks\", {\n            enumerable: true,\n            configurable: true,\n            writable: true,\n            value: {}\n        });\n    }\n    add(key, callback) {\n        let callbacks = this._callbacks[key];\n        if (callbacks === undefined) callbacks = this._callbacks[key] = [];\n        callbacks.push(callback);\n        return new (0, $a363f66303166aa1$export$6039fc6176d96e35)(()=>{\n            $2f30431acd054e2f$export$2529f734547e2830(callbacks, callback);\n            if (callbacks.length === 0) delete this._callbacks[key];\n        });\n    }\n    remove(key) {\n        const callbacks = this._callbacks[key];\n        if (callbacks !== undefined) delete this._callbacks[key];\n    }\n    _apply(entity) {\n        const disposers = [];\n        $e66f9343b5144e1a$export$79b2f7037acddd43(this._callbacks, (key, callbacks)=>{\n            $2f30431acd054e2f$export$79b2f7037acddd43(callbacks, (callback)=>{\n                disposers.push(entity.adapters.add(key, callback));\n            });\n        });\n        return new (0, $a363f66303166aa1$export$9720df365053d143)(disposers);\n    }\n}\nclass $2d9a18dcb72760f7$export$14416b8d99d47caa {\n    constructor(settings, isReal){\n        Object.defineProperty(this, \"_disposed\", {\n            enumerable: true,\n            configurable: true,\n            writable: true,\n            value: false\n        });\n        Object.defineProperty(this, \"_settings\", {\n            enumerable: true,\n            configurable: true,\n            writable: true,\n            value: void 0\n        });\n        Object.defineProperty(this, \"_privateSettings\", {\n            enumerable: true,\n            configurable: true,\n            writable: true,\n            value: {}\n        });\n        // TODO code duplication with Properties\n        Object.defineProperty(this, \"_settingEvents\", {\n            enumerable: true,\n            configurable: true,\n            writable: true,\n            value: {}\n        });\n        Object.defineProperty(this, \"_privateSettingEvents\", {\n            enumerable: true,\n            configurable: true,\n            writable: true,\n            value: {}\n        });\n        Object.defineProperty(this, \"_entities\", {\n            enumerable: true,\n            configurable: true,\n            writable: true,\n            value: []\n        });\n        Object.defineProperty(this, \"states\", {\n            enumerable: true,\n            configurable: true,\n            writable: true,\n            value: new $2d9a18dcb72760f7$export$d10b0e89859ffbd4(this)\n        });\n        Object.defineProperty(this, \"adapters\", {\n            enumerable: true,\n            configurable: true,\n            writable: true,\n            value: new $2d9a18dcb72760f7$export$a331a2a1dc9c3ce4()\n        });\n        Object.defineProperty(this, \"events\", {\n            enumerable: true,\n            configurable: true,\n            writable: true,\n            value: new (0, $7e417cbab1b21893$export$ec8b666c5fe2c75a)()\n        });\n        Object.defineProperty(this, \"setup\", {\n            enumerable: true,\n            configurable: true,\n            writable: true,\n            value: void 0\n        });\n        if (!isReal) throw new Error(\"You cannot use `new Class()`, instead use `Class.new()`\");\n        this._settings = settings;\n    }\n    /**\r\n     * Use this method to create an instance of this class.\r\n     *\r\n     * @see {@link https://www.amcharts.com/docs/v5/getting-started/#New_element_syntax} for more info\r\n     * @param   root      Root element\r\n     * @param   settings  Settings\r\n     * @param   template  Template\r\n     * @return            Instantiated object\r\n     */ static new(settings) {\n        return new $2d9a18dcb72760f7$export$14416b8d99d47caa(settings, true);\n    }\n    _dispose() {\n        $2d9a18dcb72760f7$var$disposeSettings(this._settings);\n        $2d9a18dcb72760f7$var$disposeSettings(this._privateSettings);\n    }\n    /**\r\n     * Returns `true` if this element is disposed.\r\n     *\r\n     * @return Disposed\r\n     */ isDisposed() {\n        return this._disposed;\n    }\n    /**\r\n     * Disposes this object.\r\n     */ dispose() {\n        if (!this._disposed) {\n            this._disposed = true;\n            this._dispose();\n        }\n    }\n    _checkDisposed() {\n        if (this._disposed) throw new Error(\"Template is disposed\");\n    }\n    /**\r\n     * Array of all entities using this template.\r\n     */ get entities() {\n        return this._entities;\n    }\n    get(key, fallback) {\n        this._checkDisposed();\n        const value = this._settings[key];\n        if (value !== undefined) return value;\n        else return fallback;\n    }\n    setRaw(key, value) {\n        this._checkDisposed();\n        this._settings[key] = value;\n    }\n    set(key, value) {\n        this._checkDisposed();\n        if (this._settings[key] !== value) {\n            this.setRaw(key, value);\n            this._entities.forEach((entity)=>{\n                entity._setTemplateProperty(this, key, value);\n            });\n        }\n    }\n    remove(key) {\n        this._checkDisposed();\n        if (key in this._settings) {\n            delete this._settings[key];\n            this._entities.forEach((entity)=>{\n                entity._removeTemplateProperty(key);\n            });\n        }\n    }\n    removeAll() {\n        this._checkDisposed();\n        $e66f9343b5144e1a$export$79b2f7037acddd43(this._settings, (key, _value)=>{\n            this.remove(key);\n        });\n    }\n    getPrivate(key, fallback) {\n        this._checkDisposed();\n        const value = this._privateSettings[key];\n        if (value !== undefined) return value;\n        else return fallback;\n    }\n    setPrivateRaw(key, value) {\n        this._checkDisposed();\n        this._privateSettings[key] = value;\n        return value;\n    }\n    setPrivate(key, value) {\n        this._checkDisposed();\n        if (this._privateSettings[key] !== value) {\n            this.setPrivateRaw(key, value);\n            this._entities.forEach((entity)=>{\n                entity._setTemplatePrivateProperty(this, key, value);\n            });\n        }\n        return value;\n    }\n    removePrivate(key) {\n        this._checkDisposed();\n        if (key in this._privateSettings) {\n            delete this._privateSettings[key];\n            this._entities.forEach((entity)=>{\n                entity._removeTemplatePrivateProperty(key);\n            });\n        }\n    }\n    setAll(value) {\n        this._checkDisposed();\n        $e66f9343b5144e1a$export$79b2f7037acddd43(value, (key, value)=>{\n            this.set(key, value);\n        });\n    }\n    // TODO code duplication with Properties\n    on(key, callback) {\n        this._checkDisposed();\n        let events = this._settingEvents[key];\n        if (events === undefined) events = this._settingEvents[key] = [];\n        events.push(callback);\n        return new (0, $a363f66303166aa1$export$6039fc6176d96e35)(()=>{\n            $2f30431acd054e2f$export$2529f734547e2830(events, callback);\n            if (events.length === 0) delete this._settingEvents[key];\n        });\n    }\n    // TODO code duplication with Properties\n    onPrivate(key, callback) {\n        this._checkDisposed();\n        let events = this._privateSettingEvents[key];\n        if (events === undefined) events = this._privateSettingEvents[key] = [];\n        events.push(callback);\n        return new (0, $a363f66303166aa1$export$6039fc6176d96e35)(()=>{\n            $2f30431acd054e2f$export$2529f734547e2830(events, callback);\n            if (events.length === 0) delete this._privateSettingEvents[key];\n        });\n    }\n    _apply(entity, state) {\n        this._checkDisposed();\n        const disposers = [];\n        $e66f9343b5144e1a$export$79b2f7037acddd43(this._settingEvents, (key, events)=>{\n            $2f30431acd054e2f$export$79b2f7037acddd43(events, (event)=>{\n                disposers.push(entity.on(key, event));\n            });\n        });\n        $e66f9343b5144e1a$export$79b2f7037acddd43(this._privateSettingEvents, (key, events)=>{\n            $2f30431acd054e2f$export$79b2f7037acddd43(events, (event)=>{\n                disposers.push(entity.onPrivate(key, event));\n            });\n        });\n        this.states._apply(entity, state);\n        disposers.push(this.adapters._apply(entity));\n        disposers.push(entity.events.copyFrom(this.events));\n        return new (0, $a363f66303166aa1$export$9720df365053d143)(disposers);\n    }\n    _setObjectTemplate(entity) {\n        this._checkDisposed();\n        this._entities.push(entity);\n    }\n    _removeObjectTemplate(entity) {\n        //this._checkDisposed();\n        $2f30431acd054e2f$export$cd7f480d6b8286c3(this._entities, entity);\n    }\n    _stateChanged(name) {\n        this._checkDisposed();\n        this._entities.forEach((entity)=>{\n            entity._applyStateByKey(name);\n        });\n    }\n}\n\n\n\n\n\n\n\n\n\n\n\n//import { populateString } from \"../util/PopulateString\";\n/**\r\n * An [[EventDispatcher]] for [[Sprite]].\r\n *\r\n * @see {@link https://www.amcharts.com/docs/v5/concepts/events/} for more info\r\n */ class $d3b9c83dc790fa66$var$SpriteEventDispatcher extends (0, $7e417cbab1b21893$export$ec8b666c5fe2c75a) {\n    constructor(sprite){\n        super();\n        Object.defineProperty(this, \"_sprite\", {\n            enumerable: true,\n            configurable: true,\n            writable: true,\n            value: void 0\n        });\n        Object.defineProperty(this, \"_rendererDisposers\", {\n            enumerable: true,\n            configurable: true,\n            writable: true,\n            value: {}\n        });\n        Object.defineProperty(this, \"_dispatchParents\", {\n            enumerable: true,\n            configurable: true,\n            writable: true,\n            value: true\n        });\n        this._sprite = sprite;\n    }\n    _makePointerEvent(key, event) {\n        return {\n            type: key,\n            originalEvent: event.event,\n            point: event.point,\n            simulated: event.simulated,\n            native: event.native,\n            target: this._sprite\n        };\n    }\n    _onRenderer(key, dispatch) {\n        // TODO: is this OK? it'd be good not to require to set this on each individual element\n        this._sprite.set(\"interactive\", true);\n        this._sprite._display.interactive = true;\n        let events = this._rendererDisposers[key];\n        if (events === undefined) {\n            const disposer = this._sprite._display.on(key, (e)=>{\n                dispatch.call(this, e);\n            });\n            events = this._rendererDisposers[key] = new (0, $a363f66303166aa1$export$8a02b29de282f67f)(()=>{\n                delete this._rendererDisposers[key];\n                disposer.dispose();\n            });\n        }\n        return events.increment();\n    }\n    _on(once, type, callback, context, shouldClone, dispatch) {\n        const info = super._on(once, type, callback, context, shouldClone, dispatch);\n        const rendererEvent = $d3b9c83dc790fa66$var$SpriteEventDispatcher.RENDERER_EVENTS[type];\n        if (rendererEvent !== undefined) info.disposer = new (0, $a363f66303166aa1$export$9720df365053d143)([\n            info.disposer,\n            this._onRenderer(type, rendererEvent)\n        ]);\n        return info;\n    }\n    /**\r\n     * Will stop any bubbling up of the event to element's parents.\r\n     *\r\n     * Should be called in an event handler, e.g.:\r\n     *\r\n     * ```TypeScript\r\n     * element.events.on(\"pointerdown\", function(ev) {\r\n     *   // Do something here and prevent from \"pointerdown\" bubbling up\r\n     *   // ...\r\n     *   ev.target.events.stopParentDispatch();\r\n     * });\r\n     * ```\r\n     * ```JavaScript\r\n     * element.events.on(\"pointerdown\", function(ev) {\r\n     *   // Do something here and prevent from \"pointerdown\" bubbling up\r\n     *   // ...\r\n     *   ev.target.events.stopParentDispatch();\r\n     * });\r\n     * ```\r\n     */ stopParentDispatch() {\n        this._dispatchParents = false;\n    }\n    /**\r\n     * @ignore\r\n     */ dispatchParents(type, event) {\n        const old = this._dispatchParents;\n        this._dispatchParents = true;\n        try {\n            this.dispatch(type, event);\n            if (this._dispatchParents && this._sprite.parent) this._sprite.parent.events.dispatchParents(type, event);\n        } finally{\n            this._dispatchParents = old;\n        }\n    }\n}\nObject.defineProperty($d3b9c83dc790fa66$var$SpriteEventDispatcher, \"RENDERER_EVENTS\", {\n    enumerable: true,\n    configurable: true,\n    writable: true,\n    value: {\n        \"click\": function(event) {\n            if (this.isEnabled(\"click\") && !this._sprite.isDragging() && this._sprite._hasDown() && !this._sprite._hasMoved(this._makePointerEvent(\"click\", event))) this.dispatch(\"click\", this._makePointerEvent(\"click\", event));\n        },\n        \"rightclick\": function(event) {\n            if (this.isEnabled(\"rightclick\")) this.dispatch(\"rightclick\", this._makePointerEvent(\"rightclick\", event));\n        },\n        \"middleclick\": function(event) {\n            if (this.isEnabled(\"middleclick\")) this.dispatch(\"middleclick\", this._makePointerEvent(\"middleclick\", event));\n        },\n        \"dblclick\": function(event) {\n            this.dispatchParents(\"dblclick\", this._makePointerEvent(\"dblclick\", event));\n        },\n        \"pointerover\": function(event) {\n            const sprite = this._sprite;\n            let dispatch = true;\n            if (sprite.getPrivate(\"trustBounds\")) {\n                sprite._getBounds();\n                const bounds = sprite.globalBounds();\n                if (sprite.isType(\"Graphics\")) {\n                    const strokeWidth = sprite.get(\"strokeWidth\", 1) / 2;\n                    if (strokeWidth >= 1) {\n                        bounds.left -= strokeWidth;\n                        bounds.right += strokeWidth;\n                        bounds.top -= strokeWidth;\n                        bounds.bottom += strokeWidth;\n                    }\n                }\n                if (!$f43e9e04b3f0548b$export$4e985c1b25c164db(event.point, bounds)) {\n                    dispatch = false;\n                    sprite._root._renderer.removeHovering(sprite._display);\n                }\n            }\n            if (dispatch && this.isEnabled(\"pointerover\")) this.dispatch(\"pointerover\", this._makePointerEvent(\"pointerover\", event));\n        },\n        \"pointerout\": function(event) {\n            if (this.isEnabled(\"pointerout\")) this.dispatch(\"pointerout\", this._makePointerEvent(\"pointerout\", event));\n        },\n        \"pointerdown\": function(event) {\n            this.dispatchParents(\"pointerdown\", this._makePointerEvent(\"pointerdown\", event));\n        },\n        \"pointerup\": function(event) {\n            if (this.isEnabled(\"pointerup\")) this.dispatch(\"pointerup\", this._makePointerEvent(\"pointerup\", event));\n        },\n        \"globalpointerup\": function(event) {\n            if (this.isEnabled(\"globalpointerup\")) this.dispatch(\"globalpointerup\", this._makePointerEvent(\"globalpointerup\", event));\n        },\n        \"globalpointermove\": function(event) {\n            if (this.isEnabled(\"globalpointermove\")) this.dispatch(\"globalpointermove\", this._makePointerEvent(\"globalpointermove\", event));\n        },\n        \"wheel\": function(event) {\n            this.dispatchParents(\"wheel\", {\n                type: \"wheel\",\n                target: this._sprite,\n                originalEvent: event.event,\n                point: event.point\n            });\n        }\n    }\n});\nclass $d3b9c83dc790fa66$export$3075603db8e6204c extends (0, $baeade534ece7f4c$export$bc644a473284d944) {\n    constructor(){\n        super(...arguments);\n        Object.defineProperty(this, \"_adjustedLocalBounds\", {\n            enumerable: true,\n            configurable: true,\n            writable: true,\n            value: {\n                left: 0,\n                right: 0,\n                top: 0,\n                bottom: 0\n            }\n        });\n        Object.defineProperty(this, \"_localBounds\", {\n            enumerable: true,\n            configurable: true,\n            writable: true,\n            value: {\n                left: 0,\n                right: 0,\n                top: 0,\n                bottom: 0\n            }\n        });\n        Object.defineProperty(this, \"_parent\", {\n            enumerable: true,\n            configurable: true,\n            writable: true,\n            value: void 0\n        });\n        Object.defineProperty(this, \"_dataItem\", {\n            enumerable: true,\n            configurable: true,\n            writable: true,\n            value: void 0\n        });\n        Object.defineProperty(this, \"_templateField\", {\n            enumerable: true,\n            configurable: true,\n            writable: true,\n            value: void 0\n        });\n        Object.defineProperty(this, \"_sizeDirty\", {\n            enumerable: true,\n            configurable: true,\n            writable: true,\n            value: false\n        });\n        // Will be true only when dragging\n        Object.defineProperty(this, \"_isDragging\", {\n            enumerable: true,\n            configurable: true,\n            writable: true,\n            value: false\n        });\n        // The event when the dragging starts\n        Object.defineProperty(this, \"_dragEvent\", {\n            enumerable: true,\n            configurable: true,\n            writable: true,\n            value: void 0\n        });\n        // The position when dragging starts\n        Object.defineProperty(this, \"_dragPoint\", {\n            enumerable: true,\n            configurable: true,\n            writable: true,\n            value: void 0\n        });\n        Object.defineProperty(this, \"_isHidden\", {\n            enumerable: true,\n            configurable: true,\n            writable: true,\n            value: false\n        });\n        Object.defineProperty(this, \"_isShowing\", {\n            enumerable: true,\n            configurable: true,\n            writable: true,\n            value: false\n        });\n        Object.defineProperty(this, \"_isHiding\", {\n            enumerable: true,\n            configurable: true,\n            writable: true,\n            value: false\n        });\n        Object.defineProperty(this, \"_isDown\", {\n            enumerable: true,\n            configurable: true,\n            writable: true,\n            value: false\n        });\n        Object.defineProperty(this, \"_downPoint\", {\n            enumerable: true,\n            configurable: true,\n            writable: true,\n            value: void 0\n        });\n        Object.defineProperty(this, \"_downPoints\", {\n            enumerable: true,\n            configurable: true,\n            writable: true,\n            value: {}\n        });\n        Object.defineProperty(this, \"_toggleDp\", {\n            enumerable: true,\n            configurable: true,\n            writable: true,\n            value: void 0\n        });\n        Object.defineProperty(this, \"_dragDp\", {\n            enumerable: true,\n            configurable: true,\n            writable: true,\n            value: void 0\n        });\n        Object.defineProperty(this, \"_tooltipDp\", {\n            enumerable: true,\n            configurable: true,\n            writable: true,\n            value: void 0\n        });\n        Object.defineProperty(this, \"_hoverDp\", {\n            enumerable: true,\n            configurable: true,\n            writable: true,\n            value: void 0\n        });\n        Object.defineProperty(this, \"_focusDp\", {\n            enumerable: true,\n            configurable: true,\n            writable: true,\n            value: void 0\n        });\n        Object.defineProperty(this, \"_tooltipMoveDp\", {\n            enumerable: true,\n            configurable: true,\n            writable: true,\n            value: void 0\n        });\n        Object.defineProperty(this, \"_tooltipPointerDp\", {\n            enumerable: true,\n            configurable: true,\n            writable: true,\n            value: void 0\n        });\n        Object.defineProperty(this, \"_statesHandled\", {\n            enumerable: true,\n            configurable: true,\n            writable: true,\n            value: false\n        });\n    }\n    _afterNew() {\n        this.setPrivateRaw(\"visible\", true);\n        super._afterNew();\n    }\n    /**\r\n     * Marks some setting as dirty. Could be used to trigger adapter.\r\n     * @param key\r\n     */ markDirtyKey(key) {\n        this._markDirtyKey(key);\n    }\n    _markDirtyKey(key) {\n        super._markDirtyKey(key);\n        if (key == \"x\" || key == \"y\" || key == \"dx\" || key == \"dy\") {\n            this.markDirtyBounds();\n            this._addPercentagePositionChildren();\n            this.markDirtyPosition();\n        }\n    }\n    _markDirtyPrivateKey(key) {\n        super._markDirtyPrivateKey(key);\n        if (key == \"x\" || key == \"y\") this.markDirtyPosition();\n    }\n    _removeTemplateField() {\n        if (this._templateField) this._templateField._removeObjectTemplate(this);\n    }\n    _createEvents() {\n        return new $d3b9c83dc790fa66$var$SpriteEventDispatcher(this);\n    }\n    _processTemplateField() {\n        let template;\n        const field = this.get(\"templateField\");\n        if (field) {\n            const dataItem = this.dataItem;\n            if (dataItem) {\n                const context = dataItem.dataContext;\n                if (context) {\n                    template = context[field];\n                    if (!(template instanceof (0, $2d9a18dcb72760f7$export$14416b8d99d47caa)) && template) template = (0, $2d9a18dcb72760f7$export$14416b8d99d47caa).new(template);\n                }\n            }\n        }\n        if (this._templateField !== template) {\n            this._removeTemplateField();\n            this._templateField = template;\n            if (template) template._setObjectTemplate(this);\n            this._applyTemplates();\n        }\n    }\n    // TODO change this to run before the element is added to the parent, so that way\n    //      it doesn't need to apply the themes twice\n    _setDataItem(dataItem) {\n        const oldDataItem = this._dataItem;\n        this._dataItem = dataItem;\n        this._processTemplateField();\n        const eventType = \"dataitemchanged\";\n        if (dataItem != oldDataItem) {\n            if (this.events.isEnabled(eventType)) this.events.dispatch(eventType, {\n                type: eventType,\n                target: this,\n                oldDataItem: oldDataItem,\n                newDataItem: dataItem\n            });\n        }\n    }\n    /**\r\n     * A [[DataItem]] used for this element.\r\n     *\r\n     * NOTE: data item is being assigned automatically in most cases where it\r\n     * matters. Use this accessor to set data item only if you know what you're\r\n     * doing.\r\n     *\r\n     * @param  value  Data item\r\n     */ set dataItem(value) {\n        this._setDataItem(value);\n    }\n    /**\r\n     * @return DataItem\r\n     */ get dataItem() {\n        if (this._dataItem) return this._dataItem;\n        else {\n            let parent = this._parent;\n            while(parent){\n                if (parent._dataItem) return parent._dataItem;\n                else parent = parent._parent;\n            }\n        }\n    }\n    _addPercentageSizeChildren() {\n        let parent = this.parent;\n        if (parent) {\n            if (this.get(\"width\") instanceof (0, $bd0d0c10fd30006b$export$cbc348af47898b5e) || this.get(\"height\") instanceof (0, $bd0d0c10fd30006b$export$cbc348af47898b5e)) $2f30431acd054e2f$export$3589e1fa93f0a8a5(parent._percentageSizeChildren, this);\n            else $2f30431acd054e2f$export$2529f734547e2830(parent._percentageSizeChildren, this);\n        }\n    }\n    _addPercentagePositionChildren() {\n        let parent = this.parent;\n        if (parent) {\n            if (this.get(\"x\") instanceof (0, $bd0d0c10fd30006b$export$cbc348af47898b5e) || this.get(\"y\") instanceof (0, $bd0d0c10fd30006b$export$cbc348af47898b5e)) $2f30431acd054e2f$export$3589e1fa93f0a8a5(parent._percentagePositionChildren, this);\n            else $2f30431acd054e2f$export$2529f734547e2830(parent._percentagePositionChildren, this);\n        }\n    }\n    /**\r\n     * @ignore\r\n     */ markDirtyPosition() {\n        this._root._addDirtyPosition(this);\n    }\n    updatePivotPoint() {\n        const bounds = this._localBounds;\n        if (bounds) {\n            const centerX = this.get(\"centerX\");\n            if (centerX != null) this._display.pivot.x = bounds.left + $05b1b40b69b15016$export$302dfacf2b0a56fe(centerX, bounds.right - bounds.left);\n            const centerY = this.get(\"centerY\");\n            if (centerY != null) this._display.pivot.y = bounds.top + $05b1b40b69b15016$export$302dfacf2b0a56fe(centerY, bounds.bottom - bounds.top);\n        }\n    }\n    _beforeChanged() {\n        super._beforeChanged();\n        // handling states in beforeChanged, otherwise states is not applied without animated theme\n        this._handleStates();\n        if (this.isDirty(\"tooltip\")) {\n            const previous = this._prevSettings.tooltip;\n            if (previous) previous.dispose();\n        }\n        if (this.isDirty(\"layer\") || this.isDirty(\"layerMargin\")) {\n            this._display.setLayer(this.get(\"layer\"), this.get(\"layerMargin\"));\n            this.markDirtyLayer();\n        }\n        if (this.isDirty(\"tooltipPosition\")) {\n            const tooltipMoveDp = this._tooltipMoveDp;\n            if (tooltipMoveDp) {\n                tooltipMoveDp.dispose();\n                this._tooltipMoveDp = undefined;\n            }\n            const tooltipPointerDp = this._tooltipPointerDp;\n            if (tooltipPointerDp) {\n                tooltipPointerDp.dispose();\n                this._tooltipPointerDp = undefined;\n            }\n            if (this.get(\"tooltipPosition\") == \"pointer\") {\n                if (this.isHover()) this._tooltipMoveDp = this.events.on(\"globalpointermove\", (e)=>{\n                    this.showTooltip(e.point);\n                });\n                this._tooltipPointerDp = new (0, $a363f66303166aa1$export$9720df365053d143)([\n                    this.events.on(\"pointerover\", ()=>{\n                        this._tooltipMoveDp = this.events.on(\"globalpointermove\", (e)=>{\n                            this.showTooltip(e.point);\n                        });\n                    }),\n                    this.events.on(\"pointerout\", ()=>{\n                        const tooltipMoveDp = this._tooltipMoveDp;\n                        if (tooltipMoveDp) {\n                            tooltipMoveDp.dispose();\n                            this._tooltipMoveDp = undefined;\n                        }\n                    })\n                ]);\n            }\n        }\n    }\n    _handleStates() {\n        if (!this._statesHandled) {\n            if (this.isDirty(\"active\")) {\n                if (this.get(\"active\")) {\n                    this.states.applyAnimate(\"active\");\n                    this.set(\"ariaChecked\", true);\n                } else {\n                    if (!this.isHidden()) this.states.applyAnimate(\"default\");\n                    this.set(\"ariaChecked\", false);\n                }\n                this.markDirtyAccessibility();\n            }\n            if (this.isDirty(\"disabled\")) {\n                if (this.get(\"disabled\")) {\n                    this.states.applyAnimate(\"disabled\");\n                    this.set(\"ariaChecked\", false);\n                } else {\n                    if (!this.isHidden()) this.states.applyAnimate(\"default\");\n                    this.set(\"ariaChecked\", true);\n                }\n                this.markDirtyAccessibility();\n            }\n            this._statesHandled = true;\n        }\n    }\n    _changed() {\n        super._changed();\n        const display = this._display;\n        const events = this.events;\n        if (this.isDirty(\"draggable\")) {\n            const draggable = this.get(\"draggable\");\n            if (draggable) {\n                this.set(\"interactive\", true);\n                this._dragDp = new (0, $a363f66303166aa1$export$9720df365053d143)([\n                    events.on(\"pointerdown\", (ev)=>{\n                        this.dragStart(ev);\n                    }),\n                    events.on(\"globalpointermove\", (ev)=>{\n                        this.dragMove(ev);\n                    }),\n                    events.on(\"globalpointerup\", (ev)=>{\n                        this.dragStop(ev);\n                    })\n                ]);\n            } else if (this._dragDp) {\n                this._dragDp.dispose();\n                this._dragDp = undefined;\n            }\n            display.cancelTouch = draggable ? true : false;\n        }\n        if (this.isDirty(\"tooltipText\") || this.isDirty(\"tooltipHTML\") || this.isDirty(\"showTooltipOn\")) {\n            const tooltipText = this.get(\"tooltipText\");\n            const tooltipHTML = this.get(\"tooltipHTML\");\n            const showTooltipOn = this.get(\"showTooltipOn\", \"hover\");\n            if (this._tooltipDp) {\n                this._tooltipDp.dispose();\n                this._tooltipDp = undefined;\n            }\n            if (tooltipText || tooltipHTML) {\n                if (showTooltipOn == \"click\") {\n                    this._tooltipDp = new (0, $a363f66303166aa1$export$9720df365053d143)([\n                        events.on(\"click\", ()=>{\n                            this.setTimeout(()=>{\n                                const tooltip = this.getTooltip();\n                                if (tooltip && !tooltip.isHidden() && tooltip.get(\"tooltipTarget\") === this) this.hideTooltip();\n                                else this.showTooltip();\n                            }, 10);\n                        }),\n                        $05b1b40b69b15016$export$3f65cefe8380dbea(document, \"click\", (_ev)=>{\n                            this.hideTooltip();\n                        })\n                    ]);\n                    this._disposers.push(this._tooltipDp);\n                } else if (showTooltipOn == \"always\") ;\n                else {\n                    this._tooltipDp = new (0, $a363f66303166aa1$export$9720df365053d143)([\n                        events.on(\"pointerover\", ()=>{\n                            this.showTooltip();\n                        }),\n                        events.on(\"pointerout\", ()=>{\n                            this.hideTooltip();\n                        })\n                    ]);\n                    this._disposers.push(this._tooltipDp);\n                }\n            }\n        }\n        if (this.isDirty(\"toggleKey\")) {\n            let toggleKey = this.get(\"toggleKey\");\n            if (toggleKey && toggleKey != \"none\") this._toggleDp = events.on(\"click\", ()=>{\n                if (!this._isDragging) this.set(toggleKey, !this.get(toggleKey));\n            });\n            else if (this._toggleDp) {\n                this._toggleDp.dispose();\n                this._toggleDp = undefined;\n            }\n        }\n        if (this.isDirty(\"opacity\")) {\n            display.alpha = Math.max(0, this.get(\"opacity\", 1));\n            if (this.get(\"focusable\")) this.markDirtyAccessibility();\n        }\n        if (this.isDirty(\"rotation\")) {\n            this.markDirtyBounds();\n            display.angle = this.get(\"rotation\", 0);\n        }\n        if (this.isDirty(\"scale\")) {\n            this.markDirtyBounds();\n            display.scale = this.get(\"scale\", 0);\n        }\n        if (this.isDirty(\"centerX\") || this.isDirty(\"centerY\")) {\n            this.markDirtyBounds();\n            this.updatePivotPoint();\n        }\n        if (this.isDirty(\"visible\") || this.isPrivateDirty(\"visible\") || this.isDirty(\"forceHidden\")) {\n            if (!this.get(\"visible\") || !this.getPrivate(\"visible\") || this.get(\"forceHidden\")) {\n                display.visible = false;\n                this.hideTooltip();\n            } else display.visible = true;\n            this.markDirtyBounds();\n            if (this.get(\"focusable\")) this.markDirtyAccessibility();\n        }\n        if (this.isDirty(\"width\") || this.isDirty(\"height\")) {\n            this.markDirtyBounds();\n            this._addPercentageSizeChildren();\n            const parent = this.parent;\n            if (parent) {\n                if (this.isDirty(\"width\") && this.get(\"width\") instanceof (0, $bd0d0c10fd30006b$export$cbc348af47898b5e) || this.isDirty(\"height\") && this.get(\"height\") instanceof (0, $bd0d0c10fd30006b$export$cbc348af47898b5e)) {\n                    parent.markDirty();\n                    parent._prevWidth = 0;\n                }\n            }\n            this._sizeDirty = true;\n        }\n        if (this.isDirty(\"maxWidth\") || this.isDirty(\"maxHeight\") || this.isPrivateDirty(\"width\") || this.isPrivateDirty(\"height\") || this.isDirty(\"minWidth\") || this.isDirty(\"minHeight\") || this.isPrivateDirty(\"maxWidth\") || this.isPrivateDirty(\"maxHeight\") || this.isPrivateDirty(\"minWidth\") || this.isPrivateDirty(\"minHeight\") || this.isDirty(\"marginLeft\") || this.isDirty(\"marginTop\") || this.isDirty(\"marginRight\") || this.isDirty(\"marginBottom\")) {\n            this.markDirtyBounds();\n            this._sizeDirty = true;\n        }\n        if (this._sizeDirty) this._updateSize();\n        if (this.isDirty(\"wheelable\")) {\n            const wheelable = this.get(\"wheelable\");\n            if (wheelable) this.set(\"interactive\", true);\n            display.wheelable = wheelable ? true : false;\n        }\n        // Accessibility\n        if (this.isDirty(\"tabindexOrder\") || this.isDirty(\"focusableGroup\")) {\n            if (this.get(\"focusable\")) this._root._registerTabindexOrder(this);\n            else this._root._unregisterTabindexOrder(this);\n        }\n        if (this.isDirty(\"filter\")) //this.markDirtyBounds();\n        display.filter = this.get(\"filter\");\n        let filter = this.get(\"filter\", \"\");\n        if (this.isDirty(\"blur\")) {\n            const blur = this.get(\"blur\", 0);\n            if (blur != 0) filter += \" blur(\" + blur + \"px)\";\n        }\n        if (this.isDirty(\"saturate\")) {\n            const saturate = this.get(\"saturate\", 1);\n            if (saturate != 1) filter += \" saturate(\" + saturate + \")\";\n        }\n        if (this.isDirty(\"brightness\")) {\n            const brightness = this.get(\"brightness\", 1);\n            if (brightness != 1) filter += \" brightness(\" + brightness + \")\";\n        }\n        if (this.isDirty(\"contrast\")) {\n            const contrast = this.get(\"contrast\", 1);\n            if (contrast != 1) filter += \" contrast(\" + contrast + \")\";\n        }\n        if (this.isDirty(\"sepia\")) {\n            const sepia = this.get(\"sepia\", 0);\n            if (sepia != 0) filter += \" sepia(\" + sepia + \")\";\n        }\n        if (this.isDirty(\"hue\")) {\n            const hue = this.get(\"hue\", 0);\n            if (hue != 0) filter += \" hue-rotate(\" + hue + \"deg)\";\n        }\n        if (this.isDirty(\"invert\")) {\n            const invert = this.get(\"invert\", 0);\n            if (invert != 0) filter += \" invert(\" + invert + \")\";\n        }\n        if (filter) display.filter = filter;\n        if (this.isDirty(\"cursorOverStyle\")) display.cursorOverStyle = this.get(\"cursorOverStyle\");\n        if (this.isDirty(\"hoverOnFocus\")) {\n            if (this.get(\"hoverOnFocus\")) this._focusDp = new (0, $a363f66303166aa1$export$9720df365053d143)([\n                events.on(\"focus\", ()=>{\n                    // TODO: proper hover, not just tooltip\n                    this.showTooltip();\n                }),\n                events.on(\"blur\", ()=>{\n                    // TODO: proper hover, not just tooltip\n                    this.hideTooltip();\n                })\n            ]);\n            else if (this._focusDp) {\n                this._focusDp.dispose();\n                this._focusDp = undefined;\n            }\n        }\n        if (this.isDirty(\"focusable\")) {\n            if (this.get(\"focusable\")) this._root._registerTabindexOrder(this);\n            else this._root._unregisterTabindexOrder(this);\n            this.markDirtyAccessibility();\n            this._disposers.push(events.on(\"blur\", ()=>{\n                this.setPrivateRaw(\"touchHovering\", false);\n            }));\n        }\n        if (this.isPrivateDirty(\"focusable\")) this.markDirtyAccessibility();\n        if (this.isDirty(\"role\") || this.isDirty(\"ariaLive\") || this.isDirty(\"ariaChecked\") || this.isDirty(\"ariaHidden\") || this.isDirty(\"ariaOrientation\") || this.isDirty(\"ariaValueNow\") || this.isDirty(\"ariaValueMin\") || this.isDirty(\"ariaValueMax\") || this.isDirty(\"ariaValueText\") || this.isDirty(\"ariaLabel\") || this.isDirty(\"ariaControls\")) // display.accessibility.ariaLabel = populateString(this, this.get(\"ariaLabel\", \"\"));\n        // @todo make sure ariaLabel gets populated in Root\n        this.markDirtyAccessibility();\n        if (this.isDirty(\"exportable\")) display.exportable = this.get(\"exportable\");\n        if (this.isDirty(\"interactive\")) {\n            const events = this.events;\n            if (this.get(\"interactive\") && !events.isDisposed()) this._hoverDp = new (0, $a363f66303166aa1$export$9720df365053d143)([\n                events.on(\"click\", (ev)=>{\n                    if ($05b1b40b69b15016$export$c4dfce035d43d1e0(ev.originalEvent)) {\n                        if (!this.getPrivate(\"touchHovering\")) this.setTimeout(()=>{\n                            this._handleOver();\n                            if (this.get(\"tooltipText\") || this.get(\"tooltipHTML\")) this.showTooltip();\n                            this.setPrivateRaw(\"touchHovering\", true);\n                            this.events.dispatch(\"pointerover\", {\n                                type: \"pointerover\",\n                                target: ev.target,\n                                originalEvent: ev.originalEvent,\n                                point: ev.point,\n                                simulated: ev.simulated\n                            });\n                        }, 10);\n                    }\n                }),\n                events.on(\"globalpointerup\", (ev)=>{\n                    if ($05b1b40b69b15016$export$c4dfce035d43d1e0(ev.originalEvent)) {\n                        if (this.getPrivate(\"touchHovering\")) {\n                            this._handleOut();\n                            if (this.get(\"tooltipText\") || this.get(\"tooltipHTML\")) this.hideTooltip();\n                            this.setPrivateRaw(\"touchHovering\", false);\n                            this.events.dispatch(\"pointerout\", {\n                                type: \"pointerout\",\n                                target: ev.target,\n                                originalEvent: ev.originalEvent,\n                                point: ev.point,\n                                simulated: ev.simulated\n                            });\n                        }\n                    }\n                    if (this._isDown) this._handleUp(ev);\n                //this._isDown = false;\n                }),\n                events.on(\"pointerover\", ()=>{\n                    this._handleOver();\n                }),\n                events.on(\"pointerout\", ()=>{\n                    this._handleOut();\n                }),\n                events.on(\"pointerdown\", (e)=>{\n                    this._handleDown(e);\n                })\n            ]);\n            else {\n                this._display.interactive = false;\n                if (this._hoverDp) {\n                    this._hoverDp.dispose();\n                    this._hoverDp = undefined;\n                }\n            }\n        }\n        if (this.isDirty(\"forceInactive\")) this._display.inactive = this.get(\"forceInactive\", null);\n        if (this.get(\"showTooltipOn\") == \"always\" && this._display.visible) this.showTooltip();\n    }\n    /**\r\n     * @ignore\r\n     * @todo should this be user-accessible?\r\n     */ dragStart(e) {\n        this._dragEvent = e;\n        this.events.stopParentDispatch();\n    }\n    /**\r\n     * @ignore\r\n     * @todo should this be user-accessible?\r\n     */ dragStop(e) {\n        this._dragEvent = undefined;\n        this._dragPoint = undefined;\n        this.events.stopParentDispatch();\n        if (this._isDragging) {\n            this._isDragging = false;\n            const type = \"dragstop\";\n            if (this.events.isEnabled(type)) this.events.dispatch(type, {\n                type: type,\n                target: this,\n                originalEvent: e.originalEvent,\n                point: e.point,\n                simulated: e.simulated\n            });\n        }\n    }\n    _handleOver() {\n        if (!this.isHidden()) {\n            if (this.get(\"active\") && this.states.lookup(\"hoverActive\")) this.states.applyAnimate(\"hoverActive\");\n            else if (this.get(\"disabled\") && this.states.lookup(\"hoverDisabled\")) this.states.applyAnimate(\"hoverDisabled\");\n            else this.states.applyAnimate(\"hover\");\n            if (this.get(\"draggable\") && this._isDown && this.states.lookup(\"down\")) this.states.applyAnimate(\"down\");\n        }\n    }\n    _handleOut() {\n        if (!this.isHidden()) {\n            if (this.get(\"active\") && this.states.lookup(\"active\")) this.states.applyAnimate(\"active\");\n            else if (this.get(\"disabled\") && this.states.lookup(\"disabled\")) this.states.applyAnimate(\"disabled\");\n            else if (this.states.lookup(\"hover\") || this.states.lookup(\"hoverActive\")) this.states.applyAnimate(\"default\");\n            if (this.get(\"draggable\") && this._isDown && this.states.lookup(\"down\")) this.states.applyAnimate(\"down\");\n        }\n    }\n    _handleUp(e) {\n        if (!this.isHidden()) {\n            if (this.get(\"active\") && this.states.lookup(\"active\")) this.states.applyAnimate(\"active\");\n            else if (this.get(\"disabled\") && this.states.lookup(\"disabled\")) this.states.applyAnimate(\"disabled\");\n            else if (this.states.lookup(\"down\")) {\n                if (this.isHover()) this.states.applyAnimate(\"hover\");\n                else this.states.applyAnimate(\"default\");\n            }\n            // @todo remove this once migrated to _downPoints\n            this._downPoint = undefined;\n            const pointerId = $05b1b40b69b15016$export$a845ff6c553b3014(e.originalEvent);\n            delete this._downPoints[pointerId];\n            if ($e66f9343b5144e1a$export$ed97f33186d4b816(this._downPoints).length == 0) this._isDown = false;\n        }\n    }\n    _hasMoved(e) {\n        // @todo remove this once migrated to _downPoints\n        // if (this._downPoint) {\n        // \tconst x = Math.abs(this._downPoint.x - e.point.x);\n        // \tconst y = Math.abs(this._downPoint.y - e.point.y);\n        // \treturn (x > 5) || (y > 5);\n        // }\n        const pointerId = $05b1b40b69b15016$export$a845ff6c553b3014(e.originalEvent);\n        const downPoint = this._downPoints[pointerId];\n        if (downPoint) {\n            const x = Math.abs(downPoint.x - e.point.x);\n            const y = Math.abs(downPoint.y - e.point.y);\n            return x > 5 || y > 5;\n        }\n        return false;\n    }\n    _hasDown() {\n        return $e66f9343b5144e1a$export$ed97f33186d4b816(this._downPoints).length > 0;\n    }\n    _handleDown(e) {\n        const parent = this.parent;\n        if (parent && !this.get(\"draggable\")) parent._handleDown(e);\n        if (this.get(\"interactive\") && !this.isHidden()) {\n            if (this.states.lookup(\"down\")) this.states.applyAnimate(\"down\");\n            this._downPoint = {\n                x: e.point.x,\n                y: e.point.y\n            };\n            // @todo remove this once migrated to _downPoints\n            this._isDown = true;\n            const pointerId = $05b1b40b69b15016$export$a845ff6c553b3014(e.originalEvent);\n            this._downPoints[pointerId] = {\n                x: e.point.x,\n                y: e.point.y\n            };\n        }\n    }\n    /**\r\n     * @ignore\r\n     * @todo should this be user-accessible?\r\n     */ dragMove(e) {\n        let dragEvent = this._dragEvent;\n        if (dragEvent) {\n            if (dragEvent.simulated && !e.simulated) return true;\n            let angle = 0;\n            let parent = this.parent;\n            let scale = 1;\n            while(parent != null){\n                angle += parent.get(\"rotation\", 0);\n                parent = parent.parent;\n                if (parent) scale *= parent.get(\"scale\", 1);\n            }\n            let x = (e.point.x - dragEvent.point.x) / scale;\n            let y = (e.point.y - dragEvent.point.y) / scale;\n            const events = this.events;\n            if (dragEvent.simulated && !this._isDragging) {\n                this._isDragging = true;\n                this._dragEvent = e;\n                this._dragPoint = {\n                    x: this.x(),\n                    y: this.y()\n                };\n                const type = \"dragstart\";\n                if (events.isEnabled(type)) events.dispatch(type, {\n                    type: type,\n                    target: this,\n                    originalEvent: e.originalEvent,\n                    point: e.point,\n                    simulated: e.simulated\n                });\n            }\n            if (this._isDragging) {\n                let dragPoint = this._dragPoint;\n                this.set(\"x\", dragPoint.x + x * $f43e9e04b3f0548b$export$50d414a77b60d802(angle) + y * $f43e9e04b3f0548b$export$5de3937cb4b592ed(angle));\n                this.set(\"y\", dragPoint.y + y * $f43e9e04b3f0548b$export$50d414a77b60d802(angle) - x * $f43e9e04b3f0548b$export$5de3937cb4b592ed(angle));\n                const type = \"dragged\";\n                if (events.isEnabled(type)) events.dispatch(type, {\n                    type: type,\n                    target: this,\n                    originalEvent: e.originalEvent,\n                    point: e.point,\n                    simulated: e.simulated\n                });\n            } else if (Math.hypot(x, y) > 5) {\n                this._isDragging = true;\n                this._dragEvent = e;\n                this._dragPoint = {\n                    x: this.x(),\n                    y: this.y()\n                };\n                const type = \"dragstart\";\n                if (events.isEnabled(type)) events.dispatch(type, {\n                    type: type,\n                    target: this,\n                    originalEvent: e.originalEvent,\n                    point: e.point,\n                    simulated: e.simulated\n                });\n            }\n        }\n    }\n    _updateSize() {}\n    _getBounds() {\n        this._localBounds = this._display.getLocalBounds();\n    }\n    /**\r\n     * Returns depth (how deep in the hierachy of the content tree) of this\r\n     * element.\r\n     *\r\n     * @return Depth\r\n     */ depth() {\n        let self = this.parent;\n        let depth = 0;\n        while(true){\n            if (self) {\n                ++depth;\n                self = self.parent;\n            } else return depth;\n        }\n    }\n    /**\r\n     * @ignore\r\n     */ markDirtySize() {\n        this._sizeDirty = true;\n        this.markDirty();\n    }\n    /**\r\n     * @ignore\r\n     */ markDirtyBounds() {\n        const display = this._display;\n        if (this.get(\"isMeasured\")) {\n            this._root._addDirtyBounds(this);\n            display.isMeasured = true;\n            display.invalidateBounds();\n            const parent = this.parent;\n            if (parent && this.get(\"position\") != \"absolute\") {\n                if (parent.get(\"width\") == null || parent.get(\"height\") == null || parent.get(\"layout\")) parent.markDirtyBounds();\n            }\n            if (this.get(\"focusable\") && this.isFocus()) this.markDirtyAccessibility();\n        }\n    }\n    /**\r\n     * @ignore\r\n     */ markDirtyAccessibility() {\n        //if (this._root.focused(this)) {\n        this._root._invalidateAccessibility(this);\n    //}\n    }\n    /**\r\n     * @ignore\r\n     */ markDirtyLayer() {\n        //this._display.markDirtyLayer(this.isDirty(\"opacity\") || this.isDirty(\"visible\")); https://codepen.io/team/amcharts/pen/gOWZPmP <- problems\n        this._display.markDirtyLayer(true);\n    }\n    /**\r\n     * @ignore\r\n     */ markDirty() {\n        super.markDirty();\n        this.markDirtyLayer();\n    }\n    _updateBounds() {\n        const oldBounds = this._adjustedLocalBounds;\n        let newBounds;\n        // if display.visible == false, it still returns bounds\n        if (!this.get(\"visible\") || !this.getPrivate(\"visible\") || this.get(\"forceHidden\")) {\n            newBounds = {\n                left: 0,\n                right: 0,\n                top: 0,\n                bottom: 0\n            };\n            this._localBounds = newBounds;\n            this._adjustedLocalBounds = newBounds;\n        } else {\n            this._getBounds();\n            this._fixMinBounds(this._localBounds);\n            this.updatePivotPoint();\n            this._adjustedLocalBounds = this._display.getAdjustedBounds(this._localBounds);\n            newBounds = this._adjustedLocalBounds;\n        }\n        if (!oldBounds || oldBounds.left !== newBounds.left || oldBounds.top !== newBounds.top || oldBounds.right !== newBounds.right || oldBounds.bottom !== newBounds.bottom) {\n            const eventType = \"boundschanged\";\n            if (this.events.isEnabled(eventType)) this.events.dispatch(eventType, {\n                type: eventType,\n                target: this\n            });\n            if (this.parent) {\n                this.parent.markDirty();\n                this.parent.markDirtyBounds();\n            }\n            // Update tooltip position together with the Sprite\n            if (this.getPrivate(\"showingTooltip\")) this.showTooltip();\n        }\n    }\n    _fixMinBounds(bounds) {\n        let minWidth = this.get(\"minWidth\", this.getPrivate(\"minWidth\"));\n        let minHeight = this.get(\"minHeight\", this.getPrivate(\"minHeight\"));\n        if ($f63bdea45a89cf24$export$7e4aa119212bc614(minWidth)) {\n            if (bounds.right - bounds.left < minWidth) bounds.right = bounds.left + minWidth;\n        }\n        if ($f63bdea45a89cf24$export$7e4aa119212bc614(minHeight)) {\n            if (bounds.bottom - bounds.top < minHeight) bounds.bottom = bounds.top + minHeight;\n        }\n        let privateWidth = this.getPrivate(\"width\");\n        let privateHeight = this.getPrivate(\"height\");\n        if ($f63bdea45a89cf24$export$7e4aa119212bc614(privateWidth)) {\n            if (privateWidth > 0) bounds.right = bounds.left + privateWidth;\n            else bounds.left = bounds.right + privateWidth;\n        }\n        if ($f63bdea45a89cf24$export$7e4aa119212bc614(privateHeight)) {\n            if (privateHeight > 0) bounds.bottom = bounds.top + privateHeight;\n            else bounds.top = bounds.bottom + privateHeight;\n        }\n    }\n    _removeParent(parent) {\n        if (parent) {\n            parent.children.removeValue(this);\n            $2f30431acd054e2f$export$2529f734547e2830(parent._percentageSizeChildren, this);\n            $2f30431acd054e2f$export$2529f734547e2830(parent._percentagePositionChildren, this);\n        }\n    }\n    _clearDirty() {\n        super._clearDirty();\n        this._sizeDirty = false;\n        this._statesHandled = false;\n    }\n    /**\r\n     * Simulate hover over element.\r\n     */ hover() {\n        if (!this.isDisposed()) {\n            this.showTooltip();\n            this._handleOver();\n        }\n    }\n    /**\r\n     * Simulate unhover over element.\r\n     */ unhover() {\n        if (!this.isDisposed()) {\n            this.hideTooltip();\n            this._handleOut();\n        }\n    }\n    /**\r\n     * Shows element's [[Tooltip]].\r\n     */ showTooltip(point) {\n        if (!this.isDisposed()) {\n            const tooltip = this.getTooltip();\n            const tooltipText = this.get(\"tooltipText\");\n            const tooltipHTML = this.get(\"tooltipHTML\");\n            if ((tooltipText || tooltipHTML) && tooltip) {\n                const tooltipPosition = this.get(\"tooltipPosition\");\n                const tooltipTarget = this.getPrivate(\"tooltipTarget\", this);\n                if (tooltipPosition == \"fixed\" || !point) {\n                    this._display._setMatrix();\n                    point = this.toGlobal(tooltipTarget._getTooltipPoint());\n                }\n                tooltip.set(\"pointTo\", point);\n                tooltip.set(\"tooltipTarget\", tooltipTarget);\n                if (!tooltip.get(\"x\")) tooltip.set(\"x\", point.x);\n                if (!tooltip.get(\"y\")) tooltip.set(\"y\", point.y);\n                if (tooltipText) tooltip.label.set(\"text\", tooltipText);\n                if (tooltipHTML) tooltip.label.set(\"html\", tooltipHTML);\n                const dataItem = this.dataItem;\n                if (dataItem) tooltip.label._setDataItem(dataItem);\n                if (this.get(\"showTooltipOn\") == \"always\" && (point.x < 0 || point.x > this._root.width() || point.y < 0 || point.y > this._root.height())) {\n                    this.hideTooltip();\n                    return;\n                }\n                tooltip.label.text.markDirtyText();\n                const promise = tooltip.show();\n                this.setPrivateRaw(\"showingTooltip\", true);\n                return promise;\n            }\n        }\n    }\n    /**\r\n     * Hides element's [[Tooltip]].\r\n     */ hideTooltip() {\n        const tooltip = this.getTooltip();\n        if (tooltip) {\n            if (tooltip.get(\"tooltipTarget\") == this.getPrivate(\"tooltipTarget\", this) || this.get(\"tooltip\") == tooltip) {\n                let timeout = tooltip.get(\"keepTargetHover\") && tooltip.get(\"stateAnimationDuration\", 0) == 0 ? 400 : undefined;\n                const promise = tooltip.hide(timeout);\n                this.setPrivateRaw(\"showingTooltip\", false);\n                return promise;\n            }\n        }\n    }\n    _getTooltipPoint() {\n        const bounds = this._localBounds;\n        if (bounds) {\n            let x = 0;\n            let y = 0;\n            if (!this.get(\"isMeasured\")) {\n                x = $05b1b40b69b15016$export$302dfacf2b0a56fe(this.get(\"tooltipX\", 0), this.width());\n                y = $05b1b40b69b15016$export$302dfacf2b0a56fe(this.get(\"tooltipY\", 0), this.height());\n            } else {\n                x = bounds.left + $05b1b40b69b15016$export$302dfacf2b0a56fe(this.get(\"tooltipX\", 0), bounds.right - bounds.left);\n                y = bounds.top + $05b1b40b69b15016$export$302dfacf2b0a56fe(this.get(\"tooltipY\", 0), bounds.bottom - bounds.top);\n            }\n            return {\n                x: x,\n                y: y\n            };\n        }\n        return {\n            x: 0,\n            y: 0\n        };\n    }\n    /**\r\n     * Returns [[Tooltip]] used for this element.\r\n     *\r\n     * @return Tooltip\r\n     */ getTooltip() {\n        let tooltip = this.get(\"tooltip\");\n        if (!tooltip) {\n            let parent = this.parent;\n            if (parent) return parent.getTooltip();\n        } else return tooltip;\n    }\n    _updatePosition() {\n        const parent = this.parent;\n        let dx = this.get(\"dx\", 0);\n        let dy = this.get(\"dy\", 0);\n        let x = this.get(\"x\");\n        let _x = this.getPrivate(\"x\");\n        let xx = 0;\n        let yy = 0;\n        const position = this.get(\"position\");\n        if (x instanceof (0, $bd0d0c10fd30006b$export$cbc348af47898b5e)) {\n            if (parent) x = parent.innerWidth() * x.value + parent.get(\"paddingLeft\", 0);\n            else x = 0;\n        }\n        if ($f63bdea45a89cf24$export$7e4aa119212bc614(x)) xx = x + dx;\n        else {\n            if (_x != null) xx = _x;\n            else if (parent) {\n                if (position == \"relative\") xx = parent.get(\"paddingLeft\", 0) + dx;\n            }\n        }\n        let y = this.get(\"y\");\n        let _y = this.getPrivate(\"y\");\n        if (y instanceof (0, $bd0d0c10fd30006b$export$cbc348af47898b5e)) {\n            if (parent) y = parent.innerHeight() * y.value + parent.get(\"paddingTop\", 0);\n            else y = 0;\n        }\n        if ($f63bdea45a89cf24$export$7e4aa119212bc614(y)) yy = y + dy;\n        else {\n            if (_y != null) yy = _y;\n            else if (parent) {\n                if (position == \"relative\") yy = parent.get(\"paddingTop\", 0) + dy;\n            }\n        }\n        const display = this._display;\n        if (display.x != xx || display.y != yy) {\n            display.invalidateBounds();\n            display.x = xx;\n            display.y = yy;\n            const eventType = \"positionchanged\";\n            if (this.events.isEnabled(eventType)) this.events.dispatch(eventType, {\n                type: eventType,\n                target: this\n            });\n        }\n        // Update tooltip position together with the Sprite\n        if (this.getPrivate(\"showingTooltip\")) this.showTooltip();\n    }\n    /**\r\n     * Returns element's actual X position in pixels.\r\n     *\r\n     * @return X (px)\r\n     */ x() {\n        let x = this.get(\"x\");\n        let _x = this.getPrivate(\"x\");\n        const parent = this.parent;\n        if (parent) {\n            if (x instanceof (0, $bd0d0c10fd30006b$export$cbc348af47898b5e)) return $05b1b40b69b15016$export$302dfacf2b0a56fe(x, parent.innerWidth()) + parent.get(\"paddingLeft\", 0);\n            else {\n                if (!$f63bdea45a89cf24$export$7e4aa119212bc614(x)) {\n                    if (_x != null) return _x;\n                    else return parent.get(\"paddingLeft\", this._display.x);\n                } else return x;\n            }\n        }\n        return this._display.x;\n    }\n    /**\r\n     * Returns element's actual Y position in pixels.\r\n     *\r\n     * @return Y (px)\r\n     */ y() {\n        let _y = this.getPrivate(\"y\");\n        if (_y != null) return _y;\n        let y = this.get(\"y\");\n        const parent = this.parent;\n        if (parent) {\n            if (y instanceof (0, $bd0d0c10fd30006b$export$cbc348af47898b5e)) return $05b1b40b69b15016$export$302dfacf2b0a56fe(y, parent.innerHeight()) + parent.get(\"paddingTop\", 0);\n            else {\n                if (!$f63bdea45a89cf24$export$7e4aa119212bc614(y)) {\n                    if (_y != null) return _y;\n                    else return parent.get(\"paddingTop\", this._display.y);\n                } else return y;\n            }\n        }\n        return this._display.y;\n    }\n    _dispose() {\n        super._dispose();\n        this._display.dispose();\n        this._removeTemplateField();\n        this._removeParent(this.parent);\n        this._root._removeFocusElement(this);\n        const tooltip = this.get(\"tooltip\");\n        if (tooltip) tooltip.dispose();\n        this.markDirty();\n    }\n    /**\r\n     * @ignore\r\n     */ adjustedLocalBounds() {\n        this._fixMinBounds(this._adjustedLocalBounds);\n        return this._adjustedLocalBounds;\n    }\n    /**\r\n     * Returns local coordinates of the element's bounds.\r\n     *\r\n     * @ignore\r\n     * @return Global bounds\r\n     */ localBounds() {\n        return this._localBounds;\n    }\n    /**\r\n     * Returns adjusted local coordinates of the element's bounds.\r\n     *\r\n     * @ignore\r\n     * @return Global bounds\r\n     */ bounds() {\n        const bounds = this._adjustedLocalBounds;\n        const x = this.x();\n        const y = this.y();\n        return {\n            left: bounds.left + x,\n            right: bounds.right + x,\n            top: bounds.top + y,\n            bottom: bounds.bottom + y\n        };\n    }\n    /**\r\n     * Returns global coordinates of the element's bounds.\r\n     *\r\n     * @ignore\r\n     * @return Global bounds\r\n     */ globalBounds() {\n        const bounds = this.localBounds();\n        const p0 = this.toGlobal({\n            x: bounds.left,\n            y: bounds.top\n        });\n        const p1 = this.toGlobal({\n            x: bounds.right,\n            y: bounds.top\n        });\n        const p2 = this.toGlobal({\n            x: bounds.right,\n            y: bounds.bottom\n        });\n        const p3 = this.toGlobal({\n            x: bounds.left,\n            y: bounds.bottom\n        });\n        return {\n            left: Math.min(p0.x, p1.x, p2.x, p3.x),\n            top: Math.min(p0.y, p1.y, p2.y, p3.y),\n            right: Math.max(p0.x, p1.x, p2.x, p3.x),\n            bottom: Math.max(p0.y, p1.y, p2.y, p3.y)\n        };\n    }\n    _onShow(_duration) {}\n    _onHide(_duration) {}\n    /**\r\n     * Plays initial reveal animation regardless if element is currently hidden\r\n     * or visible.\r\n     *\r\n     * @param   duration  Duration of the animation in milliseconds\r\n     * @param   delay     Delay showing of the element by X milliseconds\r\n     * @return            Promise\r\n     */ appear(duration, delay) {\n        return (0, $5c96a02c592fcff1$export$1050f835b63b671e)(this, void 0, void 0, function*() {\n            yield this.hide(0);\n            if (delay) return new Promise((success, _error)=>{\n                this.setTimeout(()=>{\n                    success(this.show(duration));\n                }, delay);\n            });\n            else return this.show(duration);\n        });\n    }\n    /**\r\n     * Shows currently hidden element and returns a `Promise` which completes\r\n     * when all showing animations are finished.\r\n     *\r\n     * ```TypeScript\r\n     * series.show().then(function(ev) {\r\n     *   console.log(\"Series is now fully visible\");\r\n     * })\r\n     * ```\r\n     * ```JavaScript\r\n     * series.show().then(function(ev) {\r\n     *   console.log(\"Series is now fully visible\");\r\n     * })\r\n     * ```\r\n     *\r\n     * @return Promise\r\n     */ show(duration) {\n        return (0, $5c96a02c592fcff1$export$1050f835b63b671e)(this, void 0, void 0, function*() {\n            if (!this._isShowing) {\n                this._isHidden = false;\n                this._isShowing = true;\n                this._isHiding = false;\n                if (this.states.lookup(\"default\").get(\"visible\")) this.set(\"visible\", true);\n                this._onShow(duration);\n                const animations = this.states.applyAnimate(\"default\", duration);\n                yield (0, $43e0e2dc9c95da4e$export$5bfdbf456b754132)(animations);\n                this._isShowing = false;\n            }\n        });\n    }\n    /**\r\n     * Hides the element and returns a `Promise` which completes when all hiding\r\n     * animations are finished.\r\n     *\r\n     * ```TypeScript\r\n     * series.hide().then(function(ev) {\r\n     *   console.log(\"Series finished hiding\");\r\n     * })\r\n     * ```\r\n     * ```JavaScript\r\n     * series.hide().then(function(ev) {\r\n     *   console.log(\"Series finished hiding\");\r\n     * })\r\n     * ```\r\n     *\r\n     * @return Promise\r\n     */ hide(duration) {\n        return (0, $5c96a02c592fcff1$export$1050f835b63b671e)(this, void 0, void 0, function*() {\n            if (!this._isHiding && !this._isHidden) {\n                this._isHiding = true;\n                this._isShowing = false;\n                let state = this.states.lookup(\"hidden\");\n                if (!state) state = this.states.create(\"hidden\", {\n                    \"opacity\": 0,\n                    \"visible\": false\n                });\n                this._isHidden = true;\n                this._onHide(duration);\n                const animations = this.states.applyAnimate(\"hidden\", duration);\n                yield (0, $43e0e2dc9c95da4e$export$5bfdbf456b754132)(animations);\n                this._isHiding = false;\n            }\n        });\n    }\n    /**\r\n     * Returns `true` if this element is currently hidden.\r\n     *\r\n     * @return Is hidden?\r\n     */ isHidden() {\n        return this._isHidden;\n    }\n    /**\r\n     * Returns `true` if this element is currently animating to a default state.\r\n     *\r\n     * @return Is showing?\r\n     */ isShowing() {\n        return this._isShowing;\n    }\n    /**\r\n     * Returns `true` if this element is currently animating to a hidden state.\r\n     *\r\n     * @return Is hiding?\r\n     */ isHiding() {\n        return this._isHiding;\n    }\n    /**\r\n     * Returns `true` if this element is currently hovered by a pointer.\r\n     *\r\n     * @return Is hovered?\r\n     */ isHover() {\n        return this._display.hovering();\n    }\n    /**\r\n     * Returns `true` if this element does currently have focus.\r\n     *\r\n     * @return Is focused?\r\n     */ isFocus() {\n        return this._root.focused(this);\n    }\n    /**\r\n     * Returns `true` if this element is currently being dragged.\r\n     *\r\n     * @return Is dragged?\r\n     */ isDragging() {\n        return this._isDragging;\n    }\n    /**\r\n     * Returns `false` if if either public or private setting `visible` is set\r\n     * to `false`, or `forceHidden` is set to `true`.\r\n     *\r\n     * @return Visible?\r\n     */ isVisible() {\n        if (this.get(\"visible\") && this.getPrivate(\"visible\") && !this.get(\"forceHidden\")) return true;\n        return false;\n    }\n    /**\r\n     * Same as `isVisible()`, except it checks all ascendants, too.\r\n     *\r\n     * @since 5.2.7\r\n     * @return Visible?\r\n     */ isVisibleDeep() {\n        return this._parent ? this._parent.isVisibleDeep() && this.isVisible() : this.isVisible();\n    }\n    /**\r\n     * Returns an actual opacity of the element, taking into account all parents.\r\n     *\r\n     * @return Opacity\r\n     * @since 5.2.11\r\n     */ compositeOpacity() {\n        const opacity = this.get(\"opacity\", 1);\n        return this._parent ? this._parent.compositeOpacity() * opacity : opacity;\n    }\n    /**\r\n     * Returns an actual scale of the element, taking into account all parents.\r\n     *\r\n     * @return Opacity\r\n     * @since 5.9.2\r\n     */ compositeScale() {\n        const scale = this.get(\"scale\", 1);\n        return this._parent ? this._parent.compositeScale() * scale : scale;\n    }\n    /**\r\n     * Returns an actual roation of the element, taking into account all parents.\r\n     *\r\n     * @return Opacity\r\n     * @since 5.9.2\r\n     */ compositeRotation() {\n        const rotation = this.get(\"rotation\", 0);\n        return this._parent ? this._parent.compositeRotation() + rotation : rotation;\n    }\n    /**\r\n     * Returns width of this element in pixels.\r\n     *\r\n     * @return Width (px)\r\n     */ width() {\n        let width = this.get(\"width\");\n        let maxWidth = this.get(\"maxWidth\", this.getPrivate(\"maxWidth\"));\n        let minWidth = this.get(\"minWidth\", this.getPrivate(\"minWidth\"));\n        let privateWidth = this.getPrivate(\"width\");\n        let w = 0;\n        if ($f63bdea45a89cf24$export$7e4aa119212bc614(privateWidth)) w = privateWidth;\n        else {\n            if (width == null) {\n                if (this._adjustedLocalBounds) w = this._adjustedLocalBounds.right - this._adjustedLocalBounds.left;\n            } else {\n                if (width instanceof (0, $bd0d0c10fd30006b$export$cbc348af47898b5e)) {\n                    const parent = this.parent;\n                    if (parent) w = parent.innerWidth() * width.value;\n                    else w = this._root.width() * width.value;\n                } else if ($f63bdea45a89cf24$export$7e4aa119212bc614(width)) w = width;\n            }\n        }\n        if ($f63bdea45a89cf24$export$7e4aa119212bc614(minWidth)) w = Math.max(minWidth, w);\n        if ($f63bdea45a89cf24$export$7e4aa119212bc614(maxWidth)) w = Math.min(maxWidth, w);\n        return w;\n    }\n    /**\r\n     * Returns maximum allowed width of this element in pixels.\r\n     *\r\n     * @return Maximum width (px)\r\n     */ maxWidth() {\n        let maxWidth = this.get(\"maxWidth\", this.getPrivate(\"maxWidth\"));\n        if ($f63bdea45a89cf24$export$7e4aa119212bc614(maxWidth)) return maxWidth;\n        else {\n            let width = this.get(\"width\");\n            if ($f63bdea45a89cf24$export$7e4aa119212bc614(width)) return width;\n        }\n        const parent = this.parent;\n        if (parent) return parent.innerWidth();\n        return this._root.width();\n    }\n    /**\r\n     * Returns maximum allowed height of this element in pixels.\r\n     *\r\n     * @return Maximum height (px)\r\n     */ maxHeight() {\n        let maxHeight = this.get(\"maxHeight\", this.getPrivate(\"maxHeight\"));\n        if ($f63bdea45a89cf24$export$7e4aa119212bc614(maxHeight)) return maxHeight;\n        else {\n            let height = this.get(\"height\");\n            if ($f63bdea45a89cf24$export$7e4aa119212bc614(height)) return height;\n        }\n        const parent = this.parent;\n        if (parent) return parent.innerHeight();\n        return this._root.height();\n    }\n    /**\r\n     * Returns height of this element in pixels.\r\n     *\r\n     * @return Height (px)\r\n     */ height() {\n        let height = this.get(\"height\");\n        let maxHeight = this.get(\"maxHeight\", this.getPrivate(\"maxHeight\"));\n        let minHeight = this.get(\"minHeight\", this.getPrivate(\"minHeight\"));\n        let privateHeight = this.getPrivate(\"height\");\n        let h = 0;\n        if ($f63bdea45a89cf24$export$7e4aa119212bc614(privateHeight)) h = privateHeight;\n        else {\n            if (height == null) {\n                if (this._adjustedLocalBounds) h = this._adjustedLocalBounds.bottom - this._adjustedLocalBounds.top;\n            } else {\n                if (height instanceof (0, $bd0d0c10fd30006b$export$cbc348af47898b5e)) {\n                    const parent = this.parent;\n                    if (parent) h = parent.innerHeight() * height.value;\n                    else h = this._root.height() * height.value;\n                } else if ($f63bdea45a89cf24$export$7e4aa119212bc614(height)) h = height;\n            }\n        }\n        if ($f63bdea45a89cf24$export$7e4aa119212bc614(minHeight)) h = Math.max(minHeight, h);\n        if ($f63bdea45a89cf24$export$7e4aa119212bc614(maxHeight)) h = Math.min(maxHeight, h);\n        return h;\n    }\n    _findStaticTemplate(f) {\n        // templateField overrides template\n        if (this._templateField && f(this._templateField)) return this._templateField;\n        return super._findStaticTemplate(f);\n    }\n    _walkParents(f) {\n        if (this._parent) this._walkParent(f);\n    }\n    _walkParent(f) {\n        if (this._parent) this._parent._walkParent(f);\n        f(this);\n    }\n    /**\r\n     * Parent [[Container]] of this element.\r\n     *\r\n     * @return Parent container\r\n     */ get parent() {\n        return this._parent;\n    }\n    _setParent(parent, updateChildren = false) {\n        const prevParent = this._parent;\n        if (parent !== prevParent) {\n            this.markDirtyBounds();\n            parent.markDirty();\n            this._parent = parent;\n            if (updateChildren) {\n                this._removeParent(prevParent);\n                if (parent) {\n                    this._addPercentageSizeChildren();\n                    this._addPercentagePositionChildren();\n                }\n            }\n            this.markDirtyPosition();\n            this._applyThemes();\n        }\n    }\n    /**\r\n     * Returns an instance of [[NumberFormatter]] used in this element.\r\n     *\r\n     * If this element does not have it set, global one form [[Root]] is used.\r\n     *\r\n     * @see {@link https://www.amcharts.com/docs/v5/concepts/using-formatters/} for more info\r\n     * @return NumberFormatter instace\r\n     */ getNumberFormatter() {\n        return this.get(\"numberFormatter\", this._root.numberFormatter);\n    }\n    /**\r\n     * Returns an instance of [[DateFormatter]] used in this element.\r\n     *\r\n     * If this element does not have it set, global one form [[Root]] is used.\r\n     *\r\n     * @see {@link https://www.amcharts.com/docs/v5/concepts/using-formatters/} for more info\r\n     * @return DateFormatter instace\r\n     */ getDateFormatter() {\n        return this.get(\"dateFormatter\", this._root.dateFormatter);\n    }\n    /**\r\n     * Returns an instance of [[DurationFormatter]] used in this element.\r\n     *\r\n     * If this element does not have it set, global one form [[Root]] is used.\r\n     *\r\n     * @see {@link https://www.amcharts.com/docs/v5/concepts/using-formatters/} for more info\r\n     * @return DurationFormatter instace\r\n     */ getDurationFormatter() {\n        return this.get(\"durationFormatter\", this._root.durationFormatter);\n    }\n    /**\r\n     * Converts X/Y coordinate within this element to a global coordinate.\r\n     *\r\n     * @param  point  Local coordinate\r\n     * @return        Global coordinate\r\n     */ toGlobal(point) {\n        return this._display.toGlobal(point);\n    }\n    /**\r\n     * Converts global X/Y coordinate to a coordinate within this element.\r\n     *\r\n     * @param  point  Global coordinate\r\n     * @return        Local coordinate\r\n     */ toLocal(point) {\n        return this._display.toLocal(point);\n    }\n    _getDownPoint() {\n        const id = this._getDownPointId();\n        if (id) return this._downPoints[id];\n    }\n    _getDownPointId() {\n        if (this._downPoints) return $e66f9343b5144e1a$export$dc3913a2a38a46a4(this._downPoints, (a, b)=>{\n            if (a > b) return 1;\n            if (a < b) return -1;\n            return 0;\n        })[0];\n    }\n    /**\r\n     * Moves sprite to the end of the parent's children array.\r\n     *\r\n     * Depending on `layout` setting of the parten container, it may effect the\r\n     * positioning or overlapping order of the elements.\r\n     */ toFront() {\n        const parent = this.parent;\n        if (parent) parent.children.moveValue(this, parent.children.length - 1);\n    }\n    /**\r\n     * Moves sprite to the beginning of the parent's children array.\r\n     *\r\n     * Depending on `layout` setting of the parten container, it may effect the\r\n     * positioning or overlapping order of the elements.\r\n     */ toBack() {\n        const parent = this.parent;\n        if (parent) parent.children.moveValue(this, 0);\n    }\n}\nObject.defineProperty($d3b9c83dc790fa66$export$3075603db8e6204c, \"className\", {\n    enumerable: true,\n    configurable: true,\n    writable: true,\n    value: \"Sprite\"\n});\nObject.defineProperty($d3b9c83dc790fa66$export$3075603db8e6204c, \"classNames\", {\n    enumerable: true,\n    configurable: true,\n    writable: true,\n    value: (0, $baeade534ece7f4c$export$bc644a473284d944).classNames.concat([\n        $d3b9c83dc790fa66$export$3075603db8e6204c.className\n    ])\n});\n\n\n\nclass $49f0d49e061737b8$export$47606a6ae3eaed8e extends (0, $baeade534ece7f4c$export$bc644a473284d944) {\n    constructor(){\n        super(...arguments);\n        Object.defineProperty(this, \"_display\", {\n            enumerable: true,\n            configurable: true,\n            writable: true,\n            value: this._root._renderer.makeGraphics()\n        });\n        Object.defineProperty(this, \"_backgroundDisplay\", {\n            enumerable: true,\n            configurable: true,\n            writable: true,\n            value: this._root._renderer.makeGraphics()\n        });\n        Object.defineProperty(this, \"_clear\", {\n            enumerable: true,\n            configurable: true,\n            writable: true,\n            value: false\n        });\n        Object.defineProperty(this, \"_pattern\", {\n            enumerable: true,\n            configurable: true,\n            writable: true,\n            value: void 0\n        });\n    }\n    _afterNew() {\n        // Applying themes because pattern will not have parent\n        super._afterNewApplyThemes();\n    }\n    get pattern() {\n        return this._pattern;\n    }\n    _draw() {}\n    _beforeChanged() {\n        super._beforeChanged();\n        if (this.isDirty(\"repetition\") || this.isDirty(\"width\") || this.isDirty(\"height\") || this.isDirty(\"rotation\") || this.isDirty(\"strokeWidth\") || this.isDirty(\"strokeDasharray\") || this.isDirty(\"strokeDashoffset\") || this.isDirty(\"colorOpacity\") || this.isDirty(\"fillOpacity\")) this._clear = true;\n        this._checkDirtyFill();\n    }\n    _checkDirtyFill() {\n        if (this.isDirty(\"color\") || this.isDirty(\"fill\")) this._clear = true;\n    }\n    _changed() {\n        super._changed();\n        if (this._clear) {\n            const repetition = this.get(\"repetition\", \"\");\n            const width = this.get(\"width\", 100);\n            const height = this.get(\"height\", 100);\n            const fill = this.get(\"fill\");\n            const fillOpacity = this.get(\"fillOpacity\", 1);\n            const backgroundDisplay = this._backgroundDisplay;\n            const display = this._display;\n            display.clear();\n            backgroundDisplay.clear();\n            if (fill && fillOpacity > 0) {\n                backgroundDisplay.beginFill(fill, fillOpacity);\n                backgroundDisplay.drawRect(0, 0, width, height);\n                backgroundDisplay.endFill();\n            }\n            display.angle = this.get(\"rotation\", 0);\n            //display.pivot = { x: width / 2, y: height / 2 };\n            this._draw();\n            this._pattern = this._root._renderer.createPattern(display, backgroundDisplay, repetition, width, height);\n        }\n        this._clear = false;\n    }\n}\nObject.defineProperty($49f0d49e061737b8$export$47606a6ae3eaed8e, \"className\", {\n    enumerable: true,\n    configurable: true,\n    writable: true,\n    value: \"Pattern\"\n});\nObject.defineProperty($49f0d49e061737b8$export$47606a6ae3eaed8e, \"classNames\", {\n    enumerable: true,\n    configurable: true,\n    writable: true,\n    value: (0, $baeade534ece7f4c$export$bc644a473284d944).classNames.concat([\n        $49f0d49e061737b8$export$47606a6ae3eaed8e.className\n    ])\n});\n\n\nclass $f6091197791da1d7$export$1b09ebb7c225c9a8 extends (0, $49f0d49e061737b8$export$47606a6ae3eaed8e) {\n    constructor(){\n        super(...arguments);\n        Object.defineProperty(this, \"_image\", {\n            enumerable: true,\n            configurable: true,\n            writable: true,\n            value: void 0\n        });\n    }\n    _beforeChanged() {\n        super._beforeChanged();\n        this._clear = true;\n        if (this.isDirty(\"src\")) this._load();\n        const canvas = this.get(\"canvas\");\n        if (canvas) {\n            this.set(\"width\", canvas.width);\n            this.set(\"height\", canvas.height);\n        }\n    }\n    _draw() {\n        super._draw();\n        const image = this._image;\n        if (image) {\n            const patternWidth = this.get(\"width\", 100);\n            const patternHeight = this.get(\"height\", 100);\n            // Fit\n            const fit = this.get(\"fit\", \"image\");\n            let width = 0;\n            let height = 0;\n            if (fit == \"pattern\") {\n                width = patternWidth;\n                height = patternHeight;\n            } else {\n                width = image.width;\n                height = image.height;\n                if (fit == \"image\") {\n                    this.set(\"width\", width);\n                    this.set(\"height\", height);\n                }\n            }\n            // Position\n            const centered = this.get(\"centered\", true);\n            let x = 0;\n            let y = 0;\n            if (centered) {\n                x = patternWidth / 2 - width / 2;\n                y = patternHeight / 2 - height / 2;\n            }\n            this._display.image(image, width, height, x, y);\n        }\n        const canvas = this.get(\"canvas\");\n        if (canvas) this._display.image(canvas, canvas.width, canvas.height, 0, 0);\n    }\n    _load() {\n        const src = this.get(\"src\");\n        if (src) {\n            const image = new Image();\n            //image.crossOrigin = \"Anonymous\";\n            image.src = src;\n            image.decode().then(()=>{\n                this._image = image;\n                this._draw();\n                if (this.events.isEnabled(\"loaded\")) this.events.dispatch(\"loaded\", {\n                    type: \"loaded\",\n                    target: this\n                });\n            }).catch((_error)=>{\n            // TODO: maybe raise error?\n            });\n        }\n    }\n}\nObject.defineProperty($f6091197791da1d7$export$1b09ebb7c225c9a8, \"className\", {\n    enumerable: true,\n    configurable: true,\n    writable: true,\n    value: \"PicturePattern\"\n});\nObject.defineProperty($f6091197791da1d7$export$1b09ebb7c225c9a8, \"classNames\", {\n    enumerable: true,\n    configurable: true,\n    writable: true,\n    value: (0, $49f0d49e061737b8$export$47606a6ae3eaed8e).classNames.concat([\n        $f6091197791da1d7$export$1b09ebb7c225c9a8.className\n    ])\n});\n\n\n\n/**\r\n * From https://github.com/pixijs/pixi.js/blob/3dd0ff9a935f0bc13a09aefff9eb2872f02c51b9/packages/canvas/canvas-renderer/src/utils/mapCanvasBlendModesToPixi.ts#L13\r\n */ var $26f287a8eb69ba00$export$c9b8fe72ac71821;\n(function(BlendMode) {\n    BlendMode[\"ADD\"] = \"lighter\";\n    BlendMode[\"COLOR\"] = \"color\";\n    BlendMode[\"COLOR_BURN\"] = \"color-burn\";\n    BlendMode[\"COLOR_DODGE\"] = \"color-dodge\";\n    BlendMode[\"DARKEN\"] = \"darken\";\n    BlendMode[\"DIFFERENCE\"] = \"difference\";\n    BlendMode[\"DST_OVER\"] = \"destination-over\";\n    BlendMode[\"EXCLUSION\"] = \"exclusion\";\n    BlendMode[\"HARD_LIGHT\"] = \"hard-light\";\n    BlendMode[\"HUE\"] = \"hue\";\n    BlendMode[\"LIGHTEN\"] = \"lighten\";\n    BlendMode[\"LUMINOSITY\"] = \"luminosity\";\n    BlendMode[\"MULTIPLY\"] = \"multiply\";\n    BlendMode[\"NORMAL\"] = \"source-over\";\n    BlendMode[\"OVERLAY\"] = \"overlay\";\n    BlendMode[\"SATURATION\"] = \"saturation\";\n    BlendMode[\"SCREEN\"] = \"screen\";\n    BlendMode[\"SOFT_LIGHT\"] = \"soft-light\";\n    BlendMode[\"SRC_ATOP\"] = \"source-atop\";\n    BlendMode[\"XOR\"] = \"xor\";\n})($26f287a8eb69ba00$export$c9b8fe72ac71821 || ($26f287a8eb69ba00$export$c9b8fe72ac71821 = {}));\n\n\n\n\nconst $2ffdafbe1fe6a946$export$c2fbc8c3b8eba2bd = [\n    \"fill\",\n    \"fillOpacity\",\n    \"stroke\",\n    \"strokeWidth\",\n    \"strokeOpacity\",\n    \"fillPattern\",\n    \"strokePattern\",\n    \"fillGradient\",\n    \"strokeGradient\",\n    \"strokeDasharray\",\n    \"strokeDashoffset\",\n    \"shadowBlur\",\n    \"shadowColor\",\n    \"shadowOpacity\",\n    \"shadowOffsetX\",\n    \"shadowOffsetY\",\n    \"blur\",\n    \"sepia\",\n    \"invert\",\n    \"brightness\",\n    \"hue\",\n    \"contrast\",\n    \"saturate\"\n];\nclass $2ffdafbe1fe6a946$export$29d3e417456abdad extends (0, $d3b9c83dc790fa66$export$3075603db8e6204c) {\n    constructor(){\n        super(...arguments);\n        Object.defineProperty(this, \"_display\", {\n            enumerable: true,\n            configurable: true,\n            writable: true,\n            value: this._root._renderer.makeGraphics()\n        });\n        Object.defineProperty(this, \"_clear\", {\n            enumerable: true,\n            configurable: true,\n            writable: true,\n            value: false\n        });\n    }\n    _beforeChanged() {\n        super._beforeChanged();\n        if (this.isDirty(\"draw\") || this.isDirty(\"svgPath\")) this.markDirtyBounds();\n        if (this.isDirty(\"fill\") || this.isDirty(\"stroke\") || this.isDirty(\"visible\") || this.isDirty(\"forceHidden\") || this.isDirty(\"scale\") || this.isDirty(\"fillGradient\") || this.isDirty(\"strokeGradient\") || this.isDirty(\"fillPattern\") || this.isDirty(\"strokePattern\") || this.isDirty(\"fillOpacity\") || this.isDirty(\"strokeOpacity\") || this.isDirty(\"strokeWidth\") || this.isDirty(\"draw\") || this.isDirty(\"blendMode\") || this.isDirty(\"strokeDasharray\") || this.isDirty(\"strokeDashoffset\") || this.isDirty(\"svgPath\") || this.isDirty(\"lineJoin\") || this.isDirty(\"lineCap\") || this.isDirty(\"shadowColor\") || this.isDirty(\"shadowBlur\") || this.isDirty(\"shadowOffsetX\") || this.isDirty(\"shadowOffsetY\")) this._clear = true;\n        this._display.crisp = this.get(\"crisp\", false);\n        if (this.isDirty(\"fillGradient\")) {\n            const gradient = this.get(\"fillGradient\");\n            if (gradient) {\n                this._display.isMeasured = true;\n                const gradientTarget = gradient.get(\"target\");\n                if (gradientTarget) {\n                    this._disposers.push(gradientTarget.events.on(\"boundschanged\", ()=>{\n                        this._markDirtyKey(\"fill\");\n                    }));\n                    this._disposers.push(gradientTarget.events.on(\"positionchanged\", ()=>{\n                        this._markDirtyKey(\"fill\");\n                    }));\n                }\n            }\n        }\n        if (this.isDirty(\"strokeGradient\")) {\n            const gradient = this.get(\"strokeGradient\");\n            if (gradient) {\n                this._display.isMeasured = true;\n                const gradientTarget = gradient.get(\"target\");\n                if (gradientTarget) {\n                    this._disposers.push(gradientTarget.events.on(\"boundschanged\", ()=>{\n                        this._markDirtyKey(\"stroke\");\n                    }));\n                    this._disposers.push(gradientTarget.events.on(\"positionchanged\", ()=>{\n                        this._markDirtyKey(\"stroke\");\n                    }));\n                }\n            }\n        }\n    }\n    _changed() {\n        super._changed();\n        if (this._clear) {\n            this.markDirtyBounds();\n            this.markDirtyLayer();\n            this._display.clear();\n            let strokeDasharray = this.get(\"strokeDasharray\");\n            if ($f63bdea45a89cf24$export$7e4aa119212bc614(strokeDasharray)) {\n                if (strokeDasharray < 0.5) strokeDasharray = [\n                    0\n                ];\n                else strokeDasharray = [\n                    strokeDasharray\n                ];\n            }\n            this._display.setLineDash(strokeDasharray);\n            const strokeDashoffset = this.get(\"strokeDashoffset\");\n            if (strokeDashoffset) this._display.setLineDashOffset(strokeDashoffset);\n            const blendMode = this.get(\"blendMode\", (0, $26f287a8eb69ba00$export$c9b8fe72ac71821).NORMAL);\n            this._display.blendMode = blendMode;\n            const draw = this.get(\"draw\");\n            if (draw && typeof draw === \"function\") draw(this._display, this);\n            const svgPath = this.get(\"svgPath\");\n            if (svgPath != null) this._display.svgPath(svgPath);\n        }\n    }\n    _afterChanged() {\n        super._afterChanged();\n        if (this._clear) {\n            const fill = this.get(\"fill\");\n            const fillGradient = this.get(\"fillGradient\");\n            const fillPattern = this.get(\"fillPattern\");\n            const fillOpacity = this.get(\"fillOpacity\");\n            const stroke = this.get(\"stroke\");\n            const strokeGradient = this.get(\"strokeGradient\");\n            const strokePattern = this.get(\"strokePattern\");\n            const shadowColor = this.get(\"shadowColor\");\n            const shadowBlur = this.get(\"shadowBlur\");\n            const shadowOffsetX = this.get(\"shadowOffsetX\");\n            const shadowOffsetY = this.get(\"shadowOffsetY\");\n            const shadowOpacity = this.get(\"shadowOpacity\");\n            if (shadowColor && (shadowBlur || shadowOffsetX || shadowOffsetY)) this._display.shadow(shadowColor, shadowBlur, shadowOffsetX, shadowOffsetY, shadowOpacity);\n            if (fill && !fillGradient) {\n                this._display.beginFill(fill, fillOpacity);\n                this._display.endFill();\n            }\n            if (fillGradient) {\n                if (fill) {\n                    const stops = fillGradient.get(\"stops\", []);\n                    if (stops.length) $2f30431acd054e2f$export$79b2f7037acddd43(stops, (stop)=>{\n                        if ((!stop.color || stop.colorInherited) && fill) {\n                            stop.color = fill;\n                            stop.colorInherited = true;\n                        }\n                        if (stop.opacity == null || stop.opacityInherited) {\n                            stop.opacity = fillOpacity;\n                            stop.opacityInherited = true;\n                        }\n                    });\n                }\n                const gradient = fillGradient.getFill(this);\n                if (gradient) {\n                    this._display.beginFill(gradient, fillOpacity);\n                    this._display.endFill();\n                }\n            }\n            if (fillPattern) {\n                const pattern = fillPattern.pattern;\n                if (pattern) {\n                    this._display.beginFill(pattern, fillOpacity);\n                    this._display.endFill();\n                    if (fillPattern instanceof (0, $f6091197791da1d7$export$1b09ebb7c225c9a8)) fillPattern.events.once(\"loaded\", ()=>{\n                        this._clear = true;\n                        this.markDirty();\n                    });\n                }\n            }\n            if (stroke || strokeGradient || strokePattern) {\n                const strokeOpacity = this.get(\"strokeOpacity\");\n                let strokeWidth = this.get(\"strokeWidth\", 1);\n                if (this.get(\"nonScalingStroke\")) strokeWidth = strokeWidth / this.get(\"scale\", 1);\n                if (this.get(\"crisp\")) strokeWidth /= this._root._renderer.resolution;\n                const lineJoin = this.get(\"lineJoin\");\n                const lineCap = this.get(\"lineCap\");\n                if (stroke && !strokeGradient) {\n                    this._display.lineStyle(strokeWidth, stroke, strokeOpacity, lineJoin, lineCap);\n                    this._display.endStroke();\n                }\n                if (strokeGradient) {\n                    const stops = strokeGradient.get(\"stops\", []);\n                    if (stops.length) $2f30431acd054e2f$export$79b2f7037acddd43(stops, (stop)=>{\n                        if ((!stop.color || stop.colorInherited) && stroke) {\n                            stop.color = stroke;\n                            stop.colorInherited = true;\n                        }\n                        if (stop.opacity == null || stop.opacityInherited) {\n                            stop.opacity = strokeOpacity;\n                            stop.opacityInherited = true;\n                        }\n                    });\n                    const gradient = strokeGradient.getFill(this);\n                    if (gradient) {\n                        this._display.lineStyle(strokeWidth, gradient, strokeOpacity, lineJoin, lineCap);\n                        this._display.endStroke();\n                    }\n                }\n                if (strokePattern) {\n                    /*\r\n                    let changed = false;\r\n                    \r\n                    if (stroke && (!strokePattern.get(\"color\") || strokePattern.get(\"colorInherited\"))) {\r\n                        strokePattern.set(\"color\", stroke);\r\n                        strokePattern.set(\"colorInherited\", true);\r\n                        changed = true;\r\n                    }\r\n                    if (changed) {\r\n                        // @todo: is this OK?\r\n                        strokePattern._changed();\r\n                    }\r\n                    */ let pattern = strokePattern.pattern;\n                    if (pattern) {\n                        this._display.lineStyle(strokeWidth, pattern, strokeOpacity, lineJoin, lineCap);\n                        this._display.endStroke();\n                        if (strokePattern instanceof (0, $f6091197791da1d7$export$1b09ebb7c225c9a8)) strokePattern.events.once(\"loaded\", ()=>{\n                            this._clear = true;\n                            this.markDirty();\n                        });\n                    }\n                }\n            }\n            if (this.getPrivate(\"showingTooltip\")) this.showTooltip();\n        }\n        this._clear = false;\n    }\n}\nObject.defineProperty($2ffdafbe1fe6a946$export$29d3e417456abdad, \"className\", {\n    enumerable: true,\n    configurable: true,\n    writable: true,\n    value: \"Graphics\"\n});\nObject.defineProperty($2ffdafbe1fe6a946$export$29d3e417456abdad, \"classNames\", {\n    enumerable: true,\n    configurable: true,\n    writable: true,\n    value: (0, $d3b9c83dc790fa66$export$3075603db8e6204c).classNames.concat([\n        $2ffdafbe1fe6a946$export$29d3e417456abdad.className\n    ])\n});\n\n\nclass $9e0cea1ea085e274$export$4617fb02663045ef extends (0, $2ffdafbe1fe6a946$export$29d3e417456abdad) {\n    _afterNew() {\n        super._afterNew();\n        this._display.isMeasured = true;\n        this.setPrivateRaw(\"trustBounds\", true);\n    }\n    _beforeChanged() {\n        super._beforeChanged();\n        if (this.isDirty(\"width\") || this.isDirty(\"height\") || this.isPrivateDirty(\"width\") || this.isPrivateDirty(\"height\")) this._clear = true;\n    }\n    _changed() {\n        super._changed();\n        if (this._clear && !this.get(\"draw\")) this._draw();\n    }\n    _draw() {\n        this._display.drawRect(0, 0, this.width(), this.height());\n    }\n    _updateSize() {\n        this.markDirty();\n        this._clear = true;\n    }\n}\nObject.defineProperty($9e0cea1ea085e274$export$4617fb02663045ef, \"className\", {\n    enumerable: true,\n    configurable: true,\n    writable: true,\n    value: \"Rectangle\"\n});\nObject.defineProperty($9e0cea1ea085e274$export$4617fb02663045ef, \"classNames\", {\n    enumerable: true,\n    configurable: true,\n    writable: true,\n    value: (0, $2ffdafbe1fe6a946$export$29d3e417456abdad).classNames.concat([\n        $9e0cea1ea085e274$export$4617fb02663045ef.className\n    ])\n});\n\n\n\nfunction $df0987941167623a$export$a435655d785c1180(container, f) {\n    if (container.get(\"reverseChildren\", false)) container.children.eachReverse(f);\n    else container.children.each(f);\n}\nclass $df0987941167623a$export$c84671f46d6a1ca extends (0, $baeade534ece7f4c$export$bc644a473284d944) {\n}\nObject.defineProperty($df0987941167623a$export$c84671f46d6a1ca, \"className\", {\n    enumerable: true,\n    configurable: true,\n    writable: true,\n    value: \"Layout\"\n});\nObject.defineProperty($df0987941167623a$export$c84671f46d6a1ca, \"classNames\", {\n    enumerable: true,\n    configurable: true,\n    writable: true,\n    value: (0, $baeade534ece7f4c$export$bc644a473284d944).classNames.concat([\n        $df0987941167623a$export$c84671f46d6a1ca.className\n    ])\n});\n\n\n\n\nclass $ce42d27226ec20a0$export$8be7400f61e793f0 extends (0, $df0987941167623a$export$c84671f46d6a1ca) {\n    /**\r\n     * @ignore\r\n     */ updateContainer(container) {\n        let paddingLeft = container.get(\"paddingLeft\", 0);\n        let availableWidth = container.innerWidth();\n        let totalPercent = 0;\n        (0, $df0987941167623a$export$a435655d785c1180)(container, (child)=>{\n            if (child.isVisible()) {\n                if (child.get(\"position\") == \"relative\") {\n                    let childWidth = child.get(\"width\");\n                    if (childWidth instanceof (0, $bd0d0c10fd30006b$export$cbc348af47898b5e)) {\n                        totalPercent += childWidth.value;\n                        let w = availableWidth * childWidth.value;\n                        let minWidth = child.get(\"minWidth\", child.getPrivate(\"minWidth\", -Infinity));\n                        if (minWidth > w) {\n                            availableWidth -= minWidth;\n                            totalPercent -= childWidth.value;\n                        }\n                        let maxWidth = child.get(\"maxWidth\", child.getPrivate(\"maxWidth\", Infinity));\n                        if (w > maxWidth) {\n                            availableWidth -= maxWidth;\n                            totalPercent -= childWidth.value;\n                        }\n                    } else {\n                        if (!$f63bdea45a89cf24$export$7e4aa119212bc614(childWidth)) childWidth = child.width();\n                        availableWidth -= childWidth + child.get(\"marginLeft\", 0) + child.get(\"marginRight\", 0);\n                    }\n                }\n            }\n        });\n        if (availableWidth <= 0 || availableWidth == Infinity) availableWidth = .1;\n        //if (availableWidth > 0) {\n        (0, $df0987941167623a$export$a435655d785c1180)(container, (child)=>{\n            if (child.isVisible()) {\n                if (child.get(\"position\") == \"relative\") {\n                    let childWidth = child.get(\"width\");\n                    if (childWidth instanceof (0, $bd0d0c10fd30006b$export$cbc348af47898b5e)) {\n                        let privateWidth = availableWidth * childWidth.value / totalPercent - child.get(\"marginLeft\", 0) - child.get(\"marginRight\", 0);\n                        let minWidth = child.get(\"minWidth\", child.getPrivate(\"minWidth\", -Infinity));\n                        let maxWidth = child.get(\"maxWidth\", child.getPrivate(\"maxWidth\", Infinity));\n                        privateWidth = Math.min(Math.max(minWidth, privateWidth), maxWidth);\n                        child.setPrivate(\"width\", privateWidth);\n                    } else if (child._prevSettings.width instanceof (0, $bd0d0c10fd30006b$export$cbc348af47898b5e)) child.setPrivate(\"width\", undefined);\n                }\n            }\n        });\n        //}\n        let prevX = paddingLeft;\n        (0, $df0987941167623a$export$a435655d785c1180)(container, (child)=>{\n            if (child.get(\"position\") == \"relative\") {\n                if (child.isVisible()) {\n                    let bounds = child.adjustedLocalBounds();\n                    let marginLeft = child.get(\"marginLeft\", 0);\n                    let marginRight = child.get(\"marginRight\", 0);\n                    let maxWidth = child.get(\"maxWidth\");\n                    let left = bounds.left;\n                    let right = bounds.right;\n                    if (maxWidth) {\n                        if (right - left > maxWidth) right = left + maxWidth;\n                    }\n                    let x = prevX + marginLeft - left;\n                    child.setPrivate(\"x\", x);\n                    prevX = x + right + marginRight;\n                } else child.setPrivate(\"x\", undefined);\n            }\n        });\n    }\n}\nObject.defineProperty($ce42d27226ec20a0$export$8be7400f61e793f0, \"className\", {\n    enumerable: true,\n    configurable: true,\n    writable: true,\n    value: \"HorizontalLayout\"\n});\nObject.defineProperty($ce42d27226ec20a0$export$8be7400f61e793f0, \"classNames\", {\n    enumerable: true,\n    configurable: true,\n    writable: true,\n    value: (0, $df0987941167623a$export$c84671f46d6a1ca).classNames.concat([\n        $ce42d27226ec20a0$export$8be7400f61e793f0.className\n    ])\n});\n\n\n\n\n\nclass $b05f413a7bdbea0f$export$e4d3124dc23dc9c9 extends (0, $df0987941167623a$export$c84671f46d6a1ca) {\n    /**\r\n     * @ignore\r\n     */ updateContainer(container) {\n        let paddingTop = container.get(\"paddingTop\", 0);\n        let availableHeight = container.innerHeight();\n        let totalPercent = 0;\n        (0, $df0987941167623a$export$a435655d785c1180)(container, (child)=>{\n            if (child.isVisible()) {\n                if (child.get(\"position\") == \"relative\") {\n                    let childHeight = child.get(\"height\");\n                    if (childHeight instanceof (0, $bd0d0c10fd30006b$export$cbc348af47898b5e)) {\n                        totalPercent += childHeight.value;\n                        let h = availableHeight * childHeight.value;\n                        let minHeight = child.get(\"minHeight\", child.getPrivate(\"minHeight\", -Infinity));\n                        if (minHeight > h) {\n                            availableHeight -= minHeight;\n                            totalPercent -= childHeight.value;\n                        }\n                        let maxHeight = child.get(\"maxHeight\", child.getPrivate(\"maxHeight\", Infinity));\n                        if (h > maxHeight) {\n                            availableHeight -= maxHeight;\n                            totalPercent -= childHeight.value;\n                        }\n                    } else {\n                        if (!$f63bdea45a89cf24$export$7e4aa119212bc614(childHeight)) childHeight = child.height();\n                        availableHeight -= childHeight + child.get(\"marginTop\", 0) + child.get(\"marginBottom\", 0);\n                    }\n                }\n            }\n        });\n        if (availableHeight <= 0 || availableHeight == Infinity) availableHeight = .1;\n        //if (availableHeight > 0) {\n        (0, $df0987941167623a$export$a435655d785c1180)(container, (child)=>{\n            if (child.isVisible()) {\n                if (child.get(\"position\") == \"relative\") {\n                    let childHeight = child.get(\"height\");\n                    if (childHeight instanceof (0, $bd0d0c10fd30006b$export$cbc348af47898b5e)) {\n                        let privateHeight = availableHeight * childHeight.value / totalPercent - child.get(\"marginTop\", 0) - child.get(\"marginBottom\", 0);\n                        let minHeight = child.get(\"minHeight\", child.getPrivate(\"minHeight\", -Infinity));\n                        let maxHeight = child.get(\"maxHeight\", child.getPrivate(\"maxHeight\", Infinity));\n                        privateHeight = Math.min(Math.max(minHeight, privateHeight), maxHeight);\n                        child.setPrivate(\"height\", privateHeight);\n                    } else if (child._prevSettings.height instanceof (0, $bd0d0c10fd30006b$export$cbc348af47898b5e)) child.setPrivate(\"height\", undefined);\n                }\n            }\n        });\n        //}\n        let prevY = paddingTop;\n        (0, $df0987941167623a$export$a435655d785c1180)(container, (child)=>{\n            if (child.get(\"position\") == \"relative\") {\n                if (child.isVisible()) {\n                    let bounds = child.adjustedLocalBounds();\n                    let marginTop = child.get(\"marginTop\", 0);\n                    let top = bounds.top;\n                    let bottom = bounds.bottom;\n                    let maxHeight = child.get(\"maxHeight\");\n                    if (maxHeight) {\n                        if (bottom - top > maxHeight) bottom = top + maxHeight;\n                    }\n                    let marginBottom = child.get(\"marginBottom\", 0);\n                    let y = prevY + marginTop - top;\n                    child.setPrivate(\"y\", y);\n                    prevY = y + bottom + marginBottom;\n                } else child.setPrivate(\"y\", undefined);\n            }\n        });\n    }\n}\nObject.defineProperty($b05f413a7bdbea0f$export$e4d3124dc23dc9c9, \"className\", {\n    enumerable: true,\n    configurable: true,\n    writable: true,\n    value: \"VerticalLayout\"\n});\nObject.defineProperty($b05f413a7bdbea0f$export$e4d3124dc23dc9c9, \"classNames\", {\n    enumerable: true,\n    configurable: true,\n    writable: true,\n    value: (0, $df0987941167623a$export$c84671f46d6a1ca).classNames.concat([\n        $b05f413a7bdbea0f$export$e4d3124dc23dc9c9.className\n    ])\n});\n\n\n\n\n\nclass $9961b4caf46ffbfc$export$7d2b12578154a735 extends (0, $df0987941167623a$export$c84671f46d6a1ca) {\n    _afterNew() {\n        this._setRawDefault(\"maxColumns\", Number.MAX_VALUE);\n        super._afterNew();\n    }\n    /**\r\n     * @ignore\r\n     */ updateContainer(container) {\n        let paddingLeft = container.get(\"paddingLeft\", 0);\n        let paddingRight = container.get(\"paddingRight\", 0);\n        let paddingTop = container.get(\"paddingTop\", 0);\n        let availableWidth = container.maxWidth() - paddingLeft - paddingRight;\n        let minCellWidth = availableWidth;\n        let maxCellWidth = 1;\n        (0, $df0987941167623a$export$a435655d785c1180)(container, (child)=>{\n            if (child.get(\"visible\") && child.getPrivate(\"visible\") && !child.get(\"forceHidden\")) {\n                if (child.get(\"position\") != \"absolute\") {\n                    let childWidth = child.width();\n                    if (childWidth < minCellWidth) minCellWidth = childWidth;\n                    if (childWidth > maxCellWidth) maxCellWidth = childWidth;\n                }\n            }\n        });\n        minCellWidth = $f43e9e04b3f0548b$export$386b748ab02f16a0(minCellWidth, 1, availableWidth);\n        maxCellWidth = $f43e9e04b3f0548b$export$386b748ab02f16a0(maxCellWidth, 1, availableWidth);\n        let columnCount = 1;\n        if (this.get(\"fixedWidthGrid\")) columnCount = availableWidth / maxCellWidth;\n        else columnCount = availableWidth / minCellWidth;\n        columnCount = Math.max(1, Math.floor(columnCount));\n        columnCount = Math.min(this.get(\"maxColumns\", Number.MAX_VALUE), columnCount);\n        let columnWidths = this.getColumnWidths(container, columnCount, maxCellWidth, availableWidth);\n        let prevY = paddingTop;\n        let column = 0;\n        let maxColumnHeight = 0;\n        columnCount = columnWidths.length;\n        let prevX = paddingLeft;\n        (0, $df0987941167623a$export$a435655d785c1180)(container, (child)=>{\n            if (child.get(\"position\") == \"relative\" && child.isVisible()) {\n                const marginTop = child.get(\"marginTop\", 0);\n                const marginBottom = child.get(\"marginBottom\", 0);\n                let bounds = child.adjustedLocalBounds();\n                let marginLeft = child.get(\"marginLeft\", 0);\n                let marginRight = child.get(\"marginRight\", 0);\n                let x = prevX + marginLeft - bounds.left;\n                let y = prevY + marginTop - bounds.top;\n                child.setPrivate(\"x\", x);\n                child.setPrivate(\"y\", y);\n                prevX += columnWidths[column] + marginRight;\n                maxColumnHeight = Math.max(maxColumnHeight, child.height() + marginTop + marginBottom);\n                column++;\n                if (column >= columnCount) {\n                    column = 0;\n                    prevX = paddingLeft;\n                    prevY += maxColumnHeight;\n                }\n            }\n        });\n    }\n    /**\r\n     * @ignore\r\n     */ getColumnWidths(container, columnCount, maxCellWidth, availableWidth) {\n        let totalWidth = 0;\n        let columnWidths = [];\n        let column = 0;\n        (0, $df0987941167623a$export$a435655d785c1180)(container, (child)=>{\n            let bounds = child.adjustedLocalBounds();\n            if (child.get(\"position\") != \"absolute\" && child.isVisible()) {\n                if (this.get(\"fixedWidthGrid\")) columnWidths[column] = maxCellWidth;\n                else columnWidths[column] = Math.max(columnWidths[column] | 0, bounds.right - bounds.left + child.get(\"marginLeft\", 0) + child.get(\"marginRight\", 0));\n                if (column < container.children.length - 1) {\n                    column++;\n                    if (column == columnCount) column = 0;\n                }\n            }\n        });\n        $2f30431acd054e2f$export$79b2f7037acddd43(columnWidths, (w)=>{\n            totalWidth += w;\n        });\n        if (totalWidth > availableWidth) {\n            if (columnCount > 2) {\n                columnCount -= 1;\n                return this.getColumnWidths(container, columnCount, maxCellWidth, availableWidth);\n            } else return [\n                availableWidth\n            ];\n        }\n        return columnWidths;\n    }\n}\nObject.defineProperty($9961b4caf46ffbfc$export$7d2b12578154a735, \"className\", {\n    enumerable: true,\n    configurable: true,\n    writable: true,\n    value: \"GridLayout\"\n});\nObject.defineProperty($9961b4caf46ffbfc$export$7d2b12578154a735, \"classNames\", {\n    enumerable: true,\n    configurable: true,\n    writable: true,\n    value: (0, $df0987941167623a$export$c84671f46d6a1ca).classNames.concat([\n        $9961b4caf46ffbfc$export$7d2b12578154a735.className\n    ])\n});\n\n\n/** @ignore */ /** */ \n\n\n\n\nclass $4b06370a9416d0ab$export$cfc95f342033cc43 {\n    /**\r\n     * Replaces brackets with temporary placeholders.\r\n     *\r\n     * @ignore Exclude from docs\r\n     * @param text  Input text\r\n     * @return Escaped text\r\n     */ static escape(text) {\n        return text.replace(/\\[\\[/g, this.prefix + \"1\").replace(/([^\\/\\]]{1})\\]\\]/g, \"$1\" + this.prefix + \"2\").replace(/\\]\\]/g, this.prefix + \"2\").replace(/\\{\\{/g, this.prefix + \"3\").replace(/\\}\\}/g, this.prefix + \"4\").replace(/\\'\\'/g, this.prefix + \"5\");\n    }\n    /**\r\n     * Replaces placeholders back to brackets.\r\n     *\r\n     * @ignore Exclude from docs\r\n     * @param text  Escaped text\r\n     * @return Unescaped text\r\n     */ static unescape(text) {\n        return text.replace(new RegExp(this.prefix + \"1\", \"g\"), \"[[\").replace(new RegExp(this.prefix + \"2\", \"g\"), \"]]\").replace(new RegExp(this.prefix + \"3\", \"g\"), \"{{\").replace(new RegExp(this.prefix + \"4\", \"g\"), \"}}\").replace(new RegExp(this.prefix + \"5\", \"g\"), \"''\");\n    }\n    /**\r\n     * Cleans up the text text for leftover double square brackets.\r\n     *\r\n     * @ignore Exclude from docs\r\n     * @param text  Input text\r\n     * @return Cleaned up text\r\n     */ static cleanUp(text) {\n        return text.replace(/\\[\\[/g, \"[\").replace(/\\]\\]/g, \"]\").replace(/\\{\\{/g, \"{\").replace(/\\}\\}/g, \"}\").replace(/\\'\\'/g, \"'\");\n    }\n    /**\r\n     * Splits string into chunks. (style blocks, quoted blocks, regular blocks)\r\n     *\r\n     * If the second parameter `quotedBlocks` is set to `true` this method will\r\n     * also single out text blocks enclosed within single quotes that no\r\n     * formatting should be applied to, and they should be displayed as is.\r\n     *\r\n     * Default for the above is `false`, so that you can use single quote in text\r\n     * without escaping it.\r\n     *\r\n     * If enabled, single quotes can be escaped by doubling it - adding two\r\n     * single quotes, which will be replaced by a one single quote in the final\r\n     * output.\r\n     *\r\n     * @ignore Exclude from docs\r\n     * @param text          Text to chunk\r\n     * @param quotedBlocks  Use quoted blocks\r\n     * @param noFormatting  Formatting blocks will be treated as regular text\r\n     * @return Array of string chunks\r\n     */ static chunk(text, quotedBlocks = false, noFormatting = false) {\n        // Init result\n        let res = [];\n        // Replace double (escaped) square spaces and quotes with temporary codes\n        text = this.escape(text);\n        // Deal with style blocks\n        let chunks = quotedBlocks ? text.split(\"'\") : [\n            text\n        ];\n        for(let i = 0; i < chunks.length; i++){\n            let chunk = chunks[i];\n            // Empty?\n            if (chunk === \"\") continue;\n            if (i % 2 === 0) {\n                // Text outside quotes\n                // Parse for style blocks which are \"text\" chunks, the rest chunks are\n                // \"value\"\n                chunk = chunk.replace(/\\]\\[/g, \"]\" + $f63bdea45a89cf24$export$55fc5ffc49a23c34 + \"[\");\n                chunk = chunk.replace(/\\[\\]/g, \"[ ]\");\n                let chunks2 = chunk.split(/[\\[\\]]+/);\n                for(let i2 = 0; i2 < chunks2.length; i2++){\n                    let chunk2 = this.cleanUp(this.unescape(chunks2[i2]));\n                    // Placeholder?\n                    if (chunk2 === $f63bdea45a89cf24$export$55fc5ffc49a23c34) continue;\n                    // Empty?\n                    if (chunk2 === \"\") continue;\n                    // Block or value\n                    if (i2 % 2 === 0) res.push({\n                        \"type\": \"value\",\n                        \"text\": chunk2\n                    });\n                    else res.push({\n                        \"type\": noFormatting ? \"value\" : \"format\",\n                        \"text\": \"[\" + chunk2 + \"]\"\n                    });\n                }\n            } else {\n                // A text within doublequotes\n                // All chunks are \"text\"\n                let chunks2 = chunk.split(/[\\[\\]]+/);\n                for(let i2 = 0; i2 < chunks2.length; i2++){\n                    let chunk2 = this.cleanUp(this.unescape(chunks2[i2]));\n                    // Empty?\n                    if (chunk2 === \"\") continue;\n                    // Block or text\n                    if (i2 % 2 === 0) res.push({\n                        \"type\": \"text\",\n                        \"text\": chunk2\n                    });\n                    else if (this.isImage(chunk2)) res.push({\n                        \"type\": \"image\",\n                        \"text\": \"[\" + chunk2 + \"]\"\n                    });\n                    else res.push({\n                        \"type\": \"format\",\n                        \"text\": \"[\" + chunk2 + \"]\"\n                    });\n                }\n            }\n        }\n        return res;\n    }\n    /**\r\n     * Checks if supplied format contains image information and should be\r\n     * formatted as such.\r\n     * I.e.: `[img: myImage.png]`\r\n     *\r\n     * @ignore\r\n     * @param  text  Format\r\n     * @return true if it is an image\r\n     */ static isImage(text) {\n        return text.match(/img[ ]?:/) ? true : false;\n    }\n    static getTextStyle(style) {\n        // let textStyle: string[] = [];\n        // let textFill: string | undefined;\n        let format = {};\n        if (style == \"\" || style == \"[ ]\") return {};\n        // Pre-process quoted text\n        const q = style.match(/('[^']*')|(\"[^\"]*\")/gi);\n        if (q) for(let i = 0; i < q.length; i++)style = style.replace(q[i], q[i].replace(/['\"]*/g, \"\").replace(/[ ]+/g, \"+\"));\n        // Get style parts\n        let b = style.match(/([\\w\\-]*:[\\s]?[^;\\s\\]]*)|(\\#[\\w]{1,6})|([\\w\\-]+)|(\\/)/gi);\n        // Empty?\n        if (!b) return {};\n        // Check each part\n        for(let i = 0; i < b.length; i++){\n            if (b[i].match(/^(normal|bold|bolder|lighter|100|200|300|400|500|600|700|800|900)$/i)) format.fontWeight = b[i];\n            else if (b[i].match(/^(underline|line-through)$/i)) format.textDecoration = b[i];\n            else if (b[i] == \"/\") ;\n            else if (!b[i].match(/:/)) // Color\n            format.fill = (0, $389de129b6cd18b1$export$892596cec99bc70e).fromString(b[i]);\n            else {\n                const p = b[i].replace(\"+\", \" \").split(/:[ ]*/);\n                format[p[0]] = p[1];\n            //textStyle.push(b[i].replace(/^[a-zA-Z]:[ ]*/, \"\"));\n            //b[i] = b[i].replace(/\\+/g, \" \");\n            }\n        }\n        return format;\n    }\n}\nObject.defineProperty($4b06370a9416d0ab$export$cfc95f342033cc43, \"prefix\", {\n    enumerable: true,\n    configurable: true,\n    writable: true,\n    value: \"__amcharts__\"\n});\n\n\nfunction $8d45a8a77dcd0f75$export$6a40ef019a0fa5f6(target, string) {\n    if (string != null) {\n        string = \"\" + string;\n        string = (0, $4b06370a9416d0ab$export$cfc95f342033cc43).escape(string);\n        let tags = string.match(/\\{([^}]+)\\}/g);\n        let i;\n        if (tags) for(i = 0; i < tags.length; i++){\n            let tag = tags[i].replace(/\\{([^}]+)\\}/, \"$1\");\n            let value = $8d45a8a77dcd0f75$var$getTagValue(target, tag, \"\");\n            if (value == null) value = \"\";\n            string = string.split(tags[i]).join(value);\n        }\n        string = (0, $4b06370a9416d0ab$export$cfc95f342033cc43).unescape(string);\n    } else string = \"\";\n    // TODO: apply adapter?\n    return string;\n}\n/**\r\n * @ignore\r\n */ function $8d45a8a77dcd0f75$var$getTagValue(target, tagName, format) {\n    let value;\n    const dataItem = target.dataItem;\n    // Parse parts\n    let parts = [];\n    let reg = /(format[a-zA-Z]*)\\((.*)\\)|([^.]+)/g;\n    let matches;\n    while(true){\n        matches = reg.exec(tagName);\n        if (matches === null) break;\n        if (matches[3]) {\n            // Simple property\n            parts.push({\n                prop: matches[3]\n            });\n            // Check if maybe we should force a formatter on this value\n            const dateFields = target.getDateFormatter().get(\"dateFields\", []);\n            const numericFields = target.getNumberFormatter().get(\"numericFields\", []);\n            const durationFields = target.getDurationFormatter().get(\"durationFields\", []);\n            if (dateFields.indexOf(matches[3]) !== -1) parts.push({\n                method: \"formatDate\",\n                params: []\n            });\n            else if (numericFields.indexOf(matches[3]) !== -1) parts.push({\n                method: \"formatNumber\",\n                params: []\n            });\n            else if (durationFields.indexOf(matches[3]) !== -1) parts.push({\n                method: \"formatDuration\",\n                params: []\n            });\n        } else {\n            // Method\n            // Parse parameters\n            let params = [];\n            if ($05b1b40b69b15016$export$87c2784dc9fc4ab(matches[2]) != \"\") {\n                let reg2 = /'([^']*)'|\"([^\"]*)\"|([0-9\\-]+)/g;\n                let matches2;\n                while(true){\n                    matches2 = reg2.exec(matches[2]);\n                    if (matches2 === null) break;\n                    params.push(matches2[1] || matches2[2] || matches2[3]);\n                }\n            }\n            parts.push({\n                method: matches[1],\n                params: params\n            });\n        }\n    }\n    // Check if we can retrieve the value from data item\n    if (dataItem) {\n        // Check values\n        value = $8d45a8a77dcd0f75$export$1aee974227db7753(target, parts, dataItem._settings);\n        // Check properties\n        if (value == null || $f63bdea45a89cf24$export$a6cdc56e425d0d0a(value)) value = $8d45a8a77dcd0f75$export$1aee974227db7753(target, parts, dataItem);\n        // Check data context\n        let dataContext = dataItem.dataContext;\n        if (value == null && dataContext) {\n            value = $8d45a8a77dcd0f75$export$1aee974227db7753(target, parts, dataContext);\n            // Maybe it's a literal dot-separated name of the key in dataContext?\n            if (value == null) value = $8d45a8a77dcd0f75$export$1aee974227db7753(target, [\n                {\n                    prop: tagName\n                }\n            ], dataContext);\n            // scond data context level sometimes exist (tree map)\n            if (value == null && dataContext.dataContext) value = $8d45a8a77dcd0f75$export$1aee974227db7753(target, parts, dataContext.dataContext);\n        }\n        // Check component's data item\n        if (value == null && dataItem.component && dataItem.component.dataItem !== dataItem) value = $8d45a8a77dcd0f75$var$getTagValue(dataItem.component, tagName, format);\n    }\n    // Check sprite's properties\n    if (value == null) value = $8d45a8a77dcd0f75$export$1aee974227db7753(target, parts, target);\n    // Finally, check the parent\n    if (value == null && target.parent) value = $8d45a8a77dcd0f75$var$getTagValue(target.parent, tagName, format);\n    return value;\n}\n/**\r\n * @ignore\r\n */ function $8d45a8a77dcd0f75$var$getCustomDataValue(target, prop) {\n    const customData = target.getPrivate(\"customData\");\n    if ($f63bdea45a89cf24$export$a6cdc56e425d0d0a(customData)) return customData[prop];\n}\nfunction $8d45a8a77dcd0f75$export$1aee974227db7753(target, parts, object, format) {\n    let current = object;\n    let formatApplied = false;\n    for(let i = 0, len = parts.length; i < len; i++){\n        let part = parts[i];\n        if (part.prop) {\n            // Regular property\n            if (current instanceof (0, $d3b9c83dc790fa66$export$3075603db8e6204c)) {\n                let tmp = current.get(part.prop);\n                if (tmp == null) tmp = current.getPrivate(part.prop);\n                if (tmp == null) tmp = $8d45a8a77dcd0f75$var$getCustomDataValue(current, part.prop);\n                if (tmp == null) tmp = current[part.prop];\n                current = tmp;\n            } else if (current.get) {\n                let tmp = current.get(part.prop);\n                if (tmp == null) tmp = current[part.prop];\n                current = tmp;\n            } else current = current[part.prop];\n            if (current == null) // Not set, return undefined\n            return;\n        } else // Method\n        switch(part.method){\n            case \"formatNumber\":\n                let numberValue = $f63bdea45a89cf24$export$a0a81dc3380ce7d3(current);\n                if (numberValue != null) {\n                    current = target.getNumberFormatter().format(numberValue, format || part.params[0] || undefined);\n                    formatApplied = true;\n                }\n                break;\n            case \"formatDate\":\n                let dateValue = $f63bdea45a89cf24$export$e67a095c620b86fe(current);\n                if (!$f63bdea45a89cf24$export$871608497c498473(dateValue) || $f63bdea45a89cf24$export$c9f5652083b8129d(dateValue.getTime())) // Was not able to get date out of value, quitting and letting\n                // calling method try another value\n                return;\n                if (dateValue != null) {\n                    current = target.getDateFormatter().format(dateValue, format || part.params[0] || undefined);\n                    formatApplied = true;\n                }\n                break;\n            case \"formatDuration\":\n                let durationValue = $f63bdea45a89cf24$export$a0a81dc3380ce7d3(current);\n                if (durationValue != null) {\n                    current = target.getDurationFormatter().format(durationValue, format || part.params[0] || undefined, part.params[1] || undefined);\n                    formatApplied = true;\n                }\n                break;\n            case \"urlEncode\":\n            case \"encodeURIComponent\":\n                current = encodeURIComponent(current);\n                break;\n            default:\n                if (current[part.method]) current[part.method].apply(object, part.params);\n                break;\n        }\n    }\n    // Apply default format if it wasn't applied explicitly\n    if (!formatApplied) {\n        let formatParts = [\n            {\n                method: \"\",\n                params: format\n            }\n        ];\n        if (format == null) {\n            // Format is not set\n            // Determine from the type of the value\n            if ($f63bdea45a89cf24$export$7e4aa119212bc614(current)) {\n                formatParts[0].method = \"formatNumber\";\n                formatParts[0].params = \"\";\n            } else if ($f63bdea45a89cf24$export$871608497c498473(current)) {\n                formatParts[0].method = \"formatDate\";\n                formatParts[0].params = \"\";\n            }\n        } else {\n            // Format set\n            // Try to determine formatter based on the format\n            let formatterType = $05b1b40b69b15016$export$f61ac8b6f1f46202(format);\n            // format\n            if (formatterType === \"number\") formatParts[0].method = \"formatNumber\";\n            else if (formatterType === \"date\") formatParts[0].method = \"formatDate\";\n            else if (formatterType === \"duration\") formatParts[0].method = \"formatDuration\";\n        }\n        // Apply format\n        if (formatParts[0].method) current = $8d45a8a77dcd0f75$export$1aee974227db7753(target, formatParts, current);\n    }\n    return current;\n}\n\n\n\n\n\nclass $5de502da8a72d65e$export$42a852a2b6b56249 extends (0, $d3b9c83dc790fa66$export$3075603db8e6204c) {\n    constructor(){\n        super(...arguments);\n        Object.defineProperty(this, \"_display\", {\n            enumerable: true,\n            configurable: true,\n            writable: true,\n            value: this._root._renderer.makeContainer()\n        });\n        Object.defineProperty(this, \"_childrenDisplay\", {\n            enumerable: true,\n            configurable: true,\n            writable: true,\n            value: this._root._renderer.makeContainer()\n        });\n        /**\r\n         * List of Container's child elements.\r\n         */ Object.defineProperty(this, \"children\", {\n            enumerable: true,\n            configurable: true,\n            writable: true,\n            value: new (0, $5e30d142a93206ce$export$dca3b0875bd9a954)(this)\n        });\n        Object.defineProperty(this, \"_percentageSizeChildren\", {\n            enumerable: true,\n            configurable: true,\n            writable: true,\n            value: []\n        });\n        Object.defineProperty(this, \"_percentagePositionChildren\", {\n            enumerable: true,\n            configurable: true,\n            writable: true,\n            value: []\n        });\n        Object.defineProperty(this, \"_prevWidth\", {\n            enumerable: true,\n            configurable: true,\n            writable: true,\n            value: 0\n        });\n        Object.defineProperty(this, \"_prevHeight\", {\n            enumerable: true,\n            configurable: true,\n            writable: true,\n            value: 0\n        });\n        Object.defineProperty(this, \"_contentWidth\", {\n            enumerable: true,\n            configurable: true,\n            writable: true,\n            value: 0\n        });\n        Object.defineProperty(this, \"_contentHeight\", {\n            enumerable: true,\n            configurable: true,\n            writable: true,\n            value: 0\n        });\n        Object.defineProperty(this, \"_contentMask\", {\n            enumerable: true,\n            configurable: true,\n            writable: true,\n            value: void 0\n        });\n        Object.defineProperty(this, \"_vsbd0\", {\n            enumerable: true,\n            configurable: true,\n            writable: true,\n            value: void 0\n        });\n        Object.defineProperty(this, \"_vsbd1\", {\n            enumerable: true,\n            configurable: true,\n            writable: true,\n            value: void 0\n        });\n    }\n    _afterNew() {\n        super._afterNew();\n        this._display.addChild(this._childrenDisplay);\n    }\n    _dispose() {\n        $2f30431acd054e2f$export$a40ba8785b7efce8(this.allChildren(), (child)=>{\n            child.dispose();\n        });\n        if (this.getPrivate(\"htmlElement\")) this._root._removeHTMLContent(this);\n        super._dispose();\n    }\n    _changed() {\n        super._changed();\n        if (this.isDirty(\"interactiveChildren\")) this._display.interactiveChildren = this.get(\"interactiveChildren\", false);\n        if (this.isDirty(\"layout\")) {\n            this._prevWidth = 0;\n            this._prevHeight = 0;\n            this.markDirtyBounds();\n            if (this._prevSettings.layout) this.children.each((child)=>{\n                child.removePrivate(\"x\");\n                child.removePrivate(\"y\");\n            });\n        }\n        if (this.isDirty(\"paddingTop\") || this.isDirty(\"paddingBottom\") || this.isDirty(\"paddingLeft\") || this.isDirty(\"paddingRight\")) this.children.each((child)=>{\n            child.markDirtyPosition();\n        });\n        if (this.isDirty(\"maskContent\")) {\n            const childrenDisplay = this._childrenDisplay;\n            let contentMask = this._contentMask;\n            if (this.get(\"maskContent\")) {\n                if (!contentMask) {\n                    contentMask = (0, $9e0cea1ea085e274$export$4617fb02663045ef).new(this._root, {\n                        x: -0.5,\n                        y: -0.5,\n                        width: this.width() + 1,\n                        height: this.height() + 1\n                    });\n                    this._contentMask = contentMask;\n                    childrenDisplay.addChildAt(contentMask._display, 0);\n                    childrenDisplay.mask = contentMask._display;\n                }\n            } else if (contentMask) {\n                childrenDisplay.removeChild(contentMask._display);\n                childrenDisplay.mask = null;\n                contentMask.dispose();\n                this._contentMask = undefined;\n            }\n        }\n    }\n    _updateSize() {\n        super._updateSize();\n        $2f30431acd054e2f$export$79b2f7037acddd43(this._percentageSizeChildren, (child)=>{\n            child._updateSize();\n        });\n        $2f30431acd054e2f$export$79b2f7037acddd43(this._percentagePositionChildren, (child)=>{\n            child.markDirtyPosition();\n            child._updateSize();\n        });\n        this.updateBackground();\n    }\n    updateBackground() {\n        const background = this.get(\"background\");\n        let bounds = this._localBounds;\n        if (bounds && !this.isHidden()) {\n            let x = bounds.left;\n            let y = bounds.top;\n            let w = bounds.right - x;\n            let h = bounds.bottom - y;\n            let maxWidth = this.get(\"maxWidth\");\n            let maxHeight = this.get(\"maxHeight\");\n            if (maxHeight) {\n                if (h > maxHeight) h = maxHeight;\n            }\n            if (maxWidth) {\n                if (w > maxWidth) w = maxWidth;\n            }\n            let width = this.width();\n            let height = this.height();\n            if (background) {\n                background.setAll({\n                    width: w,\n                    height: h,\n                    x: x,\n                    y: y\n                });\n                if (this._display.interactive) background._display.interactive = true;\n            }\n            const contentMask = this._contentMask;\n            if (contentMask) contentMask.setAll({\n                width: width + 1,\n                height: height + 1\n            });\n            const verticalScrollbar = this.get(\"verticalScrollbar\");\n            if (verticalScrollbar) {\n                verticalScrollbar.set(\"height\", height);\n                verticalScrollbar.set(\"x\", width - verticalScrollbar.width() - verticalScrollbar.get(\"marginRight\", 0));\n                verticalScrollbar.set(\"end\", verticalScrollbar.get(\"start\", 0) + height / this._contentHeight);\n                const bg = verticalScrollbar.get(\"background\");\n                if (bg) bg.setAll({\n                    width: verticalScrollbar.width(),\n                    height: height\n                });\n                let visible = true;\n                if (this._contentHeight <= height) visible = false;\n                verticalScrollbar.setPrivate(\"visible\", visible);\n            }\n        }\n    }\n    _applyThemes(force = false) {\n        if (super._applyThemes(force)) {\n            this.eachChildren((child)=>{\n                child._applyThemes(force);\n            });\n            return true;\n        } else return false;\n    }\n    _applyState(name) {\n        super._applyState(name);\n        if (this.get(\"setStateOnChildren\")) this.eachChildren((child)=>{\n            child.states.apply(name);\n        });\n    }\n    _applyStateAnimated(name, duration) {\n        super._applyStateAnimated(name, duration);\n        if (this.get(\"setStateOnChildren\")) this.eachChildren((child)=>{\n            child.states.applyAnimate(name, duration);\n        });\n    }\n    /**\r\n     * Returns container's inner width (width without padding) in pixels.\r\n     *\r\n     * @return Inner width (px)\r\n     */ innerWidth() {\n        return this.width() - this.get(\"paddingRight\", 0) - this.get(\"paddingLeft\", 0);\n    }\n    /**\r\n     * Returns container's inner height (height without padding) in pixels.\r\n     *\r\n     * @return Inner height (px)\r\n     */ innerHeight() {\n        return this.height() - this.get(\"paddingTop\", 0) - this.get(\"paddingBottom\", 0);\n    }\n    _getBounds() {\n        if (!this.get(\"html\")) {\n            let width = this.get(\"width\");\n            let height = this.get(\"height\");\n            let pWidth = this.getPrivate(\"width\");\n            let pHeight = this.getPrivate(\"height\");\n            let bounds = {\n                left: 0,\n                top: 0,\n                right: this.width(),\n                bottom: this.height()\n            };\n            let layout = this.get(\"layout\");\n            let horizontal = false;\n            let vertical = false;\n            if (layout instanceof (0, $ce42d27226ec20a0$export$8be7400f61e793f0) || layout instanceof (0, $9961b4caf46ffbfc$export$7d2b12578154a735)) horizontal = true;\n            if (layout instanceof (0, $b05f413a7bdbea0f$export$e4d3124dc23dc9c9)) vertical = true;\n            if ((width != null || pWidth != null) && (height != null || pHeight != null) && !this.get(\"verticalScrollbar\")) ;\n            else {\n                let m = Number.MAX_VALUE;\n                let l = m;\n                let r = -m;\n                let t = m;\n                let b = -m;\n                const paddingLeft = this.get(\"paddingLeft\", 0);\n                const paddingTop = this.get(\"paddingTop\", 0);\n                const paddingRight = this.get(\"paddingRight\", 0);\n                const paddingBottom = this.get(\"paddingBottom\", 0);\n                this.children.each((child)=>{\n                    if (child.get(\"position\") != \"absolute\" && child.get(\"isMeasured\")) {\n                        let childBounds = child.adjustedLocalBounds();\n                        let childX = child.x();\n                        let childY = child.y();\n                        let cl = childX + childBounds.left;\n                        let cr = childX + childBounds.right;\n                        let ct = childY + childBounds.top;\n                        let cb = childY + childBounds.bottom;\n                        if (horizontal) {\n                            cl -= child.get(\"marginLeft\", 0);\n                            cr += child.get(\"marginRight\", 0);\n                        }\n                        if (vertical) {\n                            ct -= child.get(\"marginTop\", 0);\n                            cb += child.get(\"marginBottom\", 0);\n                        }\n                        if (cl < l) l = cl;\n                        if (cr > r) r = cr;\n                        if (ct < t) t = ct;\n                        if (cb > b) b = cb;\n                    }\n                });\n                if (l == m) l = 0;\n                if (r == -m) r = 0;\n                if (t == m) t = 0;\n                if (b == -m) b = 0;\n                bounds.left = l - paddingLeft;\n                bounds.top = t - paddingTop;\n                bounds.right = r + paddingRight;\n                bounds.bottom = b + paddingBottom;\n                const minWidth = this.get(\"minWidth\");\n                if ($f63bdea45a89cf24$export$7e4aa119212bc614(minWidth) && minWidth > 0) {\n                    if (bounds.right - bounds.left < minWidth) {\n                        if (bounds.right >= minWidth) bounds.left = bounds.right - minWidth;\n                        else bounds.right = bounds.left + minWidth;\n                    }\n                }\n                const minHeight = this.get(\"minHeight\");\n                if ($f63bdea45a89cf24$export$7e4aa119212bc614(minHeight) && minHeight > 0) {\n                    if (bounds.bottom - bounds.top < minHeight) {\n                        if (bounds.bottom >= minHeight) bounds.top = bounds.bottom - minHeight;\n                        else bounds.bottom = bounds.top + minHeight;\n                    }\n                }\n            }\n            this._contentWidth = bounds.right - bounds.left;\n            this._contentHeight = bounds.bottom - bounds.top;\n            if ($f63bdea45a89cf24$export$7e4aa119212bc614(width)) {\n                bounds.left = 0;\n                bounds.right = width;\n            }\n            if ($f63bdea45a89cf24$export$7e4aa119212bc614(pWidth)) {\n                bounds.left = 0;\n                bounds.right = pWidth;\n            }\n            if ($f63bdea45a89cf24$export$7e4aa119212bc614(height)) {\n                bounds.top = 0;\n                bounds.bottom = height;\n            }\n            if ($f63bdea45a89cf24$export$7e4aa119212bc614(pHeight)) {\n                bounds.top = 0;\n                bounds.bottom = pHeight;\n            }\n            this._localBounds = bounds;\n        } else {\n            let bounds = this._localBounds;\n            if (bounds) {\n                this._contentWidth = bounds.right - bounds.left;\n                this._contentHeight = bounds.bottom - bounds.top;\n            }\n        }\n    }\n    _updateBounds() {\n        const layout = this.get(\"layout\");\n        if (layout) layout.updateContainer(this);\n        super._updateBounds();\n        this.updateBackground();\n    }\n    /**\r\n     * @ignore\r\n     */ markDirty() {\n        super.markDirty();\n        this._root._addDirtyParent(this);\n    }\n    _prepareChildren() {\n        const innerWidth = this.innerWidth();\n        const innerHeight = this.innerHeight();\n        if (innerWidth != this._prevWidth || innerHeight != this._prevHeight) {\n            let layout = this.get(\"layout\");\n            let horizontal = false;\n            let vertical = false;\n            if (layout) {\n                if (layout instanceof (0, $ce42d27226ec20a0$export$8be7400f61e793f0) || layout instanceof (0, $9961b4caf46ffbfc$export$7d2b12578154a735)) horizontal = true;\n                if (layout instanceof (0, $b05f413a7bdbea0f$export$e4d3124dc23dc9c9)) vertical = true;\n            }\n            $2f30431acd054e2f$export$79b2f7037acddd43(this._percentageSizeChildren, (child)=>{\n                if (!horizontal) {\n                    let width = child.get(\"width\");\n                    if (width instanceof (0, $bd0d0c10fd30006b$export$cbc348af47898b5e)) child.setPrivate(\"width\", width.value * innerWidth);\n                }\n                if (!vertical) {\n                    let height = child.get(\"height\");\n                    if (height instanceof (0, $bd0d0c10fd30006b$export$cbc348af47898b5e)) child.setPrivate(\"height\", height.value * innerHeight);\n                }\n            });\n            $2f30431acd054e2f$export$79b2f7037acddd43(this._percentagePositionChildren, (child)=>{\n                child.markDirtyPosition();\n                child.markDirtyBounds();\n            });\n            this._prevWidth = innerWidth;\n            this._prevHeight = innerHeight;\n            this._sizeDirty = true;\n            this.updateBackground();\n        }\n        this._handleStates();\n    }\n    _updateHTMLContent() {\n        const html = this.get(\"html\");\n        if (html && html !== \"\") this._root._setHTMLContent(this, (0, $8d45a8a77dcd0f75$export$6a40ef019a0fa5f6)(this, this.get(\"html\", \"\")));\n        else this._root._removeHTMLContent(this);\n        this._root._positionHTMLElement(this);\n    }\n    /**\r\n     * If scrolling is enabled on the Container (by adding `verticalScrollbar`)\r\n     * the Container will scroll in such way so that target element becomes\r\n     * visible if its currently outside of view.\r\n     *\r\n     * @param  child  Target child\r\n     * @since 5.10.5\r\n     */ scrollToChild(child) {\n        const verticalScrollbar = this.get(\"verticalScrollbar\");\n        if (verticalScrollbar) {\n            let y = child.y();\n            let h = this.innerHeight();\n            let ch = child.height();\n            let contentH = this._contentHeight;\n            let max = 1 - (h - ch / 2) / contentH;\n            if (y + ch * .7 + this._childrenDisplay.y > h || y - ch * .3 + this._childrenDisplay.y < 0) {\n                let pos = Math.max(0, Math.min(max, (y - ch / 2) / contentH));\n                verticalScrollbar.animate({\n                    key: \"start\",\n                    to: pos,\n                    duration: verticalScrollbar.get(\"animationDuration\", 0),\n                    easing: verticalScrollbar.get(\"animationEasing\")\n                });\n            }\n        }\n    }\n    _updateChildren() {\n        if (this.isDirty(\"html\")) this._updateHTMLContent();\n        if (this.isDirty(\"verticalScrollbar\")) {\n            const verticalScrollbar = this.get(\"verticalScrollbar\");\n            if (verticalScrollbar) {\n                verticalScrollbar._setParent(this);\n                verticalScrollbar.startGrip.setPrivate(\"visible\", false);\n                verticalScrollbar.endGrip.setPrivate(\"visible\", false);\n                this.set(\"maskContent\", true);\n                this.set(\"paddingRight\", verticalScrollbar.width() + verticalScrollbar.get(\"marginRight\", 0) + verticalScrollbar.get(\"marginLeft\", 0));\n                let background = this.get(\"background\");\n                if (!background) background = this.set(\"background\", (0, $9e0cea1ea085e274$export$4617fb02663045ef).new(this._root, {\n                    themeTags: [\n                        \"background\"\n                    ],\n                    fillOpacity: 0,\n                    fill: this._root.interfaceColors.get(\"alternativeBackground\")\n                }));\n                this._vsbd0 = this.events.on(\"wheel\", (event)=>{\n                    const wheelEvent = event.originalEvent;\n                    // Ignore wheel event if it is happening on a non-chart element, e.g. if\n                    // some page element is over the chart.\n                    if ($05b1b40b69b15016$export$a3b96849d75e4c53(wheelEvent, this)) wheelEvent.preventDefault();\n                    else return;\n                    let shiftY = wheelEvent.deltaY / 5000;\n                    const start = verticalScrollbar.get(\"start\", 0);\n                    const end = verticalScrollbar.get(\"end\", 1);\n                    if (start + shiftY <= 0) shiftY = -start;\n                    if (end + shiftY >= 1) shiftY = 1 - end;\n                    if (start + shiftY >= 0 && end + shiftY <= 1) {\n                        verticalScrollbar.set(\"start\", start + shiftY);\n                        verticalScrollbar.set(\"end\", end + shiftY);\n                    }\n                });\n                this._disposers.push(this._vsbd0);\n                this._vsbd1 = verticalScrollbar.events.on(\"rangechanged\", ()=>{\n                    let h = this._contentHeight;\n                    const childrenDisplay = this._childrenDisplay;\n                    const contentMask = this._contentMask;\n                    childrenDisplay.y = -verticalScrollbar.get(\"start\", 0) * h;\n                    childrenDisplay.markDirtyLayer();\n                    if (contentMask) {\n                        contentMask._display.y = -childrenDisplay.y;\n                        childrenDisplay.mask = contentMask._display;\n                    }\n                });\n                this._disposers.push(this._vsbd1);\n                this._display.addChild(verticalScrollbar._display);\n            } else {\n                const previous = this._prevSettings.verticalScrollbar;\n                if (previous) {\n                    this._display.removeChild(previous._display);\n                    if (this._vsbd0) this._vsbd0.dispose();\n                    if (this._vsbd1) this._vsbd1.dispose();\n                    const childrenDisplay = this._childrenDisplay;\n                    childrenDisplay.y = 0;\n                    this.setPrivate(\"height\", undefined);\n                    this.set(\"maskContent\", false);\n                    this.set(\"paddingRight\", undefined);\n                }\n            }\n        }\n        if (this.isDirty(\"background\")) {\n            // TODO maybe this should dispose ?\n            const previous = this._prevSettings[\"background\"];\n            if (previous) this._display.removeChild(previous._display);\n            const background = this.get(\"background\");\n            if (background instanceof (0, $d3b9c83dc790fa66$export$3075603db8e6204c)) {\n                background.set(\"isMeasured\", false);\n                background._setParent(this);\n                this._display.addChildAt(background._display, 0);\n            }\n        }\n        if (this.isDirty(\"mask\")) {\n            const mask = this.get(\"mask\");\n            const previous = this._prevSettings[\"mask\"];\n            if (previous) {\n                this._display.removeChild(previous._display);\n                if (previous != mask) previous.dispose();\n            }\n            if (mask) {\n                const parent = mask.parent;\n                if (parent) parent.children.removeValue(mask);\n                mask._setParent(this);\n                this._display.addChildAt(mask._display, 0);\n                this._childrenDisplay.mask = mask._display;\n            }\n        }\n    }\n    _processTemplateField() {\n        super._processTemplateField();\n        this.children.each((child)=>{\n            child._processTemplateField();\n        });\n    }\n    /**\r\n     * @ignore\r\n     */ walkChildren(f) {\n        this.children.each((child)=>{\n            if (child instanceof $5de502da8a72d65e$export$42a852a2b6b56249) child.walkChildren(f);\n            f(child);\n        });\n    }\n    eachChildren(f) {\n        const background = this.get(\"background\");\n        if (background) f(background);\n        const verticalScrollbar = this.get(\"verticalScrollbar\");\n        if (verticalScrollbar) f(verticalScrollbar);\n        const mask = this.get(\"mask\");\n        if (mask) f(mask);\n        this.children.values.forEach((child)=>{\n            f(child);\n        });\n    }\n    allChildren() {\n        const output = [];\n        this.eachChildren((x)=>{\n            output.push(x);\n        });\n        return output;\n    }\n    _setDataItem(dataItem) {\n        const updated = dataItem !== this._dataItem;\n        super._setDataItem(dataItem);\n        const html = this.get(\"html\", \"\");\n        if (html && html !== \"\" && updated) this._root._setHTMLContent(this, (0, $8d45a8a77dcd0f75$export$6a40ef019a0fa5f6)(this, html));\n    }\n}\nObject.defineProperty($5de502da8a72d65e$export$42a852a2b6b56249, \"className\", {\n    enumerable: true,\n    configurable: true,\n    writable: true,\n    value: \"Container\"\n});\nObject.defineProperty($5de502da8a72d65e$export$42a852a2b6b56249, \"classNames\", {\n    enumerable: true,\n    configurable: true,\n    writable: true,\n    value: (0, $d3b9c83dc790fa66$export$3075603db8e6204c).classNames.concat([\n        $5de502da8a72d65e$export$42a852a2b6b56249.className\n    ])\n});\n\n\n\n\n\n\n\n\nclass $991c10b390813ab6$export$5f1af8db9871e1d6 extends (0, $d3b9c83dc790fa66$export$3075603db8e6204c) {\n    constructor(){\n        super(...arguments);\n        Object.defineProperty(this, \"textStyle\", {\n            enumerable: true,\n            configurable: true,\n            writable: true,\n            value: this._root._renderer.makeTextStyle()\n        });\n        Object.defineProperty(this, \"_display\", {\n            enumerable: true,\n            configurable: true,\n            writable: true,\n            value: this._root._renderer.makeText(\"\", this.textStyle)\n        });\n        Object.defineProperty(this, \"_textStyles\", {\n            enumerable: true,\n            configurable: true,\n            writable: true,\n            value: [\n                \"textAlign\",\n                \"fontFamily\",\n                \"fontSize\",\n                \"fontStyle\",\n                \"fontWeight\",\n                \"fontStyle\",\n                \"fontVariant\",\n                \"textDecoration\",\n                \"shadowColor\",\n                \"shadowBlur\",\n                \"shadowOffsetX\",\n                \"shadowOffsetY\",\n                \"shadowOpacity\",\n                // \"leading\",\n                // \"letterSpacing\",\n                \"lineHeight\",\n                \"baselineRatio\",\n                //\"padding\",\n                // \"stroke\",\n                // \"strokeThickness\",\n                // \"trim\",\n                // \"wordWrap\",\n                \"direction\",\n                \"textBaseline\",\n                \"oversizedBehavior\",\n                \"breakWords\",\n                \"ellipsis\",\n                \"minScale\",\n                \"maxChars\"\n            ]\n        });\n        Object.defineProperty(this, \"_originalScale\", {\n            enumerable: true,\n            configurable: true,\n            writable: true,\n            value: void 0\n        });\n    }\n    _updateBounds() {\n        if (!this.get(\"text\")) {\n            let newBounds = {\n                left: 0,\n                right: 0,\n                top: 0,\n                bottom: 0\n            };\n            this._adjustedLocalBounds = newBounds;\n        } else {\n            super._updateBounds();\n            let fillGradient = this.get(\"fillGradient\");\n            if (fillGradient) this._display.style.fill = fillGradient.getFill(this);\n        }\n    }\n    _changed() {\n        super._changed();\n        this._display.clear();\n        let textStyle = this.textStyle;\n        if (this.isDirty(\"opacity\")) {\n            let opacity = this.get(\"opacity\", 1);\n            this._display.alpha = opacity;\n        }\n        if (this.isDirty(\"text\") || this.isDirty(\"populateText\")) {\n            this._display.text = this._getText();\n            this.markDirtyBounds();\n            if (this.get(\"role\") == \"tooltip\") this._root.updateTooltip(this);\n        }\n        if (this.isPrivateDirty(\"tooltipElement\")) {\n            const tooltipElement = this.getPrivate(\"tooltipElement\");\n            if (tooltipElement) this._disposers.push(new (0, $a363f66303166aa1$export$6039fc6176d96e35)(()=>{\n                this._root._removeTooltipElement(this);\n            }));\n        }\n        if (this.isDirty(\"width\")) {\n            textStyle.wordWrapWidth = this.width();\n            this.markDirtyBounds();\n        }\n        if (this.isDirty(\"oversizedBehavior\")) {\n            textStyle.oversizedBehavior = this.get(\"oversizedBehavior\", \"none\");\n            this.markDirtyBounds();\n        }\n        if (this.isDirty(\"breakWords\")) {\n            textStyle.breakWords = this.get(\"breakWords\", false);\n            this.markDirtyBounds();\n        }\n        if (this.isDirty(\"ellipsis\")) {\n            textStyle.ellipsis = this.get(\"ellipsis\");\n            this.markDirtyBounds();\n        }\n        if (this.isDirty(\"ignoreFormatting\")) {\n            textStyle.ignoreFormatting = this.get(\"ignoreFormatting\", false);\n            this.markDirtyBounds();\n        }\n        if (this.isDirty(\"minScale\")) {\n            textStyle.minScale = this.get(\"minScale\", 0);\n            this.markDirtyBounds();\n        }\n        if (this.isDirty(\"fill\") || this.isDirty(\"fillGradient\")) {\n            const fill = this.get(\"fill\");\n            const fillGradient = this.get(\"fillGradient\");\n            const fillOpacity = this.get(\"fillOpacity\");\n            if (fillGradient) {\n                if (fill) {\n                    const stops = fillGradient.get(\"stops\", []);\n                    if (stops.length) $2f30431acd054e2f$export$79b2f7037acddd43(stops, (stop)=>{\n                        if ((!stop.color || stop.colorInherited) && fill) {\n                            stop.color = fill;\n                            stop.colorInherited = true;\n                        }\n                        if (stop.opacity == null || stop.opacityInherited) {\n                            stop.opacity = fillOpacity;\n                            stop.opacityInherited = true;\n                        }\n                    });\n                }\n                textStyle.fill = fillGradient.getFill(this);\n            } else if (fill) textStyle.fill = fill;\n        }\n        if (this.isDirty(\"fillOpacity\")) {\n            let fillOpacity = this.get(\"fillOpacity\", 1);\n            if (fillOpacity) textStyle.fillOpacity = fillOpacity;\n        }\n        if (this.isDirty(\"maxWidth\") || this.isPrivateDirty(\"maxWidth\")) {\n            textStyle.maxWidth = this.get(\"maxWidth\", this.getPrivate(\"maxWidth\"));\n            this.markDirtyBounds();\n        }\n        if (this.isDirty(\"maxHeight\") || this.isPrivateDirty(\"maxHeight\")) {\n            textStyle.maxHeight = this.get(\"maxHeight\", this.getPrivate(\"maxHeight\"));\n            this.markDirtyBounds();\n        }\n        $2f30431acd054e2f$export$79b2f7037acddd43(this._textStyles, (styleName)=>{\n            if (this._dirty[styleName]) {\n                textStyle[styleName] = this.get(styleName);\n                this.markDirtyBounds();\n            }\n        });\n        textStyle[\"fontSize\"] = this.get(\"fontSize\");\n        textStyle[\"fontFamily\"] = this.get(\"fontFamily\");\n        this._display.style = textStyle;\n        if (this.isDirty(\"role\") && this.get(\"role\") == \"tooltip\") this._root.updateTooltip(this);\n    }\n    _getText() {\n        let text = this.get(\"text\", \"\");\n        if (this.get(\"maxChars\")) text = $05b1b40b69b15016$export$c1942c34655b7385(text, this.get(\"maxChars\", 100000000), this.get(\"breakWords\"), this.get(\"ellipsis\"));\n        return this.get(\"populateText\") ? (0, $8d45a8a77dcd0f75$export$6a40ef019a0fa5f6)(this, text) : text;\n    }\n    _getAccessibleText() {\n        const ariaLabel = this.get(\"ariaLabel\");\n        if (ariaLabel !== undefined) return this.get(\"populateText\") ? (0, $8d45a8a77dcd0f75$export$6a40ef019a0fa5f6)(this, ariaLabel) : ariaLabel;\n        return this._getText();\n    }\n    /**\r\n     * Forces the text to be re-evaluated and re-populated.\r\n     */ markDirtyText() {\n        this._display.text = this._getText();\n        if (this.get(\"role\") == \"tooltip\") this._root.updateTooltip(this);\n        this.markDirtyBounds();\n        this.markDirty();\n    }\n    _setDataItem(dataItem) {\n        super._setDataItem(dataItem);\n        if (this.get(\"populateText\")) this.markDirtyText();\n    }\n    getNumberFormatter() {\n        if (this.parent) return this.parent.getNumberFormatter();\n        else return super.getNumberFormatter();\n    }\n    getDateFormatter() {\n        if (this.parent) return this.parent.getDateFormatter();\n        else return super.getDateFormatter();\n    }\n    getDurationFormatter() {\n        if (this.parent) return this.parent.getDurationFormatter();\n        else return super.getDurationFormatter();\n    }\n}\nObject.defineProperty($991c10b390813ab6$export$5f1af8db9871e1d6, \"className\", {\n    enumerable: true,\n    configurable: true,\n    writable: true,\n    value: \"Text\"\n});\nObject.defineProperty($991c10b390813ab6$export$5f1af8db9871e1d6, \"classNames\", {\n    enumerable: true,\n    configurable: true,\n    writable: true,\n    value: (0, $d3b9c83dc790fa66$export$3075603db8e6204c).classNames.concat([\n        $991c10b390813ab6$export$5f1af8db9871e1d6.className\n    ])\n});\n\n\n\n\n\n\n/** @ignore */ /** */ \n\n/**\r\n * @ignore\r\n */ class $fcc21c9236571fac$var$Native {\n    constructor(){\n        Object.defineProperty(this, \"_observer\", {\n            enumerable: true,\n            configurable: true,\n            writable: true,\n            value: void 0\n        });\n        Object.defineProperty(this, \"_targets\", {\n            enumerable: true,\n            configurable: true,\n            writable: true,\n            value: []\n        });\n        this._observer = new ResizeObserver((entries)=>{\n            $2f30431acd054e2f$export$79b2f7037acddd43(entries, (entry)=>{\n                $2f30431acd054e2f$export$79b2f7037acddd43(this._targets, (x)=>{\n                    if (x.target === entry.target) x.callback();\n                });\n            });\n        });\n    }\n    addTarget(target, callback) {\n        this._observer.observe(target, {\n            box: \"border-box\"\n        });\n        this._targets.push({\n            target: target,\n            callback: callback\n        });\n    }\n    removeTarget(target) {\n        this._observer.unobserve(target);\n        $2f30431acd054e2f$export$249f83d169a7c462(this._targets, (x)=>{\n            return x.target !== target;\n        });\n    }\n}\n/**\r\n * @ignore\r\n */ class $fcc21c9236571fac$var$Raf {\n    constructor(){\n        Object.defineProperty(this, \"_timer\", {\n            enumerable: true,\n            configurable: true,\n            writable: true,\n            value: null\n        });\n        Object.defineProperty(this, \"_targets\", {\n            enumerable: true,\n            configurable: true,\n            writable: true,\n            value: []\n        });\n    }\n    addTarget(target, callback) {\n        if (this._timer === null) {\n            let lastTime = null;\n            const loop = ()=>{\n                const currentTime = Date.now();\n                if (lastTime === null || currentTime > lastTime + $fcc21c9236571fac$var$Raf.delay) {\n                    lastTime = currentTime;\n                    $2f30431acd054e2f$export$79b2f7037acddd43(this._targets, (x)=>{\n                        let newSize = x.target.getBoundingClientRect();\n                        if (newSize.width !== x.size.width || newSize.height !== x.size.height) {\n                            x.size = newSize;\n                            x.callback();\n                        }\n                    });\n                }\n                if (this._targets.length === 0) this._timer = null;\n                else this._timer = requestAnimationFrame(loop);\n            };\n            this._timer = requestAnimationFrame(loop);\n        }\n        // We start off with fake bounds so that sensor always kicks in\n        let size = {\n            width: 0,\n            height: 0,\n            left: 0,\n            right: 0,\n            top: 0,\n            bottom: 0,\n            x: 0,\n            y: 0\n        };\n        this._targets.push({\n            target: target,\n            callback: callback,\n            size: size\n        });\n    }\n    removeTarget(target) {\n        $2f30431acd054e2f$export$249f83d169a7c462(this._targets, (x)=>{\n            return x.target !== target;\n        });\n        if (this._targets.length === 0) {\n            if (this._timer !== null) {\n                cancelAnimationFrame(this._timer);\n                this._timer = null;\n            }\n        }\n    }\n}\nObject.defineProperty($fcc21c9236571fac$var$Raf, \"delay\", {\n    enumerable: true,\n    configurable: true,\n    writable: true,\n    value: 200\n});\n/**\r\n * @ignore\r\n */ let $fcc21c9236571fac$var$observer = null;\n/**\r\n * @ignore\r\n */ function $fcc21c9236571fac$var$makeSensor() {\n    if ($fcc21c9236571fac$var$observer === null) {\n        if (typeof ResizeObserver !== \"undefined\") $fcc21c9236571fac$var$observer = new $fcc21c9236571fac$var$Native();\n        else $fcc21c9236571fac$var$observer = new $fcc21c9236571fac$var$Raf();\n    }\n    return $fcc21c9236571fac$var$observer;\n}\nclass $fcc21c9236571fac$export$99e7f5e92b1f0cf9 {\n    constructor(element, callback){\n        Object.defineProperty(this, \"_sensor\", {\n            enumerable: true,\n            configurable: true,\n            writable: true,\n            value: void 0\n        });\n        Object.defineProperty(this, \"_element\", {\n            enumerable: true,\n            configurable: true,\n            writable: true,\n            value: void 0\n        });\n        Object.defineProperty(this, \"_listener\", {\n            enumerable: true,\n            configurable: true,\n            writable: true,\n            value: void 0\n        });\n        Object.defineProperty(this, \"_disposed\", {\n            enumerable: true,\n            configurable: true,\n            writable: true,\n            value: false\n        });\n        this._sensor = $fcc21c9236571fac$var$makeSensor();\n        this._element = element;\n        // This is needed because we need to know when the window is zoomed\n        this._listener = $05b1b40b69b15016$export$6981aa66c6e2c48d(callback);\n        this._sensor.addTarget(element, callback);\n    }\n    isDisposed() {\n        return this._disposed;\n    }\n    dispose() {\n        if (!this._disposed) {\n            this._disposed = true;\n            this._sensor.removeTarget(this._element);\n            this._listener.dispose();\n        }\n    }\n    get sensor() {\n        return this._sensor;\n    }\n}\n\n\n\nclass $78e10ff73ddf6061$export$8dce48c3552f8697 extends (0, $baeade534ece7f4c$export$bc644a473284d944) {\n}\nObject.defineProperty($78e10ff73ddf6061$export$8dce48c3552f8697, \"className\", {\n    enumerable: true,\n    configurable: true,\n    writable: true,\n    value: \"InterfaceColors\"\n});\nObject.defineProperty($78e10ff73ddf6061$export$8dce48c3552f8697, \"classNames\", {\n    enumerable: true,\n    configurable: true,\n    writable: true,\n    value: (0, $baeade534ece7f4c$export$bc644a473284d944).classNames.concat([\n        $78e10ff73ddf6061$export$8dce48c3552f8697.className\n    ])\n});\n\n\n\n\n\n\n\n\n\n\nclass $f15f09c5037802f9$export$b04be29aa201d4f5 extends (0, $5de502da8a72d65e$export$42a852a2b6b56249) {\n    constructor(){\n        super(...arguments);\n        Object.defineProperty(this, \"_text\", {\n            enumerable: true,\n            configurable: true,\n            writable: true,\n            value: void 0\n        });\n        Object.defineProperty(this, \"_textKeys\", {\n            enumerable: true,\n            configurable: true,\n            writable: true,\n            value: [\n                \"text\",\n                \"fill\",\n                \"fillGradient\",\n                \"fillOpacity\",\n                \"textAlign\",\n                \"fontFamily\",\n                \"fontSize\",\n                \"fontStyle\",\n                \"fontWeight\",\n                \"fontStyle\",\n                \"fontVariant\",\n                \"textDecoration\",\n                \"shadowColor\",\n                \"shadowBlur\",\n                \"shadowOffsetX\",\n                \"shadowOffsetY\",\n                \"shadowOpacity\",\n                // \"leading\",\n                // \"letterSpacing\",\n                \"lineHeight\",\n                \"baselineRatio\",\n                //\"padding\",\n                // \"stroke\",\n                // \"strokeThickness\",\n                // \"trim\",\n                // \"wordWrap\",\n                \"direction\",\n                \"textBaseline\",\n                \"oversizedBehavior\",\n                \"breakWords\",\n                \"ellipsis\",\n                \"minScale\",\n                \"populateText\",\n                \"role\",\n                \"ignoreFormatting\",\n                \"maxChars\",\n                \"ariaLabel\"\n            ]\n        });\n    }\n    /**\r\n     * @ignore Text is not to be used directly\r\n     */ get text() {\n        return this._text;\n    }\n    _afterNew() {\n        super._afterNew();\n        this._makeText();\n        $2f30431acd054e2f$export$79b2f7037acddd43(this._textKeys, (property)=>{\n            const propValue = this.get(property);\n            if (propValue != undefined) this._text.set(property, propValue);\n        });\n        if (this.get(\"html\", \"\") !== \"\") this._text.set(\"text\", \"\");\n        this.onPrivate(\"maxWidth\", ()=>{\n            this._setMaxDimentions();\n        });\n        this.onPrivate(\"maxHeight\", ()=>{\n            this._setMaxDimentions();\n        });\n    }\n    _makeText() {\n        this._text = this.children.push((0, $991c10b390813ab6$export$5f1af8db9871e1d6).new(this._root, {}));\n    }\n    _updateChildren() {\n        super._updateChildren();\n        const text = this._text;\n        $2f30431acd054e2f$export$79b2f7037acddd43(this._textKeys, (property)=>{\n            this._text.set(property, this.get(property));\n        });\n        if (this.isDirty(\"maxWidth\") || this.isDirty(\"maxHeight\") || this.isDirty(\"rotation\")) this._setMaxDimentions();\n        // Do not show regular text if HTML is used\n        if (this.get(\"html\", \"\") !== \"\") text.set(\"text\", \"\");\n        else {\n            text.set(\"text\", this.get(\"text\"));\n            this._maybeUpdateHTMLColor();\n        }\n        if (this.isDirty(\"fill\") || this.isDirty(\"fillGradient\")) this._maybeUpdateHTMLColor();\n        if (this.isDirty(\"textAlign\") || this.isDirty(\"width\")) {\n            const textAlign = this.get(\"textAlign\");\n            let x;\n            if (this.get(\"width\") != null) {\n                if (textAlign == \"right\") x = (0, $bd0d0c10fd30006b$export$46342ea78d85883c);\n                else if (textAlign == \"center\") x = (0, $bd0d0c10fd30006b$export$888d047b0ce6de72);\n                else x = 0;\n            } else {\n                if (textAlign == \"left\" || textAlign == \"start\") x = this.get(\"paddingLeft\", 0);\n                else if (textAlign == \"right\" || textAlign == \"end\") x = -this.get(\"paddingRight\", 0);\n            }\n            text.set(\"x\", x);\n        }\n        const background = this.get(\"background\");\n        if (background) background.setPrivate(\"visible\", text._display.textVisible);\n    }\n    _maybeUpdateHTMLColor() {\n        const htmlElement = this.getPrivate(\"htmlElement\");\n        if (htmlElement && this.get(\"fill\")) htmlElement.style.color = this.get(\"fill\").toCSSHex();\n    }\n    _setMaxDimentions() {\n        const rotation = this.get(\"rotation\");\n        const vertical = rotation == 90 || rotation == 270 || rotation == -90;\n        const text = this._text;\n        const maxWidth = this.get(\"maxWidth\", this.getPrivate(\"maxWidth\", Infinity));\n        if ($f63bdea45a89cf24$export$7e4aa119212bc614(maxWidth)) text.set(vertical ? \"maxHeight\" : \"maxWidth\", maxWidth - this.get(\"paddingTop\", 0) - this.get(\"paddingBottom\", 0));\n        else text.set(vertical ? \"maxHeight\" : \"maxWidth\", undefined);\n        const maxHeight = this.get(\"maxHeight\", this.getPrivate(\"maxHeight\", Infinity));\n        if ($f63bdea45a89cf24$export$7e4aa119212bc614(maxHeight)) text.set(vertical ? \"maxWidth\" : \"maxHeight\", maxHeight - this.get(\"paddingLeft\", 0) - this.get(\"paddingRight\", 0));\n        else text.set(vertical ? \"maxWidth\" : \"maxHeight\", undefined);\n        this.root.events.once(\"frameended\", ()=>{\n            text.markDirtyBounds();\n        });\n    }\n    _setDataItem(dataItem) {\n        super._setDataItem(dataItem);\n        this._markDirtyKey(\"text\");\n        const text = this._text;\n        if (text.get(\"populateText\")) text.markDirtyText();\n        const html = this.get(\"html\");\n        if (html && html !== \"\") this._updateHTMLContent();\n    }\n    /**\r\n     * Returns text with populated placeholders and formatting if `populateText` is\r\n     * set to `true`.\r\n     *\r\n     * @return Populated text\r\n     */ getText() {\n        return this._text._getText();\n    }\n    /**\r\n     * Returns \"aria-label\" text with populated placeholders and formatting\r\n     * if `populateText` is set to `true`.\r\n     *\r\n     * @return Populated text\r\n     */ getAccessibleText() {\n        return this._text._getAccessibleText();\n    }\n}\nObject.defineProperty($f15f09c5037802f9$export$b04be29aa201d4f5, \"className\", {\n    enumerable: true,\n    configurable: true,\n    writable: true,\n    value: \"Label\"\n});\nObject.defineProperty($f15f09c5037802f9$export$b04be29aa201d4f5, \"classNames\", {\n    enumerable: true,\n    configurable: true,\n    writable: true,\n    value: (0, $5de502da8a72d65e$export$42a852a2b6b56249).classNames.concat([\n        $f15f09c5037802f9$export$b04be29aa201d4f5.className\n    ])\n});\n\n\n\n\nclass $b7e6ca628a07e093$export$458c0690b0cc8182 extends (0, $2ffdafbe1fe6a946$export$29d3e417456abdad) {\n    _beforeChanged() {\n        super._beforeChanged();\n        if (this.isDirty(\"pointerBaseWidth\") || this.isDirty(\"cornerRadius\") || this.isDirty(\"pointerLength\") || this.isDirty(\"pointerX\") || this.isDirty(\"pointerY\") || this.isDirty(\"width\") || this.isDirty(\"height\")) this._clear = true;\n    }\n    _changed() {\n        super._changed();\n        if (this._clear) {\n            this.markDirtyBounds();\n            let w = this.width();\n            let h = this.height();\n            if (w > 0 && h > 0) {\n                let cr = this.get(\"cornerRadius\", 8);\n                cr = $f43e9e04b3f0548b$export$386b748ab02f16a0(cr, 0, Math.min(w / 2, h / 2));\n                let x = this.get(\"pointerX\", 0);\n                let y = this.get(\"pointerY\", 0);\n                let bwh = this.get(\"pointerBaseWidth\", 15) / 2;\n                // corner coordinates\n                // top left\n                let xtl = 0;\n                let ytl = 0;\n                // top right\n                let xtr = w;\n                let ytr = 0;\n                // bottom right\n                let xbr = w;\n                let ybr = h;\n                // bottom left\n                let xbl = 0;\n                let ybl = h;\n                // find stem base side: http://$math.stackexchange.com/questions/274712/calculate-on-which-side-of-straign-line-is-dot-located\n                // d=(x−x1)(y2−y1)−(y−y1)(x2−x1)\n                let d1 = (x - xtl) * (ybr - ytl) - (y - ytl) * (xbr - xtl);\n                let d2 = (x - xbl) * (ytr - ybl) - (y - ybl) * (xtr - xbl);\n                const display = this._display;\n                // top\n                display.moveTo(cr, 0);\n                if (d1 > 0 && d2 > 0) {\n                    let stemX = Math.round($f43e9e04b3f0548b$export$386b748ab02f16a0(x, cr + bwh, w - bwh - cr));\n                    y = $f43e9e04b3f0548b$export$386b748ab02f16a0(y, -Infinity, 0);\n                    display.lineTo(stemX - bwh, 0);\n                    display.lineTo(x, y);\n                    display.lineTo(stemX + bwh, 0);\n                }\n                display.lineTo(w - cr, 0);\n                display.arcTo(w, 0, w, cr, cr);\n                // right\n                if (d1 > 0 && d2 < 0) {\n                    let stemY = Math.round($f43e9e04b3f0548b$export$386b748ab02f16a0(y, cr + bwh, h - bwh - cr));\n                    x = $f43e9e04b3f0548b$export$386b748ab02f16a0(x, w, Infinity);\n                    display.lineTo(w, cr);\n                    display.lineTo(w, Math.max(stemY - bwh, cr));\n                    display.lineTo(x, y);\n                    display.lineTo(w, stemY + bwh);\n                }\n                display.lineTo(w, h - cr);\n                display.arcTo(w, h, w - cr, h, cr);\n                // bottom\n                if (d1 < 0 && d2 < 0) {\n                    let stemX = Math.round($f43e9e04b3f0548b$export$386b748ab02f16a0(x, cr + bwh, w - bwh - cr));\n                    y = $f43e9e04b3f0548b$export$386b748ab02f16a0(y, h, Infinity);\n                    display.lineTo(w - cr, h);\n                    display.lineTo(stemX + bwh, h);\n                    display.lineTo(x, y);\n                    display.lineTo(stemX - bwh, h);\n                }\n                display.lineTo(cr, h);\n                display.arcTo(0, h, 0, h - cr, cr);\n                // left\n                if (d1 < 0 && d2 > 0) {\n                    let stemY = Math.round($f43e9e04b3f0548b$export$386b748ab02f16a0(y, cr + bwh, h - cr - bwh));\n                    x = $f43e9e04b3f0548b$export$386b748ab02f16a0(x, -Infinity, 0);\n                    display.lineTo(0, h - cr);\n                    display.lineTo(0, stemY + bwh);\n                    display.lineTo(x, y);\n                    display.lineTo(0, Math.max(stemY - bwh, cr));\n                }\n                display.lineTo(0, cr);\n                display.arcTo(0, 0, cr, 0, cr);\n                display.closePath();\n            }\n        }\n    }\n}\nObject.defineProperty($b7e6ca628a07e093$export$458c0690b0cc8182, \"className\", {\n    enumerable: true,\n    configurable: true,\n    writable: true,\n    value: \"PointedRectangle\"\n});\nObject.defineProperty($b7e6ca628a07e093$export$458c0690b0cc8182, \"classNames\", {\n    enumerable: true,\n    configurable: true,\n    writable: true,\n    value: (0, $2ffdafbe1fe6a946$export$29d3e417456abdad).classNames.concat([\n        $b7e6ca628a07e093$export$458c0690b0cc8182.className\n    ])\n});\n\n\n\n\n\n\n\n\nclass $670fc48e4ddbc086$export$28c660c63b792dea extends (0, $5de502da8a72d65e$export$42a852a2b6b56249) {\n    constructor(root, settings, isReal, templates = []){\n        super(root, settings, isReal, templates);\n        Object.defineProperty(this, \"_fx\", {\n            enumerable: true,\n            configurable: true,\n            writable: true,\n            value: 0\n        });\n        Object.defineProperty(this, \"_fy\", {\n            enumerable: true,\n            configurable: true,\n            writable: true,\n            value: 0\n        });\n        Object.defineProperty(this, \"_label\", {\n            enumerable: true,\n            configurable: true,\n            writable: true,\n            value: void 0\n        });\n        Object.defineProperty(this, \"_fillDp\", {\n            enumerable: true,\n            configurable: true,\n            writable: true,\n            value: void 0\n        });\n        Object.defineProperty(this, \"_strokeDp\", {\n            enumerable: true,\n            configurable: true,\n            writable: true,\n            value: void 0\n        });\n        Object.defineProperty(this, \"_labelDp\", {\n            enumerable: true,\n            configurable: true,\n            writable: true,\n            value: void 0\n        });\n        Object.defineProperty(this, \"_w\", {\n            enumerable: true,\n            configurable: true,\n            writable: true,\n            value: 0\n        });\n        Object.defineProperty(this, \"_h\", {\n            enumerable: true,\n            configurable: true,\n            writable: true,\n            value: 0\n        });\n        Object.defineProperty(this, \"_keepHoverDp\", {\n            enumerable: true,\n            configurable: true,\n            writable: true,\n            value: void 0\n        });\n        Object.defineProperty(this, \"_htmlContentHovered\", {\n            enumerable: true,\n            configurable: true,\n            writable: true,\n            value: false\n        });\n    }\n    _afterNew() {\n        this._settings.themeTags = $05b1b40b69b15016$export$88ad500ef99d1561(this._settings.themeTags, [\n            \"tooltip\"\n        ]);\n        super._afterNew();\n        const background = this._setDefaultFn(\"background\", ()=>{\n            return (0, $b7e6ca628a07e093$export$458c0690b0cc8182).new(this._root, {});\n        });\n        background.set(\"themeTags\", [\n            \"tooltip\",\n            \"background\"\n        ]);\n        this._label = this.children.push((0, $f15f09c5037802f9$export$b04be29aa201d4f5).new(this._root, {}));\n        this._disposers.push(this._label.events.on(\"boundschanged\", ()=>{\n            this._updateBackground();\n        }));\n        this._disposers.push(this.on(\"bounds\", ()=>{\n            this._updateBackground();\n        }));\n        this._updateTextColor();\n        this._root.tooltipContainer.children.push(this);\n        this.hide(0);\n        this._disposers.push(this.label.onPrivate(\"htmlElement\", (htmlElement)=>{\n            if (htmlElement) {\n                this._disposers.push($05b1b40b69b15016$export$3f65cefe8380dbea(htmlElement, \"pointerover\", (_ev)=>{\n                    this._htmlContentHovered = true;\n                }));\n                this._disposers.push($05b1b40b69b15016$export$3f65cefe8380dbea(htmlElement, \"pointerout\", (_ev)=>{\n                    this._htmlContentHovered = false;\n                }));\n            }\n        }));\n        this.on(\"visible\", (_ev)=>{\n            this._handleReaderAnnouncement();\n        });\n        this.label.events.on(\"dataitemchanged\", (_ev)=>{\n            this._handleReaderAnnouncement();\n        });\n        this._root._tooltips.push(this);\n    }\n    _handleReaderAnnouncement() {\n        if (this.get(\"readerAnnounce\") && this.isVisibleDeep()) this._root.readerAlert(this.label.getAccessibleText());\n    }\n    /**\r\n     * A [[Label]] element for the tooltip.\r\n     *\r\n     * @readonly\r\n     * @return Label\r\n     */ get label() {\n        return this._label;\n    }\n    /**\r\n     * Permanently disposes the tooltip.\r\n     */ _dispose() {\n        super._dispose();\n        $2f30431acd054e2f$export$cd7f480d6b8286c3(this._root._tooltips, this);\n    }\n    _updateChildren() {\n        super._updateChildren();\n        if (this.isDirty(\"pointerOrientation\") || this.isPrivateDirty(\"minWidth\") || this.isPrivateDirty(\"minHeight\")) this.get(\"background\")._markDirtyKey(\"width\");\n        const labelText = this.get(\"labelText\");\n        if (labelText != null) this.label.set(\"text\", this.get(\"labelText\"));\n        const labelHTML = this.get(\"labelHTML\");\n        if (labelHTML != null) this.label.set(\"html\", this.get(\"labelHTML\"));\n        const labelAriaLabel = this.get(\"labelAriaLabel\");\n        if (labelAriaLabel != null) this.label.set(\"ariaLabel\", this.get(\"labelAriaLabel\"));\n    }\n    _changed() {\n        super._changed();\n        if (this.isDirty(\"pointTo\") || this.isDirty(\"pointerOrientation\")) // can't compare to previous, as sometimes pointTo is set twice (when pointer moves, so the position won't be udpated)\n        this._updateBackground();\n        if (this.isDirty(\"tooltipTarget\")) this.updateBackgroundColor();\n        if (this.isDirty(\"keepTargetHover\")) {\n            const keephover = this.get(\"keepTargetHover\");\n            if (keephover) {\n                const bg = this.get(\"background\");\n                this._keepHoverDp = new (0, $a363f66303166aa1$export$9720df365053d143)([\n                    bg.events.on(\"pointerover\", (_ev)=>{\n                        let target = this.get(\"tooltipTarget\");\n                        if (target) {\n                            if (target.parent && target.parent.getPrivate(\"tooltipTarget\") == target) target = target.parent;\n                            target.hover();\n                        }\n                    }),\n                    bg.events.on(\"pointerout\", (_ev)=>{\n                        let target = this.get(\"tooltipTarget\");\n                        if (target) {\n                            if (target.parent && target.parent.getPrivate(\"tooltipTarget\") == target) target = target.parent;\n                            if (!this._htmlContentHovered) target.unhover();\n                        }\n                    })\n                ]);\n                this.label.onPrivate(\"htmlElement\", (htmlElement)=>{\n                    if (this._keepHoverDp && htmlElement) this._keepHoverDp.disposers.push($05b1b40b69b15016$export$3f65cefe8380dbea(htmlElement, \"pointerleave\", (ev)=>{\n                        const outEvent = this.root._renderer.getEvent(ev);\n                        bg.events.dispatch(\"pointerout\", {\n                            type: \"pointerout\",\n                            originalEvent: outEvent.event,\n                            point: outEvent.point,\n                            simulated: false,\n                            target: bg\n                        });\n                    }));\n                });\n            } else if (this._keepHoverDp) {\n                this._keepHoverDp.dispose();\n                this._keepHoverDp = undefined;\n            }\n        }\n    }\n    _onShow() {\n        super._onShow();\n        this.updateBackgroundColor();\n    }\n    updateBackgroundColor() {\n        let tooltipTarget = this.get(\"tooltipTarget\");\n        const background = this.get(\"background\");\n        let fill;\n        let stroke;\n        if (tooltipTarget && background) {\n            fill = tooltipTarget.get(\"fill\");\n            stroke = tooltipTarget.get(\"stroke\");\n            if (fill == null) fill = stroke;\n            if (this.get(\"getFillFromSprite\")) {\n                if (this._fillDp) this._fillDp.dispose();\n                if (fill != null) background.set(\"fill\", fill);\n                this._fillDp = tooltipTarget.on(\"fill\", (fill)=>{\n                    if (fill != null) {\n                        background.set(\"fill\", fill);\n                        this._updateTextColor(fill);\n                    }\n                });\n                this._disposers.push(this._fillDp);\n            }\n            if (this.get(\"getStrokeFromSprite\")) {\n                if (this._strokeDp) this._strokeDp.dispose();\n                if (fill != null) background.set(\"stroke\", fill);\n                this._strokeDp = tooltipTarget.on(\"fill\", (fill)=>{\n                    if (fill != null) background.set(\"stroke\", fill);\n                });\n                this._disposers.push(this._strokeDp);\n            }\n            if (this.get(\"getLabelFillFromSprite\")) {\n                if (this._labelDp) this._labelDp.dispose();\n                if (fill != null) this.label.set(\"fill\", fill);\n                this._labelDp = tooltipTarget.on(\"fill\", (fill)=>{\n                    if (fill != null) this.label.set(\"fill\", fill);\n                });\n                this._disposers.push(this._labelDp);\n            }\n        }\n        this._updateTextColor(fill);\n    }\n    _updateTextColor(fill) {\n        if (this.get(\"autoTextColor\")) {\n            if (fill == null) fill = this.get(\"background\").get(\"fill\");\n            if (fill == null) fill = this._root.interfaceColors.get(\"background\");\n            if (fill instanceof (0, $389de129b6cd18b1$export$892596cec99bc70e)) this.label.set(\"fill\", (0, $389de129b6cd18b1$export$892596cec99bc70e).alternative(fill, this._root.interfaceColors.get(\"alternativeText\"), this._root.interfaceColors.get(\"text\")));\n        }\n    }\n    _setDataItem(dataItem) {\n        super._setDataItem(dataItem);\n        this.label._setDataItem(dataItem);\n    }\n    _updateBackground() {\n        super.updateBackground();\n        const parent = this._root.container;\n        if (parent) {\n            let cw = 0.5;\n            let ch = 0.5;\n            let centerX = this.get(\"centerX\");\n            if (centerX instanceof (0, $bd0d0c10fd30006b$export$cbc348af47898b5e)) cw = centerX.value;\n            let centerY = this.get(\"centerY\");\n            if (centerY instanceof (0, $bd0d0c10fd30006b$export$cbc348af47898b5e)) ch = centerY.value;\n            let parentW = parent.width();\n            let parentH = parent.height();\n            let tooltipContainer = this.parent;\n            let xx = 0;\n            let yy = 0;\n            if (tooltipContainer) {\n                xx = tooltipContainer.x();\n                yy = tooltipContainer.y();\n                const layerMargin = tooltipContainer.get(\"layerMargin\");\n                if (layerMargin) {\n                    xx += layerMargin.left || 0;\n                    yy += layerMargin.top || 0;\n                    parentW += (layerMargin.left || 0) + (layerMargin.right || 0);\n                    parentH += (layerMargin.top || 0) + (layerMargin.bottom || 0);\n                }\n            }\n            const bounds = this.get(\"bounds\", {\n                left: -xx,\n                top: -yy,\n                right: parentW - xx,\n                bottom: parentH - yy\n            });\n            this._updateBounds();\n            let w = this.width();\n            let h = this.height();\n            // use old w and h,as when tooltip is hidden, these are 0 and unneeded animation happens\n            if (w === 0) w = this._w;\n            if (h === 0) h = this._h;\n            let pointTo = this.get(\"pointTo\", {\n                x: parentW / 2,\n                y: parentH / 2\n            });\n            let x = pointTo.x;\n            let y = pointTo.y;\n            let pointerOrientation = this.get(\"pointerOrientation\");\n            let background = this.get(\"background\");\n            let pointerLength = 0;\n            let bgStrokeSizeY = 0;\n            let bgStrokeSizeX = 0;\n            if (background instanceof (0, $b7e6ca628a07e093$export$458c0690b0cc8182)) {\n                pointerLength = background.get(\"pointerLength\", 0);\n                bgStrokeSizeY = background.get(\"strokeWidth\", 0) / 2;\n                bgStrokeSizeX = bgStrokeSizeY;\n                background.set(\"width\", w);\n                background.set(\"height\", h);\n            }\n            let pointerX = 0;\n            let pointerY = 0;\n            let boundsW = bounds.right - bounds.left;\n            let boundsH = bounds.bottom - bounds.top;\n            // horizontal\n            if (pointerOrientation == \"horizontal\" || pointerOrientation == \"left\" || pointerOrientation == \"right\") {\n                bgStrokeSizeY = 0;\n                if (pointerOrientation == \"horizontal\") {\n                    if (x > bounds.left + boundsW / 2) {\n                        x -= w * (1 - cw) + pointerLength;\n                        bgStrokeSizeX *= -1;\n                    } else x += w * cw + pointerLength;\n                } else if (pointerOrientation == \"left\") x += w * (1 - cw) + pointerLength;\n                else {\n                    x -= w * cw + pointerLength;\n                    bgStrokeSizeX *= -1;\n                }\n            } else {\n                bgStrokeSizeX = 0;\n                if (pointerOrientation == \"vertical\") {\n                    if (y > bounds.top + h / 2 + pointerLength) y -= h * (1 - ch) + pointerLength;\n                    else {\n                        y += h * ch + pointerLength;\n                        bgStrokeSizeY *= -1;\n                    }\n                } else if (pointerOrientation == \"down\") y -= h * (1 - ch) + pointerLength;\n                else {\n                    y += h * ch + pointerLength;\n                    bgStrokeSizeY *= -1;\n                }\n            }\n            x = $f43e9e04b3f0548b$export$386b748ab02f16a0(x, bounds.left + w * cw, bounds.left + boundsW - w * (1 - cw)) + bgStrokeSizeX;\n            y = $f43e9e04b3f0548b$export$386b748ab02f16a0(y, bounds.top + h * ch, bounds.top + boundsH - h * (1 - ch)) - bgStrokeSizeY;\n            pointerX = pointTo.x - x + w * cw + bgStrokeSizeX;\n            pointerY = pointTo.y - y + h * ch - bgStrokeSizeY;\n            this._fx = x;\n            this._fy = y;\n            const animationDuration = this.get(\"animationDuration\", 0);\n            if (animationDuration > 0 && this.get(\"visible\") && this.get(\"opacity\") > 0.1) {\n                const animationEasing = this.get(\"animationEasing\");\n                this.animate({\n                    key: \"x\",\n                    to: x,\n                    duration: animationDuration,\n                    easing: animationEasing\n                });\n                this.animate({\n                    key: \"y\",\n                    to: y,\n                    duration: animationDuration,\n                    easing: animationEasing\n                });\n            } else {\n                this.set(\"x\", x);\n                this.set(\"y\", y);\n            }\n            if (background instanceof (0, $b7e6ca628a07e093$export$458c0690b0cc8182)) {\n                background.set(\"pointerX\", pointerX);\n                background.set(\"pointerY\", pointerY);\n            }\n            if (w > 0) this._w = w;\n            if (h > 0) this._h = h;\n        }\n    }\n}\nObject.defineProperty($670fc48e4ddbc086$export$28c660c63b792dea, \"className\", {\n    enumerable: true,\n    configurable: true,\n    writable: true,\n    value: \"Tooltip\"\n});\nObject.defineProperty($670fc48e4ddbc086$export$28c660c63b792dea, \"classNames\", {\n    enumerable: true,\n    configurable: true,\n    writable: true,\n    value: (0, $5de502da8a72d65e$export$42a852a2b6b56249).classNames.concat([\n        $670fc48e4ddbc086$export$28c660c63b792dea.className\n    ])\n});\n\n\n\n\n\n\n\nclass $b20322a184511108$export$cc77c4ff7e8673c5 extends (0, $baeade534ece7f4c$export$bc644a473284d944) {\n    _setDefaults() {\n        // Defaults\n        this._setDefault(\"negativeBase\", 0);\n        this._setDefault(\"numberFormat\", \"#,###.#####\");\n        this._setDefault(\"smallNumberThreshold\", 1.00);\n        const bns = \"_big_number_suffix_\";\n        const sns = \"_small_number_suffix_\";\n        const bs = \"_byte_suffix_\";\n        this._setDefault(\"bigNumberPrefixes\", [\n            {\n                \"number\": 1e+3,\n                \"suffix\": this._t(bns + \"3\")\n            },\n            {\n                \"number\": 1e+6,\n                \"suffix\": this._t(bns + \"6\")\n            },\n            {\n                \"number\": 1e+9,\n                \"suffix\": this._t(bns + \"9\")\n            },\n            {\n                \"number\": 1e+12,\n                \"suffix\": this._t(bns + \"12\")\n            },\n            {\n                \"number\": 1e+15,\n                \"suffix\": this._t(bns + \"15\")\n            },\n            {\n                \"number\": 1e+18,\n                \"suffix\": this._t(bns + \"18\")\n            },\n            {\n                \"number\": 1e+21,\n                \"suffix\": this._t(bns + \"21\")\n            },\n            {\n                \"number\": 1e+24,\n                \"suffix\": this._t(bns + \"24\")\n            }\n        ]);\n        this._setDefault(\"smallNumberPrefixes\", [\n            {\n                \"number\": 1e-24,\n                \"suffix\": this._t(sns + \"24\")\n            },\n            {\n                \"number\": 1e-21,\n                \"suffix\": this._t(sns + \"21\")\n            },\n            {\n                \"number\": 1e-18,\n                \"suffix\": this._t(sns + \"18\")\n            },\n            {\n                \"number\": 1e-15,\n                \"suffix\": this._t(sns + \"15\")\n            },\n            {\n                \"number\": 1e-12,\n                \"suffix\": this._t(sns + \"12\")\n            },\n            {\n                \"number\": 1e-9,\n                \"suffix\": this._t(sns + \"9\")\n            },\n            {\n                \"number\": 1e-6,\n                \"suffix\": this._t(sns + \"6\")\n            },\n            {\n                \"number\": 1e-3,\n                \"suffix\": this._t(sns + \"3\")\n            }\n        ]);\n        this._setDefault(\"bytePrefixes\", [\n            {\n                \"number\": 1,\n                suffix: this._t(bs + \"B\")\n            },\n            {\n                \"number\": 1024,\n                suffix: this._t(bs + \"KB\")\n            },\n            {\n                \"number\": 1048576,\n                suffix: this._t(bs + \"MB\")\n            },\n            {\n                \"number\": 1073741824,\n                suffix: this._t(bs + \"GB\")\n            },\n            {\n                \"number\": 1099511627776,\n                suffix: this._t(bs + \"TB\")\n            },\n            {\n                \"number\": 1125899906842624,\n                suffix: this._t(bs + \"PB\")\n            }\n        ]);\n        super._setDefaults();\n    }\n    _beforeChanged() {\n        super._beforeChanged();\n    }\n    /**\r\n     * Formats the number according to specific format.\r\n     *\r\n     * @param value   Value to format\r\n     * @param format  Format to apply\r\n     * @return Formatted number\r\n     */ format(value, format, precision) {\n        // no format passed in or \"Number\"\n        if (format == null || $f63bdea45a89cf24$export$844ec244b1367d54(format) && format.toLowerCase() === \"number\") format = this.get(\"numberFormat\", \"\");\n        // Init return value\n        let formatted;\n        // Cast to number just in case\n        // TODO: maybe use better casting\n        let source = Number(value);\n        // Is it a built-in format or Intl.NumberFormatOptions\n        if ($f63bdea45a89cf24$export$a6cdc56e425d0d0a(format)) try {\n            if (this.get(\"intlLocales\")) return new Intl.NumberFormat(this.get(\"intlLocales\"), format).format(source);\n            else return new Intl.NumberFormat(undefined, format).format(source);\n        } catch (e) {\n            return \"Invalid\";\n        }\n        else {\n            // Clean format\n            format = $05b1b40b69b15016$export$1261c7bb3da8241a(format);\n            // Get format info (it will also deal with parser caching)\n            let info = this.parseFormat(format, this._root.language);\n            // format and replace the number\n            let details;\n            if (source > this.get(\"negativeBase\")) details = info.positive;\n            else if (source < this.get(\"negativeBase\")) details = info.negative;\n            else details = info.zero;\n            // Adjust precision\n            if (precision != null && !details.mod) {\n                details = $e66f9343b5144e1a$export$784d13d8ee351f07(details);\n                details.decimals.active = source == 0 ? 0 : precision;\n            }\n            // Format\n            formatted = details.template.split($f63bdea45a89cf24$export$55fc5ffc49a23c34).join(this.applyFormat(source, details));\n        }\n        if (this.get(\"forceLTR\") === true) formatted = \"\\u200E\" + formatted;\n        return formatted;\n    }\n    /**\r\n     * Parses supplied format into structured object which can be used to format\r\n     * the number.\r\n     *\r\n     * @param format Format string, i.e. \"#,###.00\"\r\n     * @param language Language\r\n     * @ignore\r\n     */ parseFormat(format, language) {\n        // Check cache\n        // TODO\n        // let cached = this.getCache(format);\n        // if (cached != null) {\n        // \treturn cached;\n        // }\n        const thousandSeparator = language.translateEmpty(\"_thousandSeparator\");\n        const decimalSeparator = language.translateEmpty(\"_decimalSeparator\");\n        // init format parse info holder\n        let info = {\n            \"positive\": {\n                \"thousands\": {\n                    \"active\": -1,\n                    \"passive\": -1,\n                    \"interval\": -1,\n                    \"separator\": thousandSeparator\n                },\n                \"decimals\": {\n                    \"active\": -1,\n                    \"passive\": -1,\n                    \"separator\": decimalSeparator\n                },\n                \"template\": \"\",\n                \"source\": \"\",\n                \"parsed\": false\n            },\n            \"negative\": {\n                \"thousands\": {\n                    \"active\": -1,\n                    \"passive\": -1,\n                    \"interval\": -1,\n                    \"separator\": thousandSeparator\n                },\n                \"decimals\": {\n                    \"active\": -1,\n                    \"passive\": -1,\n                    \"separator\": decimalSeparator\n                },\n                \"template\": \"\",\n                \"source\": \"\",\n                \"parsed\": false\n            },\n            \"zero\": {\n                \"thousands\": {\n                    \"active\": -1,\n                    \"passive\": -1,\n                    \"interval\": -1,\n                    \"separator\": thousandSeparator\n                },\n                \"decimals\": {\n                    \"active\": -1,\n                    \"passive\": -1,\n                    \"separator\": decimalSeparator\n                },\n                \"template\": \"\",\n                \"source\": \"\",\n                \"parsed\": false\n            }\n        };\n        // Escape double vertical bars (that mean display one vertical bar)\n        format = format.replace(\"||\", $f63bdea45a89cf24$export$cea82ace3c81ccd9);\n        // Split it up and deal with different formats\n        let parts = format.split(\"|\");\n        info.positive.source = parts[0];\n        if (typeof parts[2] === \"undefined\") info.zero = info.positive;\n        else info.zero.source = parts[2];\n        if (typeof parts[1] === \"undefined\") info.negative = info.positive;\n        else info.negative.source = parts[1];\n        // Parse each\n        $e66f9343b5144e1a$export$79b2f7037acddd43(info, (_part, item)=>{\n            // Already parsed\n            if (item.parsed) return;\n            // Check cached\n            // TODO\n            // if (typeof this.getCache(item.source) !== \"undefined\") {\n            // \tinfo[part] = this.getCache(item.source);\n            // \treturn;\n            // }\n            // Begin parsing\n            let partFormat = item.source;\n            // Just \"Number\"?\n            if (partFormat.toLowerCase() === \"number\") partFormat = this.get(\"numberFormat\", \"#,###.#####\");\n            // Let TextFormatter split into chunks\n            let chunks = (0, $4b06370a9416d0ab$export$cfc95f342033cc43).chunk(partFormat, true);\n            for(let i = 0; i < chunks.length; i++){\n                let chunk = chunks[i];\n                // replace back double vertical bar\n                chunk.text = chunk.text.replace($f63bdea45a89cf24$export$cea82ace3c81ccd9, \"|\");\n                if (chunk.type === \"value\") {\n                    // Parse format\n                    // Look for codes\n                    let matches = chunk.text.match(/[#0.,]+[ ]?[abespABESP%!]?[abespABESP‰!]?/);\n                    if (matches) {\n                        if (matches === null || matches[0] === \"\") // no codes here - assume string\n                        // nothing to do here\n                        item.template += chunk.text;\n                        else {\n                            // look for the format modifiers at the end\n                            let mods = matches[0].match(/[abespABESP%‰!]{2}|[abespABESP%‰]{1}$/);\n                            if (mods) {\n                                item.mod = mods[0].toLowerCase();\n                                item.modSpacing = matches[0].match(/[ ]{1}[abespABESP%‰!]{1}$/) ? true : false;\n                            }\n                            // break the format up\n                            let a = matches[0].split(\".\");\n                            // Deal with thousands\n                            if (a[0] === \"\") ;\n                            else {\n                                // Counts\n                                item.thousands.active = (a[0].match(/0/g) || []).length;\n                                item.thousands.passive = (a[0].match(/\\#/g) || []).length + item.thousands.active;\n                                // Separator interval\n                                let b = a[0].split(\",\");\n                                if (b.length === 1) ;\n                                else {\n                                    // Use length fo the last chunk as thousands length\n                                    item.thousands.interval = (b.pop() || \"\").length;\n                                    if (item.thousands.interval === 0) item.thousands.interval = -1;\n                                }\n                            }\n                            // Deal with decimals\n                            if (typeof a[1] === \"undefined\") ;\n                            else {\n                                // Counts\n                                item.decimals.active = (a[1].match(/0/g) || []).length;\n                                item.decimals.passive = (a[1].match(/\\#/g) || []).length + item.decimals.active;\n                            }\n                            // Add special code to template\n                            item.template += chunk.text.split(matches[0]).join($f63bdea45a89cf24$export$55fc5ffc49a23c34);\n                        }\n                    }\n                } else // Quoted string - take it as it is\n                item.template += chunk.text;\n            }\n            // Apply style formatting\n            //item.template = getTextFormatter().format(item.template, this.outputFormat);\n            // Save cache\n            // TODO\n            //this.setCache(item.source, item);\n            // Mark this as parsed\n            item.parsed = true;\n        });\n        // Save cache (the whole thing)\n        // TODO\n        //this.setCache(format, info);\n        return info;\n    }\n    /**\r\n     * Applies parsed format to a numeric value.\r\n     *\r\n     * @param value    Value\r\n     * @param details  Parsed format as returned by parseFormat()\r\n     * @return Formatted number\r\n     * @ignore\r\n     */ applyFormat(value, details) {\n        // Use absolute values\n        let negative = value < 0;\n        value = Math.abs(value);\n        // Recalculate according to modifier\n        let prefix = \"\", suffix = \"\";\n        let mods = details.mod ? details.mod.split(\"\") : [];\n        if (mods.indexOf(\"b\") !== -1) {\n            let a = this.applyPrefix(value, this.get(\"bytePrefixes\"), mods.indexOf(\"!\") !== -1);\n            value = a[0];\n            prefix = a[1];\n            suffix = a[2];\n            if (details.modSpacing) suffix = \" \" + suffix;\n        } else if (mods.indexOf(\"a\") !== -1) {\n            let a = this.applyPrefix(value, value < this.get(\"smallNumberThreshold\") ? this.get(\"smallNumberPrefixes\") : this.get(\"bigNumberPrefixes\"), mods.indexOf(\"!\") !== -1);\n            value = a[0];\n            prefix = a[1];\n            suffix = a[2];\n            if (details.modSpacing) suffix = \" \" + suffix;\n        } else if (mods.indexOf(\"p\") !== -1) {\n            let ol = Math.min(value.toString().length + 2, 21);\n            //value *= 100;\n            value = parseFloat(value.toPrecision(ol));\n            prefix = this._root.language.translate(\"_percentPrefix\");\n            suffix = this._root.language.translate(\"_percentSuffix\");\n            if (prefix == \"\" && suffix == \"\") suffix = \"%\";\n        } else if (mods.indexOf(\"%\") !== -1) {\n            let ol = Math.min(value.toString().length + 2, 21);\n            value *= 100;\n            value = parseFloat(value.toPrecision(ol));\n            suffix = \"%\";\n        } else if (mods.indexOf(\"\\u2030\") !== -1) {\n            let ol = Math.min(value.toString().length + 3, 21);\n            value *= 1000;\n            value = parseFloat(value.toPrecision(ol));\n            suffix = \"\\u2030\";\n        }\n        // Round to passive\n        if (mods.indexOf(\"e\") !== -1) {\n            // convert the value to exponential\n            let exp;\n            if (details.decimals.passive >= 0) exp = value.toExponential(details.decimals.passive).split(\"e\");\n            else exp = value.toExponential().split(\"e\");\n            value = Number(exp[0]);\n            suffix = \"e\" + exp[1];\n            if (details.modSpacing) suffix = \" \" + suffix;\n        } else if (details.decimals.passive === 0) value = Math.round(value);\n        else if (details.decimals.passive > 0) {\n            const decimals = $05b1b40b69b15016$export$4aa4df8b0f34e5d(value);\n            if (decimals > 0) {\n                const d = Math.pow(10, details.decimals.passive);\n                value = Math.round(parseFloat((value * d).toFixed(decimals))) / d;\n            }\n        }\n        // Init return value\n        let res = \"\";\n        // Calc integer and decimal parts\n        let a = $f63bdea45a89cf24$export$f67be9d9b0e25d7b(value).split(\".\");\n        // Format integers\n        let ints = a[0];\n        // Pad integers to active length\n        if (ints.length < details.thousands.active) ints = Array(details.thousands.active - ints.length + 1).join(\"0\") + ints;\n        // Insert thousands separators\n        if (details.thousands.interval > 0) {\n            let ip = [];\n            let intsr = ints.split(\"\").reverse().join(\"\");\n            for(let i = 0, len = ints.length; i <= len; i += details.thousands.interval){\n                let c = intsr.substr(i, details.thousands.interval).split(\"\").reverse().join(\"\");\n                if (c !== \"\") ip.unshift(c);\n            }\n            ints = ip.join(details.thousands.separator);\n        }\n        // Add integers\n        res += ints;\n        // Add decimals\n        if (a.length === 1) a.push(\"\");\n        let decs = a[1];\n        // Fill zeros?\n        if (decs.length < details.decimals.active) decs += Array(details.decimals.active - decs.length + 1).join(\"0\");\n        if (decs !== \"\") res += details.decimals.separator + decs;\n        // Can't have empty return value\n        if (res === \"\") res = \"0\";\n        // Add minus sign back\n        if (value !== 0 && negative && mods.indexOf(\"s\") === -1) res = \"-\" + res;\n        // Add suffixes/prefixes\n        if (prefix) res = prefix + res;\n        if (suffix) res += suffix;\n        return res;\n    }\n    applyPrefix(value, prefixes, force = false) {\n        let newvalue = value;\n        let prefix = \"\";\n        let suffix = \"\";\n        let applied = false;\n        let k = 1;\n        for(let i = 0, len = prefixes.length; i < len; i++)if (prefixes[i].number <= value) {\n            if (prefixes[i].number === 0) newvalue = 0;\n            else {\n                newvalue = value / prefixes[i].number;\n                k = prefixes[i].number;\n            }\n            prefix = prefixes[i].prefix;\n            suffix = prefixes[i].suffix;\n            applied = true;\n        }\n        if (!applied && force && prefixes.length && value != 0) {\n            // Prefix was not applied. Use the first prefix.\n            newvalue = value / prefixes[0].number;\n            prefix = prefixes[0].prefix;\n            suffix = prefixes[0].suffix;\n            applied = true;\n        }\n        if (applied) newvalue = parseFloat(newvalue.toPrecision(Math.min(k.toString().length + Math.floor(newvalue).toString().replace(/[^0-9]*/g, \"\").length, 21)));\n        return [\n            newvalue,\n            prefix,\n            suffix\n        ];\n    }\n    /**\r\n     * Replaces brackets with temporary placeholders.\r\n     *\r\n     * @ignore Exclude from docs\r\n     * @param text  Input text\r\n     * @return Escaped text\r\n     */ escape(text) {\n        return text.replace(\"||\", $f63bdea45a89cf24$export$cea82ace3c81ccd9);\n    }\n    /**\r\n     * Replaces placeholders back to brackets.\r\n     *\r\n     * @ignore Exclude from docs\r\n     * @param text  Escaped text\r\n     * @return Unescaped text\r\n     */ unescape(text) {\n        return text.replace($f63bdea45a89cf24$export$cea82ace3c81ccd9, \"|\");\n    }\n}\n\n\n\n\nfunction $3f31d8df1b17230f$var$parseDate(timezone, date) {\n    let year = 0;\n    let month = 0;\n    let day = 1;\n    let hour = 0;\n    let minute = 0;\n    let second = 0;\n    let millisecond = 0;\n    let weekday = 0;\n    timezone.formatToParts(date).forEach((x)=>{\n        switch(x.type){\n            case \"year\":\n                year = +x.value;\n                break;\n            case \"month\":\n                month = +x.value - 1;\n                break;\n            case \"day\":\n                day = +x.value;\n                break;\n            case \"hour\":\n                hour = +x.value;\n                break;\n            case \"minute\":\n                minute = +x.value;\n                break;\n            case \"second\":\n                second = +x.value;\n                break;\n            case \"fractionalSecond\":\n                millisecond = +x.value;\n                break;\n            case \"weekday\":\n                switch(x.value){\n                    case \"Sun\":\n                        weekday = 0;\n                        break;\n                    case \"Mon\":\n                        weekday = 1;\n                        break;\n                    case \"Tue\":\n                        weekday = 2;\n                        break;\n                    case \"Wed\":\n                        weekday = 3;\n                        break;\n                    case \"Thu\":\n                        weekday = 4;\n                        break;\n                    case \"Fri\":\n                        weekday = 5;\n                        break;\n                    case \"Sat\":\n                        weekday = 6;\n                        break;\n                }\n        }\n    });\n    if (hour === 24) hour = 0;\n    return {\n        year: year,\n        month: month,\n        day: day,\n        hour: hour,\n        minute: minute,\n        second: second,\n        millisecond: millisecond,\n        weekday: weekday\n    };\n}\nfunction $3f31d8df1b17230f$var$toUTCDate(timezone, date) {\n    const { year: year, month: month, day: day, hour: hour, minute: minute, second: second, millisecond: millisecond } = $3f31d8df1b17230f$var$parseDate(timezone, date);\n    return Date.UTC(year, month, day, hour, minute, second, millisecond);\n}\nclass $3f31d8df1b17230f$export$5242477c0ef6dc66 {\n    constructor(timezone, isReal){\n        Object.defineProperty(this, \"_utc\", {\n            enumerable: true,\n            configurable: true,\n            writable: true,\n            value: void 0\n        });\n        Object.defineProperty(this, \"_dtf\", {\n            enumerable: true,\n            configurable: true,\n            writable: true,\n            value: void 0\n        });\n        Object.defineProperty(this, \"name\", {\n            enumerable: true,\n            configurable: true,\n            writable: true,\n            value: void 0\n        });\n        if (!isReal) throw new Error(\"You cannot use `new Class()`, instead use `Class.new()`\");\n        this.name = timezone;\n        this._utc = new Intl.DateTimeFormat(\"UTC\", {\n            hour12: false,\n            timeZone: \"UTC\",\n            year: \"numeric\",\n            month: \"2-digit\",\n            day: \"2-digit\",\n            hour: \"2-digit\",\n            minute: \"2-digit\",\n            second: \"2-digit\",\n            weekday: \"short\",\n            fractionalSecondDigits: 3\n        });\n        this._dtf = new Intl.DateTimeFormat(\"UTC\", {\n            hour12: false,\n            timeZone: timezone,\n            year: \"numeric\",\n            month: \"2-digit\",\n            day: \"2-digit\",\n            hour: \"2-digit\",\n            minute: \"2-digit\",\n            second: \"2-digit\",\n            weekday: \"short\",\n            fractionalSecondDigits: 3\n        });\n    }\n    /**\r\n     * Use this method to create an instance of this class.\r\n     *\r\n     * @see {@link https://www.amcharts.com/docs/v5/getting-started/#New_element_syntax} for more info\r\n     * @param   timezone  IANA timezone\r\n     * @return            Instantiated object\r\n     */ static new(timezone) {\n        return new this(timezone, true);\n    }\n    convertLocal(date) {\n        const offset = this.offsetUTC(date);\n        const userOffset = date.getTimezoneOffset();\n        const output = new Date(date);\n        output.setUTCMinutes(output.getUTCMinutes() - (offset - userOffset));\n        const newUserOffset = output.getTimezoneOffset();\n        if (userOffset != newUserOffset) output.setUTCMinutes(output.getUTCMinutes() + newUserOffset - userOffset);\n        return output;\n    }\n    offsetUTC(date) {\n        const utc = $3f31d8df1b17230f$var$toUTCDate(this._utc, date);\n        const dtf = $3f31d8df1b17230f$var$toUTCDate(this._dtf, date);\n        return (utc - dtf) / 60000;\n    }\n    parseDate(date) {\n        return $3f31d8df1b17230f$var$parseDate(this._dtf, date);\n    }\n}\n\n\n\n\nclass $31c1b4011aa9c6de$export$ad991b66133851cf extends (0, $baeade534ece7f4c$export$bc644a473284d944) {\n    _setDefaults() {\n        // Defaults\n        this._setDefault(\"capitalize\", true);\n        this._setDefault(\"dateFormat\", \"yyyy-MM-dd\");\n        super._setDefaults();\n    }\n    _beforeChanged() {\n        super._beforeChanged();\n    }\n    /**\r\n     * Formats a source `Date` object into string format\r\n     * @param   source          inpout date\r\n     * @param   format          Output format\r\n     * @param   ignoreTimezone  Ignore timezone?\r\n     * @return                  Formatted date\r\n     */ format(source, format, ignoreTimezone = false) {\n        // Locale?\n        // TODO\n        // No format passed in or it's empty\n        if (typeof format === \"undefined\" || format === \"\") format = this.get(\"dateFormat\", \"yyyy-MM-dd\");\n        // Init return value\n        let formatted;\n        // Cast?\n        // TODO: decide if we need to cast\n        let date = source;\n        // Is it a built-in format or Intl.DateTimeFormat\n        if ($f63bdea45a89cf24$export$a6cdc56e425d0d0a(format)) try {\n            const locales = this.get(\"intlLocales\");\n            if (locales) return new Intl.DateTimeFormat(locales, format).format(date);\n            else return new Intl.DateTimeFormat(undefined, format).format(date);\n        } catch (e) {\n            return \"Invalid\";\n        }\n        // get format info (it will also deal with parser caching)\n        let info = this.parseFormat(format);\n        // Should we apply custom time zone?\n        const timezone = this._root.timezone;\n        if (timezone && !this._root.utc && !ignoreTimezone) date = timezone.convertLocal(date);\n        // Check if it's a valid date\n        if (!$f63bdea45a89cf24$export$7e4aa119212bc614(date.getTime())) // TODO translation\n        //return this._t(\"Invalid date\");\n        return \"Invalid date\";\n        // Apply format\n        formatted = this.applyFormat(date, info, ignoreTimezone);\n        // Capitalize\n        if (this.get(\"capitalize\")) formatted = formatted.replace(/^.{1}/, formatted.substr(0, 1).toUpperCase());\n        // We're done\n        return formatted;\n    }\n    /**\r\n     * Applies format to Date.\r\n     *\r\n     * @param date      Date object\r\n     * @param info      Parsed format information\r\n     * @return Formatted date string\r\n     */ applyFormat(date, info, ignoreTimezone = false) {\n        // Init return value\n        let res = info.template;\n        // Get values\n        let fullYear, month, weekday, day, hours, minutes, seconds, milliseconds, timestamp = date.getTime();\n        if (this._root.utc && !ignoreTimezone) {\n            fullYear = date.getUTCFullYear();\n            month = date.getUTCMonth();\n            weekday = date.getUTCDay();\n            day = date.getUTCDate();\n            hours = date.getUTCHours();\n            minutes = date.getUTCMinutes();\n            seconds = date.getUTCSeconds();\n            milliseconds = date.getUTCMilliseconds();\n        } else {\n            fullYear = date.getFullYear();\n            month = date.getMonth();\n            weekday = date.getDay();\n            day = date.getDate();\n            hours = date.getHours();\n            minutes = date.getMinutes();\n            seconds = date.getSeconds();\n            milliseconds = date.getMilliseconds();\n        }\n        // Go through each part and format/replace it in template\n        for(let i = 0, len = info.parts.length; i < len; i++){\n            let value = \"\";\n            switch(info.parts[i]){\n                case \"G\":\n                    value = this._t(fullYear < 0 ? \"_era_bc\" : \"_era_ad\");\n                    break;\n                case \"yyyy\":\n                    value = Math.abs(fullYear).toString();\n                    if (fullYear < 0) value += this._t(\"_era_bc\");\n                    break;\n                case \"yyy\":\n                case \"yy\":\n                case \"y\":\n                    value = Math.abs(fullYear).toString().substr(-info.parts[i].length);\n                    if (fullYear < 0) value += this._t(\"_era_bc\");\n                    break;\n                case \"YYYY\":\n                case \"YYY\":\n                case \"YY\":\n                case \"Y\":\n                    let year = $05b1b40b69b15016$export$12d572480ceb6e58(date, this._root.utc);\n                    if (info.parts[i] == \"YYYY\") value = Math.abs(year).toString();\n                    else value = Math.abs(year).toString().substr(-info.parts[i].length);\n                    if (year < 0) value += this._t(\"_era_bc\");\n                    break;\n                case \"u\":\n                    break;\n                case \"q\":\n                    value = \"\" + Math.ceil((date.getMonth() + 1) / 3);\n                    break;\n                case \"MMMMM\":\n                    value = this._t(this._getMonth(month)).substr(0, 1);\n                    break;\n                case \"MMMM\":\n                    value = this._t(this._getMonth(month));\n                    break;\n                case \"MMM\":\n                    value = this._t(this._getShortMonth(month));\n                    break;\n                case \"MM\":\n                    value = $05b1b40b69b15016$export$e3f9b6bf3780ff6e(month + 1, 2, \"0\");\n                    break;\n                case \"M\":\n                    value = (month + 1).toString();\n                    break;\n                case \"ww\":\n                    value = $05b1b40b69b15016$export$e3f9b6bf3780ff6e($05b1b40b69b15016$export$efe19b760242b2fc(date, this._root.utc), 2, \"0\");\n                    break;\n                case \"w\":\n                    value = $05b1b40b69b15016$export$efe19b760242b2fc(date, this._root.utc).toString();\n                    break;\n                case \"W\":\n                    value = $05b1b40b69b15016$export$b533a84e84a6dcfa(date, this._root.utc).toString();\n                    break;\n                case \"dd\":\n                    value = $05b1b40b69b15016$export$e3f9b6bf3780ff6e(day, 2, \"0\");\n                    break;\n                case \"d\":\n                    value = day.toString();\n                    break;\n                case \"DD\":\n                case \"DDD\":\n                    value = $05b1b40b69b15016$export$e3f9b6bf3780ff6e($05b1b40b69b15016$export$6f157f7a2f040843(date, this._root.utc).toString(), info.parts[i].length, \"0\");\n                    break;\n                case \"D\":\n                    value = $05b1b40b69b15016$export$6f157f7a2f040843(date, this._root.utc).toString();\n                    break;\n                case \"F\":\n                    break;\n                case \"g\":\n                    break;\n                case \"t\":\n                    value = this._root.language.translateFunc(\"_dateOrd\").call(this, day);\n                    break;\n                case \"E\":\n                    value = (weekday || 7).toString();\n                    break;\n                case \"EE\":\n                    value = $05b1b40b69b15016$export$e3f9b6bf3780ff6e((weekday || 7).toString(), 2, \"0\");\n                    break;\n                case \"EEE\":\n                case \"eee\":\n                    value = this._t(this._getShortWeekday(weekday));\n                    break;\n                case \"EEEE\":\n                case \"eeee\":\n                    value = this._t(this._getWeekday(weekday));\n                    break;\n                case \"EEEEE\":\n                case \"eeeee\":\n                    value = this._t(this._getShortWeekday(weekday)).substr(0, 1);\n                    break;\n                case \"e\":\n                case \"ee\":\n                    value = (weekday - (this._root.locale.firstDayOfWeek || 1) + 1).toString();\n                    if (info.parts[i] == \"ee\") value = $05b1b40b69b15016$export$e3f9b6bf3780ff6e(value, 2, \"0\");\n                    break;\n                case \"a\":\n                    if (hours >= 12) value = this._t(\"PM\");\n                    else value = this._t(\"AM\");\n                    break;\n                case \"aa\":\n                    if (hours >= 12) value = this._t(\"P.M.\");\n                    else value = this._t(\"A.M.\");\n                    break;\n                case \"aaa\":\n                    if (hours >= 12) value = this._t(\"P\");\n                    else value = this._t(\"A\");\n                    break;\n                case \"h\":\n                    value = $05b1b40b69b15016$export$6ef1a68df5e98f69(hours).toString();\n                    break;\n                case \"hh\":\n                    value = $05b1b40b69b15016$export$e3f9b6bf3780ff6e($05b1b40b69b15016$export$6ef1a68df5e98f69(hours), 2, \"0\");\n                    break;\n                case \"H\":\n                    value = hours.toString();\n                    break;\n                case \"HH\":\n                    value = $05b1b40b69b15016$export$e3f9b6bf3780ff6e(hours, 2, \"0\");\n                    break;\n                case \"K\":\n                    value = $05b1b40b69b15016$export$6ef1a68df5e98f69(hours, 0).toString();\n                    break;\n                case \"KK\":\n                    value = $05b1b40b69b15016$export$e3f9b6bf3780ff6e($05b1b40b69b15016$export$6ef1a68df5e98f69(hours, 0), 2, \"0\");\n                    break;\n                case \"k\":\n                    value = (hours + 1).toString();\n                    break;\n                case \"kk\":\n                    value = $05b1b40b69b15016$export$e3f9b6bf3780ff6e(hours + 1, 2, \"0\");\n                    break;\n                case \"m\":\n                    value = minutes.toString();\n                    break;\n                case \"mm\":\n                    value = $05b1b40b69b15016$export$e3f9b6bf3780ff6e(minutes, 2, \"0\");\n                    break;\n                case \"s\":\n                    value = seconds.toString();\n                    break;\n                case \"ss\":\n                    value = $05b1b40b69b15016$export$e3f9b6bf3780ff6e(seconds, 2, \"0\");\n                    break;\n                case \"S\":\n                case \"SS\":\n                case \"SSS\":\n                    value = Math.round(milliseconds / 1000 * Math.pow(10, info.parts[i].length)).toString();\n                    break;\n                case \"x\":\n                    value = timestamp.toString();\n                    break;\n                case \"n\":\n                case \"nn\":\n                case \"nnn\":\n                    value = $05b1b40b69b15016$export$e3f9b6bf3780ff6e(milliseconds, info.parts[i].length, \"0\");\n                    break;\n                case \"z\":\n                    value = $05b1b40b69b15016$export$c3133dbc11f66777(date, false, false, this._root.utc, this._root.timezone ? this._root.timezone.name : undefined).replace(/[+-]+[0-9]+$/, \"\");\n                    break;\n                case \"zz\":\n                    value = $05b1b40b69b15016$export$c3133dbc11f66777(date, true, false, this._root.utc, this._root.timezone ? this._root.timezone.name : undefined);\n                    break;\n                case \"zzz\":\n                    value = $05b1b40b69b15016$export$c3133dbc11f66777(date, false, true, this._root.utc, this._root.timezone ? this._root.timezone.name : undefined).replace(/[+-]+[0-9]+$/, \"\");\n                    break;\n                case \"zzzz\":\n                    value = $05b1b40b69b15016$export$c3133dbc11f66777(date, true, true, this._root.utc, this._root.timezone ? this._root.timezone.name : undefined);\n                    break;\n                case \"Z\":\n                case \"ZZ\":\n                    let timezone = this._root.utc ? \"UTC\" : this._root.timezone;\n                    if (timezone instanceof (0, $3f31d8df1b17230f$export$5242477c0ef6dc66)) timezone = timezone.name;\n                    const offset = timezone ? $05b1b40b69b15016$export$4c9db454e2785fd9(timezone) : date.getTimezoneOffset();\n                    let tz = Math.abs(offset) / 60;\n                    let tzh = Math.floor(tz);\n                    let tzm = tz * 60 - tzh * 60;\n                    if (this._root.utc) {\n                        tzh = 0;\n                        tzm = 0;\n                    }\n                    if (info.parts[i] == \"Z\") {\n                        value = \"GMT\";\n                        value += offset > 0 ? \"-\" : \"+\";\n                        value += $05b1b40b69b15016$export$e3f9b6bf3780ff6e(tzh, 2) + \":\" + $05b1b40b69b15016$export$e3f9b6bf3780ff6e(tzm, 2);\n                    } else {\n                        value = offset > 0 ? \"-\" : \"+\";\n                        value += $05b1b40b69b15016$export$e3f9b6bf3780ff6e(tzh, 2) + $05b1b40b69b15016$export$e3f9b6bf3780ff6e(tzm, 2);\n                    }\n                    break;\n                case \"i\":\n                    value = date.toISOString();\n                    break;\n                case \"I\":\n                    value = date.toUTCString();\n                    break;\n            }\n            res = res.replace($f63bdea45a89cf24$export$55fc5ffc49a23c34, value);\n        }\n        return res;\n    }\n    /**\r\n     * Parses format into structured infromation.\r\n     *\r\n     * @param format Format template\r\n     */ parseFormat(format) {\n        // Check cache\n        // TODO: implement caching of the parsed format\n        // Init format parse info holder\n        let info = {\n            \"template\": \"\",\n            \"parts\": []\n        };\n        // Let TextFormatter split into chunks\n        let chunks = (0, $4b06370a9416d0ab$export$cfc95f342033cc43).chunk(format, true);\n        for(let i = 0; i < chunks.length; i++){\n            let chunk = chunks[i];\n            if (chunk.type === \"value\") {\n                // Just \"Date\"?\n                if (chunk.text.match(/^date$/i)) {\n                    let dateFormat = this.get(\"dateFormat\", \"yyyy-MM-dd\");\n                    if (!$f63bdea45a89cf24$export$844ec244b1367d54(dateFormat)) dateFormat = \"yyyy-MM-dd\";\n                    chunk.text = dateFormat;\n                }\n                // Find all possible parts\n                let matches = chunk.text.match(/G|yyyy|yyy|yy|y|YYYY|YYY|YY|Y|u|q|MMMMM|MMMM|MMM|MM|M|ww|w|W|dd|d|DDD|DD|D|F|g|EEEEE|EEEE|EEE|EE|E|eeeee|eeee|eee|ee|e|aaa|aa|a|hh|h|HH|H|KK|K|kk|k|mm|m|ss|s|SSS|SS|S|A|zzzz|zzz|zz|z|ZZ|Z|t|x|nnn|nn|n|i|I/g);\n                // Found?\n                if (matches) // Populate template\n                for(let x = 0; x < matches.length; x++){\n                    info.parts.push(matches[x]);\n                    chunk.text = chunk.text.replace(matches[x], $f63bdea45a89cf24$export$55fc5ffc49a23c34);\n                }\n            }\n            // Apply to template\n            info.template += chunk.text;\n        }\n        // Save cache\n        // TODO\n        return info;\n    }\n    _months() {\n        return [\n            \"January\",\n            \"February\",\n            \"March\",\n            \"April\",\n            \"May\",\n            \"June\",\n            \"July\",\n            \"August\",\n            \"September\",\n            \"October\",\n            \"November\",\n            \"December\"\n        ];\n    }\n    _getMonth(index) {\n        return this._months()[index];\n    }\n    _shortMonths() {\n        return [\n            \"Jan\",\n            \"Feb\",\n            \"Mar\",\n            \"Apr\",\n            \"May(short)\",\n            \"Jun\",\n            \"Jul\",\n            \"Aug\",\n            \"Sep\",\n            \"Oct\",\n            \"Nov\",\n            \"Dec\"\n        ];\n    }\n    _getShortMonth(index) {\n        return this._shortMonths()[index];\n    }\n    _weekdays() {\n        return [\n            \"Sunday\",\n            \"Monday\",\n            \"Tuesday\",\n            \"Wednesday\",\n            \"Thursday\",\n            \"Friday\",\n            \"Saturday\"\n        ];\n    }\n    _getWeekday(index) {\n        return this._weekdays()[index];\n    }\n    _shortWeekdays() {\n        return [\n            \"Sun\",\n            \"Mon\",\n            \"Tue\",\n            \"Wed\",\n            \"Thu\",\n            \"Fri\",\n            \"Sat\"\n        ];\n    }\n    _getShortWeekday(index) {\n        return this._shortWeekdays()[index];\n    }\n    parse(source, format) {\n        // Is it already a Date\n        if (source instanceof Date) return source;\n        // Is it a numeric timestamp\n        if ($f63bdea45a89cf24$export$7e4aa119212bc614(source)) return new Date(source);\n        // Are we parsing a timestamp?\n        if (format == \"x\") return new Date(parseInt(source));\n        // No? Let's check if it's string, and try converting to it if nec\n        if (!$f63bdea45a89cf24$export$844ec244b1367d54(source)) source = source.toString();\n        // Init return value\n        let res;\n        // Init RegEx for parsing\n        let reg = \"\";\n        // Clean format\n        format = $05b1b40b69b15016$export$1261c7bb3da8241a(format);\n        // Clip format to length of the source string\n        format = format.substr(0, source.length);\n        // Parse format\n        let info = this.parseFormat(format);\n        // Init parsed items holder\n        let parsedIndexes = {\n            \"year\": -1,\n            \"year3\": -1,\n            \"year2\": -1,\n            \"year1\": -1,\n            \"month\": -1,\n            \"monthShort\": -1,\n            \"monthLong\": -1,\n            \"weekdayShort\": -1,\n            \"weekdayLong\": -1,\n            \"day\": -1,\n            \"yearDay\": -1,\n            \"week\": -1,\n            \"hourBase0\": -1,\n            \"hour12Base0\": -1,\n            \"hourBase1\": -1,\n            \"hour12Base1\": -1,\n            \"minute\": -1,\n            \"second\": -1,\n            \"millisecond\": -1,\n            \"millisecondDigits\": -1,\n            \"am\": -1,\n            \"zone\": -1,\n            \"timestamp\": -1,\n            \"iso\": -1\n        };\n        // Init values\n        let resValues = {\n            \"year\": 1970,\n            \"month\": 0,\n            \"day\": 1,\n            \"hour\": 0,\n            \"minute\": 0,\n            \"second\": 0,\n            \"millisecond\": 0,\n            \"timestamp\": null,\n            \"offset\": 0,\n            \"utc\": this._root.utc\n        };\n        // Index adjuster\n        let indexAdjust = 0;\n        let index = 0;\n        // Iterate through all of the parts\n        for(let i = 0; i < info.parts.length; i++){\n            // Set current match index\n            index = i + indexAdjust + 1;\n            switch(info.parts[i]){\n                case \"yyyy\":\n                case \"YYYY\":\n                    reg += \"([0-9]{4})\";\n                    parsedIndexes.year = index;\n                    break;\n                case \"yyy\":\n                case \"YYY\":\n                    reg += \"([0-9]{3})\";\n                    parsedIndexes.year3 = index;\n                    break;\n                case \"yy\":\n                case \"YY\":\n                    reg += \"([0-9]{2})\";\n                    parsedIndexes.year2 = index;\n                    break;\n                case \"y\":\n                case \"Y\":\n                    reg += \"([0-9]{1})\";\n                    parsedIndexes.year1 = index;\n                    break;\n                case \"MMMM\":\n                    reg += \"(\" + this.getStringList(this._months()).join(\"|\") + \")\";\n                    parsedIndexes.monthLong = index;\n                    break;\n                case \"MMM\":\n                    reg += \"(\" + this.getStringList(this._shortMonths()).join(\"|\") + \")\";\n                    parsedIndexes.monthShort = index;\n                    break;\n                case \"MM\":\n                case \"M\":\n                    reg += \"([0-9]{2}|[0-9]{1})\";\n                    parsedIndexes.month = index;\n                    break;\n                case \"ww\":\n                case \"w\":\n                    reg += \"([0-9]{2}|[0-9]{1})\";\n                    parsedIndexes.week = index;\n                    break;\n                case \"dd\":\n                case \"d\":\n                    reg += \"([0-9]{2}|[0-9]{1})\";\n                    parsedIndexes.day = index;\n                    break;\n                case \"DDD\":\n                case \"DD\":\n                case \"D\":\n                    reg += \"([0-9]{3}|[0-9]{2}|[0-9]{1})\";\n                    parsedIndexes.yearDay = index;\n                    break;\n                case \"dddd\":\n                    reg += \"(\" + this.getStringList(this._weekdays()).join(\"|\") + \")\";\n                    parsedIndexes.weekdayLong = index;\n                    break;\n                case \"ddd\":\n                    reg += \"(\" + this.getStringList(this._shortWeekdays()).join(\"|\") + \")\";\n                    parsedIndexes.weekdayShort = index;\n                    break;\n                case \"aaa\":\n                case \"aa\":\n                case \"a\":\n                    // TODO: fix (escape regex)\n                    reg += \"(\" + this.getStringList([\n                        \"AM\",\n                        \"PM\",\n                        \"A\\.M\\.\",\n                        \"P\\.M\\.\",\n                        \"A\",\n                        \"P\"\n                    ]).join(\"|\") + \")\";\n                    parsedIndexes.am = index;\n                    break;\n                case \"hh\":\n                case \"h\":\n                    reg += \"([0-9]{2}|[0-9]{1})\";\n                    parsedIndexes.hour12Base1 = index;\n                    break;\n                case \"HH\":\n                case \"H\":\n                    reg += \"([0-9]{2}|[0-9]{1})\";\n                    parsedIndexes.hourBase0 = index;\n                    break;\n                case \"KK\":\n                case \"K\":\n                    reg += \"([0-9]{2}|[0-9]{1})\";\n                    parsedIndexes.hour12Base0 = index;\n                    break;\n                case \"kk\":\n                case \"k\":\n                    reg += \"([0-9]{2}|[0-9]{1})\";\n                    parsedIndexes.hourBase1 = index;\n                    break;\n                case \"mm\":\n                case \"m\":\n                    reg += \"([0-9]{2}|[0-9]{1})\";\n                    parsedIndexes.minute = index;\n                    break;\n                case \"ss\":\n                case \"s\":\n                    reg += \"([0-9]{2}|[0-9]{1})\";\n                    parsedIndexes.second = index;\n                    break;\n                case \"SSS\":\n                case \"SS\":\n                case \"S\":\n                    reg += \"([0-9]{3}|[0-9]{2}|[0-9]{1})\";\n                    parsedIndexes.millisecond = index;\n                    parsedIndexes.millisecondDigits = info.parts[i].length;\n                    break;\n                case \"nnn\":\n                case \"nn\":\n                case \"n\":\n                    reg += \"([0-9]{3}|[0-9]{2}|[0-9]{1})\";\n                    parsedIndexes.millisecond = index;\n                    break;\n                case \"x\":\n                    reg += \"([0-9]{1,})\";\n                    parsedIndexes.timestamp = index;\n                    break;\n                case \"Z\":\n                    reg += \"GMT([-+]+[0-9]{2}:[0-9]{2})\";\n                    parsedIndexes.zone = index;\n                    break;\n                case \"ZZ\":\n                    reg += \"([\\\\-+]+[0-9]{2}[0-9]{2})\";\n                    parsedIndexes.zone = index;\n                    break;\n                case \"i\":\n                    reg += \"([0-9]{4})-?([0-9]{2})-?([0-9]{2})T?([0-9]{2}):?([0-9]{2}):?([0-9]{2})\\\\.?([0-9]{0,3})([zZ]|[+\\\\-][0-9]{2}:?[0-9]{2}|$)\";\n                    parsedIndexes.iso = index;\n                    indexAdjust += 7;\n                    break;\n                case \"G\":\n                case \"YYYY\":\n                case \"YYY\":\n                case \"YY\":\n                case \"Y\":\n                case \"MMMMM\":\n                case \"W\":\n                case \"EEEEE\":\n                case \"EEEE\":\n                case \"EEE\":\n                case \"EE\":\n                case \"E\":\n                case \"eeeee\":\n                case \"eeee\":\n                case \"eee\":\n                case \"ee\":\n                case \"e\":\n                case \"zzzz\":\n                case \"zzz\":\n                case \"zz\":\n                case \"z\":\n                case \"t\":\n                    // Ignore\n                    indexAdjust--;\n                    break;\n            }\n            reg += \"[^0-9]*\";\n        }\n        // Try matching\n        let regex = new RegExp(reg);\n        let matches = source.match(regex);\n        if (matches) {\n            // Populate the date object\n            // Full year\n            if (parsedIndexes.year > -1) resValues.year = parseInt(matches[parsedIndexes.year]);\n            // 3-digit year\n            if (parsedIndexes.year3 > -1) {\n                let val = parseInt(matches[parsedIndexes.year3]);\n                val += 1000;\n                resValues.year = val;\n            }\n            // 2-digit year\n            if (parsedIndexes.year2 > -1) {\n                let val = parseInt(matches[parsedIndexes.year2]);\n                if (val > 50) val += 1000;\n                else val += 2000;\n                resValues.year = val;\n            }\n            // 1-digit year\n            if (parsedIndexes.year1 > -1) {\n                let val = parseInt(matches[parsedIndexes.year1]);\n                val = Math.floor(new Date().getFullYear() / 10) * 10 + val;\n                resValues.year = val;\n            }\n            // Full month\n            if (parsedIndexes.monthLong > -1) resValues.month = this.resolveMonth(matches[parsedIndexes.monthLong]);\n            // Short month\n            if (parsedIndexes.monthShort > -1) resValues.month = this.resolveShortMonth(matches[parsedIndexes.monthShort]);\n            // Numeric month\n            if (parsedIndexes.month > -1) resValues.month = parseInt(matches[parsedIndexes.month]) - 1;\n            // Weekday\n            // @todo\n            // Week\n            if (parsedIndexes.week > -1 && parsedIndexes.day === -1) {\n                // We parse weeks ONLY if day is not explicitly set\n                // TODO: this needs work\n                // (but maybe later - I can hardly imagine anyone passing their dates in weeks)\n                resValues.month = 0;\n                resValues.day = $05b1b40b69b15016$export$c5933b95cf2ffa17(parseInt(matches[parsedIndexes.week]), resValues.year, 1, this._root.utc);\n            }\n            // Day\n            if (parsedIndexes.day > -1) resValues.day = parseInt(matches[parsedIndexes.day]);\n            // Year day\n            if (parsedIndexes.yearDay > -1) {\n                resValues.month = 0;\n                resValues.day = parseInt(matches[parsedIndexes.yearDay]);\n            }\n            // 24 Hour (0-23)\n            if (parsedIndexes.hourBase0 > -1) resValues.hour = parseInt(matches[parsedIndexes.hourBase0]);\n            // 24 Hour (1-24)\n            if (parsedIndexes.hourBase1 > -1) resValues.hour = parseInt(matches[parsedIndexes.hourBase1]) - 1;\n            // 12 Hour (0-11)\n            if (parsedIndexes.hour12Base0 > -1) {\n                let val = parseInt(matches[parsedIndexes.hour12Base0]);\n                if (val == 11) val = 0;\n                if (parsedIndexes.am > -1 && !this.isAm(matches[parsedIndexes.am])) val += 12;\n                resValues.hour = val;\n            }\n            // 12 Hour (1-12)\n            if (parsedIndexes.hour12Base1 > -1) {\n                let val = parseInt(matches[parsedIndexes.hour12Base1]);\n                if (val == 12) val = 0;\n                if (parsedIndexes.am > -1 && !this.isAm(matches[parsedIndexes.am])) val += 12;\n                resValues.hour = val;\n            }\n            // Minute\n            if (parsedIndexes.minute > -1) resValues.minute = parseInt(matches[parsedIndexes.minute]);\n            // Second\n            if (parsedIndexes.second > -1) resValues.second = parseInt(matches[parsedIndexes.second]);\n            // Millisecond\n            if (parsedIndexes.millisecond > -1) {\n                let val = parseInt(matches[parsedIndexes.millisecond]);\n                if (parsedIndexes.millisecondDigits == 2) val *= 10;\n                else if (parsedIndexes.millisecondDigits == 1) val *= 100;\n                resValues.millisecond = val;\n            }\n            // Timestamp\n            if (parsedIndexes.timestamp > -1) {\n                resValues.timestamp = parseInt(matches[parsedIndexes.timestamp]);\n                const ts = new Date(resValues.timestamp);\n                resValues.year = ts.getUTCFullYear();\n                resValues.month = ts.getUTCMonth();\n                resValues.day = ts.getUTCDate();\n                resValues.hour = ts.getUTCHours();\n                resValues.minute = ts.getUTCMinutes();\n                resValues.second = ts.getUTCSeconds();\n                resValues.millisecond = ts.getUTCMilliseconds();\n            }\n            // Adjust time zone\n            if (parsedIndexes.zone > -1) resValues.offset = this.resolveTimezoneOffset(new Date(resValues.year, resValues.month, resValues.day), matches[parsedIndexes.zone]);\n            // ISO\n            if (parsedIndexes.iso > -1) {\n                resValues.year = $f63bdea45a89cf24$export$a0a81dc3380ce7d3(matches[parsedIndexes.iso + 0]);\n                resValues.month = $f63bdea45a89cf24$export$a0a81dc3380ce7d3(matches[parsedIndexes.iso + 1]) - 1;\n                resValues.day = $f63bdea45a89cf24$export$a0a81dc3380ce7d3(matches[parsedIndexes.iso + 2]);\n                resValues.hour = $f63bdea45a89cf24$export$a0a81dc3380ce7d3(matches[parsedIndexes.iso + 3]);\n                resValues.minute = $f63bdea45a89cf24$export$a0a81dc3380ce7d3(matches[parsedIndexes.iso + 4]);\n                resValues.second = $f63bdea45a89cf24$export$a0a81dc3380ce7d3(matches[parsedIndexes.iso + 5]);\n                resValues.millisecond = $f63bdea45a89cf24$export$a0a81dc3380ce7d3(matches[parsedIndexes.iso + 6]);\n                if (matches[parsedIndexes.iso + 7] == \"Z\" || matches[parsedIndexes.iso + 7] == \"z\") resValues.utc = true;\n                else if (matches[parsedIndexes.iso + 7] != \"\") resValues.offset = this.resolveTimezoneOffset(new Date(resValues.year, resValues.month, resValues.day), matches[parsedIndexes.iso + 7]);\n            }\n            // Create Date object\n            if (resValues.utc) res = new Date(Date.UTC(resValues.year, resValues.month, resValues.day, resValues.hour, resValues.minute, resValues.second, resValues.millisecond));\n            else res = new Date(resValues.year, resValues.month, resValues.day, resValues.hour, resValues.minute + resValues.offset, resValues.second, resValues.millisecond);\n        } else // Didn't match anything\n        // Let's try dropping it into Date constructor and hope for the best\n        res = new Date(source);\n        return res;\n    }\n    resolveTimezoneOffset(date, zone) {\n        let value = zone.match(/([+\\-]?)([0-9]{2}):?([0-9]{2})/);\n        if (value) {\n            let match = zone.match(/([+\\-]?)([0-9]{2}):?([0-9]{2})/);\n            let dir = match[1];\n            let hour = match[2];\n            let minute = match[3];\n            let offset = parseInt(hour) * 60 + parseInt(minute);\n            // Adjust offset\n            // Making it negative does not seem to make sense, but it's right\n            // because of how JavaScript calculates GMT offsets\n            if (dir == \"+\") offset *= -1;\n            // Check the difference in offset\n            let originalOffset = (date || new Date()).getTimezoneOffset();\n            let diff = offset - originalOffset;\n            return diff;\n        }\n        return 0;\n    }\n    /**\r\n     * Resolves month name (i.e. \"December\") into a month number (11).\r\n     *\r\n     * @param value  Month name\r\n     * @return Month number\r\n     */ resolveMonth(value) {\n        // Let's try English first\n        let month = this._months().indexOf(value);\n        if (month > -1) return month;\n        // Try the translation\n        if (!this._root.language.isDefault()) {\n            month = this._root.language.translateAll(this._months()).indexOf(value);\n            if (month > -1) return month;\n        }\n        return 0;\n    }\n    /**\r\n     * Resolves short month name (i.e. \"Dec\") into a month number.\r\n     *\r\n     * @param value  Short month name\r\n     * @return Month number\r\n     */ resolveShortMonth(value) {\n        // Let's try English first\n        let month = this._shortMonths().indexOf(value);\n        if (month > -1) return month;\n        // Maybe long month (workaround for May)\n        month = this._months().indexOf(value);\n        if (month > -1) return month;\n        // Try the translation\n        if (this._root.language && !this._root.language.isDefault()) {\n            month = this._root.language.translateAll(this._shortMonths()).indexOf(value);\n            if (month > -1) return month;\n        }\n        return 0;\n    }\n    /**\r\n     * Checks if passed in string represents AM/PM notation in many of its\r\n     * versions.\r\n     *\r\n     * @param value  Source string\r\n     * @return Is it AM/PM?\r\n     */ isAm(value) {\n        let list = this.getStringList([\n            \"AM\",\n            \"A.M.\",\n            \"A\"\n        ]);\n        return list.indexOf(value.toUpperCase()) > -1;\n    }\n    /**\r\n     * Translates list of strings.\r\n     *\r\n     * @param list  Source strings\r\n     * @return Translated strings\r\n     */ getStringList(list) {\n        let res = [];\n        for(let i = 0; i < list.length; i++)// translate?\n        if (this._root.language) res.push($05b1b40b69b15016$export$4a325aa52b8c4c19(this._t(list[i])));\n        else res.push($05b1b40b69b15016$export$4a325aa52b8c4c19(list[i]));\n        return res;\n    }\n}\n\n\n\n\n\n\n\nclass $e14cdfadb6108833$export$cee2d4e6b36ce468 extends (0, $baeade534ece7f4c$export$bc644a473284d944) {\n    constructor(){\n        super(...arguments);\n        /**\r\n         * Collection of aliases for units.\r\n         */ Object.defineProperty(this, \"_unitAliases\", {\n            enumerable: true,\n            configurable: true,\n            writable: true,\n            value: {\n                \"Y\": \"y\",\n                \"D\": \"d\",\n                \"H\": \"h\",\n                \"K\": \"h\",\n                \"k\": \"h\",\n                \"n\": \"S\"\n            }\n        });\n    }\n    _setDefaults() {\n        const dmillisecond = \"_duration_millisecond\";\n        const dsecond = \"_duration_second\";\n        const dminute = \"_duration_minute\";\n        const dhour = \"_duration_hour\";\n        const dday = \"_duration_day\";\n        const dweek = \"_duration_week\";\n        const dmonth = \"_duration_month\";\n        const dyear = \"_duration_year\";\n        const asecond = \"_second\";\n        const aminute = \"_minute\";\n        const ahour = \"_hour\";\n        const aday = \"_day\";\n        const aweek = \"_week\";\n        const amonth = \"_week\";\n        const ayear = \"_year\";\n        // Defaults\n        this._setDefault(\"negativeBase\", 0);\n        this._setDefault(\"baseUnit\", \"second\");\n        this._setDefault(\"durationFormats\", {\n            \"millisecond\": {\n                \"millisecond\": this._t(dmillisecond),\n                \"second\": this._t(dmillisecond + asecond),\n                \"minute\": this._t(dmillisecond + aminute),\n                \"hour\": this._t(dmillisecond + ahour),\n                \"day\": this._t(dmillisecond + aday),\n                \"week\": this._t(dmillisecond + aweek),\n                \"month\": this._t(dmillisecond + amonth),\n                \"year\": this._t(dmillisecond + ayear)\n            },\n            \"second\": {\n                \"second\": this._t(dsecond),\n                \"minute\": this._t(dsecond + aminute),\n                \"hour\": this._t(dsecond + ahour),\n                \"day\": this._t(dsecond + aday),\n                \"week\": this._t(dsecond + aweek),\n                \"month\": this._t(dsecond + amonth),\n                \"year\": this._t(dsecond + ayear)\n            },\n            \"minute\": {\n                \"minute\": this._t(dminute),\n                \"hour\": this._t(dminute + ahour),\n                \"day\": this._t(dminute + aday),\n                \"week\": this._t(dminute + aweek),\n                \"month\": this._t(dminute + amonth),\n                \"year\": this._t(dminute + ayear)\n            },\n            \"hour\": {\n                \"hour\": this._t(dhour),\n                \"day\": this._t(dhour + aday),\n                \"week\": this._t(dhour + aweek),\n                \"month\": this._t(dhour + amonth),\n                \"year\": this._t(dhour + ayear)\n            },\n            \"day\": {\n                \"day\": this._t(dday),\n                \"week\": this._t(dday + aweek),\n                \"month\": this._t(dday + amonth),\n                \"year\": this._t(dday + ayear)\n            },\n            \"week\": {\n                \"week\": this._t(dweek),\n                \"month\": this._t(dweek + amonth),\n                \"year\": this._t(dweek + ayear)\n            },\n            \"month\": {\n                \"month\": this._t(dmonth),\n                \"year\": this._t(dmonth + ayear)\n            },\n            \"year\": {\n                \"year\": this._t(dyear)\n            }\n        });\n        super._setDefaults();\n    }\n    _beforeChanged() {\n        super._beforeChanged();\n    }\n    /**\r\n     * Formats the number as duration.\r\n     *\r\n     * For example `1000` (base unit seconds) would be converted to `16:40` as in\r\n     * 16 minutes and 40 seconds.\r\n     *\r\n     * @param value   Value to format\r\n     * @param format  Format to apply\r\n     * @param base    Override base unit\r\n     * @return Formatted number\r\n     */ format(value, format, base) {\n        // no base unit?\n        let baseUnit = base || this.get(\"baseUnit\");\n        // no format passed in or empty\n        if (typeof format === \"undefined\" || format === \"\") {\n            if (this.get(\"durationFormat\") != null) format = this.get(\"durationFormat\");\n            else format = this.getFormat($f63bdea45a89cf24$export$a0a81dc3380ce7d3(value), undefined, baseUnit);\n        }\n        // Clean format\n        format = $05b1b40b69b15016$export$1261c7bb3da8241a(format);\n        // get format info (it will also deal with parser caching)\n        let info = this.parseFormat(format, baseUnit);\n        // cast to number just in case\n        // TODO: maybe use better casting\n        let source = Number(value);\n        // format and replace the number\n        let details;\n        if (source > this.get(\"negativeBase\")) details = info.positive;\n        else if (source < this.get(\"negativeBase\")) details = info.negative;\n        else details = info.zero;\n        // Format\n        let formatted = this.applyFormat(source, details);\n        // Apply color?\n        if (details.color !== \"\") formatted = \"[\" + details.color + \"]\" + formatted + \"[/]\";\n        return formatted;\n    }\n    /**\r\n     * Parses supplied format into structured object which can be used to format\r\n     * the number.\r\n     *\r\n     * @param format  Format string, i.e. \"#,###.00\"\r\n     * @param base    Override base unit\r\n     * @return Parsed information\r\n     */ parseFormat(format, base) {\n        // Check cache\n        // TODO\n        // let cached = this.getCache(format);\n        // if (cached != null) {\n        // \treturn cached;\n        // }\n        // no base unit?\n        let baseUnit = base || this.get(\"baseUnit\");\n        // Initialize duration parsing info\n        let info = {\n            \"positive\": {\n                \"color\": \"\",\n                \"template\": \"\",\n                \"parts\": [],\n                \"source\": \"\",\n                \"baseUnit\": baseUnit,\n                \"parsed\": false,\n                \"absolute\": false\n            },\n            \"negative\": {\n                \"color\": \"\",\n                \"template\": \"\",\n                \"parts\": [],\n                \"source\": \"\",\n                \"baseUnit\": baseUnit,\n                \"parsed\": false,\n                \"absolute\": false\n            },\n            \"zero\": {\n                \"color\": \"\",\n                \"template\": \"\",\n                \"parts\": [],\n                \"source\": \"\",\n                \"baseUnit\": baseUnit,\n                \"parsed\": false,\n                \"absolute\": false\n            }\n        };\n        // Escape double vertical bars (that mean display one vertical bar)\n        format = format.replace(\"||\", $f63bdea45a89cf24$export$cea82ace3c81ccd9);\n        // Split it up and deal with different formats\n        let parts = format.split(\"|\");\n        info.positive.source = parts[0];\n        if (typeof parts[2] === \"undefined\") info.zero = info.positive;\n        else info.zero.source = parts[2];\n        if (typeof parts[1] === \"undefined\") info.negative = info.positive;\n        else info.negative.source = parts[1];\n        // Parse each\n        $e66f9343b5144e1a$export$79b2f7037acddd43(info, (_part, item)=>{\n            // Already parsed\n            if (item.parsed) return;\n            // Check cached\n            // TODO\n            // if (typeof this.getCache(item.source) !== \"undefined\") {\n            // \tinfo[part] = this.getCache(item.source);\n            // \treturn;\n            // }\n            // Begin parsing\n            let partFormat = item.source;\n            // Check for [] directives\n            let dirs = [];\n            dirs = item.source.match(/^\\[([^\\]]*)\\]/);\n            if (dirs && dirs.length && dirs[0] !== \"\") {\n                partFormat = item.source.substr(dirs[0].length);\n                item.color = dirs[1];\n            }\n            // Let TextFormatter split into chunks\n            let chunks = (0, $4b06370a9416d0ab$export$cfc95f342033cc43).chunk(partFormat, true);\n            for(let i = 0; i < chunks.length; i++){\n                let chunk = chunks[i];\n                // replace back double vertical bar\n                chunk.text = chunk.text.replace($f63bdea45a89cf24$export$cea82ace3c81ccd9, \"|\");\n                if (chunk.type === \"value\") {\n                    // Just \"Duration\"?\n                    // if (chunk.text.toLowerCase() === \"duration\") {\n                    // \tchunk.text = durationFormat;\n                    // }\n                    // Check for \"a\" (absolute) modifier\n                    if (chunk.text.match(/[yYMdDwhHKkmsSn]+a/)) {\n                        item.absolute = true;\n                        chunk.text = chunk.text.replace(/([yYMdDwhHKkmsSn]+)a/, \"$1\");\n                    }\n                    // Find all possible parts\n                    let matches = chunk.text.match(/y+|Y+|M+|d+|D+|w+|h+|H+|K+|k+|m+|s+|S+|n+/g);\n                    if (matches) // Populate template\n                    for(let x = 0; x < matches.length; x++){\n                        // Is it an alias?\n                        if (matches[x] == null) matches[x] = this._unitAliases[matches[x]];\n                        item.parts.push(matches[x]);\n                        chunk.text = chunk.text.replace(matches[x], $f63bdea45a89cf24$export$55fc5ffc49a23c34);\n                    }\n                }\n                // Apply to template\n                item.template += chunk.text;\n            }\n            // Apply style formatting\n            //item.template = TextFormatter.format(item.template, this.outputFormat);\n            // Save cache\n            // TODO\n            //this.setCache(item.source, item);\n            // Mark this as parsed\n            item.parsed = true;\n        });\n        // Save cache (the whole thing)\n        // TODO\n        //this.setCache(format, info);\n        return info;\n    }\n    /**\r\n     * Applies parsed format to a numeric value.\r\n     *\r\n     * @param value    Value\r\n     * @param details  Parsed format as returned by {parseFormat}\r\n     * @return Formatted duration\r\n     */ applyFormat(value, details) {\n        // Use absolute values\n        let negative = !details.absolute && value < this.get(\"negativeBase\");\n        value = Math.abs(value);\n        // Recalculate to milliseconds\n        let tstamp = this.toTimeStamp(value, details.baseUnit);\n        // Init return value\n        let res = details.template;\n        // Iterate through duration parts\n        for(let i = 0, len = details.parts.length; i < len; i++){\n            // Gather the part\n            let part = details.parts[i];\n            let unit = this._toTimeUnit(part.substr(0, 1));\n            let digits = part.length;\n            // Calculate current unit value\n            let ints;\n            const unitValue = this._getUnitValue(unit);\n            if (i < len - 1) ints = Math.floor(tstamp / unitValue);\n            else ints = Math.round(tstamp / unitValue);\n            res = res.replace($f63bdea45a89cf24$export$55fc5ffc49a23c34, $05b1b40b69b15016$export$e3f9b6bf3780ff6e(ints, digits, \"0\"));\n            // Reduce timestamp\n            tstamp -= ints * unitValue;\n        }\n        // Reapply negative sign\n        if (negative) res = \"-\" + res;\n        return res;\n    }\n    /**\r\n     * Converts numeric value to timestamp in milliseconds.\r\n     *\r\n     * @param value     A source value\r\n     * @param baseUnit  Base unit the source value is in: \"q\", \"s\", \"i\", \"h\", \"d\", \"w\", \"m\", \"y\"\r\n     * @return Value representation as a timestamp in milliseconds\r\n     */ toTimeStamp(value, baseUnit) {\n        return value * this._getUnitValue(baseUnit);\n    }\n    _toTimeUnit(code) {\n        switch(code){\n            case \"S\":\n                return \"millisecond\";\n            case \"s\":\n                return \"second\";\n            case \"m\":\n                return \"minute\";\n            case \"h\":\n                return \"hour\";\n            case \"d\":\n                return \"day\";\n            case \"w\":\n                return \"week\";\n            case \"M\":\n                return \"month\";\n            case \"y\":\n                return \"year\";\n        }\n    }\n    /**\r\n     * Returns appropriate default format for the value.\r\n     *\r\n     * If `maxValue` is sepcified, it will use that value to determine the time\r\n     * unit for the format.\r\n     *\r\n     * For example if your `baseUnit` is `\"second\"` and you pass in `10`, you\r\n     * will get `\"10\"`.\r\n     *\r\n     * However, you might want it to be formatted in the context of bigger scale,\r\n     * say 10 minutes (600 seconds). If you pass in `600` as `maxValue`, all\r\n     * values, including small ones will use format with minutes, e.g.:\r\n     * `00:10`, `00:50`, `12: 30`, etc.\r\n     *\r\n     * @param value     Value to format\r\n     * @param maxValue  Maximum value to be used to determine format\r\n     * @param baseUnit  Base unit of the value\r\n     * @return Format\r\n     */ getFormat(value, maxValue, baseUnit) {\n        // Is format override set?\n        if (this.get(\"durationFormat\") != null) return this.get(\"durationFormat\");\n        // Get base unit\n        if (!baseUnit) baseUnit = this.get(\"baseUnit\");\n        if (maxValue != null && value != maxValue) {\n            value = Math.abs(value);\n            maxValue = Math.abs(maxValue);\n            let maxUnit = this.getValueUnit(Math.max(value, maxValue), baseUnit);\n            return this.get(\"durationFormats\")[baseUnit][maxUnit];\n        } else {\n            let unit = this.getValueUnit(value, baseUnit);\n            return this.get(\"durationFormats\")[baseUnit][unit];\n        }\n    }\n    /**\r\n     * Returns value's closest denominator time unit, e.g 100 seconds is\r\n     * `\"minute\"`, while 59 seconds would still be `second`.\r\n     *\r\n     * @param value     Source duration value\r\n     * @param baseUnit  Base unit\r\n     * @return Denominator\r\n     */ getValueUnit(value, baseUnit) {\n        // Get base unit\n        if (!baseUnit) baseUnit = this.get(\"baseUnit\");\n        // Convert to milliseconds\n        let currentUnit;\n        let ms = this.getMilliseconds(value, baseUnit);\n        $e66f9343b5144e1a$export$1e016427912bfd78(this._getUnitValues(), (key, val)=>{\n            if (key == baseUnit || currentUnit) {\n                let num = ms / val;\n                if (num <= 1) {\n                    if (!currentUnit) currentUnit = key;\n                    return false;\n                }\n                currentUnit = key;\n            }\n            return true;\n        });\n        return currentUnit;\n    }\n    /**\r\n     * Converts value to milliseconds according to `baseUnit`.\r\n     *\r\n     * @param value     Source duration value\r\n     * @param baseUnit  Base unit\r\n     * @return Value in milliseconds\r\n     */ getMilliseconds(value, baseUnit) {\n        // Get base unit\n        if (!baseUnit) baseUnit = this.get(\"baseUnit\");\n        return value * this._getUnitValue(baseUnit);\n    }\n    _getUnitValue(timeUnit) {\n        return this._getUnitValues()[timeUnit];\n    }\n    _getUnitValues() {\n        return {\n            \"millisecond\": 1,\n            \"second\": 1000,\n            \"minute\": 60000,\n            \"hour\": 3600000,\n            \"day\": 86400000,\n            \"week\": 604800000,\n            \"month\": 2592000000,\n            \"year\": 31536000000\n        };\n    }\n}\n\n\n\n\n\n/**\r\n * amCharts 5 locale\r\n *\r\n * Locale: en\r\n * Language: International English\r\n * Author: Martynas Majeris\r\n *\r\n * Follow instructions in [on this page](https://www.amcharts.com/docs/v5/tutorials/creating-translations/) to make corrections or add new translations.\r\n *\r\n * ---\r\n * Edit but leave the header section above this line. You can remove any\r\n * subsequent comment sections.\r\n * ---\r\n *\r\n * Use this file as a template to create translations. Leave the key part in\r\n * English intact. Fill the value with a translation.\r\n *\r\n * Empty string means no translation, so default \"International English\"\r\n * will be used.\r\n *\r\n * If you need the translation to literally be an empty string, use `null`\r\n * instead.\r\n *\r\n * IMPORTANT:\r\n * When translating make good effort to keep the translation length\r\n * at least the same chartcount as the English, especially for short prompts.\r\n *\r\n * Having significantly longer prompts may distort the actual charts.\r\n *\r\n * NOTE:\r\n * Some prompts - like months or weekdays - come in two versions: full and\r\n * shortened.\r\n *\r\n * If there's no official shortened version of these in your language, and it\r\n * would not be possible to invent such short versions that don't seem weird\r\n * to native speakers of that language, fill those with the same as full\r\n * version.\r\n *\r\n * PLACEHOLDERS:\r\n * Some prompts have placeholders like \"%1\". Those will be replaced by actual\r\n * values during translation and should be retained in the translated prompts.\r\n *\r\n * Placeholder positions may be changed to better suit structure of the\r\n * sentence.\r\n *\r\n * For example \"From %1 to %2\", when actually used will replace \"%1\" with an\r\n * actual value representing range start, and \"%2\" will be replaced by end\r\n * value.\r\n *\r\n * E.g. in a Scrollbar for Value axis \"From %1 to %2\" will become\r\n * \"From 100 to 200\". You may translate \"From\" and \"to\", as well as re-arrange\r\n * the order of the prompt itself, but make sure the \"%1\" and \"%2\" remain, in\r\n * places where they will make sense.\r\n *\r\n * Save the file as language_LOCALE, i.e. `en_GB.ts`, `fr_FR.ts`, etc.\r\n */ var $8ced240747ebccef$export$2e2bcd8739ae039 = {\n    \"firstDayOfWeek\": 1,\n    // Number formatting options.\n    // \n    // Please check with the local standards which separator is accepted to be\n    // used for separating decimals, and which for thousands.\n    \"_decimalSeparator\": \".\",\n    \"_thousandSeparator\": \",\",\n    // Position of the percent sign in numbers\n    \"_percentPrefix\": null,\n    \"_percentSuffix\": \"%\",\n    // Suffixes for numbers\n    // When formatting numbers, big or small numers might be reformatted to\n    // shorter version, by applying a suffix.\n    // \n    // For example, 1000000 might become \"1m\".\n    // Or 1024 might become \"1KB\" if we're formatting byte numbers.\n    // \n    // This section defines such suffixes for all such cases.\n    \"_big_number_suffix_3\": \"k\",\n    \"_big_number_suffix_6\": \"M\",\n    \"_big_number_suffix_9\": \"G\",\n    \"_big_number_suffix_12\": \"T\",\n    \"_big_number_suffix_15\": \"P\",\n    \"_big_number_suffix_18\": \"E\",\n    \"_big_number_suffix_21\": \"Z\",\n    \"_big_number_suffix_24\": \"Y\",\n    \"_small_number_suffix_3\": \"m\",\n    \"_small_number_suffix_6\": \"\\u03BC\",\n    \"_small_number_suffix_9\": \"n\",\n    \"_small_number_suffix_12\": \"p\",\n    \"_small_number_suffix_15\": \"f\",\n    \"_small_number_suffix_18\": \"a\",\n    \"_small_number_suffix_21\": \"z\",\n    \"_small_number_suffix_24\": \"y\",\n    \"_byte_suffix_B\": \"B\",\n    \"_byte_suffix_KB\": \"KB\",\n    \"_byte_suffix_MB\": \"MB\",\n    \"_byte_suffix_GB\": \"GB\",\n    \"_byte_suffix_TB\": \"TB\",\n    \"_byte_suffix_PB\": \"PB\",\n    // Default date formats for various periods.\n    // \n    // This should reflect official or de facto formatting universally accepted\n    // in the country translation is being made for\n    // Available format codes here:\n    // https://www.amcharts.com/docs/v5/concepts/formatters/formatting-dates/#Format_codes\n    // \n    // This will be used when formatting date/time for particular granularity,\n    // e.g. \"_date_hour\" will be shown whenever we need to show time as hours.\n    // \n    // \"date\" is used as in default date format when showing standalone dates.\n    \"_date\": \"yyyy-MM-dd\",\n    \"_date_millisecond\": \"mm:ss SSS\",\n    \"_date_millisecond_full\": \"HH:mm:ss SSS\",\n    \"_date_second\": \"HH:mm:ss\",\n    \"_date_second_full\": \"HH:mm:ss\",\n    \"_date_minute\": \"HH:mm\",\n    \"_date_minute_full\": \"HH:mm - MMM dd, yyyy\",\n    \"_date_hour\": \"HH:mm\",\n    \"_date_hour_full\": \"HH:mm - MMM dd, yyyy\",\n    \"_date_day\": \"MMM dd\",\n    \"_date_day_full\": \"MMM dd, yyyy\",\n    \"_date_week\": \"ww\",\n    \"_date_week_full\": \"MMM dd, yyyy\",\n    \"_date_month\": \"MMM\",\n    \"_date_month_full\": \"MMM, yyyy\",\n    \"_date_year\": \"yyyy\",\n    // Default duration formats for various base units.\n    // \n    // This will be used by DurationFormatter to format numeric values into\n    // duration.\n    // \n    // Notice how each duration unit comes in several versions. This is to ensure\n    // that each base unit is shown correctly.\n    // \n    // For example, if we have baseUnit set to \"second\", meaning our duration is\n    // in seconds.\n    // \n    // If we pass in `50` to formatter, it will know that we have just 50 seconds\n    // (less than a minute) so it will use format in `\"_duration_second\"` (\"ss\"),\n    // and the formatted result will be in like `\"50\"`.\n    // \n    // If we pass in `70`, which is more than a minute, the formatter will switch\n    // to `\"_duration_second_minute\"` (\"mm:ss\"), resulting in \"01:10\" formatted\n    // text.\n    // \n    // Available codes here:\n    // https://www.amcharts.com/docs/v4/concepts/formatters/formatting-duration/#Available_Codes\n    \"_duration_millisecond\": \"SSS\",\n    \"_duration_millisecond_second\": \"ss.SSS\",\n    \"_duration_millisecond_minute\": \"mm:ss SSS\",\n    \"_duration_millisecond_hour\": \"hh:mm:ss SSS\",\n    \"_duration_millisecond_day\": \"d'd' mm:ss SSS\",\n    \"_duration_millisecond_week\": \"d'd' mm:ss SSS\",\n    \"_duration_millisecond_month\": \"M'm' dd'd' mm:ss SSS\",\n    \"_duration_millisecond_year\": \"y'y' MM'm' dd'd' mm:ss SSS\",\n    \"_duration_second\": \"ss\",\n    \"_duration_second_minute\": \"mm:ss\",\n    \"_duration_second_hour\": \"hh:mm:ss\",\n    \"_duration_second_day\": \"d'd' hh:mm:ss\",\n    \"_duration_second_week\": \"d'd' hh:mm:ss\",\n    \"_duration_second_month\": \"M'm' dd'd' hh:mm:ss\",\n    \"_duration_second_year\": \"y'y' MM'm' dd'd' hh:mm:ss\",\n    \"_duration_minute\": \"mm\",\n    \"_duration_minute_hour\": \"hh:mm\",\n    \"_duration_minute_day\": \"d'd' hh:mm\",\n    \"_duration_minute_week\": \"d'd' hh:mm\",\n    \"_duration_minute_month\": \"M'm' dd'd' hh:mm\",\n    \"_duration_minute_year\": \"y'y' MM'm' dd'd' hh:mm\",\n    \"_duration_hour\": \"hh'h'\",\n    \"_duration_hour_day\": \"d'd' hh'h'\",\n    \"_duration_hour_week\": \"d'd' hh'h'\",\n    \"_duration_hour_month\": \"M'm' dd'd' hh'h'\",\n    \"_duration_hour_year\": \"y'y' MM'm' dd'd' hh'h'\",\n    \"_duration_day\": \"d'd'\",\n    \"_duration_day_week\": \"d'd'\",\n    \"_duration_day_month\": \"M'm' dd'd'\",\n    \"_duration_day_year\": \"y'y' MM'm' dd'd'\",\n    \"_duration_week\": \"w'w'\",\n    \"_duration_week_month\": \"w'w'\",\n    \"_duration_week_year\": \"w'w'\",\n    \"_duration_month\": \"M'm'\",\n    \"_duration_month_year\": \"y'y' MM'm'\",\n    \"_duration_year\": \"y'y'\",\n    // Era translations\n    \"_era_ad\": \"AD\",\n    \"_era_bc\": \"BC\",\n    // Day part, used in 12-hour formats, e.g. 5 P.M.\n    // Please note that these come in 3 variants:\n    // * one letter (e.g. \"A\")\n    // * two letters (e.g. \"AM\")\n    // * two letters with dots (e.g. \"A.M.\")\n    // \n    // All three need to to be translated even if they are all the same. Some\n    // users might use one, some the other.\n    \"A\": \"\",\n    \"P\": \"\",\n    \"AM\": \"\",\n    \"PM\": \"\",\n    \"A.M.\": \"\",\n    \"P.M.\": \"\",\n    // Date-related stuff.\n    // \n    // When translating months, if there's a difference, use the form which is\n    // best for a full date, e.g. as you would use it in \"2018 January 1\".\n    // \n    // Note that May is listed twice. This is because in English May is the same\n    // in both long and short forms, while in other languages it may not be the\n    // case. Translate \"May\" to full word, while \"May(short)\" to shortened\n    // version.\n    // \n    // Should month names and weekdays be capitalized or not?\n    // \n    // Rule of thumb is this: if the names should always be capitalized,\n    // regardless of name position within date (\"January\", \"21st January 2018\",\n    // etc.) use capitalized names. Otherwise enter all lowercase.\n    // \n    // The date formatter will automatically capitalize names if they are the\n    // first (or only) word in resulting date.\n    \"January\": \"\",\n    \"February\": \"\",\n    \"March\": \"\",\n    \"April\": \"\",\n    \"May\": \"\",\n    \"June\": \"\",\n    \"July\": \"\",\n    \"August\": \"\",\n    \"September\": \"\",\n    \"October\": \"\",\n    \"November\": \"\",\n    \"December\": \"\",\n    \"Jan\": \"\",\n    \"Feb\": \"\",\n    \"Mar\": \"\",\n    \"Apr\": \"\",\n    \"May(short)\": \"May\",\n    \"Jun\": \"\",\n    \"Jul\": \"\",\n    \"Aug\": \"\",\n    \"Sep\": \"\",\n    \"Oct\": \"\",\n    \"Nov\": \"\",\n    \"Dec\": \"\",\n    // Weekdays.\n    \"Sunday\": \"\",\n    \"Monday\": \"\",\n    \"Tuesday\": \"\",\n    \"Wednesday\": \"\",\n    \"Thursday\": \"\",\n    \"Friday\": \"\",\n    \"Saturday\": \"\",\n    \"Sun\": \"\",\n    \"Mon\": \"\",\n    \"Tue\": \"\",\n    \"Wed\": \"\",\n    \"Thu\": \"\",\n    \"Fri\": \"\",\n    \"Sat\": \"\",\n    // Date ordinal function.\n    // \n    // This is used when adding number ordinal when formatting days in dates.\n    // \n    // E.g. \"January 1st\", \"February 2nd\".\n    // \n    // The function accepts day number, and returns a string to be added to the\n    // day, like in default English translation, if we pass in 2, we will receive\n    // \"nd\" back.\n    \"_dateOrd\": function(day) {\n        let res = \"th\";\n        if (day < 11 || day > 13) switch(day % 10){\n            case 1:\n                res = \"st\";\n                break;\n            case 2:\n                res = \"nd\";\n                break;\n            case 3:\n                res = \"rd\";\n                break;\n        }\n        return res;\n    },\n    // Various chart controls.\n    // Shown as a tooltip on zoom out button.\n    \"Zoom Out\": \"\",\n    // Timeline buttons\n    \"Play\": \"\",\n    \"Stop\": \"\",\n    // Chart's Legend screen reader title.\n    \"Legend\": \"\",\n    // Legend's item screen reader indicator.\n    \"Press ENTER to toggle\": \"\",\n    // Shown when the chart is busy loading something.\n    \"Loading\": \"\",\n    // Shown as the first button in the breadcrumb navigation, e.g.:\n    // Home > First level > ...\n    \"Home\": \"\",\n    // Chart types.\n    // Those are used as default screen reader titles for the main chart element\n    // unless developer has set some more descriptive title.\n    \"Chart\": \"\",\n    \"Serial chart\": \"\",\n    \"X/Y chart\": \"\",\n    \"Pie chart\": \"\",\n    \"Gauge chart\": \"\",\n    \"Radar chart\": \"\",\n    \"Sankey diagram\": \"\",\n    \"Flow diagram\": \"\",\n    \"Chord diagram\": \"\",\n    \"TreeMap chart\": \"\",\n    \"Force directed tree\": \"\",\n    \"Sliced chart\": \"\",\n    // Series types.\n    // Used to name series by type for screen readers if they do not have their\n    // name set.\n    \"Series\": \"\",\n    \"Candlestick Series\": \"\",\n    \"OHLC Series\": \"\",\n    \"Column Series\": \"\",\n    \"Line Series\": \"\",\n    \"Pie Slice Series\": \"\",\n    \"Funnel Series\": \"\",\n    \"Pyramid Series\": \"\",\n    \"X/Y Series\": \"\",\n    // Map-related stuff.\n    \"Map\": \"\",\n    \"Press ENTER to zoom in\": \"\",\n    \"Press ENTER to zoom out\": \"\",\n    \"Use arrow keys to zoom in and out\": \"\",\n    \"Use plus and minus keys on your keyboard to zoom in and out\": \"\",\n    // Export-related stuff.\n    // These prompts are used in Export menu labels.\n    // \n    // \"Export\" is the top-level menu item.\n    // \n    // \"Image\", \"Data\", \"Print\" as second-level indicating type of export\n    // operation.\n    // \n    // Leave actual format untranslated, unless you absolutely know that they\n    // would convey more meaning in some other way.\n    \"Export\": \"\",\n    \"Image\": \"\",\n    \"Data\": \"\",\n    \"Print\": \"\",\n    \"Press ENTER or use arrow keys to navigate\": \"\",\n    \"Press ENTER to open\": \"\",\n    \"Press ENTER to print.\": \"\",\n    \"Press ENTER to export as %1.\": \"\",\n    \"(Press ESC to close this message)\": \"\",\n    \"Image Export Complete\": \"\",\n    \"Export operation took longer than expected. Something might have gone wrong.\": \"\",\n    \"Saved from\": \"\",\n    \"PNG\": \"\",\n    \"JPG\": \"\",\n    \"GIF\": \"\",\n    \"SVG\": \"\",\n    \"PDF\": \"\",\n    \"JSON\": \"\",\n    \"CSV\": \"\",\n    \"XLSX\": \"\",\n    \"HTML\": \"\",\n    // Scrollbar-related stuff.\n    // \n    // Scrollbar is a control which can zoom and pan the axes on the chart.\n    // \n    // Each scrollbar has two grips: left or right (for horizontal scrollbar) or\n    // upper and lower (for vertical one).\n    // \n    // Prompts change in relation to whether Scrollbar is vertical or horizontal.\n    // \n    // The final section is used to indicate the current range of selection.\n    \"Use TAB to select grip buttons or left and right arrows to change selection\": \"\",\n    \"Use left and right arrows to move selection\": \"\",\n    \"Use left and right arrows to move left selection\": \"\",\n    \"Use left and right arrows to move right selection\": \"\",\n    \"Use TAB select grip buttons or up and down arrows to change selection\": \"\",\n    \"Use up and down arrows to move selection\": \"\",\n    \"Use up and down arrows to move lower selection\": \"\",\n    \"Use up and down arrows to move upper selection\": \"\",\n    \"From %1 to %2\": \"\",\n    \"From %1\": \"\",\n    \"To %1\": \"\",\n    // Data loader-related.\n    \"No parser available for file: %1\": \"\",\n    \"Error parsing file: %1\": \"\",\n    \"Unable to load file: %1\": \"\",\n    \"Invalid date\": \"\",\n    // Common actions\n    \"Close\": \"\",\n    \"Minimize\": \"\"\n};\n\n\nclass $a5f7473fad5303dc$export$ce4fe1c9e6520c1a extends (0, $baeade534ece7f4c$export$bc644a473284d944) {\n    _setDefaults() {\n        this.setPrivate(\"defaultLocale\", (0, $8ced240747ebccef$export$2e2bcd8739ae039));\n        super._setDefaults();\n    }\n    /**\r\n     * Returns a prompt translation.\r\n     *\r\n     * @param   prompt   Prompt to translate\r\n     * @param   locale   Target locale\r\n     * @param   ...rest  Parameters\r\n     * @return           Translation\r\n     */ translate(prompt, locale, ...rest) {\n        // Get langauge\n        if (!locale) locale = this._root.locale || this.getPrivate(\"defaultLocale\");\n        // Init translation\n        let translation = prompt;\n        let value = locale[prompt];\n        // Try to look for the translation\n        if (value === null) translation = \"\";\n        else if (value != null) // It might be an empty string\n        {\n            if (value) translation = value;\n        } else if (locale !== this.getPrivate(\"defaultLocale\")) // Try to look in default language\n        return this.translate(prompt, this.getPrivate(\"defaultLocale\"), ...rest);\n        // Replace %1, %2, etc params\n        if (rest.length) for(let len = rest.length, i = 0; i < len; ++i)translation = translation.split(\"%\" + (i + 1)).join(rest[i]);\n        // Return the translation\n        return translation;\n    }\n    /**\r\n     * Returns a prompt translation, including custom prompts.\r\n     *\r\n     * @param   prompt   Prompt to translate\r\n     * @param   locale   Target locale\r\n     * @param   ...rest  Parameters\r\n     * @return           Translation\r\n     */ translateAny(prompt, locale, ...rest) {\n        return this.translate(prompt, locale, ...rest);\n    }\n    /**\r\n     * Add a custom prompt to locale.\r\n     *\r\n     * @see {@link https://www.amcharts.com/docs/v5/concepts/locales/creating-translations/#Extending_locale_with_custom_prompts}\r\n     * @param  prompt       Source prompt\r\n     * @param  translation  Tanslation\r\n     * @param  locale       Target locale\r\n     */ setTranslationAny(prompt, translation, locale) {\n        const localeTarget = locale || this._root.locale;\n        localeTarget[prompt] = translation;\n    }\n    /**\r\n     * Add a batch of custom prompts.\r\n     *\r\n     * @since 5.3.3\r\n     * @see {@link https://www.amcharts.com/docs/v5/concepts/locales/creating-translations/#Extending_locale_with_custom_prompts}\r\n     * @param  translations  Translations\r\n     * @param  locale        Target locale\r\n     */ setTranslationsAny(translations, locale) {\n        $e66f9343b5144e1a$export$79b2f7037acddd43(translations, (key, val)=>{\n            this.setTranslationAny(key, val, locale);\n        });\n    }\n    translateEmpty(prompt, locale, ...rest) {\n        let translation = this.translate(prompt, locale, ...rest);\n        return translation == prompt ? \"\" : translation;\n    }\n    translateFunc(prompt, locale) {\n        if (this._root.locale[prompt]) return this._root.locale[prompt];\n        // Try to look in default language\n        if (locale !== this.getPrivate(\"defaultLocale\")) return this.translateFunc(prompt, this.getPrivate(\"defaultLocale\"));\n        // Fail - return empty function\n        return ()=>{\n            return \"\";\n        };\n    }\n    /**\r\n     * Translates a btach of prompts.\r\n     *\r\n     * @param  list    Array of prompts to translate\r\n     * @param  locale  Target locale\r\n     * @return         Array of translations\r\n     */ translateAll(list, locale) {\n        // Translate all items in the list\n        if (!this.isDefault()) return $2f30431acd054e2f$export$871de8747c9eaa88(list, (x)=>this.translate(x, locale));\n        else return list;\n    }\n    /**\r\n     * Returns `true` if the currently selected locale is a default locale.\r\n     *\r\n     * @return `true` if locale is default; `false` if it is not.\r\n     */ isDefault() {\n        return this.getPrivate(\"defaultLocale\") === this._root.locale;\n    }\n}\n\n\n\n\n\n\nclass $a953e95d35d4141a$export$14faa19a0f3bbeb2 {\n    constructor(root, isReal){\n        Object.defineProperty(this, \"_root\", {\n            enumerable: true,\n            configurable: true,\n            writable: true,\n            value: void 0\n        });\n        Object.defineProperty(this, \"_rules\", {\n            enumerable: true,\n            configurable: true,\n            writable: true,\n            value: {}\n        });\n        this._root = root;\n        if (!isReal) throw new Error(\"You cannot use `new Class()`, instead use `Class.new()`\");\n    }\n    /**\r\n     * Use this method to create an instance of this class.\r\n     *\r\n     * @see {@link https://www.amcharts.com/docs/v5/getting-started/#New_element_syntax} for more info\r\n     * @param   root      Root element\r\n     * @param   settings  Settings\r\n     * @param   template  Template\r\n     * @return            Instantiated object\r\n     */ static new(root) {\n        const x = new this(root, true);\n        x.setupDefaultRules();\n        return x;\n    }\n    setupDefaultRules() {}\n    /**\r\n     * Looks up the rules for a specific theme class.\r\n     *\r\n     * @see {@link https://www.amcharts.com/docs/v5/themes/} for more info\r\n     * @param   themeClass Theme class\r\n     * @return             Array<IRule<A>>\r\n     */ _lookupRules(themeClass) {\n        return this._rules[themeClass];\n    }\n    /**\r\n     * Creates a [[Template]] for specific theme class and tags.\r\n     *\r\n     * NOTE: the difference from `rule()` is that `ruleRaw()` does not do any\r\n     * type checks.\r\n     *\r\n     * @see {@link https://www.amcharts.com/docs/v5/themes/} for more info\r\n     * @param   themeClass Theme class\r\n     * @param   themeTags  Theme tags\r\n     * @return             Template\r\n     */ ruleRaw(themeClass, themeTags = []) {\n        let rules = this._rules[themeClass];\n        if (!rules) rules = this._rules[themeClass] = [];\n        themeTags.sort($919e90129af4490b$export$398604a469f7de9a);\n        const { index: index, found: found } = $2f30431acd054e2f$export$5637f53fe994488d(rules, (x)=>{\n            const order = $919e90129af4490b$export$398604a469f7de9a(x.tags.length, themeTags.length);\n            if (order === 0) return $919e90129af4490b$export$cb07857b027678fa(x.tags, themeTags, $919e90129af4490b$export$398604a469f7de9a);\n            else return order;\n        });\n        if (found) return rules[index].template;\n        else {\n            const template = (0, $2d9a18dcb72760f7$export$14416b8d99d47caa).new({});\n            rules.splice(index, 0, {\n                tags: themeTags,\n                template: template\n            });\n            return template;\n        }\n    }\n    /**\r\n     * Creates a [[Template]] for specific theme class and tags.\r\n     *\r\n     * @see {@link https://www.amcharts.com/docs/v5/themes/} for more info\r\n     * @param   themeClass Theme class\r\n     * @param   themeTags  Theme tags\r\n     * @return             Template\r\n     */ rule(themeClass, themeTags = []) {\n        return this.ruleRaw(themeClass, themeTags);\n    }\n}\n\n\n\n\n\n\nfunction $c53b0c859cf33b39$export$130a5dc1bc9cd8e1(rule, key, ic, name) {\n    // TODO this shouldn't use get, figure out a better way\n    rule.set(key, ic.get(name));\n    ic.on(name, (value)=>{\n        rule.set(key, value);\n    });\n}\nclass $c53b0c859cf33b39$export$48bc85c4a6e4243b extends (0, $a953e95d35d4141a$export$14faa19a0f3bbeb2) {\n    setupDefaultRules() {\n        super.setupDefaultRules();\n        const language = this._root.language;\n        const ic = this._root.interfaceColors;\n        const horizontalLayout = this._root.horizontalLayout;\n        const verticalLayout = this._root.verticalLayout;\n        const r = this.rule.bind(this);\n        /**\r\n         * ========================================================================\r\n         * core\r\n         * ========================================================================\r\n         */ r(\"InterfaceColors\").setAll({\n            stroke: (0, $389de129b6cd18b1$export$892596cec99bc70e).fromHex(0xe5e5e5),\n            fill: (0, $389de129b6cd18b1$export$892596cec99bc70e).fromHex(0xf3f3f3),\n            primaryButton: (0, $389de129b6cd18b1$export$892596cec99bc70e).fromHex(0x6794dc),\n            primaryButtonHover: (0, $389de129b6cd18b1$export$892596cec99bc70e).fromHex(0x6771dc),\n            primaryButtonDown: (0, $389de129b6cd18b1$export$892596cec99bc70e).fromHex(0x68dc76),\n            primaryButtonActive: (0, $389de129b6cd18b1$export$892596cec99bc70e).fromHex(0x68dc76),\n            primaryButtonDisabled: (0, $389de129b6cd18b1$export$892596cec99bc70e).fromHex(0xdadada),\n            primaryButtonTextDisabled: (0, $389de129b6cd18b1$export$892596cec99bc70e).fromHex(0xffffff),\n            primaryButtonText: (0, $389de129b6cd18b1$export$892596cec99bc70e).fromHex(0xffffff),\n            primaryButtonStroke: (0, $389de129b6cd18b1$export$892596cec99bc70e).fromHex(0xffffff),\n            secondaryButton: (0, $389de129b6cd18b1$export$892596cec99bc70e).fromHex(0xd9d9d9),\n            secondaryButtonHover: (0, $389de129b6cd18b1$export$892596cec99bc70e).fromHex(0xa3a3a3),\n            secondaryButtonDown: (0, $389de129b6cd18b1$export$892596cec99bc70e).fromHex(0x8d8d8d),\n            secondaryButtonActive: (0, $389de129b6cd18b1$export$892596cec99bc70e).fromHex(0xe6e6e6),\n            secondaryButtonText: (0, $389de129b6cd18b1$export$892596cec99bc70e).fromHex(0x000000),\n            secondaryButtonStroke: (0, $389de129b6cd18b1$export$892596cec99bc70e).fromHex(0xffffff),\n            grid: (0, $389de129b6cd18b1$export$892596cec99bc70e).fromHex(0x000000),\n            background: (0, $389de129b6cd18b1$export$892596cec99bc70e).fromHex(0xffffff),\n            alternativeBackground: (0, $389de129b6cd18b1$export$892596cec99bc70e).fromHex(0x000000),\n            text: (0, $389de129b6cd18b1$export$892596cec99bc70e).fromHex(0x000000),\n            alternativeText: (0, $389de129b6cd18b1$export$892596cec99bc70e).fromHex(0xffffff),\n            disabled: (0, $389de129b6cd18b1$export$892596cec99bc70e).fromHex(0xadadad),\n            positive: (0, $389de129b6cd18b1$export$892596cec99bc70e).fromHex(0x50b300),\n            negative: (0, $389de129b6cd18b1$export$892596cec99bc70e).fromHex(0xb30000)\n        });\n        {\n            const rule = r(\"ColorSet\");\n            rule.setAll({\n                passOptions: {\n                    hue: 0.05,\n                    saturation: 0,\n                    lightness: 0\n                },\n                colors: [\n                    (0, $389de129b6cd18b1$export$892596cec99bc70e).fromHex(0x67b7dc)\n                ],\n                step: 1,\n                //baseColor: Color.fromRGB(103, 183, 220),\n                //count: 20,\n                reuse: false,\n                startIndex: 0\n            });\n            rule.setPrivate(\"currentStep\", 0);\n            rule.setPrivate(\"currentPass\", 0);\n        }\n        r(\"Entity\").setAll({\n            stateAnimationDuration: 0,\n            stateAnimationEasing: $b4231ef84a5f8a61$export$ca49d7cd8ea40ba7($b4231ef84a5f8a61$export$bdd5293f3cf7a909)\n        });\n        r(\"Component\").setAll({\n            interpolationDuration: 0,\n            interpolationEasing: $b4231ef84a5f8a61$export$ca49d7cd8ea40ba7($b4231ef84a5f8a61$export$bdd5293f3cf7a909)\n        });\n        r(\"Sprite\").setAll({\n            visible: true,\n            scale: 1,\n            opacity: 1,\n            rotation: 0,\n            position: \"relative\",\n            tooltipX: (0, $bd0d0c10fd30006b$export$888d047b0ce6de72),\n            tooltipY: (0, $bd0d0c10fd30006b$export$888d047b0ce6de72),\n            tooltipPosition: \"fixed\",\n            isMeasured: true\n        });\n        r(\"Sprite\").states.create(\"default\", {\n            \"visible\": true,\n            opacity: 1\n        });\n        r(\"Container\").setAll({\n            interactiveChildren: true,\n            setStateOnChildren: false\n        });\n        r(\"Graphics\").setAll({\n            strokeWidth: 1\n        });\n        r(\"Chart\").setAll({\n            width: (0, $bd0d0c10fd30006b$export$46342ea78d85883c),\n            height: (0, $bd0d0c10fd30006b$export$46342ea78d85883c),\n            interactiveChildren: false\n        });\n        r(\"ZoomableContainer\").setAll({\n            width: (0, $bd0d0c10fd30006b$export$46342ea78d85883c),\n            height: (0, $bd0d0c10fd30006b$export$46342ea78d85883c),\n            wheelable: true,\n            pinchZoom: true,\n            maxZoomLevel: 32,\n            minZoomLevel: 1,\n            zoomStep: 2,\n            animationEasing: $b4231ef84a5f8a61$export$ca49d7cd8ea40ba7($b4231ef84a5f8a61$export$bdd5293f3cf7a909),\n            animationDuration: 600,\n            maxPanOut: 0.4\n        });\n        /**\r\n         * ------------------------------------------------------------------------\r\n         * core: alignment\r\n         * ------------------------------------------------------------------------\r\n         */ r(\"Sprite\", [\n            \"horizontal\",\n            \"center\"\n        ]).setAll({\n            centerX: (0, $bd0d0c10fd30006b$export$888d047b0ce6de72),\n            x: (0, $bd0d0c10fd30006b$export$888d047b0ce6de72)\n        });\n        r(\"Sprite\", [\n            \"vertical\",\n            \"center\"\n        ]).setAll({\n            centerY: (0, $bd0d0c10fd30006b$export$888d047b0ce6de72),\n            y: (0, $bd0d0c10fd30006b$export$888d047b0ce6de72)\n        });\n        r(\"Container\", [\n            \"horizontal\",\n            \"layout\"\n        ]).setAll({\n            layout: horizontalLayout\n        });\n        r(\"Container\", [\n            \"vertical\",\n            \"layout\"\n        ]).setAll({\n            layout: verticalLayout\n        });\n        /**\r\n         * ------------------------------------------------------------------------\r\n         * core: patterns\r\n         * ------------------------------------------------------------------------\r\n         */ r(\"Pattern\").setAll({\n            repetition: \"repeat\",\n            width: 50,\n            height: 50,\n            rotation: 0,\n            fillOpacity: 1\n        });\n        r(\"LinePattern\").setAll({\n            gap: 6,\n            colorOpacity: 1,\n            width: 49,\n            height: 49\n        });\n        r(\"RectanglePattern\").setAll({\n            gap: 6,\n            checkered: false,\n            centered: true,\n            maxWidth: 5,\n            maxHeight: 5,\n            width: 48,\n            height: 48,\n            strokeWidth: 0\n        });\n        r(\"CirclePattern\").setAll({\n            gap: 5,\n            checkered: false,\n            centered: false,\n            radius: 3,\n            strokeWidth: 0,\n            width: 45,\n            height: 45\n        });\n        r(\"GrainPattern\").setAll({\n            width: 200,\n            height: 200,\n            colors: [\n                (0, $389de129b6cd18b1$export$892596cec99bc70e).fromHex(0x000000)\n            ],\n            size: 1,\n            horizontalGap: 0,\n            verticalGap: 0,\n            density: 1,\n            minOpacity: 0,\n            maxOpacity: 0.2\n        });\n        {\n            const rule = r(\"PatternSet\");\n            rule.setAll({\n                step: 1\n            });\n            $c53b0c859cf33b39$export$130a5dc1bc9cd8e1(rule, \"color\", ic, \"stroke\");\n        }\n        /**\r\n         * ------------------------------------------------------------------------\r\n         * core: gradients\r\n         * ------------------------------------------------------------------------\r\n         */ r(\"LinearGradient\").setAll({\n            rotation: 90\n        });\n        /**\r\n         * ------------------------------------------------------------------------\r\n         * core: Legend\r\n         * ------------------------------------------------------------------------\r\n         */ r(\"Legend\").setAll({\n            fillField: \"fill\",\n            strokeField: \"stroke\",\n            nameField: \"name\",\n            layout: (0, $9961b4caf46ffbfc$export$7d2b12578154a735).new(this._root, {}),\n            layer: 30,\n            clickTarget: \"itemContainer\"\n        });\n        // Class: Container\n        r(\"Container\", [\n            \"legend\",\n            \"item\",\n            \"itemcontainer\"\n        ]).setAll({\n            paddingLeft: 5,\n            paddingRight: 5,\n            paddingBottom: 5,\n            paddingTop: 5,\n            layout: horizontalLayout,\n            setStateOnChildren: true,\n            interactiveChildren: false,\n            ariaChecked: true,\n            focusable: true,\n            ariaLabel: language.translate(\"Press ENTER to toggle\"),\n            role: \"checkbox\"\n        });\n        {\n            const rule = r(\"Rectangle\", [\n                \"legend\",\n                \"item\",\n                \"background\"\n            ]);\n            rule.setAll({\n                fillOpacity: 0\n            });\n            $c53b0c859cf33b39$export$130a5dc1bc9cd8e1(rule, \"fill\", ic, \"background\");\n        }\n        r(\"Container\", [\n            \"legend\",\n            \"marker\"\n        ]).setAll({\n            setStateOnChildren: true,\n            centerY: (0, $bd0d0c10fd30006b$export$888d047b0ce6de72),\n            paddingLeft: 0,\n            paddingRight: 0,\n            paddingBottom: 0,\n            paddingTop: 0,\n            width: 18,\n            height: 18\n        });\n        r(\"RoundedRectangle\", [\n            \"legend\",\n            \"marker\",\n            \"rectangle\"\n        ]).setAll({\n            width: (0, $bd0d0c10fd30006b$export$46342ea78d85883c),\n            height: (0, $bd0d0c10fd30006b$export$46342ea78d85883c),\n            cornerRadiusBL: 3,\n            cornerRadiusTL: 3,\n            cornerRadiusBR: 3,\n            cornerRadiusTR: 3\n        });\n        {\n            const rule = r(\"RoundedRectangle\", [\n                \"legend\",\n                \"marker\",\n                \"rectangle\"\n            ]).states.create(\"disabled\", {});\n            $c53b0c859cf33b39$export$130a5dc1bc9cd8e1(rule, \"fill\", ic, \"disabled\");\n            $c53b0c859cf33b39$export$130a5dc1bc9cd8e1(rule, \"stroke\", ic, \"disabled\");\n        }\n        r(\"Label\", [\n            \"legend\",\n            \"label\"\n        ]).setAll({\n            centerY: (0, $bd0d0c10fd30006b$export$888d047b0ce6de72),\n            marginLeft: 5,\n            paddingRight: 0,\n            paddingLeft: 0,\n            paddingTop: 0,\n            paddingBottom: 0,\n            populateText: true\n        });\n        {\n            const rule = r(\"Label\", [\n                \"legend\",\n                \"label\"\n            ]).states.create(\"disabled\", {});\n            $c53b0c859cf33b39$export$130a5dc1bc9cd8e1(rule, \"fill\", ic, \"disabled\");\n        }\n        r(\"Label\", [\n            \"legend\",\n            \"value\",\n            \"label\"\n        ]).setAll({\n            centerY: (0, $bd0d0c10fd30006b$export$888d047b0ce6de72),\n            marginLeft: 5,\n            paddingRight: 0,\n            paddingLeft: 0,\n            paddingTop: 0,\n            paddingBottom: 0,\n            width: 50,\n            centerX: (0, $bd0d0c10fd30006b$export$46342ea78d85883c),\n            populateText: true\n        });\n        {\n            const rule = r(\"Label\", [\n                \"legend\",\n                \"value\",\n                \"label\"\n            ]).states.create(\"disabled\", {});\n            $c53b0c859cf33b39$export$130a5dc1bc9cd8e1(rule, \"fill\", ic, \"disabled\");\n        }\n        /**\r\n         * ------------------------------------------------------------------------\r\n         * core: HeatLegend\r\n         * ------------------------------------------------------------------------\r\n         */ r(\"HeatLegend\").setAll({\n            stepCount: 1\n        });\n        r(\"RoundedRectangle\", [\n            \"heatlegend\",\n            \"marker\"\n        ]).setAll({\n            cornerRadiusTR: 0,\n            cornerRadiusBR: 0,\n            cornerRadiusTL: 0,\n            cornerRadiusBL: 0\n        });\n        r(\"RoundedRectangle\", [\n            \"vertical\",\n            \"heatlegend\",\n            \"marker\"\n        ]).setAll({\n            height: (0, $bd0d0c10fd30006b$export$46342ea78d85883c),\n            width: 15\n        });\n        r(\"RoundedRectangle\", [\n            \"horizontal\",\n            \"heatlegend\",\n            \"marker\"\n        ]).setAll({\n            width: (0, $bd0d0c10fd30006b$export$46342ea78d85883c),\n            height: 15\n        });\n        r(\"HeatLegend\", [\n            \"vertical\"\n        ]).setAll({\n            height: (0, $bd0d0c10fd30006b$export$46342ea78d85883c)\n        });\n        r(\"HeatLegend\", [\n            \"horizontal\"\n        ]).setAll({\n            width: (0, $bd0d0c10fd30006b$export$46342ea78d85883c)\n        });\n        r(\"Label\", [\n            \"heatlegend\",\n            \"start\"\n        ]).setAll({\n            paddingLeft: 5,\n            paddingRight: 5,\n            paddingTop: 5,\n            paddingBottom: 5\n        });\n        r(\"Label\", [\n            \"heatlegend\",\n            \"end\"\n        ]).setAll({\n            paddingLeft: 5,\n            paddingRight: 5,\n            paddingTop: 5,\n            paddingBottom: 5\n        });\n        /**\r\n         * ------------------------------------------------------------------------\r\n         * core: Labels\r\n         * ------------------------------------------------------------------------\r\n         */ {\n            const rule = r(\"Label\");\n            rule.setAll({\n                paddingTop: 8,\n                paddingBottom: 8,\n                paddingLeft: 10,\n                paddingRight: 10,\n                fontFamily: \"-apple-system, BlinkMacSystemFont, \\\"Segoe UI\\\", Roboto, Helvetica, Arial, sans-serif, \\\"Apple Color Emoji\\\", \\\"Segoe UI Emoji\\\", \\\"Segoe UI Symbol\\\"\",\n                fontSize: \"1em\",\n                populateText: false\n            });\n            $c53b0c859cf33b39$export$130a5dc1bc9cd8e1(rule, \"fill\", ic, \"text\");\n        }\n        r(\"RadialLabel\").setAll({\n            textType: \"regular\",\n            centerY: (0, $bd0d0c10fd30006b$export$888d047b0ce6de72),\n            centerX: (0, $bd0d0c10fd30006b$export$888d047b0ce6de72),\n            inside: false,\n            radius: 0,\n            baseRadius: (0, $bd0d0c10fd30006b$export$46342ea78d85883c),\n            orientation: \"auto\",\n            textAlign: \"center\"\n        });\n        r(\"EditableLabel\").setAll({\n            editOn: \"click\",\n            //setStateOnChildren: true,\n            themeTags: [\n                \"editablelabel\"\n            ],\n            multiLine: true\n        });\n        r(\"RoundedRectangle\", [\n            \"editablelabel\",\n            \"background\"\n        ]).setAll({\n            fillOpacity: 0,\n            fill: (0, $389de129b6cd18b1$export$892596cec99bc70e).fromHex(0x000000),\n            cornerRadiusBL: 3,\n            cornerRadiusBR: 3,\n            cornerRadiusTL: 3,\n            cornerRadiusTR: 3,\n            strokeOpacity: 0,\n            stroke: (0, $389de129b6cd18b1$export$892596cec99bc70e).fromHex(0x000000)\n        });\n        r(\"RoundedRectangle\", [\n            \"editablelabel\",\n            \"background\"\n        ]).states.create(\"active\", {\n            strokeOpacity: 0.2\n        });\n        /**\r\n         * ------------------------------------------------------------------------\r\n         * core: Elements and shapes\r\n         * ------------------------------------------------------------------------\r\n         */ r(\"RoundedRectangle\").setAll({\n            cornerRadiusTL: 8,\n            cornerRadiusBL: 8,\n            cornerRadiusTR: 8,\n            cornerRadiusBR: 8\n        });\n        r(\"PointedRectangle\").setAll({\n            pointerBaseWidth: 15,\n            pointerLength: 10,\n            cornerRadius: 8\n        });\n        r(\"Slice\").setAll({\n            shiftRadius: 0,\n            dRadius: 0,\n            dInnerRadius: 0\n        });\n        {\n            const rule = r(\"Tick\");\n            rule.setAll({\n                strokeOpacity: .15,\n                isMeasured: false,\n                length: 4.5,\n                position: \"absolute\",\n                crisp: true\n            });\n            $c53b0c859cf33b39$export$130a5dc1bc9cd8e1(rule, \"stroke\", ic, \"grid\");\n        }\n        r(\"Bullet\").setAll({\n            locationX: 0.5,\n            locationY: 0.5\n        });\n        /**\r\n         * ------------------------------------------------------------------------\r\n         * core: Tooltip\r\n         * ------------------------------------------------------------------------\r\n         */ r(\"Tooltip\").setAll({\n            position: \"absolute\",\n            getFillFromSprite: true,\n            getStrokeFromSprite: false,\n            autoTextColor: true,\n            paddingTop: 9,\n            paddingBottom: 8,\n            paddingLeft: 10,\n            paddingRight: 10,\n            marginBottom: 5,\n            pointerOrientation: \"vertical\",\n            centerX: (0, $bd0d0c10fd30006b$export$888d047b0ce6de72),\n            centerY: (0, $bd0d0c10fd30006b$export$888d047b0ce6de72),\n            animationEasing: $b4231ef84a5f8a61$export$ca49d7cd8ea40ba7($b4231ef84a5f8a61$export$bdd5293f3cf7a909),\n            exportable: false\n        });\n        r(\"Polygon\").setAll({\n            animationEasing: $b4231ef84a5f8a61$export$ca49d7cd8ea40ba7($b4231ef84a5f8a61$export$bdd5293f3cf7a909)\n        });\n        {\n            const rule = r(\"PointedRectangle\", [\n                \"tooltip\",\n                \"background\"\n            ]);\n            rule.setAll({\n                strokeOpacity: 0.9,\n                cornerRadius: 4,\n                pointerLength: 4,\n                pointerBaseWidth: 8,\n                fillOpacity: 0.9,\n                stroke: (0, $389de129b6cd18b1$export$892596cec99bc70e).fromHex(0xffffff)\n            });\n        }\n        {\n            const rule = r(\"Label\", [\n                \"tooltip\"\n            ]);\n            rule.setAll({\n                role: \"tooltip\",\n                populateText: true,\n                paddingRight: 0,\n                paddingTop: 0,\n                paddingLeft: 0,\n                paddingBottom: 0\n            });\n            $c53b0c859cf33b39$export$130a5dc1bc9cd8e1(rule, \"fill\", ic, \"alternativeText\");\n        }\n        /**\r\n         * ------------------------------------------------------------------------\r\n         * core: Button\r\n         * ------------------------------------------------------------------------\r\n         */ r(\"Button\").setAll({\n            paddingTop: 8,\n            paddingBottom: 8,\n            paddingLeft: 10,\n            paddingRight: 10,\n            interactive: true,\n            layout: horizontalLayout,\n            interactiveChildren: false,\n            setStateOnChildren: true,\n            focusable: true\n        });\n        r(\"Button\").states.create(\"hover\", {});\n        r(\"Button\").states.create(\"down\", {\n            stateAnimationDuration: 0\n        });\n        r(\"Button\").states.create(\"active\", {});\n        r(\"Button\").states.create(\"disabled\", {\n            forceInactive: true\n        });\n        {\n            const rule = r(\"RoundedRectangle\", [\n                \"button\",\n                \"background\"\n            ]);\n            $c53b0c859cf33b39$export$130a5dc1bc9cd8e1(rule, \"fill\", ic, \"primaryButton\");\n            $c53b0c859cf33b39$export$130a5dc1bc9cd8e1(rule, \"stroke\", ic, \"primaryButtonStroke\");\n        }\n        {\n            const rule = r(\"RoundedRectangle\", [\n                \"button\",\n                \"background\"\n            ]).states.create(\"hover\", {});\n            $c53b0c859cf33b39$export$130a5dc1bc9cd8e1(rule, \"fill\", ic, \"primaryButtonHover\");\n        }\n        {\n            const rule = r(\"RoundedRectangle\", [\n                \"button\",\n                \"background\"\n            ]).states.create(\"down\", {\n                stateAnimationDuration: 0\n            });\n            $c53b0c859cf33b39$export$130a5dc1bc9cd8e1(rule, \"fill\", ic, \"primaryButtonDown\");\n        }\n        {\n            const rule = r(\"RoundedRectangle\", [\n                \"button\",\n                \"background\"\n            ]).states.create(\"active\", {});\n            $c53b0c859cf33b39$export$130a5dc1bc9cd8e1(rule, \"fill\", ic, \"primaryButtonActive\");\n        }\n        {\n            const rule = r(\"RoundedRectangle\", [\n                \"button\",\n                \"background\"\n            ]).states.create(\"disabled\", {});\n            $c53b0c859cf33b39$export$130a5dc1bc9cd8e1(rule, \"fill\", ic, \"primaryButtonDisabled\");\n        }\n        {\n            const rule = r(\"Graphics\", [\n                \"button\",\n                \"icon\"\n            ]).states.create(\"disabled\", {});\n            $c53b0c859cf33b39$export$130a5dc1bc9cd8e1(rule, \"fill\", ic, \"primaryButtonTextDisabled\");\n        }\n        {\n            const rule = r(\"Label\", [\n                \"button\"\n            ]).states.create(\"disabled\", {});\n            $c53b0c859cf33b39$export$130a5dc1bc9cd8e1(rule, \"fill\", ic, \"primaryButtonTextDisabled\");\n        }\n        {\n            const rule = r(\"Graphics\", [\n                \"button\",\n                \"icon\"\n            ]);\n            rule.setAll({\n                forceInactive: true\n            });\n            $c53b0c859cf33b39$export$130a5dc1bc9cd8e1(rule, \"stroke\", ic, \"primaryButtonText\");\n        }\n        {\n            const rule = r(\"Label\", [\n                \"button\"\n            ]);\n            $c53b0c859cf33b39$export$130a5dc1bc9cd8e1(rule, \"fill\", ic, \"primaryButtonText\");\n        }\n        /**\r\n         * ------------------------------------------------------------------------\r\n         * charts/xy: ZoomOutButton\r\n         * ------------------------------------------------------------------------\r\n         */ r(\"Button\", [\n            \"zoom\"\n        ]).setAll({\n            paddingTop: 18,\n            paddingBottom: 18,\n            paddingLeft: 12,\n            paddingRight: 12,\n            centerX: 46,\n            centerY: -10,\n            y: 0,\n            x: (0, $bd0d0c10fd30006b$export$46342ea78d85883c),\n            role: \"button\",\n            ariaLabel: language.translate(\"Zoom Out\"),\n            layer: 30\n        });\n        {\n            const rule = r(\"RoundedRectangle\", [\n                \"background\",\n                \"button\",\n                \"zoom\"\n            ]);\n            rule.setAll({\n                cornerRadiusBL: 40,\n                cornerRadiusBR: 40,\n                cornerRadiusTL: 40,\n                cornerRadiusTR: 40\n            });\n            $c53b0c859cf33b39$export$130a5dc1bc9cd8e1(rule, \"fill\", ic, \"primaryButton\");\n        }\n        {\n            const rule = r(\"RoundedRectangle\", [\n                \"background\",\n                \"button\",\n                \"zoom\"\n            ]).states.create(\"hover\", {});\n            $c53b0c859cf33b39$export$130a5dc1bc9cd8e1(rule, \"fill\", ic, \"primaryButtonHover\");\n        }\n        {\n            const rule = r(\"RoundedRectangle\", [\n                \"background\",\n                \"button\",\n                \"zoom\"\n            ]).states.create(\"down\", {\n                stateAnimationDuration: 0\n            });\n            $c53b0c859cf33b39$export$130a5dc1bc9cd8e1(rule, \"fill\", ic, \"primaryButtonDown\");\n        }\n        {\n            const rule = r(\"Graphics\", [\n                \"icon\",\n                \"button\",\n                \"zoom\"\n            ]);\n            rule.setAll({\n                crisp: true,\n                strokeOpacity: 0.7,\n                draw: (display)=>{\n                    display.moveTo(0, 0);\n                    display.lineTo(12, 0);\n                }\n            });\n            $c53b0c859cf33b39$export$130a5dc1bc9cd8e1(rule, \"stroke\", ic, \"primaryButtonText\");\n        }\n        /**\r\n         * ------------------------------------------------------------------------\r\n         * core: ResizeButton\r\n         * ------------------------------------------------------------------------\r\n         */ r(\"Button\", [\n            \"resize\"\n        ]).setAll({\n            paddingTop: 9,\n            paddingBottom: 9,\n            paddingLeft: 13,\n            paddingRight: 13,\n            draggable: true,\n            centerX: (0, $bd0d0c10fd30006b$export$888d047b0ce6de72),\n            centerY: (0, $bd0d0c10fd30006b$export$888d047b0ce6de72),\n            position: \"absolute\",\n            role: \"slider\",\n            ariaValueMin: \"0\",\n            ariaValueMax: \"100\",\n            ariaLabel: language.translate(\"Use up and down arrows to move selection\")\n        });\n        {\n            const rule = r(\"RoundedRectangle\", [\n                \"background\",\n                \"resize\",\n                \"button\"\n            ]);\n            rule.setAll({\n                cornerRadiusBL: 40,\n                cornerRadiusBR: 40,\n                cornerRadiusTL: 40,\n                cornerRadiusTR: 40\n            });\n            $c53b0c859cf33b39$export$130a5dc1bc9cd8e1(rule, \"fill\", ic, \"secondaryButton\");\n            $c53b0c859cf33b39$export$130a5dc1bc9cd8e1(rule, \"stroke\", ic, \"secondaryButtonStroke\");\n        }\n        {\n            const rule = r(\"RoundedRectangle\", [\n                \"background\",\n                \"resize\",\n                \"button\"\n            ]).states.create(\"hover\", {});\n            $c53b0c859cf33b39$export$130a5dc1bc9cd8e1(rule, \"fill\", ic, \"secondaryButtonHover\");\n        }\n        {\n            const rule = r(\"RoundedRectangle\", [\n                \"background\",\n                \"resize\",\n                \"button\"\n            ]).states.create(\"down\", {\n                stateAnimationDuration: 0\n            });\n            $c53b0c859cf33b39$export$130a5dc1bc9cd8e1(rule, \"fill\", ic, \"secondaryButtonDown\");\n        }\n        {\n            const rule = r(\"Graphics\", [\n                \"resize\",\n                \"button\",\n                \"icon\"\n            ]);\n            rule.setAll({\n                interactive: false,\n                crisp: true,\n                strokeOpacity: 0.5,\n                draw: (display)=>{\n                    display.moveTo(0, 0.5);\n                    display.lineTo(0, 12.5);\n                    display.moveTo(4, 0.5);\n                    display.lineTo(4, 12.5);\n                }\n            });\n            $c53b0c859cf33b39$export$130a5dc1bc9cd8e1(rule, \"stroke\", ic, \"secondaryButtonText\");\n        }\n        r(\"Button\", [\n            \"resize\",\n            \"vertical\"\n        ]).setAll({\n            rotation: 90,\n            cursorOverStyle: \"ns-resize\"\n        });\n        r(\"Button\", [\n            \"resize\",\n            \"horizontal\"\n        ]).setAll({\n            cursorOverStyle: \"ew-resize\"\n        });\n        /**\r\n         * ------------------------------------------------------------------------\r\n         * core: PlayButton\r\n         * ------------------------------------------------------------------------\r\n         */ r(\"Button\", [\n            \"play\"\n        ]).setAll({\n            paddingTop: 13,\n            paddingBottom: 13,\n            paddingLeft: 14,\n            paddingRight: 14,\n            ariaLabel: language.translate(\"Play\"),\n            toggleKey: \"active\"\n        });\n        {\n            const rule = r(\"RoundedRectangle\", [\n                \"play\",\n                \"background\"\n            ]);\n            rule.setAll({\n                strokeOpacity: 0.5,\n                cornerRadiusBL: 100,\n                cornerRadiusBR: 100,\n                cornerRadiusTL: 100,\n                cornerRadiusTR: 100\n            });\n            $c53b0c859cf33b39$export$130a5dc1bc9cd8e1(rule, \"fill\", ic, \"primaryButton\");\n        }\n        {\n            const rule = r(\"Graphics\", [\n                \"play\",\n                \"icon\"\n            ]);\n            rule.setAll({\n                stateAnimationDuration: 0,\n                dx: 1,\n                draw: (display)=>{\n                    display.moveTo(0, -5);\n                    display.lineTo(8, 0);\n                    display.lineTo(0, 5);\n                    display.lineTo(0, -5);\n                }\n            });\n            $c53b0c859cf33b39$export$130a5dc1bc9cd8e1(rule, \"fill\", ic, \"primaryButtonText\");\n        }\n        r(\"Graphics\", [\n            \"play\",\n            \"icon\"\n        ]).states.create(\"default\", {\n            stateAnimationDuration: 0\n        });\n        r(\"Graphics\", [\n            \"play\",\n            \"icon\"\n        ]).states.create(\"active\", {\n            stateAnimationDuration: 0,\n            draw: (display)=>{\n                display.moveTo(-4, -5);\n                display.lineTo(-1, -5);\n                display.lineTo(-1, 5);\n                display.lineTo(-4, 5);\n                display.lineTo(-4, -5);\n                display.moveTo(4, -5);\n                display.lineTo(1, -5);\n                display.lineTo(1, 5);\n                display.lineTo(4, 5);\n                display.lineTo(4, -5);\n            }\n        });\n        /**\r\n         * ------------------------------------------------------------------------\r\n         * core: SwitchButton\r\n         * ------------------------------------------------------------------------\r\n         */ r(\"Button\", [\n            \"switch\"\n        ]).setAll({\n            paddingTop: 4,\n            paddingBottom: 4,\n            paddingLeft: 4,\n            paddingRight: 4,\n            ariaLabel: language.translate(\"Press ENTER to toggle\"),\n            toggleKey: \"active\",\n            width: 40,\n            height: 24,\n            layout: null\n        });\n        {\n            const rule = r(\"RoundedRectangle\", [\n                \"switch\",\n                \"background\"\n            ]);\n            rule.setAll({\n                strokeOpacity: 0.5,\n                cornerRadiusBL: 100,\n                cornerRadiusBR: 100,\n                cornerRadiusTL: 100,\n                cornerRadiusTR: 100\n            });\n            $c53b0c859cf33b39$export$130a5dc1bc9cd8e1(rule, \"fill\", ic, \"primaryButton\");\n        }\n        {\n            const rule = r(\"Circle\", [\n                \"switch\",\n                \"icon\"\n            ]);\n            rule.setAll({\n                radius: 8,\n                centerY: 0,\n                centerX: 0,\n                dx: 0\n            });\n            $c53b0c859cf33b39$export$130a5dc1bc9cd8e1(rule, \"fill\", ic, \"primaryButtonText\");\n        }\n        r(\"Graphics\", [\n            \"switch\",\n            \"icon\"\n        ]).states.create(\"active\", {\n            dx: 16\n        });\n        /**\r\n         * ------------------------------------------------------------------------\r\n         * core: Scrollbar\r\n         * ------------------------------------------------------------------------\r\n         */ r(\"Scrollbar\").setAll({\n            start: 0,\n            end: 1,\n            layer: 30,\n            animationEasing: $b4231ef84a5f8a61$export$ca49d7cd8ea40ba7($b4231ef84a5f8a61$export$bdd5293f3cf7a909)\n        });\n        r(\"Scrollbar\", [\n            \"vertical\"\n        ]).setAll({\n            marginRight: 13,\n            marginLeft: 13,\n            minWidth: 12,\n            height: (0, $bd0d0c10fd30006b$export$46342ea78d85883c)\n        });\n        r(\"Scrollbar\", [\n            \"horizontal\"\n        ]).setAll({\n            marginTop: 13,\n            marginBottom: 13,\n            minHeight: 12,\n            width: (0, $bd0d0c10fd30006b$export$46342ea78d85883c)\n        });\n        this.rule(\"Button\", [\n            \"scrollbar\"\n        ]).setAll({\n            exportable: false\n        });\n        {\n            const rule = r(\"RoundedRectangle\", [\n                \"scrollbar\",\n                \"main\",\n                \"background\"\n            ]);\n            rule.setAll({\n                cornerRadiusTL: 8,\n                cornerRadiusBL: 8,\n                cornerRadiusTR: 8,\n                cornerRadiusBR: 8,\n                fillOpacity: 0.8\n            });\n            $c53b0c859cf33b39$export$130a5dc1bc9cd8e1(rule, \"fill\", ic, \"fill\");\n        }\n        {\n            const rule = r(\"RoundedRectangle\", [\n                \"scrollbar\",\n                \"thumb\"\n            ]);\n            rule.setAll({\n                role: \"slider\",\n                ariaLive: \"polite\",\n                position: \"absolute\",\n                draggable: true\n            });\n            $c53b0c859cf33b39$export$130a5dc1bc9cd8e1(rule, \"fill\", ic, \"secondaryButton\");\n        }\n        {\n            const rule = r(\"RoundedRectangle\", [\n                \"scrollbar\",\n                \"thumb\"\n            ]).states.create(\"hover\", {});\n            $c53b0c859cf33b39$export$130a5dc1bc9cd8e1(rule, \"fill\", ic, \"secondaryButtonHover\");\n        }\n        {\n            const rule = r(\"RoundedRectangle\", [\n                \"scrollbar\",\n                \"thumb\"\n            ]).states.create(\"down\", {\n                stateAnimationDuration: 0\n            });\n            $c53b0c859cf33b39$export$130a5dc1bc9cd8e1(rule, \"fill\", ic, \"secondaryButtonDown\");\n        }\n        r(\"RoundedRectangle\", [\n            \"scrollbar\",\n            \"thumb\",\n            \"vertical\"\n        ]).setAll({\n            x: (0, $bd0d0c10fd30006b$export$888d047b0ce6de72),\n            width: (0, $bd0d0c10fd30006b$export$46342ea78d85883c),\n            centerX: (0, $bd0d0c10fd30006b$export$888d047b0ce6de72),\n            ariaLabel: language.translate(\"Use up and down arrows to move selection\")\n        });\n        r(\"RoundedRectangle\", [\n            \"scrollbar\",\n            \"thumb\",\n            \"horizontal\"\n        ]).setAll({\n            y: (0, $bd0d0c10fd30006b$export$888d047b0ce6de72),\n            centerY: (0, $bd0d0c10fd30006b$export$888d047b0ce6de72),\n            height: (0, $bd0d0c10fd30006b$export$46342ea78d85883c),\n            ariaLabel: language.translate(\"Use left and right arrows to move selection\")\n        });\n        // @todo: is this needed? used to be \"ContentScrollbar\"\n        // r(\"Scrollbar\", [\"content?\"]).setAll({\n        // \tmarginRight: 0,\n        // \tmarginLeft: 5,\n        // \tlayer: 5\n        // });\n        /**\r\n         * ========================================================================\r\n         * charts/xy\r\n         * ========================================================================\r\n         *\r\n         * This needs to be in DefaultTheme because it's the only theme that is\r\n         * automatically applied to Root, and tooltips different ancestors\r\n         * than actual charts using them.\r\n         */ {\n            const rule = r(\"PointedRectangle\", [\n                \"axis\",\n                \"tooltip\",\n                \"background\"\n            ]);\n            rule.setAll({\n                cornerRadius: 0\n            });\n            $c53b0c859cf33b39$export$130a5dc1bc9cd8e1(rule, \"fill\", ic, \"alternativeBackground\");\n        }\n        r(\"Label\", [\n            \"axis\",\n            \"tooltip\"\n        ]).setAll({\n            role: undefined\n        });\n        r(\"Label\", [\n            \"axis\",\n            \"tooltip\",\n            \"y\"\n        ]).setAll({\n            textAlign: \"right\"\n        });\n        r(\"Label\", [\n            \"axis\",\n            \"tooltip\",\n            \"y\",\n            \"opposite\"\n        ]).setAll({\n            textAlign: \"left\"\n        });\n        r(\"Label\", [\n            \"axis\",\n            \"tooltip\",\n            \"x\"\n        ]).setAll({\n            textAlign: \"center\"\n        });\n        r(\"Tooltip\", [\n            \"categoryaxis\"\n        ]).setAll({\n            labelText: \"{category}\"\n        });\n        /**\r\n         * ------------------------------------------------------------------------\r\n         * Shapes\r\n         * ------------------------------------------------------------------------\r\n         */ // Class: Graphics\n        r(\"Star\").setAll({\n            spikes: 5,\n            innerRadius: 5,\n            radius: 10\n        });\n        // STOCK\n        r(\"Tooltip\", [\n            \"stock\"\n        ]).setAll({\n            paddingTop: 6,\n            paddingBottom: 5,\n            paddingLeft: 7,\n            paddingRight: 7\n        });\n        r(\"PointedRectangle\", [\n            \"tooltip\",\n            \"stock\",\n            \"axis\"\n        ]).setAll({\n            pointerLength: 0,\n            pointerBaseWidth: 0,\n            cornerRadius: 3\n        });\n        r(\"Label\", [\n            \"tooltip\",\n            \"stock\"\n        ]).setAll({\n            fontSize: \"0.8em\"\n        });\n        // resizer\n        r(\"SpriteResizer\").setAll({\n            rotationStep: 10,\n            isMeasured: false\n        });\n        {\n            const rule = r(\"Container\", [\n                \"resizer\",\n                \"grip\"\n            ]);\n            rule.states.create(\"hover\", {});\n        }\n        {\n            const rule = r(\"RoundedRectangle\", [\n                \"resizer\",\n                \"grip\"\n            ]);\n            rule.setAll({\n                strokeOpacity: 0.7,\n                strokeWidth: 1,\n                fillOpacity: 1,\n                width: 12,\n                height: 12\n            });\n            $c53b0c859cf33b39$export$130a5dc1bc9cd8e1(rule, \"fill\", ic, \"background\");\n            $c53b0c859cf33b39$export$130a5dc1bc9cd8e1(rule, \"stroke\", ic, \"alternativeBackground\");\n        }\n        {\n            const rule = r(\"RoundedRectangle\", [\n                \"resizer\",\n                \"grip\",\n                \"outline\"\n            ]);\n            rule.setAll({\n                strokeOpacity: 0,\n                fillOpacity: 0,\n                width: 20,\n                height: 20\n            });\n            rule.states.create(\"hover\", {\n                fillOpacity: 0.3\n            });\n            $c53b0c859cf33b39$export$130a5dc1bc9cd8e1(rule, \"fill\", ic, \"alternativeBackground\");\n        }\n        r(\"RoundedRectangle\", [\n            \"resizer\",\n            \"grip\",\n            \"left\"\n        ]).setAll({\n            cornerRadiusBL: 0,\n            cornerRadiusBR: 0,\n            cornerRadiusTL: 0,\n            cornerRadiusTR: 0\n        });\n        r(\"RoundedRectangle\", [\n            \"resizer\",\n            \"grip\",\n            \"right\"\n        ]).setAll({\n            cornerRadiusBL: 0,\n            cornerRadiusBR: 0,\n            cornerRadiusTL: 0,\n            cornerRadiusTR: 0\n        });\n        {\n            const rule = r(\"Rectangle\", [\n                \"resizer\",\n                \"rectangle\"\n            ]);\n            rule.setAll({\n                strokeDasharray: [\n                    2,\n                    2\n                ],\n                strokeOpacity: 0.5,\n                strokeWidth: 1\n            });\n            $c53b0c859cf33b39$export$130a5dc1bc9cd8e1(rule, \"stroke\", ic, \"alternativeBackground\");\n        }\n        r(\"Graphics\", [\n            \"button\",\n            \"plus\",\n            \"icon\"\n        ]).setAll({\n            x: (0, $bd0d0c10fd30006b$export$888d047b0ce6de72),\n            y: (0, $bd0d0c10fd30006b$export$888d047b0ce6de72),\n            draw: (display)=>{\n                display.moveTo(-4, 0);\n                display.lineTo(4, 0);\n                display.moveTo(0, -4);\n                display.lineTo(0, 4);\n            }\n        });\n        r(\"Graphics\", [\n            \"button\",\n            \"minus\",\n            \"icon\"\n        ]).setAll({\n            x: (0, $bd0d0c10fd30006b$export$888d047b0ce6de72),\n            y: (0, $bd0d0c10fd30006b$export$888d047b0ce6de72),\n            draw: (display)=>{\n                display.moveTo(-4, 0);\n                display.lineTo(4, 0);\n            }\n        });\n        r(\"Graphics\", [\n            \"button\",\n            \"home\",\n            \"icon\"\n        ]).setAll({\n            x: (0, $bd0d0c10fd30006b$export$888d047b0ce6de72),\n            y: (0, $bd0d0c10fd30006b$export$888d047b0ce6de72),\n            svgPath: \"M 8 -1 L 6 -1 L 6 7 L 2 7 L 2 1 L -2 1 L -2 7 L -6 7 L -6 -1 L -8 -1 L 0 -9 L 8 -1 Z M 8 -1\"\n        });\n        r(\"Button\", [\n            \"zoomtools\"\n        ]).setAll({\n            marginTop: 1,\n            marginBottom: 2\n        });\n        r(\"ZoomTools\").setAll({\n            x: (0, $bd0d0c10fd30006b$export$46342ea78d85883c),\n            centerX: (0, $bd0d0c10fd30006b$export$46342ea78d85883c),\n            y: (0, $bd0d0c10fd30006b$export$46342ea78d85883c),\n            centerY: (0, $bd0d0c10fd30006b$export$46342ea78d85883c),\n            paddingRight: 10,\n            paddingBottom: 10\n        });\n    }\n}\n\n\n/** @ignore */ /** */ \n\n/**\r\n * Modified from Pixi:\r\n *\r\n * The MIT License\r\n *\r\n * Copyright (c) 2013-2017 Mathew Groves, Chad Engler\r\n *\r\n * Permission is hereby granted, free of charge, to any person obtaining a copy\r\n * of this software and associated documentation files (the \"Software\"), to deal\r\n * in the Software without restriction, including without limitation the rights\r\n * to use, copy, modify, merge, publish, distribute, sublicense, and/or sell\r\n * copies of the Software, and to permit persons to whom the Software is\r\n * furnished to do so, subject to the following conditions:\r\n *\r\n * The above copyright notice and this permission notice shall be included in\r\n * all copies or substantial portions of the Software.\r\n *\r\n * THE SOFTWARE IS PROVIDED \"AS IS\", WITHOUT WARRANTY OF ANY KIND, EXPRESS OR\r\n * IMPLIED, INCLUDING BUT NOT LIMITED TO THE WARRANTIES OF MERCHANTABILITY,\r\n * FITNESS FOR A PARTICULAR PURPOSE AND NONINFRINGEMENT. IN NO EVENT SHALL THE\r\n * AUTHORS OR COPYRIGHT HOLDERS BE LIABLE FOR ANY CLAIM, DAMAGES OR OTHER\r\n * LIABILITY, WHETHER IN AN ACTION OF CONTRACT, TORT OR OTHERWISE, ARISING FROM,\r\n * OUT OF OR IN CONNECTION WITH THE SOFTWARE OR THE USE OR OTHER DEALINGS IN\r\n * THE SOFTWARE.\r\n */ /**\r\n * @ignore\r\n */ class $182117fd0d651ae2$export$5b12bf1653c0dd85 {\n    constructor(a = 1, b = 0, c = 0, d = 1, tx = 0, ty = 0){\n        Object.defineProperty(this, \"a\", {\n            enumerable: true,\n            configurable: true,\n            writable: true,\n            value: void 0\n        });\n        Object.defineProperty(this, \"b\", {\n            enumerable: true,\n            configurable: true,\n            writable: true,\n            value: void 0\n        });\n        Object.defineProperty(this, \"c\", {\n            enumerable: true,\n            configurable: true,\n            writable: true,\n            value: void 0\n        });\n        Object.defineProperty(this, \"d\", {\n            enumerable: true,\n            configurable: true,\n            writable: true,\n            value: void 0\n        });\n        Object.defineProperty(this, \"tx\", {\n            enumerable: true,\n            configurable: true,\n            writable: true,\n            value: void 0\n        });\n        Object.defineProperty(this, \"ty\", {\n            enumerable: true,\n            configurable: true,\n            writable: true,\n            value: void 0\n        });\n        this.a = a;\n        this.b = b;\n        this.c = c;\n        this.d = d;\n        this.tx = tx;\n        this.ty = ty;\n    }\n    /**\r\n     * Sets the matrix based on all the available properties\r\n     */ setTransform(x, y, pivotX, pivotY, rotation, scale = 1) {\n        this.a = Math.cos(rotation) * scale;\n        this.b = Math.sin(rotation) * scale;\n        this.c = -Math.sin(rotation) * scale;\n        this.d = Math.cos(rotation) * scale;\n        this.tx = x - (pivotX * this.a + pivotY * this.c);\n        this.ty = y - (pivotX * this.b + pivotY * this.d);\n    }\n    /**\r\n     * Get a new position with the current transformation applied.\r\n     * Can be used to go from a child's coordinate space to the world coordinate space. (e.g. rendering)\r\n     */ apply(origin) {\n        return {\n            x: this.a * origin.x + this.c * origin.y + this.tx,\n            y: this.b * origin.x + this.d * origin.y + this.ty\n        };\n    }\n    /**\r\n     * Get a new position with the inverse of the current transformation applied.\r\n     * Can be used to go from the world coordinate space to a child's coordinate space. (e.g. input)\r\n     */ applyInverse(origin) {\n        const id = 1 / (this.a * this.d + this.c * -this.b);\n        return {\n            x: this.d * id * origin.x + -this.c * id * origin.y + (this.ty * this.c - this.tx * this.d) * id,\n            y: this.a * id * origin.y + -this.b * id * origin.x + (-this.ty * this.a + this.tx * this.b) * id\n        };\n    }\n    /**\r\n     * Appends the given Matrix to this Matrix.\r\n     */ append(matrix) {\n        const a1 = this.a;\n        const b1 = this.b;\n        const c1 = this.c;\n        const d1 = this.d;\n        this.a = matrix.a * a1 + matrix.b * c1;\n        this.b = matrix.a * b1 + matrix.b * d1;\n        this.c = matrix.c * a1 + matrix.d * c1;\n        this.d = matrix.c * b1 + matrix.d * d1;\n        this.tx = matrix.tx * a1 + matrix.ty * c1 + this.tx;\n        this.ty = matrix.tx * b1 + matrix.ty * d1 + this.ty;\n    }\n    /**\r\n     * Prepends the given Matrix to this Matrix.\r\n     */ prepend(matrix) {\n        const tx1 = this.tx;\n        if (matrix.a !== 1 || matrix.b !== 0 || matrix.c !== 0 || matrix.d !== 1) {\n            const a1 = this.a;\n            const c1 = this.c;\n            this.a = a1 * matrix.a + this.b * matrix.c;\n            this.b = a1 * matrix.b + this.b * matrix.d;\n            this.c = c1 * matrix.a + this.d * matrix.c;\n            this.d = c1 * matrix.b + this.d * matrix.d;\n        }\n        this.tx = tx1 * matrix.a + this.ty * matrix.c + matrix.tx;\n        this.ty = tx1 * matrix.b + this.ty * matrix.d + matrix.ty;\n    }\n    /**\r\n     * Copies the other matrix's properties into this matrix\r\n     */ copyFrom(matrix) {\n        this.a = matrix.a;\n        this.b = matrix.b;\n        this.c = matrix.c;\n        this.d = matrix.d;\n        this.tx = matrix.tx;\n        this.ty = matrix.ty;\n    }\n}\n\n\n\n\n\n\n\n\n\n\nvar $2661fd5dfc261885$var$_slicedToArray = function() {\n    function sliceIterator(arr, i) {\n        var _arr = [];\n        var _n = true;\n        var _d = false;\n        var _e = undefined;\n        try {\n            for(var _i = arr[Symbol.iterator](), _s; !(_n = (_s = _i.next()).done); _n = true){\n                _arr.push(_s.value);\n                if (i && _arr.length === i) break;\n            }\n        } catch (err) {\n            _d = true;\n            _e = err;\n        } finally{\n            try {\n                if (!_n && _i[\"return\"]) _i[\"return\"]();\n            } finally{\n                if (_d) throw _e;\n            }\n        }\n        return _arr;\n    }\n    return function(arr, i) {\n        if (Array.isArray(arr)) return arr;\n        else if (Symbol.iterator in Object(arr)) return sliceIterator(arr, i);\n        else throw new TypeError(\"Invalid attempt to destructure non-iterable instance\");\n    };\n}();\nvar $2661fd5dfc261885$var$TAU = Math.PI * 2;\nvar $2661fd5dfc261885$var$mapToEllipse = function mapToEllipse(_ref, rx, ry, cosphi, sinphi, centerx, centery) {\n    var x = _ref.x, y = _ref.y;\n    x *= rx;\n    y *= ry;\n    var xp = cosphi * x - sinphi * y;\n    var yp = sinphi * x + cosphi * y;\n    return {\n        x: xp + centerx,\n        y: yp + centery\n    };\n};\nvar $2661fd5dfc261885$var$approxUnitArc = function approxUnitArc(ang1, ang2) {\n    // If 90 degree circular arc, use a constant\n    // as derived from http://spencermortensen.com/articles/bezier-circle\n    var a = ang2 === 1.5707963267948966 ? 0.551915024494 : ang2 === -1.5707963267948966 ? -0.551915024494 : 4 / 3 * Math.tan(ang2 / 4);\n    var x1 = Math.cos(ang1);\n    var y1 = Math.sin(ang1);\n    var x2 = Math.cos(ang1 + ang2);\n    var y2 = Math.sin(ang1 + ang2);\n    return [\n        {\n            x: x1 - y1 * a,\n            y: y1 + x1 * a\n        },\n        {\n            x: x2 + y2 * a,\n            y: y2 - x2 * a\n        },\n        {\n            x: x2,\n            y: y2\n        }\n    ];\n};\nvar $2661fd5dfc261885$var$vectorAngle = function vectorAngle(ux, uy, vx, vy) {\n    var sign = ux * vy - uy * vx < 0 ? -1 : 1;\n    var dot = ux * vx + uy * vy;\n    if (dot > 1) dot = 1;\n    if (dot < -1) dot = -1;\n    return sign * Math.acos(dot);\n};\nvar $2661fd5dfc261885$var$getArcCenter = function getArcCenter(px, py, cx, cy, rx, ry, largeArcFlag, sweepFlag, sinphi, cosphi, pxp, pyp) {\n    var rxsq = Math.pow(rx, 2);\n    var rysq = Math.pow(ry, 2);\n    var pxpsq = Math.pow(pxp, 2);\n    var pypsq = Math.pow(pyp, 2);\n    var radicant = rxsq * rysq - rxsq * pypsq - rysq * pxpsq;\n    if (radicant < 0) radicant = 0;\n    radicant /= rxsq * pypsq + rysq * pxpsq;\n    radicant = Math.sqrt(radicant) * (largeArcFlag === sweepFlag ? -1 : 1);\n    var centerxp = radicant * rx / ry * pyp;\n    var centeryp = radicant * -ry / rx * pxp;\n    var centerx = cosphi * centerxp - sinphi * centeryp + (px + cx) / 2;\n    var centery = sinphi * centerxp + cosphi * centeryp + (py + cy) / 2;\n    var vx1 = (pxp - centerxp) / rx;\n    var vy1 = (pyp - centeryp) / ry;\n    var vx2 = (-pxp - centerxp) / rx;\n    var vy2 = (-pyp - centeryp) / ry;\n    var ang1 = $2661fd5dfc261885$var$vectorAngle(1, 0, vx1, vy1);\n    var ang2 = $2661fd5dfc261885$var$vectorAngle(vx1, vy1, vx2, vy2);\n    if (sweepFlag === 0 && ang2 > 0) ang2 -= $2661fd5dfc261885$var$TAU;\n    if (sweepFlag === 1 && ang2 < 0) ang2 += $2661fd5dfc261885$var$TAU;\n    return [\n        centerx,\n        centery,\n        ang1,\n        ang2\n    ];\n};\nvar $2661fd5dfc261885$var$arcToBezier = function arcToBezier(_ref2) {\n    var px = _ref2.px, py = _ref2.py, cx = _ref2.cx, cy = _ref2.cy, rx = _ref2.rx, ry = _ref2.ry, _ref2$xAxisRotation = _ref2.xAxisRotation, xAxisRotation = _ref2$xAxisRotation === undefined ? 0 : _ref2$xAxisRotation, _ref2$largeArcFlag = _ref2.largeArcFlag, largeArcFlag = _ref2$largeArcFlag === undefined ? 0 : _ref2$largeArcFlag, _ref2$sweepFlag = _ref2.sweepFlag, sweepFlag = _ref2$sweepFlag === undefined ? 0 : _ref2$sweepFlag;\n    var curves = [];\n    if (rx === 0 || ry === 0) return [];\n    var sinphi = Math.sin(xAxisRotation * $2661fd5dfc261885$var$TAU / 360);\n    var cosphi = Math.cos(xAxisRotation * $2661fd5dfc261885$var$TAU / 360);\n    var pxp = cosphi * (px - cx) / 2 + sinphi * (py - cy) / 2;\n    var pyp = -sinphi * (px - cx) / 2 + cosphi * (py - cy) / 2;\n    if (pxp === 0 && pyp === 0) return [];\n    rx = Math.abs(rx);\n    ry = Math.abs(ry);\n    var lambda = Math.pow(pxp, 2) / Math.pow(rx, 2) + Math.pow(pyp, 2) / Math.pow(ry, 2);\n    if (lambda > 1) {\n        rx *= Math.sqrt(lambda);\n        ry *= Math.sqrt(lambda);\n    }\n    var _getArcCenter = $2661fd5dfc261885$var$getArcCenter(px, py, cx, cy, rx, ry, largeArcFlag, sweepFlag, sinphi, cosphi, pxp, pyp), _getArcCenter2 = $2661fd5dfc261885$var$_slicedToArray(_getArcCenter, 4), centerx = _getArcCenter2[0], centery = _getArcCenter2[1], ang1 = _getArcCenter2[2], ang2 = _getArcCenter2[3];\n    // If 'ang2' == 90.0000000001, then `ratio` will evaluate to\n    // 1.0000000001. This causes `segments` to be greater than one, which is an\n    // unecessary split, and adds extra points to the bezier curve. To alleviate\n    // this issue, we round to 1.0 when the ratio is close to 1.0.\n    var ratio = Math.abs(ang2) / ($2661fd5dfc261885$var$TAU / 4);\n    if (Math.abs(1.0 - ratio) < 0.0000001) ratio = 1.0;\n    var segments = Math.max(Math.ceil(ratio), 1);\n    ang2 /= segments;\n    for(var i = 0; i < segments; i++){\n        curves.push($2661fd5dfc261885$var$approxUnitArc(ang1, ang2));\n        ang1 += ang2;\n    }\n    return curves.map(function(curve) {\n        var _mapToEllipse = $2661fd5dfc261885$var$mapToEllipse(curve[0], rx, ry, cosphi, sinphi, centerx, centery), x1 = _mapToEllipse.x, y1 = _mapToEllipse.y;\n        var _mapToEllipse2 = $2661fd5dfc261885$var$mapToEllipse(curve[1], rx, ry, cosphi, sinphi, centerx, centery), x2 = _mapToEllipse2.x, y2 = _mapToEllipse2.y;\n        var _mapToEllipse3 = $2661fd5dfc261885$var$mapToEllipse(curve[2], rx, ry, cosphi, sinphi, centerx, centery), x = _mapToEllipse3.x, y = _mapToEllipse3.y;\n        return {\n            x1: x1,\n            y1: y1,\n            x2: x2,\n            y2: y2,\n            x: x,\n            y: y\n        };\n    });\n};\nvar $2661fd5dfc261885$export$2e2bcd8739ae039 = $2661fd5dfc261885$var$arcToBezier;\n\n\n/**\r\n * @ignore\r\n */ function $217bcb2fe88d1cdd$var$checkArgs(name, actual, expected) {\n    if (actual !== expected) throw new Error(\"Required \" + expected + \" arguments for \" + name + \" but got \" + actual);\n}\n/**\r\n * @ignore\r\n */ function $217bcb2fe88d1cdd$var$checkMinArgs(name, actual, expected) {\n    if (actual < expected) throw new Error(\"Required at least \" + expected + \" arguments for \" + name + \" but got \" + actual);\n}\n/**\r\n * @ignore\r\n */ function $217bcb2fe88d1cdd$var$checkEvenArgs(name, actual, expected) {\n    $217bcb2fe88d1cdd$var$checkMinArgs(name, actual, expected);\n    if (actual % expected !== 0) throw new Error(\"Arguments for \" + name + \" must be in pairs of \" + expected);\n}\n/**\r\n * @ignore\r\n * This splits the flag so that way 0017 will be processed as 0 0 17\r\n *\r\n * This is important for weird paths like `M17 5A1 1 0 0017 30 1 1 0 0017 5`\r\n */ function $217bcb2fe88d1cdd$var$splitArcFlags(args) {\n    for(let i = 0; i < args.length; i += 7){\n        let index = i + 3;\n        let flag = args[index];\n        if (flag.length > 1) {\n            const a = /^([01])([01])(.*)$/.exec(flag);\n            if (a !== null) {\n                args.splice(index, 0, a[1]);\n                ++index;\n                args.splice(index, 0, a[2]);\n                ++index;\n                if (a[3].length > 0) args[index] = a[3];\n                else args.splice(index, 1);\n            }\n        }\n        ++index;\n        flag = args[index];\n        if (flag.length > 1) {\n            const a = /^([01])(.+)$/.exec(flag);\n            if (a !== null) {\n                args.splice(index, 0, a[1]);\n                ++index;\n                args[index] = a[2];\n            }\n        }\n    }\n}\n/**\r\n * @ignore\r\n */ function $217bcb2fe88d1cdd$var$assertBinary(value) {\n    if (value === 0 || value === 1) return value;\n    else throw new Error(\"Flag must be 0 or 1\");\n}\n//  1 -> 0xffffff * (2 / 2)\n//  2 -> 0xffffff * (1 / 2)\n//\n//  3 -> 0xffffff * (3 / 4)\n//  4 -> 0xffffff * (1 / 4)\n//\n//  5 -> 0xffffff * (7 / 8)\n//  6 -> 0xffffff * (5 / 8)\n//  7 -> 0xffffff * (3 / 8)\n//  8 -> 0xffffff * (1 / 8)\n//\n//  9 -> 0xffffff * (15 / 16)\n// 10 -> 0xffffff * (13 / 16)\n// 11 -> 0xffffff * (11 / 16)\n// 12 -> 0xffffff *  (9 / 16)\n// 13 -> 0xffffff *  (7 / 16)\n// 14 -> 0xffffff *  (5 / 16)\n// 15 -> 0xffffff *  (3 / 16)\n// 16 -> 0xffffff *  (1 / 16)\n// @todo remove this old color distribution algo if the new one pans out\n/*function distributeId(id: number): number {\r\n    if (id === 1) {\r\n        return 0x000001;\r\n\r\n    } else {\r\n        // Finds the closest power of 2\r\n        const base = Math.pow(2, Math.ceil(Math.log(id) / Math.log(2)));\r\n\r\n        // Translates the id into an odd fraction index\r\n        const index = ((base - id) * 2) + 1;\r\n\r\n        // TODO is Math.round correct ?\r\n        return Math.round(0xffffff * (index / base));\r\n    }\r\n}*/ /**\r\n * Function by smeans:\r\n * https://lowcode.life/generating-unique-contrasting-colors-in-javascript/\r\n * @ignore\r\n */ function $217bcb2fe88d1cdd$var$distributeId(id) {\n    const rgb = [\n        0,\n        0,\n        0\n    ];\n    for(let i = 0; i < 24; i++){\n        rgb[i % 3] <<= 1;\n        rgb[i % 3] |= id & 0x01;\n        id >>= 1;\n    }\n    return (rgb[0] | 0) + (rgb[1] << 8) + (rgb[2] << 16);\n}\n/**\r\n * @ignore\r\n */ function $217bcb2fe88d1cdd$var$eachTargets(hitTarget, f) {\n    for(;;){\n        if (hitTarget.interactive) {\n            if (!f(hitTarget)) break;\n        }\n        if (hitTarget._parent) hitTarget = hitTarget._parent;\n        else break;\n    }\n}\n// TODO feature detection for mouse/touch/pointer\n/**\r\n * @ignore\r\n */ function $217bcb2fe88d1cdd$var$onPointerEvent(element, name, f) {\n    return $05b1b40b69b15016$export$3f65cefe8380dbea(element, $05b1b40b69b15016$export$e9a3efe7940d0764(name), (event)=>{\n        const target = $05b1b40b69b15016$export$e58f029f0fbfdb29(event);\n        let touches = event.touches;\n        if (touches) {\n            if (touches.length == 0) touches = event.changedTouches;\n            f($2f30431acd054e2f$export$784d13d8ee351f07(touches), target);\n        } else f([\n            event\n        ], target);\n    });\n}\n/**\r\n * @ignore\r\n */ function $217bcb2fe88d1cdd$var$isTainted(image) {\n    const canvas = document.createElement(\"canvas\");\n    canvas.width = 1;\n    canvas.height = 1;\n    const context = canvas.getContext(\"2d\", {\n        willReadFrequently: true\n    });\n    context.drawImage(image, 0, 0, 1, 1);\n    try {\n        context.getImageData(0, 0, 1, 1);\n        return false;\n    } catch (err) {\n        console.warn(\"Image \\\"\" + image.src + \"\\\" is loaded from different host and is not covered by CORS policy. For more information about the implications read here: https://www.amcharts.com/docs/v5/concepts/cors\");\n        return true;\n    }\n}\n/**\r\n * This is needed to workaround a bug in iOS which causes it to not GC canvas elements.\r\n *\r\n * @ignore\r\n */ function $217bcb2fe88d1cdd$var$clearCanvas(view) {\n    view.width = 0;\n    view.height = 0;\n    view.style.width = \"0px\";\n    view.style.height = \"0px\";\n}\n/**\r\n * Aligns the coordinate to the pixel, so it renders crisp\r\n *\r\n * @ignore\r\n */ function $217bcb2fe88d1cdd$var$crisp(x) {\n    return Math.floor(x) + .5;\n}\nclass $217bcb2fe88d1cdd$export$5a134e2faa19e404 {\n    constructor(){\n        Object.defineProperty(this, \"_x\", {\n            enumerable: true,\n            configurable: true,\n            writable: true,\n            value: 0\n        });\n        Object.defineProperty(this, \"_y\", {\n            enumerable: true,\n            configurable: true,\n            writable: true,\n            value: 0\n        });\n    }\n    get x() {\n        return this._x;\n    }\n    get y() {\n        return this._y;\n    }\n    set x(value) {\n        this._x = value;\n    }\n    set y(value) {\n        this._y = value;\n    }\n}\nclass $217bcb2fe88d1cdd$export$e0e1ad123bfa6ff4 extends (0, $a363f66303166aa1$export$9a67fa5e19f51a52) {\n    constructor(renderer){\n        super();\n        Object.defineProperty(this, \"_layer\", {\n            enumerable: true,\n            configurable: true,\n            writable: true,\n            value: void 0\n        });\n        Object.defineProperty(this, \"mask\", {\n            enumerable: true,\n            configurable: true,\n            writable: true,\n            value: null\n        });\n        Object.defineProperty(this, \"visible\", {\n            enumerable: true,\n            configurable: true,\n            writable: true,\n            value: true\n        });\n        Object.defineProperty(this, \"exportable\", {\n            enumerable: true,\n            configurable: true,\n            writable: true,\n            value: true\n        });\n        Object.defineProperty(this, \"interactive\", {\n            enumerable: true,\n            configurable: true,\n            writable: true,\n            value: false\n        });\n        Object.defineProperty(this, \"inactive\", {\n            enumerable: true,\n            configurable: true,\n            writable: true,\n            value: null\n        });\n        Object.defineProperty(this, \"wheelable\", {\n            enumerable: true,\n            configurable: true,\n            writable: true,\n            value: false\n        });\n        Object.defineProperty(this, \"cancelTouch\", {\n            enumerable: true,\n            configurable: true,\n            writable: true,\n            value: false\n        });\n        Object.defineProperty(this, \"isMeasured\", {\n            enumerable: true,\n            configurable: true,\n            writable: true,\n            value: false\n        });\n        Object.defineProperty(this, \"buttonMode\", {\n            enumerable: true,\n            configurable: true,\n            writable: true,\n            value: false\n        });\n        Object.defineProperty(this, \"alpha\", {\n            enumerable: true,\n            configurable: true,\n            writable: true,\n            value: 1\n        });\n        Object.defineProperty(this, \"compoundAlpha\", {\n            enumerable: true,\n            configurable: true,\n            writable: true,\n            value: 1\n        });\n        Object.defineProperty(this, \"angle\", {\n            enumerable: true,\n            configurable: true,\n            writable: true,\n            value: 0\n        });\n        Object.defineProperty(this, \"scale\", {\n            enumerable: true,\n            configurable: true,\n            writable: true,\n            value: 1\n        });\n        Object.defineProperty(this, \"x\", {\n            enumerable: true,\n            configurable: true,\n            writable: true,\n            value: 0\n        });\n        Object.defineProperty(this, \"y\", {\n            enumerable: true,\n            configurable: true,\n            writable: true,\n            value: 0\n        });\n        Object.defineProperty(this, \"crisp\", {\n            enumerable: true,\n            configurable: true,\n            writable: true,\n            value: false\n        });\n        Object.defineProperty(this, \"pivot\", {\n            enumerable: true,\n            configurable: true,\n            writable: true,\n            value: new $217bcb2fe88d1cdd$export$5a134e2faa19e404()\n        });\n        Object.defineProperty(this, \"filter\", {\n            enumerable: true,\n            configurable: true,\n            writable: true,\n            value: void 0\n        });\n        Object.defineProperty(this, \"cursorOverStyle\", {\n            enumerable: true,\n            configurable: true,\n            writable: true,\n            value: void 0\n        });\n        Object.defineProperty(this, \"_replacedCursorStyle\", {\n            enumerable: true,\n            configurable: true,\n            writable: true,\n            value: void 0\n        });\n        Object.defineProperty(this, \"_localMatrix\", {\n            enumerable: true,\n            configurable: true,\n            writable: true,\n            value: new (0, $182117fd0d651ae2$export$5b12bf1653c0dd85)()\n        });\n        Object.defineProperty(this, \"_matrix\", {\n            enumerable: true,\n            configurable: true,\n            writable: true,\n            value: new (0, $182117fd0d651ae2$export$5b12bf1653c0dd85)()\n        });\n        // TODO can this be replaced with _localMatrix ?\n        Object.defineProperty(this, \"_uMatrix\", {\n            enumerable: true,\n            configurable: true,\n            writable: true,\n            value: new (0, $182117fd0d651ae2$export$5b12bf1653c0dd85)()\n        });\n        Object.defineProperty(this, \"_renderer\", {\n            enumerable: true,\n            configurable: true,\n            writable: true,\n            value: void 0\n        });\n        Object.defineProperty(this, \"_parent\", {\n            enumerable: true,\n            configurable: true,\n            writable: true,\n            value: void 0\n        });\n        Object.defineProperty(this, \"_localBounds\", {\n            enumerable: true,\n            configurable: true,\n            writable: true,\n            value: void 0\n        });\n        Object.defineProperty(this, \"_bounds\", {\n            enumerable: true,\n            configurable: true,\n            writable: true,\n            value: void 0\n        });\n        Object.defineProperty(this, \"_colorId\", {\n            enumerable: true,\n            configurable: true,\n            writable: true,\n            value: void 0\n        });\n        this._renderer = renderer;\n    }\n    subStatus(status) {\n        return {\n            inactive: this.inactive == null ? status.inactive : this.inactive,\n            layer: this._layer || status.layer\n        };\n    }\n    _dispose() {\n        this._renderer._removeObject(this);\n        this.getLayer().dirty = true;\n    }\n    getCanvas() {\n        return this.getLayer().view;\n    }\n    getLayer() {\n        let self = this;\n        for(;;){\n            if (self._layer) return self._layer;\n            else if (self._parent) self = self._parent;\n            else return this._renderer.defaultLayer;\n        }\n    }\n    setLayer(order, margin) {\n        if (order == null) this._layer = undefined;\n        else {\n            const visible = true;\n            this._layer = this._renderer.getLayer(order, visible);\n            this._layer.visible = visible;\n            this._layer.margin = margin;\n            if (margin) $05b1b40b69b15016$export$2dc32695cee26cb(this._layer.view, false);\n            this._renderer._ghostLayer.setMargin(this._renderer.layers);\n            if (this._parent) this._parent.registerChildLayer(this._layer);\n            this._layer.dirty = true;\n            this._renderer.resizeLayer(this._layer);\n            this._renderer.resizeGhost();\n        }\n    }\n    markDirtyLayer() {\n        this.getLayer().dirty = true;\n    }\n    clear() {\n        this.invalidateBounds();\n    }\n    invalidateBounds() {\n        this._localBounds = undefined;\n    }\n    _addBounds(_bounds) {}\n    _getColorId() {\n        if (this._colorId === undefined) this._colorId = this._renderer.paintId(this);\n        return this._colorId;\n    }\n    _isInteractive(status) {\n        return !status.inactive && (this.interactive || this._renderer._forceInteractive > 0);\n    }\n    _isInteractiveMask(status) {\n        return this._isInteractive(status);\n    }\n    contains(child) {\n        for(;;){\n            if (child === this) return true;\n            else if (child._parent) child = child._parent;\n            else return false;\n        }\n    }\n    toGlobal(point) {\n        return this._matrix.apply(point);\n    }\n    toLocal(point) {\n        return this._matrix.applyInverse(point);\n    }\n    getLocalMatrix() {\n        this._uMatrix.setTransform(0, 0, this.pivot.x, this.pivot.y, this.angle * Math.PI / 180, this.scale);\n        return this._uMatrix;\n    }\n    getLocalBounds() {\n        if (!this._localBounds) {\n            const bn = 10000000;\n            this._localBounds = {\n                left: bn,\n                top: bn,\n                right: -bn,\n                bottom: -bn\n            };\n            this._addBounds(this._localBounds);\n        }\n        return this._localBounds;\n    }\n    getAdjustedBounds(bounds) {\n        this._setMatrix();\n        const matrix = this.getLocalMatrix();\n        const p0 = matrix.apply({\n            x: bounds.left,\n            y: bounds.top\n        });\n        const p1 = matrix.apply({\n            x: bounds.right,\n            y: bounds.top\n        });\n        const p2 = matrix.apply({\n            x: bounds.right,\n            y: bounds.bottom\n        });\n        const p3 = matrix.apply({\n            x: bounds.left,\n            y: bounds.bottom\n        });\n        return {\n            left: Math.min(p0.x, p1.x, p2.x, p3.x),\n            top: Math.min(p0.y, p1.y, p2.y, p3.y),\n            right: Math.max(p0.x, p1.x, p2.x, p3.x),\n            bottom: Math.max(p0.y, p1.y, p2.y, p3.y)\n        };\n    }\n    on(key, callback, context) {\n        if (this.interactive) return this._renderer._addEvent(this, key, callback, context);\n        else return new (0, $a363f66303166aa1$export$6039fc6176d96e35)(()=>{});\n    }\n    _setMatrix() {\n        // TODO only calculate this if it has actually changed\n        this._localMatrix.setTransform(this.x, this.y, this.pivot.x, this.pivot.y, // Converts degrees to radians\n        this.angle * Math.PI / 180, this.scale);\n        this._matrix.copyFrom(this._localMatrix);\n        if (this._parent) // TODO only calculate this if it has actually changed\n        this._matrix.prepend(this._parent._matrix);\n    }\n    _transform(context, resolution) {\n        const m = this._matrix;\n        let tx = m.tx * resolution;\n        let ty = m.ty * resolution;\n        if (this.crisp) {\n            tx = $217bcb2fe88d1cdd$var$crisp(tx);\n            ty = $217bcb2fe88d1cdd$var$crisp(ty);\n        }\n        context.setTransform(m.a * resolution, m.b * resolution, m.c * resolution, m.d * resolution, tx, ty);\n    }\n    _transformMargin(context, resolution, margin) {\n        const m = this._matrix;\n        context.setTransform(m.a * resolution, m.b * resolution, m.c * resolution, m.d * resolution, (m.tx + margin.left) * resolution, (m.ty + margin.top) * resolution);\n    }\n    _transformLayer(context, resolution, layer) {\n        if (layer.margin) this._transformMargin(context, layer.scale || resolution, layer.margin);\n        else this._transform(context, layer.scale || resolution);\n    }\n    render(status) {\n        if (this.visible && (this.exportable !== false || !this._renderer._omitTainted)) {\n            this._setMatrix();\n            const subStatus = this.subStatus(status);\n            const resolution = this._renderer.resolution;\n            const layers = this._renderer.layers;\n            const ghostLayer = this._renderer._ghostLayer;\n            const ghostContext = ghostLayer.context;\n            const mask = this.mask;\n            if (mask) mask._setMatrix();\n            // TODO improve this\n            $2f30431acd054e2f$export$79b2f7037acddd43(layers, (layer)=>{\n                if (layer) {\n                    const context = layer.context;\n                    context.save();\n                    // We must apply the mask before we transform the element\n                    if (mask) {\n                        mask._transformLayer(context, resolution, layer);\n                        mask._runPath(context);\n                        context.clip();\n                    }\n                    context.globalAlpha = this.compoundAlpha * this.alpha;\n                    this._transformLayer(context, resolution, layer);\n                    if (this.filter) context.filter = this.filter;\n                }\n            });\n            ghostContext.save();\n            // We must apply the mask before we transform the element\n            if (mask && this._isInteractiveMask(subStatus)) {\n                mask._transformMargin(ghostContext, resolution, ghostLayer.margin);\n                mask._runPath(ghostContext);\n                ghostContext.clip();\n            }\n            this._transformMargin(ghostContext, resolution, ghostLayer.margin);\n            this._render(subStatus);\n            ghostContext.restore();\n            $2f30431acd054e2f$export$79b2f7037acddd43(layers, (layer)=>{\n                if (layer) layer.context.restore();\n            });\n        }\n    }\n    _render(status) {\n        if (this.exportable === false) status.layer.tainted = true;\n    }\n    hovering() {\n        return this._renderer._hovering.has(this);\n    }\n    dragging() {\n        return this._renderer._dragging.some((x)=>x.value === this);\n    }\n    shouldCancelTouch() {\n        const renderer = this._renderer;\n        if (renderer.tapToActivate && !renderer._touchActive) return false;\n        if (this.cancelTouch) return true;\n        else if (this._parent) return this._parent.shouldCancelTouch();\n        return false;\n    }\n}\nclass $217bcb2fe88d1cdd$export$b859d337447d8a21 extends $217bcb2fe88d1cdd$export$e0e1ad123bfa6ff4 {\n    constructor(){\n        super(...arguments);\n        Object.defineProperty(this, \"interactiveChildren\", {\n            enumerable: true,\n            configurable: true,\n            writable: true,\n            value: true\n        });\n        Object.defineProperty(this, \"_childLayers\", {\n            enumerable: true,\n            configurable: true,\n            writable: true,\n            value: void 0\n        });\n        Object.defineProperty(this, \"_children\", {\n            enumerable: true,\n            configurable: true,\n            writable: true,\n            value: []\n        });\n    }\n    _isInteractiveMask(status) {\n        return this.interactiveChildren || super._isInteractiveMask(status);\n    }\n    addChild(child) {\n        child._parent = this;\n        this._children.push(child);\n        if (child._layer) this.registerChildLayer(child._layer);\n    }\n    addChildAt(child, index) {\n        child._parent = this;\n        this._children.splice(index, 0, child);\n        if (child._layer) this.registerChildLayer(child._layer);\n    }\n    removeChild(child) {\n        child._parent = undefined;\n        $2f30431acd054e2f$export$2529f734547e2830(this._children, child);\n    }\n    _render(status) {\n        super._render(status);\n        const renderer = this._renderer;\n        if (this.interactive && this.interactiveChildren) ++renderer._forceInteractive;\n        $2f30431acd054e2f$export$79b2f7037acddd43(this._children, (child)=>{\n            child.compoundAlpha = this.compoundAlpha * this.alpha;\n            child.render(status);\n        });\n        if (this.interactive && this.interactiveChildren) --renderer._forceInteractive;\n    }\n    registerChildLayer(layer) {\n        if (!this._childLayers) this._childLayers = [];\n        $2f30431acd054e2f$export$3589e1fa93f0a8a5(this._childLayers, layer);\n        if (this._parent) this._parent.registerChildLayer(layer);\n    }\n    markDirtyLayer(deep = false) {\n        super.markDirtyLayer();\n        if (deep && this._childLayers) $2f30431acd054e2f$export$79b2f7037acddd43(this._childLayers, (layer)=>layer.dirty = true);\n    }\n    _dispose() {\n        super._dispose();\n        if (this._childLayers) $2f30431acd054e2f$export$79b2f7037acddd43(this._childLayers, (layer)=>{\n            layer.dirty = true;\n        });\n    }\n}\n/**\r\n * @ignore\r\n */ function $217bcb2fe88d1cdd$var$setPoint(bounds, point) {\n    bounds.left = Math.min(bounds.left, point.x);\n    bounds.top = Math.min(bounds.top, point.y);\n    bounds.right = Math.max(bounds.right, point.x);\n    bounds.bottom = Math.max(bounds.bottom, point.y);\n}\n/**\r\n * @ignore\r\n */ class $217bcb2fe88d1cdd$var$Op {\n    colorize(_context, _forceColor) {}\n    colorizeGhost(context, forceColor) {\n        this.colorize(context, forceColor);\n    }\n    path(_context) {}\n    pathGhost(context) {\n        this.path(context);\n    }\n    addBounds(_bounds) {}\n}\n/**\r\n * @ignore\r\n */ class $217bcb2fe88d1cdd$var$BeginPath extends $217bcb2fe88d1cdd$var$Op {\n    colorize(context, _forceColor) {\n        context.beginPath();\n    }\n}\n/**\r\n * @ignore\r\n */ class $217bcb2fe88d1cdd$var$BeginFill extends $217bcb2fe88d1cdd$var$Op {\n    constructor(color){\n        super();\n        Object.defineProperty(this, \"color\", {\n            enumerable: true,\n            configurable: true,\n            writable: true,\n            value: color\n        });\n    }\n    colorize(context, forceColor) {\n        if (forceColor !== undefined) context.fillStyle = forceColor;\n        else context.fillStyle = this.color;\n    }\n}\n/**\r\n * @ignore\r\n */ class $217bcb2fe88d1cdd$var$EndFill extends $217bcb2fe88d1cdd$var$Op {\n    constructor(clearShadow){\n        super();\n        Object.defineProperty(this, \"clearShadow\", {\n            enumerable: true,\n            configurable: true,\n            writable: true,\n            value: clearShadow\n        });\n    }\n    colorize(context, _forceColor) {\n        context.fill();\n        if (this.clearShadow) {\n            context.shadowColor = \"\";\n            context.shadowBlur = 0;\n            context.shadowOffsetX = 0;\n            context.shadowOffsetY = 0;\n        }\n    }\n}\n/**\r\n * @ignore\r\n */ class $217bcb2fe88d1cdd$var$EndStroke extends $217bcb2fe88d1cdd$var$Op {\n    colorize(context, _forceColor) {\n        context.stroke();\n    }\n}\n/**\r\n * @ignore\r\n */ class $217bcb2fe88d1cdd$var$LineStyle extends $217bcb2fe88d1cdd$var$Op {\n    constructor(width, color, lineJoin, lineCap){\n        super();\n        Object.defineProperty(this, \"width\", {\n            enumerable: true,\n            configurable: true,\n            writable: true,\n            value: width\n        });\n        Object.defineProperty(this, \"color\", {\n            enumerable: true,\n            configurable: true,\n            writable: true,\n            value: color\n        });\n        Object.defineProperty(this, \"lineJoin\", {\n            enumerable: true,\n            configurable: true,\n            writable: true,\n            value: lineJoin\n        });\n        Object.defineProperty(this, \"lineCap\", {\n            enumerable: true,\n            configurable: true,\n            writable: true,\n            value: lineCap\n        });\n    }\n    colorize(context, forceColor) {\n        if (forceColor !== undefined) context.strokeStyle = forceColor;\n        else context.strokeStyle = this.color;\n        context.lineWidth = this.width;\n        if (this.lineJoin) context.lineJoin = this.lineJoin;\n        if (this.lineCap) context.lineCap = this.lineCap;\n    }\n}\n/**\r\n * @ignore\r\n */ class $217bcb2fe88d1cdd$var$LineDash extends $217bcb2fe88d1cdd$var$Op {\n    constructor(dash){\n        super();\n        Object.defineProperty(this, \"dash\", {\n            enumerable: true,\n            configurable: true,\n            writable: true,\n            value: dash\n        });\n    }\n    colorize(context, _forceColor) {\n        context.setLineDash(this.dash);\n    }\n}\n/**\r\n * @ignore\r\n */ class $217bcb2fe88d1cdd$var$LineDashOffset extends $217bcb2fe88d1cdd$var$Op {\n    constructor(dashOffset){\n        super();\n        Object.defineProperty(this, \"dashOffset\", {\n            enumerable: true,\n            configurable: true,\n            writable: true,\n            value: dashOffset\n        });\n    }\n    colorize(context, _forceColor) {\n        context.lineDashOffset = this.dashOffset;\n    }\n}\n/**\r\n * @ignore\r\n */ class $217bcb2fe88d1cdd$var$DrawRect extends $217bcb2fe88d1cdd$var$Op {\n    constructor(x, y, width, height){\n        super();\n        Object.defineProperty(this, \"x\", {\n            enumerable: true,\n            configurable: true,\n            writable: true,\n            value: x\n        });\n        Object.defineProperty(this, \"y\", {\n            enumerable: true,\n            configurable: true,\n            writable: true,\n            value: y\n        });\n        Object.defineProperty(this, \"width\", {\n            enumerable: true,\n            configurable: true,\n            writable: true,\n            value: width\n        });\n        Object.defineProperty(this, \"height\", {\n            enumerable: true,\n            configurable: true,\n            writable: true,\n            value: height\n        });\n    }\n    path(context) {\n        context.rect(this.x, this.y, this.width, this.height);\n    }\n    addBounds(bounds) {\n        const l = this.x;\n        const t = this.y;\n        const r = l + this.width;\n        const b = t + this.height;\n        $217bcb2fe88d1cdd$var$setPoint(bounds, {\n            x: l,\n            y: t\n        });\n        $217bcb2fe88d1cdd$var$setPoint(bounds, {\n            x: r,\n            y: t\n        });\n        $217bcb2fe88d1cdd$var$setPoint(bounds, {\n            x: l,\n            y: b\n        });\n        $217bcb2fe88d1cdd$var$setPoint(bounds, {\n            x: r,\n            y: b\n        });\n    }\n}\n/**\r\n * @ignore\r\n */ class $217bcb2fe88d1cdd$var$DrawCircle extends $217bcb2fe88d1cdd$var$Op {\n    constructor(x, y, radius){\n        super();\n        Object.defineProperty(this, \"x\", {\n            enumerable: true,\n            configurable: true,\n            writable: true,\n            value: x\n        });\n        Object.defineProperty(this, \"y\", {\n            enumerable: true,\n            configurable: true,\n            writable: true,\n            value: y\n        });\n        Object.defineProperty(this, \"radius\", {\n            enumerable: true,\n            configurable: true,\n            writable: true,\n            value: radius\n        });\n    }\n    path(context) {\n        context.moveTo(this.x + this.radius, this.y);\n        context.arc(this.x, this.y, this.radius, 0, 2 * Math.PI);\n    }\n    // TODO handle skewing and rotation\n    addBounds(bounds) {\n        $217bcb2fe88d1cdd$var$setPoint(bounds, {\n            x: this.x - this.radius,\n            y: this.y - this.radius\n        });\n        $217bcb2fe88d1cdd$var$setPoint(bounds, {\n            x: this.x + this.radius,\n            y: this.y + this.radius\n        });\n    }\n}\n/**\r\n * @ignore\r\n */ class $217bcb2fe88d1cdd$var$DrawEllipse extends $217bcb2fe88d1cdd$var$Op {\n    constructor(x, y, radiusX, radiusY){\n        super();\n        Object.defineProperty(this, \"x\", {\n            enumerable: true,\n            configurable: true,\n            writable: true,\n            value: x\n        });\n        Object.defineProperty(this, \"y\", {\n            enumerable: true,\n            configurable: true,\n            writable: true,\n            value: y\n        });\n        Object.defineProperty(this, \"radiusX\", {\n            enumerable: true,\n            configurable: true,\n            writable: true,\n            value: radiusX\n        });\n        Object.defineProperty(this, \"radiusY\", {\n            enumerable: true,\n            configurable: true,\n            writable: true,\n            value: radiusY\n        });\n    }\n    path(context) {\n        context.ellipse(0, 0, this.radiusX, this.radiusY, 0, 0, Math.PI * 2);\n    }\n    // TODO handle skewing and rotation\n    addBounds(bounds) {\n        $217bcb2fe88d1cdd$var$setPoint(bounds, {\n            x: this.x - this.radiusX,\n            y: this.y - this.radiusY\n        });\n        $217bcb2fe88d1cdd$var$setPoint(bounds, {\n            x: this.x + this.radiusX,\n            y: this.y + this.radiusY\n        });\n    }\n}\n/**\r\n * @ignore\r\n */ class $217bcb2fe88d1cdd$var$Arc extends $217bcb2fe88d1cdd$var$Op {\n    constructor(cx, cy, radius, startAngle, endAngle, anticlockwise){\n        super();\n        Object.defineProperty(this, \"cx\", {\n            enumerable: true,\n            configurable: true,\n            writable: true,\n            value: cx\n        });\n        Object.defineProperty(this, \"cy\", {\n            enumerable: true,\n            configurable: true,\n            writable: true,\n            value: cy\n        });\n        Object.defineProperty(this, \"radius\", {\n            enumerable: true,\n            configurable: true,\n            writable: true,\n            value: radius\n        });\n        Object.defineProperty(this, \"startAngle\", {\n            enumerable: true,\n            configurable: true,\n            writable: true,\n            value: startAngle\n        });\n        Object.defineProperty(this, \"endAngle\", {\n            enumerable: true,\n            configurable: true,\n            writable: true,\n            value: endAngle\n        });\n        Object.defineProperty(this, \"anticlockwise\", {\n            enumerable: true,\n            configurable: true,\n            writable: true,\n            value: anticlockwise\n        });\n    }\n    path(context) {\n        if (this.radius > 0) context.arc(this.cx, this.cy, this.radius, this.startAngle, this.endAngle, this.anticlockwise);\n    }\n    addBounds(bounds) {\n        let arcBounds = $f43e9e04b3f0548b$export$87d7822d7a31793f(this.cx, this.cy, this.startAngle * $f43e9e04b3f0548b$export$e035ae0f6b8ef5d, this.endAngle * $f43e9e04b3f0548b$export$e035ae0f6b8ef5d, this.radius);\n        $217bcb2fe88d1cdd$var$setPoint(bounds, {\n            x: arcBounds.left,\n            y: arcBounds.top\n        });\n        $217bcb2fe88d1cdd$var$setPoint(bounds, {\n            x: arcBounds.right,\n            y: arcBounds.bottom\n        });\n    }\n}\n/**\r\n * @ignore\r\n */ class $217bcb2fe88d1cdd$var$ArcTo extends $217bcb2fe88d1cdd$var$Op {\n    constructor(x1, y1, x2, y2, radius){\n        super();\n        Object.defineProperty(this, \"x1\", {\n            enumerable: true,\n            configurable: true,\n            writable: true,\n            value: x1\n        });\n        Object.defineProperty(this, \"y1\", {\n            enumerable: true,\n            configurable: true,\n            writable: true,\n            value: y1\n        });\n        Object.defineProperty(this, \"x2\", {\n            enumerable: true,\n            configurable: true,\n            writable: true,\n            value: x2\n        });\n        Object.defineProperty(this, \"y2\", {\n            enumerable: true,\n            configurable: true,\n            writable: true,\n            value: y2\n        });\n        Object.defineProperty(this, \"radius\", {\n            enumerable: true,\n            configurable: true,\n            writable: true,\n            value: radius\n        });\n    }\n    path(context) {\n        if (this.radius > 0) context.arcTo(this.x1, this.y1, this.x2, this.y2, this.radius);\n    }\n    // TODO: add points\n    addBounds(_bounds) {\n    /*\r\n        // not finished\r\n        https://math.stackexchange.com/questions/1781438/finding-the-center-of-a-circle-given-two-points-and-a-radius-algebraically\r\n\r\n        if (prevPoint) {\r\n            let x1 = prevPoint.x;\r\n            let y1 = prevPoint.y;\r\n            let x2 = this.x2;\r\n            let y2 = this.y2;\r\n            let r = this.radius;\r\n\r\n            let xa = (x2 - x1) / 2;\r\n            let ya = (y2 - y1) / 2;\r\n\r\n            let x0 = x1 + xa;\r\n            let y0 = y1 + ya;\r\n\r\n            let a = Math.hypot(xa, ya);\r\n            let b = Math.sqrt(r * r - a * a);\r\n\r\n            let cx = x0 + b * ya / a;\r\n            let cy = y0 - b * xa / a;\r\n\r\n            console.log(cx, cy);\r\n        }*/ }\n}\n/**\r\n * @ignore\r\n */ class $217bcb2fe88d1cdd$var$LineTo extends $217bcb2fe88d1cdd$var$Op {\n    constructor(x, y){\n        super();\n        Object.defineProperty(this, \"x\", {\n            enumerable: true,\n            configurable: true,\n            writable: true,\n            value: x\n        });\n        Object.defineProperty(this, \"y\", {\n            enumerable: true,\n            configurable: true,\n            writable: true,\n            value: y\n        });\n    }\n    path(context) {\n        context.lineTo(this.x, this.y);\n    }\n    addBounds(bounds) {\n        $217bcb2fe88d1cdd$var$setPoint(bounds, {\n            x: this.x,\n            y: this.y\n        });\n    }\n}\n/**\r\n * @ignore\r\n */ class $217bcb2fe88d1cdd$var$MoveTo extends $217bcb2fe88d1cdd$var$Op {\n    constructor(x, y){\n        super();\n        Object.defineProperty(this, \"x\", {\n            enumerable: true,\n            configurable: true,\n            writable: true,\n            value: x\n        });\n        Object.defineProperty(this, \"y\", {\n            enumerable: true,\n            configurable: true,\n            writable: true,\n            value: y\n        });\n    }\n    path(context) {\n        context.moveTo(this.x, this.y);\n    }\n    addBounds(bounds) {\n        $217bcb2fe88d1cdd$var$setPoint(bounds, {\n            x: this.x,\n            y: this.y\n        });\n    }\n}\n/**\r\n * @ignore\r\n */ class $217bcb2fe88d1cdd$var$ClosePath extends $217bcb2fe88d1cdd$var$Op {\n    path(context) {\n        context.closePath();\n    }\n}\n/**\r\n * @ignore\r\n */ class $217bcb2fe88d1cdd$var$BezierCurveTo extends $217bcb2fe88d1cdd$var$Op {\n    constructor(cpX, cpY, cpX2, cpY2, toX, toY){\n        super();\n        Object.defineProperty(this, \"cpX\", {\n            enumerable: true,\n            configurable: true,\n            writable: true,\n            value: cpX\n        });\n        Object.defineProperty(this, \"cpY\", {\n            enumerable: true,\n            configurable: true,\n            writable: true,\n            value: cpY\n        });\n        Object.defineProperty(this, \"cpX2\", {\n            enumerable: true,\n            configurable: true,\n            writable: true,\n            value: cpX2\n        });\n        Object.defineProperty(this, \"cpY2\", {\n            enumerable: true,\n            configurable: true,\n            writable: true,\n            value: cpY2\n        });\n        Object.defineProperty(this, \"toX\", {\n            enumerable: true,\n            configurable: true,\n            writable: true,\n            value: toX\n        });\n        Object.defineProperty(this, \"toY\", {\n            enumerable: true,\n            configurable: true,\n            writable: true,\n            value: toY\n        });\n    }\n    path(context) {\n        context.bezierCurveTo(this.cpX, this.cpY, this.cpX2, this.cpY2, this.toX, this.toY);\n    }\n    // TODO: OK?\n    addBounds(bounds) {\n        $217bcb2fe88d1cdd$var$setPoint(bounds, {\n            x: this.cpX,\n            y: this.cpY\n        });\n        $217bcb2fe88d1cdd$var$setPoint(bounds, {\n            x: this.cpX2,\n            y: this.cpY2\n        });\n        $217bcb2fe88d1cdd$var$setPoint(bounds, {\n            x: this.toX,\n            y: this.toY\n        });\n    }\n}\n/**\r\n * @ignore\r\n */ class $217bcb2fe88d1cdd$var$QuadraticCurveTo extends $217bcb2fe88d1cdd$var$Op {\n    constructor(cpX, cpY, toX, toY){\n        super();\n        Object.defineProperty(this, \"cpX\", {\n            enumerable: true,\n            configurable: true,\n            writable: true,\n            value: cpX\n        });\n        Object.defineProperty(this, \"cpY\", {\n            enumerable: true,\n            configurable: true,\n            writable: true,\n            value: cpY\n        });\n        Object.defineProperty(this, \"toX\", {\n            enumerable: true,\n            configurable: true,\n            writable: true,\n            value: toX\n        });\n        Object.defineProperty(this, \"toY\", {\n            enumerable: true,\n            configurable: true,\n            writable: true,\n            value: toY\n        });\n    }\n    path(context) {\n        context.quadraticCurveTo(this.cpX, this.cpY, this.toX, this.toY);\n    }\n    // TODO: OK?\n    addBounds(bounds) {\n        $217bcb2fe88d1cdd$var$setPoint(bounds, {\n            x: this.cpX,\n            y: this.cpY\n        });\n        $217bcb2fe88d1cdd$var$setPoint(bounds, {\n            x: this.toX,\n            y: this.toY\n        });\n    }\n}\n/**\r\n * @ignore\r\n */ class $217bcb2fe88d1cdd$var$Shadow extends $217bcb2fe88d1cdd$var$Op {\n    constructor(color, blur, offsetX, offsetY, opacity){\n        super();\n        Object.defineProperty(this, \"color\", {\n            enumerable: true,\n            configurable: true,\n            writable: true,\n            value: color\n        });\n        Object.defineProperty(this, \"blur\", {\n            enumerable: true,\n            configurable: true,\n            writable: true,\n            value: blur\n        });\n        Object.defineProperty(this, \"offsetX\", {\n            enumerable: true,\n            configurable: true,\n            writable: true,\n            value: offsetX\n        });\n        Object.defineProperty(this, \"offsetY\", {\n            enumerable: true,\n            configurable: true,\n            writable: true,\n            value: offsetY\n        });\n        Object.defineProperty(this, \"opacity\", {\n            enumerable: true,\n            configurable: true,\n            writable: true,\n            value: opacity\n        });\n    }\n    colorize(context, _forceColor) {\n        if (this.opacity) context.fillStyle = this.color;\n        context.shadowColor = this.color;\n        context.shadowBlur = this.blur;\n        context.shadowOffsetX = this.offsetX;\n        context.shadowOffsetY = this.offsetY;\n    }\n    colorizeGhost(_context, _forceColor) {}\n}\n/**\r\n * @ignore\r\n */ class $217bcb2fe88d1cdd$var$GraphicsImage extends $217bcb2fe88d1cdd$var$Op {\n    constructor(image, width, height, x, y){\n        super();\n        Object.defineProperty(this, \"image\", {\n            enumerable: true,\n            configurable: true,\n            writable: true,\n            value: image\n        });\n        Object.defineProperty(this, \"width\", {\n            enumerable: true,\n            configurable: true,\n            writable: true,\n            value: width\n        });\n        Object.defineProperty(this, \"height\", {\n            enumerable: true,\n            configurable: true,\n            writable: true,\n            value: height\n        });\n        Object.defineProperty(this, \"x\", {\n            enumerable: true,\n            configurable: true,\n            writable: true,\n            value: x\n        });\n        Object.defineProperty(this, \"y\", {\n            enumerable: true,\n            configurable: true,\n            writable: true,\n            value: y\n        });\n    }\n    path(context) {\n        context.drawImage(this.image, this.x, this.y, this.width, this.height);\n    }\n    // TODO: OK?\n    addBounds(bounds) {\n        $217bcb2fe88d1cdd$var$setPoint(bounds, {\n            x: this.x,\n            y: this.y\n        });\n        $217bcb2fe88d1cdd$var$setPoint(bounds, {\n            x: this.width,\n            y: this.height\n        });\n    }\n}\nclass $217bcb2fe88d1cdd$export$51df14243a6273b2 extends $217bcb2fe88d1cdd$export$e0e1ad123bfa6ff4 {\n    constructor(){\n        super(...arguments);\n        Object.defineProperty(this, \"_operations\", {\n            enumerable: true,\n            configurable: true,\n            writable: true,\n            value: []\n        });\n        Object.defineProperty(this, \"blendMode\", {\n            enumerable: true,\n            configurable: true,\n            writable: true,\n            value: (0, $26f287a8eb69ba00$export$c9b8fe72ac71821).NORMAL\n        });\n        Object.defineProperty(this, \"_hasShadows\", {\n            enumerable: true,\n            configurable: true,\n            writable: true,\n            value: false\n        });\n        Object.defineProperty(this, \"_fillAlpha\", {\n            enumerable: true,\n            configurable: true,\n            writable: true,\n            value: void 0\n        });\n        Object.defineProperty(this, \"_strokeAlpha\", {\n            enumerable: true,\n            configurable: true,\n            writable: true,\n            value: void 0\n        });\n    }\n    clear() {\n        super.clear();\n        this._operations.length = 0;\n    }\n    _pushOp(op) {\n        this._operations.push(op);\n    }\n    beginFill(color, alpha = 1) {\n        this._fillAlpha = alpha;\n        if (color) {\n            if (color instanceof (0, $389de129b6cd18b1$export$892596cec99bc70e)) this._pushOp(new $217bcb2fe88d1cdd$var$BeginFill(color.toCSS(alpha)));\n            else {\n                this.isMeasured = true;\n                this._pushOp(new $217bcb2fe88d1cdd$var$BeginFill(color));\n            }\n        } else this._pushOp(new $217bcb2fe88d1cdd$var$BeginFill(\"rgba(0, 0, 0, \" + alpha + \")\"));\n    }\n    endFill() {\n        this._pushOp(new $217bcb2fe88d1cdd$var$EndFill(this._hasShadows));\n    }\n    endStroke() {\n        this._pushOp(new $217bcb2fe88d1cdd$var$EndStroke());\n    }\n    beginPath() {\n        this._pushOp(new $217bcb2fe88d1cdd$var$BeginPath());\n    }\n    lineStyle(width = 0, color, alpha = 1, lineJoin, lineCap) {\n        this._strokeAlpha = alpha;\n        if (color) {\n            if (color instanceof (0, $389de129b6cd18b1$export$892596cec99bc70e)) this._pushOp(new $217bcb2fe88d1cdd$var$LineStyle(width, color.toCSS(alpha), lineJoin, lineCap));\n            else this._pushOp(new $217bcb2fe88d1cdd$var$LineStyle(width, color, lineJoin, lineCap));\n        } else this._pushOp(new $217bcb2fe88d1cdd$var$LineStyle(width, \"rgba(0, 0, 0, \" + alpha + \")\", lineJoin, lineCap));\n    }\n    setLineDash(dash) {\n        this._pushOp(new $217bcb2fe88d1cdd$var$LineDash(dash ? dash : []));\n    }\n    setLineDashOffset(dashOffset = 0) {\n        this._pushOp(new $217bcb2fe88d1cdd$var$LineDashOffset(dashOffset));\n    }\n    drawRect(x, y, width, height) {\n        this._pushOp(new $217bcb2fe88d1cdd$var$DrawRect(x, y, width, height));\n    }\n    drawCircle(x, y, radius) {\n        this._pushOp(new $217bcb2fe88d1cdd$var$DrawCircle(x, y, radius));\n    }\n    drawEllipse(x, y, radiusX, radiusY) {\n        this._pushOp(new $217bcb2fe88d1cdd$var$DrawEllipse(x, y, radiusX, radiusY));\n    }\n    arc(cx, cy, radius, startAngle, endAngle, anticlockwise = false) {\n        this._pushOp(new $217bcb2fe88d1cdd$var$Arc(cx, cy, radius, startAngle, endAngle, anticlockwise));\n    }\n    arcTo(x1, y1, x2, y2, radius) {\n        this._pushOp(new $217bcb2fe88d1cdd$var$ArcTo(x1, y1, x2, y2, radius));\n    }\n    lineTo(x, y) {\n        this._pushOp(new $217bcb2fe88d1cdd$var$LineTo(x, y));\n    }\n    moveTo(x, y) {\n        this._pushOp(new $217bcb2fe88d1cdd$var$MoveTo(x, y));\n    }\n    bezierCurveTo(cpX, cpY, cpX2, cpY2, toX, toY) {\n        this._pushOp(new $217bcb2fe88d1cdd$var$BezierCurveTo(cpX, cpY, cpX2, cpY2, toX, toY));\n    }\n    quadraticCurveTo(cpX, cpY, toX, toY) {\n        this._pushOp(new $217bcb2fe88d1cdd$var$QuadraticCurveTo(cpX, cpY, toX, toY));\n    }\n    closePath() {\n        this._pushOp(new $217bcb2fe88d1cdd$var$ClosePath());\n    }\n    shadow(color, blur = 0, offsetX = 0, offsetY = 0, opacity) {\n        this._hasShadows = true;\n        this._pushOp(new $217bcb2fe88d1cdd$var$Shadow(opacity ? color.toCSS(opacity) : color.toCSS(this._fillAlpha || this._strokeAlpha), blur, offsetX, offsetY));\n    }\n    image(image, width, height, x, y) {\n        this._pushOp(new $217bcb2fe88d1cdd$var$GraphicsImage(image, width, height, x, y));\n    }\n    // https://svgwg.org/svg2-draft/paths.html#DProperty\n    // TODO better error checking\n    svgPath(path) {\n        let x = 0;\n        let y = 0;\n        let cpx = null;\n        let cpy = null;\n        let qcpx = null;\n        let qcpy = null;\n        const SEGMENTS_REGEXP = /([MmZzLlHhVvCcSsQqTtAa])([^MmZzLlHhVvCcSsQqTtAa]*)/g;\n        const ARGS_REGEXP = /[\\u0009\\u0020\\u000A\\u000C\\u000D]*([\\+\\-]?[0-9]*\\.?[0-9]+(?:[eE][\\+\\-]?[0-9]+)?)[\\u0009\\u0020\\u000A\\u000C\\u000D]*,?/g;\n        let match;\n        while((match = SEGMENTS_REGEXP.exec(path)) !== null){\n            const name = match[1];\n            const rest = match[2];\n            const args = [];\n            while((match = ARGS_REGEXP.exec(rest)) !== null)args.push(match[1]);\n            // Reset control point\n            if (name !== \"S\" && name !== \"s\" && name !== \"C\" && name !== \"c\") {\n                cpx = null;\n                cpy = null;\n            }\n            // Reset control point\n            if (name !== \"Q\" && name !== \"q\" && name !== \"T\" && name !== \"t\") {\n                qcpx = null;\n                qcpy = null;\n            }\n            switch(name){\n                case \"M\":\n                    $217bcb2fe88d1cdd$var$checkEvenArgs(name, args.length, 2);\n                    x = +args[0];\n                    y = +args[1];\n                    this.moveTo(x, y);\n                    for(let i = 2; i < args.length; i += 2){\n                        x = +args[i];\n                        y = +args[i + 1];\n                        this.lineTo(x, y);\n                    }\n                    break;\n                case \"m\":\n                    $217bcb2fe88d1cdd$var$checkEvenArgs(name, args.length, 2);\n                    x += +args[0];\n                    y += +args[1];\n                    this.moveTo(x, y);\n                    for(let i = 2; i < args.length; i += 2){\n                        x += +args[i];\n                        y += +args[i + 1];\n                        this.lineTo(x, y);\n                    }\n                    break;\n                case \"L\":\n                    $217bcb2fe88d1cdd$var$checkEvenArgs(name, args.length, 2);\n                    for(let i = 0; i < args.length; i += 2){\n                        x = +args[i];\n                        y = +args[i + 1];\n                        this.lineTo(x, y);\n                    }\n                    break;\n                case \"l\":\n                    $217bcb2fe88d1cdd$var$checkEvenArgs(name, args.length, 2);\n                    for(let i = 0; i < args.length; i += 2){\n                        x += +args[i];\n                        y += +args[i + 1];\n                        this.lineTo(x, y);\n                    }\n                    break;\n                case \"H\":\n                    $217bcb2fe88d1cdd$var$checkMinArgs(name, args.length, 1);\n                    for(let i = 0; i < args.length; ++i){\n                        x = +args[i];\n                        this.lineTo(x, y);\n                    }\n                    break;\n                case \"h\":\n                    $217bcb2fe88d1cdd$var$checkMinArgs(name, args.length, 1);\n                    for(let i = 0; i < args.length; ++i){\n                        x += +args[i];\n                        this.lineTo(x, y);\n                    }\n                    break;\n                case \"V\":\n                    $217bcb2fe88d1cdd$var$checkMinArgs(name, args.length, 1);\n                    for(let i = 0; i < args.length; ++i){\n                        y = +args[i];\n                        this.lineTo(x, y);\n                    }\n                    break;\n                case \"v\":\n                    $217bcb2fe88d1cdd$var$checkMinArgs(name, args.length, 1);\n                    for(let i = 0; i < args.length; ++i){\n                        y += +args[i];\n                        this.lineTo(x, y);\n                    }\n                    break;\n                case \"C\":\n                    $217bcb2fe88d1cdd$var$checkEvenArgs(name, args.length, 6);\n                    for(let i = 0; i < args.length; i += 6){\n                        const x1 = +args[i];\n                        const y1 = +args[i + 1];\n                        cpx = +args[i + 2];\n                        cpy = +args[i + 3];\n                        x = +args[i + 4];\n                        y = +args[i + 5];\n                        this.bezierCurveTo(x1, y1, cpx, cpy, x, y);\n                    }\n                    break;\n                case \"c\":\n                    $217bcb2fe88d1cdd$var$checkEvenArgs(name, args.length, 6);\n                    for(let i = 0; i < args.length; i += 6){\n                        const x1 = +args[i] + x;\n                        const y1 = +args[i + 1] + y;\n                        cpx = +args[i + 2] + x;\n                        cpy = +args[i + 3] + y;\n                        x += +args[i + 4];\n                        y += +args[i + 5];\n                        this.bezierCurveTo(x1, y1, cpx, cpy, x, y);\n                    }\n                    break;\n                case \"S\":\n                    $217bcb2fe88d1cdd$var$checkEvenArgs(name, args.length, 4);\n                    if (cpx === null || cpy === null) {\n                        cpx = x;\n                        cpy = y;\n                    }\n                    for(let i = 0; i < args.length; i += 4){\n                        const x1 = 2 * x - cpx;\n                        const y1 = 2 * y - cpy;\n                        cpx = +args[i];\n                        cpy = +args[i + 1];\n                        x = +args[i + 2];\n                        y = +args[i + 3];\n                        this.bezierCurveTo(x1, y1, cpx, cpy, x, y);\n                    }\n                    break;\n                case \"s\":\n                    $217bcb2fe88d1cdd$var$checkEvenArgs(name, args.length, 4);\n                    if (cpx === null || cpy === null) {\n                        cpx = x;\n                        cpy = y;\n                    }\n                    for(let i = 0; i < args.length; i += 4){\n                        const x1 = 2 * x - cpx;\n                        const y1 = 2 * y - cpy;\n                        cpx = +args[i] + x;\n                        cpy = +args[i + 1] + y;\n                        x += +args[i + 2];\n                        y += +args[i + 3];\n                        this.bezierCurveTo(x1, y1, cpx, cpy, x, y);\n                    }\n                    break;\n                case \"Q\":\n                    $217bcb2fe88d1cdd$var$checkEvenArgs(name, args.length, 4);\n                    for(let i = 0; i < args.length; i += 4){\n                        qcpx = +args[i];\n                        qcpy = +args[i + 1];\n                        x = +args[i + 2];\n                        y = +args[i + 3];\n                        this.quadraticCurveTo(qcpx, qcpy, x, y);\n                    }\n                    break;\n                case \"q\":\n                    $217bcb2fe88d1cdd$var$checkEvenArgs(name, args.length, 4);\n                    for(let i = 0; i < args.length; i += 4){\n                        qcpx = +args[i] + x;\n                        qcpy = +args[i + 1] + y;\n                        x += +args[i + 2];\n                        y += +args[i + 3];\n                        this.quadraticCurveTo(qcpx, qcpy, x, y);\n                    }\n                    break;\n                case \"T\":\n                    $217bcb2fe88d1cdd$var$checkEvenArgs(name, args.length, 2);\n                    if (qcpx === null || qcpy === null) {\n                        qcpx = x;\n                        qcpy = y;\n                    }\n                    for(let i = 0; i < args.length; i += 2){\n                        qcpx = 2 * x - qcpx;\n                        qcpy = 2 * y - qcpy;\n                        x = +args[i];\n                        y = +args[i + 1];\n                        this.quadraticCurveTo(qcpx, qcpy, x, y);\n                    }\n                    break;\n                case \"t\":\n                    $217bcb2fe88d1cdd$var$checkEvenArgs(name, args.length, 2);\n                    if (qcpx === null || qcpy === null) {\n                        qcpx = x;\n                        qcpy = y;\n                    }\n                    for(let i = 0; i < args.length; i += 2){\n                        qcpx = 2 * x - qcpx;\n                        qcpy = 2 * y - qcpy;\n                        x += +args[i];\n                        y += +args[i + 1];\n                        this.quadraticCurveTo(qcpx, qcpy, x, y);\n                    }\n                    break;\n                case \"A\":\n                case \"a\":\n                    const relative = name === \"a\";\n                    $217bcb2fe88d1cdd$var$splitArcFlags(args);\n                    $217bcb2fe88d1cdd$var$checkEvenArgs(name, args.length, 7);\n                    for(let i = 0; i < args.length; i += 7){\n                        let cx = +args[i + 5];\n                        let cy = +args[i + 6];\n                        if (relative) {\n                            cx += x;\n                            cy += y;\n                        }\n                        const bs = (0, $2661fd5dfc261885$export$2e2bcd8739ae039)({\n                            px: x,\n                            py: y,\n                            rx: +args[i],\n                            ry: +args[i + 1],\n                            xAxisRotation: +args[i + 2],\n                            largeArcFlag: $217bcb2fe88d1cdd$var$assertBinary(+args[i + 3]),\n                            sweepFlag: $217bcb2fe88d1cdd$var$assertBinary(+args[i + 4]),\n                            cx: cx,\n                            cy: cy\n                        });\n                        $2f30431acd054e2f$export$79b2f7037acddd43(bs, (b)=>{\n                            this.bezierCurveTo(b.x1, b.y1, b.x2, b.y2, b.x, b.y);\n                            x = b.x;\n                            y = b.y;\n                        });\n                    }\n                    break;\n                case \"Z\":\n                case \"z\":\n                    $217bcb2fe88d1cdd$var$checkArgs(name, args.length, 0);\n                    this.closePath();\n                    break;\n            }\n        }\n    }\n    _runPath(context) {\n        context.beginPath();\n        $2f30431acd054e2f$export$79b2f7037acddd43(this._operations, (op)=>{\n            op.path(context);\n        });\n    }\n    _render(status) {\n        super._render(status);\n        const layerDirty = status.layer.dirty;\n        const interactive = this._isInteractive(status);\n        if (layerDirty || interactive) {\n            const context = status.layer.context;\n            const ghostContext = this._renderer._ghostLayer.context;\n            if (layerDirty) {\n                context.globalCompositeOperation = this.blendMode;\n                context.beginPath();\n            }\n            let color;\n            if (interactive) {\n                ghostContext.beginPath();\n                color = this._getColorId();\n            }\n            $2f30431acd054e2f$export$79b2f7037acddd43(this._operations, (op)=>{\n                if (layerDirty) {\n                    op.path(context);\n                    op.colorize(context, undefined);\n                }\n                if (interactive) {\n                    op.pathGhost(ghostContext);\n                    op.colorizeGhost(ghostContext, color);\n                }\n            });\n        }\n    }\n    renderDetached(context) {\n        if (this.visible) {\n            this._setMatrix();\n            context.save();\n            // We must apply the mask before we transform the element\n            const mask = this.mask;\n            if (mask) {\n                mask._setMatrix();\n                mask._transform(context, 1);\n                mask._runPath(context);\n                context.clip();\n            }\n            // TODO handle compoundAlpha somehow ?\n            context.globalAlpha = this.compoundAlpha * this.alpha;\n            this._transform(context, 1);\n            if (this.filter) context.filter = this.filter;\n            context.globalCompositeOperation = this.blendMode;\n            context.beginPath();\n            $2f30431acd054e2f$export$79b2f7037acddd43(this._operations, (op)=>{\n                op.path(context);\n                op.colorize(context, undefined);\n            });\n            context.restore();\n        }\n    }\n    _addBounds(bounds) {\n        if (this.visible && this.isMeasured) $2f30431acd054e2f$export$79b2f7037acddd43(this._operations, (op)=>{\n            op.addBounds(bounds);\n        });\n    }\n}\nclass $217bcb2fe88d1cdd$export$3def536413f544ed extends $217bcb2fe88d1cdd$export$e0e1ad123bfa6ff4 {\n    constructor(renderer, text, style){\n        super(renderer);\n        Object.defineProperty(this, \"text\", {\n            enumerable: true,\n            configurable: true,\n            writable: true,\n            value: void 0\n        });\n        Object.defineProperty(this, \"style\", {\n            enumerable: true,\n            configurable: true,\n            writable: true,\n            value: void 0\n        });\n        Object.defineProperty(this, \"resolution\", {\n            enumerable: true,\n            configurable: true,\n            writable: true,\n            value: 1\n        });\n        Object.defineProperty(this, \"textVisible\", {\n            enumerable: true,\n            configurable: true,\n            writable: true,\n            value: true\n        });\n        Object.defineProperty(this, \"_textInfo\", {\n            enumerable: true,\n            configurable: true,\n            writable: true,\n            value: void 0\n        });\n        Object.defineProperty(this, \"_originalScale\", {\n            enumerable: true,\n            configurable: true,\n            writable: true,\n            value: 1\n        });\n        this.text = text;\n        this.style = style;\n    }\n    invalidateBounds() {\n        super.invalidateBounds();\n        this._textInfo = undefined;\n    }\n    _shared(context) {\n        if (this.style.textAlign) context.textAlign = this.style.textAlign;\n        if (this.style.direction) context.direction = this.style.direction;\n        if (this.style.textBaseline) context.textBaseline = this.style.textBaseline;\n    }\n    _prerender(status, ignoreGhost = false, ignoreFontWeight = false) {\n        super._render(status);\n        const context = status.layer.context;\n        const ghostContext = this._renderer._ghostLayer.context;\n        // Font style\n        const style = this.style;\n        let fontStyle = this._getFontStyle(undefined, ignoreFontWeight);\n        context.font = fontStyle;\n        if (this._isInteractive(status) && !ignoreGhost) ghostContext.font = fontStyle;\n        // Other parameters\n        if (style.fill) {\n            if (style.fill instanceof (0, $389de129b6cd18b1$export$892596cec99bc70e)) context.fillStyle = style.fill.toCSS(style.fillOpacity != undefined ? style.fillOpacity : 1);\n            else context.fillStyle = style.fill;\n        }\n        if (style.shadowColor) status.layer.context.shadowColor = style.shadowColor.toCSS(style.shadowOpacity || 1);\n        if (style.shadowBlur) status.layer.context.shadowBlur = style.shadowBlur;\n        if (style.shadowOffsetX) status.layer.context.shadowOffsetX = style.shadowOffsetX;\n        if (style.shadowOffsetY) status.layer.context.shadowOffsetY = style.shadowOffsetY;\n        this._shared(context);\n        if (this._isInteractive(status) && !ignoreGhost) {\n            ghostContext.fillStyle = this._getColorId();\n            this._shared(ghostContext);\n        }\n    }\n    _getFontStyle(style2, ignoreFontWeight = false) {\n        // Process defaults\n        const style = this.style;\n        let fontStyle = [];\n        if (style2 && style2.fontVariant) fontStyle.push(style2.fontVariant);\n        else if (style.fontVariant) fontStyle.push(style.fontVariant);\n        if (!ignoreFontWeight) {\n            if (style2 && style2.fontWeight) fontStyle.push(style2.fontWeight);\n            else if (style.fontWeight) fontStyle.push(style.fontWeight);\n        }\n        if (style2 && style2.fontStyle) fontStyle.push(style2.fontStyle);\n        else if (style.fontStyle) fontStyle.push(style.fontStyle);\n        if (style2 && style2.fontSize) {\n            if ($f63bdea45a89cf24$export$7e4aa119212bc614(style2.fontSize)) style2.fontSize = style2.fontSize + \"px\";\n            fontStyle.push(style2.fontSize);\n        } else if (style.fontSize) {\n            if ($f63bdea45a89cf24$export$7e4aa119212bc614(style.fontSize)) style.fontSize = style.fontSize + \"px\";\n            fontStyle.push(style.fontSize);\n        }\n        if (style2 && style2.fontFamily) fontStyle.push(style2.fontFamily);\n        else if (style.fontFamily) fontStyle.push(style.fontFamily);\n        else if (fontStyle.length) fontStyle.push(\"Arial\");\n        return fontStyle.join(\" \");\n    }\n    _render(status) {\n        // We need measurements in order to properly position text for alignment\n        if (!this._textInfo) this._measure(status);\n        if (this.textVisible) {\n            const interactive = this._isInteractive(status);\n            const context = status.layer.context;\n            const layerDirty = status.layer.dirty;\n            const ghostContext = this._renderer._ghostLayer.context;\n            context.save();\n            ghostContext.save();\n            this._prerender(status);\n            // const lines = this.text.toString().replace(/\\r/g, \"\").split(/\\n/);\n            // const x = this._localBounds && (this._localBounds.left < 0) ? Math.abs(this._localBounds.left) : 0;\n            // Process text info produced by _measure()\n            $2f30431acd054e2f$export$79b2f7037acddd43(this._textInfo, (line, _index)=>{\n                $2f30431acd054e2f$export$79b2f7037acddd43(line.textChunks, (chunk, _index)=>{\n                    // Set style\n                    if (chunk.style) {\n                        context.save();\n                        ghostContext.save();\n                        context.font = chunk.style;\n                        if (this._isInteractive(status)) ghostContext.font = chunk.style;\n                    }\n                    if (chunk.fill) {\n                        context.save();\n                        context.fillStyle = chunk.fill.toCSS();\n                    // Color does not affect ghostContext so we not set it\n                    }\n                    // Draw text\n                    if (layerDirty) context.fillText(chunk.text, chunk.offsetX, line.offsetY + chunk.offsetY);\n                    // Draw underline\n                    if (chunk.textDecoration == \"underline\" || chunk.textDecoration == \"line-through\") {\n                        let thickness = 1;\n                        let offset = 1;\n                        let fontSize = chunk.height;\n                        const oversizedBehavior = this.style.oversizedBehavior || \"\";\n                        if ([\n                            \"truncate\",\n                            \"wrap\",\n                            \"wrap-no-break\"\n                        ].indexOf(oversizedBehavior) > -1) {\n                            // Measure actual width of the text so the line fits\n                            const metrics = this._measureText(chunk.text, context);\n                            chunk.width = metrics.actualBoundingBoxLeft + metrics.actualBoundingBoxRight;\n                        }\n                        let offsetX = chunk.offsetX;\n                        switch(this.style.textAlign){\n                            case \"right\":\n                            case \"end\":\n                                offsetX -= chunk.width;\n                                break;\n                            case \"center\":\n                                offsetX -= chunk.width / 2;\n                                break;\n                        }\n                        if (chunk.style) {\n                            const format = (0, $4b06370a9416d0ab$export$cfc95f342033cc43).getTextStyle(chunk.style);\n                            switch(format.fontWeight){\n                                case \"bolder\":\n                                case \"bold\":\n                                case \"700\":\n                                case \"800\":\n                                case \"900\":\n                                    thickness = 2;\n                                    break;\n                            }\n                        }\n                        if (fontSize) offset = fontSize / 20;\n                        let y;\n                        if (chunk.textDecoration == \"line-through\") y = thickness + line.offsetY + chunk.offsetY - chunk.height / 2;\n                        else y = thickness + offset * 1.5 + line.offsetY + chunk.offsetY;\n                        context.save();\n                        context.beginPath();\n                        if (chunk.fill) context.strokeStyle = chunk.fill.toCSS();\n                        else if (this.style.fill && this.style.fill instanceof (0, $389de129b6cd18b1$export$892596cec99bc70e)) context.strokeStyle = this.style.fill.toCSS();\n                        context.lineWidth = thickness * offset;\n                        context.moveTo(offsetX, y);\n                        context.lineTo(offsetX + chunk.width, y);\n                        context.stroke();\n                        context.restore();\n                    }\n                    if (interactive && this.interactive) // Draw text in ghost canvas ONLY if it is set as interactive\n                    // explicitly. This way we avoid hit test anomalies caused by anti\n                    // aliasing of text.\n                    ghostContext.fillText(chunk.text, chunk.offsetX, line.offsetY + chunk.offsetY);\n                    if (chunk.fill) context.restore();\n                    // Reset style\n                    if (chunk.style) {\n                        context.restore();\n                        ghostContext.restore();\n                    }\n                });\n            });\n            context.restore();\n            ghostContext.restore();\n        }\n    }\n    _addBounds(bounds) {\n        if (this.visible && this.isMeasured) {\n            //if (this._textVisible) {\n            const x = this._measure({\n                inactive: this.inactive,\n                layer: this.getLayer()\n            });\n            $217bcb2fe88d1cdd$var$setPoint(bounds, {\n                x: x.left,\n                y: x.top\n            });\n            $217bcb2fe88d1cdd$var$setPoint(bounds, {\n                x: x.right,\n                y: x.bottom\n            });\n        //}\n        }\n    }\n    _ignoreFontWeight() {\n        return /apple/i.test(navigator.vendor);\n    }\n    _measure(status) {\n        const context = status.layer.context;\n        const ghostContext = this._renderer._ghostLayer.context;\n        const rtl = this.style.direction == \"rtl\";\n        // Reset text info\n        this._textInfo = [];\n        // Init\n        const oversizedBehavior = this.style.oversizedBehavior;\n        const maxWidth = this.style.maxWidth;\n        const truncate = $f63bdea45a89cf24$export$7e4aa119212bc614(maxWidth) && oversizedBehavior == \"truncate\";\n        const wrap = $f63bdea45a89cf24$export$7e4aa119212bc614(maxWidth) && (oversizedBehavior == \"wrap\" || oversizedBehavior == \"wrap-no-break\");\n        // Pre-render\n        context.save();\n        ghostContext.save();\n        this._prerender(status, true, this._ignoreFontWeight());\n        // Get default font metrix\n        const refText = \"abcdefghijklmnopqrstuvwxyzABCDEFGHIJKLMNOPQRSTUVWXYZ0123456789 \";\n        // Split up text into lines\n        const lines = this.text.toString().replace(/\\r/g, \"\").split(/\\n/);\n        let styleRestored = true;\n        let minX = 0;\n        let maxX = 0;\n        // Iterate through the lines\n        let offsetY = 0;\n        let currentStyle;\n        $2f30431acd054e2f$export$79b2f7037acddd43(lines, (line, _index)=>{\n            // Split up line into format/value chunks\n            let chunks;\n            if (line == \"\") chunks = [\n                {\n                    type: \"value\",\n                    text: \"\"\n                }\n            ];\n            else chunks = (0, $4b06370a9416d0ab$export$cfc95f342033cc43).chunk(line, false, this.style.ignoreFormatting);\n            while(chunks.length > 0){\n                // Init line object\n                let lineInfo = {\n                    offsetY: offsetY,\n                    ascent: 0,\n                    width: 0,\n                    height: 0,\n                    left: 0,\n                    right: 0,\n                    textChunks: []\n                };\n                // Measure reference text\n                const metrics = this._measureText(refText, context);\n                const height = metrics.actualBoundingBoxAscent + metrics.actualBoundingBoxDescent;\n                lineInfo.height = height;\n                lineInfo.ascent = metrics.actualBoundingBoxAscent;\n                let currentFormat;\n                let currentDecoration = this.style.textDecoration;\n                let currentFill;\n                let currentChunkWidth;\n                let skipFurtherText = false;\n                let firstTextChunk = true;\n                let leftoverChunks = [];\n                let currentVerticalAlign;\n                //let offsetX = 0;\n                //let chunk;\n                //while(chunk = chunks.shift()) {\n                $2f30431acd054e2f$export$1e016427912bfd78(chunks, (chunk, index)=>{\n                    // Format chunk\n                    if (chunk.type == \"format\") {\n                        if (chunk.text == \"[/]\") {\n                            if (!styleRestored) {\n                                context.restore();\n                                ghostContext.restore();\n                                styleRestored = true;\n                            }\n                            currentFill = undefined;\n                            currentStyle = undefined;\n                            currentChunkWidth = undefined;\n                            currentDecoration = this.style.textDecoration;\n                            currentVerticalAlign = undefined;\n                            currentFormat = chunk.text;\n                        } else {\n                            if (!styleRestored) {\n                                context.restore();\n                                ghostContext.restore();\n                            }\n                            let format = (0, $4b06370a9416d0ab$export$cfc95f342033cc43).getTextStyle(chunk.text);\n                            const fontStyle = this._getFontStyle(format);\n                            context.save();\n                            ghostContext.save();\n                            context.font = fontStyle;\n                            currentStyle = fontStyle;\n                            currentFormat = chunk.text;\n                            if (format.textDecoration) currentDecoration = format.textDecoration;\n                            if (format.fill) currentFill = format.fill;\n                            if (format.width) currentChunkWidth = $f63bdea45a89cf24$export$a0a81dc3380ce7d3(format.width);\n                            if (format.verticalAlign) currentVerticalAlign = format.verticalAlign;\n                            styleRestored = false;\n                            // Measure reference text after change of format\n                            const metrics = this._measureText(refText, context);\n                            const height = metrics.actualBoundingBoxAscent + metrics.actualBoundingBoxDescent;\n                            if (height > lineInfo.height) lineInfo.height = height;\n                            if (metrics.actualBoundingBoxAscent > lineInfo.ascent) lineInfo.ascent = metrics.actualBoundingBoxAscent;\n                        }\n                    } else if (chunk.type == \"value\" && !skipFurtherText) {\n                        // Measure\n                        const metrics = this._measureText(chunk.text, context);\n                        let chunkWidth = metrics.actualBoundingBoxLeft + metrics.actualBoundingBoxRight;\n                        // Check for fit\n                        if (truncate) {\n                            // Break words?\n                            let breakWords = firstTextChunk || this.style.breakWords || false;\n                            // Measure ellipsis and check if it fits\n                            const ellipsis = this.style.ellipsis || \"\";\n                            const ellipsisMetrics = this._measureText(ellipsis, context);\n                            const ellipsisWidth = ellipsisMetrics.actualBoundingBoxLeft + ellipsisMetrics.actualBoundingBoxRight;\n                            // Check fit\n                            if (lineInfo.width + chunkWidth > maxWidth) {\n                                const excessWidth = maxWidth - lineInfo.width - ellipsisWidth;\n                                chunk.text = this._truncateText(context, chunk.text, excessWidth, breakWords);\n                                chunk.text += ellipsis;\n                                skipFurtherText = true;\n                            }\n                        } else if (wrap) // Check fit\n                        {\n                            if (lineInfo.width + chunkWidth > maxWidth) {\n                                const excessWidth = maxWidth - lineInfo.width;\n                                const tmpText = this._truncateText(context, chunk.text, excessWidth, false, firstTextChunk && this.style.oversizedBehavior != \"wrap-no-break\");\n                                if (tmpText == \"\") {\n                                    // Unable to fit a single letter - hide the whole label\n                                    this.textVisible = true;\n                                    return false;\n                                }\n                                //skipFurtherText = true;\n                                //Add remaining chunks for the next line\n                                leftoverChunks = chunks.slice(index + 1);\n                                //Add remaining text of current chunk if it was forced-cut\n                                if ($05b1b40b69b15016$export$87c2784dc9fc4ab(tmpText) != $05b1b40b69b15016$export$87c2784dc9fc4ab(chunk.text)) {\n                                    leftoverChunks.unshift({\n                                        type: \"value\",\n                                        text: chunk.text.substr(tmpText.length)\n                                    });\n                                    if (currentFormat) leftoverChunks.unshift({\n                                        type: \"format\",\n                                        text: currentFormat\n                                    });\n                                }\n                                // Set current chunk (truncated)\n                                chunk.text = $05b1b40b69b15016$export$87c2784dc9fc4ab(tmpText);\n                                chunks = [];\n                                skipFurtherText = true;\n                            }\n                        }\n                        // Chunk width?\n                        let leftBoundMod = 1;\n                        let rightBoundMod = 1;\n                        if (currentStyle && currentChunkWidth && currentChunkWidth > chunkWidth) {\n                            // increase horizontal bounding boxes accordingly\n                            const boundsMod = chunkWidth / currentChunkWidth;\n                            switch(this.style.textAlign){\n                                case \"right\":\n                                case \"end\":\n                                    leftBoundMod = boundsMod;\n                                    break;\n                                case \"center\":\n                                    leftBoundMod = boundsMod;\n                                    rightBoundMod = boundsMod;\n                                    break;\n                                default:\n                                    rightBoundMod = boundsMod;\n                            }\n                            chunkWidth = currentChunkWidth;\n                        }\n                        const chunkHeight = metrics.actualBoundingBoxAscent + metrics.actualBoundingBoxDescent;\n                        if (chunkHeight > lineInfo.height) lineInfo.height = chunkHeight;\n                        if (metrics.actualBoundingBoxAscent > lineInfo.ascent) lineInfo.ascent = metrics.actualBoundingBoxAscent;\n                        lineInfo.width += chunkWidth;\n                        lineInfo.left += metrics.actualBoundingBoxLeft / leftBoundMod;\n                        lineInfo.right += metrics.actualBoundingBoxRight / rightBoundMod;\n                        lineInfo.textChunks.push({\n                            style: currentStyle,\n                            fill: currentFill,\n                            text: chunk.text,\n                            width: chunkWidth,\n                            height: chunkHeight,\n                            left: metrics.actualBoundingBoxLeft,\n                            right: metrics.actualBoundingBoxRight,\n                            ascent: metrics.actualBoundingBoxAscent,\n                            offsetX: 0,\n                            offsetY: 0,\n                            textDecoration: currentDecoration,\n                            verticalAlign: currentVerticalAlign\n                        });\n                        //offsetX += chunkWidth;\n                        firstTextChunk = false;\n                    }\n                    leftoverChunks;\n                    return true;\n                //}\n                });\n                if (this.style.lineHeight instanceof (0, $bd0d0c10fd30006b$export$cbc348af47898b5e)) {\n                    lineInfo.height *= this.style.lineHeight.value;\n                    lineInfo.ascent *= this.style.lineHeight.value;\n                } else {\n                    lineInfo.height *= this.style.lineHeight || 1.2;\n                    lineInfo.ascent *= this.style.lineHeight || 1.2;\n                }\n                if (minX < lineInfo.left) minX = lineInfo.left;\n                if (maxX < lineInfo.right) maxX = lineInfo.right;\n                this._textInfo.push(lineInfo);\n                //lineInfo.offsetY += lineInfo.ascent;\n                offsetY += lineInfo.height;\n                // Reset chunks so that it can proceed to the next line\n                chunks = leftoverChunks || [];\n            }\n        });\n        if (!styleRestored) {\n            context.restore();\n            ghostContext.restore();\n        }\n        // Adjust chunk internal offsets\n        $2f30431acd054e2f$export$79b2f7037acddd43(this._textInfo, (lineInfo, _index)=>{\n            let currentChunkOffset = 0;\n            $2f30431acd054e2f$export$79b2f7037acddd43(lineInfo.textChunks, (chunk)=>{\n                chunk.offsetX = currentChunkOffset + chunk.left - lineInfo.left;\n                chunk.offsetY += lineInfo.height - lineInfo.height * (this.style.baselineRatio || 0.19);\n                currentChunkOffset += chunk.width;\n                if (chunk.verticalAlign) switch(chunk.verticalAlign){\n                    case \"super\":\n                        chunk.offsetY -= lineInfo.height / 2 - chunk.height / 2;\n                        break;\n                    case \"sub\":\n                        chunk.offsetY += chunk.height / 2;\n                        break;\n                }\n            });\n        });\n        const bounds = {\n            left: rtl ? -maxX : -minX,\n            top: 0,\n            right: rtl ? minX : maxX,\n            bottom: offsetY\n        };\n        // We need to fit?\n        if (oversizedBehavior !== \"none\") {\n            const ratio = this._fitRatio(bounds);\n            if (ratio < 1) {\n                if (oversizedBehavior == \"fit\") {\n                    if ($f63bdea45a89cf24$export$7e4aa119212bc614(this.style.minScale) && ratio < this.style.minScale) {\n                        this.textVisible = false;\n                        bounds.left = 0;\n                        bounds.top = 0;\n                        bounds.right = 0;\n                        bounds.bottom = 0;\n                    } else {\n                        if (!this._originalScale || this._originalScale == 1) this._originalScale = this.scale;\n                        this.scale = ratio;\n                        this.textVisible = true;\n                    }\n                } else if (oversizedBehavior == \"hide\") {\n                    this.textVisible = false;\n                    bounds.left = 0;\n                    bounds.top = 0;\n                    bounds.right = 0;\n                    bounds.bottom = 0;\n                } else {\n                    switch(this.style.textAlign){\n                        case \"right\":\n                        case \"end\":\n                            bounds.left = rtl ? maxWidth : -maxWidth;\n                            bounds.right = 0;\n                            break;\n                        case \"center\":\n                            bounds.left = -maxWidth / 2;\n                            bounds.right = maxWidth / 2;\n                            break;\n                        default:\n                            bounds.left = 0;\n                            bounds.right = rtl ? -maxWidth : maxWidth;\n                    }\n                    this.scale = this._originalScale || 1;\n                    this._originalScale = undefined;\n                    this.textVisible = true;\n                }\n            } else {\n                this.scale = this._originalScale || 1;\n                this._originalScale = undefined;\n                this.textVisible = true;\n            }\n        }\n        context.restore();\n        ghostContext.restore();\n        return bounds;\n    }\n    _fitRatio(bounds) {\n        const maxW = this.style.maxWidth;\n        const maxH = this.style.maxHeight;\n        if (!$f63bdea45a89cf24$export$7e4aa119212bc614(maxW) && !$f63bdea45a89cf24$export$7e4aa119212bc614(maxH)) return 1;\n        const w = bounds.right - bounds.left;\n        const h = bounds.bottom - bounds.top;\n        return Math.min(maxW / w || 1, maxH / h || 1);\n    }\n    _truncateText(context, text, maxWidth, breakWords = false, fallbackBreakWords = true) {\n        let width;\n        do {\n            if (breakWords) text = text.slice(0, -1);\n            else {\n                let tmp = text.replace(/[^,;:!?\\\\\\/\\s​]+[,;:!?\\\\\\/\\s​]*$/g, \"\");\n                if ((tmp == \"\" || tmp === text) && fallbackBreakWords) breakWords = true;\n                else if (tmp == \"\") return text;\n                else text = tmp;\n            }\n            const metrics = this._measureText(text, context);\n            width = metrics.actualBoundingBoxLeft + metrics.actualBoundingBoxRight;\n        }while (width > maxWidth && text != \"\");\n        return text;\n    }\n    _measureText(text, context) {\n        let metrics = context.measureText(text);\n        let fakeMetrics = {};\n        if (metrics.actualBoundingBoxAscent == null) {\n            const div = document.createElement(\"div\");\n            div.innerText = text;\n            div.style.visibility = \"hidden\";\n            div.style.position = \"absolute\";\n            div.style.top = \"-1000000px;\";\n            div.style.fontFamily = this.style.fontFamily || \"\";\n            div.style.fontSize = this.style.fontSize + \"\";\n            document.body.appendChild(div);\n            const bbox = div.getBoundingClientRect();\n            document.body.removeChild(div);\n            const h = bbox.height;\n            const w = metrics.width;\n            let left = 0;\n            let right = w;\n            fakeMetrics = {\n                actualBoundingBoxAscent: h,\n                actualBoundingBoxDescent: 0,\n                actualBoundingBoxLeft: left,\n                actualBoundingBoxRight: right,\n                fontBoundingBoxAscent: h,\n                fontBoundingBoxDescent: 0,\n                width: w\n            };\n        //return fake;\n        } else fakeMetrics = {\n            actualBoundingBoxAscent: metrics.actualBoundingBoxAscent,\n            actualBoundingBoxDescent: metrics.actualBoundingBoxDescent,\n            actualBoundingBoxLeft: metrics.actualBoundingBoxLeft,\n            actualBoundingBoxRight: metrics.actualBoundingBoxRight,\n            fontBoundingBoxAscent: metrics.actualBoundingBoxAscent,\n            fontBoundingBoxDescent: metrics.actualBoundingBoxDescent,\n            width: metrics.width\n        };\n        const w = metrics.width;\n        switch(this.style.textAlign){\n            case \"right\":\n            case \"end\":\n                fakeMetrics.actualBoundingBoxLeft = w;\n                fakeMetrics.actualBoundingBoxRight = 0;\n                break;\n            case \"center\":\n                fakeMetrics.actualBoundingBoxLeft = w / 2;\n                fakeMetrics.actualBoundingBoxRight = w / 2;\n                break;\n            default:\n                fakeMetrics.actualBoundingBoxLeft = 0;\n                fakeMetrics.actualBoundingBoxRight = w;\n        }\n        return fakeMetrics;\n    }\n}\nclass $217bcb2fe88d1cdd$export$14f1f3efc2895a7c {\n    constructor(){\n        //public wordWrapWidth: number = 100;\n        Object.defineProperty(this, \"fill\", {\n            enumerable: true,\n            configurable: true,\n            writable: true,\n            value: void 0\n        });\n        Object.defineProperty(this, \"fillOpacity\", {\n            enumerable: true,\n            configurable: true,\n            writable: true,\n            value: void 0\n        });\n        Object.defineProperty(this, \"textAlign\", {\n            enumerable: true,\n            configurable: true,\n            writable: true,\n            value: void 0\n        });\n        Object.defineProperty(this, \"fontFamily\", {\n            enumerable: true,\n            configurable: true,\n            writable: true,\n            value: void 0\n        });\n        Object.defineProperty(this, \"fontSize\", {\n            enumerable: true,\n            configurable: true,\n            writable: true,\n            value: void 0\n        });\n        Object.defineProperty(this, \"fontWeight\", {\n            enumerable: true,\n            configurable: true,\n            writable: true,\n            value: void 0\n        });\n        Object.defineProperty(this, \"fontStyle\", {\n            enumerable: true,\n            configurable: true,\n            writable: true,\n            value: void 0\n        });\n        Object.defineProperty(this, \"fontVariant\", {\n            enumerable: true,\n            configurable: true,\n            writable: true,\n            value: void 0\n        });\n        Object.defineProperty(this, \"textDecoration\", {\n            enumerable: true,\n            configurable: true,\n            writable: true,\n            value: void 0\n        });\n        Object.defineProperty(this, \"shadowColor\", {\n            enumerable: true,\n            configurable: true,\n            writable: true,\n            value: void 0\n        });\n        Object.defineProperty(this, \"shadowBlur\", {\n            enumerable: true,\n            configurable: true,\n            writable: true,\n            value: void 0\n        });\n        Object.defineProperty(this, \"shadowOffsetX\", {\n            enumerable: true,\n            configurable: true,\n            writable: true,\n            value: void 0\n        });\n        Object.defineProperty(this, \"shadowOffsetY\", {\n            enumerable: true,\n            configurable: true,\n            writable: true,\n            value: void 0\n        });\n        Object.defineProperty(this, \"shadowOpacity\", {\n            enumerable: true,\n            configurable: true,\n            writable: true,\n            value: void 0\n        });\n        // leading?: number;\n        // letterSpacing?: number;\n        Object.defineProperty(this, \"lineHeight\", {\n            enumerable: true,\n            configurable: true,\n            writable: true,\n            value: (0, $bd0d0c10fd30006b$export$626336c2cd4b14de)(120)\n        });\n        Object.defineProperty(this, \"baselineRatio\", {\n            enumerable: true,\n            configurable: true,\n            writable: true,\n            value: 0.19\n        });\n        // padding?: number;\n        // stroke?: number;\n        // strokeThickness?: number;\n        // trim?: number;\n        // wordWrap?: boolean;\n        Object.defineProperty(this, \"direction\", {\n            enumerable: true,\n            configurable: true,\n            writable: true,\n            value: void 0\n        });\n        Object.defineProperty(this, \"textBaseline\", {\n            enumerable: true,\n            configurable: true,\n            writable: true,\n            value: void 0\n        });\n        Object.defineProperty(this, \"oversizedBehavior\", {\n            enumerable: true,\n            configurable: true,\n            writable: true,\n            value: \"none\"\n        });\n        Object.defineProperty(this, \"breakWords\", {\n            enumerable: true,\n            configurable: true,\n            writable: true,\n            value: false\n        });\n        Object.defineProperty(this, \"ellipsis\", {\n            enumerable: true,\n            configurable: true,\n            writable: true,\n            value: \"\\u2026\"\n        });\n        Object.defineProperty(this, \"maxWidth\", {\n            enumerable: true,\n            configurable: true,\n            writable: true,\n            value: void 0\n        });\n        Object.defineProperty(this, \"maxHeight\", {\n            enumerable: true,\n            configurable: true,\n            writable: true,\n            value: void 0\n        });\n        Object.defineProperty(this, \"minScale\", {\n            enumerable: true,\n            configurable: true,\n            writable: true,\n            value: void 0\n        });\n        Object.defineProperty(this, \"ignoreFormatting\", {\n            enumerable: true,\n            configurable: true,\n            writable: true,\n            value: false\n        });\n    }\n}\nclass $217bcb2fe88d1cdd$export$6f70e6edef4626e6 extends $217bcb2fe88d1cdd$export$3def536413f544ed {\n    constructor(){\n        super(...arguments);\n        Object.defineProperty(this, \"textType\", {\n            enumerable: true,\n            configurable: true,\n            writable: true,\n            value: \"circular\"\n        });\n        Object.defineProperty(this, \"radius\", {\n            enumerable: true,\n            configurable: true,\n            writable: true,\n            value: void 0\n        });\n        Object.defineProperty(this, \"startAngle\", {\n            enumerable: true,\n            configurable: true,\n            writable: true,\n            value: void 0\n        });\n        Object.defineProperty(this, \"inside\", {\n            enumerable: true,\n            configurable: true,\n            writable: true,\n            value: false\n        });\n        Object.defineProperty(this, \"orientation\", {\n            enumerable: true,\n            configurable: true,\n            writable: true,\n            value: \"auto\"\n        });\n        Object.defineProperty(this, \"kerning\", {\n            enumerable: true,\n            configurable: true,\n            writable: true,\n            value: 0\n        });\n        Object.defineProperty(this, \"_textReversed\", {\n            enumerable: true,\n            configurable: true,\n            writable: true,\n            value: false\n        });\n    }\n    _render(status) {\n        switch(this.textType){\n            case \"circular\":\n                this._renderCircular(status);\n                break;\n            default:\n                super._render(status);\n                break;\n        }\n    }\n    _renderCircular(status) {\n        if (this.textVisible) {\n            this._prerender(status);\n            const interactive = this._isInteractive(status);\n            const context = status.layer.context;\n            const layerDirty = status.layer.dirty;\n            const ghostContext = this._renderer._ghostLayer.context;\n            // Savepoint\n            context.save();\n            if (interactive) ghostContext.save();\n            // We need measurements in order to properly position text for alignment\n            if (!this._textInfo) this._measure(status);\n            // Init\n            let radius = this.radius || 0;\n            let startAngle = this.startAngle || 0;\n            let deltaAngle = 0;\n            let orientation = this.orientation;\n            let inward = orientation == \"auto\" ? \"auto\" : orientation == \"inward\";\n            const inside = this.inside;\n            const align = this.style.textAlign || \"left\";\n            const kerning = this.kerning || 0;\n            let clockwise = align == \"left\" ? 1 : -1;\n            const shouldReverse = !this._textReversed;\n            // Check if we need to invert the whole stuff\n            if (inward == \"auto\") {\n                // Calc max angle so we know whether we need to flip it\n                let maxAngle = 0;\n                let midAngle = 0;\n                $2f30431acd054e2f$export$79b2f7037acddd43(this._textInfo, (line, _index)=>{\n                    const deltaAngle = startAngle + line.width / (radius - line.height) / 2 * -clockwise;\n                    if (deltaAngle > maxAngle) maxAngle = deltaAngle;\n                });\n                if (align == \"left\") midAngle = (maxAngle + deltaAngle / 2) * $f43e9e04b3f0548b$export$e035ae0f6b8ef5d;\n                else if (align == \"right\") midAngle = (maxAngle - deltaAngle / 2) * $f43e9e04b3f0548b$export$e035ae0f6b8ef5d;\n                else midAngle = startAngle * $f43e9e04b3f0548b$export$e035ae0f6b8ef5d;\n                midAngle = $f43e9e04b3f0548b$export$e3df76cf4464bc81(midAngle);\n                inward = midAngle >= 270 || midAngle <= 90;\n            }\n            if (inward == true && shouldReverse) {\n                this._textInfo.reverse();\n                this._textReversed = true;\n            }\n            // if ((inward == false && align == \"left\") || (inward == true && align == \"right\")) {\n            // \tclockwise *= -1;\n            // }\n            // Process text info produced by _measure()\n            $2f30431acd054e2f$export$79b2f7037acddd43(this._textInfo, (line, _index)=>{\n                const textHeight = line.height;\n                // Adjust radius (for `inside = false`)\n                // Radius adjustment for `inside = false` is below the line calculation\n                if (!inside) radius += textHeight;\n                // Reverse letters if we're painting them counter-clockwise\n                if ((clockwise == -1 && inward || clockwise == 1 && !inward) && shouldReverse) line.textChunks.reverse();\n                // Init angles\n                let lineStartAngle = startAngle;\n                deltaAngle = 0;\n                // Adjust for center-align\n                if (align == \"center\") {\n                    lineStartAngle += line.width / (radius - textHeight) / 2 * -clockwise;\n                    deltaAngle = lineStartAngle - startAngle;\n                }\n                // if (inward == \"auto\") {\n                // \tlet midAngle;\n                // \tif (align == \"left\") {\n                // \t\tmidAngle = (lineStartAngle + deltaAngle / 2) * $math.DEGREES;\n                // \t}\n                // \telse if () {\n                // \t\tmidAngle = (lineStartAngle - deltaAngle / 2) * $math.DEGREES;\n                // \t}\n                // \tinward = (midAngle >= 270) || (midAngle <= 90);\n                // }\n                // Rotate letters if they are facing outward\n                lineStartAngle += Math.PI * (inward ? 0 : 1); // Rotate 180 if outward\n                // Savepoint\n                context.save();\n                if (interactive) ghostContext.save();\n                // Assume starting angle\n                context.rotate(lineStartAngle);\n                if (interactive) ghostContext.rotate(lineStartAngle);\n                let angleShift = 0;\n                $2f30431acd054e2f$export$79b2f7037acddd43(line.textChunks, (chunk, _index)=>{\n                    // Draw the letter\n                    const char = chunk.text;\n                    const charWidth = chunk.width;\n                    // Rotate half a letter\n                    angleShift = charWidth / 2 / (radius - textHeight) * clockwise;\n                    context.rotate(angleShift);\n                    if (interactive) ghostContext.rotate(angleShift);\n                    // Set style\n                    if (chunk.style) {\n                        context.save();\n                        ghostContext.save();\n                        context.font = chunk.style;\n                        if (interactive) ghostContext.font = chunk.style;\n                    }\n                    if (chunk.fill) {\n                        context.save();\n                        context.fillStyle = chunk.fill.toCSS();\n                    // Color does not affect ghostContext so we not set it\n                    }\n                    // Center letters\n                    context.textBaseline = \"middle\";\n                    context.textAlign = \"center\";\n                    if (interactive) {\n                        ghostContext.textBaseline = \"middle\";\n                        ghostContext.textAlign = \"center\";\n                    }\n                    // Plop the letter\n                    if (layerDirty) context.fillText(char, 0, (inward ? 1 : -1) * (0 - radius + textHeight / 2));\n                    if (interactive) ghostContext.fillText(char, 0, (inward ? 1 : -1) * (0 - radius + textHeight / 2));\n                    if (chunk.fill) context.restore();\n                    // Reset style\n                    if (chunk.style) {\n                        context.restore();\n                        ghostContext.restore();\n                    }\n                    // Rotate half a letter and add spacing\n                    angleShift = (charWidth / 2 + kerning) / (radius - textHeight) * clockwise;\n                    context.rotate(angleShift);\n                    if (interactive) ghostContext.rotate(angleShift);\n                });\n                // Restore angle\n                context.restore();\n                if (interactive) ghostContext.restore();\n                // Adjust radius (for `inside = true`)\n                if (inside) radius -= textHeight;\n            });\n            // Restore\n            context.restore();\n            if (interactive) ghostContext.restore();\n        }\n    }\n    _measure(status) {\n        switch(this.textType){\n            case \"circular\":\n                return this._measureCircular(status);\n            default:\n                return super._measure(status);\n        }\n    }\n    _measureCircular(status) {\n        const context = status.layer.context;\n        const ghostContext = this._renderer._ghostLayer.context;\n        const rtl = this.style.direction == \"rtl\";\n        const oversizedBehavior = this.style.oversizedBehavior;\n        const maxWidth = this.style.maxWidth;\n        const truncate = $f63bdea45a89cf24$export$7e4aa119212bc614(maxWidth) && oversizedBehavior == \"truncate\";\n        const ellipsis = this.style.ellipsis || \"\";\n        let ellipsisMetrics;\n        //const wrap = $type.isNumber(maxWidth) && (oversizedBehavior == \"wrap\" || oversizedBehavior == \"wrap-no-break\");\n        // Reset text info\n        this.textVisible = true;\n        this._textInfo = [];\n        this._textReversed = false;\n        // Pre-render\n        context.save();\n        ghostContext.save();\n        this._prerender(status, true);\n        // Split up text into lines\n        const lines = this.text.toString().replace(/\\r/g, \"\").split(/\\n/);\n        let styleRestored = true;\n        let totalWidth = 0;\n        // Iterate through the lines\n        let offsetY = 0;\n        $2f30431acd054e2f$export$79b2f7037acddd43(lines, (line, _index)=>{\n            // Split up line into format/value chunks\n            let chunks = (0, $4b06370a9416d0ab$export$cfc95f342033cc43).chunk(line, false, this.style.ignoreFormatting);\n            // Init line object\n            let lineInfo = {\n                offsetY: offsetY,\n                ascent: 0,\n                width: 0,\n                height: 0,\n                left: 0,\n                right: 0,\n                textChunks: []\n            };\n            let currentStyle;\n            let currentFill;\n            let currentChunkWidth;\n            //while(chunk = chunks.shift()) {\n            $2f30431acd054e2f$export$79b2f7037acddd43(chunks, (chunk, _index)=>{\n                // Format chunk\n                if (chunk.type == \"format\") {\n                    if (chunk.text == \"[/]\") {\n                        if (!styleRestored) {\n                            context.restore();\n                            ghostContext.restore();\n                            styleRestored = true;\n                        }\n                        currentFill = undefined;\n                        currentStyle = undefined;\n                        currentChunkWidth = undefined;\n                    } else {\n                        let format = (0, $4b06370a9416d0ab$export$cfc95f342033cc43).getTextStyle(chunk.text);\n                        const fontStyle = this._getFontStyle(format);\n                        context.save();\n                        ghostContext.save();\n                        context.font = fontStyle;\n                        currentStyle = fontStyle;\n                        if (format.fill) currentFill = format.fill;\n                        if (format.width) currentChunkWidth = $f63bdea45a89cf24$export$a0a81dc3380ce7d3(format.width);\n                        styleRestored = false;\n                    }\n                    if (truncate) ellipsisMetrics = this._measureText(ellipsis, context);\n                } else if (chunk.type == \"value\") {\n                    // Measure each letter\n                    let chars = chunk.text.match(/./ug) || [];\n                    if (rtl) {\n                        chars = $05b1b40b69b15016$export$d05bbe0328e41cc6(chunk.text);\n                        chars.reverse();\n                    }\n                    for(let i = 0; i < chars.length; i++){\n                        const char = chars[i];\n                        // Measure\n                        const metrics = this._measureText(char, context);\n                        let chunkWidth = metrics.width;\n                        // Chunk width?\n                        if (currentStyle && currentChunkWidth && currentChunkWidth > chunkWidth) chunkWidth = currentChunkWidth;\n                        const chunkHeight = metrics.actualBoundingBoxAscent + metrics.actualBoundingBoxDescent;\n                        if (chunkHeight > lineInfo.height) lineInfo.height = chunkHeight;\n                        if (metrics.actualBoundingBoxAscent > lineInfo.ascent) lineInfo.ascent = metrics.actualBoundingBoxAscent;\n                        totalWidth += chunkWidth;\n                        // Handle oversized behavior\n                        if (truncate) {\n                            // Measure ellipsis and check if it fits\n                            if (!ellipsisMetrics) ellipsisMetrics = this._measureText(ellipsis, context);\n                            const ellipsisWidth = ellipsisMetrics.actualBoundingBoxLeft + ellipsisMetrics.actualBoundingBoxRight;\n                            //totalWidth += ellipsisWidth;\n                            if (totalWidth + ellipsisWidth > maxWidth) {\n                                if (lineInfo.textChunks.length == 1) this.textVisible = false;\n                                else {\n                                    lineInfo.width += ellipsisWidth;\n                                    lineInfo.left += ellipsisMetrics.actualBoundingBoxLeft;\n                                    lineInfo.right += ellipsisMetrics.actualBoundingBoxRight;\n                                    lineInfo.textChunks.push({\n                                        style: currentStyle,\n                                        fill: currentFill,\n                                        text: ellipsis,\n                                        width: ellipsisWidth,\n                                        height: chunkHeight + ellipsisMetrics.actualBoundingBoxDescent,\n                                        left: ellipsisMetrics.actualBoundingBoxLeft,\n                                        right: ellipsisMetrics.actualBoundingBoxRight,\n                                        ascent: ellipsisMetrics.actualBoundingBoxAscent,\n                                        offsetX: 0,\n                                        offsetY: chunkHeight,\n                                        textDecoration: undefined\n                                    });\n                                }\n                                break;\n                            }\n                        }\n                        lineInfo.width += chunkWidth;\n                        lineInfo.left += metrics.actualBoundingBoxLeft;\n                        lineInfo.right += metrics.actualBoundingBoxRight;\n                        lineInfo.textChunks.push({\n                            style: currentStyle,\n                            fill: currentFill,\n                            text: char,\n                            width: chunkWidth,\n                            height: chunkHeight + metrics.actualBoundingBoxDescent,\n                            left: metrics.actualBoundingBoxLeft,\n                            right: metrics.actualBoundingBoxRight,\n                            ascent: metrics.actualBoundingBoxAscent,\n                            offsetX: 0,\n                            offsetY: chunkHeight,\n                            textDecoration: undefined\n                        });\n                        rtl;\n                    }\n                }\n            });\n            if (this.style.lineHeight instanceof (0, $bd0d0c10fd30006b$export$cbc348af47898b5e)) lineInfo.height *= this.style.lineHeight.value;\n            else lineInfo.height *= this.style.lineHeight || 1.2;\n            this._textInfo.push(lineInfo);\n            //lineInfo.offsetY += lineInfo.ascent;\n            offsetY += lineInfo.height;\n        });\n        if (!styleRestored) {\n            context.restore();\n            ghostContext.restore();\n        }\n        if (oversizedBehavior == \"hide\" && totalWidth > maxWidth) this.textVisible = false;\n        // Adjust chunk internal offsets\n        $2f30431acd054e2f$export$79b2f7037acddd43(this._textInfo, (lineInfo)=>{\n            $2f30431acd054e2f$export$79b2f7037acddd43(lineInfo.textChunks, (chunk)=>{\n                chunk.offsetY += Math.round((lineInfo.height - chunk.height + (lineInfo.ascent - chunk.ascent)) / 2);\n            });\n        });\n        context.restore();\n        ghostContext.restore();\n        return {\n            left: 0,\n            top: 0,\n            right: 0,\n            bottom: 0\n        };\n    }\n}\nclass $217bcb2fe88d1cdd$export$e53fcdbfdf4d0d97 extends $217bcb2fe88d1cdd$export$e0e1ad123bfa6ff4 {\n    constructor(renderer, image){\n        super(renderer);\n        Object.defineProperty(this, \"width\", {\n            enumerable: true,\n            configurable: true,\n            writable: true,\n            value: void 0\n        });\n        Object.defineProperty(this, \"height\", {\n            enumerable: true,\n            configurable: true,\n            writable: true,\n            value: void 0\n        });\n        Object.defineProperty(this, \"image\", {\n            enumerable: true,\n            configurable: true,\n            writable: true,\n            value: void 0\n        });\n        Object.defineProperty(this, \"tainted\", {\n            enumerable: true,\n            configurable: true,\n            writable: true,\n            value: void 0\n        });\n        Object.defineProperty(this, \"shadowColor\", {\n            enumerable: true,\n            configurable: true,\n            writable: true,\n            value: void 0\n        });\n        Object.defineProperty(this, \"shadowBlur\", {\n            enumerable: true,\n            configurable: true,\n            writable: true,\n            value: void 0\n        });\n        Object.defineProperty(this, \"shadowOffsetX\", {\n            enumerable: true,\n            configurable: true,\n            writable: true,\n            value: void 0\n        });\n        Object.defineProperty(this, \"shadowOffsetY\", {\n            enumerable: true,\n            configurable: true,\n            writable: true,\n            value: void 0\n        });\n        Object.defineProperty(this, \"shadowOpacity\", {\n            enumerable: true,\n            configurable: true,\n            writable: true,\n            value: void 0\n        });\n        Object.defineProperty(this, \"_imageMask\", {\n            enumerable: true,\n            configurable: true,\n            writable: true,\n            value: void 0\n        });\n        this.image = image;\n    }\n    _dispose() {\n        super._dispose();\n        if (this._imageMask) $217bcb2fe88d1cdd$var$clearCanvas(this._imageMask);\n    }\n    getLocalBounds() {\n        if (!this._localBounds) {\n            let w = 0;\n            let h = 0;\n            if (this.width) w = this.width;\n            if (this.height) h = this.height;\n            this._localBounds = {\n                left: 0,\n                top: 0,\n                right: w,\n                bottom: h\n            };\n            this._addBounds(this._localBounds);\n        }\n        return this._localBounds;\n    }\n    _render(status) {\n        super._render(status);\n        if (this.image) {\n            if (this.tainted === undefined) {\n                this.tainted = $217bcb2fe88d1cdd$var$isTainted(this.image);\n                status.layer.tainted = true;\n            }\n            if (this.tainted && this._renderer._omitTainted) return;\n            if (status.layer.dirty) {\n                if (this.shadowColor) status.layer.context.shadowColor = this.shadowColor.toCSS(this.shadowOpacity || 1);\n                if (this.shadowBlur) status.layer.context.shadowBlur = this.shadowBlur;\n                if (this.shadowOffsetX) status.layer.context.shadowOffsetX = this.shadowOffsetX;\n                if (this.shadowOffsetY) status.layer.context.shadowOffsetY = this.shadowOffsetY;\n                // TODO should this round ?\n                const width = this.width || this.image.naturalWidth;\n                const height = this.height || this.image.naturalHeight;\n                status.layer.context.drawImage(this.image, 0, 0, width, height);\n            }\n            if (this.interactive && this._isInteractive(status)) {\n                const mask = this._getMask(this.image);\n                this._renderer._ghostLayer.context.drawImage(mask, 0, 0);\n            }\n        }\n    }\n    clear() {\n        super.clear();\n        this.image = undefined;\n        this._imageMask = undefined;\n    }\n    _getMask(image) {\n        if (this._imageMask === undefined) {\n            // TODO should this round ?\n            const width = this.width || image.naturalWidth;\n            const height = this.height || image.naturalHeight;\n            // We need to create a second canvas because destination-in clears out the entire canvas\n            const canvas = document.createElement(\"canvas\");\n            canvas.width = width;\n            canvas.height = height;\n            const context = canvas.getContext(\"2d\");\n            context.imageSmoothingEnabled = false;\n            context.fillStyle = this._getColorId();\n            context.fillRect(0, 0, width, height);\n            if (!$217bcb2fe88d1cdd$var$isTainted(image)) {\n                context.globalCompositeOperation = \"destination-in\";\n                context.drawImage(image, 0, 0, width, height);\n            }\n            this._imageMask = canvas;\n        }\n        return this._imageMask;\n    }\n}\nclass $217bcb2fe88d1cdd$export$4e9e47eb662c1d9f {\n    constructor(event, originalPoint, point, bbox){\n        Object.defineProperty(this, \"event\", {\n            enumerable: true,\n            configurable: true,\n            writable: true,\n            value: event\n        });\n        Object.defineProperty(this, \"originalPoint\", {\n            enumerable: true,\n            configurable: true,\n            writable: true,\n            value: originalPoint\n        });\n        Object.defineProperty(this, \"point\", {\n            enumerable: true,\n            configurable: true,\n            writable: true,\n            value: point\n        });\n        Object.defineProperty(this, \"bbox\", {\n            enumerable: true,\n            configurable: true,\n            writable: true,\n            value: bbox\n        });\n        Object.defineProperty(this, \"id\", {\n            enumerable: true,\n            configurable: true,\n            writable: true,\n            value: void 0\n        });\n        Object.defineProperty(this, \"simulated\", {\n            enumerable: true,\n            configurable: true,\n            writable: true,\n            value: false\n        });\n        Object.defineProperty(this, \"native\", {\n            enumerable: true,\n            configurable: true,\n            writable: true,\n            value: true\n        });\n        if ($05b1b40b69b15016$export$cde6a56f9669daf6(\"touchevents\") && event instanceof Touch) this.id = event.identifier;\n        else this.id = null;\n    }\n}\nclass $217bcb2fe88d1cdd$export$7adc20298958481a extends (0, $a363f66303166aa1$export$e5175346f02c1d15) {\n    constructor(resolution){\n        super();\n        Object.defineProperty(this, \"view\", {\n            enumerable: true,\n            configurable: true,\n            writable: true,\n            value: document.createElement(\"div\")\n        });\n        Object.defineProperty(this, \"_layerDom\", {\n            enumerable: true,\n            configurable: true,\n            writable: true,\n            value: document.createElement(\"div\")\n        });\n        Object.defineProperty(this, \"layers\", {\n            enumerable: true,\n            configurable: true,\n            writable: true,\n            value: []\n        });\n        Object.defineProperty(this, \"_dirtyLayers\", {\n            enumerable: true,\n            configurable: true,\n            writable: true,\n            value: []\n        });\n        Object.defineProperty(this, \"defaultLayer\", {\n            enumerable: true,\n            configurable: true,\n            writable: true,\n            value: this.getLayer(0)\n        });\n        Object.defineProperty(this, \"_ghostLayer\", {\n            enumerable: true,\n            configurable: true,\n            writable: true,\n            value: new $217bcb2fe88d1cdd$var$GhostLayer()\n        });\n        Object.defineProperty(this, \"_patternCanvas\", {\n            enumerable: true,\n            configurable: true,\n            writable: true,\n            value: document.createElement(\"canvas\")\n        });\n        Object.defineProperty(this, \"_patternContext\", {\n            enumerable: true,\n            configurable: true,\n            writable: true,\n            value: this._patternCanvas.getContext(\"2d\")\n        });\n        Object.defineProperty(this, \"_realWidth\", {\n            enumerable: true,\n            configurable: true,\n            writable: true,\n            value: 0\n        });\n        Object.defineProperty(this, \"_realHeight\", {\n            enumerable: true,\n            configurable: true,\n            writable: true,\n            value: 0\n        });\n        Object.defineProperty(this, \"_calculatedWidth\", {\n            enumerable: true,\n            configurable: true,\n            writable: true,\n            value: 0\n        });\n        Object.defineProperty(this, \"_calculatedHeight\", {\n            enumerable: true,\n            configurable: true,\n            writable: true,\n            value: 0\n        });\n        Object.defineProperty(this, \"resolution\", {\n            enumerable: true,\n            configurable: true,\n            writable: true,\n            value: void 0\n        });\n        Object.defineProperty(this, \"interactionsEnabled\", {\n            enumerable: true,\n            configurable: true,\n            writable: true,\n            value: true\n        });\n        Object.defineProperty(this, \"_listeners\", {\n            enumerable: true,\n            configurable: true,\n            writable: true,\n            value: {}\n        });\n        Object.defineProperty(this, \"_events\", {\n            enumerable: true,\n            configurable: true,\n            writable: true,\n            value: {}\n        });\n        Object.defineProperty(this, \"_colorId\", {\n            enumerable: true,\n            configurable: true,\n            writable: true,\n            value: 0\n        });\n        Object.defineProperty(this, \"_colorMap\", {\n            enumerable: true,\n            configurable: true,\n            writable: true,\n            value: {}\n        });\n        Object.defineProperty(this, \"_forceInteractive\", {\n            enumerable: true,\n            configurable: true,\n            writable: true,\n            value: 0\n        });\n        Object.defineProperty(this, \"_omitTainted\", {\n            enumerable: true,\n            configurable: true,\n            writable: true,\n            value: false\n        });\n        // TODO this should store the Id as well\n        Object.defineProperty(this, \"_hovering\", {\n            enumerable: true,\n            configurable: true,\n            writable: true,\n            value: new Set()\n        });\n        Object.defineProperty(this, \"_dragging\", {\n            enumerable: true,\n            configurable: true,\n            writable: true,\n            value: []\n        });\n        Object.defineProperty(this, \"_mousedown\", {\n            enumerable: true,\n            configurable: true,\n            writable: true,\n            value: []\n        });\n        Object.defineProperty(this, \"_lastPointerMoveEvent\", {\n            enumerable: true,\n            configurable: true,\n            writable: true,\n            value: void 0\n        });\n        Object.defineProperty(this, \"tapToActivate\", {\n            enumerable: true,\n            configurable: true,\n            writable: true,\n            value: false\n        });\n        Object.defineProperty(this, \"tapToActivateTimeout\", {\n            enumerable: true,\n            configurable: true,\n            writable: true,\n            value: 3000\n        });\n        Object.defineProperty(this, \"_touchActive\", {\n            enumerable: true,\n            configurable: true,\n            writable: true,\n            value: false\n        });\n        Object.defineProperty(this, \"_touchActiveTimeout\", {\n            enumerable: true,\n            configurable: true,\n            writable: true,\n            value: void 0\n        });\n        if (resolution == null) this.resolution = window.devicePixelRatio;\n        else this.resolution = resolution;\n        this.view.style.position = \"absolute\";\n        this.view.setAttribute(\"aria-hidden\", \"true\");\n        this.view.appendChild(this._layerDom);\n        this._disposers.push(new (0, $a363f66303166aa1$export$6039fc6176d96e35)(()=>{\n            $e66f9343b5144e1a$export$79b2f7037acddd43(this._events, (_key, events)=>{\n                events.disposer.dispose();\n            });\n            $2f30431acd054e2f$export$79b2f7037acddd43(this.layers, (layer)=>{\n                $217bcb2fe88d1cdd$var$clearCanvas(layer.view);\n                if (layer.exportableView) $217bcb2fe88d1cdd$var$clearCanvas(layer.exportableView);\n            });\n            $217bcb2fe88d1cdd$var$clearCanvas(this._ghostLayer.view);\n            $217bcb2fe88d1cdd$var$clearCanvas(this._patternCanvas);\n        }));\n        /*\r\n        this._disposers.push($utils.addEventListener(this._ghostLayer.view, \"click\", (originalEvent: MouseEvent) => {\r\n            const event = this.getEvent(originalEvent);\r\n            const target = this._getHitTarget(event.originalPoint, event.bbox);\r\n            console.debug(target);\r\n        }));\r\n        */ // Monitor for possible pixel ratio changes (when page is zoomed)\n        this._disposers.push($05b1b40b69b15016$export$6981aa66c6e2c48d(()=>{\n            if (resolution == null) this.resolution = window.devicePixelRatio;\n        }));\n        // We need this in order top prevent default touch gestures when dragging\n        // draggable elements\n        if ($05b1b40b69b15016$export$cde6a56f9669daf6(\"touchevents\")) {\n            const listener = (ev)=>{\n                if (this._dragging.length !== 0) $2f30431acd054e2f$export$1e016427912bfd78(this._dragging, (item)=>{\n                    if (item.value.shouldCancelTouch()) {\n                        ev.preventDefault();\n                        return false;\n                    }\n                    return true;\n                });\n                // If touch down happends, delay touch out\n                if (this._touchActiveTimeout) this._delayTouchDeactivate();\n            };\n            this._disposers.push($05b1b40b69b15016$export$3f65cefe8380dbea(window, \"touchstart\", listener, {\n                passive: false\n            }));\n            this._disposers.push($05b1b40b69b15016$export$3f65cefe8380dbea(this.view, \"touchstart\", listener, {\n                passive: false\n            }));\n            this._disposers.push($05b1b40b69b15016$export$3f65cefe8380dbea(this.view, \"touchmove\", ()=>{\n                // If touch is moving, delay touch out\n                if (this._touchActiveTimeout) this._delayTouchDeactivate();\n            }, {\n                passive: true\n            }));\n            this._disposers.push($05b1b40b69b15016$export$3f65cefe8380dbea(window, \"click\", (_ev)=>{\n                this._touchActive = false;\n            }, {\n                passive: true\n            }));\n            this._disposers.push($05b1b40b69b15016$export$3f65cefe8380dbea(this.view, \"click\", (_ev)=>{\n                window.setTimeout(()=>{\n                    this._touchActive = true;\n                    this._delayTouchDeactivate();\n                }, 100);\n            }, {\n                passive: true\n            }));\n        }\n        // Prevent scrolling of the window when hovering on \"wheelable\" object\n        if ($05b1b40b69b15016$export$cde6a56f9669daf6(\"wheelevents\")) this._disposers.push($05b1b40b69b15016$export$3f65cefe8380dbea(this.view, \"wheel\", (ev)=>{\n            let prevent = false;\n            this._hovering.forEach((obj)=>{\n                if (obj.wheelable) {\n                    prevent = true;\n                    return false;\n                }\n            });\n            if (prevent) ev.preventDefault();\n        }, {\n            passive: false\n        }));\n    }\n    /*protected _mouseMoveThrottler: Throttler = new Throttler(() => {\r\n        this._dispatchGlobalMousemove(this._lastPointerMoveEvent.event, this._lastPointerMoveEvent.native);\r\n    });\r\n    */ resetImageArray() {\n        this._ghostLayer.imageArray = undefined;\n    }\n    _delayTouchDeactivate() {\n        if (this._touchActiveTimeout) clearTimeout(this._touchActiveTimeout);\n        if (this.tapToActivateTimeout > 0) this._touchActiveTimeout = window.setTimeout(()=>{\n            this._touchActive = false;\n        }, this.tapToActivateTimeout);\n    }\n    get debugGhostView() {\n        return !!this._ghostLayer.view.parentNode;\n    }\n    set debugGhostView(value) {\n        if (value) {\n            if (!this._ghostLayer.view.parentNode) this.view.appendChild(this._ghostLayer.view);\n        } else if (this._ghostLayer.view.parentNode) this._ghostLayer.view.parentNode.removeChild(this._ghostLayer.view);\n    }\n    createLinearGradient(x1, y1, x2, y2) {\n        return this.defaultLayer.context.createLinearGradient(x1, y1, x2, y2);\n    }\n    createRadialGradient(x1, y1, radius1, x2, y2, radius2) {\n        return this.defaultLayer.context.createRadialGradient(x1, y1, radius1, x2, y2, radius2);\n    }\n    createPattern(graphics, background, repetition, width, height) {\n        // const patternCanvas = document.createElement(\"canvas\");\n        // const patternContext = patternCanvas.getContext(\"2d\")!;\n        // patternCanvas.width = width;\n        // patternCanvas.height = height;\n        // if (fill) {\n        // \tpatternContext.fillStyle = fill.toCSS();\n        // \tpatternContext.fillRect(0, 0, patternCanvas.width, patternCanvas.height);\n        // }\n        // const layer = {\n        // \tview: patternCanvas,\n        // \tcontext: patternContext,\n        // \tvisible: true,\n        // \torder: 0,\n        // \twidth: width,\n        // \theight: height,\n        // \tdirty: true\n        // };\n        // // patternContext.arc(0, 0, 50, 0, .5 * Math.PI);\n        // // patternContext.stroke();\n        // image.targetLayer = layer;\n        // image.render(layer);\n        //this._layerDom.appendChild(patternCanvas);\n        this._patternCanvas.width = width;\n        this._patternCanvas.height = height;\n        this._patternContext.clearRect(0, 0, width, height);\n        // patternCanvas.style.width = width * this.resolution + \"px\";\n        // patternCanvas.style.height = height * this.resolution + \"px\";\n        background.renderDetached(this._patternContext);\n        graphics.renderDetached(this._patternContext);\n        return this._patternContext.createPattern(this._patternCanvas, repetition);\n    }\n    makeContainer() {\n        return new $217bcb2fe88d1cdd$export$b859d337447d8a21(this);\n    }\n    makeGraphics() {\n        return new $217bcb2fe88d1cdd$export$51df14243a6273b2(this);\n    }\n    makeText(text, style) {\n        return new $217bcb2fe88d1cdd$export$3def536413f544ed(this, text, style);\n    }\n    makeTextStyle() {\n        return new $217bcb2fe88d1cdd$export$14f1f3efc2895a7c();\n    }\n    makeRadialText(text, style) {\n        return new $217bcb2fe88d1cdd$export$6f70e6edef4626e6(this, text, style);\n    }\n    makePicture(image) {\n        return new $217bcb2fe88d1cdd$export$e53fcdbfdf4d0d97(this, image);\n    }\n    resizeLayer(layer) {\n        layer.resize(this._calculatedWidth, this._calculatedHeight, this._calculatedWidth, this._calculatedHeight, this.resolution);\n    }\n    resizeGhost() {\n        this._ghostLayer.resize(this._calculatedWidth, this._calculatedHeight, this._calculatedWidth, this._calculatedHeight, this.resolution);\n    }\n    resize(realWidth, realHeight, calculatedWidth, calculatedHeight) {\n        this._realWidth = realWidth;\n        this._realHeight = realHeight;\n        this._calculatedWidth = calculatedWidth;\n        this._calculatedHeight = calculatedHeight;\n        $2f30431acd054e2f$export$79b2f7037acddd43(this.layers, (layer)=>{\n            if (layer) {\n                layer.dirty = true;\n                this.resizeLayer(layer);\n            }\n        });\n        this.resizeGhost();\n        this.view.style.width = calculatedWidth + \"px\";\n        this.view.style.height = calculatedHeight + \"px\";\n    }\n    createDetachedLayer(willReadFrequently = false) {\n        const view = document.createElement(\"canvas\");\n        const context = view.getContext(\"2d\", {\n            willReadFrequently: willReadFrequently\n        });\n        const layer = new $217bcb2fe88d1cdd$export$7b8f87dabf3b6ee0(view, context);\n        view.style.position = \"absolute\";\n        view.style.top = \"0px\";\n        view.style.left = \"0px\";\n        return layer;\n    }\n    getLayerByOrder(order) {\n        const layers = this.layers;\n        const length = layers.length;\n        for(let i = 0; i < length; i++){\n            const layer = layers[i];\n            if (layer.order == order) return layer;\n        }\n    }\n    getLayer(order, visible = true) {\n        let existingLayer = this.getLayerByOrder(order);\n        if (existingLayer) return existingLayer;\n        const layer = this.createDetachedLayer(order == 99);\n        layer.order = order;\n        layer.visible = visible;\n        layer.view.className = \"am5-layer-\" + order;\n        if (layer.visible) this.resizeLayer(layer);\n        const layers = this.layers;\n        layers.push(layer);\n        layers.sort((a, b)=>{\n            if (a.order > b.order) return 1;\n            else if (a.order < b.order) return -1;\n            else return 0;\n        });\n        const length = layers.length;\n        const layerIndex = $2f30431acd054e2f$export$305f7d4e9d4624f2(layers, layer);\n        let next;\n        for(let i = layerIndex + 1; i < length; i++)if (layers[i].visible) {\n            next = layers[i];\n            break;\n        }\n        if (layer.visible) {\n            if (next === undefined) this._layerDom.appendChild(layer.view);\n            else this._layerDom.insertBefore(layer.view, next.view);\n        }\n        return layer;\n    }\n    render(root) {\n        this._dirtyLayers.length = 0;\n        $2f30431acd054e2f$export$79b2f7037acddd43(this.layers, (layer)=>{\n            if (layer) {\n                if (layer.dirty && layer.visible) {\n                    this._dirtyLayers.push(layer);\n                    layer.clear();\n                }\n            }\n        });\n        this._ghostLayer.clear();\n        root.render({\n            inactive: null,\n            layer: this.defaultLayer\n        });\n        this._ghostLayer.context.restore();\n        //setTimeout(() => {\n        // Remove this after the Chrome bug is fixed:\n        // https://bugs.chromium.org/p/chromium/issues/detail?id=1279394\n        $2f30431acd054e2f$export$79b2f7037acddd43(this.layers, (layer)=>{\n            if (layer) {\n                const context = layer.context;\n                context.beginPath();\n                context.moveTo(0, 0);\n                context.stroke();\n            }\n        });\n        $2f30431acd054e2f$export$79b2f7037acddd43(this._dirtyLayers, (layer)=>{\n            layer.context.restore();\n            layer.dirty = false;\n        });\n        //}, 100)\n        if (this._hovering.size && this._lastPointerMoveEvent) {\n            const { events: events, target: target, native: native } = this._lastPointerMoveEvent;\n            //this._mouseMoveThrottler.run();\n            $2f30431acd054e2f$export$79b2f7037acddd43(events, (event)=>{\n                this._dispatchGlobalMousemove(event, target, native);\n            });\n        }\n    }\n    paintId(obj) {\n        const id = $217bcb2fe88d1cdd$var$distributeId(++this._colorId);\n        const color = (0, $389de129b6cd18b1$export$892596cec99bc70e).fromHex(id).toCSS();\n        this._colorMap[color] = obj;\n        return color;\n    }\n    _removeObject(obj) {\n        if (obj._colorId !== undefined) delete this._colorMap[obj._colorId];\n    }\n    // protected _identifyObjectByColor(colorId: number): CanvasDisplayObject | undefined {\n    // \treturn this._colorMap[colorId];\n    // }\n    _adjustBoundingBox(bbox) {\n        const margin = this._ghostLayer.margin;\n        return new DOMRect(-margin.left, -margin.top, bbox.width + margin.left + margin.right, bbox.height + margin.top + margin.bottom);\n    }\n    getEvent(originalEvent, adjustPoint = true) {\n        const bbox = this.view.getBoundingClientRect();\n        const x = originalEvent.clientX || 0;\n        const y = originalEvent.clientY || 0;\n        const widthScale = this._calculatedWidth / this._realWidth;\n        const heightScale = this._calculatedHeight / this._realHeight;\n        const originalPoint = {\n            x: x - bbox.left,\n            y: y - bbox.top\n        };\n        const point = {\n            x: (x - (adjustPoint ? bbox.left : 0)) * widthScale,\n            y: (y - (adjustPoint ? bbox.top : 0)) * heightScale\n        };\n        return new $217bcb2fe88d1cdd$export$4e9e47eb662c1d9f(originalEvent, originalPoint, point, this._adjustBoundingBox(bbox));\n    }\n    _getHitTarget(point, bbox, target) {\n        if (bbox.width === 0 || bbox.height === 0 || point.x < bbox.left || point.x > bbox.right || point.y < bbox.top || point.y > bbox.bottom) return;\n        if (!target || !this._layerDom.contains(target)) return;\n        const pixel = this._ghostLayer.getImageData(point, bbox);\n        if (pixel.data[0] === 0 && pixel.data[1] === 0 && pixel.data[2] === 0) return false;\n        const colorId = (0, $389de129b6cd18b1$export$892596cec99bc70e).fromRGB(pixel.data[0], pixel.data[1], pixel.data[2]).toCSS();\n        const hit = this._colorMap[colorId];\n        return hit;\n    }\n    getObjectAtPoint(point) {\n        const data = this._ghostLayer.getImageArray(point);\n        if (data[0] === 0 && data[1] === 0 && data[2] === 0) return undefined;\n        const colorId = (0, $389de129b6cd18b1$export$892596cec99bc70e).fromRGB(data[0], data[1], data[2]).toCSS();\n        const hit = this._colorMap[colorId];\n        return hit;\n    }\n    _withEvents(key, f) {\n        const events = this._events[key];\n        if (events !== undefined) {\n            events.dispatching = true;\n            try {\n                f(events);\n            } finally{\n                events.dispatching = false;\n                if (events.cleanup) {\n                    events.cleanup = false;\n                    $2f30431acd054e2f$export$249f83d169a7c462(events.callbacks, (callback)=>{\n                        return !callback.disposed;\n                    });\n                    if (events.callbacks.length === 0) {\n                        events.disposer.dispose();\n                        delete this._events[key];\n                    }\n                }\n            }\n        }\n    }\n    _dispatchEventAll(key, event) {\n        if (!this.interactionsEnabled) return;\n        this._withEvents(key, (events)=>{\n            $2f30431acd054e2f$export$79b2f7037acddd43(events.callbacks, (callback)=>{\n                if (!callback.disposed) callback.callback.call(callback.context, event);\n            });\n        });\n    }\n    _dispatchEvent(key, target, event) {\n        if (!this.interactionsEnabled) return false;\n        let dispatched = false;\n        this._withEvents(key, (events)=>{\n            $2f30431acd054e2f$export$79b2f7037acddd43(events.callbacks, (callback)=>{\n                if (!callback.disposed && callback.object === target) {\n                    callback.callback.call(callback.context, event);\n                    dispatched = true;\n                }\n            });\n        });\n        return dispatched;\n    }\n    _dispatchMousedown(originalEvent, originalTarget) {\n        const button = originalEvent.button;\n        if (button != 0 && button != 2 && button != 1 && button !== undefined) // Ignore non-primary mouse buttons\n        return;\n        const event = this.getEvent(originalEvent);\n        const target = this._getHitTarget(event.originalPoint, event.bbox, originalTarget);\n        if (target) {\n            const id = event.id;\n            let dragged = false;\n            $217bcb2fe88d1cdd$var$eachTargets(target, (obj)=>{\n                const info = {\n                    id: id,\n                    value: obj\n                };\n                this._mousedown.push(info);\n                if (!dragged && this._dispatchEvent(\"pointerdown\", obj, event)) {\n                    // Only dispatch the first element which matches\n                    dragged = true;\n                    const has = this._dragging.some((x)=>{\n                        return x.value === obj && x.id === id;\n                    });\n                    if (!has) this._dragging.push(info);\n                }\n                return true;\n            });\n        }\n    }\n    _dispatchGlobalMousemove(originalEvent, originalTarget, native) {\n        const event = this.getEvent(originalEvent);\n        const target = this._getHitTarget(event.originalPoint, event.bbox, originalTarget);\n        event.native = native;\n        if (target) {\n            this._hovering.forEach((obj)=>{\n                if (!obj.contains(target)) {\n                    this._hovering.delete(obj);\n                    if (obj.cursorOverStyle) $05b1b40b69b15016$export$37a5fde709c1db82(document.body, \"cursor\", obj._replacedCursorStyle);\n                    this._dispatchEvent(\"pointerout\", obj, event);\n                }\n            });\n            if (event.native) $217bcb2fe88d1cdd$var$eachTargets(target, (obj)=>{\n                if (!this._hovering.has(obj)) {\n                    this._hovering.add(obj);\n                    if (obj.cursorOverStyle) {\n                        obj._replacedCursorStyle = $05b1b40b69b15016$export$3d2f074408bd1b82(document.body, \"cursor\");\n                        $05b1b40b69b15016$export$37a5fde709c1db82(document.body, \"cursor\", obj.cursorOverStyle);\n                    }\n                    this._dispatchEvent(\"pointerover\", obj, event);\n                }\n                return true;\n            });\n        //} else if (target === false) {\n        } else {\n            this._hovering.forEach((obj)=>{\n                if (obj.cursorOverStyle) $05b1b40b69b15016$export$37a5fde709c1db82(document.body, \"cursor\", obj._replacedCursorStyle);\n                this._dispatchEvent(\"pointerout\", obj, event);\n            });\n            this._hovering.clear();\n        }\n        this._dispatchEventAll(\"globalpointermove\", event);\n    }\n    removeHovering(graphics) {\n        this._hovering.delete(graphics);\n        if (graphics.cursorOverStyle) $05b1b40b69b15016$export$37a5fde709c1db82(document.body, \"cursor\", graphics._replacedCursorStyle);\n    }\n    _dispatchGlobalMouseup(originalEvent, native) {\n        const event = this.getEvent(originalEvent);\n        event.native = native;\n        //const target = this._getHitTarget(event.originalPoint);\n        this._dispatchEventAll(\"globalpointerup\", event);\n    }\n    _dispatchDragMove(originalEvent) {\n        if (this._dragging.length !== 0) {\n            const event = this.getEvent(originalEvent);\n            const id = event.id;\n            this._dragging.forEach((obj)=>{\n                if (obj.id === id) this._dispatchEvent(\"pointermove\", obj.value, event);\n            });\n        }\n    }\n    _dispatchDragEnd(originalEvent, originalTarget) {\n        const button = originalEvent.button;\n        let clickevent;\n        if (button == 0 || button === undefined) clickevent = \"click\";\n        else if (button == 2) clickevent = \"rightclick\";\n        else if (button == 1) clickevent = \"middleclick\";\n        else // Ignore non-primary mouse buttons\n        return;\n        const event = this.getEvent(originalEvent);\n        const id = event.id;\n        if (this._mousedown.length !== 0) {\n            const target = this._getHitTarget(event.originalPoint, event.bbox, originalTarget);\n            if (target) this._mousedown.forEach((obj)=>{\n                if (obj.id === id && obj.value.contains(target)) this._dispatchEvent(clickevent, obj.value, event);\n            });\n            this._mousedown.length = 0;\n        }\n        if (this._dragging.length !== 0) {\n            this._dragging.forEach((obj)=>{\n                if (obj.id === id) this._dispatchEvent(\"pointerup\", obj.value, event);\n            });\n            this._dragging.length = 0;\n        }\n    }\n    _dispatchDoubleClick(originalEvent, originalTarget) {\n        const event = this.getEvent(originalEvent);\n        const target = this._getHitTarget(event.originalPoint, event.bbox, originalTarget);\n        if (target) $217bcb2fe88d1cdd$var$eachTargets(target, (obj)=>{\n            if (this._dispatchEvent(\"dblclick\", obj, event)) return false;\n            else return true;\n        });\n    }\n    _dispatchWheel(originalEvent, originalTarget) {\n        const event = this.getEvent(originalEvent);\n        const target = this._getHitTarget(event.originalPoint, event.bbox, originalTarget);\n        if (target) $217bcb2fe88d1cdd$var$eachTargets(target, (obj)=>{\n            if (this._dispatchEvent(\"wheel\", obj, event)) return false;\n            else return true;\n        });\n    }\n    _makeSharedEvent(key, f) {\n        if (this._listeners[key] === undefined) {\n            const listener = f();\n            this._listeners[key] = new (0, $a363f66303166aa1$export$8a02b29de282f67f)(()=>{\n                delete this._listeners[key];\n                listener.dispose();\n            });\n        }\n        return this._listeners[key].increment();\n    }\n    _onPointerEvent(name, f) {\n        let native = false;\n        let timer = null;\n        function clear() {\n            timer = null;\n            native = false;\n        }\n        return new (0, $a363f66303166aa1$export$9720df365053d143)([\n            new (0, $a363f66303166aa1$export$6039fc6176d96e35)(()=>{\n                if (timer !== null) clearTimeout(timer);\n                clear();\n            }),\n            $05b1b40b69b15016$export$3f65cefe8380dbea(this.view, $05b1b40b69b15016$export$e9a3efe7940d0764(name), (_)=>{\n                native = true;\n                if (timer !== null) clearTimeout(timer);\n                timer = window.setTimeout(clear, 0);\n            }),\n            $217bcb2fe88d1cdd$var$onPointerEvent(window, name, (ev, target)=>{\n                if (timer !== null) {\n                    clearTimeout(timer);\n                    timer = null;\n                }\n                f(ev, target, native);\n                native = false;\n            })\n        ]);\n    }\n    // This ensures that only a single DOM event is added (e.g. only a single mousemove event listener)\n    _initEvent(key) {\n        switch(key){\n            case \"globalpointermove\":\n            case \"pointerover\":\n            case \"pointerout\":\n                return this._makeSharedEvent(\"pointermove\", ()=>{\n                    const listener = (events, target, native)=>{\n                        this._lastPointerMoveEvent = {\n                            events: events,\n                            target: target,\n                            native: native\n                        };\n                        $2f30431acd054e2f$export$79b2f7037acddd43(events, (event)=>{\n                            this._dispatchGlobalMousemove(event, target, native);\n                        });\n                    };\n                    return new (0, $a363f66303166aa1$export$9720df365053d143)([\n                        this._onPointerEvent(\"pointerdown\", listener),\n                        this._onPointerEvent(\"pointermove\", listener)\n                    ]);\n                });\n            case \"globalpointerup\":\n                return this._makeSharedEvent(\"pointerup\", ()=>{\n                    const mouseup = this._onPointerEvent(\"pointerup\", (events, target, native)=>{\n                        $2f30431acd054e2f$export$79b2f7037acddd43(events, (event)=>{\n                            this._dispatchGlobalMouseup(event, native);\n                        });\n                        this._lastPointerMoveEvent = {\n                            events: events,\n                            target: target,\n                            native: native\n                        };\n                    });\n                    const pointercancel = this._onPointerEvent(\"pointercancel\", (events, target, native)=>{\n                        $2f30431acd054e2f$export$79b2f7037acddd43(events, (event)=>{\n                            this._dispatchGlobalMouseup(event, native);\n                        });\n                        this._lastPointerMoveEvent = {\n                            events: events,\n                            target: target,\n                            native: native\n                        };\n                    });\n                    return new (0, $a363f66303166aa1$export$6039fc6176d96e35)(()=>{\n                        mouseup.dispose();\n                        pointercancel.dispose();\n                    });\n                });\n            case \"click\":\n            case \"rightclick\":\n            case \"middleclick\":\n            case \"pointerdown\":\n            /*\r\n                return this._makeSharedEvent(\"pointerdown\", () => {\r\n                    return this._onPointerEvent(\"pointerdown\", (event, target, native) => {\r\n                        this._lastPointerMoveEvent = { event, target, native };\r\n                        this._dispatchMousedown(event)\r\n                    });\r\n                });\r\n            */ case \"pointermove\":\n            case \"pointerup\":\n                return this._makeSharedEvent(\"pointerdown\", ()=>{\n                    //const throttler = new Throttler();\n                    const mousedown = this._onPointerEvent(\"pointerdown\", (events, target)=>{\n                        $2f30431acd054e2f$export$79b2f7037acddd43(events, (ev)=>{\n                            this._dispatchMousedown(ev, target);\n                        });\n                    });\n                    // TODO handle throttling properly for multitouch\n                    const mousemove = this._onPointerEvent(\"pointermove\", (ev)=>{\n                        //throttler.throttle(() => {\n                        $2f30431acd054e2f$export$79b2f7037acddd43(ev, (ev)=>{\n                            this._dispatchDragMove(ev);\n                        });\n                    //});\n                    });\n                    const mouseup = this._onPointerEvent(\"pointerup\", (ev, target)=>{\n                        $2f30431acd054e2f$export$79b2f7037acddd43(ev, (ev)=>{\n                            this._dispatchDragEnd(ev, target);\n                        });\n                    });\n                    const pointercancel = this._onPointerEvent(\"pointercancel\", (ev, target)=>{\n                        $2f30431acd054e2f$export$79b2f7037acddd43(ev, (ev)=>{\n                            this._dispatchDragEnd(ev, target);\n                        });\n                    });\n                    return new (0, $a363f66303166aa1$export$6039fc6176d96e35)(()=>{\n                        mousedown.dispose();\n                        mousemove.dispose();\n                        mouseup.dispose();\n                        pointercancel.dispose();\n                    });\n                });\n            case \"dblclick\":\n                return this._makeSharedEvent(\"dblclick\", ()=>{\n                    return this._onPointerEvent(\"dblclick\", (ev, target)=>{\n                        $2f30431acd054e2f$export$79b2f7037acddd43(ev, (ev)=>{\n                            this._dispatchDoubleClick(ev, target);\n                        });\n                    });\n                });\n            case \"wheel\":\n                return this._makeSharedEvent(\"wheel\", ()=>{\n                    return $05b1b40b69b15016$export$3f65cefe8380dbea(this.view, $05b1b40b69b15016$export$e9a3efe7940d0764(\"wheel\"), (event)=>{\n                        this._dispatchWheel(event, $05b1b40b69b15016$export$e58f029f0fbfdb29(event));\n                    }, {\n                        passive: false\n                    });\n                });\n        }\n    }\n    _addEvent(object, key, callback, context) {\n        let events = this._events[key];\n        if (events === undefined) events = this._events[key] = {\n            disposer: this._initEvent(key),\n            callbacks: [],\n            dispatching: false,\n            cleanup: false\n        };\n        const listener = {\n            object: object,\n            context: context,\n            callback: callback,\n            disposed: false\n        };\n        events.callbacks.push(listener);\n        return new (0, $a363f66303166aa1$export$6039fc6176d96e35)(()=>{\n            listener.disposed = true;\n            if (events.dispatching) events.cleanup = true;\n            else {\n                $2f30431acd054e2f$export$2529f734547e2830(events.callbacks, listener);\n                if (events.callbacks.length === 0) {\n                    events.disposer.dispose();\n                    delete this._events[key];\n                }\n            }\n        });\n    }\n    getCanvas(root, options) {\n        // Make sure everything is rendered\n        this.render(root);\n        if (!options) options = {};\n        let scale = this.resolution;\n        let canvasWidth = Math.floor(this._calculatedWidth * this.resolution);\n        let canvasHeight = Math.floor(this._calculatedHeight * this.resolution);\n        // Check if we need to scale\n        if (options.minWidth && options.minWidth > canvasWidth) {\n            let minScale = options.minWidth / canvasWidth;\n            if (minScale > scale) scale = minScale * this.resolution;\n        }\n        if (options.minHeight && options.minHeight > canvasHeight) {\n            let minScale = options.minHeight / canvasHeight;\n            if (minScale > scale) scale = minScale * this.resolution;\n        }\n        if (options.maxWidth && options.maxWidth < canvasWidth) {\n            let maxScale = options.maxWidth / canvasWidth;\n            if (maxScale < scale) scale = maxScale * this.resolution;\n        }\n        if (options.maxHeight && options.maxHeight > canvasHeight) {\n            let maxScale = options.maxHeight / canvasHeight;\n            if (maxScale < scale) scale = maxScale * this.resolution;\n        }\n        // Check if we need to compensate for pixel ratio\n        if (options.maintainPixelRatio) scale /= this.resolution;\n        // Init list canvases to remove from DOM after export\n        const canvases = [];\n        // Set up new canvas for export\n        let forceRender = false;\n        const canvas = document.createElement(\"canvas\");\n        if (scale != this.resolution) {\n            forceRender = true;\n            canvasWidth = canvasWidth * scale / this.resolution;\n            canvasHeight = canvasHeight * scale / this.resolution;\n        }\n        canvas.width = canvasWidth;\n        canvas.height = canvasHeight;\n        // Add to DOM so it inherits CSS\n        canvas.style.position = \"fixed\";\n        canvas.style.top = \"-10000px\";\n        this.view.appendChild(canvas);\n        canvases.push(canvas);\n        // Context\n        const context = canvas.getContext(\"2d\");\n        let width = 0;\n        let height = 0;\n        let needRerender = false;\n        $2f30431acd054e2f$export$79b2f7037acddd43(this.layers, (layer)=>{\n            if (layer && layer.visible) {\n                if (layer.tainted || forceRender) {\n                    needRerender = true;\n                    layer.exportableView = layer.view;\n                    layer.exportableContext = layer.context;\n                    layer.view = document.createElement(\"canvas\");\n                    // Add to DOM so it inherits CSS\n                    layer.view.style.position = \"fixed\";\n                    layer.view.style.top = \"-10000px\";\n                    this.view.appendChild(layer.view);\n                    canvases.push(layer.view);\n                    let extraX = 0;\n                    let extraY = 0;\n                    if (layer.margin) {\n                        extraX += layer.margin.left || 0 + layer.margin.right || 0;\n                        extraY += layer.margin.top || 0 + layer.margin.bottom || 0;\n                    }\n                    layer.view.width = canvasWidth + extraX;\n                    layer.view.height = canvasHeight + extraY;\n                    layer.context = layer.view.getContext(\"2d\");\n                    layer.dirty = true;\n                    layer.scale = scale;\n                }\n            }\n        });\n        if (needRerender) {\n            this._omitTainted = true;\n            this.render(root);\n            this._omitTainted = false;\n        }\n        $2f30431acd054e2f$export$79b2f7037acddd43(this.layers, (layer)=>{\n            if (layer && layer.visible) {\n                // Layer is fine. Just plop it into our target canvas\n                let x = 0;\n                let y = 0;\n                if (layer.margin) {\n                    x = -(layer.margin.left || 0) * this.resolution;\n                    y = -(layer.margin.top || 0) * this.resolution;\n                }\n                context.drawImage(layer.view, x, y);\n                // Restore layer original canvas\n                if (layer.exportableView) {\n                    layer.view = layer.exportableView;\n                    layer.exportableView = undefined;\n                }\n                if (layer.exportableContext) {\n                    layer.context = layer.exportableContext;\n                    layer.exportableContext = undefined;\n                }\n                if (width < layer.view.clientWidth) width = layer.view.clientWidth;\n                if (height < layer.view.clientHeight) height = layer.view.clientHeight;\n                layer.scale = undefined;\n            }\n        });\n        canvas.style.width = width + \"px\";\n        canvas.style.height = height + \"px\";\n        $2f30431acd054e2f$export$79b2f7037acddd43(canvases, (canvas)=>{\n            canvas.style.position = \"\";\n            canvas.style.top = \"\";\n            this.view.removeChild(canvas);\n        });\n        return canvas;\n    }\n}\nclass $217bcb2fe88d1cdd$var$GhostLayer {\n    constructor(){\n        Object.defineProperty(this, \"view\", {\n            enumerable: true,\n            configurable: true,\n            writable: true,\n            value: void 0\n        });\n        Object.defineProperty(this, \"context\", {\n            enumerable: true,\n            configurable: true,\n            writable: true,\n            value: void 0\n        });\n        Object.defineProperty(this, \"margin\", {\n            enumerable: true,\n            configurable: true,\n            writable: true,\n            value: {\n                left: 0,\n                right: 0,\n                top: 0,\n                bottom: 0\n            }\n        });\n        Object.defineProperty(this, \"_resolution\", {\n            enumerable: true,\n            configurable: true,\n            writable: true,\n            value: 1\n        });\n        Object.defineProperty(this, \"_width\", {\n            enumerable: true,\n            configurable: true,\n            writable: true,\n            value: 0\n        });\n        Object.defineProperty(this, \"_height\", {\n            enumerable: true,\n            configurable: true,\n            writable: true,\n            value: 0\n        });\n        Object.defineProperty(this, \"imageArray\", {\n            enumerable: true,\n            configurable: true,\n            writable: true,\n            value: void 0\n        });\n        this.view = document.createElement(\"canvas\");\n        this.context = this.view.getContext(\"2d\", {\n            alpha: false,\n            willReadFrequently: true\n        });\n        this.context.imageSmoothingEnabled = false;\n        this.view.style.position = \"absolute\";\n        this.view.style.top = \"0px\";\n        this.view.style.left = \"0px\";\n    }\n    resize(canvasWidth, canvasHeight, domWidth, domHeight, resolution) {\n        this._resolution = resolution;\n        canvasWidth += this.margin.left + this.margin.right;\n        canvasHeight += this.margin.top + this.margin.bottom;\n        // TODO this should take into account calculateSize\n        domWidth += this.margin.left + this.margin.right;\n        domHeight += this.margin.top + this.margin.bottom;\n        this.view.style.left = -this.margin.left + \"px\";\n        this.view.style.top = -this.margin.top + \"px\";\n        this._width = Math.floor(canvasWidth * resolution);\n        this._height = Math.floor(canvasHeight * resolution);\n        this.view.width = this._width;\n        this.view.style.width = domWidth + \"px\";\n        this.view.height = this._height;\n        this.view.style.height = domHeight + \"px\";\n    }\n    getImageData(point, bbox) {\n        return this.context.getImageData(// TODO should this round ?\n        Math.round((point.x - bbox.left) / bbox.width * this._width), Math.round((point.y - bbox.top) / bbox.height * this._height), 1, 1);\n    }\n    getImageArray(point) {\n        if (!this.imageArray) this.imageArray = this.context.getImageData(0, 0, this._width, this._height).data;\n        const data = this.imageArray;\n        const x = Math.round(point.x * this._resolution);\n        const y = Math.round(point.y * this._resolution);\n        const i = (y * this._width + x) * 4;\n        return [\n            data[i],\n            data[i + 1],\n            data[i + 2],\n            data[i + 3]\n        ];\n    }\n    setMargin(layers) {\n        this.margin.left = 0;\n        this.margin.right = 0;\n        this.margin.top = 0;\n        this.margin.bottom = 0;\n        $2f30431acd054e2f$export$79b2f7037acddd43(layers, (layer)=>{\n            if (layer.margin) {\n                this.margin.left = Math.max(this.margin.left, layer.margin.left);\n                this.margin.right = Math.max(this.margin.right, layer.margin.right);\n                this.margin.top = Math.max(this.margin.top, layer.margin.top);\n                this.margin.bottom = Math.max(this.margin.bottom, layer.margin.bottom);\n            }\n        });\n    }\n    clear() {\n        this.context.save();\n        this.context.fillStyle = '#000';\n        this.context.fillRect(0, 0, this._width, this._height);\n    }\n}\nclass $217bcb2fe88d1cdd$export$7b8f87dabf3b6ee0 {\n    constructor(view, context){\n        Object.defineProperty(this, \"view\", {\n            enumerable: true,\n            configurable: true,\n            writable: true,\n            value: void 0\n        });\n        Object.defineProperty(this, \"context\", {\n            enumerable: true,\n            configurable: true,\n            writable: true,\n            value: void 0\n        });\n        Object.defineProperty(this, \"tainted\", {\n            enumerable: true,\n            configurable: true,\n            writable: true,\n            value: true\n        });\n        Object.defineProperty(this, \"margin\", {\n            enumerable: true,\n            configurable: true,\n            writable: true,\n            value: void 0\n        });\n        Object.defineProperty(this, \"order\", {\n            enumerable: true,\n            configurable: true,\n            writable: true,\n            value: 0\n        });\n        Object.defineProperty(this, \"visible\", {\n            enumerable: true,\n            configurable: true,\n            writable: true,\n            value: true\n        });\n        Object.defineProperty(this, \"width\", {\n            enumerable: true,\n            configurable: true,\n            writable: true,\n            value: void 0\n        });\n        Object.defineProperty(this, \"height\", {\n            enumerable: true,\n            configurable: true,\n            writable: true,\n            value: void 0\n        });\n        Object.defineProperty(this, \"scale\", {\n            enumerable: true,\n            configurable: true,\n            writable: true,\n            value: void 0\n        });\n        Object.defineProperty(this, \"dirty\", {\n            enumerable: true,\n            configurable: true,\n            writable: true,\n            value: true\n        });\n        Object.defineProperty(this, \"exportableView\", {\n            enumerable: true,\n            configurable: true,\n            writable: true,\n            value: void 0\n        });\n        Object.defineProperty(this, \"exportableContext\", {\n            enumerable: true,\n            configurable: true,\n            writable: true,\n            value: void 0\n        });\n        Object.defineProperty(this, \"_width\", {\n            enumerable: true,\n            configurable: true,\n            writable: true,\n            value: 0\n        });\n        Object.defineProperty(this, \"_height\", {\n            enumerable: true,\n            configurable: true,\n            writable: true,\n            value: 0\n        });\n        this.view = view;\n        this.context = context;\n    }\n    resize(canvasWidth, canvasHeight, domWidth, domHeight, resolution) {\n        // TODO should this take into account calculateSize ?\n        if (this.width != null) {\n            canvasWidth = this.width;\n            domWidth = this.width;\n        }\n        // TODO should this take into account calculateSize ?\n        if (this.height != null) {\n            canvasHeight = this.height;\n            domHeight = this.height;\n        }\n        if (this.margin) {\n            canvasWidth += this.margin.left + this.margin.right;\n            canvasHeight += this.margin.top + this.margin.bottom;\n            // TODO this should take into account calculateSize\n            domWidth += this.margin.left + this.margin.right;\n            domHeight += this.margin.top + this.margin.bottom;\n            this.view.style.left = -this.margin.left + \"px\";\n            this.view.style.top = -this.margin.top + \"px\";\n        } else {\n            this.view.style.left = \"0px\";\n            this.view.style.top = \"0px\";\n        }\n        this._width = Math.floor(canvasWidth * resolution);\n        this._height = Math.floor(canvasHeight * resolution);\n        this.view.width = this._width;\n        this.view.style.width = domWidth + \"px\";\n        this.view.height = this._height;\n        this.view.style.height = domHeight + \"px\";\n    }\n    clear() {\n        this.context.save();\n        this.context.clearRect(0, 0, this._width, this._height);\n    }\n}\n\n\n\n\n\n\n\n\n\n\n\n\nfunction $7803fe0a06c1ef65$var$rAF(fps, callback) {\n    if (fps == null) requestAnimationFrame(callback);\n    else setTimeout(()=>{\n        requestAnimationFrame(callback);\n    }, 1000 / fps);\n}\nclass $7803fe0a06c1ef65$export$be92b6f5f03c0fe9 {\n    constructor(id, settings = {}, isReal){\n        /**\r\n         * A reference to original chart container (div element).\r\n         */ Object.defineProperty(this, \"dom\", {\n            enumerable: true,\n            configurable: true,\n            writable: true,\n            value: void 0\n        });\n        Object.defineProperty(this, \"_inner\", {\n            enumerable: true,\n            configurable: true,\n            writable: true,\n            value: void 0\n        });\n        Object.defineProperty(this, \"_settings\", {\n            enumerable: true,\n            configurable: true,\n            writable: true,\n            value: void 0\n        });\n        Object.defineProperty(this, \"_isDirty\", {\n            enumerable: true,\n            configurable: true,\n            writable: true,\n            value: false\n        });\n        Object.defineProperty(this, \"_isDirtyParents\", {\n            enumerable: true,\n            configurable: true,\n            writable: true,\n            value: false\n        });\n        Object.defineProperty(this, \"_isDirtyAnimation\", {\n            enumerable: true,\n            configurable: true,\n            writable: true,\n            value: false\n        });\n        Object.defineProperty(this, \"_dirty\", {\n            enumerable: true,\n            configurable: true,\n            writable: true,\n            value: {}\n        });\n        Object.defineProperty(this, \"_dirtyParents\", {\n            enumerable: true,\n            configurable: true,\n            writable: true,\n            value: {}\n        });\n        Object.defineProperty(this, \"_dirtyBounds\", {\n            enumerable: true,\n            configurable: true,\n            writable: true,\n            value: {}\n        });\n        Object.defineProperty(this, \"_dirtyPositions\", {\n            enumerable: true,\n            configurable: true,\n            writable: true,\n            value: {}\n        });\n        Object.defineProperty(this, \"_ticker\", {\n            enumerable: true,\n            configurable: true,\n            writable: true,\n            value: null\n        });\n        Object.defineProperty(this, \"_tickers\", {\n            enumerable: true,\n            configurable: true,\n            writable: true,\n            value: []\n        });\n        Object.defineProperty(this, \"_updateTick\", {\n            enumerable: true,\n            configurable: true,\n            writable: true,\n            value: true\n        });\n        /**\r\n         * Root's event dispatcher.\r\n         *\r\n         * @see {@link https://www.amcharts.com/docs/v5/concepts/events/} for more info\r\n         */ Object.defineProperty(this, \"events\", {\n            enumerable: true,\n            configurable: true,\n            writable: true,\n            value: new (0, $7e417cbab1b21893$export$ec8b666c5fe2c75a)()\n        });\n        /**\r\n         * @ignore\r\n         * @todo needs description\r\n         */ Object.defineProperty(this, \"animationTime\", {\n            enumerable: true,\n            configurable: true,\n            writable: true,\n            value: null\n        });\n        Object.defineProperty(this, \"_animations\", {\n            enumerable: true,\n            configurable: true,\n            writable: true,\n            value: []\n        });\n        Object.defineProperty(this, \"_renderer\", {\n            enumerable: true,\n            configurable: true,\n            writable: true,\n            value: void 0\n        });\n        Object.defineProperty(this, \"_rootContainer\", {\n            enumerable: true,\n            configurable: true,\n            writable: true,\n            value: void 0\n        });\n        /**\r\n         * Main content container.\r\n         */ Object.defineProperty(this, \"container\", {\n            enumerable: true,\n            configurable: true,\n            writable: true,\n            value: void 0\n        });\n        /**\r\n         * A [[Container]] used to display tooltips in.\r\n         */ Object.defineProperty(this, \"tooltipContainer\", {\n            enumerable: true,\n            configurable: true,\n            writable: true,\n            value: void 0\n        });\n        Object.defineProperty(this, \"_tooltipContainerSettings\", {\n            enumerable: true,\n            configurable: true,\n            writable: true,\n            value: void 0\n        });\n        Object.defineProperty(this, \"_tooltip\", {\n            enumerable: true,\n            configurable: true,\n            writable: true,\n            value: void 0\n        });\n        // Locale-related\n        /**\r\n         * @ignore\r\n         */ Object.defineProperty(this, \"language\", {\n            enumerable: true,\n            configurable: true,\n            writable: true,\n            value: (0, $a5f7473fad5303dc$export$ce4fe1c9e6520c1a).new(this, {})\n        });\n        /**\r\n         * Locale used by the chart.\r\n         *\r\n         * @see {@link https://www.amcharts.com/docs/v5/concepts/locales/}\r\n         */ Object.defineProperty(this, \"locale\", {\n            enumerable: true,\n            configurable: true,\n            writable: true,\n            value: (0, $8ced240747ebccef$export$2e2bcd8739ae039)\n        });\n        // Date-time related\n        /**\r\n         * Use UTC when formatting date/time.\r\n         *\r\n         * @see {@link https://www.amcharts.com/docs/v5/concepts/formatters/formatting-dates/#utc-and-time-zones} for more info\r\n         */ Object.defineProperty(this, \"utc\", {\n            enumerable: true,\n            configurable: true,\n            writable: true,\n            value: false\n        });\n        /**\r\n         * If set, will format date/time in specific time zone.\r\n         *\r\n         * The value should be named time zone, e.g.:\r\n         * `\"America/Vancouver\"`, `\"Australia/Sydney\"`, `\"UTC\"`.\r\n         *\r\n         * NOTE: Using time zone feature may noticeable affect performance of the\r\n         * chart, especially with large data sets, since every single date will need\r\n         * to be recalculated.\r\n         *\r\n         * @see {@link https://www.amcharts.com/docs/v5/getting-started/root-element/#time-zone} for more info\r\n         * @since 5.1.0\r\n         */ Object.defineProperty(this, \"timezone\", {\n            enumerable: true,\n            configurable: true,\n            writable: true,\n            value: void 0\n        });\n        /**\r\n         * The maximum FPS that the Root will run at.\r\n         *\r\n         * If `undefined` it will run at the highest FPS.\r\n         *\r\n         * @see {@link https://www.amcharts.com/docs/v5/getting-started/root-element/#Performance} for more info\r\n         */ Object.defineProperty(this, \"fps\", {\n            enumerable: true,\n            configurable: true,\n            writable: true,\n            value: void 0\n        });\n        /**\r\n         * Number formatter.\r\n         *\r\n         * @see {@link https://www.amcharts.com/docs/v5/concepts/formatters/formatting-numbers/} for more info\r\n         */ Object.defineProperty(this, \"numberFormatter\", {\n            enumerable: true,\n            configurable: true,\n            writable: true,\n            value: (0, $b20322a184511108$export$cc77c4ff7e8673c5).new(this, {})\n        });\n        /**\r\n         * Date/time formatter.\r\n         *\r\n         * @see {@link https://www.amcharts.com/docs/v5/concepts/formatters/formatting-dates/} for more info\r\n         */ Object.defineProperty(this, \"dateFormatter\", {\n            enumerable: true,\n            configurable: true,\n            writable: true,\n            value: (0, $31c1b4011aa9c6de$export$ad991b66133851cf).new(this, {})\n        });\n        /**\r\n         * Duration formatter.\r\n         *\r\n         * @see {@link https://www.amcharts.com/docs/v5/concepts/formatters/formatting-dates/} for more info\r\n         */ Object.defineProperty(this, \"durationFormatter\", {\n            enumerable: true,\n            configurable: true,\n            writable: true,\n            value: (0, $e14cdfadb6108833$export$cee2d4e6b36ce468).new(this, {})\n        });\n        // Accessibility\n        /**\r\n         * Global tab index for using for the whole chart\r\n         *\r\n         * @see {@link https://www.amcharts.com/docs/v5/concepts/accessibility/} for more info\r\n         */ Object.defineProperty(this, \"tabindex\", {\n            enumerable: true,\n            configurable: true,\n            writable: true,\n            value: 0\n        });\n        //@todo maybe make this better\n        Object.defineProperty(this, \"_tabindexes\", {\n            enumerable: true,\n            configurable: true,\n            writable: true,\n            value: []\n        });\n        Object.defineProperty(this, \"_a11yD\", {\n            enumerable: true,\n            configurable: true,\n            writable: true,\n            value: false\n        });\n        Object.defineProperty(this, \"_focusElementDirty\", {\n            enumerable: true,\n            configurable: true,\n            writable: true,\n            value: false\n        });\n        Object.defineProperty(this, \"_focusElementContainer\", {\n            enumerable: true,\n            configurable: true,\n            writable: true,\n            value: void 0\n        });\n        Object.defineProperty(this, \"_focusedSprite\", {\n            enumerable: true,\n            configurable: true,\n            writable: true,\n            value: void 0\n        });\n        Object.defineProperty(this, \"_isShift\", {\n            enumerable: true,\n            configurable: true,\n            writable: true,\n            value: void 0\n        });\n        Object.defineProperty(this, \"_keyboardDragPoint\", {\n            enumerable: true,\n            configurable: true,\n            writable: true,\n            value: void 0\n        });\n        Object.defineProperty(this, \"_tooltipElementContainer\", {\n            enumerable: true,\n            configurable: true,\n            writable: true,\n            value: void 0\n        });\n        Object.defineProperty(this, \"_readerAlertElement\", {\n            enumerable: true,\n            configurable: true,\n            writable: true,\n            value: void 0\n        });\n        Object.defineProperty(this, \"_logo\", {\n            enumerable: true,\n            configurable: true,\n            writable: true,\n            value: void 0\n        });\n        Object.defineProperty(this, \"_tooltipDiv\", {\n            enumerable: true,\n            configurable: true,\n            writable: true,\n            value: void 0\n        });\n        /**\r\n         * Used for dynamically-created CSS and JavaScript with strict source policies.\r\n         */ Object.defineProperty(this, \"nonce\", {\n            enumerable: true,\n            configurable: true,\n            writable: true,\n            value: void 0\n        });\n        /**\r\n         * Special color set to be used for various controls.\r\n         *\r\n         * @see {@link https://www.amcharts.com/docs/v5/concepts/colors-gradients-and-patterns/#Interface_colors} for more info\r\n         */ Object.defineProperty(this, \"interfaceColors\", {\n            enumerable: true,\n            configurable: true,\n            writable: true,\n            value: void 0\n        });\n        /**\r\n         * An instance of vertical layout object that can be used to set `layout` setting\r\n         * of a [[Container]].\r\n         *\r\n         * @default VerticalLayout.new()\r\n         */ Object.defineProperty(this, \"verticalLayout\", {\n            enumerable: true,\n            configurable: true,\n            writable: true,\n            value: (0, $b05f413a7bdbea0f$export$e4d3124dc23dc9c9).new(this, {})\n        });\n        /**\r\n         * An instance of horizontal layout object that can be used to set `layout` setting\r\n         * of a [[Container]].\r\n         *\r\n         * @default HorizontalLayout.new()\r\n         */ Object.defineProperty(this, \"horizontalLayout\", {\n            enumerable: true,\n            configurable: true,\n            writable: true,\n            value: (0, $ce42d27226ec20a0$export$8be7400f61e793f0).new(this, {})\n        });\n        /**\r\n         * An instance of grid layout object that can be used to set `layout` setting\r\n         * of a [[Container]].\r\n         *\r\n         * @default VerticalLayout.new()\r\n         */ Object.defineProperty(this, \"gridLayout\", {\n            enumerable: true,\n            configurable: true,\n            writable: true,\n            value: (0, $9961b4caf46ffbfc$export$7d2b12578154a735).new(this, {})\n        });\n        Object.defineProperty(this, \"_paused\", {\n            enumerable: true,\n            configurable: true,\n            writable: true,\n            value: false\n        });\n        /**\r\n         * Indicates whether chart should resized automatically when parent container\r\n         * width and/or height changes.\r\n         *\r\n         * If disabled (`autoResize = false`) you can make the chart resize manually\r\n         * by calling root element's `resize()` method.\r\n         */ Object.defineProperty(this, \"autoResize\", {\n            enumerable: true,\n            configurable: true,\n            writable: true,\n            value: true\n        });\n        Object.defineProperty(this, \"_fontHash\", {\n            enumerable: true,\n            configurable: true,\n            writable: true,\n            value: \"\"\n        });\n        Object.defineProperty(this, \"_isDisposed\", {\n            enumerable: true,\n            configurable: true,\n            writable: true,\n            value: false\n        });\n        Object.defineProperty(this, \"_disposers\", {\n            enumerable: true,\n            configurable: true,\n            writable: true,\n            value: []\n        });\n        Object.defineProperty(this, \"_resizeSensorDisposer\", {\n            enumerable: true,\n            configurable: true,\n            writable: true,\n            value: void 0\n        });\n        Object.defineProperty(this, \"_tooltips\", {\n            enumerable: true,\n            configurable: true,\n            writable: true,\n            value: []\n        });\n        Object.defineProperty(this, \"_htmlElementContainer\", {\n            enumerable: true,\n            configurable: true,\n            writable: true,\n            value: void 0\n        });\n        Object.defineProperty(this, \"_htmlEnabledContainers\", {\n            enumerable: true,\n            configurable: true,\n            writable: true,\n            value: []\n        });\n        if (!isReal) throw new Error(\"You cannot use `new Class()`, instead use `Class.new()`\");\n        this._settings = settings;\n        if (settings.accessible == false) this._a11yD = true;\n        if (settings.useSafeResolution == null) settings.useSafeResolution = true;\n        let resolution;\n        if (settings.useSafeResolution) resolution = $05b1b40b69b15016$export$48067e34605ab48a();\n        this._renderer = new (0, $217bcb2fe88d1cdd$export$7adc20298958481a)(resolution);\n        let dom;\n        if (id instanceof HTMLElement) dom = id;\n        else dom = document.getElementById(id);\n        $2f30431acd054e2f$export$79b2f7037acddd43((0, $ca44c6881f0f20f2$export$4bb7493d241fd8a5).rootElements, (root)=>{\n            if (root.dom === dom) throw new Error(\"You cannot have multiple Roots on the same DOM node\");\n        });\n        this.interfaceColors = (0, $78e10ff73ddf6061$export$8dce48c3552f8697).new(this, {});\n        if (dom === null) throw new Error(\"Could not find HTML element with id `\" + id + \"`\");\n        this.dom = dom;\n        let inner = document.createElement(\"div\");\n        inner.style.position = \"relative\";\n        inner.style.width = \"100%\";\n        inner.style.height = \"100%\";\n        dom.appendChild(inner);\n        const tooltipContainerBounds = settings.tooltipContainerBounds;\n        if (tooltipContainerBounds) this._tooltipContainerSettings = tooltipContainerBounds;\n        this._inner = inner;\n        this._updateComputedStyles();\n        (0, $ca44c6881f0f20f2$export$4bb7493d241fd8a5).rootElements.push(this);\n    }\n    static new(id, settings) {\n        const root = new $7803fe0a06c1ef65$export$be92b6f5f03c0fe9(id, settings, true);\n        root._init();\n        return root;\n    }\n    moveDOM(id) {\n        let dom;\n        if (id instanceof HTMLElement) dom = id;\n        else dom = document.getElementById(id);\n        if (dom) {\n            while(this.dom.childNodes.length > 0)dom.appendChild(this.dom.childNodes[0]);\n            this.dom = dom;\n            this._initResizeSensor();\n            this.resize();\n        }\n    }\n    _handleLogo() {\n        if (this._logo) {\n            const w = this.dom.offsetWidth;\n            const h = this.dom.offsetHeight;\n            if (w <= 150 || h <= 60) this._logo.hide();\n            else this._logo.show();\n        }\n    }\n    _showBranding() {\n        if (!this._logo) {\n            const logo = this.tooltipContainer.children.push((0, $5de502da8a72d65e$export$42a852a2b6b56249).new(this, {\n                interactive: true,\n                interactiveChildren: false,\n                position: \"absolute\",\n                setStateOnChildren: true,\n                paddingTop: 9,\n                paddingRight: 9,\n                paddingBottom: 9,\n                paddingLeft: 9,\n                scale: .6,\n                y: (0, $bd0d0c10fd30006b$export$626336c2cd4b14de)(100),\n                centerY: (0, $bd0d0c10fd30006b$export$46342ea78d85883c),\n                tooltipText: \"Created using amCharts 5\",\n                tooltipX: (0, $bd0d0c10fd30006b$export$46342ea78d85883c),\n                cursorOverStyle: \"pointer\",\n                background: (0, $9e0cea1ea085e274$export$4617fb02663045ef).new(this, {\n                    fill: (0, $389de129b6cd18b1$export$35e9368ef982300f)(0x474758),\n                    fillOpacity: 0,\n                    tooltipY: 5\n                })\n            }));\n            const tooltip = (0, $670fc48e4ddbc086$export$28c660c63b792dea).new(this, {\n                pointerOrientation: \"horizontal\",\n                paddingTop: 4,\n                paddingRight: 7,\n                paddingBottom: 4,\n                paddingLeft: 7\n            });\n            tooltip.label.setAll({\n                fontSize: 12\n            });\n            tooltip.get(\"background\").setAll({\n                fill: this.interfaceColors.get(\"background\"),\n                stroke: this.interfaceColors.get(\"grid\"),\n                strokeOpacity: 0.3\n            });\n            logo.set(\"tooltip\", tooltip);\n            logo.events.on(\"click\", ()=>{\n                window.open(\"https://www.amcharts.com/\", \"_blank\");\n            });\n            logo.states.create(\"hover\", {});\n            const m = logo.children.push((0, $2ffdafbe1fe6a946$export$29d3e417456abdad).new(this, {\n                stroke: (0, $389de129b6cd18b1$export$35e9368ef982300f)(0xcccccc),\n                strokeWidth: 3,\n                svgPath: \"M5 25 L13 25h13.6c3.4 0 6 0 10.3-4.3s5.2-12 8.6-12c3.4 0 4.3 8.6 7.7 8.6M83.4 25H79.8c-3.4 0-6 0-10.3-4.3s-5.2-12-8.6-12-4.3 8.6-7.7 8.6\"\n            }));\n            m.states.create(\"hover\", {\n                stroke: (0, $389de129b6cd18b1$export$35e9368ef982300f)(0x3CABFF)\n            });\n            const a = logo.children.push((0, $2ffdafbe1fe6a946$export$29d3e417456abdad).new(this, {\n                stroke: (0, $389de129b6cd18b1$export$35e9368ef982300f)(0x888888),\n                strokeWidth: 3,\n                svgPath: \"M83.4 25h-31C37 25 39.5 4.4 28.4 4.4S18.9 24.2 4.3 25H0\"\n            }));\n            a.states.create(\"hover\", {\n                stroke: (0, $389de129b6cd18b1$export$35e9368ef982300f)(0x474758)\n            });\n            //logo.set(\"tooltip\", this._tooltip);\n            //logo.setPrivate(\"tooltipTarget\", logo.get(\"background\"));\n            this._logo = logo;\n            this._handleLogo();\n        }\n    }\n    _getRealSize() {\n        return this.dom.getBoundingClientRect();\n    }\n    _getCalculatedSize(rect) {\n        if (this._settings.calculateSize) return this._settings.calculateSize(rect);\n        else return {\n            width: rect.width,\n            height: rect.height\n        };\n    }\n    _init() {\n        const settings = this._settings;\n        if (settings.accessible !== false) {\n            if (settings.focusable) {\n                this._inner.setAttribute(\"focusable\", \"true\");\n                this._inner.setAttribute(\"tabindex\", this.tabindex + \"\");\n            }\n            if (settings.ariaLabel) this._inner.setAttribute(\"aria-label\", settings.ariaLabel);\n            if (settings.role) this._inner.setAttribute(\"role\", settings.role);\n        }\n        const renderer = this._renderer;\n        const rect = this._getRealSize();\n        const size = this._getCalculatedSize(rect);\n        const width = Math.floor(size.width);\n        const height = Math.floor(size.height);\n        const realWidth = Math.floor(rect.width);\n        const realHeight = Math.floor(rect.height);\n        const rootContainer = (0, $5de502da8a72d65e$export$42a852a2b6b56249).new(this, {\n            visible: true,\n            width: width,\n            height: height\n        });\n        this._rootContainer = rootContainer;\n        this._rootContainer._defaultThemes.push((0, $c53b0c859cf33b39$export$48bc85c4a6e4243b).new(this));\n        const container = rootContainer.children.push((0, $5de502da8a72d65e$export$42a852a2b6b56249).new(this, {\n            visible: true,\n            width: (0, $bd0d0c10fd30006b$export$46342ea78d85883c),\n            height: (0, $bd0d0c10fd30006b$export$46342ea78d85883c)\n        }));\n        this.container = container;\n        renderer.resize(realWidth, realHeight, width, height);\n        //@todo: better appendChild - refer\n        this._inner.appendChild(renderer.view);\n        // TODO: TMP TMP TMP for testing only, remove\n        //renderer.debugGhostView = true;\n        this._initResizeSensor();\n        // HTML content holder\n        const htmlElementContainer = document.createElement(\"div\");\n        this._htmlElementContainer = htmlElementContainer;\n        htmlElementContainer.className = \"am5-html-container\";\n        htmlElementContainer.style.position = \"absolute\";\n        htmlElementContainer.style.pointerEvents = \"none\";\n        if (!this._tooltipContainerSettings) htmlElementContainer.style.overflow = \"hidden\";\n        this._inner.appendChild(htmlElementContainer);\n        if (this._a11yD !== true) {\n            // Create element which is used to make announcements to screen reader\n            const readerAlertElement = document.createElement(\"div\");\n            readerAlertElement.className = \"am5-reader-container\";\n            readerAlertElement.setAttribute(\"role\", \"alert\");\n            // readerAlertElement.style.zIndex = \"-100000\";\n            // readerAlertElement.style.opacity = \"0\";\n            // readerAlertElement.style.top = \"0\";\n            readerAlertElement.style.position = \"absolute\";\n            readerAlertElement.style.width = \"1px\";\n            readerAlertElement.style.height = \"1px\";\n            readerAlertElement.style.overflow = \"hidden\";\n            readerAlertElement.style.clip = \"rect(1px, 1px, 1px, 1px)\";\n            this._readerAlertElement = readerAlertElement;\n            this._inner.appendChild(this._readerAlertElement);\n            const focusElementContainer = document.createElement(\"div\");\n            focusElementContainer.className = \"am5-focus-container\";\n            focusElementContainer.style.position = \"absolute\";\n            focusElementContainer.style.pointerEvents = \"none\";\n            focusElementContainer.style.top = \"0px\";\n            focusElementContainer.style.left = \"0px\";\n            focusElementContainer.style.overflow = \"hidden\";\n            focusElementContainer.style.width = width + \"px\";\n            focusElementContainer.style.height = height + \"px\";\n            focusElementContainer.setAttribute(\"role\", \"graphics-document\");\n            $05b1b40b69b15016$export$2dc32695cee26cb(focusElementContainer, false);\n            this._focusElementContainer = focusElementContainer;\n            this._inner.appendChild(this._focusElementContainer);\n            const tooltipElementContainer = document.createElement(\"div\");\n            this._tooltipElementContainer = tooltipElementContainer;\n            tooltipElementContainer.className = \"am5-tooltip-container\";\n            this._inner.appendChild(tooltipElementContainer);\n            // Add keyboard events for accessibility, e.g. simulating drag with arrow\n            // keys and click with ENTER\n            if ($05b1b40b69b15016$export$cde6a56f9669daf6(\"keyboardevents\")) {\n                this._disposers.push($05b1b40b69b15016$export$3f65cefe8380dbea(window, \"keydown\", (ev)=>{\n                    const eventKey = $05b1b40b69b15016$export$f7a7490116b79d4d(ev);\n                    if (eventKey == \"Shift\") this._isShift = true;\n                    else if (eventKey == \"Tab\") this._isShift = ev.shiftKey;\n                }));\n                this._disposers.push($05b1b40b69b15016$export$3f65cefe8380dbea(window, \"keyup\", (ev)=>{\n                    const eventKey = $05b1b40b69b15016$export$f7a7490116b79d4d(ev);\n                    if (eventKey == \"Shift\") this._isShift = false;\n                }));\n                this._disposers.push($05b1b40b69b15016$export$3f65cefe8380dbea(focusElementContainer, \"click\", ()=>{\n                    // Some screen readers convert ENTER (and some SPACE) press whil on\n                    // focused element to a \"click\" event, preventing actual \"keydown\"\n                    // event from firing. We're using this \"click\" event to still\n                    // generate internal click events.\n                    const focusedSprite = this._focusedSprite;\n                    if (focusedSprite) {\n                        const announceText = focusedSprite.get(\"clickAnnounceText\", \"\");\n                        if (announceText !== \"\") this.readerAlert(announceText);\n                        const downEvent = renderer.getEvent(new MouseEvent(\"click\"));\n                        focusedSprite.events.dispatch(\"click\", {\n                            type: \"click\",\n                            originalEvent: downEvent.event,\n                            point: downEvent.point,\n                            simulated: true,\n                            target: focusedSprite\n                        });\n                    }\n                }));\n                this._disposers.push($05b1b40b69b15016$export$3f65cefe8380dbea(focusElementContainer, \"keydown\", (ev)=>{\n                    const focusedSprite = this._focusedSprite;\n                    if (focusedSprite) {\n                        if (ev.key == \"Escape\") {\n                            // ESC pressed - lose current focus\n                            $05b1b40b69b15016$export$2cc7ff91bcacba5e();\n                            this._focusedSprite = undefined;\n                        }\n                        let dragOffsetX = 0;\n                        let dragOffsetY = 0;\n                        // TODO: figure out if using bogus MouseEvent is fine, or it will\n                        // fail on some platforms\n                        const eventKey = $05b1b40b69b15016$export$f7a7490116b79d4d(ev);\n                        switch(eventKey){\n                            case \"Enter\":\n                            case \" \":\n                                const announceText = focusedSprite.get(\"clickAnnounceText\", \"\");\n                                if (announceText !== \"\") this.readerAlert(announceText);\n                                if (eventKey == \" \" && focusedSprite.get(\"role\") != \"checkbox\") return;\n                                ev.preventDefault();\n                                const downEvent = renderer.getEvent(new MouseEvent(\"mouse\"));\n                                focusedSprite.events.dispatch(\"click\", {\n                                    type: \"click\",\n                                    originalEvent: downEvent.event,\n                                    point: downEvent.point,\n                                    simulated: true,\n                                    target: focusedSprite\n                                });\n                                return;\n                            case \"ArrowLeft\":\n                                dragOffsetX = -6;\n                                break;\n                            case \"ArrowRight\":\n                                dragOffsetX = 6;\n                                break;\n                            case \"ArrowUp\":\n                                dragOffsetY = -6;\n                                break;\n                            case \"ArrowDown\":\n                                dragOffsetY = 6;\n                                break;\n                            default:\n                                return;\n                        }\n                        if (dragOffsetX != 0 || dragOffsetY != 0) {\n                            ev.preventDefault();\n                            if (!focusedSprite.isDragging()) {\n                                // Start dragging\n                                this._keyboardDragPoint = {\n                                    x: 0,\n                                    y: 0\n                                };\n                                const downEvent = renderer.getEvent(new MouseEvent(\"mousedown\", {\n                                    clientX: 0,\n                                    clientY: 0\n                                }));\n                                downEvent.point = {\n                                    x: 0,\n                                    y: 0\n                                };\n                                if (focusedSprite.events.isEnabled(\"pointerdown\")) focusedSprite.events.dispatch(\"pointerdown\", {\n                                    type: \"pointerdown\",\n                                    originalEvent: downEvent.event,\n                                    point: downEvent.point,\n                                    simulated: true,\n                                    target: focusedSprite\n                                });\n                            }\n                            // Move incrementally\n                            const dragPoint = this._keyboardDragPoint;\n                            dragPoint.x += dragOffsetX;\n                            dragPoint.y += dragOffsetY;\n                            const moveEvent = renderer.getEvent(new MouseEvent(\"mousemove\", {\n                                clientX: dragPoint.x,\n                                clientY: dragPoint.y\n                            }), false);\n                            if (focusedSprite.events.isEnabled(\"globalpointermove\")) focusedSprite.events.dispatch(\"globalpointermove\", {\n                                type: \"globalpointermove\",\n                                originalEvent: moveEvent.event,\n                                point: moveEvent.point,\n                                simulated: true,\n                                target: focusedSprite\n                            });\n                        }\n                    }\n                }));\n                this._disposers.push($05b1b40b69b15016$export$3f65cefe8380dbea(focusElementContainer, \"keyup\", (ev)=>{\n                    if (this._focusedSprite) {\n                        const focusedSprite = this._focusedSprite;\n                        const eventKey = $05b1b40b69b15016$export$f7a7490116b79d4d(ev);\n                        switch(eventKey){\n                            case \"ArrowLeft\":\n                            case \"ArrowRight\":\n                            case \"ArrowUp\":\n                            case \"ArrowDown\":\n                                if (focusedSprite.isDragging()) {\n                                    // Simulate drag stop\n                                    const dragPoint = this._keyboardDragPoint;\n                                    const upEvent = renderer.getEvent(new MouseEvent(\"mouseup\", {\n                                        clientX: dragPoint.x,\n                                        clientY: dragPoint.y\n                                    }));\n                                    if (focusedSprite.events.isEnabled(\"globalpointerup\")) focusedSprite.events.dispatch(\"globalpointerup\", {\n                                        type: \"globalpointerup\",\n                                        originalEvent: upEvent.event,\n                                        point: upEvent.point,\n                                        simulated: true,\n                                        target: focusedSprite\n                                    });\n                                    //this._positionFocusElement(focusedSprite);\n                                    this._keyboardDragPoint = undefined;\n                                    // @todo dispatch mouseup event instead of calling dragStop?\n                                    // this._dispatchEvent(\"globalpointerup\", target, upEvent);\n                                    return;\n                                } else if (focusedSprite.get(\"focusableGroup\")) {\n                                    // Find next item in focusable group\n                                    const group = focusedSprite.get(\"focusableGroup\");\n                                    const items = this._tabindexes.filter((item)=>{\n                                        return item.get(\"focusableGroup\") == group && item.getPrivate(\"focusable\") !== false && item.isVisibleDeep() ? true : false;\n                                    });\n                                    let index = items.indexOf(focusedSprite);\n                                    const lastIndex = items.length - 1;\n                                    index += eventKey == \"ArrowRight\" || eventKey == \"ArrowDown\" ? 1 : -1;\n                                    if (index < 0) index = lastIndex;\n                                    else if (index > lastIndex) index = 0;\n                                    $05b1b40b69b15016$export$d7ddd398f22d79ef(items[index].getPrivate(\"focusElement\").dom);\n                                }\n                                break;\n                            case \"Tab\":\n                                const group = focusedSprite.get(\"focusableGroup\");\n                                if (group && this._isShift) {\n                                    this._focusNext(focusedSprite.getPrivate(\"focusElement\").dom, -1, group);\n                                    return;\n                                }\n                                break;\n                        }\n                    }\n                }));\n            }\n        }\n        this._startTicker();\n        this.setThemes([]);\n        this._addTooltip();\n        if (!this._hasLicense()) this._showBranding();\n    }\n    _initResizeSensor() {\n        if (this._resizeSensorDisposer) this._resizeSensorDisposer.dispose();\n        this._resizeSensorDisposer = new (0, $fcc21c9236571fac$export$99e7f5e92b1f0cf9)(this.dom, ()=>{\n            if (this.autoResize) this.resize();\n        });\n        this._disposers.push(this._resizeSensorDisposer);\n    }\n    /**\r\n     * If automatic resizing of char is disabled (`root.autoResize = false`), it\r\n     * can be resized manually by calling this method.\r\n     */ resize() {\n        const rect = this._getRealSize();\n        const size = this._getCalculatedSize(rect);\n        const w = Math.floor(size.width);\n        const h = Math.floor(size.height);\n        if (w > 0 && h > 0) {\n            const realWidth = Math.floor(rect.width);\n            const realHeight = Math.floor(rect.height);\n            const htmlElementContainer = this._htmlElementContainer;\n            htmlElementContainer.style.width = w + \"px\";\n            htmlElementContainer.style.height = h + \"px\";\n            if (this._a11yD !== true) {\n                const focusElementContainer = this._focusElementContainer;\n                focusElementContainer.style.width = w + \"px\";\n                focusElementContainer.style.height = h + \"px\";\n            }\n            this._renderer.resize(realWidth, realHeight, w, h);\n            const rootContainer = this._rootContainer;\n            rootContainer.setPrivate(\"width\", w);\n            rootContainer.setPrivate(\"height\", h);\n            this._render();\n            this._handleLogo();\n        }\n    }\n    _render() {\n        this._renderer.render(this._rootContainer._display);\n        if (this._focusElementDirty) {\n            this._updateCurrentFocus();\n            this._focusElementDirty = false;\n        }\n    }\n    _runTickers(currentTime) {\n        $2f30431acd054e2f$export$79b2f7037acddd43(this._tickers, (f)=>{\n            f(currentTime);\n        });\n    }\n    _runAnimations(currentTime) {\n        let running = 0;\n        $2f30431acd054e2f$export$249f83d169a7c462(this._animations, (animation)=>{\n            const state = animation._runAnimation(currentTime);\n            if (state === (0, $43e0e2dc9c95da4e$export$d0f7a26c90cc1562).Stopped) return false;\n            else if (state === (0, $43e0e2dc9c95da4e$export$d0f7a26c90cc1562).Playing) {\n                ++running;\n                return true;\n            } else return true;\n        });\n        this._isDirtyAnimation = false;\n        return running === 0;\n    }\n    _runDirties() {\n        //console.log(\"tick **************************************************************\");\n        let allParents = {};\n        while(this._isDirtyParents){\n            // This must be before calling _prepareChildren\n            this._isDirtyParents = false;\n            $e66f9343b5144e1a$export$ed97f33186d4b816(this._dirtyParents).forEach((key)=>{\n                const parent = this._dirtyParents[key];\n                delete this._dirtyParents[key];\n                if (!parent.isDisposed()) {\n                    allParents[parent.uid] = parent;\n                    parent._prepareChildren();\n                }\n            });\n        }\n        $e66f9343b5144e1a$export$ed97f33186d4b816(allParents).forEach((key)=>{\n            allParents[key]._updateChildren();\n        });\n        const objects = [];\n        //\t\tconsole.log(\"_beforeChanged\")\n        $e66f9343b5144e1a$export$ed97f33186d4b816(this._dirty).forEach((key)=>{\n            const entity = this._dirty[key];\n            if (entity.isDisposed()) delete this._dirty[entity.uid];\n            else {\n                objects.push(entity);\n                entity._beforeChanged();\n            }\n        });\n        //\t\tconsole.log(\"_changed\")\n        objects.forEach((entity)=>{\n            entity._changed();\n            delete this._dirty[entity.uid];\n            entity._clearDirty();\n        });\n        this._isDirty = false;\n        const depths = {};\n        const bounds = [];\n        $e66f9343b5144e1a$export$ed97f33186d4b816(this._dirtyBounds).forEach((key)=>{\n            const entity = this._dirtyBounds[key];\n            delete this._dirtyBounds[key];\n            if (!entity.isDisposed()) {\n                depths[entity.uid] = entity.depth();\n                bounds.push(entity);\n            }\n        });\n        this._positionHTMLElements();\n        // High depth -> low depth\n        bounds.sort((x, y)=>{\n            return $919e90129af4490b$export$398604a469f7de9a(depths[y.uid], depths[x.uid]);\n        });\n        //\t\tconsole.log(\"_updateBounds\")\n        bounds.forEach((entity)=>{\n            entity._updateBounds();\n        });\n        //\t\tconsole.log(\"_updatePosition\")\n        const dirtyPositions = this._dirtyPositions;\n        $e66f9343b5144e1a$export$ed97f33186d4b816(dirtyPositions).forEach((key)=>{\n            const sprite = dirtyPositions[key];\n            delete dirtyPositions[key];\n            if (!sprite.isDisposed()) sprite._updatePosition();\n        });\n        //\t\tconsole.log(\"_afterChanged\")\n        objects.forEach((entity)=>{\n            entity._afterChanged();\n        });\n    }\n    _renderFrame(currentTime) {\n        if (this._updateTick) {\n            if (this.events.isEnabled(\"framestarted\")) this.events.dispatch(\"framestarted\", {\n                type: \"framestarted\",\n                target: this,\n                timestamp: currentTime\n            });\n            this._checkComputedStyles();\n            this._runTickers(currentTime);\n            const animationDone = this._runAnimations(currentTime);\n            this._runDirties();\n            this._render();\n            this._renderer.resetImageArray();\n            this._positionHTMLElements();\n            if (this.events.isEnabled(\"frameended\")) this.events.dispatch(\"frameended\", {\n                type: \"frameended\",\n                target: this,\n                timestamp: currentTime\n            });\n            return this._tickers.length === 0 && animationDone && !this._isDirtyAnimation && !this._isDirty;\n        } else return true;\n    }\n    _runTicker(currentTime, now) {\n        if (!this.isDisposed()) {\n            this.animationTime = currentTime;\n            const done = this._renderFrame(currentTime);\n            // No more work to do\n            if (done) {\n                this._ticker = null;\n                this.animationTime = null;\n            } else if (!this._paused) {\n                if (now) this._ticker;\n                else $7803fe0a06c1ef65$var$rAF(this.fps, this._ticker);\n            }\n        }\n    }\n    _runTickerNow(timeout = 10000) {\n        if (!this.isDisposed()) {\n            const endTime = performance.now() + timeout;\n            for(;;){\n                const currentTime = performance.now();\n                if (currentTime >= endTime) {\n                    this.animationTime = null;\n                    break;\n                }\n                this.animationTime = currentTime;\n                const done = this._renderFrame(currentTime);\n                if (done) {\n                    this.animationTime = null;\n                    break;\n                }\n            }\n        }\n    }\n    _startTicker() {\n        if (this._ticker === null) {\n            this.animationTime = null;\n            this._ticker = (currentTime)=>{\n                this._runTicker(currentTime);\n            };\n            $7803fe0a06c1ef65$var$rAF(this.fps, this._ticker);\n        }\n    }\n    /**\r\n     * Returns whether the root is updating or not.\r\n     */ get updateTick() {\n        return this._updateTick;\n    }\n    /**\r\n     * Enables or disables the root updating.\r\n     */ set updateTick(value) {\n        this._updateTick = value;\n        if (value) this._startTicker();\n    }\n    _addDirtyEntity(entity) {\n        this._isDirty = true;\n        if (this._dirty[entity.uid] === undefined) this._dirty[entity.uid] = entity;\n        this._startTicker();\n    }\n    _addDirtyParent(parent) {\n        this._isDirty = true;\n        this._isDirtyParents = true;\n        if (this._dirtyParents[parent.uid] === undefined) this._dirtyParents[parent.uid] = parent;\n        this._startTicker();\n    }\n    _addDirtyBounds(entity) {\n        this._isDirty = true;\n        if (this._dirtyBounds[entity.uid] === undefined) this._dirtyBounds[entity.uid] = entity;\n        this._startTicker();\n    }\n    _addDirtyPosition(sprite) {\n        this._isDirty = true;\n        if (this._dirtyPositions[sprite.uid] === undefined) this._dirtyPositions[sprite.uid] = sprite;\n        this._startTicker();\n    }\n    _addAnimation(animation) {\n        this._isDirtyAnimation = true;\n        // TODO use numeric id instead\n        if (this._animations.indexOf(animation) === -1) this._animations.push(animation);\n        this._startTicker();\n    }\n    _markDirty() {\n        this._isDirty = true;\n    }\n    _markDirtyRedraw() {\n        this.events.once(\"frameended\", ()=>{\n            this._isDirty = true;\n            this._startTicker();\n        });\n    }\n    eachFrame(f) {\n        this._tickers.push(f);\n        this._startTicker();\n        return new (0, $a363f66303166aa1$export$6039fc6176d96e35)(()=>{\n            $2f30431acd054e2f$export$2529f734547e2830(this._tickers, f);\n        });\n    }\n    markDirtyGlobal(container) {\n        if (!container) container = this.container;\n        container.walkChildren((child)=>{\n            if (child instanceof (0, $5de502da8a72d65e$export$42a852a2b6b56249)) this.markDirtyGlobal(child);\n            child.markDirty();\n            child.markDirtyBounds();\n        });\n    }\n    /**\r\n     * Returns width of the target container, in pixels.\r\n     *\r\n     * @return Width\r\n     */ width() {\n        // TODO make this more efficient, maybe just return the renderer's width ?\n        return Math.floor(this._getCalculatedSize(this._getRealSize()).width);\n    }\n    /**\r\n     * Returns height of the target container, in pixels.\r\n     *\r\n     * @return Height\r\n     */ height() {\n        // TODO make this more efficient, maybe just return the renderer's height ?\n        return Math.floor(this._getCalculatedSize(this._getRealSize()).height);\n    }\n    /**\r\n     * Disposes root and all the content in it.\r\n     */ dispose() {\n        if (!this._isDisposed) {\n            this._isDisposed = true;\n            this._rootContainer.dispose();\n            this._renderer.dispose();\n            this.horizontalLayout.dispose();\n            this.verticalLayout.dispose();\n            this.interfaceColors.dispose();\n            $2f30431acd054e2f$export$79b2f7037acddd43(this._disposers, (x)=>{\n                x.dispose();\n            });\n            if (this._inner) $05b1b40b69b15016$export$f883456a56996078(this._inner);\n            $2f30431acd054e2f$export$cd7f480d6b8286c3((0, $ca44c6881f0f20f2$export$4bb7493d241fd8a5).rootElements, this);\n        }\n    }\n    /**\r\n     * Returns `true` if root element is disposed.\r\n     *\r\n     * @return Disposed?\r\n     */ isDisposed() {\n        return this._isDisposed;\n    }\n    /**\r\n     * Triggers screen reader read out a message.\r\n     *\r\n     * @see {@link https://www.amcharts.com/docs/v5/concepts/accessibility/} for more info\r\n     * @param  text  Alert text\r\n     */ readerAlert(text) {\n        if (this._a11yD !== true) this._readerAlertElement.innerHTML = $05b1b40b69b15016$export$1fbf6f199c05a66(text);\n    }\n    /**\r\n     * Sets themes to be used for the chart.\r\n     *\r\n     * @see {@link https://www.amcharts.com/docs/v5/concepts/themes/} for more info\r\n     * @param  themes  A list of themes\r\n     */ setThemes(themes) {\n        this._rootContainer.set(\"themes\", themes);\n        // otherwise new themes are not applied\n        const tooltipContainer = this.tooltipContainer;\n        if (tooltipContainer) tooltipContainer._applyThemes();\n        // @todo review this\n        const interfaceColors = this.interfaceColors;\n        if (interfaceColors) interfaceColors._applyThemes();\n    }\n    _addTooltip() {\n        if (!this.tooltipContainer) {\n            const tooltipContainerSettings = this._tooltipContainerSettings;\n            const tooltipContainer = this._rootContainer.children.push((0, $5de502da8a72d65e$export$42a852a2b6b56249).new(this, {\n                position: \"absolute\",\n                isMeasured: false,\n                width: (0, $bd0d0c10fd30006b$export$46342ea78d85883c),\n                height: (0, $bd0d0c10fd30006b$export$46342ea78d85883c),\n                layer: tooltipContainerSettings ? 35 : 30,\n                layerMargin: tooltipContainerSettings ? tooltipContainerSettings : undefined\n            }));\n            this.tooltipContainer = tooltipContainer;\n            const tooltip = (0, $670fc48e4ddbc086$export$28c660c63b792dea).new(this, {});\n            this.container.set(\"tooltip\", tooltip);\n            tooltip.hide(0);\n            this._tooltip = tooltip;\n        }\n    }\n    /**\r\n     * Accesibility\r\n     */ _registerTabindexOrder(target) {\n        if (this._a11yD == true) return;\n        if (target.get(\"focusable\")) $2f30431acd054e2f$export$3589e1fa93f0a8a5(this._tabindexes, target);\n        else $2f30431acd054e2f$export$cd7f480d6b8286c3(this._tabindexes, target);\n        this._invalidateTabindexes();\n    }\n    _unregisterTabindexOrder(target) {\n        if (this._a11yD == true) return;\n        $2f30431acd054e2f$export$cd7f480d6b8286c3(this._tabindexes, target);\n        this._invalidateTabindexes();\n    }\n    _invalidateTabindexes() {\n        if (this._a11yD == true) return;\n        this._tabindexes.sort((a, b)=>{\n            const aindex = a.get(\"tabindexOrder\", 0);\n            const bindex = b.get(\"tabindexOrder\", 0);\n            if (aindex == bindex) return 0;\n            else if (aindex > bindex) return 1;\n            else return -1;\n        });\n        const groups = [];\n        $2f30431acd054e2f$export$79b2f7037acddd43(this._tabindexes, (item, index)=>{\n            if (!item.getPrivate(\"focusElement\")) this._makeFocusElement(index, item);\n            else this._moveFocusElement(index, item);\n            const group = item.get(\"focusableGroup\");\n            if (group && item.getPrivate(\"focusable\") !== false) {\n                if (groups.indexOf(group) !== -1) // Non-first element in the group, make it not directly focusable\n                item.getPrivate(\"focusElement\").dom.setAttribute(\"tabindex\", \"-1\");\n                else groups.push(group);\n            }\n        });\n    }\n    _updateCurrentFocus() {\n        if (this._a11yD == true) return;\n        if (this._focusedSprite) {\n            this._decorateFocusElement(this._focusedSprite);\n            this._positionFocusElement(this._focusedSprite);\n        }\n    }\n    _decorateFocusElement(target, focusElement) {\n        if (this._a11yD == true) return;\n        // Decorate with proper accessibility attributes\n        if (!focusElement) focusElement = target.getPrivate(\"focusElement\").dom;\n        if (!focusElement) return;\n        const role = target.get(\"role\");\n        if (role) focusElement.setAttribute(\"role\", role);\n        else focusElement.removeAttribute(\"role\");\n        const ariaLabel = target.get(\"ariaLabel\");\n        if (ariaLabel) {\n            const label = (0, $8d45a8a77dcd0f75$export$6a40ef019a0fa5f6)(target, ariaLabel);\n            focusElement.setAttribute(\"aria-label\", label);\n        } else focusElement.removeAttribute(\"aria-label\");\n        const ariaLive = target.get(\"ariaLive\");\n        if (ariaLive) focusElement.setAttribute(\"aria-live\", ariaLive);\n        else focusElement.removeAttribute(\"aria-live\");\n        const ariaChecked = target.get(\"ariaChecked\");\n        if (ariaChecked != null && role && [\n            \"checkbox\",\n            \"option\",\n            \"radio\",\n            \"menuitemcheckbox\",\n            \"menuitemradio\",\n            \"treeitem\"\n        ].indexOf(role) !== -1) focusElement.setAttribute(\"aria-checked\", ariaChecked ? \"true\" : \"false\");\n        else focusElement.removeAttribute(\"aria-checked\");\n        const ariaCurrent = target.get(\"ariaCurrent\");\n        if (ariaCurrent != null) focusElement.setAttribute(\"aria-current\", ariaCurrent);\n        else focusElement.removeAttribute(\"aria-current\");\n        const ariaSelected = target.get(\"ariaSelected\");\n        if (ariaSelected != null && role && [\n            \"gridcell\",\n            \"option\",\n            \"row\",\n            \"tab\",\n            \"columnheader\",\n            \"rowheader\",\n            \"treeitem\"\n        ].indexOf(role) !== -1) focusElement.setAttribute(\"aria-selected\", ariaSelected ? \"true\" : \"false\");\n        else focusElement.removeAttribute(\"aria-selected\");\n        if (target.get(\"ariaHidden\")) focusElement.setAttribute(\"aria-hidden\", \"true\");\n        else focusElement.removeAttribute(\"aria-hidden\");\n        const ariaOrientation = target.get(\"ariaOrientation\");\n        if (ariaOrientation) focusElement.setAttribute(\"aria-orientation\", ariaOrientation);\n        else focusElement.removeAttribute(\"aria-orientation\");\n        const ariaValueNow = target.get(\"ariaValueNow\");\n        if (ariaValueNow) focusElement.setAttribute(\"aria-valuenow\", ariaValueNow);\n        else focusElement.removeAttribute(\"aria-valuenow\");\n        const ariaValueMin = target.get(\"ariaValueMin\");\n        if (ariaValueMin) focusElement.setAttribute(\"aria-valuemin\", ariaValueMin);\n        else focusElement.removeAttribute(\"aria-valuemin\");\n        const ariaValueMax = target.get(\"ariaValueMax\");\n        if (ariaValueMax) focusElement.setAttribute(\"aria-valuemax\", ariaValueMax);\n        else focusElement.removeAttribute(\"aria-valuemax\");\n        const ariaValueText = target.get(\"ariaValueText\");\n        if (ariaValueText) focusElement.setAttribute(\"aria-valuetext\", ariaValueText);\n        else focusElement.removeAttribute(\"aria-valuetext\");\n        const ariaControls = target.get(\"ariaControls\");\n        if (ariaControls) focusElement.setAttribute(\"aria-controls\", ariaControls);\n        else focusElement.removeAttribute(\"aria-controls\");\n        if (target.get(\"visible\") && target.get(\"opacity\") !== 0 && target.get(\"role\") != \"tooltip\" && !target.isHidden() && target.getPrivate(\"focusable\") !== false) {\n            if (focusElement.getAttribute(\"tabindex\") != \"-1\") focusElement.setAttribute(\"tabindex\", \"\" + this.tabindex);\n            focusElement.removeAttribute(\"aria-hidden\");\n        } else {\n            focusElement.removeAttribute(\"tabindex\");\n            focusElement.setAttribute(\"aria-hidden\", \"true\");\n        }\n    }\n    _makeFocusElement(index, target) {\n        if (target.getPrivate(\"focusElement\") || this._a11yD == true) return;\n        // Init\n        const focusElement = document.createElement(\"div\");\n        if (target.get(\"role\") != \"tooltip\") focusElement.tabIndex = this.tabindex;\n        focusElement.style.position = \"absolute\";\n        $05b1b40b69b15016$export$2dc32695cee26cb(focusElement, false);\n        const disposers = [];\n        target.setPrivate(\"focusElement\", {\n            dom: focusElement,\n            disposers: disposers\n        });\n        this._decorateFocusElement(target);\n        disposers.push($05b1b40b69b15016$export$3f65cefe8380dbea(focusElement, \"focus\", (ev)=>{\n            this._handleFocus(ev);\n        }));\n        disposers.push($05b1b40b69b15016$export$3f65cefe8380dbea(focusElement, \"blur\", (ev)=>{\n            this._handleBlur(ev);\n        }));\n        this._moveFocusElement(index, target);\n    }\n    _removeFocusElement(target) {\n        if (this._a11yD == true) return;\n        $2f30431acd054e2f$export$cd7f480d6b8286c3(this._tabindexes, target);\n        const focusElement = target.getPrivate(\"focusElement\");\n        if (focusElement) {\n            const container = this._focusElementContainer;\n            container.removeChild(focusElement.dom);\n            $2f30431acd054e2f$export$79b2f7037acddd43(focusElement.disposers, (x)=>{\n                x.dispose();\n            });\n        }\n    }\n    _hideFocusElement(target) {\n        if (this._a11yD == true) return;\n        const focusElement = target.getPrivate(\"focusElement\");\n        focusElement.dom.style.display = \"none\";\n    }\n    _moveFocusElement(index, target) {\n        if (this._a11yD == true) return;\n        // Get container\n        const container = this._focusElementContainer;\n        const focusElement = target.getPrivate(\"focusElement\").dom;\n        if (focusElement === this._focusElementContainer.children[index]) // Nothing to do\n        return;\n        const next = this._focusElementContainer.children[index + 1];\n        if (next) container.insertBefore(focusElement, next);\n        else container.append(focusElement);\n    }\n    _positionFocusElement(target) {\n        if (this._a11yD == true || target == undefined) return;\n        const bounds = target.globalBounds();\n        let width = bounds.right == bounds.left ? target.width() : bounds.right - bounds.left;\n        let height = bounds.top == bounds.bottom ? target.height() : bounds.bottom - bounds.top;\n        const padding = this._settings.focusPadding !== undefined ? this._settings.focusPadding : 2;\n        let x = bounds.left - padding;\n        let y = bounds.top - padding;\n        if (width < 0) {\n            x += width;\n            width = Math.abs(width);\n        }\n        if (height < 0) {\n            y += height;\n            height = Math.abs(height);\n        }\n        const focusElement = target.getPrivate(\"focusElement\").dom;\n        focusElement.style.top = y + \"px\";\n        focusElement.style.left = x + \"px\";\n        focusElement.style.width = width + padding * 2 + \"px\";\n        focusElement.style.height = height + padding * 2 + \"px\";\n    }\n    _getSpriteByFocusElement(target) {\n        let found;\n        $2f30431acd054e2f$export$1e016427912bfd78(this._tabindexes, (item, _index)=>{\n            if (item.getPrivate(\"focusElement\").dom === target) {\n                found = item;\n                return false;\n            }\n            return true;\n        });\n        return found;\n    }\n    _handleFocus(ev) {\n        if (this._a11yD == true) return;\n        // Get element\n        //const focused = this._tabindexes[index];\n        const focused = this._getSpriteByFocusElement(ev.target);\n        if (!focused) return;\n        // Jump over hidden elements\n        if (!focused.isVisibleDeep()) {\n            this._focusNext(ev.target, this._isShift ? -1 : 1);\n            return;\n        }\n        // Size and position\n        this._positionFocusElement(focused);\n        //this._decorateFocusElement(focused);\n        this._focusedSprite = focused;\n        if (focused.events.isEnabled(\"focus\")) focused.events.dispatch(\"focus\", {\n            type: \"focus\",\n            originalEvent: ev,\n            target: focused\n        });\n    }\n    _focusNext(el, direction, group) {\n        if (this._a11yD == true) return;\n        const focusableElements = Array.from(document.querySelectorAll([\n            'a[href]',\n            'area[href]',\n            'button:not([disabled])',\n            'details',\n            'input:not([disabled])',\n            'iframe:not([disabled])',\n            'select:not([disabled])',\n            'textarea:not([disabled])',\n            '[contentEditable=\"\"]',\n            '[contentEditable=\"true\"]',\n            '[contentEditable=\"TRUE\"]',\n            '[tabindex]:not([tabindex^=\"-\"])'\n        ].join(',')));\n        let index = focusableElements.indexOf(el) + direction;\n        if (index < 0) index = focusableElements.length - 1;\n        else if (index >= focusableElements.length) index = 0;\n        const targetElement = focusableElements[index];\n        if (group && direction == -1) {\n            const target = this._getSpriteByFocusElement(targetElement);\n            if (target && target.get(\"focusableGroup\") == group) {\n                this._focusNext(targetElement, direction);\n                return;\n            }\n        }\n        targetElement.focus();\n    }\n    _handleBlur(ev) {\n        if (this._a11yD == true) return;\n        const focused = this._focusedSprite;\n        if (focused && !focused.isDisposed() && focused.events.isEnabled(\"blur\")) focused.events.dispatch(\"blur\", {\n            type: \"blur\",\n            originalEvent: ev,\n            target: focused\n        });\n        this._focusedSprite = undefined;\n    }\n    /**\r\n     * @ignore\r\n     */ updateTooltip(target) {\n        if (this._a11yD == true) return;\n        const text = $05b1b40b69b15016$export$1fbf6f199c05a66(target._getText());\n        let tooltipElement = target.getPrivate(\"tooltipElement\");\n        if (target.get(\"role\") == \"tooltip\" && text != \"\") {\n            if (!tooltipElement) tooltipElement = this._makeTooltipElement(target);\n            if (tooltipElement.innerHTML != text) tooltipElement.innerHTML = text;\n            tooltipElement.setAttribute(\"aria-hidden\", target.isVisibleDeep() ? \"false\" : \"true\");\n        } else if (tooltipElement) {\n            tooltipElement.remove();\n            target.removePrivate(\"tooltipElement\");\n        }\n    }\n    _makeTooltipElement(target) {\n        const container = this._tooltipElementContainer;\n        const tooltipElement = document.createElement(\"div\");\n        tooltipElement.style.position = \"absolute\";\n        tooltipElement.style.width = \"1px\";\n        tooltipElement.style.height = \"1px\";\n        tooltipElement.style.overflow = \"hidden\";\n        tooltipElement.style.clip = \"rect(1px, 1px, 1px, 1px)\";\n        $05b1b40b69b15016$export$2dc32695cee26cb(tooltipElement, false);\n        this._decorateFocusElement(target, tooltipElement);\n        container.append(tooltipElement);\n        target.setPrivate(\"tooltipElement\", tooltipElement);\n        return tooltipElement;\n    }\n    _removeTooltipElement(target) {\n        if (this._a11yD == true) return;\n        const tooltipElement = target.getPrivate(\"tooltipElement\");\n        if (tooltipElement) {\n            const parent = tooltipElement.parentElement;\n            if (parent) parent.removeChild(tooltipElement);\n        }\n    }\n    _invalidateAccessibility(target) {\n        if (this._a11yD == true) return;\n        this._focusElementDirty = true;\n        const focusElement = target.getPrivate(\"focusElement\");\n        if (target.get(\"focusable\")) {\n            if (focusElement) {\n                this._decorateFocusElement(target);\n                this._positionFocusElement(target);\n            }\n        } else if (focusElement) this._removeFocusElement(target);\n    //this.updateCurrentFocus();\n    }\n    /**\r\n     * Returns `true` if `target` is currently focused.\r\n     *\r\n     * @param   target  Target\r\n     * @return          Focused?\r\n     */ focused(target) {\n        return this._focusedSprite === target;\n    }\n    /**\r\n     * Converts document coordinates to coordinates withing root element.\r\n     *\r\n     * @param   point  Document point\r\n     * @return         Root point\r\n     */ documentPointToRoot(point) {\n        const rect = this._getRealSize();\n        const size = this._getCalculatedSize(rect);\n        const scaleWidth = size.width / rect.width;\n        const scaleHeight = size.height / rect.height;\n        return {\n            x: (point.x - rect.left) * scaleWidth,\n            y: (point.y - rect.top) * scaleHeight\n        };\n    }\n    /**\r\n     * Converts root coordinates to document\r\n     *\r\n     * @param   point  Document point\r\n     * @return         Root point\r\n     */ rootPointToDocument(point) {\n        const rect = this._getRealSize();\n        const size = this._getCalculatedSize(rect);\n        const scaleWidth = size.width / rect.width;\n        const scaleHeight = size.height / rect.height;\n        return {\n            x: point.x / scaleWidth + rect.left,\n            y: point.y / scaleHeight + rect.top\n        };\n    }\n    /**\r\n     * @ignore\r\n     */ addDisposer(disposer) {\n        this._disposers.push(disposer);\n        return disposer;\n    }\n    _updateComputedStyles() {\n        const styles = window.getComputedStyle(this.dom);\n        let fontHash = \"\";\n        $e66f9343b5144e1a$export$79b2f7037acddd43(styles, (key, val)=>{\n            if ($f63bdea45a89cf24$export$844ec244b1367d54(key) && key.match(/^font/)) fontHash += val;\n        });\n        const changed = fontHash != this._fontHash;\n        if (changed) this._fontHash = fontHash;\n        return changed;\n    }\n    _checkComputedStyles() {\n        if (this._updateComputedStyles()) this._invalidateLabelBounds(this.container);\n    }\n    _invalidateLabelBounds(target) {\n        if (target instanceof (0, $5de502da8a72d65e$export$42a852a2b6b56249)) target.children.each((child)=>{\n            this._invalidateLabelBounds(child);\n        });\n        else if (target instanceof (0, $991c10b390813ab6$export$5f1af8db9871e1d6)) target.markDirtyBounds();\n    }\n    /**\r\n     * To all the clever heads out there. Yes, we did not make any attempts to\r\n     * scramble this.\r\n     *\r\n     * This is a part of a tool meant for our users to manage their commercial\r\n     * licenses for removal of amCharts branding from charts.\r\n     *\r\n     * The only legit way to do so is to purchase a commercial license for amCharts:\r\n     * https://www.amcharts.com/online-store/\r\n     *\r\n     * Removing or altering this code, or disabling amCharts branding in any other\r\n     * way is against the license and thus illegal.\r\n     */ _hasLicense() {\n        for(let i = 0; i < (0, $ca44c6881f0f20f2$export$4bb7493d241fd8a5).licenses.length; i++){\n            if ((0, $ca44c6881f0f20f2$export$4bb7493d241fd8a5).licenses[i].match(/^AM5C.{5,}/i)) return true;\n        }\n        return false;\n    }\n    _licenseApplied() {\n        if (this._logo) this._logo.set(\"forceHidden\", true);\n    }\n    /**\r\n     * @ignore\r\n     */ get debugGhostView() {\n        return this._renderer.debugGhostView;\n    }\n    /**\r\n     * @ignore\r\n     */ set debugGhostView(value) {\n        this._renderer.debugGhostView = value;\n    }\n    /**\r\n     * Set this to `true` if you need chart to require first a tap onto it before\r\n     * touch gesture related functionality like zoom/pan is turned on.\r\n     *\r\n     * @see {@link https://www.amcharts.com/docs/v5/getting-started/root-element/#Touch_related_options} for more info\r\n     * @default false\r\n     * @since 5.2.9\r\n     * @param  value  Needs a tap to activate touch functions\r\n     */ set tapToActivate(value) {\n        this._renderer.tapToActivate = value;\n    }\n    /**\r\n     * @return Needs a tap to activate touch functions\r\n     */ get tapToActivate() {\n        return this._renderer.tapToActivate;\n    }\n    /**\r\n     * If `tapToActivate` is set to `true`, this setting will determine number\r\n     * of milliseconds the chart will stay \"active\", before releasing the\r\n     * controls back to the page.\r\n     *\r\n     * @see {@link https://www.amcharts.com/docs/v5/getting-started/root-element/#Touch_related_options} for more info\r\n     * @default 3000\r\n     * @since 5.2.9\r\n     * @param  value  Timeout\r\n     */ set tapToActivateTimeout(value) {\n        this._renderer.tapToActivateTimeout = value;\n    }\n    /**\r\n     * @return Timeout\r\n     */ get tapToActivateTimeout() {\n        return this._renderer.tapToActivateTimeout;\n    }\n    _makeHTMLElement(target) {\n        // Get container\n        const container = this._htmlElementContainer;\n        // Init\n        const htmlElement = document.createElement(\"div\");\n        target.setPrivate(\"htmlElement\", htmlElement);\n        //htmlElement.tabIndex = this.tabindex;\n        htmlElement.style.position = \"absolute\";\n        htmlElement.style.overflow = \"auto\";\n        htmlElement.style.boxSizing = \"border-box\";\n        $05b1b40b69b15016$export$2dc32695cee26cb(htmlElement, target.get(\"interactive\", false));\n        // Translate events\n        if (target.events.isEnabled(\"click\")) {\n            $05b1b40b69b15016$export$2dc32695cee26cb(htmlElement, true);\n            this._disposers.push($05b1b40b69b15016$export$3f65cefe8380dbea(htmlElement, \"click\", (ev)=>{\n                const downEvent = this._renderer.getEvent(ev);\n                target.events.dispatch(\"click\", {\n                    type: \"click\",\n                    originalEvent: downEvent.event,\n                    point: downEvent.point,\n                    simulated: false,\n                    target: target\n                });\n            }));\n        }\n        this._positionHTMLElement(target);\n        container.append(htmlElement);\n        $2f30431acd054e2f$export$3589e1fa93f0a8a5(this._htmlEnabledContainers, target);\n        return htmlElement;\n    }\n    _positionHTMLElements() {\n        $2f30431acd054e2f$export$79b2f7037acddd43(this._htmlEnabledContainers, (target)=>{\n            this._positionHTMLElement(target);\n        });\n    }\n    _positionHTMLElement(target) {\n        const htmlElement = target.getPrivate(\"htmlElement\");\n        if (htmlElement) {\n            // Translate settings\n            const visualSettings = [\n                \"paddingTop\",\n                \"paddingRight\",\n                \"paddingBottom\",\n                \"paddingLeft\",\n                \"minWidth\",\n                \"minHeight\",\n                \"maxWidth\",\n                \"maxHeight\"\n            ];\n            $2f30431acd054e2f$export$79b2f7037acddd43(visualSettings, (setting)=>{\n                const value = target.get(setting);\n                if (value) htmlElement.style[setting] = value + \"px\";\n                else htmlElement.style[setting] = \"\";\n            });\n            // Init and reset scale / rotation\n            const scale = target.compositeScale() || 1;\n            const rotation = target.compositeRotation() || 0;\n            htmlElement.style.transform = \"\";\n            htmlElement.style.transformOrigin = \"\";\n            // Deal with opacity\n            const opacity = target.compositeOpacity();\n            setTimeout(()=>{\n                htmlElement.style.opacity = opacity + \"\";\n            }, 10);\n            const visible = target.isVisibleDeep();\n            if (visible) htmlElement.style.display = \"block\";\n            // Deal with position\n            // const bounds = target.globalBounds();\n            // htmlElement.style.top = (bounds.top) + \"px\";\n            // htmlElement.style.left = (bounds.left) + \"px\";\n            let pos = {\n                x: target.x() + target.get(\"dx\", 0),\n                y: target.y() + target.get(\"dy\", 0)\n            };\n            if (target.parent) pos = target.parent.toGlobal(pos);\n            htmlElement.style.top = pos.y + \"px\";\n            htmlElement.style.left = pos.x + \"px\";\n            // Use width/height if those are set\n            const width = target.get(\"width\");\n            const height = target.get(\"height\");\n            let w = 0;\n            let h = 0;\n            if (width) w = target.width();\n            if (height) h = target.height();\n            if (!width || !height) {\n                htmlElement.style.position = \"fixed\";\n                htmlElement.style.width = \"\";\n                htmlElement.style.height = \"\";\n                const bbox = htmlElement.getBoundingClientRect();\n                htmlElement.style.position = \"absolute\";\n                if (!width) w = bbox.width;\n                if (!height) h = bbox.height;\n                let lw = w / scale;\n                let lh = h / scale;\n                let cx = target.get(\"centerX\", 0);\n                let cy = target.get(\"centerY\", 0);\n                let ll = 0;\n                let lr = 0;\n                let lt = 0;\n                let lb = 0;\n                if (cx instanceof (0, $bd0d0c10fd30006b$export$cbc348af47898b5e)) {\n                    ll = -cx.value * lw;\n                    lr = (1 - cx.value) * lw;\n                } else {\n                    ll = -cx;\n                    lr = lw - cx;\n                }\n                if (cy instanceof (0, $bd0d0c10fd30006b$export$cbc348af47898b5e)) {\n                    lt = -cy.value * lh;\n                    lb = (1 - cy.value) * lh;\n                } else {\n                    lt = -cy;\n                    lb = lh - cy;\n                }\n                target._localBounds = {\n                    left: ll,\n                    right: lr,\n                    top: lt,\n                    bottom: lb\n                };\n                let previousBounds = target._adjustedLocalBounds;\n                let newBounds = target._display.getAdjustedBounds(target._localBounds);\n                target._adjustedLocalBounds = newBounds;\n                // compare each value of the bounds\n                if (previousBounds.left !== newBounds.left || previousBounds.right !== newBounds.right || previousBounds.top !== newBounds.top || previousBounds.bottom !== newBounds.bottom) target.markDirtyBounds();\n            }\n            if (w > 0) htmlElement.style.minWidth = w + \"px\";\n            if (h > 0) htmlElement.style.minHeight = h + \"px\";\n            // Hide or show\n            if (!visible || opacity == 0) htmlElement.style.display = \"none\";\n            // Center position\n            const x = target.get(\"centerX\", 0);\n            const originX = (0, $bd0d0c10fd30006b$export$e50269385c77c348)(x) ? x.percent + \"%\" : x + \"px\";\n            const y = target.get(\"centerY\", 0);\n            const originY = (0, $bd0d0c10fd30006b$export$e50269385c77c348)(y) ? y.percent + \"%\" : y + \"px\";\n            if (x || y) htmlElement.style.transform = \"translate(-\" + originX + \", -\" + originY + \")\" + htmlElement.style.transform;\n            // Deal with scale\n            if (scale != 1) htmlElement.style.transform += \"scale(\" + scale + \")\";\n            if (rotation != 0) htmlElement.style.transform += \" rotate(\" + rotation + \"deg)\";\n            if (htmlElement.style.transform != \"\") htmlElement.style.transformOrigin = originX + \" \" + originY;\n        }\n    }\n    _setHTMLContent(target, html) {\n        let htmlElement = target.getPrivate(\"htmlElement\");\n        if (!htmlElement) htmlElement = this._makeHTMLElement(target);\n        if (htmlElement.innerHTML != html) htmlElement.innerHTML = html;\n    }\n    _removeHTMLContent(target) {\n        let htmlElement = target.getPrivate(\"htmlElement\");\n        if (htmlElement) {\n            this._htmlElementContainer.removeChild(htmlElement);\n            target.removePrivate(\"htmlElement\");\n        }\n        $2f30431acd054e2f$export$cd7f480d6b8286c3(this._htmlEnabledContainers, target);\n    }\n}\n\n\n\n\n\n\n\n\n\nclass $7b05e1e856aa7465$export$8a1414ab037091f9 extends (0, $5de502da8a72d65e$export$42a852a2b6b56249) {\n    constructor(){\n        super(...arguments);\n        Object.defineProperty(this, \"_za\", {\n            enumerable: true,\n            configurable: true,\n            writable: true,\n            value: void 0\n        });\n        Object.defineProperty(this, \"_txa\", {\n            enumerable: true,\n            configurable: true,\n            writable: true,\n            value: void 0\n        });\n        Object.defineProperty(this, \"_tya\", {\n            enumerable: true,\n            configurable: true,\n            writable: true,\n            value: void 0\n        });\n        Object.defineProperty(this, \"_movePoints\", {\n            enumerable: true,\n            configurable: true,\n            writable: true,\n            value: {}\n        });\n        Object.defineProperty(this, \"_downScale\", {\n            enumerable: true,\n            configurable: true,\n            writable: true,\n            value: 1\n        });\n        Object.defineProperty(this, \"_downX\", {\n            enumerable: true,\n            configurable: true,\n            writable: true,\n            value: 0\n        });\n        Object.defineProperty(this, \"_downY\", {\n            enumerable: true,\n            configurable: true,\n            writable: true,\n            value: 0\n        });\n        Object.defineProperty(this, \"_pinchDP\", {\n            enumerable: true,\n            configurable: true,\n            writable: true,\n            value: void 0\n        });\n        /**\r\n         * All elements must be added to `contents.children` instead of `children` of\r\n         * [[ZoomableContainer]].\r\n         *\r\n         * @see {@link https://www.amcharts.com/docs/v5/concepts/common-elements/containers/#Zoomable_container} for more info\r\n         */ Object.defineProperty(this, \"contents\", {\n            enumerable: true,\n            configurable: true,\n            writable: true,\n            value: this.children.push((0, $5de502da8a72d65e$export$42a852a2b6b56249).new(this._root, {\n                width: (0, $bd0d0c10fd30006b$export$46342ea78d85883c),\n                height: (0, $bd0d0c10fd30006b$export$46342ea78d85883c),\n                x: 0,\n                y: 0,\n                draggable: true,\n                background: (0, $9e0cea1ea085e274$export$4617fb02663045ef).new(this._root, {\n                    fill: (0, $389de129b6cd18b1$export$35e9368ef982300f)(0xffffff),\n                    fillOpacity: 0\n                })\n            }))\n        });\n        Object.defineProperty(this, \"_wheelDp\", {\n            enumerable: true,\n            configurable: true,\n            writable: true,\n            value: void 0\n        });\n    }\n    _afterNew() {\n        super._afterNew();\n        const events = this.contents.events;\n        this._disposers.push(events.on(\"pointerdown\", (event)=>{\n            this._handleThisDown(event);\n        }));\n        this._disposers.push(events.on(\"globalpointerup\", (event)=>{\n            this._handleThisUp(event);\n        }));\n        this._disposers.push(events.on(\"globalpointermove\", (event)=>{\n            this._handleThisMove(event);\n        }));\n        const bg = this.contents.get(\"background\");\n        if (bg) {\n            bg.adapters.add(\"width\", (width)=>{\n                return Number(width) * 5;\n            });\n            bg.adapters.add(\"height\", (height)=>{\n                return Number(height) * 5;\n            });\n            bg.adapters.add(\"x\", (x)=>{\n                return Number(x) - bg.width() / 5 * 2;\n            });\n            bg.adapters.add(\"y\", (y)=>{\n                return Number(y) - bg.height() / 5 * 2;\n            });\n        }\n        const contents = this.contents;\n        contents.adapters.add(\"x\", (x)=>{\n            if ($f63bdea45a89cf24$export$7e4aa119212bc614(x)) {\n                let maxPanOut = this.get(\"maxPanOut\", 0.4);\n                let w = contents.width();\n                x = Math.min(w * maxPanOut, x);\n                x = Math.max(this.width() - w * contents.get(\"scale\", 1) * (1 + maxPanOut), x);\n            }\n            return x;\n        });\n        contents.adapters.add(\"y\", (y)=>{\n            if ($f63bdea45a89cf24$export$7e4aa119212bc614(y)) {\n                let maxPanOut = this.get(\"maxPanOut\", 0.4);\n                let h = contents.height();\n                y = Math.min(h * maxPanOut, y);\n                y = Math.max(this.height() - h * contents.get(\"scale\", 1) * (1 + maxPanOut), y);\n            }\n            return y;\n        });\n    }\n    _prepareChildren() {\n        super._prepareChildren();\n        if (this.isDirty(\"wheelable\")) this._handleSetWheel();\n        this.contents._display.cancelTouch = this.get(\"pinchZoom\", false);\n    }\n    _handleSetWheel() {\n        if (this.get(\"wheelable\")) {\n            if (this._wheelDp) this._wheelDp.dispose();\n            this._wheelDp = this.events.on(\"wheel\", (event)=>{\n                const wheelEvent = event.originalEvent;\n                // Ignore wheel event if it is happening on a non-ZoomableContainer element, e.g. if\n                // some page element is over the ZoomableContainer.\n                if ($05b1b40b69b15016$export$a3b96849d75e4c53(wheelEvent, this)) wheelEvent.preventDefault();\n                else return;\n                const point = this.toLocal(event.point);\n                this._handleWheelZoom(wheelEvent.deltaY, point);\n            });\n            this._disposers.push(this._wheelDp);\n        } else if (this._wheelDp) this._wheelDp.dispose();\n    }\n    _handleWheelZoom(delta, point) {\n        let step = this.get(\"zoomStep\", 2);\n        let zoomLevel = this.contents.get(\"scale\", 1);\n        let newZoomLevel = zoomLevel;\n        if (delta > 0) newZoomLevel = zoomLevel / step;\n        else if (delta < 0) newZoomLevel = zoomLevel * step;\n        if (newZoomLevel != zoomLevel) this.zoomToPoint(point, newZoomLevel);\n    }\n    /**\r\n     * Zooms to specific X/Y point.\r\n     *\r\n     * @param   point  Center point\r\n     * @param   level  Zoom level\r\n     * @return         Zoom Animation object\r\n     */ zoomToPoint(point, level) {\n        if (level) level = $f43e9e04b3f0548b$export$386b748ab02f16a0(level, this.get(\"minZoomLevel\", 1), this.get(\"maxZoomLevel\", 32));\n        const zoomLevel = this.contents.get(\"scale\", 1);\n        let x = point.x;\n        let y = point.y;\n        let cx = x;\n        let cy = y;\n        const contents = this.contents;\n        let tx = contents.x();\n        let ty = contents.y();\n        let xx = cx - (x - tx) / zoomLevel * level;\n        let yy = cy - (y - ty) / zoomLevel * level;\n        this._animateTo(xx, yy, level);\n        return this._za;\n    }\n    /**\r\n     * Zooms the container contents in by `zoomStep`.\r\n     *\r\n     * @return Zoom Animation object\r\n     */ zoomIn() {\n        return this.zoomToPoint({\n            x: this.width() / 2,\n            y: this.height() / 2\n        }, this.contents.get(\"scale\", 1) * this.get(\"zoomStep\", 2));\n    }\n    /**\r\n     * Zooms the container contents out by `zoomStep`.\r\n     *\r\n     * @return Zoom Animation object\r\n     */ zoomOut() {\n        return this.zoomToPoint({\n            x: this.width() / 2,\n            y: this.height() / 2\n        }, this.contents.get(\"scale\", 1) / this.get(\"zoomStep\", 2));\n    }\n    /**\r\n     * Fully zooms out the container contents.\r\n     *\r\n     * @return Zoom Animation object\r\n     */ goHome() {\n        return this._animateTo(0, 0, 1);\n    }\n    _animateTo(x, y, scale) {\n        const duration = this.get(\"animationDuration\", 0);\n        const easing = this.get(\"animationEasing\");\n        const contents = this.contents;\n        this._txa = contents.animate({\n            key: \"x\",\n            to: x,\n            duration: duration,\n            easing: easing\n        });\n        this._tya = contents.animate({\n            key: \"y\",\n            to: y,\n            duration: duration,\n            easing: easing\n        });\n        this._za = contents.animate({\n            key: \"scale\",\n            to: scale,\n            duration: duration,\n            easing: easing\n        });\n    }\n    _handleThisUp(_event) {\n        this._downPoints = {};\n    }\n    _handleThisDown(event) {\n        const contents = this.contents;\n        this._downScale = contents.get(\"scale\", 1);\n        const downPoints = contents._downPoints;\n        let count = $e66f9343b5144e1a$export$ed97f33186d4b816(downPoints).length;\n        if (count == 1) {\n            // workaround to solve a problem when events are added to some children of chart container (rotation stops working)\n            let downPoint = downPoints[1];\n            if (!downPoint) downPoint = downPoints[0];\n            if (downPoint && downPoint.x == event.point.x && downPoint.y == event.point.y) count = 0;\n        }\n        if (count > 0) {\n            this._downX = contents.x();\n            this._downY = contents.y();\n            const downId = contents._getDownPointId();\n            if (downId) {\n                let movePoint = this._movePoints[downId];\n                if (movePoint) contents._downPoints[downId] = movePoint;\n            }\n        }\n    }\n    _handleThisMove(event) {\n        const originalEvent = event.originalEvent;\n        const pointerId = originalEvent.pointerId;\n        if (this.get(\"pinchZoom\")) {\n            if (pointerId) {\n                this._movePoints[pointerId] = event.point;\n                if ($e66f9343b5144e1a$export$ed97f33186d4b816(this.contents._downPoints).length > 1) {\n                    this._handlePinch();\n                    return;\n                }\n            }\n        }\n    }\n    _handlePinch() {\n        let i = 0;\n        let downPoints = [];\n        let movePoints = [];\n        $e66f9343b5144e1a$export$79b2f7037acddd43(this.contents._downPoints, (k, point)=>{\n            downPoints[i] = point;\n            let movePoint = this._movePoints[k];\n            if (movePoint) movePoints[i] = movePoint;\n            i++;\n        });\n        if (downPoints.length > 1 && movePoints.length > 1) {\n            this.contents._isDragging = false;\n            let downPoint0 = downPoints[0];\n            let downPoint1 = downPoints[1];\n            let movePoint0 = movePoints[0];\n            let movePoint1 = movePoints[1];\n            if (downPoint0 && downPoint1 && movePoint0 && movePoint1) {\n                downPoint0 = this.toLocal(downPoint0);\n                downPoint1 = this.toLocal(downPoint1);\n                movePoint0 = this.toLocal(movePoint0);\n                movePoint1 = this.toLocal(movePoint1);\n                let initialDistance = Math.hypot(downPoint1.x - downPoint0.x, downPoint1.y - downPoint0.y);\n                let currentDistance = Math.hypot(movePoint1.x - movePoint0.x, movePoint1.y - movePoint0.y);\n                let level = currentDistance / initialDistance * this._downScale;\n                let moveCenter = {\n                    x: movePoint0.x + (movePoint1.x - movePoint0.x) / 2,\n                    y: movePoint0.y + (movePoint1.y - movePoint0.y) / 2\n                };\n                let downCenter = {\n                    x: downPoint0.x + (downPoint1.x - downPoint0.x) / 2,\n                    y: downPoint0.y + (downPoint1.y - downPoint0.y) / 2\n                };\n                let tx = this._downX || 0;\n                let ty = this._downY || 0;\n                let zoomLevel = this._downScale;\n                let xx = moveCenter.x - (-tx + downCenter.x) / zoomLevel * level;\n                let yy = moveCenter.y - (-ty + downCenter.y) / zoomLevel * level;\n                this.contents.setAll({\n                    x: xx,\n                    y: yy,\n                    scale: level\n                });\n            }\n        }\n    }\n}\nObject.defineProperty($7b05e1e856aa7465$export$8a1414ab037091f9, \"className\", {\n    enumerable: true,\n    configurable: true,\n    writable: true,\n    value: \"ZoomableContainer\"\n});\nObject.defineProperty($7b05e1e856aa7465$export$8a1414ab037091f9, \"classNames\", {\n    enumerable: true,\n    configurable: true,\n    writable: true,\n    value: (0, $5de502da8a72d65e$export$42a852a2b6b56249).classNames.concat([\n        $7b05e1e856aa7465$export$8a1414ab037091f9.className\n    ])\n});\n\n\n\n\n\n\nclass $2f85a21744f68190$export$d55ab2e3dc5a4263 extends (0, $9e0cea1ea085e274$export$4617fb02663045ef) {\n    _beforeChanged() {\n        super._beforeChanged();\n        if (this.isDirty(\"cornerRadiusTL\") || this.isDirty(\"cornerRadiusTR\") || this.isDirty(\"cornerRadiusBR\") || this.isDirty(\"cornerRadiusBL\")) this._clear = true;\n    }\n    _draw() {\n        let width = this.width();\n        let height = this.height();\n        let w = width;\n        let h = height;\n        let wSign = w / Math.abs(width);\n        let hSign = h / Math.abs(height);\n        if ($f63bdea45a89cf24$export$7e4aa119212bc614(w) && $f63bdea45a89cf24$export$7e4aa119212bc614(h)) {\n            let minSide = Math.min(w, h) / 2;\n            let crtl = $05b1b40b69b15016$export$302dfacf2b0a56fe(this.get(\"cornerRadiusTL\", 8), minSide);\n            let crtr = $05b1b40b69b15016$export$302dfacf2b0a56fe(this.get(\"cornerRadiusTR\", 8), minSide);\n            let crbr = $05b1b40b69b15016$export$302dfacf2b0a56fe(this.get(\"cornerRadiusBR\", 8), minSide);\n            let crbl = $05b1b40b69b15016$export$302dfacf2b0a56fe(this.get(\"cornerRadiusBL\", 8), minSide);\n            let maxcr = Math.min(Math.abs(w / 2), Math.abs(h / 2));\n            crtl = $f43e9e04b3f0548b$export$386b748ab02f16a0(crtl, 0, maxcr);\n            crtr = $f43e9e04b3f0548b$export$386b748ab02f16a0(crtr, 0, maxcr);\n            crbr = $f43e9e04b3f0548b$export$386b748ab02f16a0(crbr, 0, maxcr);\n            crbl = $f43e9e04b3f0548b$export$386b748ab02f16a0(crbl, 0, maxcr);\n            const display = this._display;\n            display.moveTo(crtl * wSign, 0);\n            display.lineTo(w - crtr * wSign, 0);\n            if (crtr > 0) display.arcTo(w, 0, w, crtr * hSign, crtr);\n            display.lineTo(w, h - crbr * hSign);\n            if (crbr > 0) display.arcTo(w, h, w - crbr * wSign, h, crbr);\n            display.lineTo(crbl * wSign, h);\n            if (crbl > 0) display.arcTo(0, h, 0, h - crbl * hSign, crbl);\n            display.lineTo(0, crtl * hSign);\n            if (crtl > 0) display.arcTo(0, 0, crtl * wSign, 0, crtl);\n            display.closePath();\n        }\n    }\n}\nObject.defineProperty($2f85a21744f68190$export$d55ab2e3dc5a4263, \"className\", {\n    enumerable: true,\n    configurable: true,\n    writable: true,\n    value: \"RoundedRectangle\"\n});\nObject.defineProperty($2f85a21744f68190$export$d55ab2e3dc5a4263, \"classNames\", {\n    enumerable: true,\n    configurable: true,\n    writable: true,\n    value: (0, $9e0cea1ea085e274$export$4617fb02663045ef).classNames.concat([\n        $2f85a21744f68190$export$d55ab2e3dc5a4263.className\n    ])\n});\n\n\n\n\nclass $f8fc56a6232808fd$export$353f5b6fc5456de1 extends (0, $5de502da8a72d65e$export$42a852a2b6b56249) {\n    _afterNew() {\n        this._settings.themeTags = $05b1b40b69b15016$export$88ad500ef99d1561(this._settings.themeTags, [\n            \"button\"\n        ]);\n        super._afterNew();\n        if (!this._settings.background) this.set(\"background\", (0, $2f85a21744f68190$export$d55ab2e3dc5a4263).new(this._root, {\n            themeTags: $05b1b40b69b15016$export$88ad500ef99d1561(this._settings.themeTags, [\n                \"background\"\n            ])\n        }));\n        this.setPrivate(\"trustBounds\", true);\n    }\n    _prepareChildren() {\n        super._prepareChildren();\n        if (this.isDirty(\"icon\")) {\n            const previous = this._prevSettings.icon;\n            const icon = this.get(\"icon\");\n            if (icon !== previous) {\n                this._disposeProperty(\"icon\");\n                if (previous) previous.dispose();\n                if (icon) this.children.push(icon);\n                this._prevSettings.icon = icon;\n            }\n        }\n        if (this.isDirty(\"label\")) {\n            const previous = this._prevSettings.label;\n            const label = this.get(\"label\");\n            if (label !== previous) {\n                this._disposeProperty(\"label\");\n                if (previous) previous.dispose();\n                if (label) this.children.push(label);\n                this._prevSettings.label = label;\n            }\n        }\n    }\n}\nObject.defineProperty($f8fc56a6232808fd$export$353f5b6fc5456de1, \"className\", {\n    enumerable: true,\n    configurable: true,\n    writable: true,\n    value: \"Button\"\n});\nObject.defineProperty($f8fc56a6232808fd$export$353f5b6fc5456de1, \"classNames\", {\n    enumerable: true,\n    configurable: true,\n    writable: true,\n    value: (0, $5de502da8a72d65e$export$42a852a2b6b56249).classNames.concat([\n        $f8fc56a6232808fd$export$353f5b6fc5456de1.className\n    ])\n});\n\n\n\n\n\nclass $910a40cf2e953cca$export$ba5a51be6dbb03bd extends (0, $5de502da8a72d65e$export$42a852a2b6b56249) {\n    constructor(){\n        super(...arguments);\n        /**\r\n         * A [[Button]] for home.\r\n         */ Object.defineProperty(this, \"homeButton\", {\n            enumerable: true,\n            configurable: true,\n            writable: true,\n            value: this.children.push((0, $f8fc56a6232808fd$export$353f5b6fc5456de1).new(this._root, {\n                width: 35,\n                height: 35,\n                themeTags: [\n                    \"home\"\n                ]\n            }))\n        });\n        /**\r\n         * A [[Button]] for zoom in.\r\n         */ Object.defineProperty(this, \"plusButton\", {\n            enumerable: true,\n            configurable: true,\n            writable: true,\n            value: this.children.push((0, $f8fc56a6232808fd$export$353f5b6fc5456de1).new(this._root, {\n                width: 35,\n                height: 35,\n                themeTags: [\n                    \"plus\"\n                ]\n            }))\n        });\n        /**\r\n         * A [[Button]] for zoom out.\r\n         */ Object.defineProperty(this, \"minusButton\", {\n            enumerable: true,\n            configurable: true,\n            writable: true,\n            value: this.children.push((0, $f8fc56a6232808fd$export$353f5b6fc5456de1).new(this._root, {\n                width: 35,\n                height: 35,\n                themeTags: [\n                    \"minus\"\n                ]\n            }))\n        });\n        Object.defineProperty(this, \"_disposer\", {\n            enumerable: true,\n            configurable: true,\n            writable: true,\n            value: void 0\n        });\n        Object.defineProperty(this, \"_targetDisposer\", {\n            enumerable: true,\n            configurable: true,\n            writable: true,\n            value: void 0\n        });\n    }\n    _afterNew() {\n        super._afterNew();\n        this.set(\"position\", \"absolute\");\n        this.set(\"layout\", this._root.verticalLayout);\n        this.addTag(\"zoomtools\");\n        this.plusButton.setAll({\n            icon: (0, $2ffdafbe1fe6a946$export$29d3e417456abdad).new(this._root, {\n                themeTags: [\n                    \"icon\"\n                ]\n            }),\n            layout: undefined\n        });\n        this.minusButton.setAll({\n            icon: (0, $2ffdafbe1fe6a946$export$29d3e417456abdad).new(this._root, {\n                themeTags: [\n                    \"icon\"\n                ]\n            }),\n            layout: undefined\n        });\n        this.homeButton.setAll({\n            icon: (0, $2ffdafbe1fe6a946$export$29d3e417456abdad).new(this._root, {\n                themeTags: [\n                    \"icon\"\n                ]\n            }),\n            layout: undefined\n        });\n    }\n    _prepareChildren() {\n        super._prepareChildren();\n        if (this.isDirty(\"target\")) {\n            const target = this.get(\"target\");\n            const previous = this._prevSettings.target;\n            if (target) {\n                if (target instanceof (0, $7b05e1e856aa7465$export$8a1414ab037091f9)) {\n                    this._targetDisposer = this.addDisposer(target.contents.on(\"scale\", (scale)=>{\n                        if (scale == target.get(\"minZoomLevel\")) this.minusButton.set(\"disabled\", true);\n                        else this.minusButton.set(\"disabled\", false);\n                        if (scale == target.get(\"maxZoomLevel\")) this.plusButton.set(\"disabled\", true);\n                        else this.plusButton.set(\"disabled\", false);\n                    }));\n                    this.root.events.once(\"frameended\", ()=>{\n                        if (target.get(\"scale\") == target.get(\"minZoomLevel\")) this.minusButton.set(\"disabled\", true);\n                    });\n                }\n                this._disposer = new (0, $a363f66303166aa1$export$9720df365053d143)([\n                    this.plusButton.events.on(\"click\", ()=>{\n                        target.zoomIn();\n                    }),\n                    this.minusButton.events.on(\"click\", ()=>{\n                        target.zoomOut();\n                    }),\n                    this.homeButton.events.on(\"click\", ()=>{\n                        target.goHome();\n                    })\n                ]);\n            }\n            if (previous) {\n                if (this._disposer) this._disposer.dispose();\n                if (this._targetDisposer) this._targetDisposer.dispose();\n            }\n        }\n    }\n}\nObject.defineProperty($910a40cf2e953cca$export$ba5a51be6dbb03bd, \"className\", {\n    enumerable: true,\n    configurable: true,\n    writable: true,\n    value: \"ZoomTools\"\n});\nObject.defineProperty($910a40cf2e953cca$export$ba5a51be6dbb03bd, \"classNames\", {\n    enumerable: true,\n    configurable: true,\n    writable: true,\n    value: (0, $5de502da8a72d65e$export$42a852a2b6b56249).classNames.concat([\n        $910a40cf2e953cca$export$ba5a51be6dbb03bd.className\n    ])\n});\n\n\n\n\n\n\n\nclass $02b848ff4571bf92$export$8bc2de8f21739450 extends (0, $baeade534ece7f4c$export$bc644a473284d944) {\n    //protected _currentPass: number = 0;\n    _afterNew() {\n        // Applying themes because color set will not have parent\n        super._afterNewApplyThemes();\n        this._dirty[\"colors\"] = false;\n    }\n    _beforeChanged() {\n        if (this.isDirty(\"colors\")) this.reset();\n    }\n    /**\r\n     * @ignore\r\n     */ generateColors() {\n        this.setPrivate(\"currentPass\", this.getPrivate(\"currentPass\", 0) + 1);\n        const pass = this.getPrivate(\"currentPass\");\n        const colors = this.get(\"colors\", [\n            this.get(\"baseColor\", (0, $389de129b6cd18b1$export$892596cec99bc70e).fromHex(0xff0000))\n        ]);\n        if (!this.getPrivate(\"numColors\")) this.setPrivate(\"numColors\", colors.length);\n        //const len = colors.length;\n        const len = this.getPrivate(\"numColors\");\n        //const start = len - this.getPrivate(\"numColors\")!;\n        const start = 0;\n        const passOptions = this.get(\"passOptions\");\n        const reuse = this.get(\"reuse\");\n        for(let i = start; i < len; i++)if (reuse) colors.push(colors[i]);\n        else {\n            const hsl = colors[i].toHSL();\n            let h = hsl.h + (passOptions.hue || 0) * pass;\n            while(h > 1)h -= 1;\n            let s = hsl.s + (passOptions.saturation || 0) * pass;\n            //if (s > 1) s -= Math.floor(s);\n            if (s > 1) s = 1;\n            if (s < 0) s = 0;\n            let l = hsl.l + (passOptions.lightness || 0) * pass;\n            //if (l > 1) l -= Math.floor(l);\n            while(l > 1)l -= 1;\n            colors.push((0, $389de129b6cd18b1$export$892596cec99bc70e).fromHSL(h, s, l));\n        }\n    }\n    /**\r\n     * Returns a [[Color]] at specific index.\r\n     *\r\n     * If there's no color at this index, a new color is generated.\r\n     *\r\n     * @param   index  Index\r\n     * @return         Color\r\n     */ getIndex(index) {\n        const colors = this.get(\"colors\", []);\n        const saturation = this.get(\"saturation\");\n        if (index >= colors.length) {\n            this.generateColors();\n            return this.getIndex(index);\n        }\n        return saturation != null ? (0, $389de129b6cd18b1$export$892596cec99bc70e).saturate(colors[index], saturation) : colors[index];\n    }\n    /**\r\n     * Returns next [[Color]] in the list.\r\n     *\r\n     * If the list is out of colors, new ones are generated dynamically.\r\n     */ next() {\n        let currentStep = this.getPrivate(\"currentStep\", this.get(\"startIndex\", 0));\n        this.setPrivate(\"currentStep\", currentStep + this.get(\"step\", 1));\n        return this.getIndex(currentStep);\n    }\n    /**\r\n     * Resets counter to the start of the list, so the next call for `next()` will\r\n     * return the first color.\r\n     */ reset() {\n        this.setPrivate(\"currentStep\", this.get(\"startIndex\", 0));\n        this.setPrivate(\"currentPass\", 0);\n    }\n}\nObject.defineProperty($02b848ff4571bf92$export$8bc2de8f21739450, \"className\", {\n    enumerable: true,\n    configurable: true,\n    writable: true,\n    value: \"ColorSet\"\n});\nObject.defineProperty($02b848ff4571bf92$export$8bc2de8f21739450, \"classNames\", {\n    enumerable: true,\n    configurable: true,\n    writable: true,\n    value: (0, $baeade534ece7f4c$export$bc644a473284d944).classNames.concat([\n        $02b848ff4571bf92$export$8bc2de8f21739450.className\n    ])\n});\n\n\n\n\nclass $6fd14349e0991ae8$export$40a77f3497d65048 extends (0, $a953e95d35d4141a$export$14faa19a0f3bbeb2) {\n    setupDefaultRules() {\n        super.setupDefaultRules();\n        const ic = this._root.interfaceColors;\n        const gridLayout = this._root.gridLayout;\n        const r = this.rule.bind(this);\n        /**\r\n         * ========================================================================\r\n         * charts/hierarchy\r\n         * ========================================================================\r\n         */ r(\"Hierarchy\").setAll({\n            legendLabelText: \"{category}\",\n            legendValueText: \"{sum.formatNumber('#.#')}\",\n            width: (0, $bd0d0c10fd30006b$export$46342ea78d85883c),\n            height: (0, $bd0d0c10fd30006b$export$46342ea78d85883c),\n            colors: (0, $02b848ff4571bf92$export$8bc2de8f21739450).new(this._root, {\n                step: 2\n            }),\n            downDepth: 1,\n            initialDepth: 5,\n            singleBranchOnly: true,\n            maskContent: true,\n            animationEasing: $b4231ef84a5f8a61$export$ca49d7cd8ea40ba7($b4231ef84a5f8a61$export$bdd5293f3cf7a909)\n        });\n        r(\"HierarchyNode\").setAll({\n            toggleKey: \"disabled\",\n            setStateOnChildren: true,\n            position: \"absolute\",\n            isMeasured: false,\n            cursorOverStyle: \"pointer\",\n            tooltipText: \"{category}: {sum}\"\n        });\n        r(\"HierarchyNode\", [\n            \"last\"\n        ]).setAll({\n            cursorOverStyle: \"default\"\n        });\n        {\n            const rule = r(\"Label\", [\n                \"hierarchy\",\n                \"node\"\n            ]);\n            rule.setAll({\n                centerX: (0, $bd0d0c10fd30006b$export$888d047b0ce6de72),\n                centerY: (0, $bd0d0c10fd30006b$export$888d047b0ce6de72),\n                position: \"absolute\",\n                paddingBottom: 1,\n                paddingTop: 1,\n                paddingRight: 4,\n                paddingLeft: 4,\n                text: \"{category}\",\n                populateText: true,\n                oversizedBehavior: \"fit\",\n                minScale: 0.3\n            });\n            (0, $c53b0c859cf33b39$export$130a5dc1bc9cd8e1)(rule, \"fill\", ic, \"alternativeText\");\n        }\n        {\n            const rule = r(\"HierarchyLink\");\n            rule.setAll({\n                isMeasured: false,\n                position: \"absolute\",\n                strokeWidth: 1,\n                strokeOpacity: 1,\n                strength: 0.9,\n                distance: 1.1\n            });\n            (0, $c53b0c859cf33b39$export$130a5dc1bc9cd8e1)(rule, \"stroke\", ic, \"grid\");\n        }\n        r(\"Circle\", [\n            \"linkedhierarchy\",\n            \"shape\"\n        ]).setAll({\n            position: \"absolute\",\n            fillOpacity: 1,\n            strokeOpacity: 0,\n            radius: 15,\n            tooltipY: 0\n        });\n        r(\"Circle\", [\n            \"linkedhierarchy\",\n            \"shape\",\n            \"outer\"\n        ]).setAll({\n            position: \"absolute\",\n            opacity: 1,\n            fillOpacity: 0,\n            strokeDasharray: 0,\n            strokeOpacity: 1,\n            radius: 15,\n            scale: 1.1,\n            interactive: false\n        });\n        r(\"Circle\", [\n            \"linkedhierarchy\",\n            \"shape\",\n            \"outer\"\n        ]).states.create(\"disabled\", {\n            opacity: 1,\n            scale: 1.1,\n            strokeDasharray: 2\n        });\n        r(\"Circle\", [\n            \"linkedhierarchy\",\n            \"shape\",\n            \"outer\"\n        ]).states.create(\"hoverDisabled\", {\n            scale: 1.2,\n            opacity: 1,\n            strokeDasharray: 2\n        });\n        r(\"Circle\", [\n            \"linkedhierarchy\",\n            \"shape\",\n            \"outer\"\n        ]).states.create(\"hover\", {\n            scale: 1.05,\n            strokeDasharray: 0\n        });\n        r(\"Circle\", [\n            \"linkedhierarchy\",\n            \"shape\",\n            \"outer\"\n        ]).states.create(\"hidden\", {\n            opacity: 0,\n            strokeDasharray: 0\n        });\n        /**\r\n         * ------------------------------------------------------------------------\r\n         * charts/hierarchy: BreadcrumbBar\r\n         * ------------------------------------------------------------------------\r\n         */ r(\"BreadcrumbBar\").setAll({\n            paddingLeft: 8,\n            layout: gridLayout\n        });\n        {\n            const rule = r(\"Label\", [\n                \"breadcrumb\"\n            ]);\n            rule.setAll({\n                paddingRight: 4,\n                paddingLeft: 4,\n                cursorOverStyle: \"pointer\",\n                populateText: true,\n                text: \"{category}:\"\n            });\n            (0, $c53b0c859cf33b39$export$130a5dc1bc9cd8e1)(rule, \"fill\", ic, \"primaryButton\");\n        }\n        {\n            const rule = r(\"Label\", [\n                \"breadcrumb\"\n            ]).states.create(\"hover\", {});\n            (0, $c53b0c859cf33b39$export$130a5dc1bc9cd8e1)(rule, \"fill\", ic, \"primaryButtonHover\");\n        }\n        {\n            const rule = r(\"Label\", [\n                \"breadcrumb\"\n            ]).states.create(\"down\", {\n                stateAnimationDuration: 0\n            });\n            (0, $c53b0c859cf33b39$export$130a5dc1bc9cd8e1)(rule, \"fill\", ic, \"primaryButtonDown\");\n        }\n        {\n            const rule = r(\"Label\", [\n                \"breadcrumb\",\n                \"last\"\n            ]);\n            rule.setAll({\n                populateText: true,\n                text: \"{category}\",\n                fontWeight: \"bold\",\n                cursorOverStyle: \"default\"\n            });\n            (0, $c53b0c859cf33b39$export$130a5dc1bc9cd8e1)(rule, \"fill\", ic, \"primaryButton\");\n        }\n        {\n            const rule = r(\"RoundedRectangle\", [\n                \"breadcrumb\",\n                \"label\",\n                \"background\"\n            ]);\n            rule.setAll({\n                fillOpacity: 0\n            });\n            (0, $c53b0c859cf33b39$export$130a5dc1bc9cd8e1)(rule, \"fill\", ic, \"background\");\n        }\n        /**\r\n         * ------------------------------------------------------------------------\r\n         * charts/hierarchy: Partition\r\n         * ------------------------------------------------------------------------\r\n         */ r(\"Partition\").setAll({\n            downDepth: 1,\n            upDepth: 0,\n            initialDepth: 5\n        });\n        r(\"HierarchyNode\", [\n            \"partition\"\n        ]).setAll({\n            setStateOnChildren: false\n        });\n        r(\"HierarchyNode\", [\n            \"partition\"\n        ]).states.create(\"hidden\", {\n            opacity: 1,\n            visible: true\n        });\n        {\n            const rule = r(\"Label\", [\n                \"partition\",\n                \"node\"\n            ]);\n            rule.setAll({\n                x: (0, $bd0d0c10fd30006b$export$888d047b0ce6de72),\n                y: (0, $bd0d0c10fd30006b$export$888d047b0ce6de72),\n                centerY: (0, $bd0d0c10fd30006b$export$888d047b0ce6de72),\n                centerX: (0, $bd0d0c10fd30006b$export$888d047b0ce6de72),\n                paddingBottom: 1,\n                paddingTop: 1,\n                paddingLeft: 1,\n                paddingRight: 1,\n                rotation: 90,\n                populateText: true,\n                text: \"{category}\",\n                oversizedBehavior: \"fit\",\n                minScale: 0.4\n            });\n            (0, $c53b0c859cf33b39$export$130a5dc1bc9cd8e1)(rule, \"fill\", ic, \"alternativeText\");\n        }\n        r(\"Label\", [\n            \"horizontal\",\n            \"partition\",\n            \"node\"\n        ]).setAll({\n            rotation: 0\n        });\n        {\n            const rule = r(\"RoundedRectangle\", [\n                \"partition\",\n                \"node\",\n                \"shape\"\n            ]);\n            rule.setAll({\n                strokeOpacity: 1,\n                strokeWidth: 1,\n                cornerRadiusBR: 0,\n                cornerRadiusTR: 0,\n                cornerRadiusBL: 0,\n                cornerRadiusTL: 0\n            });\n            (0, $c53b0c859cf33b39$export$130a5dc1bc9cd8e1)(rule, \"stroke\", ic, \"background\");\n        }\n        r(\"RoundedRectangle\", [\n            \"partition\",\n            \"node\",\n            \"shape\",\n            \"last\"\n        ]).setAll({\n            fillOpacity: 0.75\n        });\n        /**\r\n         * ------------------------------------------------------------------------\r\n         * charts/hierarchy: Sunburst\r\n         * ------------------------------------------------------------------------\r\n         */ r(\"Sunburst\").setAll({\n            singleBranchOnly: true\n        });\n        r(\"HierarchyNode\", [\n            \"sunburst\"\n        ]).setAll({\n            setStateOnChildren: false\n        });\n        r(\"HierarchyNode\", [\n            \"sunburst\"\n        ]).states.create(\"hidden\", {\n            opacity: 0,\n            visible: false\n        });\n        {\n            const rule = r(\"Slice\", [\n                \"sunburst\",\n                \"node\",\n                \"shape\"\n            ]);\n            rule.setAll({\n                strokeOpacity: 1,\n                strokeWidth: 1,\n                cornerRadius: 0\n            });\n            (0, $c53b0c859cf33b39$export$130a5dc1bc9cd8e1)(rule, \"stroke\", ic, \"background\");\n        }\n        r(\"Slice\", [\n            \"sunburst\",\n            \"node\",\n            \"shape\",\n            \"last\"\n        ]).setAll({\n            fillOpacity: 0.75\n        });\n        {\n            const rule = r(\"RadialLabel\", [\n                \"sunburst\",\n                \"node\"\n            ]);\n            rule.setAll({\n                x: 0,\n                y: 0,\n                textType: \"radial\",\n                paddingBottom: 1,\n                paddingTop: 1,\n                paddingLeft: 1,\n                paddingRight: 1,\n                centerX: (0, $bd0d0c10fd30006b$export$888d047b0ce6de72),\n                populateText: true,\n                text: \"{category}\",\n                oversizedBehavior: \"fit\",\n                minScale: 0.4,\n                baseRadius: (0, $bd0d0c10fd30006b$export$888d047b0ce6de72),\n                rotation: 0\n            });\n            (0, $c53b0c859cf33b39$export$130a5dc1bc9cd8e1)(rule, \"fill\", ic, \"alternativeText\");\n        }\n        /**\r\n         * ------------------------------------------------------------------------\r\n         * charts/hierarchy: ForceDirected\r\n         * ------------------------------------------------------------------------\r\n         */ r(\"ForceDirected\").setAll({\n            minRadius: (0, $bd0d0c10fd30006b$export$626336c2cd4b14de)(1),\n            maxRadius: (0, $bd0d0c10fd30006b$export$626336c2cd4b14de)(8),\n            initialFrames: 500,\n            centerStrength: 0.8,\n            manyBodyStrength: -14,\n            velocityDecay: 0.5,\n            linkWithStrength: 0.5,\n            showOnFrame: 10,\n            singleBranchOnly: false,\n            upDepth: Infinity,\n            downDepth: 1,\n            initialDepth: 5,\n            topDepth: 0\n        });\n        /**\r\n         * ------------------------------------------------------------------------\r\n         * charts/hierarchy: Tree\r\n         * ------------------------------------------------------------------------\r\n         */ r(\"Tree\").setAll({\n            orientation: \"vertical\",\n            paddingLeft: 20,\n            paddingRight: 20,\n            paddingTop: 20,\n            paddingBottom: 20,\n            singleBranchOnly: false,\n            upDepth: Infinity,\n            downDepth: 1,\n            initialDepth: 5,\n            topDepth: 0\n        });\n        /**\r\n         * ------------------------------------------------------------------------\r\n         * charts/hierarchy: Pack\r\n         * ------------------------------------------------------------------------\r\n         */ r(\"Pack\").setAll({\n            paddingLeft: 20,\n            paddingTop: 20,\n            paddingBottom: 20,\n            paddingRight: 20,\n            nodePadding: 0\n        });\n        {\n            const rule = r(\"Label\", [\n                \"pack\",\n                \"node\"\n            ]);\n            rule.setAll({\n                centerY: (0, $bd0d0c10fd30006b$export$888d047b0ce6de72),\n                centerX: (0, $bd0d0c10fd30006b$export$888d047b0ce6de72),\n                paddingBottom: 1,\n                paddingTop: 1,\n                paddingLeft: 1,\n                paddingRight: 1,\n                populateText: true,\n                text: \"{category}\",\n                oversizedBehavior: \"fit\",\n                minScale: 0.4\n            });\n            (0, $c53b0c859cf33b39$export$130a5dc1bc9cd8e1)(rule, \"fill\", ic, \"alternativeText\");\n        }\n        {\n            const rule = r(\"Circle\", [\n                \"pack\",\n                \"node\",\n                \"shape\"\n            ]);\n            rule.setAll({\n                strokeOpacity: 0.5,\n                fillOpacity: 0.8,\n                strokeWidth: 1\n            });\n            (0, $c53b0c859cf33b39$export$130a5dc1bc9cd8e1)(rule, \"stroke\", ic, \"background\");\n        }\n        r(\"LinkedHierarchyNode\").setAll({\n            draggable: true\n        });\n        r(\"LinkedHierarchyNode\").states.create(\"hidden\", {\n            scale: 0,\n            opacity: 0,\n            visible: false\n        });\n        /**\r\n         * ------------------------------------------------------------------------\r\n         * charts/hierarchy: Treemap\r\n         * ------------------------------------------------------------------------\r\n         */ r(\"Treemap\").setAll({\n            upDepth: 0,\n            layoutAlgorithm: \"squarify\"\n        });\n        {\n            const rule = r(\"Label\", [\n                \"treemap\",\n                \"node\"\n            ]);\n            rule.setAll({\n                x: (0, $bd0d0c10fd30006b$export$888d047b0ce6de72),\n                y: (0, $bd0d0c10fd30006b$export$888d047b0ce6de72),\n                centerY: (0, $bd0d0c10fd30006b$export$888d047b0ce6de72),\n                centerX: (0, $bd0d0c10fd30006b$export$888d047b0ce6de72),\n                paddingBottom: 1,\n                paddingTop: 1,\n                paddingLeft: 1,\n                paddingRight: 1,\n                populateText: true,\n                text: \"{category}\",\n                oversizedBehavior: \"fit\",\n                minScale: 0.4\n            });\n            (0, $c53b0c859cf33b39$export$130a5dc1bc9cd8e1)(rule, \"fill\", ic, \"alternativeText\");\n        }\n        r(\"HierarchyNode\", [\n            \"treemap\",\n            \"node\"\n        ]).setAll({\n            tooltipY: (0, $bd0d0c10fd30006b$export$626336c2cd4b14de)(40),\n            isMeasured: false,\n            position: \"absolute\"\n        });\n        {\n            const rule = r(\"RoundedRectangle\", [\n                \"treemap\",\n                \"node\",\n                \"shape\"\n            ]);\n            rule.setAll({\n                strokeOpacity: 1,\n                strokeWidth: 1,\n                cornerRadiusBR: 0,\n                cornerRadiusTR: 0,\n                cornerRadiusBL: 0,\n                cornerRadiusTL: 0,\n                fillOpacity: 1\n            });\n            (0, $c53b0c859cf33b39$export$130a5dc1bc9cd8e1)(rule, \"stroke\", ic, \"background\");\n        }\n        r(\"VoronoiTreemap\").setAll({\n            type: \"polygon\",\n            minWeightRatio: 0.005,\n            convergenceRatio: 0.005,\n            maxIterationCount: 100,\n            singleBranchOnly: true\n        });\n        {\n            const rule = r(\"Graphics\", [\n                \"voronoitreemap\",\n                \"node\",\n                \"shape\"\n            ]);\n            rule.setAll({\n                strokeOpacity: 1,\n                strokeWidth: 1,\n                fillOpacity: 1\n            });\n            (0, $c53b0c859cf33b39$export$130a5dc1bc9cd8e1)(rule, \"stroke\", ic, \"background\");\n        }\n        r(\"Polygon\", [\n            \"hierarchy\",\n            \"node\",\n            \"shape\",\n            \"depth1\"\n        ]).setAll({\n            strokeWidth: 3\n        });\n        {\n            const rule = r(\"Label\", [\n                \"voronoitreemap\"\n            ]);\n            rule.setAll({\n                centerY: (0, $bd0d0c10fd30006b$export$888d047b0ce6de72),\n                centerX: (0, $bd0d0c10fd30006b$export$888d047b0ce6de72),\n                paddingBottom: 1,\n                paddingTop: 1,\n                paddingLeft: 1,\n                paddingRight: 1,\n                populateText: true,\n                text: \"{category}\",\n                oversizedBehavior: \"fit\",\n                minScale: 0.4,\n                layer: 30\n            });\n            (0, $c53b0c859cf33b39$export$130a5dc1bc9cd8e1)(rule, \"fill\", ic, \"alternativeText\");\n        }\n    }\n}\n\n\n\n\n\n\n\nclass $90e96dbd0e98a250$export$c241a244b7e1601c extends (0, $ddd3cfc9bee47cd2$export$54c2e3dc7acea9f5) {\n    constructor(){\n        super(...arguments);\n        /**\r\n         * An optional processor for data.\r\n         *\r\n         * @see {@link https://www.amcharts.com/docs/v5/concepts/data/#Pre_processing_data} for more info\r\n         */ Object.defineProperty(this, \"processor\", {\n            enumerable: true,\n            configurable: true,\n            writable: true,\n            value: void 0\n        });\n    }\n    /**\r\n     * @ignore\r\n     */ incrementRef() {}\n    /**\r\n     * @ignore\r\n     */ decrementRef() {}\n    _onPush(newValue) {\n        if (this.processor) this.processor.processRow(newValue);\n        super._onPush(newValue);\n    }\n    _onInsertIndex(index, newValue) {\n        if (this.processor) this.processor.processRow(newValue);\n        super._onInsertIndex(index, newValue);\n    }\n    _onSetIndex(index, oldValue, newValue) {\n        if (this.processor) this.processor.processRow(newValue);\n        super._onSetIndex(index, oldValue, newValue);\n    }\n}\nclass $90e96dbd0e98a250$export$aeba00a98acce503 {\n    constructor(value){\n        Object.defineProperty(this, \"processor\", {\n            enumerable: true,\n            configurable: true,\n            writable: true,\n            value: void 0\n        });\n        Object.defineProperty(this, \"_value\", {\n            enumerable: true,\n            configurable: true,\n            writable: true,\n            value: void 0\n        });\n        this._value = value;\n    }\n    incrementRef() {}\n    decrementRef() {}\n}\n\n\n\n\nclass $255dd6cbbf32a3ff$export$e9ab04247990d50b extends (0, $baeade534ece7f4c$export$c72f6eaae7b9adff) {\n    constructor(component, dataContext, settings){\n        super(settings);\n        /**\r\n         * A data item's owener [[Component]].\r\n         */ Object.defineProperty(this, \"component\", {\n            enumerable: true,\n            configurable: true,\n            writable: true,\n            value: void 0\n        });\n        /**\r\n         * A reference to actual item in source data this item is based on.\r\n         */ Object.defineProperty(this, \"dataContext\", {\n            enumerable: true,\n            configurable: true,\n            writable: true,\n            value: void 0\n        });\n        /**\r\n         * @todo requires description\r\n         */ Object.defineProperty(this, \"bullets\", {\n            enumerable: true,\n            configurable: true,\n            writable: true,\n            value: void 0\n        });\n        /**\r\n         * A set of \"open\" values.\r\n         */ Object.defineProperty(this, \"open\", {\n            enumerable: true,\n            configurable: true,\n            writable: true,\n            value: void 0\n        });\n        /**\r\n         * A set of \"close\" values.\r\n         */ Object.defineProperty(this, \"close\", {\n            enumerable: true,\n            configurable: true,\n            writable: true,\n            value: void 0\n        });\n        this.dataContext = dataContext;\n        this.component = component;\n        this._settings.visible = true;\n        this._checkDirty();\n    }\n    /**\r\n     * @ignore\r\n     */ markDirty() {\n        this.component.markDirtyValues(this);\n    }\n    _startAnimation() {\n        this.component._root._addAnimation(this);\n    }\n    _animationTime() {\n        return this.component._root.animationTime;\n    }\n    _dispose() {\n        if (this.component) this.component.disposeDataItem(this);\n        super._dispose();\n    }\n    /**\r\n     * Shows a data item that's currently hidden.\r\n     */ show(duration) {\n        this.setRaw(\"visible\", true);\n        if (this.component) this.component.showDataItem(this, duration);\n    }\n    /**\r\n     * Hides a data item that's currently visible.\r\n     */ hide(duration) {\n        this.setRaw(\"visible\", false);\n        if (this.component) this.component.hideDataItem(this, duration);\n    }\n    isHidden() {\n        return !this.get(\"visible\");\n    }\n}\nclass $255dd6cbbf32a3ff$export$16fa2f45be04daa8 extends (0, $5de502da8a72d65e$export$42a852a2b6b56249) {\n    constructor(){\n        super(...arguments);\n        Object.defineProperty(this, \"_data\", {\n            enumerable: true,\n            configurable: true,\n            writable: true,\n            value: new (0, $90e96dbd0e98a250$export$c241a244b7e1601c)()\n        });\n        Object.defineProperty(this, \"_dataItems\", {\n            enumerable: true,\n            configurable: true,\n            writable: true,\n            value: []\n        });\n        Object.defineProperty(this, \"_mainDataItems\", {\n            enumerable: true,\n            configurable: true,\n            writable: true,\n            value: this._dataItems\n        });\n        Object.defineProperty(this, \"valueFields\", {\n            enumerable: true,\n            configurable: true,\n            writable: true,\n            value: []\n        });\n        Object.defineProperty(this, \"fields\", {\n            enumerable: true,\n            configurable: true,\n            writable: true,\n            value: [\n                \"id\"\n            ]\n        });\n        Object.defineProperty(this, \"_valueFields\", {\n            enumerable: true,\n            configurable: true,\n            writable: true,\n            value: void 0\n        });\n        Object.defineProperty(this, \"_valueFieldsF\", {\n            enumerable: true,\n            configurable: true,\n            writable: true,\n            value: void 0\n        });\n        Object.defineProperty(this, \"_fields\", {\n            enumerable: true,\n            configurable: true,\n            writable: true,\n            value: void 0\n        });\n        Object.defineProperty(this, \"_fieldsF\", {\n            enumerable: true,\n            configurable: true,\n            writable: true,\n            value: void 0\n        });\n        Object.defineProperty(this, \"_valuesDirty\", {\n            enumerable: true,\n            configurable: true,\n            writable: true,\n            value: false\n        });\n        Object.defineProperty(this, \"_dataChanged\", {\n            enumerable: true,\n            configurable: true,\n            writable: true,\n            value: false\n        });\n        Object.defineProperty(this, \"_dataGrouped\", {\n            enumerable: true,\n            configurable: true,\n            writable: true,\n            value: false\n        });\n        /**\r\n         * Indicates if the component has already been initialized.\r\n         */ Object.defineProperty(this, \"inited\", {\n            enumerable: true,\n            configurable: true,\n            writable: true,\n            value: false\n        });\n    }\n    /**\r\n     * Component's data.\r\n     *\r\n     * @see {@link https://www.amcharts.com/docs/v5/concepts/data/} for more info\r\n     */ set data(data) {\n        data.incrementRef();\n        this._data.decrementRef();\n        this._data = data;\n    }\n    /**\r\n     * @return  Data\r\n     */ get data() {\n        return this._data;\n    }\n    _dispose() {\n        super._dispose();\n        this._data.decrementRef();\n    }\n    _onDataClear() {}\n    _afterNew() {\n        super._afterNew();\n        this._data.incrementRef();\n        this._updateFields();\n        this._disposers.push(this.data.events.onAll((change)=>{\n            const dataItems = this._mainDataItems;\n            this.markDirtyValues();\n            this._markDirtyGroup();\n            this._dataChanged = true;\n            if (change.type === \"clear\") {\n                $2f30431acd054e2f$export$79b2f7037acddd43(dataItems, (dataItem)=>{\n                    dataItem.dispose();\n                });\n                dataItems.length = 0;\n                this._onDataClear();\n            } else if (change.type === \"push\") {\n                const dataItem = new $255dd6cbbf32a3ff$export$e9ab04247990d50b(this, change.newValue, this._makeDataItem(change.newValue));\n                dataItems.push(dataItem);\n                this.processDataItem(dataItem);\n            } else if (change.type === \"setIndex\") {\n                const dataItem = dataItems[change.index];\n                const properties = this._makeDataItem(change.newValue);\n                if (dataItem.bullets && dataItem.bullets.length == 0) dataItem.bullets = undefined;\n                $e66f9343b5144e1a$export$ed97f33186d4b816(properties).forEach((key)=>{\n                    dataItem.animate({\n                        key: key,\n                        to: properties[key],\n                        duration: this.get(\"interpolationDuration\", 0),\n                        easing: this.get(\"interpolationEasing\")\n                    });\n                });\n                dataItem.dataContext = change.newValue;\n            } else if (change.type === \"insertIndex\") {\n                const dataItem = new $255dd6cbbf32a3ff$export$e9ab04247990d50b(this, change.newValue, this._makeDataItem(change.newValue));\n                dataItems.splice(change.index, 0, dataItem);\n                this.processDataItem(dataItem);\n            } else if (change.type === \"removeIndex\") {\n                const dataItem = dataItems[change.index];\n                dataItem.dispose();\n                dataItems.splice(change.index, 1);\n            } else if (change.type === \"moveIndex\") {\n                const dataItem = dataItems[change.oldIndex];\n                dataItems.splice(change.oldIndex, 1);\n                dataItems.splice(change.newIndex, 0, dataItem);\n            } else throw new Error(\"Unknown IStreamEvent type\");\n            this._afterDataChange();\n        }));\n    }\n    _updateFields() {\n        if (this.valueFields) {\n            this._valueFields = [];\n            this._valueFieldsF = {};\n            $2f30431acd054e2f$export$79b2f7037acddd43(this.valueFields, (key)=>{\n                const field = this.get(key + \"Field\");\n                if (field) {\n                    this._valueFields.push(key);\n                    this._valueFieldsF[key] = {\n                        fieldKey: key + \"Field\",\n                        workingKey: key + \"Working\"\n                    };\n                }\n            });\n        }\n        if (this.fields) {\n            this._fields = [];\n            this._fieldsF = {};\n            $2f30431acd054e2f$export$79b2f7037acddd43(this.fields, (key)=>{\n                const field = this.get(key + \"Field\");\n                if (field) {\n                    this._fields.push(key);\n                    this._fieldsF[key] = key + \"Field\";\n                }\n            });\n        }\n    }\n    /**\r\n     * A list of component's data items.\r\n     *\r\n     * @return  Data items\r\n     */ get dataItems() {\n        return this._dataItems;\n    }\n    processDataItem(_dataItem) {}\n    _makeDataItem(data) {\n        //const output: this[\"_dataItemSettings\"] = {};\n        const output = {}; // temporary to solve error\n        if (this._valueFields) $2f30431acd054e2f$export$79b2f7037acddd43(this._valueFields, (key)=>{\n            const field = this.get(this._valueFieldsF[key].fieldKey);\n            output[key] = data[field];\n            output[this._valueFieldsF[key].workingKey] = output[key];\n        });\n        if (this._fields) $2f30431acd054e2f$export$79b2f7037acddd43(this._fields, (key)=>{\n            const field = this.get(this._fieldsF[key]);\n            output[key] = data[field];\n        });\n        return output;\n    }\n    /**\r\n     * Creates a new data item and processes it.\r\n     *\r\n     * @param   data         Data item settings\r\n     * @param   dataContext  Data context\r\n     * @return               New data item\r\n     */ makeDataItem(data, dataContext) {\n        let dataItem = new $255dd6cbbf32a3ff$export$e9ab04247990d50b(this, dataContext, data);\n        this.processDataItem(dataItem);\n        return dataItem;\n    }\n    /**\r\n     * Adds new explicit data item to series.\r\n     *\r\n     * @param   data         Data item settings\r\n     * @param   dataContext  Data context\r\n     * @return               New data item\r\n     */ pushDataItem(data, dataContext) {\n        const dataItem = this.makeDataItem(data, dataContext);\n        this._mainDataItems.push(dataItem);\n        return dataItem;\n    }\n    /**\r\n     * @ignore\r\n     */ disposeDataItem(_dataItem) {}\n    /**\r\n     * Shows component's data item.\r\n     *\r\n     * @param   dataItem   Data item\r\n     * @param   _duration  Animation duration in milliseconds\r\n     * @return             Promise\r\n     */ showDataItem(dataItem, _duration) {\n        return (0, $5c96a02c592fcff1$export$1050f835b63b671e)(this, void 0, void 0, function*() {\n            dataItem.set(\"visible\", true);\n        });\n    }\n    /**\r\n     * Hides component's data item.\r\n     *\r\n     * @param   dataItem   Data item\r\n     * @param   _duration  Animation duration in milliseconds\r\n     * @return             Promise\r\n     */ hideDataItem(dataItem, _duration) {\n        return (0, $5c96a02c592fcff1$export$1050f835b63b671e)(this, void 0, void 0, function*() {\n            dataItem.set(\"visible\", false);\n        });\n    }\n    _clearDirty() {\n        super._clearDirty();\n        this._valuesDirty = false;\n    }\n    _afterDataChange() {}\n    _afterChanged() {\n        super._afterChanged();\n        if (this._dataChanged) {\n            const type = \"datavalidated\";\n            if (this.events.isEnabled(type)) this.events.dispatch(type, {\n                type: type,\n                target: this\n            });\n            this._dataChanged = false;\n        }\n        this.inited = true;\n    }\n    /**\r\n     * Forces a repaint of the element which relies on data.\r\n     *\r\n     * @since 5.0.21\r\n     */ markDirtyValues(_dataItem) {\n        this.markDirty();\n        this._valuesDirty = true;\n    }\n    _markDirtyGroup() {\n        this._dataGrouped = false;\n    }\n    /**\r\n     * @ignore\r\n     */ markDirtySize() {\n        this._sizeDirty = true;\n        this.markDirty();\n    }\n}\nObject.defineProperty($255dd6cbbf32a3ff$export$16fa2f45be04daa8, \"className\", {\n    enumerable: true,\n    configurable: true,\n    writable: true,\n    value: \"Component\"\n});\nObject.defineProperty($255dd6cbbf32a3ff$export$16fa2f45be04daa8, \"classNames\", {\n    enumerable: true,\n    configurable: true,\n    writable: true,\n    value: (0, $5de502da8a72d65e$export$42a852a2b6b56249).classNames.concat([\n        $255dd6cbbf32a3ff$export$16fa2f45be04daa8.className\n    ])\n});\n\n\n\n\n\n\n\n\n\n\n/**\r\n * ============================================================================\r\n * IMPORTS\r\n * ============================================================================\r\n * @hidden\r\n */ \n\nfunction $044e947ddeb3ef4e$export$e772c8ff12451969(ms) {\n    return new Promise((resolve, _reject)=>{\n        setTimeout(resolve, ms);\n    });\n}\nlet $044e947ddeb3ef4e$export$270e05b25614e92 = {\n    millisecond: 1,\n    second: 1000,\n    minute: 60000,\n    hour: 3600000,\n    day: 86400000,\n    week: 604800000,\n    month: 365.242 / 12 * 86400000,\n    year: 31536000000\n};\nfunction $044e947ddeb3ef4e$export$59766ade6f9ae7(unit) {\n    switch(unit){\n        case \"year\":\n            return;\n        case \"month\":\n            return \"year\";\n        case \"week\":\n            return \"month\";\n        case \"day\":\n            return \"month\"; // not a mistake\n        case \"hour\":\n            return \"day\";\n        case \"minute\":\n            return \"hour\";\n        case \"second\":\n            return \"minute\";\n        case \"millisecond\":\n            return \"second\";\n    }\n}\nfunction $044e947ddeb3ef4e$export$75bba95db5c3e753(unit, count) {\n    if (count == null) count = 1;\n    return $044e947ddeb3ef4e$export$270e05b25614e92[unit] * count;\n}\nfunction $044e947ddeb3ef4e$export$fa068918b4463826(interval) {\n    if (interval) return $044e947ddeb3ef4e$export$270e05b25614e92[interval.timeUnit] * interval.count;\n    return 0;\n}\nfunction $044e947ddeb3ef4e$export$30437b15666123f5(interval, date, firstDateOfWeek, utc, timezone) {\n    const unit = interval.timeUnit;\n    const count = interval.count;\n    if (unit == \"hour\" || unit == \"minute\" || unit == \"second\" || unit == \"millisecond\") return $044e947ddeb3ef4e$export$270e05b25614e92[interval.timeUnit] * interval.count;\n    else {\n        const firstTime = $044e947ddeb3ef4e$export$2077e0241d6afd3c(new Date(date.getTime()), unit, count, firstDateOfWeek, utc, undefined, timezone).getTime();\n        let lastTime = firstTime + count * $044e947ddeb3ef4e$export$75bba95db5c3e753(unit) * 1.05;\n        lastTime = $044e947ddeb3ef4e$export$2077e0241d6afd3c(new Date(lastTime), unit, 1, firstDateOfWeek, utc, undefined, timezone).getTime();\n        return lastTime - firstTime;\n    }\n}\nfunction $044e947ddeb3ef4e$export$461939dd4422153() {\n    return new Date();\n}\nfunction $044e947ddeb3ef4e$export$1428f42a7de81803() {\n    return $044e947ddeb3ef4e$export$461939dd4422153().getTime();\n}\nfunction $044e947ddeb3ef4e$export$784d13d8ee351f07(date) {\n    return new Date(date.getTime()); // todo: check if this is ok. new Date(date) used to strip milliseconds on FF in v3\n}\nfunction $044e947ddeb3ef4e$export$ed507f5b8a2be44d(timeOne, timeTwo, unit, utc, timezone) {\n    // quick\n    if (timeTwo - timeOne > $044e947ddeb3ef4e$export$75bba95db5c3e753(unit, 1.2)) return true;\n    let dateOne = new Date(timeOne);\n    let dateTwo = new Date(timeTwo);\n    if (timezone) {\n        dateOne = timezone.convertLocal(dateOne);\n        dateTwo = timezone.convertLocal(dateTwo);\n    }\n    let timeZoneOffset1 = 0;\n    let timeZoneOffset2 = 0;\n    if (!utc && unit != \"millisecond\") {\n        timeZoneOffset1 = dateOne.getTimezoneOffset();\n        dateOne.setUTCMinutes(dateOne.getUTCMinutes() - timeZoneOffset1);\n        timeZoneOffset2 = dateTwo.getTimezoneOffset();\n        dateTwo.setUTCMinutes(dateTwo.getUTCMinutes() - timeZoneOffset2);\n    }\n    let changed = false;\n    switch(unit){\n        case \"year\":\n            if (dateOne.getUTCFullYear() != dateTwo.getUTCFullYear()) changed = true;\n            break;\n        case \"month\":\n            if (dateOne.getUTCFullYear() != dateTwo.getUTCFullYear()) changed = true;\n            else if (dateOne.getUTCMonth() != dateTwo.getUTCMonth()) changed = true;\n            break;\n        case \"day\":\n            if (dateOne.getUTCMonth() != dateTwo.getUTCMonth()) changed = true;\n            else if (dateOne.getUTCDate() != dateTwo.getUTCDate()) changed = true;\n            break;\n        case \"hour\":\n            if (dateOne.getUTCHours() != dateTwo.getUTCHours()) changed = true;\n            break;\n        case \"minute\":\n            if (dateOne.getUTCMinutes() != dateTwo.getUTCMinutes()) changed = true;\n            break;\n        case \"second\":\n            if (dateOne.getUTCSeconds() != dateTwo.getUTCSeconds()) changed = true;\n            break;\n        case \"millisecond\":\n            if (dateOne.getTime() != dateTwo.getTime()) changed = true;\n            break;\n    }\n    if (changed) return changed;\n    let nextUnit = $044e947ddeb3ef4e$export$59766ade6f9ae7(unit);\n    if (nextUnit) return $044e947ddeb3ef4e$export$ed507f5b8a2be44d(timeOne, timeTwo, nextUnit, utc, timezone);\n    else return false;\n}\nfunction $044e947ddeb3ef4e$export$e16d8520af44a096(date, unit, count, utc, timezone) {\n    let timeZoneOffset = 0;\n    if (!utc && unit != \"millisecond\") {\n        timeZoneOffset = date.getTimezoneOffset();\n        if (timezone) timeZoneOffset -= timezone.offsetUTC(date);\n        date.setUTCMinutes(date.getUTCMinutes() - timeZoneOffset);\n    }\n    switch(unit){\n        case \"day\":\n            let day = date.getUTCDate();\n            date.setUTCDate(day + count);\n            break;\n        case \"second\":\n            let seconds = date.getUTCSeconds();\n            date.setUTCSeconds(seconds + count);\n            break;\n        case \"millisecond\":\n            let milliseconds = date.getUTCMilliseconds();\n            date.setUTCMilliseconds(milliseconds + count);\n            break;\n        case \"hour\":\n            let hours = date.getUTCHours();\n            date.setUTCHours(hours + count);\n            break;\n        case \"minute\":\n            let minutes = date.getUTCMinutes();\n            date.setUTCMinutes(minutes + count);\n            break;\n        case \"year\":\n            let year = date.getUTCFullYear();\n            date.setUTCFullYear(year + count);\n            break;\n        case \"month\":\n            const endDays = date.getUTCDate();\n            const startDays = new Date(date.getUTCFullYear(), date.getUTCMonth(), 0).getUTCDate();\n            let month = date.getUTCMonth();\n            if (endDays > startDays) date.setUTCMonth(month + count, startDays);\n            else date.setUTCMonth(month + count);\n            break;\n        case \"week\":\n            let wday = date.getUTCDate();\n            date.setUTCDate(wday + count * 7);\n            break;\n    }\n    if (!utc && unit != \"millisecond\") {\n        date.setUTCMinutes(date.getUTCMinutes() + timeZoneOffset);\n        if (unit == \"day\" || unit == \"week\" || unit == \"month\" || unit == \"year\") {\n            let newTimeZoneOffset = date.getTimezoneOffset();\n            if (timezone) newTimeZoneOffset += timezone.offsetUTC(date);\n            if (newTimeZoneOffset != timeZoneOffset) {\n                let diff = newTimeZoneOffset - timeZoneOffset;\n                date.setUTCMinutes(date.getUTCMinutes() + diff);\n                // solves issues if new time falls back to old time zone\n                if (date.getTimezoneOffset() != newTimeZoneOffset) date.setUTCMinutes(date.getUTCMinutes() - diff);\n            }\n        }\n    }\n    return date;\n}\nfunction $044e947ddeb3ef4e$export$6efaf5e40ccb9786(time, unit, count, root, firstTime) {\n    let firstDate;\n    if (firstTime != null) firstDate = new Date(firstTime);\n    return $044e947ddeb3ef4e$export$2077e0241d6afd3c(new Date(time), unit, count, root.locale.firstDayOfWeek, root.utc, firstDate, root.timezone).getTime();\n}\nfunction $044e947ddeb3ef4e$export$2077e0241d6afd3c(date, unit, count, firstDateOfWeek, utc, firstDate, timezone) {\n    if (!timezone || utc) {\n        let timeZoneOffset = 0;\n        if (!utc && unit != \"millisecond\") {\n            timeZoneOffset = date.getTimezoneOffset();\n            date.setUTCMinutes(date.getUTCMinutes() - timeZoneOffset);\n        }\n        switch(unit){\n            case \"day\":\n                let day = date.getUTCDate();\n                if (count > 1) //\tday = Math.floor(day / count) * count;\n                {\n                    if (firstDate) {\n                        firstDate = $044e947ddeb3ef4e$export$2077e0241d6afd3c(firstDate, \"day\", 1);\n                        let difference = date.getTime() - firstDate.getTime();\n                        let unitCount = Math.floor(difference / $044e947ddeb3ef4e$export$75bba95db5c3e753(\"day\") / count);\n                        let duration = $044e947ddeb3ef4e$export$75bba95db5c3e753(\"day\", unitCount * count);\n                        date.setTime(firstDate.getTime() + duration - timeZoneOffset * $044e947ddeb3ef4e$export$75bba95db5c3e753(\"minute\"));\n                    }\n                } else date.setUTCDate(day);\n                date.setUTCHours(0, 0, 0, 0);\n                break;\n            case \"second\":\n                let seconds = date.getUTCSeconds();\n                if (count > 1) seconds = Math.floor(seconds / count) * count;\n                date.setUTCSeconds(seconds, 0);\n                break;\n            case \"millisecond\":\n                if (count == 1) return date; // much better for perf!\n                let milliseconds = date.getUTCMilliseconds();\n                milliseconds = Math.floor(milliseconds / count) * count;\n                date.setUTCMilliseconds(milliseconds);\n                break;\n            case \"hour\":\n                let hours = date.getUTCHours();\n                if (count > 1) hours = Math.floor(hours / count) * count;\n                date.setUTCHours(hours, 0, 0, 0);\n                break;\n            case \"minute\":\n                let minutes = date.getUTCMinutes();\n                if (count > 1) minutes = Math.floor(minutes / count) * count;\n                date.setUTCMinutes(minutes, 0, 0);\n                break;\n            case \"month\":\n                let month = date.getUTCMonth();\n                if (count > 1) month = Math.floor(month / count) * count;\n                date.setUTCMonth(month, 1);\n                date.setUTCHours(0, 0, 0, 0);\n                break;\n            case \"year\":\n                let year = date.getUTCFullYear();\n                if (count > 1) year = Math.floor(year / count) * count;\n                date.setUTCFullYear(year, 0, 1);\n                date.setUTCHours(0, 0, 0, 0);\n                break;\n            case \"week\":\n                if (count > 1) {\n                    if (firstDate) {\n                        firstDate = $044e947ddeb3ef4e$export$2077e0241d6afd3c(firstDate, \"week\", 1);\n                        let difference = date.getTime() - firstDate.getTime();\n                        let unitCount = Math.floor(difference / $044e947ddeb3ef4e$export$75bba95db5c3e753(\"week\") / count);\n                        let duration = $044e947ddeb3ef4e$export$75bba95db5c3e753(\"week\", unitCount * count);\n                        date.setTime(firstDate.getTime() + duration - timeZoneOffset * $044e947ddeb3ef4e$export$75bba95db5c3e753(\"minute\"));\n                    }\n                }\n                let wday = date.getUTCDate();\n                let weekDay = date.getUTCDay();\n                if (!$f63bdea45a89cf24$export$7e4aa119212bc614(firstDateOfWeek)) firstDateOfWeek = 1;\n                if (weekDay >= firstDateOfWeek) wday = wday - weekDay + firstDateOfWeek;\n                else wday = wday - (7 + weekDay) + firstDateOfWeek;\n                date.setUTCDate(wday);\n                date.setUTCHours(0, 0, 0, 0);\n                break;\n        }\n        if (!utc && unit != \"millisecond\") {\n            date.setUTCMinutes(date.getUTCMinutes() + timeZoneOffset);\n            if (unit == \"day\" || unit == \"week\" || unit == \"month\" || unit == \"year\") {\n                let newTimeZoneOffset = date.getTimezoneOffset();\n                if (newTimeZoneOffset != timeZoneOffset) {\n                    let diff = newTimeZoneOffset - timeZoneOffset;\n                    date.setUTCMinutes(date.getUTCMinutes() + diff);\n                }\n            }\n        }\n        return date;\n    } else {\n        if (isNaN(date.getTime())) return date;\n        let tzoffset = timezone.offsetUTC(date);\n        let timeZoneOffset = date.getTimezoneOffset();\n        let parsedDate = timezone.parseDate(date);\n        let year = parsedDate.year;\n        let month = parsedDate.month;\n        let day = parsedDate.day;\n        let hour = parsedDate.hour;\n        let minute = parsedDate.minute;\n        let second = parsedDate.second;\n        let millisecond = parsedDate.millisecond;\n        let weekday = parsedDate.weekday;\n        let offsetDif = tzoffset - timeZoneOffset;\n        switch(unit){\n            case \"day\":\n                if (count > 1 && firstDate) {\n                    firstDate = $044e947ddeb3ef4e$export$2077e0241d6afd3c(firstDate, \"day\", 1, firstDateOfWeek, utc, undefined, timezone);\n                    let difference = date.getTime() - firstDate.getTime();\n                    let unitCount = Math.floor(difference / $044e947ddeb3ef4e$export$75bba95db5c3e753(\"day\") / count);\n                    let duration = $044e947ddeb3ef4e$export$75bba95db5c3e753(\"day\", unitCount * count);\n                    date.setTime(firstDate.getTime() + duration);\n                    parsedDate = timezone.parseDate(date);\n                    year = parsedDate.year;\n                    month = parsedDate.month;\n                    day = parsedDate.day;\n                }\n                hour = 0;\n                minute = offsetDif;\n                second = 0;\n                millisecond = 0;\n                break;\n            case \"second\":\n                minute += offsetDif;\n                if (count > 1) second = Math.floor(second / count) * count;\n                millisecond = 0;\n                break;\n            case \"millisecond\":\n                minute += offsetDif;\n                if (count > 1) millisecond = Math.floor(millisecond / count) * count;\n                break;\n            case \"hour\":\n                if (count > 1) hour = Math.floor(hour / count) * count;\n                minute = offsetDif;\n                second = 0;\n                millisecond = 0;\n                break;\n            case \"minute\":\n                if (count > 1) minute = Math.floor(minute / count) * count;\n                minute += offsetDif;\n                second = 0;\n                millisecond = 0;\n                break;\n            case \"month\":\n                if (count > 1) month = Math.floor(month / count) * count;\n                day = 1;\n                hour = 0;\n                minute = offsetDif;\n                second = 0;\n                millisecond = 0;\n                break;\n            case \"year\":\n                if (count > 1) year = Math.floor(year / count) * count;\n                month = 0;\n                day = 1;\n                hour = 0;\n                minute = offsetDif;\n                second = 0;\n                millisecond = 0;\n                break;\n            case \"week\":\n                if (!$f63bdea45a89cf24$export$7e4aa119212bc614(firstDateOfWeek)) firstDateOfWeek = 1;\n                if (weekday >= firstDateOfWeek) day = day - weekday + firstDateOfWeek;\n                else day = day - (7 + weekday) + firstDateOfWeek;\n                hour = 0;\n                minute = offsetDif;\n                second = 0;\n                millisecond = 0;\n                break;\n        }\n        date = new Date(year, month, day, hour, minute, second, millisecond);\n        let newTimeZoneOffset = date.getTimezoneOffset();\n        let newTzoffset = timezone.offsetUTC(date);\n        let newDiff = newTzoffset - newTimeZoneOffset;\n        if (newDiff != offsetDif) date.setTime(date.getTime() + (newDiff - offsetDif) * 60000);\n        return date;\n    }\n}\nfunction $044e947ddeb3ef4e$export$86b75a3dd85e9516(index, duration, gridCount, intervals) {\n    let gridInterval = intervals[index];\n    let intervalDuration = $044e947ddeb3ef4e$export$fa068918b4463826(gridInterval);\n    let lastIndex = intervals.length - 1;\n    if (index >= lastIndex) return Object.assign({}, intervals[lastIndex]);\n    let count = Math.ceil(duration / intervalDuration);\n    if (duration < intervalDuration && index > 0) return Object.assign({}, intervals[index - 1]);\n    if (count <= gridCount) return Object.assign({}, intervals[index]);\n    else {\n        if (index + 1 < intervals.length) return $044e947ddeb3ef4e$export$86b75a3dd85e9516(index + 1, duration, gridCount, intervals);\n        else return Object.assign({}, intervals[index]);\n    }\n}\nfunction $044e947ddeb3ef4e$export$e04e41a1e24ffd3f(date, unit) {\n    switch(unit){\n        case \"day\":\n            return date.getDate();\n        case \"second\":\n            return date.getSeconds();\n        case \"millisecond\":\n            return date.getMilliseconds();\n        case \"hour\":\n            return date.getHours();\n        case \"minute\":\n            return date.getMinutes();\n        case \"month\":\n            return date.getMonth();\n        case \"year\":\n            return date.getFullYear();\n        case \"week\":\n            return $05b1b40b69b15016$export$efe19b760242b2fc(date);\n    }\n}\n\n\nclass $1822b64bd10e2c7e$export$ed28a77b2a3badcf extends (0, $255dd6cbbf32a3ff$export$16fa2f45be04daa8) {\n    constructor(){\n        super(...arguments);\n        Object.defineProperty(this, \"_aggregatesCalculated\", {\n            enumerable: true,\n            configurable: true,\n            writable: true,\n            value: false\n        });\n        Object.defineProperty(this, \"_selectionAggregatesCalculated\", {\n            enumerable: true,\n            configurable: true,\n            writable: true,\n            value: false\n        });\n        Object.defineProperty(this, \"_dataProcessed\", {\n            enumerable: true,\n            configurable: true,\n            writable: true,\n            value: false\n        });\n        Object.defineProperty(this, \"_psi\", {\n            enumerable: true,\n            configurable: true,\n            writable: true,\n            value: void 0\n        });\n        Object.defineProperty(this, \"_pei\", {\n            enumerable: true,\n            configurable: true,\n            writable: true,\n            value: void 0\n        });\n        /**\r\n         * A chart series belongs to.\r\n         */ Object.defineProperty(this, \"chart\", {\n            enumerable: true,\n            configurable: true,\n            writable: true,\n            value: void 0\n        });\n        /**\r\n         * List of bullets to use for the series.\r\n         *\r\n         * @see {@link https://www.amcharts.com/docs/v5/concepts/common-elements/bullets/} for more info\r\n         */ Object.defineProperty(this, \"bullets\", {\n            enumerable: true,\n            configurable: true,\n            writable: true,\n            value: new (0, $ddd3cfc9bee47cd2$export$54c2e3dc7acea9f5)()\n        });\n        /**\r\n         * A [[Container]] series' bullets are stored in.\r\n         *\r\n         * @default Container.new()\r\n         */ Object.defineProperty(this, \"bulletsContainer\", {\n            enumerable: true,\n            configurable: true,\n            writable: true,\n            value: (0, $5de502da8a72d65e$export$42a852a2b6b56249).new(this._root, {\n                width: (0, $bd0d0c10fd30006b$export$46342ea78d85883c),\n                height: (0, $bd0d0c10fd30006b$export$46342ea78d85883c),\n                position: \"absolute\"\n            })\n        });\n    }\n    _afterNew() {\n        this.valueFields.push(\"value\", \"customValue\");\n        super._afterNew();\n        this.setPrivate(\"customData\", {});\n        this._disposers.push(this.bullets.events.onAll((change)=>{\n            if (change.type === \"clear\") this._handleBullets(this.dataItems);\n            else if (change.type === \"push\") this._handleBullets(this.dataItems);\n            else if (change.type === \"setIndex\") this._handleBullets(this.dataItems);\n            else if (change.type === \"insertIndex\") this._handleBullets(this.dataItems);\n            else if (change.type === \"removeIndex\") this._handleBullets(this.dataItems);\n            else if (change.type === \"moveIndex\") this._handleBullets(this.dataItems);\n            else throw new Error(\"Unknown IListEvent type\");\n        }));\n    }\n    _dispose() {\n        this.bulletsContainer.dispose(); // can be in a different parent\n        super._dispose();\n    }\n    startIndex() {\n        let len = this.dataItems.length;\n        return Math.min(this.getPrivate(\"startIndex\", 0), len);\n    }\n    endIndex() {\n        let len = this.dataItems.length;\n        return Math.min(this.getPrivate(\"endIndex\", len), len);\n    }\n    _handleBullets(dataItems) {\n        $2f30431acd054e2f$export$79b2f7037acddd43(dataItems, (dataItem)=>{\n            const bullets = dataItem.bullets;\n            if (bullets) {\n                $2f30431acd054e2f$export$79b2f7037acddd43(bullets, (bullet)=>{\n                    bullet.dispose();\n                });\n                dataItem.bullets = undefined;\n            }\n        });\n        this.markDirtyValues();\n    }\n    /**\r\n     * Looks up and returns a data item by its ID.\r\n     *\r\n     * @param   id  ID\r\n     * @return      Data item\r\n     */ getDataItemById(id) {\n        return $2f30431acd054e2f$export$71aa6c912b956294(this.dataItems, (dataItem)=>{\n            return dataItem.get(\"id\") == id;\n        });\n    }\n    _makeBullets(dataItem) {\n        if (this._shouldMakeBullet(dataItem)) {\n            dataItem.bullets = [];\n            this.bullets.each((bulletFunction)=>{\n                this._makeBullet(dataItem, bulletFunction);\n            });\n        }\n    }\n    _shouldMakeBullet(_dataItem) {\n        return true;\n    }\n    _makeBullet(dataItem, bulletFunction, index) {\n        const bullet = bulletFunction(this._root, this, dataItem);\n        if (bullet) {\n            bullet._index = index;\n            this._makeBulletReal(dataItem, bullet);\n        }\n        return bullet;\n    }\n    _makeBulletReal(dataItem, bullet) {\n        let sprite = bullet.get(\"sprite\");\n        if (sprite) {\n            sprite._setDataItem(dataItem);\n            sprite.setRaw(\"position\", \"absolute\");\n            this.bulletsContainer.children.push(sprite);\n        }\n        bullet.series = this;\n        dataItem.bullets.push(bullet);\n    }\n    /**\r\n     * Adds bullet directly to a data item.\r\n     *\r\n     * Please note: method accepts [[Bullet]] instance as a paramter, not a\r\n     * reference to a function.\r\n     *\r\n     * You should add Bullet instance, not a method like you do it on series.\r\n     *\r\n     * @see {@link https://www.amcharts.com/docs/v5/concepts/common-elements/bullets/#Adding_directly_to_data_item} for more info\r\n     * @since 5.6.0\r\n     *\r\n     * @param  dataItem  Target data item\r\n     * @param  bullet    Bullet instance\r\n     */ addBullet(dataItem, bullet) {\n        if (!dataItem.bullets) dataItem.bullets = [];\n        if (bullet) this._makeBulletReal(dataItem, bullet);\n    }\n    _clearDirty() {\n        super._clearDirty();\n        this._aggregatesCalculated = false;\n        this._selectionAggregatesCalculated = false;\n    }\n    _prepareChildren() {\n        super._prepareChildren();\n        let startIndex = this.startIndex();\n        let endIndex = this.endIndex();\n        if (this.isDirty(\"name\")) this.updateLegendValue();\n        if (this.isDirty(\"heatRules\")) this._valuesDirty = true;\n        if (this.isPrivateDirty(\"baseValueSeries\")) {\n            const baseValueSeries = this.getPrivate(\"baseValueSeries\");\n            if (baseValueSeries) this._disposers.push(baseValueSeries.onPrivate(\"startIndex\", ()=>{\n                this.markDirtyValues();\n            }));\n        }\n        const calculateAggregates = this.get(\"calculateAggregates\");\n        if (calculateAggregates) {\n            if (this._valuesDirty && !this._dataProcessed) {\n                if (!this._aggregatesCalculated) {\n                    this._calculateAggregates(0, this.dataItems.length);\n                    this._aggregatesCalculated = true;\n                    if (startIndex != 0) this._psi = undefined;\n                }\n            }\n            if ((this._psi != startIndex || this._pei != endIndex || this.isPrivateDirty(\"adjustedStartIndex\")) && !this._selectionAggregatesCalculated) {\n                if (startIndex === 0 && endIndex === this.dataItems.length && this._aggregatesCalculated) ;\n                else this._calculateAggregates(startIndex, endIndex);\n                this._selectionAggregatesCalculated = true;\n            }\n        }\n        if (this.isDirty(\"tooltip\")) {\n            let tooltip = this.get(\"tooltip\");\n            if (tooltip) {\n                tooltip.hide(0);\n                tooltip.set(\"tooltipTarget\", this);\n            }\n        }\n        if (this.isDirty(\"fill\") || this.isDirty(\"stroke\")) {\n            let markerRectangle;\n            const legendDataItem = this.get(\"legendDataItem\");\n            if (legendDataItem) {\n                markerRectangle = legendDataItem.get(\"markerRectangle\");\n                if (markerRectangle) {\n                    if (this.isVisible()) {\n                        if (this.isDirty(\"stroke\")) {\n                            let stroke = this.get(\"stroke\");\n                            markerRectangle.set(\"stroke\", stroke);\n                        }\n                        if (this.isDirty(\"fill\")) {\n                            let fill = this.get(\"fill\");\n                            markerRectangle.set(\"fill\", fill);\n                        }\n                    }\n                }\n            }\n            this.updateLegendMarker(undefined);\n        }\n        if (this.bullets.length > 0) {\n            let startIndex = this.startIndex();\n            let endIndex = this.endIndex();\n            if (endIndex < this.dataItems.length) endIndex++;\n            for(let i = startIndex; i < endIndex; i++){\n                let dataItem = this.dataItems[i];\n                if (!dataItem.bullets) this._makeBullets(dataItem);\n            }\n        }\n    }\n    /**\r\n     * @ignore\r\n     */ _adjustStartIndex(index) {\n        return index;\n    }\n    _calculateAggregates(startIndex, endIndex) {\n        let fields = this._valueFields;\n        if (!fields) throw new Error(\"No value fields are set for the series.\");\n        const sum = {};\n        const absSum = {};\n        const count = {};\n        const low = {};\n        const high = {};\n        const open = {};\n        const close = {};\n        const average = {};\n        const previous = {};\n        $2f30431acd054e2f$export$79b2f7037acddd43(fields, (key)=>{\n            sum[key] = 0;\n            absSum[key] = 0;\n            count[key] = 0;\n        });\n        $2f30431acd054e2f$export$79b2f7037acddd43(fields, (key)=>{\n            let change = key + \"Change\";\n            let changePercent = key + \"ChangePercent\";\n            let changePrevious = key + \"ChangePrevious\";\n            let changePreviousPercent = key + \"ChangePreviousPercent\";\n            let changeSelection = key + \"ChangeSelection\";\n            let changeSelectionPercent = key + \"ChangeSelectionPercent\";\n            let openKey = \"valueY\";\n            if (key == \"valueX\" || key == \"openValueX\" || key == \"lowValueX\" || key == \"highValueX\") openKey = \"valueX\";\n            const baseValueSeries = this.getPrivate(\"baseValueSeries\");\n            const adjustedStartIndex = this.getPrivate(\"adjustedStartIndex\", startIndex);\n            for(let i = adjustedStartIndex; i < endIndex; i++){\n                const dataItem = this.dataItems[i];\n                if (dataItem) {\n                    let value = dataItem.get(key);\n                    if (value != null) {\n                        count[key]++;\n                        sum[key] += value;\n                        absSum[key] += Math.abs(value);\n                        average[key] = sum[key] / count[key];\n                        if (low[key] > value || low[key] == null) low[key] = value;\n                        if (high[key] < value || high[key] == null) high[key] = value;\n                        close[key] = value;\n                        if (open[key] == null) {\n                            open[key] = value;\n                            previous[key] = value;\n                            if (baseValueSeries) open[openKey] = baseValueSeries._getBase(openKey);\n                        }\n                        if (startIndex === 0) {\n                            dataItem.setRaw(change, value - open[openKey]);\n                            dataItem.setRaw(changePercent, (value - open[openKey]) / open[openKey] * 100);\n                        }\n                        dataItem.setRaw(changePrevious, value - previous[openKey]);\n                        dataItem.setRaw(changePreviousPercent, (value - previous[openKey]) / previous[openKey] * 100);\n                        dataItem.setRaw(changeSelection, value - open[openKey]);\n                        dataItem.setRaw(changeSelectionPercent, (value - open[openKey]) / open[openKey] * 100);\n                        previous[key] = value;\n                    }\n                }\n            }\n            if (endIndex < this.dataItems.length - 1) {\n                const dataItem = this.dataItems[endIndex];\n                if (dataItem) {\n                    let value = dataItem.get(key);\n                    dataItem.setRaw(changePrevious, value - previous[openKey]);\n                    dataItem.setRaw(changePreviousPercent, (value - previous[openKey]) / previous[openKey] * 100);\n                    dataItem.setRaw(changeSelection, value - open[openKey]);\n                    dataItem.setRaw(changeSelectionPercent, (value - open[openKey]) / open[openKey] * 100);\n                }\n            }\n            if (startIndex > 0) startIndex--;\n            delete previous[key];\n            for(let i = startIndex; i < adjustedStartIndex; i++){\n                const dataItem = this.dataItems[i];\n                if (dataItem) {\n                    let value = dataItem.get(key);\n                    if (previous[key] == null) previous[key] = value;\n                    if (value != null) {\n                        dataItem.setRaw(changePrevious, value - previous[openKey]);\n                        dataItem.setRaw(changePreviousPercent, (value - previous[openKey]) / previous[openKey] * 100);\n                        dataItem.setRaw(changeSelection, value - open[openKey]);\n                        dataItem.setRaw(changeSelectionPercent, (value - open[openKey]) / open[openKey] * 100);\n                        previous[key] = value;\n                    }\n                }\n            }\n        });\n        $2f30431acd054e2f$export$79b2f7037acddd43(fields, (key)=>{\n            this.setPrivate(key + \"AverageSelection\", average[key]);\n            this.setPrivate(key + \"CountSelection\", count[key]);\n            this.setPrivate(key + \"SumSelection\", sum[key]);\n            this.setPrivate(key + \"AbsoluteSumSelection\", absSum[key]);\n            this.setPrivate(key + \"LowSelection\", low[key]);\n            this.setPrivate(key + \"HighSelection\", high[key]);\n            this.setPrivate(key + \"OpenSelection\", open[key]);\n            this.setPrivate(key + \"CloseSelection\", close[key]);\n        });\n        if (startIndex === 0 && endIndex === this.dataItems.length) $2f30431acd054e2f$export$79b2f7037acddd43(fields, (key)=>{\n            this.setPrivate(key + \"Average\", average[key]);\n            this.setPrivate(key + \"Count\", count[key]);\n            this.setPrivate(key + \"Sum\", sum[key]);\n            this.setPrivate(key + \"AbsoluteSum\", absSum[key]);\n            this.setPrivate(key + \"Low\", low[key]);\n            this.setPrivate(key + \"High\", high[key]);\n            this.setPrivate(key + \"Open\", open[key]);\n            this.setPrivate(key + \"Close\", close[key]);\n        });\n    }\n    _updateChildren() {\n        super._updateChildren();\n        this._psi = this.startIndex();\n        this._pei = this.endIndex();\n        if (this.isDirty(\"visible\")) this.bulletsContainer.set(\"visible\", this.get(\"visible\"));\n        // Apply heat rules\n        const rules = this.get(\"heatRules\");\n        if (this._valuesDirty && rules && rules.length > 0) $2f30431acd054e2f$export$79b2f7037acddd43(rules, (rule)=>{\n            const minValue = rule.minValue || this.getPrivate(rule.dataField + \"Low\") || 0;\n            const maxValue = rule.maxValue || this.getPrivate(rule.dataField + \"High\") || 0;\n            $2f30431acd054e2f$export$79b2f7037acddd43(rule.target._entities, (target)=>{\n                const value = target.dataItem.get(rule.dataField);\n                if (!$f63bdea45a89cf24$export$7e4aa119212bc614(value)) {\n                    if (rule.neutral) target.set(rule.key, rule.neutral);\n                    const states = target.states;\n                    if (states) {\n                        const defaultState = states.lookup(\"default\");\n                        if (defaultState && rule.neutral) defaultState.set(rule.key, rule.neutral);\n                    }\n                    if (!rule.customFunction) return;\n                }\n                if (rule.customFunction) rule.customFunction.call(this, target, minValue, maxValue, value);\n                else {\n                    let percent;\n                    if (rule.logarithmic) percent = (Math.log(value) * Math.LOG10E - Math.log(minValue) * Math.LOG10E) / (Math.log(maxValue) * Math.LOG10E - Math.log(minValue) * Math.LOG10E);\n                    else percent = (value - minValue) / (maxValue - minValue);\n                    if ($f63bdea45a89cf24$export$7e4aa119212bc614(value) && (!$f63bdea45a89cf24$export$7e4aa119212bc614(percent) || Math.abs(percent) == Infinity)) percent = 0.5;\n                    // fixes problems if all values are the same\n                    let propertyValue;\n                    if ($f63bdea45a89cf24$export$7e4aa119212bc614(rule.min)) propertyValue = rule.min + (rule.max - rule.min) * percent;\n                    else if (rule.min instanceof (0, $389de129b6cd18b1$export$892596cec99bc70e)) propertyValue = (0, $389de129b6cd18b1$export$892596cec99bc70e).interpolate(percent, rule.min, rule.max);\n                    else if (rule.min instanceof (0, $bd0d0c10fd30006b$export$cbc348af47898b5e)) propertyValue = (0, $43e0e2dc9c95da4e$export$71b5eeb90041857f)(percent, rule.min, rule.max);\n                    target.set(rule.key, propertyValue);\n                    const states = target.states;\n                    if (states) {\n                        const defaultState = states.lookup(\"default\");\n                        if (defaultState) defaultState.set(rule.key, propertyValue);\n                    }\n                }\n            });\n        });\n        if (this.get(\"visible\")) {\n            let count = this.dataItems.length;\n            let startIndex = this.startIndex();\n            let endIndex = this.endIndex();\n            if (endIndex < count) endIndex++;\n            if (startIndex > 0) startIndex--;\n            for(let i = 0; i < startIndex; i++)this._hideBullets(this.dataItems[i]);\n            for(let i = startIndex; i < endIndex; i++)this._positionBullets(this.dataItems[i]);\n            for(let i = endIndex; i < count; i++)this._hideBullets(this.dataItems[i]);\n        }\n    }\n    _positionBullets(dataItem) {\n        if (dataItem.bullets) $2f30431acd054e2f$export$79b2f7037acddd43(dataItem.bullets, (bullet)=>{\n            this._positionBullet(bullet);\n            const sprite = bullet.get(\"sprite\");\n            if (bullet.get(\"dynamic\")) {\n                if (sprite) {\n                    sprite._markDirtyKey(\"fill\");\n                    sprite.markDirtySize();\n                }\n                if (sprite instanceof (0, $5de502da8a72d65e$export$42a852a2b6b56249)) sprite.walkChildren((child)=>{\n                    child._markDirtyKey(\"fill\");\n                    child.markDirtySize();\n                    if (child instanceof (0, $f15f09c5037802f9$export$b04be29aa201d4f5)) child.text.markDirtyText();\n                });\n            }\n            if (sprite instanceof (0, $f15f09c5037802f9$export$b04be29aa201d4f5) && sprite.get(\"populateText\")) sprite.text.markDirtyText();\n        });\n    }\n    _hideBullets(dataItem) {\n        if (dataItem.bullets) $2f30431acd054e2f$export$79b2f7037acddd43(dataItem.bullets, (bullet)=>{\n            let sprite = bullet.get(\"sprite\");\n            if (sprite) sprite.setPrivate(\"visible\", false);\n        });\n    }\n    _positionBullet(_bullet) {}\n    _placeBulletsContainer(chart) {\n        chart.bulletsContainer.children.moveValue(this.bulletsContainer);\n    }\n    _removeBulletsContainer() {\n        const bulletsContainer = this.bulletsContainer;\n        if (bulletsContainer.parent) bulletsContainer.parent.children.removeValue(bulletsContainer);\n    }\n    /**\r\n     * @ignore\r\n     */ disposeDataItem(dataItem) {\n        //super.disposeDataItem(dataItem); // does nothing\n        const bullets = dataItem.bullets;\n        if (bullets) $2f30431acd054e2f$export$79b2f7037acddd43(bullets, (bullet)=>{\n            bullet.dispose();\n        });\n    }\n    _getItemReaderLabel() {\n        return \"\";\n    }\n    /**\r\n     * Shows series's data item.\r\n     *\r\n     * @param   dataItem  Data item\r\n     * @param   duration  Animation duration in milliseconds\r\n     * @return            Promise\r\n     */ showDataItem(dataItem, duration) {\n        const _super = Object.create(null, {\n            showDataItem: {\n                get: ()=>super.showDataItem\n            }\n        });\n        return (0, $5c96a02c592fcff1$export$1050f835b63b671e)(this, void 0, void 0, function*() {\n            const promises = [\n                _super.showDataItem.call(this, dataItem, duration)\n            ];\n            const bullets = dataItem.bullets;\n            if (bullets) $2f30431acd054e2f$export$79b2f7037acddd43(bullets, (bullet)=>{\n                const sprite = bullet.get(\"sprite\");\n                if (sprite) promises.push(sprite.show(duration));\n            });\n            yield Promise.all(promises);\n        });\n    }\n    /**\r\n     * Hides series's data item.\r\n     *\r\n     * @param   dataItem  Data item\r\n     * @param   duration  Animation duration in milliseconds\r\n     * @return            Promise\r\n     */ hideDataItem(dataItem, duration) {\n        const _super = Object.create(null, {\n            hideDataItem: {\n                get: ()=>super.hideDataItem\n            }\n        });\n        return (0, $5c96a02c592fcff1$export$1050f835b63b671e)(this, void 0, void 0, function*() {\n            const promises = [\n                _super.hideDataItem.call(this, dataItem, duration)\n            ];\n            const bullets = dataItem.bullets;\n            if (bullets) $2f30431acd054e2f$export$79b2f7037acddd43(bullets, (bullet)=>{\n                const sprite = bullet.get(\"sprite\");\n                if (sprite) promises.push(sprite.hide(duration));\n            });\n            yield Promise.all(promises);\n        });\n    }\n    _sequencedShowHide(show, duration) {\n        return (0, $5c96a02c592fcff1$export$1050f835b63b671e)(this, void 0, void 0, function*() {\n            if (this.get(\"sequencedInterpolation\")) {\n                if (!$f63bdea45a89cf24$export$7e4aa119212bc614(duration)) duration = this.get(\"interpolationDuration\", 0);\n                if (duration > 0) {\n                    const startIndex = this.startIndex();\n                    const endIndex = this.endIndex();\n                    yield Promise.all($2f30431acd054e2f$export$871de8747c9eaa88(this.dataItems, (dataItem, i)=>(0, $5c96a02c592fcff1$export$1050f835b63b671e)(this, void 0, void 0, function*() {\n                            let realDuration = duration || 0;\n                            if (i < startIndex - 10 || i > endIndex + 10) realDuration = 0;\n                            //let delay = this.get(\"sequencedDelay\", 0) * i + realDuration * (i - startIndex) / (endIndex - startIndex);\n                            let delay = this.get(\"sequencedDelay\", 0) + realDuration / (endIndex - startIndex);\n                            yield $044e947ddeb3ef4e$export$e772c8ff12451969(delay * (i - startIndex));\n                            if (show) yield this.showDataItem(dataItem, realDuration);\n                            else yield this.hideDataItem(dataItem, realDuration);\n                        })));\n                } else yield Promise.all($2f30431acd054e2f$export$871de8747c9eaa88(this.dataItems, (dataItem)=>{\n                    if (show) return this.showDataItem(dataItem, 0);\n                    else return this.hideDataItem(dataItem, 0);\n                }));\n            }\n        });\n    }\n    /**\r\n     * @ignore\r\n     */ updateLegendValue(dataItem) {\n        if (dataItem) {\n            const legendDataItem = dataItem.get(\"legendDataItem\");\n            if (legendDataItem) {\n                const valueLabel = legendDataItem.get(\"valueLabel\");\n                if (valueLabel) {\n                    const text = valueLabel.text;\n                    let txt = \"\";\n                    valueLabel._setDataItem(dataItem);\n                    txt = this.get(\"legendValueText\", text.get(\"text\", \"\"));\n                    valueLabel.set(\"text\", txt);\n                    text.markDirtyText();\n                }\n                const label = legendDataItem.get(\"label\");\n                if (label) {\n                    const text = label.text;\n                    let txt = \"\";\n                    label._setDataItem(dataItem);\n                    txt = this.get(\"legendLabelText\", text.get(\"text\", \"\"));\n                    label.set(\"text\", txt);\n                    text.markDirtyText();\n                }\n            }\n        }\n    }\n    /**\r\n     * @ignore\r\n     */ updateLegendMarker(_dataItem) {}\n    _onHide() {\n        super._onHide();\n        const tooltip = this.getTooltip();\n        if (tooltip) tooltip.hide();\n    }\n    /**\r\n     * @ignore\r\n     */ hoverDataItem(_dataItem) {}\n    /**\r\n     * @ignore\r\n     */ unhoverDataItem(_dataItem) {}\n    /**\r\n     * @ignore\r\n     */ _getBase(key) {\n        const dataItem = this.dataItems[this.startIndex()];\n        if (dataItem) return dataItem.get(key);\n        return 0;\n    }\n}\nObject.defineProperty($1822b64bd10e2c7e$export$ed28a77b2a3badcf, \"className\", {\n    enumerable: true,\n    configurable: true,\n    writable: true,\n    value: \"Series\"\n});\nObject.defineProperty($1822b64bd10e2c7e$export$ed28a77b2a3badcf, \"classNames\", {\n    enumerable: true,\n    configurable: true,\n    writable: true,\n    value: (0, $255dd6cbbf32a3ff$export$16fa2f45be04daa8).classNames.concat([\n        $1822b64bd10e2c7e$export$ed28a77b2a3badcf.className\n    ])\n});\n\n\n\n\nclass $e78693fd548ad8ce$export$b7ac5ab8f71ba2a extends (0, $5de502da8a72d65e$export$42a852a2b6b56249) {\n    constructor(){\n        super(...arguments);\n        /**\r\n         * Related series.\r\n         */ Object.defineProperty(this, \"series\", {\n            enumerable: true,\n            configurable: true,\n            writable: true,\n            value: void 0\n        });\n        Object.defineProperty(this, \"_clickDisposer\", {\n            enumerable: true,\n            configurable: true,\n            writable: true,\n            value: void 0\n        });\n    }\n    _afterNew() {\n        super._afterNew();\n        this.states.create(\"disabled\", {});\n        this.states.create(\"hover\", {});\n        this.states.create(\"hoverDisabled\", {});\n        this.on(\"disabled\", ()=>{\n            const dataItem = this.dataItem;\n            if (!dataItem.get(\"children\")) {\n                this.set(\"disabled\", true);\n                return;\n            }\n            const disabled = this.get(\"disabled\");\n            const series = this.series;\n            if (dataItem && series) {\n                if (dataItem.get(\"disabled\") != disabled) {\n                    if (disabled) series.disableDataItem(dataItem);\n                    else series.enableDataItem(dataItem, series.get(\"downDepth\", 1), 0);\n                }\n            }\n        });\n    }\n    _changed() {\n        super._changed();\n        if (this.isDirty(\"toggleKey\")) {\n            const toggleKey = this.get(\"toggleKey\");\n            if (toggleKey == \"disabled\") this._clickDisposer = this.events.on(\"click\", ()=>{\n                if (!this._isDragging) {\n                    let series = this.series;\n                    if (series) series.selectDataItem(this.dataItem);\n                }\n            });\n            else if (this._clickDisposer) this._clickDisposer.dispose();\n        }\n    }\n}\nObject.defineProperty($e78693fd548ad8ce$export$b7ac5ab8f71ba2a, \"className\", {\n    enumerable: true,\n    configurable: true,\n    writable: true,\n    value: \"HierarchyNode\"\n});\nObject.defineProperty($e78693fd548ad8ce$export$b7ac5ab8f71ba2a, \"classNames\", {\n    enumerable: true,\n    configurable: true,\n    writable: true,\n    value: (0, $5de502da8a72d65e$export$42a852a2b6b56249).classNames.concat([\n        $e78693fd548ad8ce$export$b7ac5ab8f71ba2a.className\n    ])\n});\n\n\n\n\n\n\n\n\n\nfunction $06713b77db0b884a$var$count(node) {\n    var sum = 0, children = node.children, i = children && children.length;\n    if (!i) sum = 1;\n    else while(--i >= 0)sum += children[i].value;\n    node.value = sum;\n}\nfunction $06713b77db0b884a$export$2e2bcd8739ae039() {\n    return this.eachAfter($06713b77db0b884a$var$count);\n}\n\n\nfunction $4449780af3a02b1f$export$2e2bcd8739ae039(callback, that) {\n    let index = -1;\n    for (const node of this)callback.call(that, node, ++index, this);\n    return this;\n}\n\n\nfunction $054d715bf53e9c0d$export$2e2bcd8739ae039(callback, that) {\n    var node = this, nodes = [\n        node\n    ], children, i, index = -1;\n    while(node = nodes.pop()){\n        callback.call(that, node, ++index, this);\n        if (children = node.children) for(i = children.length - 1; i >= 0; --i)nodes.push(children[i]);\n    }\n    return this;\n}\n\n\nfunction $318ee109364962b6$export$2e2bcd8739ae039(callback, that) {\n    var node = this, nodes = [\n        node\n    ], next = [], children, i, n, index = -1;\n    while(node = nodes.pop()){\n        next.push(node);\n        if (children = node.children) for(i = 0, n = children.length; i < n; ++i)nodes.push(children[i]);\n    }\n    while(node = next.pop())callback.call(that, node, ++index, this);\n    return this;\n}\n\n\nfunction $b66499c1cf9f0611$export$2e2bcd8739ae039(callback, that) {\n    let index = -1;\n    for (const node of this){\n        if (callback.call(that, node, ++index, this)) return node;\n    }\n}\n\n\nfunction $94e4aed2771c04cc$export$2e2bcd8739ae039(value) {\n    return this.eachAfter(function(node) {\n        var sum = +value(node.data) || 0, children = node.children, i = children && children.length;\n        while(--i >= 0)sum += children[i].value;\n        node.value = sum;\n    });\n}\n\n\nfunction $826cc013cd384109$export$2e2bcd8739ae039(compare) {\n    return this.eachBefore(function(node) {\n        if (node.children) node.children.sort(compare);\n    });\n}\n\n\nfunction $b87aaeb3b6fa0399$export$2e2bcd8739ae039(end) {\n    var start = this, ancestor = $b87aaeb3b6fa0399$var$leastCommonAncestor(start, end), nodes = [\n        start\n    ];\n    while(start !== ancestor){\n        start = start.parent;\n        nodes.push(start);\n    }\n    var k = nodes.length;\n    while(end !== ancestor){\n        nodes.splice(k, 0, end);\n        end = end.parent;\n    }\n    return nodes;\n}\nfunction $b87aaeb3b6fa0399$var$leastCommonAncestor(a, b) {\n    if (a === b) return a;\n    var aNodes = a.ancestors(), bNodes = b.ancestors(), c = null;\n    a = aNodes.pop();\n    b = bNodes.pop();\n    while(a === b){\n        c = a;\n        a = aNodes.pop();\n        b = bNodes.pop();\n    }\n    return c;\n}\n\n\nfunction $3aa4adf4b1fab731$export$2e2bcd8739ae039() {\n    var node = this, nodes = [\n        node\n    ];\n    while(node = node.parent)nodes.push(node);\n    return nodes;\n}\n\n\nfunction $faf9e569de99c052$export$2e2bcd8739ae039() {\n    return Array.from(this);\n}\n\n\nfunction $dad9dd452e7acc2b$export$2e2bcd8739ae039() {\n    var leaves = [];\n    this.eachBefore(function(node) {\n        if (!node.children) leaves.push(node);\n    });\n    return leaves;\n}\n\n\nfunction $99c2b8cd250f0b60$export$2e2bcd8739ae039() {\n    var root = this, links = [];\n    root.each(function(node) {\n        if (node !== root) links.push({\n            source: node.parent,\n            target: node\n        });\n    });\n    return links;\n}\n\n\nfunction* $fc15efcd8611bcd8$export$2e2bcd8739ae039() {\n    var node = this, current, next = [\n        node\n    ], children, i, n;\n    do {\n        current = next.reverse(), next = [];\n        while(node = current.pop()){\n            yield node;\n            if (children = node.children) for(i = 0, n = children.length; i < n; ++i)next.push(children[i]);\n        }\n    }while (next.length);\n}\n\n\nfunction $9a60c0761eaba32b$export$2e2bcd8739ae039(data, children) {\n    if (data instanceof Map) {\n        data = [\n            undefined,\n            data\n        ];\n        if (children === undefined) children = $9a60c0761eaba32b$var$mapChildren;\n    } else if (children === undefined) children = $9a60c0761eaba32b$var$objectChildren;\n    var root = new $9a60c0761eaba32b$export$85c928794f8d04d4(data), node, nodes = [\n        root\n    ], child, childs, i, n;\n    while(node = nodes.pop())if ((childs = children(node.data)) && (n = (childs = Array.from(childs)).length)) {\n        node.children = childs;\n        for(i = n - 1; i >= 0; --i){\n            nodes.push(child = childs[i] = new $9a60c0761eaba32b$export$85c928794f8d04d4(childs[i]));\n            child.parent = node;\n            child.depth = node.depth + 1;\n        }\n    }\n    return root.eachBefore($9a60c0761eaba32b$export$5af32d52ab5dfd57);\n}\nfunction $9a60c0761eaba32b$var$node_copy() {\n    return $9a60c0761eaba32b$export$2e2bcd8739ae039(this).eachBefore($9a60c0761eaba32b$var$copyData);\n}\nfunction $9a60c0761eaba32b$var$objectChildren(d) {\n    return d.children;\n}\nfunction $9a60c0761eaba32b$var$mapChildren(d) {\n    return Array.isArray(d) ? d[1] : null;\n}\nfunction $9a60c0761eaba32b$var$copyData(node) {\n    if (node.data.value !== undefined) node.value = node.data.value;\n    node.data = node.data.data;\n}\nfunction $9a60c0761eaba32b$export$5af32d52ab5dfd57(node) {\n    var height = 0;\n    do node.height = height;\n    while ((node = node.parent) && node.height < ++height);\n}\nfunction $9a60c0761eaba32b$export$85c928794f8d04d4(data) {\n    this.data = data;\n    this.depth = this.height = 0;\n    this.parent = null;\n}\n$9a60c0761eaba32b$export$85c928794f8d04d4.prototype = $9a60c0761eaba32b$export$2e2bcd8739ae039.prototype = {\n    constructor: $9a60c0761eaba32b$export$85c928794f8d04d4,\n    count: (0, $06713b77db0b884a$export$2e2bcd8739ae039),\n    each: (0, $4449780af3a02b1f$export$2e2bcd8739ae039),\n    eachAfter: (0, $318ee109364962b6$export$2e2bcd8739ae039),\n    eachBefore: (0, $054d715bf53e9c0d$export$2e2bcd8739ae039),\n    find: (0, $b66499c1cf9f0611$export$2e2bcd8739ae039),\n    sum: (0, $94e4aed2771c04cc$export$2e2bcd8739ae039),\n    sort: (0, $826cc013cd384109$export$2e2bcd8739ae039),\n    path: (0, $b87aaeb3b6fa0399$export$2e2bcd8739ae039),\n    ancestors: (0, $3aa4adf4b1fab731$export$2e2bcd8739ae039),\n    descendants: (0, $faf9e569de99c052$export$2e2bcd8739ae039),\n    leaves: (0, $dad9dd452e7acc2b$export$2e2bcd8739ae039),\n    links: (0, $99c2b8cd250f0b60$export$2e2bcd8739ae039),\n    copy: $9a60c0761eaba32b$var$node_copy,\n    [Symbol.iterator]: (0, $fc15efcd8611bcd8$export$2e2bcd8739ae039)\n};\n\n\nclass $b55f04ee4f1bcfc2$export$b3d5c8408bb86dd8 extends (0, $1822b64bd10e2c7e$export$ed28a77b2a3badcf) {\n    constructor(){\n        super(...arguments);\n        /**\r\n         * A [[Container]] that nodes are placed in.\r\n         *\r\n         * @default Container.new()\r\n         */ Object.defineProperty(this, \"nodesContainer\", {\n            enumerable: true,\n            configurable: true,\n            writable: true,\n            value: this.children.push((0, $5de502da8a72d65e$export$42a852a2b6b56249).new(this._root, {\n                isMeasured: false\n            }))\n        });\n        Object.defineProperty(this, \"_rootNode\", {\n            enumerable: true,\n            configurable: true,\n            writable: true,\n            value: void 0\n        });\n        Object.defineProperty(this, \"_treeData\", {\n            enumerable: true,\n            configurable: true,\n            writable: true,\n            value: void 0\n        });\n        Object.defineProperty(this, \"_index\", {\n            enumerable: true,\n            configurable: true,\n            writable: true,\n            value: 0\n        });\n        Object.defineProperty(this, \"_tag\", {\n            enumerable: true,\n            configurable: true,\n            writable: true,\n            value: \"hierarchy\"\n        });\n        /**\r\n         * A list of nodes in a [[Hierarchy]] chart.\r\n         *\r\n         * @default new ListTemplate<HierarchyNode>\r\n         */ Object.defineProperty(this, \"nodes\", {\n            enumerable: true,\n            configurable: true,\n            writable: true,\n            value: this.addDisposer(new (0, $ddd3cfc9bee47cd2$export$92d9ebaedf6ba994)((0, $2d9a18dcb72760f7$export$14416b8d99d47caa).new({}), ()=>(0, $e78693fd548ad8ce$export$b7ac5ab8f71ba2a).new(this._root, {\n                    themeTags: $05b1b40b69b15016$export$88ad500ef99d1561(this.nodes.template.get(\"themeTags\", []), [\n                        this._tag,\n                        \"hierarchy\",\n                        \"node\"\n                    ])\n                }, this.nodes.template)))\n        });\n        /**\r\n         * A list of label elements in a [[Hierarchy]] chart.\r\n         *\r\n         * @default new ListTemplate<Label>\r\n         */ Object.defineProperty(this, \"labels\", {\n            enumerable: true,\n            configurable: true,\n            writable: true,\n            value: this.addDisposer(new (0, $ddd3cfc9bee47cd2$export$92d9ebaedf6ba994)((0, $2d9a18dcb72760f7$export$14416b8d99d47caa).new({}), ()=>(0, $f15f09c5037802f9$export$b04be29aa201d4f5).new(this._root, {\n                    themeTags: $05b1b40b69b15016$export$88ad500ef99d1561(this.labels.template.get(\"themeTags\", []), [\n                        this._tag\n                    ])\n                }, this.labels.template)))\n        });\n        Object.defineProperty(this, \"_currentDownDepth\", {\n            enumerable: true,\n            configurable: true,\n            writable: true,\n            value: void 0\n        });\n    }\n    /**\r\n     * @ignore\r\n     */ makeNode(dataItem) {\n        const childData = dataItem.get(\"childData\");\n        const node = this.nodes.make();\n        node.series = this;\n        node._setDataItem(dataItem);\n        this.nodes.push(node);\n        dataItem.setRaw(\"node\", node);\n        const label = this.labels.make();\n        label._setDataItem(dataItem);\n        dataItem.setRaw(\"label\", label);\n        this.labels.push(label);\n        if (!childData || childData.length == 0) node.addTag(\"last\");\n        const depth = dataItem.get(\"depth\");\n        node.addTag(\"depth\" + depth);\n        this.nodesContainer.children.push(node);\n        node.children.push(label);\n        return node;\n    }\n    _afterNew() {\n        this._defaultThemes.push((0, $6fd14349e0991ae8$export$40a77f3497d65048).new(this._root));\n        this.fields.push(\"category\", \"childData\", \"disabled\", \"fill\");\n        this.children.push(this.bulletsContainer);\n        super._afterNew();\n    }\n    _prepareChildren() {\n        super._prepareChildren();\n        if (this._valuesDirty) {\n            this._treeData = {};\n            const first = this.dataItems[0];\n            if (first) {\n                this._makeHierarchyData(this._treeData, first);\n                this._index = 0;\n                this._rootNode = $9a60c0761eaba32b$export$2e2bcd8739ae039(this._treeData);\n                if (this._rootNode) {\n                    this._rootNode.sum((d)=>{\n                        return d.value;\n                    });\n                    const sort = this.get(\"sort\");\n                    if (sort == \"descending\") this._rootNode.sort((a, b)=>b.value - a.value);\n                    else if (sort == \"ascending\") this._rootNode.sort((a, b)=>a.value - b.value);\n                    this.setPrivateRaw(\"valueLow\", Infinity);\n                    this.setPrivateRaw(\"valueHigh\", -Infinity);\n                    this.setPrivateRaw(\"maxDepth\", 0);\n                    this._updateValues(this._rootNode);\n                }\n            }\n        }\n        if (this._valuesDirty || this._sizeDirty) this._updateVisuals();\n        if (this._sizeDirty) {\n            const dataItem = this.get(\"selectedDataItem\");\n            if (dataItem) this._zoom(dataItem);\n        }\n    }\n    _changed() {\n        super._changed();\n        if (this.isDirty(\"selectedDataItem\")) this._selectDataItem(this.get(\"selectedDataItem\"));\n    }\n    _updateVisuals() {\n        if (this._rootNode) this._updateNodes(this._rootNode);\n    }\n    _updateNodes(hierarchyNode) {\n        const dataItem = hierarchyNode.data.dataItem;\n        if (dataItem) {\n            this._updateNode(dataItem);\n            if (this.bullets.length > 0 && !dataItem.bullets) this._makeBullets(dataItem);\n            const hierarchyChildren = hierarchyNode.children;\n            if (hierarchyChildren) $2f30431acd054e2f$export$79b2f7037acddd43(hierarchyChildren, (hierarchyChild)=>{\n                this._updateNodes(hierarchyChild);\n            });\n        }\n    }\n    _updateNode(_dataItem) {}\n    /**\r\n     * Looks up and returns a data item by its ID.\r\n     *\r\n     * @param   id  ID\r\n     * @return      Data item\r\n     */ getDataItemById(id) {\n        return this._getDataItemById(this.dataItems, id);\n    }\n    _getDataItemById(dataItems, id) {\n        let di;\n        $2f30431acd054e2f$export$79b2f7037acddd43(dataItems, (dataItem)=>{\n            if (dataItem.get(\"id\") == id) di = dataItem;\n            const children = dataItem.get(\"children\");\n            if (children) {\n                let childDataItem = this._getDataItemById(children, id);\n                if (childDataItem) di = childDataItem;\n            }\n        });\n        return di;\n    }\n    _handleBullets(dataItems) {\n        $2f30431acd054e2f$export$79b2f7037acddd43(dataItems, (dataItem)=>{\n            const bullets = dataItem.bullets;\n            if (bullets) {\n                $2f30431acd054e2f$export$79b2f7037acddd43(bullets, (bullet)=>{\n                    bullet.dispose();\n                });\n                dataItem.bullets = undefined;\n            }\n            const children = dataItem.get(\"children\");\n            if (children) this._handleBullets(children);\n        });\n        this._updateVisuals();\n    }\n    _onDataClear() {\n        super._onDataClear();\n        const colors = this.get(\"colors\");\n        if (colors) colors.reset();\n        const patterns = this.get(\"patterns\");\n        if (patterns) patterns.reset();\n    }\n    processDataItem(dataItem) {\n        super.processDataItem(dataItem);\n        const childData = dataItem.get(\"childData\");\n        const colors = this.get(\"colors\");\n        const patterns = this.get(\"patterns\");\n        const topDepth = this.get(\"topDepth\", 0);\n        if (!dataItem.get(\"parent\")) {\n            dataItem.setRaw(\"depth\", 0);\n            if (colors && topDepth == 0 && dataItem.get(\"fill\") == null) {\n                dataItem.setRaw(\"fill\", colors.next());\n                if (patterns) dataItem.setRaw(\"fillPattern\", patterns.next());\n            }\n        }\n        let depth = dataItem.get(\"depth\");\n        const initialDepth = this.get(\"initialDepth\", 1);\n        this.makeNode(dataItem);\n        this._processDataItem(dataItem);\n        if (childData) {\n            const children = [];\n            dataItem.setRaw(\"children\", children);\n            $2f30431acd054e2f$export$79b2f7037acddd43(childData, (child)=>{\n                const childDataItem = new (0, $255dd6cbbf32a3ff$export$e9ab04247990d50b)(this, child, this._makeDataItem(child));\n                children.push(childDataItem);\n                childDataItem.setRaw(\"parent\", dataItem);\n                childDataItem.setRaw(\"depth\", depth + 1);\n                if (this.dataItems.length == 1 && depth == 0) {\n                    if (colors && childDataItem.get(\"fill\") == null) childDataItem.setRaw(\"fill\", colors.next());\n                    if (patterns && childDataItem.get(\"fillPattern\") == null) childDataItem.setRaw(\"fillPattern\", patterns.next());\n                } else {\n                    if (childDataItem.get(\"fill\") == null) childDataItem.setRaw(\"fill\", dataItem.get(\"fill\"));\n                    if (childDataItem.get(\"fillPattern\") == null) childDataItem.setRaw(\"fillPattern\", dataItem.get(\"fillPattern\"));\n                }\n                this.processDataItem(childDataItem);\n            });\n        }\n        const children = dataItem.get(\"children\");\n        if (!children || children.length == 0) {\n            const node = dataItem.get(\"node\");\n            node.setAll({\n                toggleKey: undefined\n            });\n        }\n        if (dataItem.get(\"disabled\") == null) {\n            if (depth >= topDepth + initialDepth) this.disableDataItem(dataItem, 0);\n        }\n    }\n    /**\r\n     * Adds children data to the target data item.\r\n     *\r\n     * @see {@link https://www.amcharts.com/docs/v5/charts/hierarchy/hierarchy-api/#Dynamically_adding_child_nodes} for more info\r\n     * @since 5.4.5\r\n     */ addChildData(dataItem, data) {\n        const dataContext = dataItem.dataContext;\n        const childDataField = this.get(\"childDataField\");\n        let childData = dataContext[childDataField];\n        if (!childData) {\n            childData = data;\n            dataContext[childDataField] = childData;\n        } else childData.push(...data);\n        let children = dataItem.get(\"children\");\n        if (!children) {\n            children = [];\n            dataItem.set(\"children\", children);\n        }\n        const node = dataItem.get(\"node\");\n        if (node) node.set(\"toggleKey\", \"disabled\");\n        let depth = dataItem.get(\"depth\");\n        $2f30431acd054e2f$export$79b2f7037acddd43(childData, (child)=>{\n            let found = false;\n            $2f30431acd054e2f$export$1e016427912bfd78(children, (dataItem)=>{\n                if (dataItem.dataContext == child) {\n                    found = true;\n                    return false;\n                }\n                return true;\n            });\n            if (!found) {\n                const childDataItem = new (0, $255dd6cbbf32a3ff$export$e9ab04247990d50b)(this, child, this._makeDataItem(child));\n                children.push(childDataItem);\n                childDataItem.setRaw(\"parent\", dataItem);\n                childDataItem.setRaw(\"depth\", depth + 1);\n                if (childDataItem.get(\"fill\") == null) childDataItem.setRaw(\"fill\", dataItem.get(\"fill\"));\n                this.processDataItem(childDataItem);\n            }\n        });\n    }\n    _processDataItem(_dataItem) {}\n    _updateValues(d3HierarchyNode) {\n        const dataItem = d3HierarchyNode.data.dataItem;\n        if (d3HierarchyNode.depth > this.getPrivate(\"maxDepth\")) this.setPrivateRaw(\"maxDepth\", d3HierarchyNode.depth);\n        if (dataItem) {\n            dataItem.setRaw(\"d3HierarchyNode\", d3HierarchyNode);\n            d3HierarchyNode.index = this._index;\n            this._index++;\n            this.root.events.once(\"frameended\", ()=>{\n                dataItem.get(\"node\").set(\"disabled\", dataItem.get(\"disabled\"));\n            });\n            let dataValue = d3HierarchyNode.data.value;\n            let value = d3HierarchyNode.value;\n            if (dataValue != null) {\n                value = dataValue;\n                d3HierarchyNode[\"value\"] = value;\n            }\n            if ($f63bdea45a89cf24$export$7e4aa119212bc614(value)) {\n                dataItem.setRaw(\"sum\", value);\n                dataItem.setRaw(\"valuePercentTotal\", value / this.dataItems[0].get(\"sum\") * 100);\n                let valuePercent = 100;\n                const parent = dataItem.get(\"parent\");\n                if (parent) valuePercent = value / parent.get(\"sum\") * 100;\n                dataItem.get(\"label\").text.markDirtyText();\n                dataItem.setRaw(\"valuePercent\", valuePercent);\n                const valueLow = this.getPrivate(\"valueLow\");\n                if (valueLow != undefined && valueLow > value) this.setPrivateRaw(\"valueLow\", value);\n                const valueHigh = this.getPrivate(\"valueHigh\");\n                if (valueHigh != undefined && valueHigh < value) this.setPrivateRaw(\"valueHigh\", value);\n            }\n            this.updateLegendValue(dataItem);\n        }\n        const hierarchyChildren = d3HierarchyNode.children;\n        if (hierarchyChildren) $2f30431acd054e2f$export$79b2f7037acddd43(hierarchyChildren, (d3HierarchyChild)=>{\n            this._updateValues(d3HierarchyChild);\n        });\n    }\n    _makeHierarchyData(data, dataItem) {\n        data.dataItem = dataItem;\n        const children = dataItem.get(\"children\");\n        if (children) {\n            const childrenDataArray = [];\n            data.children = childrenDataArray;\n            $2f30431acd054e2f$export$79b2f7037acddd43(children, (childDataItem)=>{\n                const childData = {};\n                childrenDataArray.push(childData);\n                this._makeHierarchyData(childData, childDataItem);\n            });\n            const value = dataItem.get(\"valueWorking\");\n            if ($f63bdea45a89cf24$export$7e4aa119212bc614(value)) data.value = value;\n        } else {\n            const value = dataItem.get(\"valueWorking\");\n            if ($f63bdea45a89cf24$export$7e4aa119212bc614(value)) data.value = value;\n        }\n    }\n    /**\r\n     * @ignore\r\n     */ disposeDataItem(dataItem) {\n        super.disposeDataItem(dataItem);\n        const node = dataItem.get(\"node\");\n        if (node) {\n            this.nodes.removeValue(node);\n            node.dispose();\n        }\n        const label = dataItem.get(\"label\");\n        if (label) {\n            this.labels.removeValue(label);\n            label.dispose();\n        }\n        const children = dataItem.get(\"children\");\n        if (children) $2f30431acd054e2f$export$79b2f7037acddd43(children, (child)=>{\n            this.disposeDataItem(child);\n        });\n    }\n    /**\r\n     * Hides hierarchy's data item.\r\n     *\r\n     * @param   dataItem  Data item\r\n     * @param   duration  Animation duration in milliseconds\r\n     * @return            Promise\r\n     */ hideDataItem(dataItem, duration) {\n        const _super = Object.create(null, {\n            hideDataItem: {\n                get: ()=>super.hideDataItem\n            }\n        });\n        return (0, $5c96a02c592fcff1$export$1050f835b63b671e)(this, void 0, void 0, function*() {\n            const promises = [\n                _super.hideDataItem.call(this, dataItem, duration)\n            ];\n            const hiddenState = this.states.create(\"hidden\", {});\n            if (!$f63bdea45a89cf24$export$7e4aa119212bc614(duration)) {\n                const stateAnimationDuration = \"stateAnimationDuration\";\n                duration = hiddenState.get(stateAnimationDuration, this.get(stateAnimationDuration, 0));\n            }\n            const stateAnimationEasing = \"stateAnimationEasing\";\n            const easing = hiddenState.get(stateAnimationEasing, this.get(stateAnimationEasing));\n            const children = dataItem.get(\"children\");\n            if ((!children || children.length == 0) && $f63bdea45a89cf24$export$7e4aa119212bc614(dataItem.get(\"value\"))) promises.push(dataItem.animate({\n                key: \"valueWorking\",\n                to: 0,\n                duration: duration,\n                easing: easing\n            }).waitForStop());\n            const node = dataItem.get(\"node\");\n            node.hide();\n            node.hideTooltip();\n            if (children) $2f30431acd054e2f$export$79b2f7037acddd43(children, (childDataItem)=>{\n                promises.push(this.hideDataItem(childDataItem));\n            });\n            yield Promise.all(promises);\n        });\n    }\n    /**\r\n     * Shows hierarchy's data item.\r\n     *\r\n     * @param   dataItem  Data item\r\n     * @param   duration  Animation duration in milliseconds\r\n     * @return            Promise\r\n     */ showDataItem(dataItem, duration) {\n        const _super = Object.create(null, {\n            showDataItem: {\n                get: ()=>super.showDataItem\n            }\n        });\n        return (0, $5c96a02c592fcff1$export$1050f835b63b671e)(this, void 0, void 0, function*() {\n            const promises = [\n                _super.showDataItem.call(this, dataItem, duration)\n            ];\n            if (!$f63bdea45a89cf24$export$7e4aa119212bc614(duration)) duration = this.get(\"stateAnimationDuration\", 0);\n            const easing = this.get(\"stateAnimationEasing\");\n            const children = dataItem.get(\"children\");\n            if ((!children || children.length == 0) && $f63bdea45a89cf24$export$7e4aa119212bc614(dataItem.get(\"value\"))) promises.push(dataItem.animate({\n                key: \"valueWorking\",\n                to: dataItem.get(\"value\"),\n                duration: duration,\n                easing: easing\n            }).waitForStop());\n            const node = dataItem.get(\"node\");\n            node.show();\n            if (children) $2f30431acd054e2f$export$79b2f7037acddd43(children, (childDataItem)=>{\n                promises.push(this.showDataItem(childDataItem));\n            });\n            yield Promise.all(promises);\n        });\n    }\n    /**\r\n     * Enables a disabled data item.\r\n     *\r\n     * @param  dataItem  Target data item\r\n     * @param  duration  Animation duration in milliseconds\r\n     */ enableDataItem(dataItem, maxDepth, depth, duration) {\n        if (depth == null) depth = 0;\n        if (maxDepth == null) maxDepth = 1;\n        dataItem.set(\"disabled\", false);\n        dataItem.get(\"node\").set(\"disabled\", false);\n        if (!dataItem.isHidden()) dataItem.get(\"node\").show(duration);\n        const topDepth = this.get(\"topDepth\", 0);\n        if (dataItem.get(\"depth\") < topDepth) dataItem.get(\"node\").hide(0);\n        if (depth == 0) {\n            const upDepth = this.get(\"upDepth\", Infinity);\n            let parent = dataItem;\n            let count = 0;\n            while(parent !== undefined){\n                if (count > upDepth) parent.get(\"node\").hide();\n                parent = parent.get(\"parent\");\n                count++;\n            }\n        }\n        let children = dataItem.get(\"children\");\n        if (children) {\n            if (depth < maxDepth - 1) $2f30431acd054e2f$export$79b2f7037acddd43(children, (child)=>{\n                const disabledField = this.get(\"disabledField\");\n                if (disabledField) {\n                    const dataContext = child.dataContext;\n                    if (dataContext[disabledField] != true) this.enableDataItem(child, maxDepth, depth + 1, duration);\n                    else this.disableDataItem(child);\n                } else this.enableDataItem(child, maxDepth, depth + 1, duration);\n            });\n            else $2f30431acd054e2f$export$79b2f7037acddd43(children, (child)=>{\n                if (!child.isHidden()) {\n                    child.get(\"node\").show(duration);\n                    child.get(\"node\").states.applyAnimate(\"disabled\");\n                    child.set(\"disabled\", true);\n                    this.disableDataItem(child);\n                }\n            });\n        }\n    }\n    /**\r\n     * Disables a data item.\r\n     *\r\n     * @param  dataItem  Target data item\r\n     * @param  duration  Animation duration in milliseconds\r\n     */ disableDataItem(dataItem, duration) {\n        dataItem.set(\"disabled\", true);\n        let children = dataItem.get(\"children\");\n        if (children) $2f30431acd054e2f$export$79b2f7037acddd43(children, (child)=>{\n            this.disableDataItem(child, duration);\n            child.get(\"node\").hide(duration);\n        });\n    }\n    _selectDataItem(dataItem, downDepth, skipDisptach) {\n        if (dataItem) {\n            if (!skipDisptach) {\n                const type = \"dataitemselected\";\n                this.events.dispatch(type, {\n                    type: type,\n                    target: this,\n                    dataItem: dataItem\n                });\n            }\n            let maxDepth = this.getPrivate(\"maxDepth\", 1);\n            const topDepth = this.get(\"topDepth\", 0);\n            if (downDepth == null) downDepth = Math.min(this.get(\"downDepth\", 1), maxDepth - dataItem.get(\"depth\"));\n            const hierarchyNode = dataItem.get(\"d3HierarchyNode\");\n            let currentDepth = hierarchyNode.depth;\n            if (!this.inited) {\n                downDepth = Math.min(this.get(\"initialDepth\", 1), maxDepth - topDepth);\n                downDepth = Math.max(0, downDepth);\n            }\n            this._currentDownDepth = downDepth;\n            if (currentDepth + downDepth > maxDepth) downDepth = maxDepth - currentDepth;\n            if (currentDepth < topDepth) {\n                downDepth += topDepth - currentDepth;\n                currentDepth = topDepth;\n            }\n            const children = dataItem.get(\"children\");\n            if (children && children.length > 0) {\n                if (downDepth > 0) this.enableDataItem(dataItem, downDepth);\n                else {\n                    dataItem.get(\"node\").show();\n                    $2f30431acd054e2f$export$79b2f7037acddd43(children, (child)=>{\n                        child.get(\"node\").hide();\n                    });\n                }\n                if (hierarchyNode.depth < topDepth) dataItem.get(\"node\").hide(0);\n                if (this.get(\"singleBranchOnly\")) this._handleSingle(dataItem);\n            } else this.enableDataItem(dataItem, downDepth);\n            this._root.events.once(\"frameended\", ()=>{\n                this._zoom(dataItem);\n            });\n        }\n    }\n    _zoom(_dataItem) {}\n    _handleSingle(dataItem) {\n        const parent = dataItem.get(\"parent\");\n        if (parent) {\n            const children = parent.get(\"children\");\n            if (children) $2f30431acd054e2f$export$79b2f7037acddd43(children, (child)=>{\n                if (child != dataItem) this.disableDataItem(child);\n            });\n        }\n    }\n    /**\r\n     * Selects specific data item.\r\n     *\r\n     * @param  dataItem  Target data item\r\n     */ selectDataItem(dataItem) {\n        const parent = dataItem.get(\"parent\");\n        const maxDepth = this.getPrivate(\"maxDepth\", 1);\n        if (this.get(\"selectedDataItem\") == dataItem) {\n            if (parent) this.set(\"selectedDataItem\", parent);\n            else {\n                let depth = Math.min(this.get(\"downDepth\", 1), maxDepth - dataItem.get(\"depth\"));\n                if (this._currentDownDepth == depth) depth = Math.min(this.get(\"initialDepth\", 1), maxDepth - this.get(\"topDepth\", 0));\n                this._selectDataItem(dataItem, depth);\n            }\n        } else this.set(\"selectedDataItem\", dataItem);\n    }\n    _makeBullet(dataItem, bulletFunction, index) {\n        const bullet = super._makeBullet(dataItem, bulletFunction, index);\n        if (bullet) {\n            const sprite = bullet.get(\"sprite\");\n            const node = dataItem.get(\"node\");\n            if (sprite) {\n                node.children.push(sprite);\n                node.on(\"width\", ()=>{\n                    this._positionBullet(bullet);\n                });\n                node.on(\"height\", ()=>{\n                    this._positionBullet(bullet);\n                });\n            }\n        }\n        return bullet;\n    }\n    _positionBullet(bullet) {\n        const sprite = bullet.get(\"sprite\");\n        if (sprite) {\n            const dataItem = sprite.dataItem;\n            const locationX = bullet.get(\"locationX\", 0.5);\n            const locationY = bullet.get(\"locationY\", 0.5);\n            const node = dataItem.get(\"node\");\n            sprite.set(\"x\", node.width() * locationX);\n            sprite.set(\"y\", node.height() * locationY);\n        }\n    }\n    /**\r\n     * Triggers hover on a series data item.\r\n     *\r\n     * @since 5.0.7\r\n     * @param  dataItem  Target data item\r\n     */ hoverDataItem(dataItem) {\n        const node = dataItem.get(\"node\");\n        if (node && !node.isHidden()) node.hover();\n    }\n    /**\r\n     * Triggers un-hover on a series data item.\r\n     *\r\n     * @since 5.0.7\r\n     * @param  dataItem  Target data item\r\n     */ unhoverDataItem(dataItem) {\n        const node = dataItem.get(\"node\");\n        if (node) node.unhover();\n    }\n}\nObject.defineProperty($b55f04ee4f1bcfc2$export$b3d5c8408bb86dd8, \"className\", {\n    enumerable: true,\n    configurable: true,\n    writable: true,\n    value: \"Hierarchy\"\n});\nObject.defineProperty($b55f04ee4f1bcfc2$export$b3d5c8408bb86dd8, \"classNames\", {\n    enumerable: true,\n    configurable: true,\n    writable: true,\n    value: (0, $1822b64bd10e2c7e$export$ed28a77b2a3badcf).classNames.concat([\n        $b55f04ee4f1bcfc2$export$b3d5c8408bb86dd8.className\n    ])\n});\n\n\n\n\n\nclass $ad640febdd4b14cd$export$9639a0c046796a48 extends (0, $e78693fd548ad8ce$export$b7ac5ab8f71ba2a) {\n    _afterNew() {\n        super._afterNew();\n        this.states.create(\"disabled\", {});\n        this.states.create(\"hover\", {});\n        this.states.create(\"hoverDisabled\", {});\n    }\n    _updateLinks(duration) {\n        const dataItem = this.dataItem;\n        if (dataItem) {\n            let links = dataItem.get(\"links\");\n            $2f30431acd054e2f$export$79b2f7037acddd43(links, (link)=>{\n                let source = link.get(\"source\");\n                let target = link.get(\"target\");\n                if (source && target) {\n                    if (source.get(\"node\").isHidden() || target.get(\"node\").isHidden()) link.hide(duration);\n                    else link.show(duration);\n                }\n            });\n        }\n    }\n    _prepareChildren() {\n        super._prepareChildren();\n        if (this.isDirty(\"disabled\")) this._updateLinks();\n    }\n    _onHide(duration) {\n        super._onHide(duration);\n        this._updateLinks(duration);\n    }\n    _onShow(duration) {\n        super._onShow(duration);\n        this._updateLinks(duration);\n    }\n}\nObject.defineProperty($ad640febdd4b14cd$export$9639a0c046796a48, \"className\", {\n    enumerable: true,\n    configurable: true,\n    writable: true,\n    value: \"LinkedHierarchyNode\"\n});\nObject.defineProperty($ad640febdd4b14cd$export$9639a0c046796a48, \"classNames\", {\n    enumerable: true,\n    configurable: true,\n    writable: true,\n    value: (0, $e78693fd548ad8ce$export$b7ac5ab8f71ba2a).classNames.concat([\n        $ad640febdd4b14cd$export$9639a0c046796a48.className\n    ])\n});\n\n\n\n\nclass $6e1c2b5547190239$export$bea43d0de37d38af extends (0, $2ffdafbe1fe6a946$export$29d3e417456abdad) {\n    constructor(){\n        super(...arguments);\n        Object.defineProperty(this, \"bullets\", {\n            enumerable: true,\n            configurable: true,\n            writable: true,\n            value: []\n        });\n        Object.defineProperty(this, \"series\", {\n            enumerable: true,\n            configurable: true,\n            writable: true,\n            value: void 0\n        });\n    }\n    _handleBullets(bullets) {\n        $2f30431acd054e2f$export$79b2f7037acddd43(this.bullets, (bullet)=>{\n            bullet.dispose();\n        });\n        bullets.each((bullet)=>{\n            const newBullet = bullet(this._root, this.get(\"source\"), this.get(\"target\"));\n            if (newBullet) {\n                this.bullets.push(newBullet);\n                const sprite = newBullet.get(\"sprite\");\n                this.addDisposer(newBullet.on(\"locationX\", ()=>{\n                    this._clear = true;\n                    this.markDirty();\n                }));\n                if (sprite) {\n                    const series = this.series;\n                    if (series) series.linksContainer.children.push(sprite);\n                }\n            }\n        });\n    }\n    _changed() {\n        var _a, _b;\n        super._changed();\n        if (this._clear) {\n            let source = this.get(\"source\");\n            let target = this.get(\"target\");\n            if (source && target) {\n                const sourceNode = source.get(\"node\");\n                const targetNode = target.get(\"node\");\n                const x0 = sourceNode.x();\n                const y0 = sourceNode.y();\n                const x1 = targetNode.x();\n                const y1 = targetNode.y();\n                this._display.moveTo(x0, y0);\n                this._display.lineTo(x1, y1);\n                const sourceRadius = (_a = sourceNode.dataItem) === null || _a === void 0 ? void 0 : _a.get(\"outerCircle\").get(\"radius\", 0);\n                const targetRadius = (_b = targetNode.dataItem) === null || _b === void 0 ? void 0 : _b.get(\"outerCircle\").get(\"radius\", 0);\n                const distance = Math.hypot(x1 - x0, y1 - y0);\n                const trueDistance = distance - sourceRadius - targetRadius;\n                $2f30431acd054e2f$export$79b2f7037acddd43(this.bullets, (bullet)=>{\n                    const sprite = bullet.get(\"sprite\");\n                    if (sprite) {\n                        const location = bullet.get(\"locationX\", 0.5);\n                        // const tx = trueDistance / distance * (x1 - x0);\n                        // const ty = trueDistance / distance * (y1 - y0);\n                        sprite.set(\"x\", x0 + sourceRadius / distance * (x1 - x0) + trueDistance / distance * (x1 - x0) * location);\n                        sprite.set(\"y\", y0 + sourceRadius / distance * (y1 - y0) + trueDistance / distance * (y1 - y0) * location);\n                        if (bullet.get(\"autoRotate\")) sprite.set(\"rotation\", Math.atan2(y1 - y0, x1 - x0) * 180 / Math.PI + bullet.get(\"autoRotateAngle\", 0));\n                    }\n                });\n            }\n        }\n    }\n    hide(duration) {\n        $2f30431acd054e2f$export$79b2f7037acddd43(this.bullets, (bullet)=>{\n            if (bullet) {\n                const sprite = bullet.get(\"sprite\");\n                if (sprite) sprite.hide(duration);\n            }\n        });\n        return super.hide();\n    }\n    show(duration) {\n        $2f30431acd054e2f$export$79b2f7037acddd43(this.bullets, (bullet)=>{\n            if (bullet) {\n                const sprite = bullet.get(\"sprite\");\n                if (sprite) sprite.show(duration);\n            }\n        });\n        return super.show();\n    }\n    _beforeChanged() {\n        super._beforeChanged();\n        if (this.isDirty(\"source\")) {\n            const source = this.get(\"source\");\n            if (source) {\n                const sourceNode = source.get(\"node\");\n                sourceNode.events.on(\"positionchanged\", ()=>{\n                    this._markDirtyKey(\"stroke\");\n                });\n            }\n        }\n        if (this.isDirty(\"target\")) {\n            const target = this.get(\"target\");\n            if (target) {\n                const targetNode = target.get(\"node\");\n                targetNode.events.on(\"positionchanged\", ()=>{\n                    this._markDirtyKey(\"stroke\");\n                });\n            }\n        }\n    }\n    _dispose() {\n        super._dispose();\n        $2f30431acd054e2f$export$79b2f7037acddd43(this.bullets, (bullet)=>{\n            bullet.dispose();\n        });\n        this.bullets = [];\n    }\n}\nObject.defineProperty($6e1c2b5547190239$export$bea43d0de37d38af, \"className\", {\n    enumerable: true,\n    configurable: true,\n    writable: true,\n    value: \"HierarchyLink\"\n});\nObject.defineProperty($6e1c2b5547190239$export$bea43d0de37d38af, \"classNames\", {\n    enumerable: true,\n    configurable: true,\n    writable: true,\n    value: (0, $2ffdafbe1fe6a946$export$29d3e417456abdad).classNames.concat([\n        $6e1c2b5547190239$export$bea43d0de37d38af.className\n    ])\n});\n\n\n\n\nclass $c9e5ebd848896eae$export$c89a927ffc67e6fa extends (0, $2ffdafbe1fe6a946$export$29d3e417456abdad) {\n    _afterNew() {\n        super._afterNew();\n        this._display.isMeasured = true;\n        this.setPrivateRaw(\"trustBounds\", true);\n    }\n    _beforeChanged() {\n        super._beforeChanged();\n        if (this.isDirty(\"radius\")) this._clear = true;\n    }\n    _changed() {\n        super._changed();\n        if (this._clear) this._display.drawCircle(0, 0, Math.abs(this.get(\"radius\", 10)));\n    }\n}\nObject.defineProperty($c9e5ebd848896eae$export$c89a927ffc67e6fa, \"className\", {\n    enumerable: true,\n    configurable: true,\n    writable: true,\n    value: \"Circle\"\n});\nObject.defineProperty($c9e5ebd848896eae$export$c89a927ffc67e6fa, \"classNames\", {\n    enumerable: true,\n    configurable: true,\n    writable: true,\n    value: (0, $2ffdafbe1fe6a946$export$29d3e417456abdad).classNames.concat([\n        $c9e5ebd848896eae$export$c89a927ffc67e6fa.className\n    ])\n});\n\n\n\n\n\nclass $68fcf793a22eaa10$export$e86869c751ae304d extends (0, $b55f04ee4f1bcfc2$export$b3d5c8408bb86dd8) {\n    constructor(){\n        super(...arguments);\n        Object.defineProperty(this, \"linkBullets\", {\n            enumerable: true,\n            configurable: true,\n            writable: true,\n            value: new (0, $ddd3cfc9bee47cd2$export$54c2e3dc7acea9f5)()\n        });\n        /**\r\n         * A list of nodes in a [[LinkedHierarchy]] chart.\r\n         *\r\n         * @default new ListTemplate<LinkedHierarchyNode>\r\n         */ Object.defineProperty(this, \"nodes\", {\n            enumerable: true,\n            configurable: true,\n            writable: true,\n            value: this.addDisposer(new (0, $ddd3cfc9bee47cd2$export$92d9ebaedf6ba994)((0, $2d9a18dcb72760f7$export$14416b8d99d47caa).new({}), ()=>(0, $ad640febdd4b14cd$export$9639a0c046796a48)._new(this._root, {\n                    themeTags: $05b1b40b69b15016$export$88ad500ef99d1561(this.nodes.template.get(\"themeTags\", []), [\n                        this._tag,\n                        \"linkedhierarchy\",\n                        \"hierarchy\",\n                        \"node\"\n                    ]),\n                    x: this.width() / 2,\n                    y: this.height() / 2\n                }, [\n                    this.nodes.template\n                ])))\n        });\n        /**\r\n         * A list of node circle elements in a [[LinkedHierarchy]] chart.\r\n         *\r\n         * @default new ListTemplate<Circle>\r\n         */ Object.defineProperty(this, \"circles\", {\n            enumerable: true,\n            configurable: true,\n            writable: true,\n            value: this.addDisposer(new (0, $ddd3cfc9bee47cd2$export$92d9ebaedf6ba994)((0, $2d9a18dcb72760f7$export$14416b8d99d47caa).new({}), ()=>(0, $c9e5ebd848896eae$export$c89a927ffc67e6fa)._new(this._root, {\n                    themeTags: $05b1b40b69b15016$export$88ad500ef99d1561(this.circles.template.get(\"themeTags\", []), [\n                        this._tag,\n                        \"shape\"\n                    ])\n                }, [\n                    this.circles.template\n                ])))\n        });\n        /**\r\n         * A list of node outer circle elements in a [[LinkedHierarchy]] chart.\r\n         *\r\n         * @default new ListTemplate<Circle>\r\n         */ Object.defineProperty(this, \"outerCircles\", {\n            enumerable: true,\n            configurable: true,\n            writable: true,\n            value: this.addDisposer(new (0, $ddd3cfc9bee47cd2$export$92d9ebaedf6ba994)((0, $2d9a18dcb72760f7$export$14416b8d99d47caa).new({}), ()=>(0, $c9e5ebd848896eae$export$c89a927ffc67e6fa)._new(this._root, {\n                    themeTags: $05b1b40b69b15016$export$88ad500ef99d1561(this.outerCircles.template.get(\"themeTags\", []), [\n                        this._tag,\n                        \"outer\",\n                        \"shape\"\n                    ])\n                }, [\n                    this.outerCircles.template\n                ])))\n        });\n        /**\r\n         * A list of link elements in a [[LinkedHierarchy]] chart.\r\n         *\r\n         * @default new ListTemplate<HierarchyLink>\r\n         */ Object.defineProperty(this, \"links\", {\n            enumerable: true,\n            configurable: true,\n            writable: true,\n            value: this.addDisposer(new (0, $ddd3cfc9bee47cd2$export$92d9ebaedf6ba994)((0, $2d9a18dcb72760f7$export$14416b8d99d47caa).new({}), ()=>(0, $6e1c2b5547190239$export$bea43d0de37d38af)._new(this._root, {\n                    themeTags: $05b1b40b69b15016$export$88ad500ef99d1561(this.links.template.get(\"themeTags\", []), [\n                        this._tag,\n                        \"linkedhierarchy\",\n                        \"hierarchy\",\n                        \"link\"\n                    ])\n                }, [\n                    this.links.template\n                ])))\n        });\n        /**\r\n         * A [[Container]] that link elements are placed in.\r\n         *\r\n         * @default Container.new()\r\n         */ Object.defineProperty(this, \"linksContainer\", {\n            enumerable: true,\n            configurable: true,\n            writable: true,\n            value: this.children.moveValue((0, $5de502da8a72d65e$export$42a852a2b6b56249).new(this._root, {}), 0)\n        });\n    }\n    _afterNew() {\n        this.fields.push(\"linkWith\", \"x\", \"y\");\n        this._disposers.push(this.linkBullets.events.onAll(()=>{\n            this.links.each((link)=>{\n                link._handleBullets(this.linkBullets);\n            });\n        }));\n        super._afterNew();\n    }\n    /**\r\n     * @ignore\r\n     */ makeNode(dataItem) {\n        const node = super.makeNode(dataItem);\n        const circle = node.children.moveValue(this.circles.make(), 0);\n        this.circles.push(circle);\n        node.setPrivate(\"tooltipTarget\", circle);\n        dataItem.setRaw(\"circle\", circle);\n        const outerCircle = node.children.moveValue(this.outerCircles.make(), 0);\n        this.outerCircles.push(outerCircle);\n        dataItem.setRaw(\"outerCircle\", outerCircle);\n        const label = dataItem.get(\"label\");\n        circle.on(\"radius\", ()=>{\n            const d = circle.get(\"radius\", this.width()) * 2;\n            label.setAll({\n                maxWidth: d,\n                maxHeight: d\n            });\n            outerCircle.set(\"radius\", d / 2);\n            this._handleRadiusChange();\n        });\n        const d = circle.get(\"radius\", this.width()) * 2;\n        label.setAll({\n            maxWidth: d,\n            maxHeight: d\n        });\n        circle._setDataItem(dataItem);\n        outerCircle._setDataItem(dataItem);\n        return node;\n    }\n    _handleRadiusChange() {}\n    processDataItem(dataItem) {\n        dataItem.setRaw(\"childLinks\", []);\n        dataItem.setRaw(\"links\", []);\n        super.processDataItem(dataItem);\n    }\n    _processDataItem(dataItem) {\n        super._processDataItem(dataItem);\n        const parentDataItem = dataItem.get(\"parent\");\n        if (parentDataItem && parentDataItem.get(\"depth\") >= this.get(\"topDepth\")) {\n            const link = this.linkDataItems(parentDataItem, dataItem);\n            dataItem.setRaw(\"parentLink\", link);\n        }\n        const node = dataItem.get(\"node\");\n        this.updateLinkWith(this.dataItems);\n        node._updateLinks(0);\n    }\n    /**\r\n     * @ignore\r\n     */ updateLinkWith(dataItems) {\n        $2f30431acd054e2f$export$79b2f7037acddd43(dataItems, (dataItem)=>{\n            const linkWith = dataItem.get(\"linkWith\");\n            if (linkWith) $2f30431acd054e2f$export$79b2f7037acddd43(linkWith, (id)=>{\n                const linkWithDataItem = this._getDataItemById(this.dataItems, id);\n                if (linkWithDataItem) this.linkDataItems(dataItem, linkWithDataItem);\n            });\n            const children = dataItem.get(\"children\");\n            if (children) this.updateLinkWith(children);\n        });\n    }\n    _getPoint(hierarchyNode) {\n        return {\n            x: hierarchyNode.x,\n            y: hierarchyNode.y\n        };\n    }\n    _animatePositions(dataItem) {\n        const node = dataItem.get(\"node\");\n        const hierarchyNode = dataItem.get(\"d3HierarchyNode\");\n        const point = this._getPoint(hierarchyNode);\n        const duration = this.get(\"animationDuration\", 0);\n        const easing = this.get(\"animationEasing\");\n        node.animate({\n            key: \"x\",\n            to: point.x,\n            duration: duration,\n            easing: easing\n        });\n        node.animate({\n            key: \"y\",\n            to: point.y,\n            duration: duration,\n            easing: easing\n        });\n    }\n    _updateNode(dataItem) {\n        super._updateNode(dataItem);\n        this._animatePositions(dataItem);\n        const hierarchyNode = dataItem.get(\"d3HierarchyNode\");\n        const hierarchyChildren = hierarchyNode.children;\n        if (hierarchyChildren) $2f30431acd054e2f$export$79b2f7037acddd43(hierarchyChildren, (hierarchyChild)=>{\n            this._updateNodes(hierarchyChild);\n        });\n        const fill = dataItem.get(\"fill\");\n        const fillPattern = dataItem.get(\"fillPattern\");\n        const circle = dataItem.get(\"circle\");\n        const children = dataItem.get(\"children\");\n        if (circle) {\n            circle._setDefault(\"fill\", fill);\n            circle._setDefault(\"fillPattern\", fillPattern);\n            circle._setDefault(\"stroke\", fill);\n        }\n        const outerCircle = dataItem.get(\"outerCircle\");\n        if (outerCircle) {\n            outerCircle._setDefault(\"fill\", fill);\n            outerCircle._setDefault(\"stroke\", fill);\n            if (!children || children.length == 0) outerCircle.setPrivate(\"visible\", false);\n            else outerCircle.setPrivate(\"visible\", true);\n        }\n    }\n    /**\r\n     * Link two data items with a link element.\r\n     *\r\n     * @param   source    Source node data item\r\n     * @param   target    Target node data item\r\n     * @param   strength  Link strength\r\n     * @return            Link element\r\n     */ linkDataItems(source, target, strength) {\n        let link;\n        const sourceLinks = source.get(\"links\");\n        if (sourceLinks) $2f30431acd054e2f$export$79b2f7037acddd43(sourceLinks, (lnk)=>{\n            if (lnk.get(\"target\") == target) link = lnk;\n        });\n        const targetLinks = target.get(\"links\");\n        if (targetLinks) $2f30431acd054e2f$export$79b2f7037acddd43(targetLinks, (lnk)=>{\n            if (lnk.get(\"target\") == source) link = lnk;\n        });\n        if (!link) {\n            link = this.links.make();\n            link.series = this;\n            this.links.push(link);\n            this.linksContainer.children.push(link);\n            link.set(\"source\", source);\n            link.set(\"target\", target);\n            link._setDataItem(source);\n            link._handleBullets(this.linkBullets);\n            link.set(\"stroke\", source.get(\"fill\"));\n            if (strength != null) link.set(\"strength\", strength);\n            source.get(\"childLinks\").push(link);\n            $2f30431acd054e2f$export$d947e5f4f4c48d48(source.get(\"links\"), link);\n            $2f30431acd054e2f$export$d947e5f4f4c48d48(target.get(\"links\"), link);\n            this._processLink(link, source, target);\n        }\n        return link;\n    }\n    /**\r\n     * Unlink two linked data items.\r\n     *\r\n     * @param   source  Source node data item\r\n     * @param   target  Target node data item\r\n     */ unlinkDataItems(source, target) {\n        let link;\n        const sourceLinks = source.get(\"links\");\n        if (sourceLinks) $2f30431acd054e2f$export$79b2f7037acddd43(sourceLinks, (lnk)=>{\n            if (lnk && lnk.get(\"target\") == target) {\n                link = lnk;\n                $2f30431acd054e2f$export$cd7f480d6b8286c3(sourceLinks, link);\n            }\n        });\n        const targetLinks = target.get(\"links\");\n        if (targetLinks) $2f30431acd054e2f$export$79b2f7037acddd43(targetLinks, (lnk)=>{\n            if (lnk && lnk.get(\"target\") == source) {\n                link = lnk;\n                $2f30431acd054e2f$export$cd7f480d6b8286c3(targetLinks, link);\n            }\n        });\n        if (link) this._disposeLink(link);\n        this._handleUnlink();\n    }\n    _handleUnlink() {}\n    _disposeLink(link) {\n        this.links.removeValue(link);\n        link.dispose();\n    }\n    /**\r\n     * Returns `true` if two nodes are linked with each other.\r\n     */ areLinked(source, target) {\n        const sourceLinks = source.get(\"links\");\n        let linked = false;\n        if (sourceLinks) $2f30431acd054e2f$export$79b2f7037acddd43(sourceLinks, (lnk)=>{\n            if (lnk.get(\"target\") == target) linked = true;\n        });\n        const targetLinks = target.get(\"links\");\n        if (targetLinks) $2f30431acd054e2f$export$79b2f7037acddd43(targetLinks, (lnk)=>{\n            if (lnk.get(\"target\") == source) linked = true;\n        });\n        return linked;\n    }\n    _processLink(_link, _source, _target) {}\n    /**\r\n     * @ignore\r\n     */ disposeDataItem(dataItem) {\n        super.disposeDataItem(dataItem);\n        const links = dataItem.get(\"links\");\n        if (links) $2f30431acd054e2f$export$79b2f7037acddd43(links, (link)=>{\n            this._disposeLink(link);\n        });\n    }\n    /**\r\n     * Select a data item.\r\n     * @param  dataItem  Data item\r\n     */ selectDataItem(dataItem) {\n        const parent = dataItem.get(\"parent\");\n        if (!dataItem.get(\"disabled\")) this.set(\"selectedDataItem\", dataItem);\n        else if (parent) {\n            this.setRaw(\"selectedDataItem\", parent);\n            const type = \"dataitemselected\";\n            this.events.dispatch(type, {\n                type: type,\n                target: this,\n                dataItem: parent\n            });\n            this.disableDataItem(dataItem);\n        }\n    }\n}\nObject.defineProperty($68fcf793a22eaa10$export$e86869c751ae304d, \"className\", {\n    enumerable: true,\n    configurable: true,\n    writable: true,\n    value: \"LinkedHierarchy\"\n});\nObject.defineProperty($68fcf793a22eaa10$export$e86869c751ae304d, \"classNames\", {\n    enumerable: true,\n    configurable: true,\n    writable: true,\n    value: (0, $b55f04ee4f1bcfc2$export$b3d5c8408bb86dd8).classNames.concat([\n        $68fcf793a22eaa10$export$e86869c751ae304d.className\n    ])\n});\n\n\n\n\n\nfunction $be1b12895c7da8cf$export$2e2bcd8739ae039(d) {\n    const x = +this._x.call(null, d), y = +this._y.call(null, d);\n    return $be1b12895c7da8cf$var$add(this.cover(x, y), x, y, d);\n}\nfunction $be1b12895c7da8cf$var$add(tree, x, y, d) {\n    if (isNaN(x) || isNaN(y)) return tree; // ignore invalid points\n    var parent, node = tree._root, leaf = {\n        data: d\n    }, x0 = tree._x0, y0 = tree._y0, x1 = tree._x1, y1 = tree._y1, xm, ym, xp, yp, right, bottom, i, j;\n    // If the tree is empty, initialize the root as a leaf.\n    if (!node) return tree._root = leaf, tree;\n    // Find the existing leaf for the new point, or add it.\n    while(node.length){\n        if (right = x >= (xm = (x0 + x1) / 2)) x0 = xm;\n        else x1 = xm;\n        if (bottom = y >= (ym = (y0 + y1) / 2)) y0 = ym;\n        else y1 = ym;\n        if (parent = node, !(node = node[i = bottom << 1 | right])) return parent[i] = leaf, tree;\n    }\n    // Is the new point is exactly coincident with the existing point?\n    xp = +tree._x.call(null, node.data);\n    yp = +tree._y.call(null, node.data);\n    if (x === xp && y === yp) return leaf.next = node, parent ? parent[i] = leaf : tree._root = leaf, tree;\n    // Otherwise, split the leaf node until the old and new point are separated.\n    do {\n        parent = parent ? parent[i] = new Array(4) : tree._root = new Array(4);\n        if (right = x >= (xm = (x0 + x1) / 2)) x0 = xm;\n        else x1 = xm;\n        if (bottom = y >= (ym = (y0 + y1) / 2)) y0 = ym;\n        else y1 = ym;\n    }while ((i = bottom << 1 | right) === (j = (yp >= ym) << 1 | xp >= xm));\n    return parent[j] = node, parent[i] = leaf, tree;\n}\nfunction $be1b12895c7da8cf$export$32ed0561867ec8a1(data) {\n    var d, i, n = data.length, x, y, xz = new Array(n), yz = new Array(n), x0 = Infinity, y0 = Infinity, x1 = -Infinity, y1 = -Infinity;\n    // Compute the points and their extent.\n    for(i = 0; i < n; ++i){\n        if (isNaN(x = +this._x.call(null, d = data[i])) || isNaN(y = +this._y.call(null, d))) continue;\n        xz[i] = x;\n        yz[i] = y;\n        if (x < x0) x0 = x;\n        if (x > x1) x1 = x;\n        if (y < y0) y0 = y;\n        if (y > y1) y1 = y;\n    }\n    // If there were no (valid) points, abort.\n    if (x0 > x1 || y0 > y1) return this;\n    // Expand the tree to cover the new points.\n    this.cover(x0, y0).cover(x1, y1);\n    // Add the new points.\n    for(i = 0; i < n; ++i)$be1b12895c7da8cf$var$add(this, xz[i], yz[i], data[i]);\n    return this;\n}\n\n\nfunction $6063f984171c8523$export$2e2bcd8739ae039(x, y) {\n    if (isNaN(x = +x) || isNaN(y = +y)) return this; // ignore invalid points\n    var x0 = this._x0, y0 = this._y0, x1 = this._x1, y1 = this._y1;\n    // If the quadtree has no extent, initialize them.\n    // Integer extent are necessary so that if we later double the extent,\n    // the existing quadrant boundaries don’t change due to floating point error!\n    if (isNaN(x0)) {\n        x1 = (x0 = Math.floor(x)) + 1;\n        y1 = (y0 = Math.floor(y)) + 1;\n    } else {\n        var z = x1 - x0 || 1, node = this._root, parent, i;\n        while(x0 > x || x >= x1 || y0 > y || y >= y1){\n            i = (y < y0) << 1 | x < x0;\n            parent = new Array(4), parent[i] = node, node = parent, z *= 2;\n            switch(i){\n                case 0:\n                    x1 = x0 + z, y1 = y0 + z;\n                    break;\n                case 1:\n                    x0 = x1 - z, y1 = y0 + z;\n                    break;\n                case 2:\n                    x1 = x0 + z, y0 = y1 - z;\n                    break;\n                case 3:\n                    x0 = x1 - z, y0 = y1 - z;\n                    break;\n            }\n        }\n        if (this._root && this._root.length) this._root = node;\n    }\n    this._x0 = x0;\n    this._y0 = y0;\n    this._x1 = x1;\n    this._y1 = y1;\n    return this;\n}\n\n\nfunction $cfd8a0ee53f875c5$export$2e2bcd8739ae039() {\n    var data = [];\n    this.visit(function(node) {\n        if (!node.length) do data.push(node.data);\n        while (node = node.next);\n    });\n    return data;\n}\n\n\nfunction $feddd81cb3a1a5cd$export$2e2bcd8739ae039(_) {\n    return arguments.length ? this.cover(+_[0][0], +_[0][1]).cover(+_[1][0], +_[1][1]) : isNaN(this._x0) ? undefined : [\n        [\n            this._x0,\n            this._y0\n        ],\n        [\n            this._x1,\n            this._y1\n        ]\n    ];\n}\n\n\nfunction $75f49fd5af8d23e7$export$2e2bcd8739ae039(node, x0, y0, x1, y1) {\n    this.node = node;\n    this.x0 = x0;\n    this.y0 = y0;\n    this.x1 = x1;\n    this.y1 = y1;\n}\n\n\nfunction $b7a6a4e6ea4402cb$export$2e2bcd8739ae039(x, y, radius) {\n    var data, x0 = this._x0, y0 = this._y0, x1, y1, x2, y2, x3 = this._x1, y3 = this._y1, quads = [], node = this._root, q, i;\n    if (node) quads.push(new (0, $75f49fd5af8d23e7$export$2e2bcd8739ae039)(node, x0, y0, x3, y3));\n    if (radius == null) radius = Infinity;\n    else {\n        x0 = x - radius, y0 = y - radius;\n        x3 = x + radius, y3 = y + radius;\n        radius *= radius;\n    }\n    while(q = quads.pop()){\n        // Stop searching if this quadrant can’t contain a closer node.\n        if (!(node = q.node) || (x1 = q.x0) > x3 || (y1 = q.y0) > y3 || (x2 = q.x1) < x0 || (y2 = q.y1) < y0) continue;\n        // Bisect the current quadrant.\n        if (node.length) {\n            var xm = (x1 + x2) / 2, ym = (y1 + y2) / 2;\n            quads.push(new (0, $75f49fd5af8d23e7$export$2e2bcd8739ae039)(node[3], xm, ym, x2, y2), new (0, $75f49fd5af8d23e7$export$2e2bcd8739ae039)(node[2], x1, ym, xm, y2), new (0, $75f49fd5af8d23e7$export$2e2bcd8739ae039)(node[1], xm, y1, x2, ym), new (0, $75f49fd5af8d23e7$export$2e2bcd8739ae039)(node[0], x1, y1, xm, ym));\n            // Visit the closest quadrant first.\n            if (i = (y >= ym) << 1 | x >= xm) {\n                q = quads[quads.length - 1];\n                quads[quads.length - 1] = quads[quads.length - 1 - i];\n                quads[quads.length - 1 - i] = q;\n            }\n        } else {\n            var dx = x - +this._x.call(null, node.data), dy = y - +this._y.call(null, node.data), d2 = dx * dx + dy * dy;\n            if (d2 < radius) {\n                var d = Math.sqrt(radius = d2);\n                x0 = x - d, y0 = y - d;\n                x3 = x + d, y3 = y + d;\n                data = node.data;\n            }\n        }\n    }\n    return data;\n}\n\n\nfunction $9ea7286cd6ff459a$export$2e2bcd8739ae039(d) {\n    if (isNaN(x = +this._x.call(null, d)) || isNaN(y = +this._y.call(null, d))) return this; // ignore invalid points\n    var parent, node = this._root, retainer, previous, next, x0 = this._x0, y0 = this._y0, x1 = this._x1, y1 = this._y1, x, y, xm, ym, right, bottom, i, j;\n    // If the tree is empty, initialize the root as a leaf.\n    if (!node) return this;\n    // Find the leaf node for the point.\n    // While descending, also retain the deepest parent with a non-removed sibling.\n    if (node.length) while(true){\n        if (right = x >= (xm = (x0 + x1) / 2)) x0 = xm;\n        else x1 = xm;\n        if (bottom = y >= (ym = (y0 + y1) / 2)) y0 = ym;\n        else y1 = ym;\n        if (!(parent = node, node = node[i = bottom << 1 | right])) return this;\n        if (!node.length) break;\n        if (parent[i + 1 & 3] || parent[i + 2 & 3] || parent[i + 3 & 3]) retainer = parent, j = i;\n    }\n    // Find the point to remove.\n    while(node.data !== d)if (!(previous = node, node = node.next)) return this;\n    if (next = node.next) delete node.next;\n    // If there are multiple coincident points, remove just the point.\n    if (previous) return next ? previous.next = next : delete previous.next, this;\n    // If this is the root point, remove it.\n    if (!parent) return this._root = next, this;\n    // Remove this leaf.\n    next ? parent[i] = next : delete parent[i];\n    // If the parent now contains exactly one leaf, collapse superfluous parents.\n    if ((node = parent[0] || parent[1] || parent[2] || parent[3]) && node === (parent[3] || parent[2] || parent[1] || parent[0]) && !node.length) {\n        if (retainer) retainer[j] = node;\n        else this._root = node;\n    }\n    return this;\n}\nfunction $9ea7286cd6ff459a$export$1cfc7aad5cb1833b(data) {\n    for(var i = 0, n = data.length; i < n; ++i)this.remove(data[i]);\n    return this;\n}\n\n\nfunction $0d9e2b498bba95b5$export$2e2bcd8739ae039() {\n    return this._root;\n}\n\n\nfunction $f92329c600392ac7$export$2e2bcd8739ae039() {\n    var size = 0;\n    this.visit(function(node) {\n        if (!node.length) do ++size;\n        while (node = node.next);\n    });\n    return size;\n}\n\n\n\nfunction $15a5c85e382805ba$export$2e2bcd8739ae039(callback) {\n    var quads = [], q, node = this._root, child, x0, y0, x1, y1;\n    if (node) quads.push(new (0, $75f49fd5af8d23e7$export$2e2bcd8739ae039)(node, this._x0, this._y0, this._x1, this._y1));\n    while(q = quads.pop())if (!callback(node = q.node, x0 = q.x0, y0 = q.y0, x1 = q.x1, y1 = q.y1) && node.length) {\n        var xm = (x0 + x1) / 2, ym = (y0 + y1) / 2;\n        if (child = node[3]) quads.push(new (0, $75f49fd5af8d23e7$export$2e2bcd8739ae039)(child, xm, ym, x1, y1));\n        if (child = node[2]) quads.push(new (0, $75f49fd5af8d23e7$export$2e2bcd8739ae039)(child, x0, ym, xm, y1));\n        if (child = node[1]) quads.push(new (0, $75f49fd5af8d23e7$export$2e2bcd8739ae039)(child, xm, y0, x1, ym));\n        if (child = node[0]) quads.push(new (0, $75f49fd5af8d23e7$export$2e2bcd8739ae039)(child, x0, y0, xm, ym));\n    }\n    return this;\n}\n\n\n\nfunction $9a4dcb6a46603c0e$export$2e2bcd8739ae039(callback) {\n    var quads = [], next = [], q;\n    if (this._root) quads.push(new (0, $75f49fd5af8d23e7$export$2e2bcd8739ae039)(this._root, this._x0, this._y0, this._x1, this._y1));\n    while(q = quads.pop()){\n        var node = q.node;\n        if (node.length) {\n            var child, x0 = q.x0, y0 = q.y0, x1 = q.x1, y1 = q.y1, xm = (x0 + x1) / 2, ym = (y0 + y1) / 2;\n            if (child = node[0]) quads.push(new (0, $75f49fd5af8d23e7$export$2e2bcd8739ae039)(child, x0, y0, xm, ym));\n            if (child = node[1]) quads.push(new (0, $75f49fd5af8d23e7$export$2e2bcd8739ae039)(child, xm, y0, x1, ym));\n            if (child = node[2]) quads.push(new (0, $75f49fd5af8d23e7$export$2e2bcd8739ae039)(child, x0, ym, xm, y1));\n            if (child = node[3]) quads.push(new (0, $75f49fd5af8d23e7$export$2e2bcd8739ae039)(child, xm, ym, x1, y1));\n        }\n        next.push(q);\n    }\n    while(q = next.pop())callback(q.node, q.x0, q.y0, q.x1, q.y1);\n    return this;\n}\n\n\nfunction $e002de94352e4f40$export$e6fafc98131d2a44(d) {\n    return d[0];\n}\nfunction $e002de94352e4f40$export$2e2bcd8739ae039(_) {\n    return arguments.length ? (this._x = _, this) : this._x;\n}\n\n\nfunction $6a00482922687876$export$6f0a21aeb844a64c(d) {\n    return d[1];\n}\nfunction $6a00482922687876$export$2e2bcd8739ae039(_) {\n    return arguments.length ? (this._y = _, this) : this._y;\n}\n\n\nfunction $977cc0295d3f184c$export$2e2bcd8739ae039(nodes, x, y) {\n    var tree = new $977cc0295d3f184c$var$Quadtree(x == null ? (0, $e002de94352e4f40$export$e6fafc98131d2a44) : x, y == null ? (0, $6a00482922687876$export$6f0a21aeb844a64c) : y, NaN, NaN, NaN, NaN);\n    return nodes == null ? tree : tree.addAll(nodes);\n}\nfunction $977cc0295d3f184c$var$Quadtree(x, y, x0, y0, x1, y1) {\n    this._x = x;\n    this._y = y;\n    this._x0 = x0;\n    this._y0 = y0;\n    this._x1 = x1;\n    this._y1 = y1;\n    this._root = undefined;\n}\nfunction $977cc0295d3f184c$var$leaf_copy(leaf) {\n    var copy = {\n        data: leaf.data\n    }, next = copy;\n    while(leaf = leaf.next)next = next.next = {\n        data: leaf.data\n    };\n    return copy;\n}\nvar $977cc0295d3f184c$var$treeProto = $977cc0295d3f184c$export$2e2bcd8739ae039.prototype = $977cc0295d3f184c$var$Quadtree.prototype;\n$977cc0295d3f184c$var$treeProto.copy = function() {\n    var copy = new $977cc0295d3f184c$var$Quadtree(this._x, this._y, this._x0, this._y0, this._x1, this._y1), node = this._root, nodes, child;\n    if (!node) return copy;\n    if (!node.length) return copy._root = $977cc0295d3f184c$var$leaf_copy(node), copy;\n    nodes = [\n        {\n            source: node,\n            target: copy._root = new Array(4)\n        }\n    ];\n    while(node = nodes.pop()){\n        for(var i = 0; i < 4; ++i)if (child = node.source[i]) {\n            if (child.length) nodes.push({\n                source: child,\n                target: node.target[i] = new Array(4)\n            });\n            else node.target[i] = $977cc0295d3f184c$var$leaf_copy(child);\n        }\n    }\n    return copy;\n};\n$977cc0295d3f184c$var$treeProto.add = (0, $be1b12895c7da8cf$export$2e2bcd8739ae039);\n$977cc0295d3f184c$var$treeProto.addAll = (0, $be1b12895c7da8cf$export$32ed0561867ec8a1);\n$977cc0295d3f184c$var$treeProto.cover = (0, $6063f984171c8523$export$2e2bcd8739ae039);\n$977cc0295d3f184c$var$treeProto.data = (0, $cfd8a0ee53f875c5$export$2e2bcd8739ae039);\n$977cc0295d3f184c$var$treeProto.extent = (0, $feddd81cb3a1a5cd$export$2e2bcd8739ae039);\n$977cc0295d3f184c$var$treeProto.find = (0, $b7a6a4e6ea4402cb$export$2e2bcd8739ae039);\n$977cc0295d3f184c$var$treeProto.remove = (0, $9ea7286cd6ff459a$export$2e2bcd8739ae039);\n$977cc0295d3f184c$var$treeProto.removeAll = (0, $9ea7286cd6ff459a$export$1cfc7aad5cb1833b);\n$977cc0295d3f184c$var$treeProto.root = (0, $0d9e2b498bba95b5$export$2e2bcd8739ae039);\n$977cc0295d3f184c$var$treeProto.size = (0, $f92329c600392ac7$export$2e2bcd8739ae039);\n$977cc0295d3f184c$var$treeProto.visit = (0, $15a5c85e382805ba$export$2e2bcd8739ae039);\n$977cc0295d3f184c$var$treeProto.visitAfter = (0, $9a4dcb6a46603c0e$export$2e2bcd8739ae039);\n$977cc0295d3f184c$var$treeProto.x = (0, $e002de94352e4f40$export$2e2bcd8739ae039);\n$977cc0295d3f184c$var$treeProto.y = (0, $6a00482922687876$export$2e2bcd8739ae039);\n\n\nfunction $b10509a5c523ef79$export$2e2bcd8739ae039(x) {\n    return function() {\n        return x;\n    };\n}\n\n\nfunction $2dea4bbaea189065$export$2e2bcd8739ae039(random) {\n    return (random() - 0.5) * 1e-6;\n}\n\n\nfunction $bdd28c4fe1fd882d$var$x(d) {\n    return d.x + d.vx;\n}\nfunction $bdd28c4fe1fd882d$var$y(d) {\n    return d.y + d.vy;\n}\nfunction $bdd28c4fe1fd882d$export$2e2bcd8739ae039(radius) {\n    var nodes, radii, random, strength = 1, iterations = 1;\n    if (typeof radius !== \"function\") radius = (0, $b10509a5c523ef79$export$2e2bcd8739ae039)(radius == null ? 1 : +radius);\n    function force() {\n        var i, n = nodes.length, tree, node, xi, yi, ri, ri2;\n        for(var k = 0; k < iterations; ++k){\n            tree = (0, $977cc0295d3f184c$export$2e2bcd8739ae039)(nodes, $bdd28c4fe1fd882d$var$x, $bdd28c4fe1fd882d$var$y).visitAfter(prepare);\n            for(i = 0; i < n; ++i){\n                node = nodes[i];\n                ri = radii[node.index], ri2 = ri * ri;\n                xi = node.x + node.vx;\n                yi = node.y + node.vy;\n                tree.visit(apply);\n            }\n        }\n        function apply(quad, x0, y0, x1, y1) {\n            var data = quad.data, rj = quad.r, r = ri + rj;\n            if (data) {\n                if (data.index > node.index) {\n                    var x = xi - data.x - data.vx, y = yi - data.y - data.vy, l = x * x + y * y;\n                    if (l < r * r) {\n                        if (x === 0) x = (0, $2dea4bbaea189065$export$2e2bcd8739ae039)(random), l += x * x;\n                        if (y === 0) y = (0, $2dea4bbaea189065$export$2e2bcd8739ae039)(random), l += y * y;\n                        l = (r - (l = Math.sqrt(l))) / l * strength;\n                        node.vx += (x *= l) * (r = (rj *= rj) / (ri2 + rj));\n                        node.vy += (y *= l) * r;\n                        data.vx -= x * (r = 1 - r);\n                        data.vy -= y * r;\n                    }\n                }\n                return;\n            }\n            return x0 > xi + r || x1 < xi - r || y0 > yi + r || y1 < yi - r;\n        }\n    }\n    function prepare(quad) {\n        if (quad.data) return quad.r = radii[quad.data.index];\n        for(var i = quad.r = 0; i < 4; ++i)if (quad[i] && quad[i].r > quad.r) quad.r = quad[i].r;\n    }\n    function initialize() {\n        if (!nodes) return;\n        var i, n = nodes.length, node;\n        radii = new Array(n);\n        for(i = 0; i < n; ++i)node = nodes[i], radii[node.index] = +radius(node, i, nodes);\n    }\n    force.initialize = function(_nodes, _random) {\n        nodes = _nodes;\n        random = _random;\n        initialize();\n    };\n    force.iterations = function(_) {\n        return arguments.length ? (iterations = +_, force) : iterations;\n    };\n    force.strength = function(_) {\n        return arguments.length ? (strength = +_, force) : strength;\n    };\n    force.radius = function(_) {\n        return arguments.length ? (radius = typeof _ === \"function\" ? _ : (0, $b10509a5c523ef79$export$2e2bcd8739ae039)(+_), initialize(), force) : radius;\n    };\n    return force;\n}\n\n\n\nfunction $4275f440a0eccb35$var$index(d) {\n    return d.index;\n}\nfunction $4275f440a0eccb35$var$find(nodeById, nodeId) {\n    var node = nodeById.get(nodeId);\n    if (!node) throw new Error(\"node not found: \" + nodeId);\n    return node;\n}\nfunction $4275f440a0eccb35$export$2e2bcd8739ae039(links) {\n    var id = $4275f440a0eccb35$var$index, strength = defaultStrength, strengths, distance = (0, $b10509a5c523ef79$export$2e2bcd8739ae039)(30), distances, nodes, count, bias, random, iterations = 1;\n    if (links == null) links = [];\n    function defaultStrength(link) {\n        return 1 / Math.min(count[link.source.index], count[link.target.index]);\n    }\n    function force(alpha) {\n        for(var k = 0, n = links.length; k < iterations; ++k)for(var i = 0, link, source, target, x, y, l, b; i < n; ++i){\n            link = links[i], source = link.source, target = link.target;\n            x = target.x + target.vx - source.x - source.vx || (0, $2dea4bbaea189065$export$2e2bcd8739ae039)(random);\n            y = target.y + target.vy - source.y - source.vy || (0, $2dea4bbaea189065$export$2e2bcd8739ae039)(random);\n            l = Math.sqrt(x * x + y * y);\n            l = (l - distances[i]) / l * alpha * strengths[i];\n            x *= l, y *= l;\n            target.vx -= x * (b = bias[i]);\n            target.vy -= y * b;\n            source.vx += x * (b = 1 - b);\n            source.vy += y * b;\n        }\n    }\n    function initialize() {\n        if (!nodes) return;\n        var i, n = nodes.length, m = links.length, nodeById = new Map(nodes.map((d, i)=>[\n                id(d, i, nodes),\n                d\n            ])), link;\n        for(i = 0, count = new Array(n); i < m; ++i){\n            link = links[i], link.index = i;\n            if (typeof link.source !== \"object\") link.source = $4275f440a0eccb35$var$find(nodeById, link.source);\n            if (typeof link.target !== \"object\") link.target = $4275f440a0eccb35$var$find(nodeById, link.target);\n            count[link.source.index] = (count[link.source.index] || 0) + 1;\n            count[link.target.index] = (count[link.target.index] || 0) + 1;\n        }\n        for(i = 0, bias = new Array(m); i < m; ++i)link = links[i], bias[i] = count[link.source.index] / (count[link.source.index] + count[link.target.index]);\n        strengths = new Array(m), initializeStrength();\n        distances = new Array(m), initializeDistance();\n    }\n    function initializeStrength() {\n        if (!nodes) return;\n        for(var i = 0, n = links.length; i < n; ++i)strengths[i] = +strength(links[i], i, links);\n    }\n    function initializeDistance() {\n        if (!nodes) return;\n        for(var i = 0, n = links.length; i < n; ++i)distances[i] = +distance(links[i], i, links);\n    }\n    force.initialize = function(_nodes, _random) {\n        nodes = _nodes;\n        random = _random;\n        initialize();\n    };\n    force.links = function(_) {\n        return arguments.length ? (links = _, initialize(), force) : links;\n    };\n    force.id = function(_) {\n        return arguments.length ? (id = _, force) : id;\n    };\n    force.iterations = function(_) {\n        return arguments.length ? (iterations = +_, force) : iterations;\n    };\n    force.strength = function(_) {\n        return arguments.length ? (strength = typeof _ === \"function\" ? _ : (0, $b10509a5c523ef79$export$2e2bcd8739ae039)(+_), initializeStrength(), force) : strength;\n    };\n    force.distance = function(_) {\n        return arguments.length ? (distance = typeof _ === \"function\" ? _ : (0, $b10509a5c523ef79$export$2e2bcd8739ae039)(+_), initializeDistance(), force) : distance;\n    };\n    return force;\n}\n\n\n\n\nvar $7c4cf709d1826294$var$noop = {\n    value: ()=>{}\n};\nfunction $7c4cf709d1826294$var$dispatch() {\n    for(var i = 0, n = arguments.length, _ = {}, t; i < n; ++i){\n        if (!(t = arguments[i] + \"\") || t in _ || /[\\s.]/.test(t)) throw new Error(\"illegal type: \" + t);\n        _[t] = [];\n    }\n    return new $7c4cf709d1826294$var$Dispatch(_);\n}\nfunction $7c4cf709d1826294$var$Dispatch(_) {\n    this._ = _;\n}\nfunction $7c4cf709d1826294$var$parseTypenames(typenames, types) {\n    return typenames.trim().split(/^|\\s+/).map(function(t) {\n        var name = \"\", i = t.indexOf(\".\");\n        if (i >= 0) name = t.slice(i + 1), t = t.slice(0, i);\n        if (t && !types.hasOwnProperty(t)) throw new Error(\"unknown type: \" + t);\n        return {\n            type: t,\n            name: name\n        };\n    });\n}\n$7c4cf709d1826294$var$Dispatch.prototype = $7c4cf709d1826294$var$dispatch.prototype = {\n    constructor: $7c4cf709d1826294$var$Dispatch,\n    on: function(typename, callback) {\n        var _ = this._, T = $7c4cf709d1826294$var$parseTypenames(typename + \"\", _), t, i = -1, n = T.length;\n        // If no callback was specified, return the callback of the given type and name.\n        if (arguments.length < 2) {\n            while(++i < n)if ((t = (typename = T[i]).type) && (t = $7c4cf709d1826294$var$get(_[t], typename.name))) return t;\n            return;\n        }\n        // If a type was specified, set the callback for the given type and name.\n        // Otherwise, if a null callback was specified, remove callbacks of the given name.\n        if (callback != null && typeof callback !== \"function\") throw new Error(\"invalid callback: \" + callback);\n        while(++i < n){\n            if (t = (typename = T[i]).type) _[t] = $7c4cf709d1826294$var$set(_[t], typename.name, callback);\n            else if (callback == null) for(t in _)_[t] = $7c4cf709d1826294$var$set(_[t], typename.name, null);\n        }\n        return this;\n    },\n    copy: function() {\n        var copy = {}, _ = this._;\n        for(var t in _)copy[t] = _[t].slice();\n        return new $7c4cf709d1826294$var$Dispatch(copy);\n    },\n    call: function(type, that) {\n        if ((n = arguments.length - 2) > 0) for(var args = new Array(n), i = 0, n, t; i < n; ++i)args[i] = arguments[i + 2];\n        if (!this._.hasOwnProperty(type)) throw new Error(\"unknown type: \" + type);\n        for(t = this._[type], i = 0, n = t.length; i < n; ++i)t[i].value.apply(that, args);\n    },\n    apply: function(type, that, args) {\n        if (!this._.hasOwnProperty(type)) throw new Error(\"unknown type: \" + type);\n        for(var t = this._[type], i = 0, n = t.length; i < n; ++i)t[i].value.apply(that, args);\n    }\n};\nfunction $7c4cf709d1826294$var$get(type, name) {\n    for(var i = 0, n = type.length, c; i < n; ++i){\n        if ((c = type[i]).name === name) return c.value;\n    }\n}\nfunction $7c4cf709d1826294$var$set(type, name, callback) {\n    for(var i = 0, n = type.length; i < n; ++i)if (type[i].name === name) {\n        type[i] = $7c4cf709d1826294$var$noop, type = type.slice(0, i).concat(type.slice(i + 1));\n        break;\n    }\n    if (callback != null) type.push({\n        name: name,\n        value: callback\n    });\n    return type;\n}\nvar $7c4cf709d1826294$export$2e2bcd8739ae039 = $7c4cf709d1826294$var$dispatch;\n\n\nvar $e782289d8bd71451$var$frame = 0, $e782289d8bd71451$var$timeout = 0, $e782289d8bd71451$var$interval = 0, $e782289d8bd71451$var$pokeDelay = 1000, $e782289d8bd71451$var$taskHead, $e782289d8bd71451$var$taskTail, $e782289d8bd71451$var$clockLast = 0, $e782289d8bd71451$var$clockNow = 0, $e782289d8bd71451$var$clockSkew = 0, $e782289d8bd71451$var$clock = typeof performance === \"object\" && performance.now ? performance : Date, $e782289d8bd71451$var$setFrame = typeof window === \"object\" && window.requestAnimationFrame ? window.requestAnimationFrame.bind(window) : function(f) {\n    setTimeout(f, 17);\n};\nfunction $e782289d8bd71451$export$461939dd4422153() {\n    return $e782289d8bd71451$var$clockNow || ($e782289d8bd71451$var$setFrame($e782289d8bd71451$var$clearNow), $e782289d8bd71451$var$clockNow = $e782289d8bd71451$var$clock.now() + $e782289d8bd71451$var$clockSkew);\n}\nfunction $e782289d8bd71451$var$clearNow() {\n    $e782289d8bd71451$var$clockNow = 0;\n}\nfunction $e782289d8bd71451$export$c57e9b2d8b9e4de() {\n    this._call = this._time = this._next = null;\n}\n$e782289d8bd71451$export$c57e9b2d8b9e4de.prototype = $e782289d8bd71451$export$9dc4ecf953986f04.prototype = {\n    constructor: $e782289d8bd71451$export$c57e9b2d8b9e4de,\n    restart: function(callback, delay, time) {\n        if (typeof callback !== \"function\") throw new TypeError(\"callback is not a function\");\n        time = (time == null ? $e782289d8bd71451$export$461939dd4422153() : +time) + (delay == null ? 0 : +delay);\n        if (!this._next && $e782289d8bd71451$var$taskTail !== this) {\n            if ($e782289d8bd71451$var$taskTail) $e782289d8bd71451$var$taskTail._next = this;\n            else $e782289d8bd71451$var$taskHead = this;\n            $e782289d8bd71451$var$taskTail = this;\n        }\n        this._call = callback;\n        this._time = time;\n        $e782289d8bd71451$var$sleep();\n    },\n    stop: function() {\n        if (this._call) {\n            this._call = null;\n            this._time = Infinity;\n            $e782289d8bd71451$var$sleep();\n        }\n    }\n};\nfunction $e782289d8bd71451$export$9dc4ecf953986f04(callback, delay, time) {\n    var t = new $e782289d8bd71451$export$c57e9b2d8b9e4de;\n    t.restart(callback, delay, time);\n    return t;\n}\nfunction $e782289d8bd71451$export$d60154c1d7f3990e() {\n    $e782289d8bd71451$export$461939dd4422153(); // Get the current time, if not already set.\n    ++$e782289d8bd71451$var$frame; // Pretend we’ve set an alarm, if we haven’t already.\n    var t = $e782289d8bd71451$var$taskHead, e;\n    while(t){\n        if ((e = $e782289d8bd71451$var$clockNow - t._time) >= 0) t._call.call(undefined, e);\n        t = t._next;\n    }\n    --$e782289d8bd71451$var$frame;\n}\nfunction $e782289d8bd71451$var$wake() {\n    $e782289d8bd71451$var$clockNow = ($e782289d8bd71451$var$clockLast = $e782289d8bd71451$var$clock.now()) + $e782289d8bd71451$var$clockSkew;\n    $e782289d8bd71451$var$frame = $e782289d8bd71451$var$timeout = 0;\n    try {\n        $e782289d8bd71451$export$d60154c1d7f3990e();\n    } finally{\n        $e782289d8bd71451$var$frame = 0;\n        $e782289d8bd71451$var$nap();\n        $e782289d8bd71451$var$clockNow = 0;\n    }\n}\nfunction $e782289d8bd71451$var$poke() {\n    var now = $e782289d8bd71451$var$clock.now(), delay = now - $e782289d8bd71451$var$clockLast;\n    if (delay > $e782289d8bd71451$var$pokeDelay) $e782289d8bd71451$var$clockSkew -= delay, $e782289d8bd71451$var$clockLast = now;\n}\nfunction $e782289d8bd71451$var$nap() {\n    var t0, t1 = $e782289d8bd71451$var$taskHead, t2, time = Infinity;\n    while(t1)if (t1._call) {\n        if (time > t1._time) time = t1._time;\n        t0 = t1, t1 = t1._next;\n    } else {\n        t2 = t1._next, t1._next = null;\n        t1 = t0 ? t0._next = t2 : $e782289d8bd71451$var$taskHead = t2;\n    }\n    $e782289d8bd71451$var$taskTail = t0;\n    $e782289d8bd71451$var$sleep(time);\n}\nfunction $e782289d8bd71451$var$sleep(time) {\n    if ($e782289d8bd71451$var$frame) return; // Soonest alarm already set, or will be.\n    if ($e782289d8bd71451$var$timeout) $e782289d8bd71451$var$timeout = clearTimeout($e782289d8bd71451$var$timeout);\n    var delay = time - $e782289d8bd71451$var$clockNow; // Strictly less than if we recomputed clockNow.\n    if (delay > 24) {\n        if (time < Infinity) $e782289d8bd71451$var$timeout = setTimeout($e782289d8bd71451$var$wake, time - $e782289d8bd71451$var$clock.now() - $e782289d8bd71451$var$clockSkew);\n        if ($e782289d8bd71451$var$interval) $e782289d8bd71451$var$interval = clearInterval($e782289d8bd71451$var$interval);\n    } else {\n        if (!$e782289d8bd71451$var$interval) $e782289d8bd71451$var$clockLast = $e782289d8bd71451$var$clock.now(), $e782289d8bd71451$var$interval = setInterval($e782289d8bd71451$var$poke, $e782289d8bd71451$var$pokeDelay);\n        $e782289d8bd71451$var$frame = 1, $e782289d8bd71451$var$setFrame($e782289d8bd71451$var$wake);\n    }\n}\n\n\n// https://en.wikipedia.org/wiki/Linear_congruential_generator#Parameters_in_common_use\nconst $2a41329dd990bdd6$var$a = 1664525;\nconst $2a41329dd990bdd6$var$c = 1013904223;\nconst $2a41329dd990bdd6$var$m = 4294967296; // 2^32\nfunction $2a41329dd990bdd6$export$2e2bcd8739ae039() {\n    let s = 1;\n    return ()=>(s = ($2a41329dd990bdd6$var$a * s + $2a41329dd990bdd6$var$c) % $2a41329dd990bdd6$var$m) / $2a41329dd990bdd6$var$m;\n}\n\n\nfunction $f7ecda670cf68ae1$export$d141bba7fdc215a3(d) {\n    return d.x;\n}\nfunction $f7ecda670cf68ae1$export$4a5767248b18ef41(d) {\n    return d.y;\n}\nvar $f7ecda670cf68ae1$var$initialRadius = 10, $f7ecda670cf68ae1$var$initialAngle = Math.PI * (3 - Math.sqrt(5));\nfunction $f7ecda670cf68ae1$export$2e2bcd8739ae039(nodes) {\n    var simulation, alpha = 1, alphaMin = 0.001, alphaDecay = 1 - Math.pow(alphaMin, 1 / 300), alphaTarget = 0, velocityDecay = 0.6, forces = new Map(), stepper = (0, $e782289d8bd71451$export$9dc4ecf953986f04)(step), event = (0, $7c4cf709d1826294$export$2e2bcd8739ae039)(\"tick\", \"end\"), random = (0, $2a41329dd990bdd6$export$2e2bcd8739ae039)();\n    if (nodes == null) nodes = [];\n    function step() {\n        tick();\n        event.call(\"tick\", simulation);\n        if (alpha < alphaMin) {\n            stepper.stop();\n            event.call(\"end\", simulation);\n        }\n    }\n    function tick(iterations) {\n        var i, n = nodes.length, node;\n        if (iterations === undefined) iterations = 1;\n        for(var k = 0; k < iterations; ++k){\n            alpha += (alphaTarget - alpha) * alphaDecay;\n            forces.forEach(function(force) {\n                force(alpha);\n            });\n            for(i = 0; i < n; ++i){\n                node = nodes[i];\n                if (node.fx == null) node.x += node.vx *= velocityDecay;\n                else node.x = node.fx, node.vx = 0;\n                if (node.fy == null) node.y += node.vy *= velocityDecay;\n                else node.y = node.fy, node.vy = 0;\n            }\n        }\n        return simulation;\n    }\n    function initializeNodes() {\n        for(var i = 0, n = nodes.length, node; i < n; ++i){\n            node = nodes[i], node.index = i;\n            if (node.fx != null) node.x = node.fx;\n            if (node.fy != null) node.y = node.fy;\n            if (isNaN(node.x) || isNaN(node.y)) {\n                var radius = $f7ecda670cf68ae1$var$initialRadius * Math.sqrt(0.5 + i), angle = i * $f7ecda670cf68ae1$var$initialAngle;\n                node.x = radius * Math.cos(angle);\n                node.y = radius * Math.sin(angle);\n            }\n            if (isNaN(node.vx) || isNaN(node.vy)) node.vx = node.vy = 0;\n        }\n    }\n    function initializeForce(force) {\n        if (force.initialize) force.initialize(nodes, random);\n        return force;\n    }\n    initializeNodes();\n    return simulation = {\n        tick: tick,\n        restart: function() {\n            return stepper.restart(step), simulation;\n        },\n        stop: function() {\n            return stepper.stop(), simulation;\n        },\n        nodes: function(_) {\n            return arguments.length ? (nodes = _, initializeNodes(), forces.forEach(initializeForce), simulation) : nodes;\n        },\n        alpha: function(_) {\n            return arguments.length ? (alpha = +_, simulation) : alpha;\n        },\n        alphaMin: function(_) {\n            return arguments.length ? (alphaMin = +_, simulation) : alphaMin;\n        },\n        alphaDecay: function(_) {\n            return arguments.length ? (alphaDecay = +_, simulation) : +alphaDecay;\n        },\n        alphaTarget: function(_) {\n            return arguments.length ? (alphaTarget = +_, simulation) : alphaTarget;\n        },\n        velocityDecay: function(_) {\n            return arguments.length ? (velocityDecay = 1 - _, simulation) : 1 - velocityDecay;\n        },\n        randomSource: function(_) {\n            return arguments.length ? (random = _, forces.forEach(initializeForce), simulation) : random;\n        },\n        force: function(name, _) {\n            return arguments.length > 1 ? (_ == null ? forces.delete(name) : forces.set(name, initializeForce(_)), simulation) : forces.get(name);\n        },\n        find: function(x, y, radius) {\n            var i = 0, n = nodes.length, dx, dy, d2, node, closest;\n            if (radius == null) radius = Infinity;\n            else radius *= radius;\n            for(i = 0; i < n; ++i){\n                node = nodes[i];\n                dx = x - node.x;\n                dy = y - node.y;\n                d2 = dx * dx + dy * dy;\n                if (d2 < radius) closest = node, radius = d2;\n            }\n            return closest;\n        },\n        on: function(name, _) {\n            return arguments.length > 1 ? (event.on(name, _), simulation) : event.on(name);\n        }\n    };\n}\n\n\nfunction $6b6e9bc7f2e1a0ee$export$2e2bcd8739ae039() {\n    var nodes, node, random, alpha, strength = (0, $b10509a5c523ef79$export$2e2bcd8739ae039)(-30), strengths, distanceMin2 = 1, distanceMax2 = Infinity, theta2 = 0.81;\n    function force(_) {\n        var i, n = nodes.length, tree = (0, $977cc0295d3f184c$export$2e2bcd8739ae039)(nodes, (0, $f7ecda670cf68ae1$export$d141bba7fdc215a3), (0, $f7ecda670cf68ae1$export$4a5767248b18ef41)).visitAfter(accumulate);\n        for(alpha = _, i = 0; i < n; ++i)node = nodes[i], tree.visit(apply);\n    }\n    function initialize() {\n        if (!nodes) return;\n        var i, n = nodes.length, node;\n        strengths = new Array(n);\n        for(i = 0; i < n; ++i)node = nodes[i], strengths[node.index] = +strength(node, i, nodes);\n    }\n    function accumulate(quad) {\n        var strength = 0, q, c, weight = 0, x, y, i;\n        // For internal nodes, accumulate forces from child quadrants.\n        if (quad.length) {\n            for(x = y = i = 0; i < 4; ++i)if ((q = quad[i]) && (c = Math.abs(q.value))) strength += q.value, weight += c, x += c * q.x, y += c * q.y;\n            quad.x = x / weight;\n            quad.y = y / weight;\n        } else {\n            q = quad;\n            q.x = q.data.x;\n            q.y = q.data.y;\n            do strength += strengths[q.data.index];\n            while (q = q.next);\n        }\n        quad.value = strength;\n    }\n    function apply(quad, x1, _, x2) {\n        if (!quad.value) return true;\n        var x = quad.x - node.x, y = quad.y - node.y, w = x2 - x1, l = x * x + y * y;\n        // Apply the Barnes-Hut approximation if possible.\n        // Limit forces for very close nodes; randomize direction if coincident.\n        if (w * w / theta2 < l) {\n            if (l < distanceMax2) {\n                if (x === 0) x = (0, $2dea4bbaea189065$export$2e2bcd8739ae039)(random), l += x * x;\n                if (y === 0) y = (0, $2dea4bbaea189065$export$2e2bcd8739ae039)(random), l += y * y;\n                if (l < distanceMin2) l = Math.sqrt(distanceMin2 * l);\n                node.vx += x * quad.value * alpha / l;\n                node.vy += y * quad.value * alpha / l;\n            }\n            return true;\n        } else if (quad.length || l >= distanceMax2) return;\n        // Limit forces for very close nodes; randomize direction if coincident.\n        if (quad.data !== node || quad.next) {\n            if (x === 0) x = (0, $2dea4bbaea189065$export$2e2bcd8739ae039)(random), l += x * x;\n            if (y === 0) y = (0, $2dea4bbaea189065$export$2e2bcd8739ae039)(random), l += y * y;\n            if (l < distanceMin2) l = Math.sqrt(distanceMin2 * l);\n        }\n        do if (quad.data !== node) {\n            w = strengths[quad.data.index] * alpha / l;\n            node.vx += x * w;\n            node.vy += y * w;\n        }\n        while (quad = quad.next);\n    }\n    force.initialize = function(_nodes, _random) {\n        nodes = _nodes;\n        random = _random;\n        initialize();\n    };\n    force.strength = function(_) {\n        return arguments.length ? (strength = typeof _ === \"function\" ? _ : (0, $b10509a5c523ef79$export$2e2bcd8739ae039)(+_), initialize(), force) : strength;\n    };\n    force.distanceMin = function(_) {\n        return arguments.length ? (distanceMin2 = _ * _, force) : Math.sqrt(distanceMin2);\n    };\n    force.distanceMax = function(_) {\n        return arguments.length ? (distanceMax2 = _ * _, force) : Math.sqrt(distanceMax2);\n    };\n    force.theta = function(_) {\n        return arguments.length ? (theta2 = _ * _, force) : Math.sqrt(theta2);\n    };\n    return force;\n}\n\n\nfunction $0269baf63e02b6fc$export$2e2bcd8739ae039(x) {\n    var strength = (0, $b10509a5c523ef79$export$2e2bcd8739ae039)(0.1), nodes, strengths, xz;\n    if (typeof x !== \"function\") x = (0, $b10509a5c523ef79$export$2e2bcd8739ae039)(x == null ? 0 : +x);\n    function force(alpha) {\n        for(var i = 0, n = nodes.length, node; i < n; ++i)node = nodes[i], node.vx += (xz[i] - node.x) * strengths[i] * alpha;\n    }\n    function initialize() {\n        if (!nodes) return;\n        var i, n = nodes.length;\n        strengths = new Array(n);\n        xz = new Array(n);\n        for(i = 0; i < n; ++i)strengths[i] = isNaN(xz[i] = +x(nodes[i], i, nodes)) ? 0 : +strength(nodes[i], i, nodes);\n    }\n    force.initialize = function(_) {\n        nodes = _;\n        initialize();\n    };\n    force.strength = function(_) {\n        return arguments.length ? (strength = typeof _ === \"function\" ? _ : (0, $b10509a5c523ef79$export$2e2bcd8739ae039)(+_), initialize(), force) : strength;\n    };\n    force.x = function(_) {\n        return arguments.length ? (x = typeof _ === \"function\" ? _ : (0, $b10509a5c523ef79$export$2e2bcd8739ae039)(+_), initialize(), force) : x;\n    };\n    return force;\n}\n\n\nfunction $a8abf7da4ed52888$export$2e2bcd8739ae039(y) {\n    var strength = (0, $b10509a5c523ef79$export$2e2bcd8739ae039)(0.1), nodes, strengths, yz;\n    if (typeof y !== \"function\") y = (0, $b10509a5c523ef79$export$2e2bcd8739ae039)(y == null ? 0 : +y);\n    function force(alpha) {\n        for(var i = 0, n = nodes.length, node; i < n; ++i)node = nodes[i], node.vy += (yz[i] - node.y) * strengths[i] * alpha;\n    }\n    function initialize() {\n        if (!nodes) return;\n        var i, n = nodes.length;\n        strengths = new Array(n);\n        yz = new Array(n);\n        for(i = 0; i < n; ++i)strengths[i] = isNaN(yz[i] = +y(nodes[i], i, nodes)) ? 0 : +strength(nodes[i], i, nodes);\n    }\n    force.initialize = function(_) {\n        nodes = _;\n        initialize();\n    };\n    force.strength = function(_) {\n        return arguments.length ? (strength = typeof _ === \"function\" ? _ : (0, $b10509a5c523ef79$export$2e2bcd8739ae039)(+_), initialize(), force) : strength;\n    };\n    force.y = function(_) {\n        return arguments.length ? (y = typeof _ === \"function\" ? _ : (0, $b10509a5c523ef79$export$2e2bcd8739ae039)(+_), initialize(), force) : y;\n    };\n    return force;\n}\n\n\nclass $5c4a8cfe9c121e62$export$4ec66944d398f662 extends (0, $68fcf793a22eaa10$export$e86869c751ae304d) {\n    constructor(){\n        super(...arguments);\n        Object.defineProperty(this, \"_tag\", {\n            enumerable: true,\n            configurable: true,\n            writable: true,\n            value: \"forcedirected\"\n        });\n        /**\r\n         * @ignore\r\n         */ Object.defineProperty(this, \"d3forceSimulation\", {\n            enumerable: true,\n            configurable: true,\n            writable: true,\n            value: $f7ecda670cf68ae1$export$2e2bcd8739ae039()\n        });\n        /**\r\n         * @ignore\r\n         */ Object.defineProperty(this, \"collisionForce\", {\n            enumerable: true,\n            configurable: true,\n            writable: true,\n            value: $bdd28c4fe1fd882d$export$2e2bcd8739ae039(20)\n        });\n        /**\r\n         * @ignore\r\n         */ Object.defineProperty(this, \"linkForce\", {\n            enumerable: true,\n            configurable: true,\n            writable: true,\n            value: $4275f440a0eccb35$export$2e2bcd8739ae039()\n        });\n        Object.defineProperty(this, \"_nodes\", {\n            enumerable: true,\n            configurable: true,\n            writable: true,\n            value: []\n        });\n        Object.defineProperty(this, \"_links\", {\n            enumerable: true,\n            configurable: true,\n            writable: true,\n            value: []\n        });\n        Object.defineProperty(this, \"_tick\", {\n            enumerable: true,\n            configurable: true,\n            writable: true,\n            value: 0\n        });\n        Object.defineProperty(this, \"_nodesDirty\", {\n            enumerable: true,\n            configurable: true,\n            writable: true,\n            value: false\n        });\n    }\n    _afterNew() {\n        super._afterNew();\n        this.d3forceSimulation.on(\"tick\", ()=>{\n            this._tick++;\n            this.updateNodePositions();\n        });\n    }\n    _prepareChildren() {\n        super._prepareChildren();\n        if (this.isDirty(\"showOnFrame\")) {\n            const showOnFrame = this.get(\"showOnFrame\");\n            if (showOnFrame > this._tick) {\n                this.nodesContainer.setPrivate(\"visible\", false);\n                this.linksContainer.setPrivate(\"visible\", false);\n            }\n        }\n        const d3forceSimulation = this.d3forceSimulation;\n        if (this.isDirty(\"velocityDecay\")) d3forceSimulation.velocityDecay(this.get(\"velocityDecay\", 0));\n        if (this.isDirty(\"initialFrames\")) d3forceSimulation.alphaDecay(1 - Math.pow(0.001, 1 / this.get(\"initialFrames\", 500)));\n    }\n    /**\r\n     * @ignore\r\n     */ restartSimulation(alpha) {\n        const d3forceSimulation = this.d3forceSimulation;\n        if (d3forceSimulation.alpha() < .25) {\n            d3forceSimulation.alpha(alpha);\n            d3forceSimulation.restart();\n        }\n    }\n    _handleRadiusChange() {\n        this._updateForces();\n    }\n    processDataItem(dataItem) {\n        const d3ForceNode = {\n            index: this._index,\n            x: this.innerWidth() / 2,\n            y: this.innerHeight() / 2,\n            dataItem: dataItem\n        };\n        const index = this._nodes.push(d3ForceNode) - 1;\n        d3ForceNode.index = index;\n        this.d3forceSimulation.nodes(this._nodes);\n        dataItem.set(\"d3ForceNode\", d3ForceNode);\n        super.processDataItem(dataItem);\n        const node = dataItem.get(\"node\");\n        node.set(\"x\", -10000);\n        node.on(\"scale\", ()=>{\n            this._updateForces();\n        });\n        node.events.on(\"dragged\", ()=>{\n            d3ForceNode.fx = node.x();\n            d3ForceNode.fy = node.y();\n            this._updateForces();\n        });\n        node.events.on(\"dragstop\", ()=>{\n            if (dataItem.get(\"x\") == null) d3ForceNode.fx = undefined;\n            if (dataItem.get(\"y\") == null) d3ForceNode.fy = undefined;\n        });\n    }\n    _updateValues(d3HierarchyNode) {\n        super._updateValues(d3HierarchyNode);\n        this._nodesDirty = true;\n        const d3forceSimulation = this.d3forceSimulation;\n        d3forceSimulation.force(\"collision\", this.collisionForce);\n        d3forceSimulation.nodes(this._nodes);\n        this.linkForce = $4275f440a0eccb35$export$2e2bcd8739ae039(this._links);\n        d3forceSimulation.force(\"link\", this.linkForce);\n    }\n    _updateVisuals() {\n        super._updateVisuals();\n        this.restartSimulation(.3);\n    }\n    _updateChildren() {\n        super._updateChildren();\n        const d3forceSimulation = this.d3forceSimulation;\n        if (this._sizeDirty) {\n            let w = Math.max(50, this.innerWidth());\n            let h = Math.max(50, this.innerHeight());\n            let pt = this.get(\"paddingTop\", 0);\n            let pl = this.get(\"paddingLeft\", 0);\n            let centerStrength = this.get(\"centerStrength\", 1);\n            d3forceSimulation.force(\"x\", $0269baf63e02b6fc$export$2e2bcd8739ae039().x(w / 2 + pl).strength(centerStrength * 100 / w));\n            d3forceSimulation.force(\"y\", $a8abf7da4ed52888$export$2e2bcd8739ae039().y(h / 2 + pt).strength(centerStrength * 100 / h));\n        }\n        if (this._nodesDirty) this._updateForces();\n    }\n    _updateForces() {\n        const d3forceSimulation = this.d3forceSimulation;\n        d3forceSimulation.force(\"manybody\", $6b6e9bc7f2e1a0ee$export$2e2bcd8739ae039().strength((d3node)=>{\n            let dataItem = d3node.dataItem;\n            let node = dataItem.get(\"node\");\n            let circle = dataItem.get(\"circle\");\n            let manyBodyStrength = this.get(\"manyBodyStrength\", -15);\n            if (circle) return circle.get(\"radius\", 1) * node.get(\"scale\", 1) * manyBodyStrength;\n            return 0;\n        }));\n        this.collisionForce.radius((d3node)=>{\n            let dataItem = d3node.dataItem;\n            let node = dataItem.get(\"node\");\n            let circle = dataItem.get(\"circle\");\n            let outerCircle = dataItem.get(\"outerCircle\");\n            if (circle && outerCircle) {\n                let radius = circle.get(\"radius\", 1);\n                if (!outerCircle.isHidden()) radius = radius * outerCircle.get(\"scale\", 1.1);\n                radius *= node.get(\"scale\", 1);\n                return radius + this.get(\"nodePadding\", 0);\n            }\n        });\n        this.restartSimulation(0.3);\n    }\n    _animatePositions(_dataItem) {\n    // void, do not remove\n    }\n    _clearDirty() {\n        super._clearDirty();\n        this._nodesDirty = false;\n    }\n    /**\r\n     * @ignore\r\n     */ updateNodePositions() {\n        const linkForce = this.linkForce;\n        if (linkForce) {\n            linkForce.distance((linkDatum)=>{\n                return this.getDistance(linkDatum);\n            });\n            linkForce.strength((linkDatum)=>{\n                return this.getStrength(linkDatum);\n            });\n        }\n        if (this._tick == this.get(\"showOnFrame\")) {\n            this.nodesContainer.setPrivate(\"visible\", true);\n            this.linksContainer.setPrivate(\"visible\", true);\n        }\n        let d3Nodes = this.d3forceSimulation.nodes();\n        $2f30431acd054e2f$export$79b2f7037acddd43(d3Nodes, (d3Node)=>{\n            const dataItem = d3Node.dataItem;\n            const node = dataItem.get(\"node\");\n            node.set(\"x\", d3Node.x);\n            node.set(\"y\", d3Node.y);\n        });\n    }\n    /**\r\n     * @ignore\r\n     */ updateLinkWith(dataItems) {\n        $2f30431acd054e2f$export$79b2f7037acddd43(dataItems, (dataItem)=>{\n            const linkWith = dataItem.get(\"linkWith\");\n            if (linkWith) $2f30431acd054e2f$export$79b2f7037acddd43(linkWith, (id)=>{\n                const linkWithDataItem = this._getDataItemById(this.dataItems, id);\n                if (linkWithDataItem) this.linkDataItems(dataItem, linkWithDataItem, this.get(\"linkWithStrength\"));\n            });\n            const children = dataItem.get(\"children\");\n            if (children) this.updateLinkWith(children);\n        });\n    }\n    /**\r\n     * @ignore\r\n     */ getDistance(linkDatum) {\n        let sourceDataItem = linkDatum.sourceDataItem;\n        let targetDataItem = linkDatum.targetDataItem;\n        let distance = 0;\n        if (sourceDataItem && targetDataItem) {\n            const targetNode = targetDataItem.get(\"node\");\n            if (targetNode.isHidden()) return 0;\n            let link = linkDatum.link;\n            if (link) distance = link.get(\"distance\", 1);\n            const sourceNode = sourceDataItem.get(\"node\");\n            if (targetNode.isHidden()) distance = 1;\n            return distance * (sourceDataItem.get(\"circle\").get(\"radius\", 1) * sourceNode.get(\"scale\", 1) + targetDataItem.get(\"circle\").get(\"radius\", 1) * targetNode.get(\"scale\", 1));\n        }\n        return distance;\n    }\n    /**\r\n     * @ignore\r\n     */ getStrength(linkDatum) {\n        let strength = 0;\n        let link = linkDatum.link;\n        if (link) strength = link.get(\"strength\", 1);\n        const targetDataItem = linkDatum.targetDataItem;\n        strength *= targetDataItem.get(\"node\").get(\"scale\");\n        return strength;\n    }\n    _updateNode(dataItem) {\n        super._updateNode(dataItem);\n        this._updateRadius(dataItem);\n        const x = dataItem.get(\"x\");\n        const y = dataItem.get(\"y\");\n        const d3Node = dataItem.get(\"d3ForceNode\");\n        if (x != null) d3Node.fx = $05b1b40b69b15016$export$302dfacf2b0a56fe(x, this.innerWidth());\n        else d3Node.fx = undefined;\n        if (y != null) d3Node.fy = $05b1b40b69b15016$export$302dfacf2b0a56fe(y, this.innerHeight());\n        else d3Node.fx = undefined;\n    }\n    _updateRadius(dataItem) {\n        let size = (this.innerWidth() + this.innerHeight()) / 2;\n        let minRadius = $05b1b40b69b15016$export$302dfacf2b0a56fe(this.get(\"minRadius\", 1), size);\n        let maxRadius = $05b1b40b69b15016$export$302dfacf2b0a56fe(this.get(\"maxRadius\", 5), size);\n        let valueWorking = dataItem.get(\"sum\");\n        let radius = maxRadius;\n        const min = this.getPrivate(\"valueLow\", 0);\n        const max = this.getPrivate(\"valueHigh\", 0);\n        if (max > 0) radius = minRadius + (valueWorking - min) / (max - min) * (maxRadius - minRadius);\n        if (!$f63bdea45a89cf24$export$7e4aa119212bc614(radius)) radius = minRadius;\n        const duration = this.get(\"animationDuration\", 0);\n        const easing = this.get(\"animationEasing\");\n        dataItem.get(\"circle\").animate({\n            key: \"radius\",\n            to: radius,\n            duration: duration,\n            easing: easing\n        });\n    }\n    _processLink(link, source, target) {\n        const d3Link = {\n            link: link,\n            source: source.get(\"d3ForceNode\").index,\n            target: target.get(\"d3ForceNode\").index,\n            sourceDataItem: source,\n            targetDataItem: target\n        };\n        this._links.push(d3Link);\n        link.setPrivate(\"d3Link\", d3Link);\n        this.linkForce = $4275f440a0eccb35$export$2e2bcd8739ae039(this._links);\n        this.d3forceSimulation.force(\"link\", this.linkForce);\n        this.restartSimulation(0.5);\n    }\n    _disposeLink(link) {\n        super._disposeLink(link);\n        $2f30431acd054e2f$export$cd7f480d6b8286c3(this._links, link.getPrivate(\"d3Link\"));\n    }\n    _handleUnlink() {\n        this.restartSimulation(0.5);\n    }\n    _onDataClear() {\n        super._onDataClear();\n        this._nodes = [];\n        this._links = [];\n    }\n}\nObject.defineProperty($5c4a8cfe9c121e62$export$4ec66944d398f662, \"className\", {\n    enumerable: true,\n    configurable: true,\n    writable: true,\n    value: \"ForceDirected\"\n});\nObject.defineProperty($5c4a8cfe9c121e62$export$4ec66944d398f662, \"classNames\", {\n    enumerable: true,\n    configurable: true,\n    writable: true,\n    value: (0, $68fcf793a22eaa10$export$e86869c751ae304d).classNames.concat([\n        $5c4a8cfe9c121e62$export$4ec66944d398f662.className\n    ])\n});\n\n\n\nclass $494ee18a07f9d214$export$5711c0e6e21f0015 extends (0, $a953e95d35d4141a$export$14faa19a0f3bbeb2) {\n    setupDefaultRules() {\n        super.setupDefaultRules();\n        this.rule(\"Component\").setAll({\n            interpolationDuration: 600\n        });\n        this.rule(\"Hierarchy\").set(\"animationDuration\", 600);\n        this.rule(\"Scrollbar\").set(\"animationDuration\", 600);\n        this.rule(\"Tooltip\").set(\"animationDuration\", 300);\n        this.rule(\"MapChart\").set(\"animationDuration\", 1000);\n        this.rule(\"MapChart\").set(\"wheelDuration\", 300);\n        this.rule(\"Entity\").setAll({\n            stateAnimationDuration: 600\n        });\n        this.rule(\"Sprite\").states.create(\"default\", {\n            stateAnimationDuration: 600\n        });\n        this.rule(\"Tooltip\", [\n            \"axis\"\n        ]).setAll({\n            animationDuration: 200\n        });\n        this.rule(\"WordCloud\").set(\"animationDuration\", 500);\n        this.rule(\"Polygon\").set(\"animationDuration\", 600);\n        this.rule(\"ArcDiagram\").set(\"animationDuration\", 600);\n    }\n}\n\n\nvar $9d25110d47889dc5$export$2e2bcd8739ae039 = (0, $494ee18a07f9d214$export$5711c0e6e21f0015);\n\n\nnew (0, (/*@__PURE__*/$parcel$interopDefault($634f9492ccea7012$exports)))('#typewriter', {\n    strings: [\n        'Ciao!',\n        'I\\'m Rinos and I\\'m a Developer'\n    ],\n    autoStart: true\n});\n// set chartdiv width and height to 100%\ndocument.getElementById(\"chartdiv\").style.width = \"100%\";\ndocument.getElementById(\"chartdiv\").style.height = document.documentElement.clientHeight + \"px\";\n/* Chart code */ // Create root element\n// https://www.amcharts.com/docs/v5/getting-started/#Root_element\nlet $e73bf42412feb220$var$root = $7803fe0a06c1ef65$export$be92b6f5f03c0fe9.new(\"chartdiv\");\n// Set themes\n// https://www.amcharts.com/docs/v5/concepts/themes/\n$e73bf42412feb220$var$root.setThemes([\n    (0, $9d25110d47889dc5$export$2e2bcd8739ae039).new($e73bf42412feb220$var$root)\n]);\n// Create wrapper container\nlet $e73bf42412feb220$var$container = $e73bf42412feb220$var$root.container.children.push($5de502da8a72d65e$export$42a852a2b6b56249.new($e73bf42412feb220$var$root, {\n    width: $bd0d0c10fd30006b$export$626336c2cd4b14de(100),\n    height: $bd0d0c10fd30006b$export$626336c2cd4b14de(100),\n    layout: $e73bf42412feb220$var$root.verticalLayout\n}));\nlet $e73bf42412feb220$var$zoomableContainer = $e73bf42412feb220$var$root.container.children.push($7b05e1e856aa7465$export$8a1414ab037091f9.new($e73bf42412feb220$var$root, {\n    width: $bd0d0c10fd30006b$export$46342ea78d85883c,\n    height: $bd0d0c10fd30006b$export$46342ea78d85883c,\n    wheelable: true,\n    pinchZoom: true\n}));\nlet $e73bf42412feb220$var$zoomTools = $e73bf42412feb220$var$zoomableContainer.children.push($910a40cf2e953cca$export$ba5a51be6dbb03bd.new($e73bf42412feb220$var$root, {\n    target: $e73bf42412feb220$var$zoomableContainer\n}));\n// Create series\n// https://www.amcharts.com/docs/v5/charts/hierarchy/#Adding\nlet $e73bf42412feb220$var$series = $e73bf42412feb220$var$zoomableContainer.contents.children.push($5c4a8cfe9c121e62$export$4ec66944d398f662.new($e73bf42412feb220$var$root, {\n    maskContent: false,\n    singleBranchOnly: false,\n    downDepth: 1,\n    initialDepth: 2,\n    valueField: \"value\",\n    categoryField: \"name\",\n    childDataField: \"children\",\n    centerStrength: 0.5\n}));\n// Generate and set data\n// https://www.amcharts.com/docs/v5/charts/hierarchy/#Setting_data\nlet $e73bf42412feb220$var$data = {\n    name: \"Rinose\",\n    children: [\n        {\n            name: \"WEB\",\n            value: 50,\n            children: [\n                {\n                    name: \"HTML\",\n                    value: 10\n                },\n                {\n                    name: \"CSS\",\n                    value: 10\n                },\n                {\n                    name: \"JS\",\n                    value: 50\n                },\n                {\n                    name: \"PHP\",\n                    value: 10\n                },\n                {\n                    name: \"PYTHON\",\n                    value: 50\n                }\n            ]\n        },\n        {\n            name: \"SYS\",\n            value: 30\n        },\n        {\n            name: \"CLOUD\",\n            value: 30,\n            children: [\n                {\n                    name: \"AWS\",\n                    value: 50\n                },\n                {\n                    name: \"AZURE\",\n                    value: 10\n                },\n                {\n                    name: \"GCP\",\n                    value: 50\n                }\n            ]\n        },\n        {\n            name: \"DB\",\n            value: 30,\n            children: [\n                {\n                    name: \"MYSQL\",\n                    value: 50\n                },\n                {\n                    name: \"MONGODB\",\n                    value: 10\n                },\n                {\n                    name: \"POSTGRESQL\",\n                    value: 80\n                },\n                {\n                    name: \"SQLITE\",\n                    value: 50\n                },\n                {\n                    name: \"ORACLE\",\n                    value: 20\n                }\n            ]\n        },\n        {\n            name: \"CODE\",\n            value: 50,\n            children: [\n                {\n                    name: \"JAVA\",\n                    value: 10\n                },\n                {\n                    name: \"C++\",\n                    value: 50\n                },\n                {\n                    name: \"PYTHON\",\n                    value: 50\n                },\n                {\n                    name: \"SWIFT\",\n                    value: 50\n                },\n                {\n                    name: \"KOTLIN\",\n                    value: 10\n                },\n                {\n                    name: \"GO\",\n                    value: 50\n                }\n            ]\n        }\n    ]\n};\n$e73bf42412feb220$var$series.data.setAll([\n    $e73bf42412feb220$var$data\n]);\n$e73bf42412feb220$var$series.set(\"selectedDataItem\", $e73bf42412feb220$var$series.dataItems[0]);\n// Make stuff animate on load\n$e73bf42412feb220$var$series.appear(1000, 100);\n\n\n//# sourceMappingURL=index.32410ad5.js.map\n","\nimport Typewriter from 'typewriter-effect/dist/core';\nimport * as am5 from \"@amcharts/amcharts5\";\nimport * as am5hierarchy from \"@amcharts/amcharts5/hierarchy\";\nimport am5themes_Animated from \"@amcharts/amcharts5/themes/Animated\";\n\n\nnew Typewriter('#typewriter', {\n  strings: ['Ciao!', 'I\\'m Rinos and I\\'m a Developer'],\n  autoStart: true,\n});\n\n\n// set chartdiv width and height to 100%\ndocument.getElementById(\"chartdiv\").style.width = \"100%\";\ndocument.getElementById(\"chartdiv\").style.height = document.documentElement.clientHeight + \"px\";\n\n\n/* Chart code */\n// Create root element\n// https://www.amcharts.com/docs/v5/getting-started/#Root_element\nlet root = am5.Root.new(\"chartdiv\");\n\n\n// Set themes\n// https://www.amcharts.com/docs/v5/concepts/themes/\nroot.setThemes([\n  am5themes_Animated.new(root)\n]);\n\n\n// Create wrapper container\nlet container = root.container.children.push(am5.Container.new(root, {\n  width: am5.percent(100),\n  height: am5.percent(100),\n  layout: root.verticalLayout\n}));\n\n\nlet zoomableContainer = root.container.children.push(\n  am5.ZoomableContainer.new(root, {\n    width: am5.p100,\n    height: am5.p100,\n    wheelable: true,\n    pinchZoom: true\n  })\n);\n\nlet zoomTools = zoomableContainer.children.push(am5.ZoomTools.new(root, {\n  target: zoomableContainer\n}));\n\n// Create series\n// https://www.amcharts.com/docs/v5/charts/hierarchy/#Adding\nlet series = zoomableContainer.contents.children.push(am5hierarchy.ForceDirected.new(root, {\n  maskContent:false, //!important with zoomable containers\n  singleBranchOnly: false,\n  downDepth: 1,\n  initialDepth: 2,\n  valueField: \"value\",\n  categoryField: \"name\",\n  childDataField: \"children\",\n  centerStrength: 0.5\n}));\n\n\n// Generate and set data\n// https://www.amcharts.com/docs/v5/charts/hierarchy/#Setting_data\n\nlet data = {\n  name: \"Rinose\",\n  children: [{\n      name: \"WEB\",\n      value: 50,\n      children: [{\n          name: \"HTML\",\n          value: 10\n        },\n        {\n          name: \"CSS\",\n          value: 10\n        },\n        {\n          name: \"JS\",\n          value: 50\n        },\n        {\n          name: \"PHP\",\n          value: 10\n        },\n        {\n          name: \"PYTHON\",\n          value: 50\n        }\n      ]\n    },\n    {\n      name: \"SYS\",\n      value: 30\n    },\n    {\n      name: \"CLOUD\",\n      value: 30,\n      children: [{\n          name: \"AWS\",\n          value: 50\n        },\n        {\n          name: \"AZURE\",\n          value: 10\n        },\n        {\n          name: \"GCP\",\n          value: 50\n        }\n      ]\n    },\n    {\n      name: \"DB\",\n      value: 30,\n      children: [{\n          name: \"MYSQL\",\n          value: 50\n        },\n        {\n          name: \"MONGODB\",\n          value: 10\n        },\n        {\n          name: \"POSTGRESQL\",\n          value: 80\n        },\n        {\n          name: \"SQLITE\",\n          value: 50\n        },\n        {\n          name: \"ORACLE\",\n          value: 20\n        }\n      ]\n    },\n    {\n      name: \"CODE\",\n      value: 50,\n      children: [{\n          name: \"JAVA\",\n          value: 10\n        },\n        {\n          name: \"C++\",\n          value: 50\n        },\n        {\n          name: \"PYTHON\",\n          value: 50\n        },\n        {\n          name: \"SWIFT\",\n          value: 50\n        },\n        {\n          name: \"KOTLIN\",\n          value: 10\n        },\n        {\n          name: \"GO\",\n          value: 50\n        },\n      ]\n    }\n  ]\n}\n\n\nseries.data.setAll([data]);\nseries.set(\"selectedDataItem\", series.dataItems[0]);\n\n\n\n// Make stuff animate on load\nseries.appear(1000, 100);","!function(e,t){\"object\"==typeof exports&&\"object\"==typeof module?module.exports=t():\"function\"==typeof define&&define.amd?define(\"Typewriter\",[],t):\"object\"==typeof exports?exports.Typewriter=t():e.Typewriter=t()}(\"undefined\"!=typeof self?self:this,(()=>(()=>{var e={75:function(e){(function(){var t,n,r,o,a,i;\"undefined\"!=typeof performance&&null!==performance&&performance.now?e.exports=function(){return performance.now()}:\"undefined\"!=typeof process&&null!==process&&process.hrtime?(e.exports=function(){return(t()-a)/1e6},n=process.hrtime,o=(t=function(){var e;return 1e9*(e=n())[0]+e[1]})(),i=1e9*process.uptime(),a=o-i):Date.now?(e.exports=function(){return Date.now()-r},r=Date.now()):(e.exports=function(){return(new Date).getTime()-r},r=(new Date).getTime())}).call(this)},4087:(e,t,n)=>{for(var r=n(75),o=\"undefined\"==typeof window?n.g:window,a=[\"moz\",\"webkit\"],i=\"AnimationFrame\",s=o[\"request\"+i],u=o[\"cancel\"+i]||o[\"cancelRequest\"+i],l=0;!s&&l<a.length;l++)s=o[a[l]+\"Request\"+i],u=o[a[l]+\"Cancel\"+i]||o[a[l]+\"CancelRequest\"+i];if(!s||!u){var c=0,p=0,d=[];s=function(e){if(0===d.length){var t=r(),n=Math.max(0,16.666666666666668-(t-c));c=n+t,setTimeout((function(){var e=d.slice(0);d.length=0;for(var t=0;t<e.length;t++)if(!e[t].cancelled)try{e[t].callback(c)}catch(e){setTimeout((function(){throw e}),0)}}),Math.round(n))}return d.push({handle:++p,callback:e,cancelled:!1}),p},u=function(e){for(var t=0;t<d.length;t++)d[t].handle===e&&(d[t].cancelled=!0)}}e.exports=function(e){return s.call(o,e)},e.exports.cancel=function(){u.apply(o,arguments)},e.exports.polyfill=function(e){e||(e=o),e.requestAnimationFrame=s,e.cancelAnimationFrame=u}}},t={};function n(r){var o=t[r];if(void 0!==o)return o.exports;var a=t[r]={exports:{}};return e[r].call(a.exports,a,a.exports,n),a.exports}n.n=e=>{var t=e&&e.__esModule?()=>e.default:()=>e;return n.d(t,{a:t}),t},n.d=(e,t)=>{for(var r in t)n.o(t,r)&&!n.o(e,r)&&Object.defineProperty(e,r,{enumerable:!0,get:t[r]})},n.g=function(){if(\"object\"==typeof globalThis)return globalThis;try{return this||new Function(\"return this\")()}catch(e){if(\"object\"==typeof window)return window}}(),n.o=(e,t)=>Object.prototype.hasOwnProperty.call(e,t);var r={};return(()=>{\"use strict\";n.d(r,{default:()=>C});var e=n(4087),t=n.n(e);const o=function(e){return new RegExp(/<[a-z][\\s\\S]*>/i).test(e)},a=function(e,t){return Math.floor(Math.random()*(t-e+1))+e};var i=\"TYPE_CHARACTER\",s=\"REMOVE_CHARACTER\",u=\"REMOVE_ALL\",l=\"REMOVE_LAST_VISIBLE_NODE\",c=\"PAUSE_FOR\",p=\"CALL_FUNCTION\",d=\"ADD_HTML_TAG_ELEMENT\",f=\"CHANGE_DELETE_SPEED\",v=\"CHANGE_DELAY\",h=\"CHANGE_CURSOR\",m=\"PASTE_STRING\",y=\"HTML_TAG\";function g(e){return g=\"function\"==typeof Symbol&&\"symbol\"==typeof Symbol.iterator?function(e){return typeof e}:function(e){return e&&\"function\"==typeof Symbol&&e.constructor===Symbol&&e!==Symbol.prototype?\"symbol\":typeof e},g(e)}function E(e,t){var n=Object.keys(e);if(Object.getOwnPropertySymbols){var r=Object.getOwnPropertySymbols(e);t&&(r=r.filter((function(t){return Object.getOwnPropertyDescriptor(e,t).enumerable}))),n.push.apply(n,r)}return n}function w(e){for(var t=1;t<arguments.length;t++){var n=null!=arguments[t]?arguments[t]:{};t%2?E(Object(n),!0).forEach((function(t){A(e,t,n[t])})):Object.getOwnPropertyDescriptors?Object.defineProperties(e,Object.getOwnPropertyDescriptors(n)):E(Object(n)).forEach((function(t){Object.defineProperty(e,t,Object.getOwnPropertyDescriptor(n,t))}))}return e}function b(e){return function(e){if(Array.isArray(e))return T(e)}(e)||function(e){if(\"undefined\"!=typeof Symbol&&null!=e[Symbol.iterator]||null!=e[\"@@iterator\"])return Array.from(e)}(e)||function(e,t){if(e){if(\"string\"==typeof e)return T(e,t);var n=Object.prototype.toString.call(e).slice(8,-1);return\"Object\"===n&&e.constructor&&(n=e.constructor.name),\"Map\"===n||\"Set\"===n?Array.from(e):\"Arguments\"===n||/^(?:Ui|I)nt(?:8|16|32)(?:Clamped)?Array$/.test(n)?T(e,t):void 0}}(e)||function(){throw new TypeError(\"Invalid attempt to spread non-iterable instance.\\nIn order to be iterable, non-array objects must have a [Symbol.iterator]() method.\")}()}function T(e,t){(null==t||t>e.length)&&(t=e.length);for(var n=0,r=new Array(t);n<t;n++)r[n]=e[n];return r}function S(e,t){for(var n=0;n<t.length;n++){var r=t[n];r.enumerable=r.enumerable||!1,r.configurable=!0,\"value\"in r&&(r.writable=!0),Object.defineProperty(e,N(r.key),r)}}function A(e,t,n){return(t=N(t))in e?Object.defineProperty(e,t,{value:n,enumerable:!0,configurable:!0,writable:!0}):e[t]=n,e}function N(e){var t=function(e,t){if(\"object\"!==g(e)||null===e)return e;var n=e[Symbol.toPrimitive];if(void 0!==n){var r=n.call(e,\"string\");if(\"object\"!==g(r))return r;throw new TypeError(\"@@toPrimitive must return a primitive value.\")}return String(e)}(e);return\"symbol\"===g(t)?t:String(t)}const C=function(){function n(r,g){var E=this;if(function(e,t){if(!(e instanceof t))throw new TypeError(\"Cannot call a class as a function\")}(this,n),A(this,\"state\",{cursorAnimation:null,lastFrameTime:null,pauseUntil:null,eventQueue:[],eventLoop:null,eventLoopPaused:!1,reverseCalledEvents:[],calledEvents:[],visibleNodes:[],initialOptions:null,elements:{container:null,wrapper:document.createElement(\"span\"),cursor:document.createElement(\"span\")}}),A(this,\"options\",{strings:null,cursor:\"|\",delay:\"natural\",pauseFor:1500,deleteSpeed:\"natural\",loop:!1,autoStart:!1,devMode:!1,skipAddStyles:!1,wrapperClassName:\"Typewriter__wrapper\",cursorClassName:\"Typewriter__cursor\",stringSplitter:null,onCreateTextNode:null,onRemoveNode:null}),A(this,\"setupWrapperElement\",(function(){E.state.elements.container&&(E.state.elements.wrapper.className=E.options.wrapperClassName,E.state.elements.cursor.className=E.options.cursorClassName,E.state.elements.cursor.innerHTML=E.options.cursor,E.state.elements.container.innerHTML=\"\",E.state.elements.container.appendChild(E.state.elements.wrapper),E.state.elements.container.appendChild(E.state.elements.cursor))})),A(this,\"start\",(function(){return E.state.eventLoopPaused=!1,E.runEventLoop(),E})),A(this,\"pause\",(function(){return E.state.eventLoopPaused=!0,E})),A(this,\"stop\",(function(){return E.state.eventLoop&&((0,e.cancel)(E.state.eventLoop),E.state.eventLoop=null),E})),A(this,\"pauseFor\",(function(e){return E.addEventToQueue(c,{ms:e}),E})),A(this,\"typeOutAllStrings\",(function(){return\"string\"==typeof E.options.strings?(E.typeString(E.options.strings).pauseFor(E.options.pauseFor),E):(E.options.strings.forEach((function(e){E.typeString(e).pauseFor(E.options.pauseFor).deleteAll(E.options.deleteSpeed)})),E)})),A(this,\"typeString\",(function(e){var t=arguments.length>1&&void 0!==arguments[1]?arguments[1]:null;if(o(e))return E.typeOutHTMLString(e,t);if(e){var n=(E.options||{}).stringSplitter,r=\"function\"==typeof n?n(e):e.split(\"\");E.typeCharacters(r,t)}return E})),A(this,\"pasteString\",(function(e){var t=arguments.length>1&&void 0!==arguments[1]?arguments[1]:null;return o(e)?E.typeOutHTMLString(e,t,!0):(e&&E.addEventToQueue(m,{character:e,node:t}),E)})),A(this,\"typeOutHTMLString\",(function(e){var t=arguments.length>1&&void 0!==arguments[1]?arguments[1]:null,n=arguments.length>2?arguments[2]:void 0,r=function(e){var t=document.createElement(\"div\");return t.innerHTML=e,t.childNodes}(e);if(r.length>0)for(var o=0;o<r.length;o++){var a=r[o],i=a.innerHTML;a&&3!==a.nodeType?(a.innerHTML=\"\",E.addEventToQueue(d,{node:a,parentNode:t}),n?E.pasteString(i,a):E.typeString(i,a)):a.textContent&&(n?E.pasteString(a.textContent,t):E.typeString(a.textContent,t))}return E})),A(this,\"deleteAll\",(function(){var e=arguments.length>0&&void 0!==arguments[0]?arguments[0]:\"natural\";return E.addEventToQueue(u,{speed:e}),E})),A(this,\"changeDeleteSpeed\",(function(e){if(!e)throw new Error(\"Must provide new delete speed\");return E.addEventToQueue(f,{speed:e}),E})),A(this,\"changeDelay\",(function(e){if(!e)throw new Error(\"Must provide new delay\");return E.addEventToQueue(v,{delay:e}),E})),A(this,\"changeCursor\",(function(e){if(!e)throw new Error(\"Must provide new cursor\");return E.addEventToQueue(h,{cursor:e}),E})),A(this,\"deleteChars\",(function(e){if(!e)throw new Error(\"Must provide amount of characters to delete\");for(var t=0;t<e;t++)E.addEventToQueue(s);return E})),A(this,\"callFunction\",(function(e,t){if(!e||\"function\"!=typeof e)throw new Error(\"Callback must be a function\");return E.addEventToQueue(p,{cb:e,thisArg:t}),E})),A(this,\"typeCharacters\",(function(e){var t=arguments.length>1&&void 0!==arguments[1]?arguments[1]:null;if(!e||!Array.isArray(e))throw new Error(\"Characters must be an array\");return e.forEach((function(e){E.addEventToQueue(i,{character:e,node:t})})),E})),A(this,\"removeCharacters\",(function(e){if(!e||!Array.isArray(e))throw new Error(\"Characters must be an array\");return e.forEach((function(){E.addEventToQueue(s)})),E})),A(this,\"addEventToQueue\",(function(e,t){var n=arguments.length>2&&void 0!==arguments[2]&&arguments[2];return E.addEventToStateProperty(e,t,n,\"eventQueue\")})),A(this,\"addReverseCalledEvent\",(function(e,t){var n=arguments.length>2&&void 0!==arguments[2]&&arguments[2];return E.options.loop?E.addEventToStateProperty(e,t,n,\"reverseCalledEvents\"):E})),A(this,\"addEventToStateProperty\",(function(e,t){var n=arguments.length>2&&void 0!==arguments[2]&&arguments[2],r=arguments.length>3?arguments[3]:void 0,o={eventName:e,eventArgs:t||{}};return E.state[r]=n?[o].concat(b(E.state[r])):[].concat(b(E.state[r]),[o]),E})),A(this,\"runEventLoop\",(function(){E.state.lastFrameTime||(E.state.lastFrameTime=Date.now());var e=Date.now(),n=e-E.state.lastFrameTime;if(!E.state.eventQueue.length){if(!E.options.loop)return;E.state.eventQueue=b(E.state.calledEvents),E.state.calledEvents=[],E.options=w({},E.state.initialOptions)}if(E.state.eventLoop=t()(E.runEventLoop),!E.state.eventLoopPaused){if(E.state.pauseUntil){if(e<E.state.pauseUntil)return;E.state.pauseUntil=null}var r,o=b(E.state.eventQueue),g=o.shift();if(!(n<=(r=g.eventName===l||g.eventName===s?\"natural\"===E.options.deleteSpeed?a(40,80):E.options.deleteSpeed:\"natural\"===E.options.delay?a(120,160):E.options.delay))){var T=g.eventName,S=g.eventArgs;switch(E.logInDevMode({currentEvent:g,state:E.state,delay:r}),T){case m:case i:var A=S.character,N=S.node,C=document.createTextNode(A),_=C;E.options.onCreateTextNode&&\"function\"==typeof E.options.onCreateTextNode&&(_=E.options.onCreateTextNode(A,C)),_&&(N?N.appendChild(_):E.state.elements.wrapper.appendChild(_)),E.state.visibleNodes=[].concat(b(E.state.visibleNodes),[{type:\"TEXT_NODE\",character:A,node:_}]);break;case s:o.unshift({eventName:l,eventArgs:{removingCharacterNode:!0}});break;case c:var O=g.eventArgs.ms;E.state.pauseUntil=Date.now()+parseInt(O);break;case p:var L=g.eventArgs,D=L.cb,M=L.thisArg;D.call(M,{elements:E.state.elements});break;case d:var x=g.eventArgs,P=x.node,j=x.parentNode;j?j.appendChild(P):E.state.elements.wrapper.appendChild(P),E.state.visibleNodes=[].concat(b(E.state.visibleNodes),[{type:y,node:P,parentNode:j||E.state.elements.wrapper}]);break;case u:var R=E.state.visibleNodes,k=S.speed,Q=[];k&&Q.push({eventName:f,eventArgs:{speed:k,temp:!0}});for(var F=0,H=R.length;F<H;F++)Q.push({eventName:l,eventArgs:{removingCharacterNode:!1}});k&&Q.push({eventName:f,eventArgs:{speed:E.options.deleteSpeed,temp:!0}}),o.unshift.apply(o,Q);break;case l:var I=g.eventArgs.removingCharacterNode;if(E.state.visibleNodes.length){var U=E.state.visibleNodes.pop(),q=U.type,G=U.node,Y=U.character;E.options.onRemoveNode&&\"function\"==typeof E.options.onRemoveNode&&E.options.onRemoveNode({node:G,character:Y}),G&&G.parentNode.removeChild(G),q===y&&I&&o.unshift({eventName:l,eventArgs:{}})}break;case f:E.options.deleteSpeed=g.eventArgs.speed;break;case v:E.options.delay=g.eventArgs.delay;break;case h:E.options.cursor=g.eventArgs.cursor,E.state.elements.cursor.innerHTML=g.eventArgs.cursor}E.options.loop&&(g.eventName===l||g.eventArgs&&g.eventArgs.temp||(E.state.calledEvents=[].concat(b(E.state.calledEvents),[g]))),E.state.eventQueue=o,E.state.lastFrameTime=e}}})),r)if(\"string\"==typeof r){var T=document.querySelector(r);if(!T)throw new Error(\"Could not find container element\");this.state.elements.container=T}else this.state.elements.container=r;g&&(this.options=w(w({},this.options),g)),this.state.initialOptions=w({},this.options),this.init()}var r,g;return r=n,(g=[{key:\"init\",value:function(){var e,t;this.setupWrapperElement(),this.addEventToQueue(h,{cursor:this.options.cursor},!0),this.addEventToQueue(u,null,!0),!window||window.___TYPEWRITER_JS_STYLES_ADDED___||this.options.skipAddStyles||(e=\".Typewriter__cursor{-webkit-animation:Typewriter-cursor 1s infinite;animation:Typewriter-cursor 1s infinite;margin-left:1px}@-webkit-keyframes Typewriter-cursor{0%{opacity:0}50%{opacity:1}100%{opacity:0}}@keyframes Typewriter-cursor{0%{opacity:0}50%{opacity:1}100%{opacity:0}}\",(t=document.createElement(\"style\")).appendChild(document.createTextNode(e)),document.head.appendChild(t),window.___TYPEWRITER_JS_STYLES_ADDED___=!0),!0===this.options.autoStart&&this.options.strings&&this.typeOutAllStrings().start()}},{key:\"logInDevMode\",value:function(e){this.options.devMode&&console.log(e)}}])&&S(r.prototype,g),Object.defineProperty(r,\"prototype\",{writable:!1}),n}()})(),r.default})()));\n//# sourceMappingURL=core.js.map","(function webpackUniversalModuleDefinition(root, factory) {\n\tif(typeof exports === 'object' && typeof module === 'object')\n\t\tmodule.exports = factory();\n\telse if(typeof define === 'function' && define.amd)\n\t\tdefine(\"Typewriter\", [], factory);\n\telse if(typeof exports === 'object')\n\t\texports[\"Typewriter\"] = factory();\n\telse\n\t\troot[\"Typewriter\"] = factory();\n})(typeof self !== 'undefined' ? self : this, () => {\nreturn ","// Generated by CoffeeScript 1.12.2\n(function() {\n  var getNanoSeconds, hrtime, loadTime, moduleLoadTime, nodeLoadTime, upTime;\n\n  if ((typeof performance !== \"undefined\" && performance !== null) && performance.now) {\n    module.exports = function() {\n      return performance.now();\n    };\n  } else if ((typeof process !== \"undefined\" && process !== null) && process.hrtime) {\n    module.exports = function() {\n      return (getNanoSeconds() - nodeLoadTime) / 1e6;\n    };\n    hrtime = process.hrtime;\n    getNanoSeconds = function() {\n      var hr;\n      hr = hrtime();\n      return hr[0] * 1e9 + hr[1];\n    };\n    moduleLoadTime = getNanoSeconds();\n    upTime = process.uptime() * 1e9;\n    nodeLoadTime = moduleLoadTime - upTime;\n  } else if (Date.now) {\n    module.exports = function() {\n      return Date.now() - loadTime;\n    };\n    loadTime = Date.now();\n  } else {\n    module.exports = function() {\n      return new Date().getTime() - loadTime;\n    };\n    loadTime = new Date().getTime();\n  }\n\n}).call(this);\n\n//# sourceMappingURL=performance-now.js.map\n","var now = require('performance-now')\n  , root = typeof window === 'undefined' ? global : window\n  , vendors = ['moz', 'webkit']\n  , suffix = 'AnimationFrame'\n  , raf = root['request' + suffix]\n  , caf = root['cancel' + suffix] || root['cancelRequest' + suffix]\n\nfor(var i = 0; !raf && i < vendors.length; i++) {\n  raf = root[vendors[i] + 'Request' + suffix]\n  caf = root[vendors[i] + 'Cancel' + suffix]\n      || root[vendors[i] + 'CancelRequest' + suffix]\n}\n\n// Some versions of FF have rAF but not cAF\nif(!raf || !caf) {\n  var last = 0\n    , id = 0\n    , queue = []\n    , frameDuration = 1000 / 60\n\n  raf = function(callback) {\n    if(queue.length === 0) {\n      var _now = now()\n        , next = Math.max(0, frameDuration - (_now - last))\n      last = next + _now\n      setTimeout(function() {\n        var cp = queue.slice(0)\n        // Clear queue here to prevent\n        // callbacks from appending listeners\n        // to the current frame's queue\n        queue.length = 0\n        for(var i = 0; i < cp.length; i++) {\n          if(!cp[i].cancelled) {\n            try{\n              cp[i].callback(last)\n            } catch(e) {\n              setTimeout(function() { throw e }, 0)\n            }\n          }\n        }\n      }, Math.round(next))\n    }\n    queue.push({\n      handle: ++id,\n      callback: callback,\n      cancelled: false\n    })\n    return id\n  }\n\n  caf = function(handle) {\n    for(var i = 0; i < queue.length; i++) {\n      if(queue[i].handle === handle) {\n        queue[i].cancelled = true\n      }\n    }\n  }\n}\n\nmodule.exports = function(fn) {\n  // Wrap in a new function to prevent\n  // `cancel` potentially being assigned\n  // to the native rAF function\n  return raf.call(root, fn)\n}\nmodule.exports.cancel = function() {\n  caf.apply(root, arguments)\n}\nmodule.exports.polyfill = function(object) {\n  if (!object) {\n    object = root;\n  }\n  object.requestAnimationFrame = raf\n  object.cancelAnimationFrame = caf\n}\n","// The module cache\nvar __webpack_module_cache__ = {};\n\n// The require function\nfunction __webpack_require__(moduleId) {\n\t// Check if module is in cache\n\tvar cachedModule = __webpack_module_cache__[moduleId];\n\tif (cachedModule !== undefined) {\n\t\treturn cachedModule.exports;\n\t}\n\t// Create a new module (and put it into the cache)\n\tvar module = __webpack_module_cache__[moduleId] = {\n\t\t// no module.id needed\n\t\t// no module.loaded needed\n\t\texports: {}\n\t};\n\n\t// Execute the module function\n\t__webpack_modules__[moduleId].call(module.exports, module, module.exports, __webpack_require__);\n\n\t// Return the exports of the module\n\treturn module.exports;\n}\n\n","// getDefaultExport function for compatibility with non-harmony modules\n__webpack_require__.n = (module) => {\n\tvar getter = module && module.__esModule ?\n\t\t() => (module['default']) :\n\t\t() => (module);\n\t__webpack_require__.d(getter, { a: getter });\n\treturn getter;\n};","// define getter functions for harmony exports\n__webpack_require__.d = (exports, definition) => {\n\tfor(var key in definition) {\n\t\tif(__webpack_require__.o(definition, key) && !__webpack_require__.o(exports, key)) {\n\t\t\tObject.defineProperty(exports, key, { enumerable: true, get: definition[key] });\n\t\t}\n\t}\n};","__webpack_require__.g = (function() {\n\tif (typeof globalThis === 'object') return globalThis;\n\ttry {\n\t\treturn this || new Function('return this')();\n\t} catch (e) {\n\t\tif (typeof window === 'object') return window;\n\t}\n})();","__webpack_require__.o = (obj, prop) => (Object.prototype.hasOwnProperty.call(obj, prop))","/**\n * Check if a string contains a HTML tag or not\n * \n * @param {String} string String to check for HTML tag\n * @return {Boolean} True|False\n * \n */\nconst doesStringContainHTMLTag = (string) => {\n  const regexp = new RegExp(/<[a-z][\\s\\S]*>/i);\n  return regexp.test(string);\n};\n\nexport default doesStringContainHTMLTag;","/**\n * Return a random integer between min/max values\n * \n * @param {Number} min Minimum number to generate\n * @param {Number} max Maximum number to generate\n * @author Tameem Safi <tamem@safi.me.uk>\n */\nconst getRandomInteger = (min, max) => {\n  return Math.floor(Math.random() * (max - min + 1)) + min;\n}\n\nexport default getRandomInteger;","export const EVENT_NAMES = {\n  TYPE_CHARACTER: 'TYPE_CHARACTER',\n  REMOVE_CHARACTER: 'REMOVE_CHARACTER',\n  REMOVE_ALL: 'REMOVE_ALL',\n  REMOVE_LAST_VISIBLE_NODE: 'REMOVE_LAST_VISIBLE_NODE',\n  PAUSE_FOR: 'PAUSE_FOR',\n  CALL_FUNCTION: 'CALL_FUNCTION',\n  ADD_HTML_TAG_ELEMENT: 'ADD_HTML_TAG_ELEMENT',\n  REMOVE_HTML_TAG_ELEMENT: 'REMOVE_HTML_TAG_ELEMENT',\n  CHANGE_DELETE_SPEED: 'CHANGE_DELETE_SPEED',\n  CHANGE_DELAY: 'CHANGE_DELAY',\n  CHANGE_CURSOR: 'CHANGE_CURSOR',\n  PASTE_STRING: 'PASTE_STRING',\n};\n\nexport const VISIBLE_NODE_TYPES = {\n  HTML_TAG: 'HTML_TAG',\n  TEXT_NODE: 'TEXT_NODE',\n}\n\nexport const STYLES = `.Typewriter__cursor{-webkit-animation:Typewriter-cursor 1s infinite;animation:Typewriter-cursor 1s infinite;margin-left:1px}@-webkit-keyframes Typewriter-cursor{0%{opacity:0}50%{opacity:1}100%{opacity:0}}@keyframes Typewriter-cursor{0%{opacity:0}50%{opacity:1}100%{opacity:0}}`;","import raf, { cancel as cancelRaf } from 'raf';\nimport {\n  doesStringContainHTMLTag,\n  getDOMElementFromString,\n  getRandomInteger,\n  addStyles,\n} from './../utils';\nimport {\n  EVENT_NAMES,\n  VISIBLE_NODE_TYPES,\n  STYLES,\n} from './constants';\n\nclass Typewriter {\n  state = {\n    cursorAnimation: null,\n    lastFrameTime: null,\n    pauseUntil: null,\n    eventQueue: [],\n    eventLoop: null,\n    eventLoopPaused: false,\n    reverseCalledEvents: [],\n    calledEvents: [],\n    visibleNodes: [],\n    initialOptions: null,\n    elements: {\n      container: null,\n      wrapper: document.createElement('span'),\n      cursor: document.createElement('span'),\n    },\n  }\n\n  options = {\n    strings: null,\n    cursor: '|',\n    delay: 'natural',\n    pauseFor: 1500,\n    deleteSpeed: 'natural',\n    loop: false,\n    autoStart: false,\n    devMode: false,\n    skipAddStyles: false,\n    wrapperClassName: 'Typewriter__wrapper',\n    cursorClassName: 'Typewriter__cursor',\n    stringSplitter: null,\n    onCreateTextNode: null,\n    onRemoveNode: null,\n  }\n\n  constructor(container, options) {\n    if(container) {\n      if(typeof container === 'string') {\n        const containerElement = document.querySelector(container);\n  \n        if(!containerElement) {\n          throw new Error('Could not find container element');\n        }\n  \n        this.state.elements.container = containerElement;\n      } else {\n        this.state.elements.container = container;\n      }\n    }\n\n    if(options) {\n      this.options = {\n        ...this.options,\n        ...options\n      };\n    }\n\n    // Make a copy of the options used to reset options when looping\n    this.state.initialOptions = { ...this.options };\n\n    this.init();\n  }\n\n  init() {\n    this.setupWrapperElement();\n    this.addEventToQueue(EVENT_NAMES.CHANGE_CURSOR, { cursor: this.options.cursor }, true);\n    this.addEventToQueue(EVENT_NAMES.REMOVE_ALL, null, true);\n\n    if(window && !window.___TYPEWRITER_JS_STYLES_ADDED___ && !this.options.skipAddStyles) {\n      addStyles(STYLES);\n      window.___TYPEWRITER_JS_STYLES_ADDED___ = true;\n    }\n\n    if(this.options.autoStart === true && this.options.strings) {\n      this.typeOutAllStrings().start();\n\t\t}\n  }\n\n  /**\n   * Replace all child nodes of provided element with\n   * state wrapper element used for typewriter effect\n   *\n   * @author Tameem Safi <tamem@safi.me.uk>\n   */\n  setupWrapperElement = () => {\n    if(!this.state.elements.container) {\n      return\n    }\n\n    this.state.elements.wrapper.className = this.options.wrapperClassName;\n    this.state.elements.cursor.className = this.options.cursorClassName;\n\n    this.state.elements.cursor.innerHTML = this.options.cursor;\n    this.state.elements.container.innerHTML = '';\n\n    this.state.elements.container.appendChild(this.state.elements.wrapper);\n    this.state.elements.container.appendChild(this.state.elements.cursor);\n  }\n\n  /**\n   * Start typewriter effect\n   */\n  start = () => {\n    this.state.eventLoopPaused = false;\n    this.runEventLoop();\n\n    return this;\n  }\n\n  /**\n   * Pause the event loop\n   *\n   * @author Tameem Safi <tamem@safi.me.uk>\n   */\n  pause = () => {\n    this.state.eventLoopPaused = true;\n\n    return this;\n  }\n\n  /**\n   * Destroy current running instance\n   *\n   * @author Tameem Safi <tamem@safi.me.uk>\n   */\n  stop = () => {\n    if(this.state.eventLoop) {\n      cancelRaf(this.state.eventLoop);\n      this.state.eventLoop = null;\n    }\n\n    return this;\n  }\n\n  /**\n   * Add pause event to queue for ms provided\n   *\n   * @param {Number} ms Time in ms to pause for\n   * @return {Typewriter}\n   *\n   * @author Tameem Safi <tamem@safi.me.uk>\n   */\n  pauseFor = (ms) => {\n    this.addEventToQueue(EVENT_NAMES.PAUSE_FOR, { ms });\n\n    return this;\n  }\n\n  /**\n   * Start typewriter effect by typing\n   * out all strings provided\n   *\n   * @return {Typewriter}\n   *\n   * @author Tameem Safi <tamem@safi.me.uk>\n   */\n  typeOutAllStrings = () => {\n    if(typeof this.options.strings === 'string') {\n      this.typeString(this.options.strings)\n        .pauseFor(this.options.pauseFor);\n      return this;\n    }\n\n    this.options.strings.forEach(string => {\n      this.typeString(string)\n        .pauseFor(this.options.pauseFor)\n        .deleteAll(this.options.deleteSpeed);\n    });\n\n    return this;\n  }\n\n  /**\n   * Adds string characters to event queue for typing\n   *\n   * @param {String} string String to type\n   * @param {HTMLElement} node Node to add character inside of\n   * @return {Typewriter}\n   *\n   * @author Tameem Safi <tamem@safi.me.uk>\n   */\n  typeString = (string, node = null) => {\n    if(doesStringContainHTMLTag(string)) {\n      return this.typeOutHTMLString(string, node);\n    }\n\n    if(string) {\n      const { stringSplitter } = this.options || {};\n      const characters = typeof stringSplitter === 'function' ? stringSplitter(string) : string.split('');\n      this.typeCharacters(characters, node);\n    }\n\n    return this;\n  }\n\n  /**\n   * Adds entire strings to event queue for paste effect\n   *\n   * @param {String} string String to paste\n   * @param {HTMLElement} node Node to add string inside of\n   * @return {Typewriter}\n   *\n   * @author Luiz Felicio <unifelicio@gmail.com>\n   */\n  pasteString = (string, node = null) => {\n    if(doesStringContainHTMLTag(string)) {\n      return this.typeOutHTMLString(string, node, true);\n    }\n\n    if(string) {\n      this.addEventToQueue(EVENT_NAMES.PASTE_STRING, { character: string, node });\n    }\n\n    return this;\n  }\n\n  /**\n   * Type out a string which is wrapper around HTML tag\n   *\n   * @param {String} string String to type\n   * @param {HTMLElement} parentNode Node to add inner nodes to\n   * @return {Typewriter}\n   *\n   * @author Tameem Safi <tamem@safi.me.uk>\n   */\n  typeOutHTMLString = (string, parentNode = null, pasteEffect) => {\n    const childNodes = getDOMElementFromString(string);\n\n    if(childNodes.length > 0 ) {\n      for(let i = 0; i < childNodes.length; i++) {\n        const node = childNodes[i];\n        const nodeHTML = node.innerHTML;\n\n        if(node && node.nodeType !== 3) {\n          // Reset innerText of HTML element\n          node.innerHTML = '';\n\n          // Add event queue item to insert HTML tag before typing characters\n          this.addEventToQueue(EVENT_NAMES.ADD_HTML_TAG_ELEMENT, {\n            node,\n            parentNode,\n          });\n\n            pasteEffect ? this.pasteString(nodeHTML, node) :  this.typeString(nodeHTML, node);\n        } else {\n          if(node.textContent) {\n            pasteEffect ? this.pasteString(node.textContent, parentNode) :  this.typeString(node.textContent, parentNode);\n          }\n        }\n      }\n    }\n\n    return this;\n  }\n\n  /**\n   * Add delete all characters to event queue\n   *\n   * @return {Typewriter}\n   *\n   * @author Tameem Safi <tamem@safi.me.uk>\n   */\n  deleteAll = (speed = 'natural') => {\n    this.addEventToQueue(EVENT_NAMES.REMOVE_ALL, { speed });\n    return this;\n  }\n\n  /**\n   * Change delete speed\n   *\n   * @param {Number} speed Speed to use for deleting characters\n   * @return {Typewriter}\n   *\n   * @author Tameem Safi <tamem@safi.me.uk>\n   */\n  changeDeleteSpeed = (speed) => {\n    if(!speed) {\n      throw new Error('Must provide new delete speed');\n    }\n\n    this.addEventToQueue(EVENT_NAMES.CHANGE_DELETE_SPEED, { speed });\n\n    return this;\n  }\n\n  /**\n   * Change delay when typing\n   *\n   * @param {Number} delay Delay when typing out characters\n   * @return {Typewriter}\n   *\n   * @author Tameem Safi <tamem@safi.me.uk>\n   */\n  changeDelay = (delay) => {\n    if(!delay) {\n      throw new Error('Must provide new delay');\n    }\n\n    this.addEventToQueue(EVENT_NAMES.CHANGE_DELAY, { delay });\n\n    return this;\n  }\n\n  /**\n   * Change cursor\n   *\n   * @param {String} character/string to represent as cursor\n   * @return {Typewriter}\n   *\n   * @author Y.Paing <ye@y3p.io>\n   */\n  changeCursor = (cursor) => {\n    if(!cursor) {\n      throw new Error('Must provide new cursor');\n    }\n\n    this.addEventToQueue(EVENT_NAMES.CHANGE_CURSOR, { cursor });\n\n    return this;\n  }\n\n  /**\n   * Add delete character to event queue for amount of characters provided\n   *\n   * @param {Number} amount Number of characters to remove\n   * @return {Typewriter}\n   *\n   * @author Tameem Safi <tamem@safi.me.uk>\n   */\n  deleteChars = (amount) => {\n    if(!amount) {\n      throw new Error('Must provide amount of characters to delete');\n    }\n\n    for(let i = 0; i < amount; i++) {\n      this.addEventToQueue(EVENT_NAMES.REMOVE_CHARACTER);\n    }\n\n    return this;\n  }\n\n  /**\n   * Add an event item to call a callback function\n   *\n   * @param {cb}      cb        Callback function to call\n   * @param {Object}  thisArg   thisArg to use when calling function\n   * @return {Typewriter}\n   *\n   * @author Tameem Safi <tamem@safi.me.uk>\n   */\n  callFunction = (cb, thisArg) => {\n    if(!cb || typeof cb !== 'function') {\n      throw new Error('Callback must be a function');\n    }\n\n    this.addEventToQueue(EVENT_NAMES.CALL_FUNCTION, { cb, thisArg });\n\n    return this;\n  }\n\n  /**\n   * Add type character event for each character\n   *\n   * @param {Array} characters Array of characters\n   * @param {HTMLElement} node Node to add character inside of\n   * @return {Typewriter}\n   *\n   * @author Tameem Safi <tamem@safi.me.uk>\n   */\n  typeCharacters = (characters, node = null) => {\n    if(!characters || !Array.isArray(characters)) {\n      throw new Error('Characters must be an array');\n    }\n\n    characters.forEach(character => {\n      this.addEventToQueue(EVENT_NAMES.TYPE_CHARACTER, { character, node });\n    });\n\n    return this;\n  }\n\n  /**\n   * Add remove character event for each character\n   *\n   * @param {Array} characters Array of characters\n   * @return {Typewriter}\n   *\n   * @author Tameem Safi <tamem@safi.me.uk>\n   */\n  removeCharacters = (characters) => {\n    if(!characters || !Array.isArray(characters)) {\n      throw new Error('Characters must be an array');\n    }\n\n    characters.forEach(() => {\n      this.addEventToQueue(EVENT_NAMES.REMOVE_CHARACTER);\n    });\n\n    return this;\n  }\n\n  /**\n   * Add an event to the event queue\n   *\n   * @param {String}  eventName Name of the event\n   * @param {Object}  eventArgs Arguments to pass to event callback\n   * @param {Boolean} prepend   Prepend to begining of event queue\n   * @return {Typewriter}\n   *\n   * @author Tameem Safi <tamem@safi.me.uk>\n   */\n  addEventToQueue = (eventName, eventArgs, prepend = false) => {\n    return this.addEventToStateProperty(\n      eventName,\n      eventArgs,\n      prepend,\n      'eventQueue'\n    );\n  }\n\n  /**\n   * Add an event to reverse called events used for looping\n   *\n   * @param {String}  eventName Name of the event\n   * @param {Object}  eventArgs Arguments to pass to event callback\n   * @param {Boolean} prepend   Prepend to begining of event queue\n   * @return {Typewriter}\n   *\n   * @author Tameem Safi <tamem@safi.me.uk>\n   */\n  addReverseCalledEvent = (eventName, eventArgs, prepend = false) => {\n    const { loop } = this.options;\n\n    if(!loop) {\n      return this;\n    }\n\n    return this.addEventToStateProperty(\n      eventName,\n      eventArgs,\n      prepend,\n      'reverseCalledEvents'\n    );\n  }\n\n  /**\n   * Add an event to correct state property\n   *\n   * @param {String}  eventName Name of the event\n   * @param {Object}  eventArgs Arguments to pass to event callback\n   * @param {Boolean} prepend   Prepend to begining of event queue\n   * @param {String}  property  Property name of state object\n   * @return {Typewriter}\n   *\n   * @author Tameem Safi <tamem@safi.me.uk>\n   */\n  addEventToStateProperty = (eventName, eventArgs, prepend = false, property) => {\n    const eventItem = {\n      eventName,\n      eventArgs: eventArgs || {},\n    };\n\n    if(prepend) {\n      this.state[property] = [\n        eventItem,\n        ...this.state[property],\n      ];\n    } else {\n      this.state[property] = [\n        ...this.state[property],\n        eventItem,\n      ];\n    }\n\n    return this;\n  }\n\n  /**\n   * Run the event loop and do anything inside of the queue\n   *\n   * @author Tameem Safi <tamem@safi.me.uk>\n   */\n  runEventLoop = () => {\n    if(!this.state.lastFrameTime) {\n      this.state.lastFrameTime = Date.now();\n    }\n\n    // Setup variables to calculate if this frame should run\n    const nowTime = Date.now();\n    const delta = nowTime - this.state.lastFrameTime;\n\n    if(!this.state.eventQueue.length) {\n      if(!this.options.loop) {\n        return;\n      }\n\n      // Reset event queue if we are looping\n      this.state.eventQueue = [...this.state.calledEvents];\n      this.state.calledEvents = [];\n      this.options = {...this.state.initialOptions};\n    }\n\n    // Request next frame\n    this.state.eventLoop = raf(this.runEventLoop);\n\n    // Check if event loop is paused\n    if(this.state.eventLoopPaused) {\n      return;\n    }\n\n    // Check if state has pause until time\n    if(this.state.pauseUntil) {\n      // Check if event loop should be paused\n      if(nowTime < this.state.pauseUntil) {\n        return;\n      }\n\n      // Reset pause time\n      this.state.pauseUntil = null;\n    }\n\n    // Make a clone of event queue\n    const eventQueue = [...this.state.eventQueue];\n\n    // Get first event from queue\n    const currentEvent = eventQueue.shift();\n\n    // Setup delay variable\n    let delay = 0;\n\n    // Check if frame should run or be\n    // skipped based on fps interval\n    if(\n      currentEvent.eventName === EVENT_NAMES.REMOVE_LAST_VISIBLE_NODE ||\n      currentEvent.eventName === EVENT_NAMES.REMOVE_CHARACTER\n    ) {\n      delay = this.options.deleteSpeed === 'natural' ? getRandomInteger(40, 80) : this.options.deleteSpeed;\n    } else {\n      delay = this.options.delay === 'natural' ? getRandomInteger(120, 160) : this.options.delay;\n    }\n\n    if(delta <= delay) {\n      return;\n    }\n\n    // Get current event args\n    const { eventName, eventArgs } = currentEvent;\n\n    this.logInDevMode({ currentEvent, state: this.state, delay });\n\n    // Run item from event loop\n    switch(eventName) {\n      case EVENT_NAMES.PASTE_STRING:\n      case EVENT_NAMES.TYPE_CHARACTER: {\n        const { character, node } = eventArgs;\n        const textNode = document.createTextNode(character);\n\n        let textNodeToUse = textNode\n\n        if(this.options.onCreateTextNode && typeof this.options.onCreateTextNode === 'function') {\n          textNodeToUse = this.options.onCreateTextNode(character, textNode)\n        }\n\n        if(textNodeToUse) {\n          if(node) {\n            node.appendChild(textNodeToUse);\n          } else {\n            this.state.elements.wrapper.appendChild(textNodeToUse);\n          }\n        }\n\n        this.state.visibleNodes = [\n          ...this.state.visibleNodes,\n          {\n            type: VISIBLE_NODE_TYPES.TEXT_NODE,\n            character,\n            node: textNodeToUse,\n          },\n        ];\n\n        break;\n      }\n\n      case EVENT_NAMES.REMOVE_CHARACTER: {\n        eventQueue.unshift({\n          eventName: EVENT_NAMES.REMOVE_LAST_VISIBLE_NODE,\n          eventArgs: { removingCharacterNode: true },\n        });\n        break;\n      }\n\n      case EVENT_NAMES.PAUSE_FOR: {\n        const { ms } = currentEvent.eventArgs;\n        this.state.pauseUntil = Date.now() + parseInt(ms);\n        break;\n      }\n\n      case EVENT_NAMES.CALL_FUNCTION: {\n        const { cb, thisArg } = currentEvent.eventArgs;\n\n        cb.call(thisArg, {\n          elements: this.state.elements,\n        });\n\n        break;\n      }\n\n      case EVENT_NAMES.ADD_HTML_TAG_ELEMENT: {\n        const { node, parentNode } = currentEvent.eventArgs;\n\n        if(!parentNode) {\n          this.state.elements.wrapper.appendChild(node);\n        } else {\n          parentNode.appendChild(node);\n        }\n\n        this.state.visibleNodes = [\n          ...this.state.visibleNodes,\n          {\n            type: VISIBLE_NODE_TYPES.HTML_TAG,\n            node,\n            parentNode: parentNode || this.state.elements.wrapper,\n          },\n        ];\n        break;\n      }\n\n      case EVENT_NAMES.REMOVE_ALL: {\n        const { visibleNodes } = this.state;\n        const { speed } = eventArgs;\n        const removeAllEventItems = [];\n\n        // Change speed before deleteing\n        if(speed) {\n          removeAllEventItems.push({\n            eventName: EVENT_NAMES.CHANGE_DELETE_SPEED,\n            eventArgs: { speed, temp: true },\n          });\n        }\n\n        for(let i = 0, length = visibleNodes.length; i < length; i++) {\n          removeAllEventItems.push({\n            eventName: EVENT_NAMES.REMOVE_LAST_VISIBLE_NODE,\n            eventArgs: { removingCharacterNode: false },\n          });\n        }\n\n        // Change speed back to normal after deleteing\n        if(speed) {\n          removeAllEventItems.push({\n            eventName: EVENT_NAMES.CHANGE_DELETE_SPEED,\n            eventArgs: { speed: this.options.deleteSpeed, temp: true },\n          });\n        }\n\n        eventQueue.unshift(...removeAllEventItems);\n\n        break;\n      }\n\n      case EVENT_NAMES.REMOVE_LAST_VISIBLE_NODE: {\n        const { removingCharacterNode } = currentEvent.eventArgs;\n\n        if(this.state.visibleNodes.length) {\n          const { type, node, character } = this.state.visibleNodes.pop();\n\n          if(this.options.onRemoveNode && typeof this.options.onRemoveNode === 'function') {\n            this.options.onRemoveNode({\n              node,\n              character,\n            })\n          }\n\n          if(node) {\n            node.parentNode.removeChild(node);\n          }\n          \n          // Remove extra node as current deleted one is just an empty wrapper node\n          if(type === VISIBLE_NODE_TYPES.HTML_TAG && removingCharacterNode) {\n            eventQueue.unshift({\n              eventName: EVENT_NAMES.REMOVE_LAST_VISIBLE_NODE,\n              eventArgs: {},\n            });\n          }\n        }\n        break;\n      }\n\n      case EVENT_NAMES.CHANGE_DELETE_SPEED: {\n        this.options.deleteSpeed = currentEvent.eventArgs.speed;\n        break;\n      }\n\n      case EVENT_NAMES.CHANGE_DELAY: {\n        this.options.delay = currentEvent.eventArgs.delay;\n        break;\n      }\n\n      case EVENT_NAMES.CHANGE_CURSOR: {\n        this.options.cursor = currentEvent.eventArgs.cursor;\n        this.state.elements.cursor.innerHTML = currentEvent.eventArgs.cursor;\n        break;\n      }\n\n      default: {\n        break;\n      }\n    }\n\n    // Add que item to called queue if we are looping\n    if(this.options.loop) {\n      if(\n        currentEvent.eventName !== EVENT_NAMES.REMOVE_LAST_VISIBLE_NODE &&\n        !(currentEvent.eventArgs && currentEvent.eventArgs.temp)\n      ) {\n        this.state.calledEvents = [\n          ...this.state.calledEvents,\n          currentEvent\n        ];\n      }\n    }\n\n    // Replace state event queue with cloned queue\n    this.state.eventQueue = eventQueue;\n\n    // Set last frame time so it can be used to calculate next frame\n    this.state.lastFrameTime = nowTime;\n  }\n\n  /**\n   * Log a message in development mode\n   *\n   * @param {Mixed} message Message or item to console.log\n   * @author Tameem Safi <tamem@safi.me.uk>\n   */\n  logInDevMode(message) {\n    if(this.options.devMode) {\n      console.log(message);\n    }\n  }\n}\n\nexport default Typewriter;\n","/**\n * Get the DOM element from a string\n * - Create temporary div element\n * - Change innerHTML of div element to the string\n * - Return the first child of the temporary div element\n * \n * @param {String} string String to convert into a DOM node\n * \n * @author Tameem Safi <tamem@safi.me.uk>\n */\nconst getDOMElementFromString = (string) => {\n  const div = document.createElement('div');\n  div.innerHTML = string;\n  return div.childNodes;\n}\n\nexport default getDOMElementFromString;","/**\n * Add styles to document head\n * \n * @param {String} styles CSS styles to add\n * @returns {void}\n */\nconst addStyles = (styles) => {\n  const styleBlock = document.createElement('style');\n  styleBlock.appendChild(document.createTextNode(styles));\n  document.head.appendChild(styleBlock);\n};\n\nexport default addStyles;","// shim for using process in browser\nvar process = module.exports = {};\n\n// cached from whatever global is present so that test runners that stub it\n// don't break things.  But we need to wrap it in a try catch in case it is\n// wrapped in strict mode code which doesn't define any globals.  It's inside a\n// function because try/catches deoptimize in certain engines.\n\nvar cachedSetTimeout;\nvar cachedClearTimeout;\n\nfunction defaultSetTimout() {\n    throw new Error('setTimeout has not been defined');\n}\nfunction defaultClearTimeout () {\n    throw new Error('clearTimeout has not been defined');\n}\n(function () {\n    try {\n        if (typeof setTimeout === 'function') {\n            cachedSetTimeout = setTimeout;\n        } else {\n            cachedSetTimeout = defaultSetTimout;\n        }\n    } catch (e) {\n        cachedSetTimeout = defaultSetTimout;\n    }\n    try {\n        if (typeof clearTimeout === 'function') {\n            cachedClearTimeout = clearTimeout;\n        } else {\n            cachedClearTimeout = defaultClearTimeout;\n        }\n    } catch (e) {\n        cachedClearTimeout = defaultClearTimeout;\n    }\n} ())\nfunction runTimeout(fun) {\n    if (cachedSetTimeout === setTimeout) {\n        //normal enviroments in sane situations\n        return setTimeout(fun, 0);\n    }\n    // if setTimeout wasn't available but was latter defined\n    if ((cachedSetTimeout === defaultSetTimout || !cachedSetTimeout) && setTimeout) {\n        cachedSetTimeout = setTimeout;\n        return setTimeout(fun, 0);\n    }\n    try {\n        // when when somebody has screwed with setTimeout but no I.E. maddness\n        return cachedSetTimeout(fun, 0);\n    } catch(e){\n        try {\n            // When we are in I.E. but the script has been evaled so I.E. doesn't trust the global object when called normally\n            return cachedSetTimeout.call(null, fun, 0);\n        } catch(e){\n            // same as above but when it's a version of I.E. that must have the global object for 'this', hopfully our context correct otherwise it will throw a global error\n            return cachedSetTimeout.call(this, fun, 0);\n        }\n    }\n\n\n}\nfunction runClearTimeout(marker) {\n    if (cachedClearTimeout === clearTimeout) {\n        //normal enviroments in sane situations\n        return clearTimeout(marker);\n    }\n    // if clearTimeout wasn't available but was latter defined\n    if ((cachedClearTimeout === defaultClearTimeout || !cachedClearTimeout) && clearTimeout) {\n        cachedClearTimeout = clearTimeout;\n        return clearTimeout(marker);\n    }\n    try {\n        // when when somebody has screwed with setTimeout but no I.E. maddness\n        return cachedClearTimeout(marker);\n    } catch (e){\n        try {\n            // When we are in I.E. but the script has been evaled so I.E. doesn't  trust the global object when called normally\n            return cachedClearTimeout.call(null, marker);\n        } catch (e){\n            // same as above but when it's a version of I.E. that must have the global object for 'this', hopfully our context correct otherwise it will throw a global error.\n            // Some versions of I.E. have different rules for clearTimeout vs setTimeout\n            return cachedClearTimeout.call(this, marker);\n        }\n    }\n\n\n\n}\nvar queue = [];\nvar draining = false;\nvar currentQueue;\nvar queueIndex = -1;\n\nfunction cleanUpNextTick() {\n    if (!draining || !currentQueue) {\n        return;\n    }\n    draining = false;\n    if (currentQueue.length) {\n        queue = currentQueue.concat(queue);\n    } else {\n        queueIndex = -1;\n    }\n    if (queue.length) {\n        drainQueue();\n    }\n}\n\nfunction drainQueue() {\n    if (draining) {\n        return;\n    }\n    var timeout = runTimeout(cleanUpNextTick);\n    draining = true;\n\n    var len = queue.length;\n    while(len) {\n        currentQueue = queue;\n        queue = [];\n        while (++queueIndex < len) {\n            if (currentQueue) {\n                currentQueue[queueIndex].run();\n            }\n        }\n        queueIndex = -1;\n        len = queue.length;\n    }\n    currentQueue = null;\n    draining = false;\n    runClearTimeout(timeout);\n}\n\nprocess.nextTick = function (fun) {\n    var args = new Array(arguments.length - 1);\n    if (arguments.length > 1) {\n        for (var i = 1; i < arguments.length; i++) {\n            args[i - 1] = arguments[i];\n        }\n    }\n    queue.push(new Item(fun, args));\n    if (queue.length === 1 && !draining) {\n        runTimeout(drainQueue);\n    }\n};\n\n// v8 likes predictible objects\nfunction Item(fun, array) {\n    this.fun = fun;\n    this.array = array;\n}\nItem.prototype.run = function () {\n    this.fun.apply(null, this.array);\n};\nprocess.title = 'browser';\nprocess.browser = true;\nprocess.env = {};\nprocess.argv = [];\nprocess.version = ''; // empty string to avoid regexp issues\nprocess.versions = {};\n\nfunction noop() {}\n\nprocess.on = noop;\nprocess.addListener = noop;\nprocess.once = noop;\nprocess.off = noop;\nprocess.removeListener = noop;\nprocess.removeAllListeners = noop;\nprocess.emit = noop;\nprocess.prependListener = noop;\nprocess.prependOnceListener = noop;\n\nprocess.listeners = function (name) { return [] }\n\nprocess.binding = function (name) {\n    throw new Error('process.binding is not supported');\n};\n\nprocess.cwd = function () { return '/' };\nprocess.chdir = function (dir) {\n    throw new Error('process.chdir is not supported');\n};\nprocess.umask = function() { return 0; };\n","import { Children } from \"../util/Children\";\r\nimport { Percent } from \"../util/Percent\";\r\nimport { Sprite } from \"./Sprite\";\r\nimport { Rectangle } from \"./Rectangle\";\r\nimport { HorizontalLayout } from \"./HorizontalLayout\";\r\nimport { VerticalLayout } from \"./VerticalLayout\";\r\nimport { GridLayout } from \"./GridLayout\";\r\nimport { populateString } from \"../util/PopulateString\";\r\nimport * as $array from \"../util/Array\";\r\nimport * as $type from \"../util/Type\";\r\nimport * as $utils from \"../util/Utils\";\r\n/**\r\n * A basic element that can have child elements, maintain their layout, and\r\n * have a background.\r\n *\r\n * It can have any [[Sprite]] element as a child, from very basic shapes, to\r\n * full-fledged charts.\r\n *\r\n * @see {@link https://www.amcharts.com/docs/v5/concepts/common-elements/containers/} for more info\r\n * @important\r\n */\r\nexport class Container extends Sprite {\r\n    constructor() {\r\n        super(...arguments);\r\n        Object.defineProperty(this, \"_display\", {\r\n            enumerable: true,\r\n            configurable: true,\r\n            writable: true,\r\n            value: this._root._renderer.makeContainer()\r\n        });\r\n        Object.defineProperty(this, \"_childrenDisplay\", {\r\n            enumerable: true,\r\n            configurable: true,\r\n            writable: true,\r\n            value: this._root._renderer.makeContainer()\r\n        });\r\n        /**\r\n         * List of Container's child elements.\r\n         */\r\n        Object.defineProperty(this, \"children\", {\r\n            enumerable: true,\r\n            configurable: true,\r\n            writable: true,\r\n            value: new Children(this)\r\n        });\r\n        Object.defineProperty(this, \"_percentageSizeChildren\", {\r\n            enumerable: true,\r\n            configurable: true,\r\n            writable: true,\r\n            value: []\r\n        });\r\n        Object.defineProperty(this, \"_percentagePositionChildren\", {\r\n            enumerable: true,\r\n            configurable: true,\r\n            writable: true,\r\n            value: []\r\n        });\r\n        Object.defineProperty(this, \"_prevWidth\", {\r\n            enumerable: true,\r\n            configurable: true,\r\n            writable: true,\r\n            value: 0\r\n        });\r\n        Object.defineProperty(this, \"_prevHeight\", {\r\n            enumerable: true,\r\n            configurable: true,\r\n            writable: true,\r\n            value: 0\r\n        });\r\n        Object.defineProperty(this, \"_contentWidth\", {\r\n            enumerable: true,\r\n            configurable: true,\r\n            writable: true,\r\n            value: 0\r\n        });\r\n        Object.defineProperty(this, \"_contentHeight\", {\r\n            enumerable: true,\r\n            configurable: true,\r\n            writable: true,\r\n            value: 0\r\n        });\r\n        Object.defineProperty(this, \"_contentMask\", {\r\n            enumerable: true,\r\n            configurable: true,\r\n            writable: true,\r\n            value: void 0\r\n        });\r\n        Object.defineProperty(this, \"_vsbd0\", {\r\n            enumerable: true,\r\n            configurable: true,\r\n            writable: true,\r\n            value: void 0\r\n        });\r\n        Object.defineProperty(this, \"_vsbd1\", {\r\n            enumerable: true,\r\n            configurable: true,\r\n            writable: true,\r\n            value: void 0\r\n        });\r\n    }\r\n    _afterNew() {\r\n        super._afterNew();\r\n        this._display.addChild(this._childrenDisplay);\r\n    }\r\n    _dispose() {\r\n        $array.eachReverse(this.allChildren(), (child) => {\r\n            child.dispose();\r\n        });\r\n        if (this.getPrivate(\"htmlElement\")) {\r\n            this._root._removeHTMLContent(this);\r\n        }\r\n        super._dispose();\r\n    }\r\n    _changed() {\r\n        super._changed();\r\n        if (this.isDirty(\"interactiveChildren\")) {\r\n            this._display.interactiveChildren = this.get(\"interactiveChildren\", false);\r\n        }\r\n        if (this.isDirty(\"layout\")) {\r\n            this._prevWidth = 0;\r\n            this._prevHeight = 0;\r\n            this.markDirtyBounds();\r\n            if (this._prevSettings.layout) {\r\n                this.children.each((child) => {\r\n                    child.removePrivate(\"x\");\r\n                    child.removePrivate(\"y\");\r\n                });\r\n            }\r\n        }\r\n        if (this.isDirty(\"paddingTop\") || this.isDirty(\"paddingBottom\") || this.isDirty(\"paddingLeft\") || this.isDirty(\"paddingRight\")) {\r\n            this.children.each((child) => {\r\n                child.markDirtyPosition();\r\n            });\r\n        }\r\n        if (this.isDirty(\"maskContent\")) {\r\n            const childrenDisplay = this._childrenDisplay;\r\n            let contentMask = this._contentMask;\r\n            if (this.get(\"maskContent\")) {\r\n                if (!contentMask) {\r\n                    contentMask = Rectangle.new(this._root, {\r\n                        x: -.5,\r\n                        y: -.5,\r\n                        width: this.width() + 1,\r\n                        height: this.height() + 1\r\n                    });\r\n                    this._contentMask = contentMask;\r\n                    childrenDisplay.addChildAt(contentMask._display, 0);\r\n                    childrenDisplay.mask = contentMask._display;\r\n                }\r\n            }\r\n            else {\r\n                if (contentMask) {\r\n                    childrenDisplay.removeChild(contentMask._display);\r\n                    childrenDisplay.mask = null;\r\n                    contentMask.dispose();\r\n                    this._contentMask = undefined;\r\n                }\r\n            }\r\n        }\r\n    }\r\n    _updateSize() {\r\n        super._updateSize();\r\n        $array.each(this._percentageSizeChildren, (child) => {\r\n            child._updateSize();\r\n        });\r\n        $array.each(this._percentagePositionChildren, (child) => {\r\n            child.markDirtyPosition();\r\n            child._updateSize();\r\n        });\r\n        this.updateBackground();\r\n    }\r\n    updateBackground() {\r\n        const background = this.get(\"background\");\r\n        let bounds = this._localBounds;\r\n        if (bounds && !this.isHidden()) {\r\n            let x = bounds.left;\r\n            let y = bounds.top;\r\n            let w = bounds.right - x;\r\n            let h = bounds.bottom - y;\r\n            let maxWidth = this.get(\"maxWidth\");\r\n            let maxHeight = this.get(\"maxHeight\");\r\n            if (maxHeight) {\r\n                if (h > maxHeight) {\r\n                    h = maxHeight;\r\n                }\r\n            }\r\n            if (maxWidth) {\r\n                if (w > maxWidth) {\r\n                    w = maxWidth;\r\n                }\r\n            }\r\n            let width = this.width();\r\n            let height = this.height();\r\n            if (background) {\r\n                background.setAll({ width: w, height: h, x: x, y: y });\r\n                if (this._display.interactive) {\r\n                    background._display.interactive = true;\r\n                }\r\n            }\r\n            const contentMask = this._contentMask;\r\n            if (contentMask) {\r\n                contentMask.setAll({ width: width + 1, height: height + 1 });\r\n            }\r\n            const verticalScrollbar = this.get(\"verticalScrollbar\");\r\n            if (verticalScrollbar) {\r\n                verticalScrollbar.set(\"height\", height);\r\n                verticalScrollbar.set(\"x\", width - verticalScrollbar.width() - verticalScrollbar.get(\"marginRight\", 0));\r\n                verticalScrollbar.set(\"end\", verticalScrollbar.get(\"start\", 0) + height / this._contentHeight);\r\n                const bg = verticalScrollbar.get(\"background\");\r\n                if (bg) {\r\n                    bg.setAll({ width: verticalScrollbar.width(), height: height });\r\n                }\r\n                let visible = true;\r\n                if (this._contentHeight <= height) {\r\n                    visible = false;\r\n                }\r\n                verticalScrollbar.setPrivate(\"visible\", visible);\r\n            }\r\n        }\r\n    }\r\n    _applyThemes(force = false) {\r\n        if (super._applyThemes(force)) {\r\n            this.eachChildren((child) => {\r\n                child._applyThemes(force);\r\n            });\r\n            return true;\r\n        }\r\n        else {\r\n            return false;\r\n        }\r\n    }\r\n    _applyState(name) {\r\n        super._applyState(name);\r\n        if (this.get(\"setStateOnChildren\")) {\r\n            this.eachChildren((child) => {\r\n                child.states.apply(name);\r\n            });\r\n        }\r\n    }\r\n    _applyStateAnimated(name, duration) {\r\n        super._applyStateAnimated(name, duration);\r\n        if (this.get(\"setStateOnChildren\")) {\r\n            this.eachChildren((child) => {\r\n                child.states.applyAnimate(name, duration);\r\n            });\r\n        }\r\n    }\r\n    /**\r\n     * Returns container's inner width (width without padding) in pixels.\r\n     *\r\n     * @return Inner width (px)\r\n     */\r\n    innerWidth() {\r\n        return this.width() - this.get(\"paddingRight\", 0) - this.get(\"paddingLeft\", 0);\r\n    }\r\n    /**\r\n     * Returns container's inner height (height without padding) in pixels.\r\n     *\r\n     * @return Inner height (px)\r\n     */\r\n    innerHeight() {\r\n        return this.height() - this.get(\"paddingTop\", 0) - this.get(\"paddingBottom\", 0);\r\n    }\r\n    _getBounds() {\r\n        if (!this.get(\"html\")) {\r\n            let width = this.get(\"width\");\r\n            let height = this.get(\"height\");\r\n            let pWidth = this.getPrivate(\"width\");\r\n            let pHeight = this.getPrivate(\"height\");\r\n            let bounds = {\r\n                left: 0,\r\n                top: 0,\r\n                right: this.width(),\r\n                bottom: this.height()\r\n            };\r\n            let layout = this.get(\"layout\");\r\n            let horizontal = false;\r\n            let vertical = false;\r\n            if (layout instanceof HorizontalLayout || layout instanceof GridLayout) {\r\n                horizontal = true;\r\n            }\r\n            if (layout instanceof VerticalLayout) {\r\n                vertical = true;\r\n            }\r\n            if ((width != null || pWidth != null) && (height != null || pHeight != null) && !this.get(\"verticalScrollbar\")) {\r\n                // void\r\n            }\r\n            else {\r\n                let m = Number.MAX_VALUE;\r\n                let l = m;\r\n                let r = -m;\r\n                let t = m;\r\n                let b = -m;\r\n                const paddingLeft = this.get(\"paddingLeft\", 0);\r\n                const paddingTop = this.get(\"paddingTop\", 0);\r\n                const paddingRight = this.get(\"paddingRight\", 0);\r\n                const paddingBottom = this.get(\"paddingBottom\", 0);\r\n                this.children.each((child) => {\r\n                    if (child.get(\"position\") != \"absolute\" && child.get(\"isMeasured\")) {\r\n                        let childBounds = child.adjustedLocalBounds();\r\n                        let childX = child.x();\r\n                        let childY = child.y();\r\n                        let cl = childX + childBounds.left;\r\n                        let cr = childX + childBounds.right;\r\n                        let ct = childY + childBounds.top;\r\n                        let cb = childY + childBounds.bottom;\r\n                        if (horizontal) {\r\n                            cl -= child.get(\"marginLeft\", 0);\r\n                            cr += child.get(\"marginRight\", 0);\r\n                        }\r\n                        if (vertical) {\r\n                            ct -= child.get(\"marginTop\", 0);\r\n                            cb += child.get(\"marginBottom\", 0);\r\n                        }\r\n                        if (cl < l) {\r\n                            l = cl;\r\n                        }\r\n                        if (cr > r) {\r\n                            r = cr;\r\n                        }\r\n                        if (ct < t) {\r\n                            t = ct;\r\n                        }\r\n                        if (cb > b) {\r\n                            b = cb;\r\n                        }\r\n                    }\r\n                });\r\n                if (l == m) {\r\n                    l = 0;\r\n                }\r\n                if (r == -m) {\r\n                    r = 0;\r\n                }\r\n                if (t == m) {\r\n                    t = 0;\r\n                }\r\n                if (b == -m) {\r\n                    b = 0;\r\n                }\r\n                bounds.left = l - paddingLeft;\r\n                bounds.top = t - paddingTop;\r\n                bounds.right = r + paddingRight;\r\n                bounds.bottom = b + paddingBottom;\r\n                const minWidth = this.get(\"minWidth\");\r\n                if ($type.isNumber(minWidth) && minWidth > 0) {\r\n                    if (bounds.right - bounds.left < minWidth) {\r\n                        if (bounds.right >= minWidth) {\r\n                            bounds.left = bounds.right - minWidth;\r\n                        }\r\n                        else {\r\n                            bounds.right = bounds.left + minWidth;\r\n                        }\r\n                    }\r\n                }\r\n                const minHeight = this.get(\"minHeight\");\r\n                if ($type.isNumber(minHeight) && minHeight > 0) {\r\n                    if (bounds.bottom - bounds.top < minHeight) {\r\n                        if (bounds.bottom >= minHeight) {\r\n                            bounds.top = bounds.bottom - minHeight;\r\n                        }\r\n                        else {\r\n                            bounds.bottom = bounds.top + minHeight;\r\n                        }\r\n                    }\r\n                }\r\n            }\r\n            this._contentWidth = bounds.right - bounds.left;\r\n            this._contentHeight = bounds.bottom - bounds.top;\r\n            if ($type.isNumber(width)) {\r\n                bounds.left = 0;\r\n                bounds.right = width;\r\n            }\r\n            if ($type.isNumber(pWidth)) {\r\n                bounds.left = 0;\r\n                bounds.right = pWidth;\r\n            }\r\n            if ($type.isNumber(height)) {\r\n                bounds.top = 0;\r\n                bounds.bottom = height;\r\n            }\r\n            if ($type.isNumber(pHeight)) {\r\n                bounds.top = 0;\r\n                bounds.bottom = pHeight;\r\n            }\r\n            this._localBounds = bounds;\r\n        }\r\n        else {\r\n            let bounds = this._localBounds;\r\n            if (bounds) {\r\n                this._contentWidth = bounds.right - bounds.left;\r\n                this._contentHeight = bounds.bottom - bounds.top;\r\n            }\r\n        }\r\n    }\r\n    _updateBounds() {\r\n        const layout = this.get(\"layout\");\r\n        if (layout) {\r\n            layout.updateContainer(this);\r\n        }\r\n        super._updateBounds();\r\n        this.updateBackground();\r\n    }\r\n    /**\r\n     * @ignore\r\n     */\r\n    markDirty() {\r\n        super.markDirty();\r\n        this._root._addDirtyParent(this);\r\n    }\r\n    _prepareChildren() {\r\n        const innerWidth = this.innerWidth();\r\n        const innerHeight = this.innerHeight();\r\n        if (innerWidth != this._prevWidth || innerHeight != this._prevHeight) {\r\n            let layout = this.get(\"layout\");\r\n            let horizontal = false;\r\n            let vertical = false;\r\n            if (layout) {\r\n                if (layout instanceof HorizontalLayout || layout instanceof GridLayout) {\r\n                    horizontal = true;\r\n                }\r\n                if (layout instanceof VerticalLayout) {\r\n                    vertical = true;\r\n                }\r\n            }\r\n            $array.each(this._percentageSizeChildren, (child) => {\r\n                if (!horizontal) {\r\n                    let width = child.get(\"width\");\r\n                    if (width instanceof Percent) {\r\n                        child.setPrivate(\"width\", width.value * innerWidth);\r\n                    }\r\n                }\r\n                if (!vertical) {\r\n                    let height = child.get(\"height\");\r\n                    if (height instanceof Percent) {\r\n                        child.setPrivate(\"height\", height.value * innerHeight);\r\n                    }\r\n                }\r\n            });\r\n            $array.each(this._percentagePositionChildren, (child) => {\r\n                child.markDirtyPosition();\r\n                child.markDirtyBounds();\r\n            });\r\n            this._prevWidth = innerWidth;\r\n            this._prevHeight = innerHeight;\r\n            this._sizeDirty = true;\r\n            this.updateBackground();\r\n        }\r\n        this._handleStates();\r\n    }\r\n    _updateHTMLContent() {\r\n        const html = this.get(\"html\");\r\n        if (html && html !== \"\") {\r\n            this._root._setHTMLContent(this, populateString(this, this.get(\"html\", \"\")));\r\n        }\r\n        else {\r\n            this._root._removeHTMLContent(this);\r\n        }\r\n        this._root._positionHTMLElement(this);\r\n    }\r\n    /**\r\n     * If scrolling is enabled on the Container (by adding `verticalScrollbar`)\r\n     * the Container will scroll in such way so that target element becomes\r\n     * visible if its currently outside of view.\r\n     *\r\n     * @param  child  Target child\r\n     * @since 5.10.5\r\n     */\r\n    scrollToChild(child) {\r\n        const verticalScrollbar = this.get(\"verticalScrollbar\");\r\n        if (verticalScrollbar) {\r\n            let y = child.y();\r\n            let h = this.innerHeight();\r\n            let ch = child.height();\r\n            let contentH = this._contentHeight;\r\n            let max = 1 - (h - ch / 2) / contentH;\r\n            if (y + ch * .7 + this._childrenDisplay.y > h || y - ch * .3 + this._childrenDisplay.y < 0) {\r\n                let pos = Math.max(0, Math.min(max, (y - ch / 2) / contentH));\r\n                verticalScrollbar.animate({ key: \"start\", to: pos, duration: verticalScrollbar.get(\"animationDuration\", 0), easing: verticalScrollbar.get(\"animationEasing\") });\r\n            }\r\n        }\r\n    }\r\n    _updateChildren() {\r\n        if (this.isDirty(\"html\")) {\r\n            this._updateHTMLContent();\r\n        }\r\n        if (this.isDirty(\"verticalScrollbar\")) {\r\n            const verticalScrollbar = this.get(\"verticalScrollbar\");\r\n            if (verticalScrollbar) {\r\n                verticalScrollbar._setParent(this);\r\n                verticalScrollbar.startGrip.setPrivate(\"visible\", false);\r\n                verticalScrollbar.endGrip.setPrivate(\"visible\", false);\r\n                this.set(\"maskContent\", true);\r\n                this.set(\"paddingRight\", verticalScrollbar.width() + verticalScrollbar.get(\"marginRight\", 0) + verticalScrollbar.get(\"marginLeft\", 0));\r\n                let background = this.get(\"background\");\r\n                if (!background) {\r\n                    background = this.set(\"background\", Rectangle.new(this._root, {\r\n                        themeTags: [\"background\"],\r\n                        fillOpacity: 0,\r\n                        fill: this._root.interfaceColors.get(\"alternativeBackground\")\r\n                    }));\r\n                }\r\n                this._vsbd0 = this.events.on(\"wheel\", (event) => {\r\n                    const wheelEvent = event.originalEvent;\r\n                    // Ignore wheel event if it is happening on a non-chart element, e.g. if\r\n                    // some page element is over the chart.\r\n                    if ($utils.isLocalEvent(wheelEvent, this)) {\r\n                        wheelEvent.preventDefault();\r\n                    }\r\n                    else {\r\n                        return;\r\n                    }\r\n                    let shiftY = wheelEvent.deltaY / 5000;\r\n                    const start = verticalScrollbar.get(\"start\", 0);\r\n                    const end = verticalScrollbar.get(\"end\", 1);\r\n                    if (start + shiftY <= 0) {\r\n                        shiftY = -start;\r\n                    }\r\n                    if (end + shiftY >= 1) {\r\n                        shiftY = 1 - end;\r\n                    }\r\n                    if (start + shiftY >= 0 && end + shiftY <= 1) {\r\n                        verticalScrollbar.set(\"start\", start + shiftY);\r\n                        verticalScrollbar.set(\"end\", end + shiftY);\r\n                    }\r\n                });\r\n                this._disposers.push(this._vsbd0);\r\n                this._vsbd1 = verticalScrollbar.events.on(\"rangechanged\", () => {\r\n                    let h = this._contentHeight;\r\n                    const childrenDisplay = this._childrenDisplay;\r\n                    const contentMask = this._contentMask;\r\n                    childrenDisplay.y = -verticalScrollbar.get(\"start\", 0) * h;\r\n                    childrenDisplay.markDirtyLayer();\r\n                    if (contentMask) {\r\n                        contentMask._display.y = -childrenDisplay.y;\r\n                        childrenDisplay.mask = contentMask._display;\r\n                    }\r\n                });\r\n                this._disposers.push(this._vsbd1);\r\n                this._display.addChild(verticalScrollbar._display);\r\n            }\r\n            else {\r\n                const previous = this._prevSettings.verticalScrollbar;\r\n                if (previous) {\r\n                    this._display.removeChild(previous._display);\r\n                    if (this._vsbd0) {\r\n                        this._vsbd0.dispose();\r\n                    }\r\n                    if (this._vsbd1) {\r\n                        this._vsbd1.dispose();\r\n                    }\r\n                    const childrenDisplay = this._childrenDisplay;\r\n                    childrenDisplay.y = 0;\r\n                    this.setPrivate(\"height\", undefined);\r\n                    this.set(\"maskContent\", false);\r\n                    this.set(\"paddingRight\", undefined);\r\n                }\r\n            }\r\n        }\r\n        if (this.isDirty(\"background\")) {\r\n            // TODO maybe this should dispose ?\r\n            const previous = this._prevSettings[\"background\"];\r\n            if (previous) {\r\n                this._display.removeChild(previous._display);\r\n            }\r\n            const background = this.get(\"background\");\r\n            if (background instanceof Sprite) {\r\n                background.set(\"isMeasured\", false);\r\n                background._setParent(this);\r\n                this._display.addChildAt(background._display, 0);\r\n            }\r\n        }\r\n        if (this.isDirty(\"mask\")) {\r\n            const mask = this.get(\"mask\");\r\n            const previous = this._prevSettings[\"mask\"];\r\n            if (previous) {\r\n                this._display.removeChild(previous._display);\r\n                if (previous != mask) {\r\n                    previous.dispose();\r\n                }\r\n            }\r\n            if (mask) {\r\n                const parent = mask.parent;\r\n                if (parent) {\r\n                    parent.children.removeValue(mask);\r\n                }\r\n                mask._setParent(this);\r\n                this._display.addChildAt(mask._display, 0);\r\n                this._childrenDisplay.mask = mask._display;\r\n            }\r\n        }\r\n    }\r\n    _processTemplateField() {\r\n        super._processTemplateField();\r\n        this.children.each((child) => {\r\n            child._processTemplateField();\r\n        });\r\n    }\r\n    /**\r\n     * @ignore\r\n     */\r\n    walkChildren(f) {\r\n        this.children.each((child) => {\r\n            if (child instanceof Container) {\r\n                child.walkChildren(f);\r\n            }\r\n            f(child);\r\n        });\r\n    }\r\n    eachChildren(f) {\r\n        const background = this.get(\"background\");\r\n        if (background) {\r\n            f(background);\r\n        }\r\n        const verticalScrollbar = this.get(\"verticalScrollbar\");\r\n        if (verticalScrollbar) {\r\n            f(verticalScrollbar);\r\n        }\r\n        const mask = this.get(\"mask\");\r\n        if (mask) {\r\n            f(mask);\r\n        }\r\n        this.children.values.forEach((child) => {\r\n            f(child);\r\n        });\r\n    }\r\n    allChildren() {\r\n        const output = [];\r\n        this.eachChildren((x) => {\r\n            output.push(x);\r\n        });\r\n        return output;\r\n    }\r\n    _setDataItem(dataItem) {\r\n        const updated = (dataItem !== this._dataItem);\r\n        super._setDataItem(dataItem);\r\n        const html = this.get(\"html\", \"\");\r\n        if (html && html !== \"\" && updated) {\r\n            this._root._setHTMLContent(this, populateString(this, html));\r\n        }\r\n    }\r\n}\r\nObject.defineProperty(Container, \"className\", {\r\n    enumerable: true,\r\n    configurable: true,\r\n    writable: true,\r\n    value: \"Container\"\r\n});\r\nObject.defineProperty(Container, \"classNames\", {\r\n    enumerable: true,\r\n    configurable: true,\r\n    writable: true,\r\n    value: Sprite.classNames.concat([Container.className])\r\n});\r\n//# sourceMappingURL=Container.js.map","import type { Graphics } from \"./Graphics\";\nimport type { Layout } from \"./Layout\";\nimport type { IContainer } from \"./backend/Renderer\";\nimport type { IBounds } from \"../util/IBounds\";\nimport type { Scrollbar } from \"./Scrollbar\";\nimport type { DataItem, IComponentDataItem } from \"./Component\";\n\nimport { Children } from \"../util/Children\";\nimport { Percent } from \"../util/Percent\";\nimport { Sprite, ISpriteSettings, ISpritePrivate, ISpriteEvents } from \"./Sprite\";\nimport { Rectangle } from \"./Rectangle\";\nimport { HorizontalLayout } from \"./HorizontalLayout\";\nimport { VerticalLayout } from \"./VerticalLayout\";\nimport { GridLayout } from \"./GridLayout\";\nimport { populateString } from \"../util/PopulateString\";\nimport type { IDisposer } from \"../util/Disposer\";\n\nimport * as $array from \"../util/Array\";\nimport * as $type from \"../util/Type\";\nimport * as $utils from \"../util/Utils\";\n\nexport interface IContainerSettings extends ISpriteSettings {\n\n\t/**\n\t * Left padding in pixels.\n\t */\n\tpaddingLeft?: number;\n\n\t/**\n\t * Right padding in pixels.\n\t */\n\tpaddingRight?: number;\n\n\t/**\n\t * Top padding in pixels.\n\t */\n\tpaddingTop?: number;\n\n\t/**\n\t * Bottom padding in pixels.\n\t */\n\tpaddingBottom?: number;\n\n\t/**\n\t * Background element.\n\t *\n\t * @see {@link https://www.amcharts.com/docs/v5/concepts/containers/#Background} for more info\n\t */\n\tbackground?: Graphics;\n\n\t/**\n\t * A method to layout\n\t *\n\t * @see {@link https://www.amcharts.com/docs/v5/concepts/containers/#Layout} for more info\n\t */\n\tlayout?: Layout | null;\n\n\t/**\n\t * An element to use as a container's mask (clipping region).\n\t *\n\t * @see {@link https://www.amcharts.com/docs/v5/concepts/containers/#Masks} for more info\n\t */\n\tmask?: Graphics | null;\n\n\t/**\n\t * If set to `true` all content going outside the bounds of the container\n\t * will be clipped.\n\t */\n\tmaskContent?: boolean;\n\n\t/**\n\t * If set to `true` all descendants - not just direct children, but every\n\t * element in it - will become \"interactive\".\n\t */\n\tinteractiveChildren?: boolean;\n\n\t/**\n\t * If set to `true`, applying a state on a container will also apply the same\n\t * state on its children.\n\t *\n\t * @see {@link https://www.amcharts.com/docs/v5/concepts/containers/#States} for more info\n\t */\n\tsetStateOnChildren?: boolean;\n\n\t/**\n\t * Setting this to an instance of [[Scrollbar]] will enable vertical\n\t * scrolling of content if it does not fit into the Container.\n\t *\n\t * @see {@link https://www.amcharts.com/docs/v5/concepts/containers/#Scrollbar} for more info\n\t */\n\tverticalScrollbar?: Scrollbar;\n\n\t/**\n\t * If set to `true` its children will be laid out in opposite order.\n\t *\n\t * @since 5.1.1\n\t */\n\treverseChildren?: boolean;\n\n\t/**\n\t * HTML content of the container.\n\t *\n\t * @see {@link https://www.amcharts.com/docs/v5/concepts/common-elements/html-content/} for more info\n\t * @since 5.2.11\n\t */\n\thtml?: string;\n\n}\n\nexport interface IContainerEvents extends ISpriteEvents {\n}\n\nexport interface IContainerPrivate extends ISpritePrivate {\n\t/**\n\t * A `<div>` element used for HTML content of the `Container`.\n\t */\n\thtmlElement?: HTMLDivElement;\n}\n\n/**\n * A basic element that can have child elements, maintain their layout, and\n * have a background.\n *\n * It can have any [[Sprite]] element as a child, from very basic shapes, to\n * full-fledged charts.\n *\n * @see {@link https://www.amcharts.com/docs/v5/concepts/common-elements/containers/} for more info\n * @important\n */\nexport class Container extends Sprite {\n\n\tdeclare public _settings: IContainerSettings;\n\tdeclare public _privateSettings: IContainerPrivate;\n\tdeclare public _events: IContainerEvents;\n\n\tpublic _display: IContainer = this._root._renderer.makeContainer();\n\n\tpublic _childrenDisplay: IContainer = this._root._renderer.makeContainer();\n\n\t/**\n\t * List of Container's child elements.\n\t */\n\tpublic children: Children<Sprite> = new Children(this);\n\n\tpublic _percentageSizeChildren: Array<Sprite> = [];\n\tpublic _percentagePositionChildren: Array<Sprite> = [];\n\n\tpublic static className: string = \"Container\";\n\tpublic static classNames: Array<string> = Sprite.classNames.concat([Container.className]);\n\n\tpublic _prevWidth: number = 0;\n\tpublic _prevHeight: number = 0;\n\n\tprotected _contentWidth: number = 0;\n\tprotected _contentHeight: number = 0;\n\n\tprotected _contentMask: Rectangle | undefined;\n\n\tprotected _vsbd0: IDisposer | undefined;\n\tprotected _vsbd1: IDisposer | undefined;\n\n\tprotected _afterNew() {\n\t\tsuper._afterNew();\n\t\tthis._display.addChild(this._childrenDisplay);\n\t}\n\n\tprotected _dispose() {\n\t\t$array.eachReverse(this.allChildren(), (child) => {\n\t\t\tchild.dispose();\n\t\t});\n\n\t\tif (this.getPrivate(\"htmlElement\")) {\n\t\t\tthis._root._removeHTMLContent(this);\n\t\t}\n\n\t\tsuper._dispose();\n\t}\n\n\tpublic _changed() {\n\t\tsuper._changed();\n\n\t\tif (this.isDirty(\"interactiveChildren\")) {\n\t\t\tthis._display.interactiveChildren = this.get(\"interactiveChildren\", false);\n\t\t}\n\n\t\tif (this.isDirty(\"layout\")) {\n\t\t\tthis._prevWidth = 0;\n\t\t\tthis._prevHeight = 0;\n\t\t\tthis.markDirtyBounds();\n\t\t\tif (this._prevSettings.layout) {\n\t\t\t\tthis.children.each((child) => {\n\t\t\t\t\tchild.removePrivate(\"x\");\n\t\t\t\t\tchild.removePrivate(\"y\");\n\t\t\t\t})\n\t\t\t}\n\t\t}\n\n\t\tif (this.isDirty(\"paddingTop\") || this.isDirty(\"paddingBottom\") || this.isDirty(\"paddingLeft\") || this.isDirty(\"paddingRight\")) {\n\t\t\tthis.children.each((child) => {\n\t\t\t\tchild.markDirtyPosition();\n\t\t\t})\n\t\t}\n\n\t\tif (this.isDirty(\"maskContent\")) {\n\n\t\t\tconst childrenDisplay = this._childrenDisplay;\n\n\t\t\tlet contentMask = this._contentMask;\n\t\t\tif (this.get(\"maskContent\")) {\n\t\t\t\tif (!contentMask) {\n\t\t\t\t\tcontentMask = Rectangle.new(this._root, {\n\t\t\t\t\t\tx: -.5,\n\t\t\t\t\t\ty: -.5,\n\t\t\t\t\t\twidth: this.width() + 1,\n\t\t\t\t\t\theight: this.height() + 1\n\t\t\t\t\t});\n\t\t\t\t\tthis._contentMask = contentMask;\n\t\t\t\t\tchildrenDisplay.addChildAt(contentMask._display, 0);\n\t\t\t\t\tchildrenDisplay.mask = contentMask._display;\n\t\t\t\t}\n\t\t\t}\n\t\t\telse {\n\t\t\t\tif (contentMask) {\n\t\t\t\t\tchildrenDisplay.removeChild(contentMask._display);\n\t\t\t\t\tchildrenDisplay.mask = null;\n\t\t\t\t\tcontentMask.dispose();\n\t\t\t\t\tthis._contentMask = undefined;\n\t\t\t\t}\n\t\t\t}\n\t\t}\n\t}\n\n\tpublic _updateSize() {\n\t\tsuper._updateSize();\n\n\t\t$array.each(this._percentageSizeChildren, (child) => {\n\t\t\tchild._updateSize();\n\t\t});\n\n\t\t$array.each(this._percentagePositionChildren, (child) => {\n\t\t\tchild.markDirtyPosition();\n\t\t\tchild._updateSize();\n\t\t});\n\n\t\tthis.updateBackground();\n\t}\n\n\tprotected updateBackground() {\n\t\tconst background = this.get(\"background\");\n\t\tlet bounds = this._localBounds;\n\n\t\tif (bounds && !this.isHidden()) {\n\t\t\tlet x = bounds.left;\n\t\t\tlet y = bounds.top;\n\t\t\tlet w = bounds.right - x;\n\t\t\tlet h = bounds.bottom - y;\n\n\t\t\tlet maxWidth = this.get(\"maxWidth\");\n\t\t\tlet maxHeight = this.get(\"maxHeight\");\n\n\t\t\tif (maxHeight) {\n\t\t\t\tif (h > maxHeight) {\n\t\t\t\t\th = maxHeight;\n\t\t\t\t}\n\t\t\t}\n\n\t\t\tif (maxWidth) {\n\t\t\t\tif (w > maxWidth) {\n\t\t\t\t\tw = maxWidth;\n\t\t\t\t}\n\t\t\t}\n\n\t\t\tlet width = this.width();\n\t\t\tlet height = this.height();\n\n\t\t\tif (background) {\n\t\t\t\tbackground.setAll({ width: w, height: h, x: x, y: y });\n\t\t\t\tif (this._display.interactive) {\n\t\t\t\t\tbackground._display.interactive = true;\n\t\t\t\t}\n\t\t\t}\n\n\t\t\tconst contentMask = this._contentMask;\n\t\t\tif (contentMask) {\n\t\t\t\tcontentMask.setAll({ width: width + 1, height: height + 1 });\n\t\t\t}\n\n\t\t\tconst verticalScrollbar = this.get(\"verticalScrollbar\")!;\n\t\t\tif (verticalScrollbar) {\n\t\t\t\tverticalScrollbar.set(\"height\", height);\n\t\t\t\tverticalScrollbar.set(\"x\", width - verticalScrollbar.width() - verticalScrollbar.get(\"marginRight\", 0));\n\t\t\t\tverticalScrollbar.set(\"end\", verticalScrollbar.get(\"start\", 0) + height / this._contentHeight);\n\n\t\t\t\tconst bg = verticalScrollbar.get(\"background\");\n\t\t\t\tif (bg) {\n\t\t\t\t\tbg.setAll({ width: verticalScrollbar.width(), height: height })\n\t\t\t\t}\n\n\t\t\t\tlet visible = true;\n\t\t\t\tif (this._contentHeight <= height) {\n\t\t\t\t\tvisible = false;\n\t\t\t\t}\n\t\t\t\tverticalScrollbar.setPrivate(\"visible\", visible);\n\t\t\t}\n\t\t}\n\t}\n\n\tpublic _applyThemes(force: boolean = false): boolean {\n\t\tif (super._applyThemes(force)) {\n\t\t\tthis.eachChildren((child) => {\n\t\t\t\tchild._applyThemes(force);\n\t\t\t});\n\n\t\t\treturn true;\n\n\t\t} else {\n\t\t\treturn false;\n\t\t}\n\t}\n\n\tpublic _applyState(name: string): void {\n\t\tsuper._applyState(name);\n\n\t\tif (this.get(\"setStateOnChildren\")) {\n\t\t\tthis.eachChildren((child) => {\n\t\t\t\tchild.states.apply(name);\n\t\t\t});\n\t\t}\n\t}\n\n\tpublic _applyStateAnimated(name: string, duration?: number): void {\n\t\tsuper._applyStateAnimated(name, duration);\n\n\t\tif (this.get(\"setStateOnChildren\")) {\n\t\t\tthis.eachChildren((child) => {\n\t\t\t\tchild.states.applyAnimate(name, duration);\n\t\t\t});\n\t\t}\n\t}\n\n\t/**\n\t * Returns container's inner width (width without padding) in pixels.\n\t *\n\t * @return Inner width (px)\n\t */\n\tpublic innerWidth(): number {\n\t\treturn this.width() - this.get(\"paddingRight\", 0) - this.get(\"paddingLeft\", 0);\n\t}\n\n\t/**\n\t * Returns container's inner height (height without padding) in pixels.\n\t *\n\t * @return Inner height (px)\n\t */\n\tpublic innerHeight(): number {\n\t\treturn this.height() - this.get(\"paddingTop\", 0) - this.get(\"paddingBottom\", 0);\n\t}\n\n\tpublic _getBounds() {\n\t\tif (!this.get(\"html\")) {\n\t\t\tlet width = this.get(\"width\");\n\t\t\tlet height = this.get(\"height\");\n\n\t\t\tlet pWidth = this.getPrivate(\"width\");\n\t\t\tlet pHeight = this.getPrivate(\"height\");\n\n\t\t\tlet bounds: IBounds = {\n\t\t\t\tleft: 0,\n\t\t\t\ttop: 0,\n\t\t\t\tright: this.width(),\n\t\t\t\tbottom: this.height()\n\t\t\t};\n\n\t\t\tlet layout = this.get(\"layout\");\n\t\t\tlet horizontal = false;\n\t\t\tlet vertical = false;\n\t\t\tif (layout instanceof HorizontalLayout || layout instanceof GridLayout) {\n\t\t\t\thorizontal = true;\n\t\t\t}\n\n\t\t\tif (layout instanceof VerticalLayout) {\n\t\t\t\tvertical = true;\n\t\t\t}\n\n\t\t\tif ((width != null || pWidth != null) && (height != null || pHeight != null) && !this.get(\"verticalScrollbar\")) {\n\t\t\t\t// void\n\t\t\t}\n\t\t\telse {\n\t\t\t\tlet m = Number.MAX_VALUE;\n\n\t\t\t\tlet l = m;\n\t\t\t\tlet r = -m;\n\t\t\t\tlet t = m;\n\t\t\t\tlet b = -m;\n\n\t\t\t\tconst paddingLeft = this.get(\"paddingLeft\", 0);\n\t\t\t\tconst paddingTop = this.get(\"paddingTop\", 0);\n\t\t\t\tconst paddingRight = this.get(\"paddingRight\", 0);\n\t\t\t\tconst paddingBottom = this.get(\"paddingBottom\", 0);\n\n\t\t\t\tthis.children.each((child) => {\n\t\t\t\t\tif (child.get(\"position\") != \"absolute\" && child.get(\"isMeasured\")) {\n\t\t\t\t\t\tlet childBounds = child.adjustedLocalBounds();\n\t\t\t\t\t\tlet childX = child.x();\n\t\t\t\t\t\tlet childY = child.y();\n\t\t\t\t\t\tlet cl = childX + childBounds.left;\n\t\t\t\t\t\tlet cr = childX + childBounds.right;\n\t\t\t\t\t\tlet ct = childY + childBounds.top;\n\t\t\t\t\t\tlet cb = childY + childBounds.bottom;\n\n\t\t\t\t\t\tif (horizontal) {\n\t\t\t\t\t\t\tcl -= child.get(\"marginLeft\", 0);\n\t\t\t\t\t\t\tcr += child.get(\"marginRight\", 0);\n\t\t\t\t\t\t}\n\n\t\t\t\t\t\tif (vertical) {\n\t\t\t\t\t\t\tct -= child.get(\"marginTop\", 0);\n\t\t\t\t\t\t\tcb += child.get(\"marginBottom\", 0);\n\t\t\t\t\t\t}\n\n\t\t\t\t\t\tif (cl < l) {\n\t\t\t\t\t\t\tl = cl;\n\t\t\t\t\t\t}\n\t\t\t\t\t\tif (cr > r) {\n\t\t\t\t\t\t\tr = cr;\n\t\t\t\t\t\t}\n\t\t\t\t\t\tif (ct < t) {\n\t\t\t\t\t\t\tt = ct;\n\t\t\t\t\t\t}\n\t\t\t\t\t\tif (cb > b) {\n\t\t\t\t\t\t\tb = cb;\n\t\t\t\t\t\t}\n\t\t\t\t\t}\n\t\t\t\t})\n\n\t\t\t\tif (l == m) {\n\t\t\t\t\tl = 0;\n\t\t\t\t}\n\n\t\t\t\tif (r == -m) {\n\t\t\t\t\tr = 0;\n\t\t\t\t}\n\n\t\t\t\tif (t == m) {\n\t\t\t\t\tt = 0;\n\t\t\t\t}\n\n\t\t\t\tif (b == -m) {\n\t\t\t\t\tb = 0;\n\t\t\t\t}\n\n\t\t\t\tbounds.left = l - paddingLeft;\n\t\t\t\tbounds.top = t - paddingTop;\n\t\t\t\tbounds.right = r + paddingRight;\n\t\t\t\tbounds.bottom = b + paddingBottom;\n\n\t\t\t\tconst minWidth = this.get(\"minWidth\");\n\n\t\t\t\tif ($type.isNumber(minWidth) && minWidth > 0) {\n\t\t\t\t\tif (bounds.right - bounds.left < minWidth) {\n\t\t\t\t\t\tif (bounds.right >= minWidth) {\n\t\t\t\t\t\t\tbounds.left = bounds.right - minWidth;\n\t\t\t\t\t\t}\n\t\t\t\t\t\telse {\n\t\t\t\t\t\t\tbounds.right = bounds.left + minWidth;\n\t\t\t\t\t\t}\n\t\t\t\t\t}\n\t\t\t\t}\n\n\t\t\t\tconst minHeight = this.get(\"minHeight\");\n\n\t\t\t\tif ($type.isNumber(minHeight) && minHeight > 0) {\n\t\t\t\t\tif (bounds.bottom - bounds.top < minHeight) {\n\t\t\t\t\t\tif (bounds.bottom >= minHeight) {\n\t\t\t\t\t\t\tbounds.top = bounds.bottom - minHeight;\n\t\t\t\t\t\t}\n\t\t\t\t\t\telse {\n\t\t\t\t\t\t\tbounds.bottom = bounds.top + minHeight;\n\t\t\t\t\t\t}\n\t\t\t\t\t}\n\t\t\t\t}\n\t\t\t}\n\n\t\t\tthis._contentWidth = bounds.right - bounds.left;\n\t\t\tthis._contentHeight = bounds.bottom - bounds.top;\n\n\t\t\tif ($type.isNumber(width)) {\n\t\t\t\tbounds.left = 0;\n\t\t\t\tbounds.right = width;\n\t\t\t}\n\n\t\t\tif ($type.isNumber(pWidth)) {\n\t\t\t\tbounds.left = 0;\n\t\t\t\tbounds.right = pWidth;\n\t\t\t}\n\n\t\t\tif ($type.isNumber(height)) {\n\t\t\t\tbounds.top = 0;\n\t\t\t\tbounds.bottom = height;\n\t\t\t}\n\n\t\t\tif ($type.isNumber(pHeight)) {\n\t\t\t\tbounds.top = 0;\n\t\t\t\tbounds.bottom = pHeight;\n\t\t\t}\n\n\t\t\tthis._localBounds = bounds;\n\t\t}\n\t\telse {\n\t\t\tlet bounds = this._localBounds;\n\t\t\tif (bounds) {\n\t\t\t\tthis._contentWidth = bounds.right - bounds.left;\n\t\t\t\tthis._contentHeight = bounds.bottom - bounds.top;\n\t\t\t}\n\t\t}\n\t}\n\n\tpublic _updateBounds() {\n\t\tconst layout = this.get(\"layout\");\n\n\t\tif (layout) {\n\t\t\tlayout.updateContainer(this);\n\t\t}\n\n\t\tsuper._updateBounds();\n\n\t\tthis.updateBackground();\n\t}\n\n\t/**\n\t * @ignore\n\t */\n\tpublic markDirty(): void {\n\t\tsuper.markDirty();\n\t\tthis._root._addDirtyParent(this);\n\t}\n\n\tpublic _prepareChildren() {\n\t\tconst innerWidth = this.innerWidth();\n\t\tconst innerHeight = this.innerHeight();\n\n\t\tif (innerWidth != this._prevWidth || innerHeight != this._prevHeight) {\n\t\t\tlet layout = this.get(\"layout\");\n\t\t\tlet horizontal = false;\n\t\t\tlet vertical = false;\n\t\t\tif (layout) {\n\t\t\t\tif (layout instanceof HorizontalLayout || layout instanceof GridLayout) {\n\t\t\t\t\thorizontal = true;\n\t\t\t\t}\n\t\t\t\tif (layout instanceof VerticalLayout) {\n\t\t\t\t\tvertical = true;\n\t\t\t\t}\n\t\t\t}\n\n\t\t\t$array.each(this._percentageSizeChildren, (child) => {\n\t\t\t\tif (!horizontal) {\n\t\t\t\t\tlet width = child.get(\"width\");\n\t\t\t\t\tif (width instanceof Percent) {\n\t\t\t\t\t\tchild.setPrivate(\"width\", width.value * innerWidth);\n\t\t\t\t\t}\n\t\t\t\t}\n\t\t\t\tif (!vertical) {\n\t\t\t\t\tlet height = child.get(\"height\");\n\t\t\t\t\tif (height instanceof Percent) {\n\t\t\t\t\t\tchild.setPrivate(\"height\", height.value * innerHeight);\n\t\t\t\t\t}\n\t\t\t\t}\n\t\t\t})\n\n\t\t\t$array.each(this._percentagePositionChildren, (child) => {\n\t\t\t\tchild.markDirtyPosition();\n\t\t\t\tchild.markDirtyBounds();\n\t\t\t})\n\n\t\t\tthis._prevWidth = innerWidth;\n\t\t\tthis._prevHeight = innerHeight;\n\n\t\t\tthis._sizeDirty = true;\n\t\t\tthis.updateBackground();\n\t\t}\n\n\t\tthis._handleStates();\n\t}\n\n\tpublic _updateHTMLContent() {\n\t\tconst html = this.get(\"html\");\n\t\tif (html && html !== \"\") {\n\t\t\tthis._root._setHTMLContent(this, populateString(this, this.get(\"html\", \"\")));\n\t\t}\n\t\telse {\n\t\t\tthis._root._removeHTMLContent(this);\n\t\t}\n\t\tthis._root._positionHTMLElement(this);\n\t}\n\n\t/**\n\t * If scrolling is enabled on the Container (by adding `verticalScrollbar`)\n\t * the Container will scroll in such way so that target element becomes\n\t * visible if its currently outside of view.\n\t * \n\t * @param  child  Target child\n\t * @since 5.10.5\n\t */\n\tpublic scrollToChild(child: Sprite) {\n\t\tconst verticalScrollbar = this.get(\"verticalScrollbar\")!;\n\t\tif (verticalScrollbar) {\n\t\t\tlet y = child.y();\n\t\t\tlet h = this.innerHeight();\n\t\t\tlet ch = child.height();\n\t\t\tlet contentH = this._contentHeight;\n\t\t\tlet max = 1 - (h - ch / 2) / contentH;\n\n\t\t\tif (y + ch * .7 + this._childrenDisplay.y > h || y - ch * .3 + this._childrenDisplay.y < 0) {\n\t\t\t\tlet pos = Math.max(0, Math.min(max, (y - ch / 2) / contentH));\n\t\t\t\tverticalScrollbar.animate({ key: \"start\", to: pos, duration: verticalScrollbar.get(\"animationDuration\", 0), easing: verticalScrollbar.get(\"animationEasing\") });\n\t\t\t}\n\t\t}\n\t}\n\n\tpublic _updateChildren() {\n\n\n\t\tif (this.isDirty(\"html\")) {\n\t\t\tthis._updateHTMLContent();\n\t\t}\n\n\t\tif (this.isDirty(\"verticalScrollbar\")) {\n\t\t\tconst verticalScrollbar = this.get(\"verticalScrollbar\")!;\n\t\t\tif (verticalScrollbar) {\n\t\t\t\tverticalScrollbar._setParent(this);\n\n\t\t\t\tverticalScrollbar.startGrip.setPrivate(\"visible\", false);\n\t\t\t\tverticalScrollbar.endGrip.setPrivate(\"visible\", false);\n\n\t\t\t\tthis.set(\"maskContent\", true);\n\t\t\t\tthis.set(\"paddingRight\", verticalScrollbar.width() + verticalScrollbar.get(\"marginRight\", 0) + verticalScrollbar.get(\"marginLeft\", 0));\n\n\t\t\t\tlet background = this.get(\"background\");\n\n\t\t\t\tif (!background) {\n\t\t\t\t\tbackground = this.set(\"background\", Rectangle.new(this._root, {\n\t\t\t\t\t\tthemeTags: [\"background\"],\n\t\t\t\t\t\tfillOpacity: 0,\n\t\t\t\t\t\tfill: this._root.interfaceColors.get(\"alternativeBackground\")\n\t\t\t\t\t}));\n\t\t\t\t}\n\n\t\t\t\tthis._vsbd0 = this.events.on(\"wheel\", (event) => {\n\t\t\t\t\tconst wheelEvent = event.originalEvent;\n\n\t\t\t\t\t// Ignore wheel event if it is happening on a non-chart element, e.g. if\n\t\t\t\t\t// some page element is over the chart.\n\t\t\t\t\tif ($utils.isLocalEvent(wheelEvent, this)) {\n\t\t\t\t\t\twheelEvent.preventDefault();\n\t\t\t\t\t}\n\t\t\t\t\telse {\n\t\t\t\t\t\treturn;\n\t\t\t\t\t}\n\n\t\t\t\t\tlet shiftY = wheelEvent.deltaY / 5000;\n\t\t\t\t\tconst start = verticalScrollbar.get(\"start\", 0);\n\t\t\t\t\tconst end = verticalScrollbar.get(\"end\", 1);\n\n\t\t\t\t\tif (start + shiftY <= 0) {\n\t\t\t\t\t\tshiftY = -start;\n\t\t\t\t\t}\n\t\t\t\t\tif (end + shiftY >= 1) {\n\t\t\t\t\t\tshiftY = 1 - end;\n\t\t\t\t\t}\n\n\t\t\t\t\tif (start + shiftY >= 0 && end + shiftY <= 1) {\n\t\t\t\t\t\tverticalScrollbar.set(\"start\", start + shiftY);\n\t\t\t\t\t\tverticalScrollbar.set(\"end\", end + shiftY);\n\t\t\t\t\t}\n\n\t\t\t\t})\n\n\t\t\t\tthis._disposers.push(this._vsbd0);\n\n\t\t\t\tthis._vsbd1 = verticalScrollbar.events.on(\"rangechanged\", () => {\n\t\t\t\t\tlet h = this._contentHeight;\n\t\t\t\t\tconst childrenDisplay = this._childrenDisplay;\n\t\t\t\t\tconst contentMask = this._contentMask;\n\n\t\t\t\t\tchildrenDisplay.y = -verticalScrollbar.get(\"start\", 0) * h;\n\t\t\t\t\tchildrenDisplay.markDirtyLayer();\n\n\t\t\t\t\tif (contentMask) {\n\t\t\t\t\t\tcontentMask._display.y = -childrenDisplay.y;\n\t\t\t\t\t\tchildrenDisplay.mask = contentMask._display;\n\t\t\t\t\t}\n\t\t\t\t})\n\n\t\t\t\tthis._disposers.push(this._vsbd1);\n\n\t\t\t\tthis._display.addChild(verticalScrollbar._display);\n\t\t\t}\n\t\t\telse {\n\t\t\t\tconst previous = this._prevSettings.verticalScrollbar\n\t\t\t\tif (previous) {\n\t\t\t\t\tthis._display.removeChild(previous._display);\n\t\t\t\t\tif (this._vsbd0) {\n\t\t\t\t\t\tthis._vsbd0.dispose();\n\t\t\t\t\t}\n\t\t\t\t\tif (this._vsbd1) {\n\t\t\t\t\t\tthis._vsbd1.dispose();\n\t\t\t\t\t}\n\t\t\t\t\tconst childrenDisplay = this._childrenDisplay;\n\t\t\t\t\tchildrenDisplay.y = 0;\n\n\t\t\t\t\tthis.setPrivate(\"height\", undefined);\n\t\t\t\t\tthis.set(\"maskContent\", false);\n\t\t\t\t\tthis.set(\"paddingRight\", undefined);\n\t\t\t\t}\n\t\t\t}\n\t\t}\n\n\t\tif (this.isDirty(\"background\")) {\n\t\t\t// TODO maybe this should dispose ?\n\t\t\tconst previous = this._prevSettings[\"background\"];\n\t\t\tif (previous) {\n\t\t\t\tthis._display.removeChild(previous._display);\n\t\t\t}\n\n\t\t\tconst background = this.get(\"background\");\n\t\t\tif (background instanceof Sprite) {\n\t\t\t\tbackground.set(\"isMeasured\", false);\n\t\t\t\tbackground._setParent(this);\n\t\t\t\tthis._display.addChildAt(background._display, 0);\n\t\t\t}\n\t\t}\n\n\t\tif (this.isDirty(\"mask\")) {\n\n\t\t\tconst mask = this.get(\"mask\");\n\n\t\t\tconst previous = this._prevSettings[\"mask\"];\n\t\t\tif (previous) {\n\t\t\t\tthis._display.removeChild(previous._display);\n\t\t\t\tif (previous != mask) {\n\t\t\t\t\tprevious.dispose();\n\t\t\t\t}\n\t\t\t}\n\n\t\t\tif (mask) {\n\t\t\t\tconst parent = mask.parent;\n\t\t\t\tif (parent) {\n\t\t\t\t\tparent.children.removeValue(mask);\n\t\t\t\t}\n\n\t\t\t\tmask._setParent(this);\n\t\t\t\tthis._display.addChildAt(mask._display, 0);\n\t\t\t\tthis._childrenDisplay.mask = mask._display;\n\t\t\t}\n\t\t}\n\t}\n\n\tpublic _processTemplateField(): void {\n\t\tsuper._processTemplateField();\n\t\tthis.children.each((child) => {\n\t\t\tchild._processTemplateField();\n\t\t})\n\t}\n\n\t/**\n\t * @ignore\n\t */\n\tpublic walkChildren(f: (child: Sprite) => void): void {\n\t\tthis.children.each((child) => {\n\t\t\tif (child instanceof Container) {\n\t\t\t\tchild.walkChildren(f);\n\t\t\t}\n\t\t\tf(child);\n\t\t});\n\t}\n\n\tpublic eachChildren(f: (child: Sprite) => void): void {\n\t\tconst background = this.get(\"background\");\n\t\tif (background) {\n\t\t\tf(background);\n\t\t}\n\n\t\tconst verticalScrollbar = this.get(\"verticalScrollbar\");\n\t\tif (verticalScrollbar) {\n\t\t\tf(verticalScrollbar);\n\t\t}\n\n\t\tconst mask = this.get(\"mask\");\n\t\tif (mask) {\n\t\t\tf(mask);\n\t\t}\n\n\t\tthis.children.values.forEach((child) => {\n\t\t\tf(child);\n\t\t});\n\t}\n\n\tpublic allChildren(): Array<Sprite> {\n\t\tconst output: Array<Sprite> = [];\n\n\t\tthis.eachChildren((x) => {\n\t\t\toutput.push(x);\n\t\t});\n\n\t\treturn output;\n\t}\n\n\tpublic _setDataItem(dataItem?: DataItem<IComponentDataItem>): void {\n\t\tconst updated = (dataItem !== this._dataItem);\n\t\tsuper._setDataItem(dataItem);\n\t\tconst html = this.get(\"html\", \"\");\n\t\tif (html && html !== \"\" && updated) {\n\t\t\tthis._root._setHTMLContent(this, populateString(this, html));\n\t\t}\n\t}\n}\n","import { List } from \"./List\";\r\nimport * as $array from \"./Array\";\r\n/**\r\n * A version of [[List]] to hold children of the [[Container]].\r\n *\r\n * @see {@link https://www.amcharts.com/docs/v5/concepts/common-elements/containers/} for more info\r\n */\r\nexport class Children extends List {\r\n    constructor(container) {\r\n        super();\r\n        Object.defineProperty(this, \"_disposed\", {\r\n            enumerable: true,\r\n            configurable: true,\r\n            writable: true,\r\n            value: false\r\n        });\r\n        Object.defineProperty(this, \"_container\", {\r\n            enumerable: true,\r\n            configurable: true,\r\n            writable: true,\r\n            value: void 0\r\n        });\r\n        Object.defineProperty(this, \"_events\", {\r\n            enumerable: true,\r\n            configurable: true,\r\n            writable: true,\r\n            value: void 0\r\n        });\r\n        this._container = container;\r\n        this._events = this.events.onAll((change) => {\r\n            if (change.type === \"clear\") {\r\n                $array.each(change.oldValues, (x) => {\r\n                    this._onRemoved(x);\r\n                });\r\n            }\r\n            else if (change.type === \"push\") {\r\n                this._onInserted(change.newValue);\r\n            }\r\n            else if (change.type === \"setIndex\") {\r\n                this._onRemoved(change.oldValue);\r\n                this._onInserted(change.newValue, change.index);\r\n            }\r\n            else if (change.type === \"insertIndex\") {\r\n                this._onInserted(change.newValue, change.index);\r\n            }\r\n            else if (change.type === \"removeIndex\") {\r\n                this._onRemoved(change.oldValue);\r\n            }\r\n            else if (change.type === \"moveIndex\") {\r\n                this._onRemoved(change.value);\r\n                this._onInserted(change.value, change.newIndex);\r\n            }\r\n            else {\r\n                throw new Error(\"Unknown IListEvent type\");\r\n            }\r\n        });\r\n    }\r\n    _onInserted(child, index) {\r\n        child._setParent(this._container, true);\r\n        const childrenDisplay = this._container._childrenDisplay;\r\n        if (index === undefined) {\r\n            childrenDisplay.addChild(child._display);\r\n        }\r\n        else {\r\n            childrenDisplay.addChildAt(child._display, index);\r\n        }\r\n    }\r\n    _onRemoved(child) {\r\n        this._container._childrenDisplay.removeChild(child._display);\r\n        this._container.markDirtyBounds();\r\n        this._container.markDirty();\r\n    }\r\n    /**\r\n     * Returns `true` if obejct is disposed.\r\n     */\r\n    isDisposed() {\r\n        return this._disposed;\r\n    }\r\n    /**\r\n     * Permanently dispose this object.\r\n     */\r\n    dispose() {\r\n        if (!this._disposed) {\r\n            this._disposed = true;\r\n            this._events.dispose();\r\n            $array.each(this.values, (child) => {\r\n                child.dispose();\r\n            });\r\n        }\r\n    }\r\n}\r\n//# sourceMappingURL=Children.js.map","import { List } from \"./List\";\nimport type { IDisposer } from \"./Disposer\";\nimport type { Container } from \"../render/Container\";\nimport type { Sprite } from \"../render/Sprite\";\nimport * as $array from \"./Array\";\n\n/**\n * A version of [[List]] to hold children of the [[Container]].\n *\n * @see {@link https://www.amcharts.com/docs/v5/concepts/common-elements/containers/} for more info\n */\nexport class Children<A extends Sprite> extends List<A> implements IDisposer {\n\tprivate _disposed: boolean = false;\n\tprivate _container: Container;\n\tprivate _events: IDisposer;\n\n\tpublic constructor(container: Container) {\n\t\tsuper();\n\n\t\tthis._container = container;\n\n\t\tthis._events = this.events.onAll((change) => {\n\t\t\tif (change.type === \"clear\") {\n\t\t\t\t$array.each(change.oldValues, (x) => {\n\t\t\t\t\tthis._onRemoved(x);\n\t\t\t\t});\n\n\t\t\t} else if (change.type === \"push\") {\n\t\t\t\tthis._onInserted(change.newValue);\n\n\t\t\t} else if (change.type === \"setIndex\") {\n\t\t\t\tthis._onRemoved(change.oldValue);\n\t\t\t\tthis._onInserted(change.newValue, change.index);\n\n\t\t\t} else if (change.type === \"insertIndex\") {\n\t\t\t\tthis._onInserted(change.newValue, change.index);\n\n\t\t\t} else if (change.type === \"removeIndex\") {\n\t\t\t\tthis._onRemoved(change.oldValue);\n\n\t\t\t} else if (change.type === \"moveIndex\") {\n\t\t\t\tthis._onRemoved(change.value);\n\t\t\t\tthis._onInserted(change.value, change.newIndex);\n\n\t\t\t} else {\n\t\t\t\tthrow new Error(\"Unknown IListEvent type\");\n\t\t\t}\n\t\t});\n\t}\n\n\tprotected _onInserted(child: A, index?: number) {\n\t\tchild._setParent(this._container, true);\n\t\tconst childrenDisplay = this._container._childrenDisplay;\n\t\tif (index === undefined) {\n\t\t\tchildrenDisplay.addChild(child._display);\n\n\t\t} else {\n\t\t\tchildrenDisplay.addChildAt(child._display, index);\n\t\t}\n\t}\n\n\tprotected _onRemoved(child: A) {\n\t\tthis._container._childrenDisplay.removeChild(child._display);\n\t\tthis._container.markDirtyBounds();\n\t\tthis._container.markDirty();\n\t}\n\n\t/**\n\t * Returns `true` if obejct is disposed.\n\t */\n\tpublic isDisposed(): boolean {\n\t\treturn this._disposed;\n\t}\n\n\t/**\n\t * Permanently dispose this object.\n\t */\n\tpublic dispose() {\n\t\tif (!this._disposed) {\n\t\t\tthis._disposed = true;\n\n\t\t\tthis._events.dispose();\n\n\t\t\t$array.each(this.values, (child) => {\n\t\t\t\tchild.dispose();\n\t\t\t});\n\t\t}\n\t}\n}\n","import { EventDispatcher } from \"./EventDispatcher\";\r\nimport * as $array from \"./Array\";\r\n/**\r\n * Checks if specific index fits into length.\r\n *\r\n * @param index  Index\r\n * @param len    Length\r\n * @ignore\r\n */\r\nfunction checkBounds(index, len) {\r\n    if (!(index >= 0 && index < len)) {\r\n        throw new Error(\"Index out of bounds: \" + index);\r\n    }\r\n}\r\n/**\r\n * A List class is used to hold a number of indexed items of the same type.\r\n */\r\nexport class List {\r\n    /**\r\n     * Constructor\r\n     *\r\n     * @param initial  Inital list of values to add to list\r\n     */\r\n    constructor(initial = []) {\r\n        /**\r\n         * List values.\r\n         */\r\n        Object.defineProperty(this, \"_values\", {\r\n            enumerable: true,\r\n            configurable: true,\r\n            writable: true,\r\n            value: void 0\r\n        });\r\n        Object.defineProperty(this, \"events\", {\r\n            enumerable: true,\r\n            configurable: true,\r\n            writable: true,\r\n            value: new EventDispatcher()\r\n        });\r\n        this._values = initial;\r\n    }\r\n    /**\r\n     * An array of values in the list.\r\n     *\r\n     * Do not use this property to add values. Rather use dedicated methods, like\r\n     * `push()`, `removeIndex()`, etc.\r\n     *\r\n     * @readonly\r\n     * @return List values\r\n     */\r\n    get values() {\r\n        return this._values;\r\n    }\r\n    /**\r\n     * Checks if list contains specific item reference.\r\n     *\r\n     * @param item  Item to search for\r\n     * @return `true` if found, `false` if not found\r\n     */\r\n    contains(value) {\r\n        return this._values.indexOf(value) !== -1;\r\n    }\r\n    /**\r\n     * Removes specific item from the list.\r\n     *\r\n     * @param item An item to remove\r\n     */\r\n    removeValue(value) {\r\n        let i = 0;\r\n        let length = this._values.length;\r\n        while (i < length) {\r\n            // TODO handle NaN\r\n            if (this._values[i] === value) {\r\n                this.removeIndex(i);\r\n                --length;\r\n            }\r\n            else {\r\n                ++i;\r\n            }\r\n        }\r\n    }\r\n    /**\r\n     * Searches the list for specific item and returns its index.\r\n     *\r\n     * @param item  An item to search for\r\n     * @return Index or -1 if not found\r\n     */\r\n    indexOf(value) {\r\n        return $array.indexOf(this._values, value);\r\n    }\r\n    /**\r\n     * Number of items in list.\r\n     *\r\n     * @readonly\r\n     * @return Number of items\r\n     */\r\n    get length() {\r\n        return this._values.length;\r\n    }\r\n    /**\r\n     * Checks if there's a value at specific index.\r\n     *\r\n     * @param index  Index\r\n     * @return Value exists?\r\n     */\r\n    hasIndex(index) {\r\n        return index >= 0 && index < this._values.length;\r\n    }\r\n    /**\r\n     * Returns an item at specified index.\r\n     *\r\n     * @param index  Index\r\n     * @return List item\r\n     */\r\n    getIndex(index) {\r\n        return this._values[index];\r\n    }\r\n    _onPush(newValue) {\r\n        if (this.events.isEnabled(\"push\")) {\r\n            this.events.dispatch(\"push\", {\r\n                type: \"push\",\r\n                target: this,\r\n                newValue\r\n            });\r\n        }\r\n    }\r\n    _onInsertIndex(index, newValue) {\r\n        if (this.events.isEnabled(\"insertIndex\")) {\r\n            this.events.dispatch(\"insertIndex\", {\r\n                type: \"insertIndex\",\r\n                target: this,\r\n                index,\r\n                newValue\r\n            });\r\n        }\r\n    }\r\n    _onSetIndex(index, oldValue, newValue) {\r\n        if (this.events.isEnabled(\"setIndex\")) {\r\n            this.events.dispatch(\"setIndex\", {\r\n                type: \"setIndex\",\r\n                target: this,\r\n                index,\r\n                oldValue,\r\n                newValue\r\n            });\r\n        }\r\n    }\r\n    _onRemoveIndex(index, oldValue) {\r\n        if (this.events.isEnabled(\"removeIndex\")) {\r\n            this.events.dispatch(\"removeIndex\", {\r\n                type: \"removeIndex\",\r\n                target: this,\r\n                index,\r\n                oldValue\r\n            });\r\n        }\r\n    }\r\n    _onMoveIndex(oldIndex, newIndex, value) {\r\n        if (this.events.isEnabled(\"moveIndex\")) {\r\n            this.events.dispatch(\"moveIndex\", {\r\n                type: \"moveIndex\",\r\n                target: this,\r\n                oldIndex,\r\n                newIndex,\r\n                value,\r\n            });\r\n        }\r\n    }\r\n    _onClear(oldValues) {\r\n        if (this.events.isEnabled(\"clear\")) {\r\n            this.events.dispatch(\"clear\", {\r\n                type: \"clear\",\r\n                target: this,\r\n                oldValues\r\n            });\r\n        }\r\n    }\r\n    /**\r\n     * Sets value at specific index.\r\n     *\r\n     * If there's already a value at the index, it is overwritten.\r\n     *\r\n     * @param index  Index\r\n     * @param value  New value\r\n     * @return New value\r\n     */\r\n    setIndex(index, value) {\r\n        checkBounds(index, this._values.length);\r\n        const oldValue = this._values[index];\r\n        // Do nothing if the old value and the new value are the same\r\n        if (oldValue !== value) {\r\n            this._values[index] = value;\r\n            this._onSetIndex(index, oldValue, value);\r\n        }\r\n        return oldValue;\r\n    }\r\n    /**\r\n     * Adds an item to the list at a specific index, which pushes all the other\r\n     * items further down the list.\r\n     *\r\n     * @param index Index\r\n     * @param item  An item to add\r\n     */\r\n    insertIndex(index, value) {\r\n        checkBounds(index, this._values.length + 1);\r\n        $array.insertIndex(this._values, index, value);\r\n        this._onInsertIndex(index, value);\r\n        return value;\r\n    }\r\n    /**\r\n     * Swaps indexes of two items in the list.\r\n     *\r\n     * @param a  Item 1\r\n     * @param b  Item 2\r\n     */\r\n    swap(a, b) {\r\n        const len = this._values.length;\r\n        checkBounds(a, len);\r\n        checkBounds(b, len);\r\n        if (a !== b) {\r\n            const value_a = this._values[a];\r\n            const value_b = this._values[b];\r\n            this._values[a] = value_b;\r\n            this._onSetIndex(a, value_a, value_b);\r\n            this._values[b] = value_a;\r\n            this._onSetIndex(b, value_b, value_a);\r\n        }\r\n    }\r\n    /**\r\n     * Removes a value at specific index.\r\n     *\r\n     * @param index  Index of value to remove\r\n     * @return Removed value\r\n     */\r\n    removeIndex(index) {\r\n        checkBounds(index, this._values.length);\r\n        const oldValue = this._values[index];\r\n        $array.removeIndex(this._values, index);\r\n        this._onRemoveIndex(index, oldValue);\r\n        return oldValue;\r\n    }\r\n    /**\r\n     * Moves an item to a specific index within the list.\r\n     *\r\n     * If the index is not specified it will move the item to the end of the\r\n     * list.\r\n     *\r\n     * @param value  Item to move\r\n     * @param index  Index to place item at\r\n     */\r\n    moveValue(value, toIndex) {\r\n        // TODO don't do anything if the desired index is the same as the current index\r\n        let index = this.indexOf(value);\r\n        // TODO remove all old values rather than only the first ?\r\n        if (index !== -1) {\r\n            $array.removeIndex(this._values, index);\r\n            if (toIndex == null) {\r\n                const toIndex = this._values.length;\r\n                this._values.push(value);\r\n                this._onMoveIndex(index, toIndex, value);\r\n            }\r\n            else {\r\n                $array.insertIndex(this._values, toIndex, value);\r\n                this._onMoveIndex(index, toIndex, value);\r\n            }\r\n        }\r\n        else if (toIndex == null) {\r\n            this._values.push(value);\r\n            this._onPush(value);\r\n        }\r\n        else {\r\n            $array.insertIndex(this._values, toIndex, value);\r\n            this._onInsertIndex(toIndex, value);\r\n        }\r\n        return value;\r\n    }\r\n    /**\r\n     * Adds an item to the end of the list.\r\n     *\r\n     * @param item  An item to add\r\n     */\r\n    push(value) {\r\n        this._values.push(value);\r\n        this._onPush(value);\r\n        return value;\r\n    }\r\n    /**\r\n     * Adds an item as a first item in the list.\r\n     *\r\n     * @param item  An item to add\r\n     */\r\n    unshift(value) {\r\n        this.insertIndex(0, value);\r\n        return value;\r\n    }\r\n    /**\r\n     * Adds multiple items to the list.\r\n     *\r\n     * @param items  An Array of items to add\r\n     */\r\n    pushAll(values) {\r\n        $array.each(values, (value) => {\r\n            this.push(value);\r\n        });\r\n    }\r\n    /**\r\n     * Copies and adds items from abother list.\r\n     *\r\n     * @param source  A list top copy items from\r\n     */\r\n    copyFrom(source) {\r\n        this.pushAll(source._values);\r\n    }\r\n    /**\r\n     * Returns the last item from the list, and removes it.\r\n     *\r\n     * @return Item\r\n     */\r\n    pop() {\r\n        let index = this._values.length - 1;\r\n        return index < 0 ? undefined : this.removeIndex(this._values.length - 1);\r\n    }\r\n    /**\r\n     * Returns the first item from the list, and removes it.\r\n     *\r\n     * @return Item\r\n     */\r\n    shift() {\r\n        return this._values.length ? this.removeIndex(0) : undefined;\r\n    }\r\n    /**\r\n     * Sets multiple items to the list.\r\n     *\r\n     * All current items are removed.\r\n     *\r\n     * @param newArray  New items\r\n     */\r\n    setAll(newArray) {\r\n        const old = this._values;\r\n        this._values = [];\r\n        this._onClear(old);\r\n        $array.each(newArray, (value) => {\r\n            this._values.push(value);\r\n            this._onPush(value);\r\n        });\r\n    }\r\n    /**\r\n     * Removes all items from the list.\r\n     */\r\n    clear() {\r\n        this.setAll([]);\r\n    }\r\n    /**\r\n     * Returns an ES6 iterator for the list.\r\n     */\r\n    *[Symbol.iterator]() {\r\n        const length = this._values.length;\r\n        for (let i = 0; i < length; ++i) {\r\n            yield this._values[i];\r\n        }\r\n    }\r\n    /**\r\n     * Calls `f` for each element in the list.\r\n     *\r\n     * `f` should have at least one parameter defined which will get a current\r\n     * item, with optional second argument - index.\r\n     */\r\n    each(f) {\r\n        $array.each(this._values, f);\r\n    }\r\n    /**\r\n     * Calls `f` for each element in the list, from right to left.\r\n     *\r\n     * `f` should have at least one parameter defined which will get a current\r\n     * item, with optional second argument - index.\r\n     */\r\n    eachReverse(f) {\r\n        $array.eachReverse(this._values, f);\r\n    }\r\n}\r\n/**\r\n * A version of a [[List]] where the elements are disposed automatically when\r\n * removed from the list, unless `autoDispose` is set to `false`.\r\n */\r\nexport class ListAutoDispose extends List {\r\n    constructor() {\r\n        super(...arguments);\r\n        /**\r\n         * Automatically disposes elements that are removed from the list.\r\n         *\r\n         * @default true\r\n         */\r\n        Object.defineProperty(this, \"autoDispose\", {\r\n            enumerable: true,\r\n            configurable: true,\r\n            writable: true,\r\n            value: true\r\n        });\r\n        Object.defineProperty(this, \"_disposed\", {\r\n            enumerable: true,\r\n            configurable: true,\r\n            writable: true,\r\n            value: false\r\n        });\r\n    }\r\n    _onSetIndex(index, oldValue, newValue) {\r\n        if (this.autoDispose) {\r\n            oldValue.dispose();\r\n        }\r\n        super._onSetIndex(index, oldValue, newValue);\r\n    }\r\n    _onRemoveIndex(index, oldValue) {\r\n        if (this.autoDispose) {\r\n            oldValue.dispose();\r\n        }\r\n        super._onRemoveIndex(index, oldValue);\r\n    }\r\n    _onClear(oldValues) {\r\n        if (this.autoDispose) {\r\n            $array.each(oldValues, (x) => {\r\n                x.dispose();\r\n            });\r\n        }\r\n        super._onClear(oldValues);\r\n    }\r\n    _dispose() {\r\n        if (this.autoDispose) {\r\n            $array.each(this._values, (x) => {\r\n                x.dispose();\r\n            });\r\n        }\r\n    }\r\n    isDisposed() {\r\n        return this._disposed;\r\n    }\r\n    dispose() {\r\n        if (!this._disposed) {\r\n            this._disposed = true;\r\n            this._dispose();\r\n        }\r\n    }\r\n}\r\n/**\r\n * A version of a [[List]] that is able to create new elements as well as\r\n * apply additional settings to newly created items.\r\n *\r\n * @see {@link https://www.amcharts.com/docs/v5/concepts/settings/list-templates/} for more info\r\n */\r\nexport class ListTemplate extends ListAutoDispose {\r\n    constructor(template, make) {\r\n        super();\r\n        Object.defineProperty(this, \"template\", {\r\n            enumerable: true,\r\n            configurable: true,\r\n            writable: true,\r\n            value: void 0\r\n        });\r\n        Object.defineProperty(this, \"make\", {\r\n            enumerable: true,\r\n            configurable: true,\r\n            writable: true,\r\n            value: void 0\r\n        });\r\n        this.template = template;\r\n        this.make = make;\r\n    }\r\n    _dispose() {\r\n        super._dispose();\r\n        if (this.autoDispose) {\r\n            this.template.dispose();\r\n        }\r\n    }\r\n}\r\n//# sourceMappingURL=List.js.map","/**\n * ============================================================================\n * IMPORTS\n * ============================================================================\n * @hidden\n */\nimport type { Entity } from \"./Entity\";\nimport type { Template } from \"./Template\";\nimport type { IDisposer } from \"./Disposer\";\nimport { EventDispatcher, Events } from \"./EventDispatcher\";\nimport * as $array from \"./Array\";\nimport type { Optional } from \"./Type\";\n\n\n/**\n * Checks if specific index fits into length.\n *\n * @param index  Index\n * @param len    Length\n * @ignore\n */\nfunction checkBounds(index: number, len: number): void {\n\tif (!(index >= 0 && index < len)) {\n\t\tthrow new Error(\"Index out of bounds: \" + index);\n\t}\n}\n\n\nexport interface IListEvents<A> {\n\tclear: {\n\t\toldValues: Array<A>,\n\t};\n\tpush: {\n\t\tnewValue: A,\n\t};\n\tinsertIndex: {\n\t\tindex: number,\n\t\tnewValue: A,\n\t};\n\tsetIndex: {\n\t\tindex: number,\n\t\toldValue: A,\n\t\tnewValue: A,\n\t};\n\tremoveIndex: {\n\t\tindex: number,\n\t\toldValue: A,\n\t};\n\tmoveIndex: {\n\t\toldIndex: number,\n\t\tnewIndex: number,\n\t\tvalue: A,\n\t};\n}\n\n\n/**\n * A List class is used to hold a number of indexed items of the same type.\n */\nexport class List<T> {\n\n\t/**\n\t * List values.\n\t */\n\tprotected _values: Array<T>;\n\n\tpublic events: EventDispatcher<Events<this, IListEvents<T>>> = new EventDispatcher();\n\n\t/**\n\t * Constructor\n\t *\n\t * @param initial  Inital list of values to add to list\n\t */\n\tconstructor(initial: Array<T> = []) {\n\t\tthis._values = initial;\n\t}\n\n\t/**\n\t * An array of values in the list.\n\t *\n\t * Do not use this property to add values. Rather use dedicated methods, like\n\t * `push()`, `removeIndex()`, etc.\n\t *\n\t * @readonly\n\t * @return List values\n\t */\n\tpublic get values(): Array<T> {\n\t\treturn this._values;\n\t}\n\n\t/**\n\t * Checks if list contains specific item reference.\n\t *\n\t * @param item  Item to search for\n\t * @return `true` if found, `false` if not found\n\t */\n\tpublic contains(value: T): boolean {\n\t\treturn this._values.indexOf(value) !== -1;\n\t}\n\n\t/**\n\t * Removes specific item from the list.\n\t *\n\t * @param item An item to remove\n\t */\n\tpublic removeValue(value: T): void {\n\t\tlet i = 0;\n\t\tlet length = this._values.length;\n\n\t\twhile (i < length) {\n\t\t\t// TODO handle NaN\n\t\t\tif (this._values[i] === value) {\n\t\t\t\tthis.removeIndex(i);\n\t\t\t\t--length;\n\n\t\t\t} else {\n\t\t\t\t++i;\n\t\t\t}\n\t\t}\n\t}\n\n\t/**\n\t * Searches the list for specific item and returns its index.\n\t *\n\t * @param item  An item to search for\n\t * @return Index or -1 if not found\n\t */\n\tpublic indexOf(value: T): number {\n\t\treturn $array.indexOf(this._values, value);\n\t}\n\n\t/**\n\t * Number of items in list.\n\t *\n\t * @readonly\n\t * @return Number of items\n\t */\n\tpublic get length(): number {\n\t\treturn this._values.length;\n\t}\n\n\t/**\n\t * Checks if there's a value at specific index.\n\t *\n\t * @param index  Index\n\t * @return Value exists?\n\t */\n\tpublic hasIndex(index: number): boolean {\n\t\treturn index >= 0 && index < this._values.length;\n\t}\n\n\t/**\n\t * Returns an item at specified index.\n\t *\n\t * @param index  Index\n\t * @return List item\n\t */\n\tpublic getIndex(index: number): T | undefined {\n\t\treturn this._values[index];\n\t}\n\n\tprotected _onPush(newValue: T) {\n\t\tif (this.events.isEnabled(\"push\")) {\n\t\t\tthis.events.dispatch(\"push\", {\n\t\t\t\ttype: \"push\",\n\t\t\t\ttarget: this,\n\t\t\t\tnewValue\n\t\t\t});\n\t\t}\n\t}\n\n\tprotected _onInsertIndex(index: number, newValue: T) {\n\t\tif (this.events.isEnabled(\"insertIndex\")) {\n\t\t\tthis.events.dispatch(\"insertIndex\", {\n\t\t\t\ttype: \"insertIndex\",\n\t\t\t\ttarget: this,\n\t\t\t\tindex,\n\t\t\t\tnewValue\n\t\t\t});\n\t\t}\n\t}\n\n\tprotected _onSetIndex(index: number, oldValue: T, newValue: T) {\n\t\tif (this.events.isEnabled(\"setIndex\")) {\n\t\t\tthis.events.dispatch(\"setIndex\", {\n\t\t\t\ttype: \"setIndex\",\n\t\t\t\ttarget: this,\n\t\t\t\tindex,\n\t\t\t\toldValue,\n\t\t\t\tnewValue\n\t\t\t});\n\t\t}\n\t}\n\n\tprotected _onRemoveIndex(index: number, oldValue: T) {\n\t\tif (this.events.isEnabled(\"removeIndex\")) {\n\t\t\tthis.events.dispatch(\"removeIndex\", {\n\t\t\t\ttype: \"removeIndex\",\n\t\t\t\ttarget: this,\n\t\t\t\tindex,\n\t\t\t\toldValue\n\t\t\t});\n\t\t}\n\t}\n\n\tprotected _onMoveIndex(oldIndex: number, newIndex: number, value: T) {\n\t\tif (this.events.isEnabled(\"moveIndex\")) {\n\t\t\tthis.events.dispatch(\"moveIndex\", {\n\t\t\t\ttype: \"moveIndex\",\n\t\t\t\ttarget: this,\n\t\t\t\toldIndex,\n\t\t\t\tnewIndex,\n\t\t\t\tvalue,\n\t\t\t});\n\t\t}\n\t}\n\n\tprotected _onClear(oldValues: Array<T>) {\n\t\tif (this.events.isEnabled(\"clear\")) {\n\t\t\tthis.events.dispatch(\"clear\", {\n\t\t\t\ttype: \"clear\",\n\t\t\t\ttarget: this,\n\t\t\t\toldValues\n\t\t\t});\n\t\t}\n\t}\n\n\t/**\n\t * Sets value at specific index.\n\t *\n\t * If there's already a value at the index, it is overwritten.\n\t *\n\t * @param index  Index\n\t * @param value  New value\n\t * @return New value\n\t */\n\tpublic setIndex(index: number, value: T): T {\n\t\tcheckBounds(index, this._values.length);\n\n\t\tconst oldValue = this._values[index];\n\n\t\t// Do nothing if the old value and the new value are the same\n\t\tif (oldValue !== value) {\n\t\t\tthis._values[index] = value;\n\t\t\tthis._onSetIndex(index, oldValue, value);\n\t\t}\n\n\t\treturn oldValue;\n\t}\n\n\t/**\n\t * Adds an item to the list at a specific index, which pushes all the other\n\t * items further down the list.\n\t *\n\t * @param index Index\n\t * @param item  An item to add\n\t */\n\tpublic insertIndex<K extends T>(index: number, value: K): K {\n\t\tcheckBounds(index, this._values.length + 1);\n\n\t\t$array.insertIndex(this._values, index, value);\n\t\tthis._onInsertIndex(index, value);\n\t\treturn value;\n\t}\n\n\t/**\n\t * Swaps indexes of two items in the list.\n\t *\n\t * @param a  Item 1\n\t * @param b  Item 2\n\t */\n\tpublic swap(a: number, b: number): void {\n\t\tconst len = this._values.length;\n\n\t\tcheckBounds(a, len);\n\t\tcheckBounds(b, len);\n\n\t\tif (a !== b) {\n\t\t\tconst value_a = this._values[a];\n\t\t\tconst value_b = this._values[b];\n\n\t\t\tthis._values[a] = value_b;\n\t\t\tthis._onSetIndex(a, value_a, value_b);\n\n\t\t\tthis._values[b] = value_a;\n\t\t\tthis._onSetIndex(b, value_b, value_a);\n\t\t}\n\t}\n\n\t/**\n\t * Removes a value at specific index.\n\t *\n\t * @param index  Index of value to remove\n\t * @return Removed value\n\t */\n\tpublic removeIndex(index: number): T {\n\t\tcheckBounds(index, this._values.length);\n\n\t\tconst oldValue = this._values[index];\n\n\t\t$array.removeIndex(this._values, index);\n\t\tthis._onRemoveIndex(index, oldValue);\n\n\t\treturn oldValue;\n\t}\n\n\t/**\n\t * Moves an item to a specific index within the list.\n\t *\n\t * If the index is not specified it will move the item to the end of the\n\t * list.\n\t *\n\t * @param value  Item to move\n\t * @param index  Index to place item at\n\t */\n\tpublic moveValue<K extends T>(value: K, toIndex?: number): K {\n\t\t// TODO don't do anything if the desired index is the same as the current index\n\t\tlet index = this.indexOf(value);\n\n\t\t// TODO remove all old values rather than only the first ?\n\t\tif (index !== -1) {\n\t\t\t$array.removeIndex(this._values, index);\n\n\t\t\tif (toIndex == null) {\n\t\t\t\tconst toIndex = this._values.length;\n\t\t\t\tthis._values.push(value);\n\t\t\t\tthis._onMoveIndex(index, toIndex, value);\n\n\t\t\t} else {\n\t\t\t\t$array.insertIndex(this._values, toIndex, value);\n\t\t\t\tthis._onMoveIndex(index, toIndex, value);\n\t\t\t}\n\n\t\t} else if (toIndex == null) {\n\t\t\tthis._values.push(value);\n\t\t\tthis._onPush(value);\n\n\t\t} else {\n\t\t\t$array.insertIndex(this._values, toIndex, value);\n\t\t\tthis._onInsertIndex(toIndex, value);\n\t\t}\n\n\t\treturn value;\n\t}\n\n\t/**\n\t * Adds an item to the end of the list.\n\t *\n\t * @param item  An item to add\n\t */\n\tpublic push<K extends T>(value: K): K {\n\t\tthis._values.push(value);\n\t\tthis._onPush(value);\n\t\treturn value;\n\t}\n\n\t/**\n\t * Adds an item as a first item in the list.\n\t *\n\t * @param item  An item to add\n\t */\n\tpublic unshift<K extends T>(value: K): K {\n\t\tthis.insertIndex(0, value);\n\t\treturn value;\n\t}\n\n\t/**\n\t * Adds multiple items to the list.\n\t *\n\t * @param items  An Array of items to add\n\t */\n\tpublic pushAll(values: Array<T>): void {\n\t\t$array.each(values, (value) => {\n\t\t\tthis.push(value);\n\t\t});\n\t}\n\n\t/**\n\t * Copies and adds items from abother list.\n\t *\n\t * @param source  A list top copy items from\n\t */\n\tpublic copyFrom(source: this): void {\n\t\tthis.pushAll(source._values);\n\t}\n\n\t/**\n\t * Returns the last item from the list, and removes it.\n\t *\n\t * @return Item\n\t */\n\tpublic pop(): Optional<T> {\n\t\tlet index = this._values.length - 1;\n\t\treturn index < 0 ? undefined : this.removeIndex(this._values.length - 1);\n\t}\n\n\t/**\n\t * Returns the first item from the list, and removes it.\n\t *\n\t * @return Item\n\t */\n\tpublic shift(): Optional<T> {\n\t\treturn this._values.length ? this.removeIndex(0) : undefined;\n\t}\n\n\t/**\n\t * Sets multiple items to the list.\n\t *\n\t * All current items are removed.\n\t *\n\t * @param newArray  New items\n\t */\n\tpublic setAll(newArray: Array<T>): void {\n\t\tconst old = this._values;\n\t\tthis._values = [];\n\t\tthis._onClear(old);\n\n\t\t$array.each(newArray, (value) => {\n\t\t\tthis._values.push(value);\n\t\t\tthis._onPush(value);\n\t\t});\n\t}\n\n\t/**\n\t * Removes all items from the list.\n\t */\n\tpublic clear(): void {\n\t\tthis.setAll([]);\n\t}\n\n\t/**\n\t * Returns an ES6 iterator for the list.\n\t */\n\tpublic *[Symbol.iterator](): Iterator<T> {\n\t\tconst length = this._values.length;\n\n\t\tfor (let i = 0; i < length; ++i) {\n\t\t\tyield this._values[i];\n\t\t}\n\t}\n\n\t/**\n\t * Calls `f` for each element in the list.\n\t *\n\t * `f` should have at least one parameter defined which will get a current\n\t * item, with optional second argument - index.\n\t */\n\tpublic each(f: (value: T, index: number) => void): void {\n\t\t$array.each(this._values, f);\n\t}\n\n\t/**\n\t * Calls `f` for each element in the list, from right to left.\n\t *\n\t * `f` should have at least one parameter defined which will get a current\n\t * item, with optional second argument - index.\n\t */\n\tpublic eachReverse(f: (value: T, index: number) => void): void {\n\t\t$array.eachReverse(this._values, f);\n\t}\n}\n\n\n/**\n * A version of a [[List]] where the elements are disposed automatically when\n * removed from the list, unless `autoDispose` is set to `false`.\n */\nexport class ListAutoDispose<A extends IDisposer> extends List<A> implements IDisposer {\n\t/**\n\t * Automatically disposes elements that are removed from the list.\n\t *\n\t * @default true\n\t */\n\tpublic autoDispose: boolean = true;\n\n\tprivate _disposed: boolean = false;\n\n\tprotected _onSetIndex(index: number, oldValue: A, newValue: A) {\n\t\tif (this.autoDispose) {\n\t\t\toldValue.dispose();\n\t\t}\n\n\t\tsuper._onSetIndex(index, oldValue, newValue);\n\t}\n\n\tprotected _onRemoveIndex(index: number, oldValue: A) {\n\t\tif (this.autoDispose) {\n\t\t\toldValue.dispose();\n\t\t}\n\n\t\tsuper._onRemoveIndex(index, oldValue);\n\t}\n\n\tprotected _onClear(oldValues: Array<A>) {\n\t\tif (this.autoDispose) {\n\t\t\t$array.each(oldValues, (x) => {\n\t\t\t\tx.dispose();\n\t\t\t});\n\t\t}\n\n\t\tsuper._onClear(oldValues);\n\t}\n\n\tprotected _dispose() {\n\t\tif (this.autoDispose) {\n\t\t\t$array.each(this._values, (x) => {\n\t\t\t\tx.dispose();\n\t\t\t});\n\t\t}\n\t}\n\n\tpublic isDisposed(): boolean {\n\t\treturn this._disposed;\n\t}\n\n\tpublic dispose(): void {\n\t\tif (!this._disposed) {\n\t\t\tthis._disposed = true;\n\t\t\tthis._dispose();\n\t\t}\n\t}\n}\n\n\n/**\n * A version of a [[List]] that is able to create new elements as well as\n * apply additional settings to newly created items.\n *\n * @see {@link https://www.amcharts.com/docs/v5/concepts/settings/list-templates/} for more info\n */\nexport class ListTemplate<A extends Entity> extends ListAutoDispose<A> {\n\tpublic template: Template<A>;\n\tpublic make: () => A;\n\n\tconstructor(template: Template<A>, make: () => A) {\n\t\tsuper();\n\t\tthis.template = template;\n\t\tthis.make = make;\n\t}\n\n\tprotected _dispose() {\n\t\tsuper._dispose();\n\n\t\tif (this.autoDispose) {\n\t\t\tthis.template.dispose();\n\t\t}\n\t}\n}\n","/**\r\n * Event Dispatcher module is used for registering listeners and dispatching\r\n * events across amCharts system.\r\n */\r\n/**\r\n * ============================================================================\r\n * IMPORTS\r\n * ============================================================================\r\n * @hidden\r\n */\r\nimport { Disposer, MultiDisposer } from \"./Disposer\";\r\nimport * as $array from \"./Array\";\r\nimport * as $type from \"./Type\";\r\n/**\r\n * Universal Event Dispatcher.\r\n *\r\n * @see {@link https://www.amcharts.com/docs/v5/concepts/events/} for more info\r\n */\r\nexport class EventDispatcher {\r\n    /**\r\n     * Constructor\r\n     */\r\n    constructor() {\r\n        Object.defineProperty(this, \"_listeners\", {\r\n            enumerable: true,\r\n            configurable: true,\r\n            writable: true,\r\n            value: void 0\r\n        });\r\n        Object.defineProperty(this, \"_killed\", {\r\n            enumerable: true,\r\n            configurable: true,\r\n            writable: true,\r\n            value: void 0\r\n        });\r\n        Object.defineProperty(this, \"_disabled\", {\r\n            enumerable: true,\r\n            configurable: true,\r\n            writable: true,\r\n            value: void 0\r\n        });\r\n        Object.defineProperty(this, \"_iterating\", {\r\n            enumerable: true,\r\n            configurable: true,\r\n            writable: true,\r\n            value: void 0\r\n        });\r\n        Object.defineProperty(this, \"_enabled\", {\r\n            enumerable: true,\r\n            configurable: true,\r\n            writable: true,\r\n            value: void 0\r\n        });\r\n        Object.defineProperty(this, \"_disposed\", {\r\n            enumerable: true,\r\n            configurable: true,\r\n            writable: true,\r\n            value: void 0\r\n        });\r\n        this._listeners = [];\r\n        this._killed = [];\r\n        this._disabled = {};\r\n        this._iterating = 0;\r\n        this._enabled = true;\r\n        this._disposed = false;\r\n    }\r\n    /**\r\n     * Returns if this object has been already disposed.\r\n     *\r\n     * @return Disposed?\r\n     */\r\n    isDisposed() {\r\n        return this._disposed;\r\n    }\r\n    /**\r\n     * Dispose (destroy) this object.\r\n     */\r\n    dispose() {\r\n        if (!this._disposed) {\r\n            this._disposed = true;\r\n            const a = this._listeners;\r\n            this._iterating = 1;\r\n            this._listeners = null;\r\n            this._disabled = null;\r\n            try {\r\n                $array.each(a, (x) => {\r\n                    x.disposer.dispose();\r\n                });\r\n            }\r\n            finally {\r\n                this._killed = null;\r\n                this._iterating = null;\r\n            }\r\n        }\r\n    }\r\n    /**\r\n     * Checks if this particular event dispatcher has any listeners set.\r\n     *\r\n     * @return Has listeners?\r\n     */\r\n    hasListeners() {\r\n        return this._listeners.length !== 0;\r\n    }\r\n    /**\r\n     * Checks if this particular event dispatcher has any particular listeners set.\r\n     *\r\n     * @return Has particular event listeners?\r\n     */\r\n    hasListenersByType(type) {\r\n        return $array.any(this._listeners, (x) => (x.type === null || x.type === type) && !x.killed);\r\n    }\r\n    /**\r\n     * Enable dispatching of events if they were previously disabled by\r\n     * `disable()`.\r\n     */\r\n    enable() {\r\n        this._enabled = true;\r\n    }\r\n    /**\r\n     * Disable dispatching of events until re-enabled by `enable()`.\r\n     */\r\n    disable() {\r\n        this._enabled = false;\r\n    }\r\n    /**\r\n     * Enable dispatching particular event, if it was disabled before by\r\n     * `disableType()`.\r\n     *\r\n     * @param type Event type\r\n     */\r\n    enableType(type) {\r\n        delete this._disabled[type];\r\n    }\r\n    /**\r\n     * Disable dispatching of events for a certain event type.\r\n     *\r\n     * Optionally, can set how many dispatches to skip before automatically\r\n     * re-enabling the dispatching.\r\n     *\r\n     * @param type    Event type\r\n     * @param amount  Number of event dispatches to skip\r\n     */\r\n    disableType(type, amount = Infinity) {\r\n        this._disabled[type] = amount;\r\n    }\r\n    /**\r\n     * Removes listener from dispatcher.\r\n     *\r\n     * Will throw an exception if such listener does not exists.\r\n     *\r\n     * @param listener Listener to remove\r\n     */\r\n    _removeListener(listener) {\r\n        if (this._iterating === 0) {\r\n            const index = this._listeners.indexOf(listener);\r\n            if (index === -1) {\r\n                throw new Error(\"Invalid state: could not remove listener\");\r\n            }\r\n            this._listeners.splice(index, 1);\r\n        }\r\n        else {\r\n            this._killed.push(listener);\r\n        }\r\n    }\r\n    /**\r\n     * Removes existing listener by certain parameters.\r\n     *\r\n     * @param once         Listener's once setting\r\n     * @param type         Listener's type\r\n     * @param callback     Callback function\r\n     * @param context      Callback context\r\n     */\r\n    _removeExistingListener(once, type, callback, context) {\r\n        if (this._disposed) {\r\n            throw new Error(\"EventDispatcher is disposed\");\r\n        }\r\n        this._eachListener((info) => {\r\n            if (info.once === once && // TODO is this correct ?\r\n                info.type === type &&\r\n                (callback === undefined || info.callback === callback) &&\r\n                info.context === context) {\r\n                info.disposer.dispose();\r\n            }\r\n        });\r\n    }\r\n    /**\r\n     * Checks if dispatching for particular event type is enabled.\r\n     *\r\n     * @param type  Event type\r\n     * @return Enabled?\r\n     */\r\n    isEnabled(type) {\r\n        if (this._disposed) {\r\n            throw new Error(\"EventDispatcher is disposed\");\r\n        }\r\n        // TODO is this check correct ?\r\n        return this._enabled && this._listeners.length > 0 && this.hasListenersByType(type) && this._disabled[type] === undefined;\r\n    }\r\n    /**\r\n     * Removes all listeners of a particular event type\r\n     *\r\n     * @param type  Listener's type\r\n     */\r\n    removeType(type) {\r\n        if (this._disposed) {\r\n            throw new Error(\"EventDispatcher is disposed\");\r\n        }\r\n        this._eachListener((info) => {\r\n            if (info.type === type) {\r\n                info.disposer.dispose();\r\n            }\r\n        });\r\n    }\r\n    /**\r\n     * Checks if there's already a listener with specific parameters.\r\n     *\r\n     * @param type      Listener's type\r\n     * @param callback  Callback function\r\n     * @param context   Callback context\r\n     * @return Has listener?\r\n     */\r\n    has(type, callback, context) {\r\n        const index = $array.findIndex(this._listeners, (info) => {\r\n            return info.once !== true && // Ignoring \"once\" listeners\r\n                info.type === type &&\r\n                (callback === undefined || info.callback === callback) &&\r\n                info.context === context;\r\n        });\r\n        return index !== -1;\r\n    }\r\n    /**\r\n     * Checks whether event of the particular type should be dispatched.\r\n     *\r\n     * @param type  Event type\r\n     * @return Dispatch?\r\n     */\r\n    _shouldDispatch(type) {\r\n        if (this._disposed) {\r\n            throw new Error(\"EventDispatcher is disposed\");\r\n        }\r\n        const count = this._disabled[type];\r\n        if (!$type.isNumber(count)) {\r\n            return this._enabled;\r\n        }\r\n        else {\r\n            if (count <= 1) {\r\n                delete this._disabled[type];\r\n            }\r\n            else {\r\n                --this._disabled[type];\r\n            }\r\n            return false;\r\n        }\r\n    }\r\n    /**\r\n     * [_eachListener description]\r\n     *\r\n     * All of this extra code is needed when a listener is removed while iterating\r\n     *\r\n     * @todo Description\r\n     * @param fn [description]\r\n     */\r\n    _eachListener(fn) {\r\n        ++this._iterating;\r\n        try {\r\n            $array.each(this._listeners, fn);\r\n        }\r\n        finally {\r\n            --this._iterating;\r\n            // TODO should this be inside or outside the finally ?\r\n            if (this._iterating === 0 && this._killed.length !== 0) {\r\n                // Remove killed listeners\r\n                $array.each(this._killed, (killed) => {\r\n                    this._removeListener(killed);\r\n                });\r\n                this._killed.length = 0;\r\n            }\r\n        }\r\n    }\r\n    /**\r\n     * Dispatches an event immediately without waiting for next cycle.\r\n     *\r\n     * @param type   Event type\r\n     * @param event  Event object\r\n     * @todo automatically add in type and target properties if they are missing\r\n     */\r\n    dispatch(type, event) {\r\n        if (this._shouldDispatch(type)) {\r\n            // TODO check if it's faster to use an object of listeners rather than a single big array\r\n            // TODO if the function throws, maybe it should keep going ?\r\n            this._eachListener((listener) => {\r\n                if (!listener.killed && (listener.type === null || listener.type === type)) {\r\n                    listener.dispatch(type, event);\r\n                }\r\n            });\r\n        }\r\n    }\r\n    /**\r\n     * Shelves the event to be dispatched within next update cycle.\r\n     *\r\n     * @param type   Event type\r\n     * @param event  Event object\r\n     * @todo automatically add in type and target properties if they are missing\r\n     */\r\n    /*public dispatchLater<Key extends keyof T>(type: Key, event: T[Key]): void {\r\n        if (this._shouldDispatch(type)) {\r\n            this._eachListener((listener) => {\r\n                // TODO check if it's faster to use an object of listeners rather than a single big array\r\n                if (!listener.killed && (listener.type === null || listener.type === type)) {\r\n                    // TODO if the function throws, maybe it should keep going ?\r\n                    // TODO dispatch during the update cycle, rather than using whenIdle\r\n                    $async.whenIdle(() => {\r\n                        if (!listener.killed) {\r\n                            listener.dispatch(type, event);\r\n                        }\r\n                    });\r\n                }\r\n            });\r\n        }\r\n    }*/\r\n    /**\r\n     * Creates, catalogs and returns an [[EventListener]].\r\n     *\r\n     * Event listener can be disposed.\r\n     *\r\n     * @param once         Listener's once setting\r\n     * @param type         Listener's type\r\n     * @param callback     Callback function\r\n     * @param context      Callback context\r\n     * @param shouldClone  Whether the listener should be copied when the EventDispatcher is copied\r\n     * @param dispatch\r\n     * @returns An event listener\r\n     */\r\n    _on(once, type, callback, context, shouldClone, dispatch) {\r\n        if (this._disposed) {\r\n            throw new Error(\"EventDispatcher is disposed\");\r\n        }\r\n        this._removeExistingListener(once, type, callback, context);\r\n        const info = {\r\n            type: type,\r\n            callback: callback,\r\n            context: context,\r\n            shouldClone: shouldClone,\r\n            dispatch: dispatch,\r\n            killed: false,\r\n            once: once,\r\n            disposer: new Disposer(() => {\r\n                info.killed = true;\r\n                this._removeListener(info);\r\n            })\r\n        };\r\n        this._listeners.push(info);\r\n        return info;\r\n    }\r\n    /**\r\n     * Creates an event listener to be invoked on **any** event.\r\n     *\r\n     * @param callback     Callback function\r\n     * @param context      Callback context\r\n     * @param shouldClone  Whether the listener should be copied when the EventDispatcher is copied\r\n     * @returns A disposable event listener\r\n     */\r\n    onAll(callback, context, shouldClone = true) {\r\n        return this._on(false, null, callback, context, shouldClone, (_type, event) => callback.call(context, event)).disposer;\r\n    }\r\n    /**\r\n     * Creates an event listener to be invoked on a specific event type.\r\n     *\r\n     * ```TypeScript\r\n     * button.events.once(\"click\", (ev) => {\r\n     *   console.log(\"Button clicked\");\r\n     * }, this);\r\n     * ```\r\n     * ```JavaScript\r\n     * button.events.once(\"click\", (ev) => {\r\n     *   console.log(\"Button clicked\");\r\n     * }, this);\r\n     * ```\r\n     *\r\n     * The above will invoke our custom event handler whenever series we put\r\n     * event on is hidden.\r\n     *\r\n     * @param type         Listener's type\r\n     * @param callback     Callback function\r\n     * @param context      Callback context\r\n     * @param shouldClone  Whether the listener should be copied when the EventDispatcher is copied\r\n     * @returns A disposable event listener\r\n     */\r\n    on(type, callback, context, shouldClone = true) {\r\n        return this._on(false, type, callback, context, shouldClone, (_type, event) => callback.call(context, event)).disposer;\r\n    }\r\n    /**\r\n     * Creates an event listener to be invoked on a specific event type once.\r\n     *\r\n     * Once the event listener is invoked, it is automatically disposed.\r\n     *\r\n     * ```TypeScript\r\n     * button.events.once(\"click\", (ev) => {\r\n     *   console.log(\"Button clicked\");\r\n     * }, this);\r\n     * ```\r\n     * ```JavaScript\r\n     * button.events.once(\"click\", (ev) => {\r\n     *   console.log(\"Button clicked\");\r\n     * }, this);\r\n     * ```\r\n     *\r\n     * The above will invoke our custom event handler the first time series we\r\n     * put event on is hidden.\r\n     *\r\n     * @param type         Listener's type\r\n     * @param callback     Callback function\r\n     * @param context      Callback context\r\n     * @param shouldClone  Whether the listener should be copied when the EventDispatcher is copied\r\n     * @returns A disposable event listener\r\n     */\r\n    once(type, callback, context, shouldClone = true) {\r\n        const x = this._on(true, type, callback, context, shouldClone, (_type, event) => {\r\n            x.disposer.dispose();\r\n            callback.call(context, event);\r\n        });\r\n        // TODO maybe this should return a different Disposer ?\r\n        return x.disposer;\r\n    }\r\n    /**\r\n     * Removes the event listener with specific parameters.\r\n     *\r\n     * @param type         Listener's type\r\n     * @param callback     Callback function\r\n     * @param context      Callback context\r\n     */\r\n    off(type, callback, context) {\r\n        this._removeExistingListener(false, type, callback, context);\r\n    }\r\n    /**\r\n     * Copies all dispatcher parameters, including listeners, from another event\r\n     * dispatcher.\r\n     *\r\n     * @param source Source event dispatcher\r\n     * @ignore\r\n     */\r\n    copyFrom(source) {\r\n        if (this._disposed) {\r\n            throw new Error(\"EventDispatcher is disposed\");\r\n        }\r\n        if (source === this) {\r\n            throw new Error(\"Cannot copyFrom the same TargetedEventDispatcher\");\r\n        }\r\n        const disposers = [];\r\n        $array.each(source._listeners, (x) => {\r\n            // TODO is this correct ?\r\n            if (!x.killed && x.shouldClone) {\r\n                if (x.type === null) {\r\n                    disposers.push(this.onAll(x.callback, x.context));\r\n                }\r\n                else if (x.once) {\r\n                    disposers.push(this.once(x.type, x.callback, x.context));\r\n                }\r\n                else {\r\n                    disposers.push(this.on(x.type, x.callback, x.context));\r\n                }\r\n            }\r\n        });\r\n        return new MultiDisposer(disposers);\r\n    }\r\n}\r\n/**\r\n * A version of the [[EventDispatcher]] that dispatches events for a specific\r\n * target object.\r\n *\r\n * @ignore\r\n */\r\nexport class TargetedEventDispatcher extends EventDispatcher {\r\n    /**\r\n     * Constructor\r\n     *\r\n     * @param target Event dispatcher target\r\n     */\r\n    constructor(target) {\r\n        super();\r\n        /**\r\n         * A target object which is originating events using this dispatcher.\r\n         */\r\n        Object.defineProperty(this, \"target\", {\r\n            enumerable: true,\r\n            configurable: true,\r\n            writable: true,\r\n            value: void 0\r\n        });\r\n        this.target = target;\r\n    }\r\n    /**\r\n     * Copies all dispatcher parameters, including listeners, from another event\r\n     * dispatcher.\r\n     *\r\n     * @param source Source event dispatcher\r\n     * @ignore\r\n     */\r\n    copyFrom(source) {\r\n        if (this._disposed) {\r\n            throw new Error(\"EventDispatcher is disposed\");\r\n        }\r\n        if (source === this) {\r\n            throw new Error(\"Cannot copyFrom the same TargetedEventDispatcher\");\r\n        }\r\n        const disposers = [];\r\n        $array.each(source._listeners, (x) => {\r\n            // TODO very hacky\r\n            if (x.context === source.target) {\r\n                return;\r\n            }\r\n            // TODO is this correct ?\r\n            if (!x.killed && x.shouldClone) {\r\n                if (x.type === null) {\r\n                    disposers.push(this.onAll(x.callback, x.context));\r\n                }\r\n                else if (x.once) {\r\n                    disposers.push(this.once(x.type, x.callback, x.context));\r\n                }\r\n                else {\r\n                    disposers.push(this.on(x.type, x.callback, x.context));\r\n                }\r\n            }\r\n        });\r\n        return new MultiDisposer(disposers);\r\n    }\r\n}\r\n//# sourceMappingURL=EventDispatcher.js.map","/**\n * Event Dispatcher module is used for registering listeners and dispatching\n * events across amCharts system.\n */\n\n/**\n * ============================================================================\n * IMPORTS\n * ============================================================================\n * @hidden\n */\nimport { Disposer, IDisposer, MultiDisposer } from \"./Disposer\";\nimport * as $array from \"./Array\";\nimport * as $type from \"./Type\";\n\n/**\n * @ignore\n */\nexport type Events<Target, T> = {\n\t[K in keyof T]: T[K] & { type: K, target: Target }\n};\n\n/**\n * A universal interface for event listeners.\n *\n * @ignore\n */\nexport interface EventListener {\n\tkilled: boolean;\n\tonce: boolean;\n\ttype: any | null;\n\tcallback: (event: any) => void;\n\tcontext: unknown;\n\tshouldClone: boolean;\n\tdispatch: (type: any, event: any) => void;\n\tdisposer: IDisposer;\n}\n\n/**\n * Universal Event Dispatcher.\n *\n * @see {@link https://www.amcharts.com/docs/v5/concepts/events/} for more info\n */\nexport class EventDispatcher<T> implements IDisposer {\n\tprotected _listeners: Array<EventListener>;\n\tprotected _killed: Array<EventListener>;\n\tprotected _disabled: { [key in keyof T]?: number };\n\tprotected _iterating: number;\n\tprotected _enabled: boolean;\n\tprotected _disposed: boolean;\n\n\n\t/**\n\t * Constructor\n\t */\n\tconstructor() {\n\t\tthis._listeners = [];\n\t\tthis._killed = [];\n\t\tthis._disabled = {};\n\t\tthis._iterating = 0;\n\t\tthis._enabled = true;\n\t\tthis._disposed = false;\n\t}\n\n\t/**\n\t * Returns if this object has been already disposed.\n\t *\n\t * @return Disposed?\n\t */\n\tpublic isDisposed(): boolean {\n\t\treturn this._disposed;\n\t}\n\n\t/**\n\t * Dispose (destroy) this object.\n\t */\n\tpublic dispose(): void {\n\t\tif (!this._disposed) {\n\t\t\tthis._disposed = true;\n\n\t\t\tconst a = this._listeners;\n\n\t\t\tthis._iterating = 1;\n\t\t\tthis._listeners = <any>null;\n\t\t\tthis._disabled = <any>null;\n\n\t\t\ttry {\n\t\t\t\t$array.each(a, (x) => {\n\t\t\t\t\tx.disposer.dispose();\n\t\t\t\t});\n\n\t\t\t} finally {\n\t\t\t\tthis._killed = <any>null;\n\t\t\t\tthis._iterating = <any>null;\n\t\t\t}\n\t\t}\n\t}\n\n\t/**\n\t * Checks if this particular event dispatcher has any listeners set.\n\t *\n\t * @return Has listeners?\n\t */\n\tpublic hasListeners(): boolean {\n\t\treturn this._listeners.length !== 0;\n\t}\n\n\t/**\n\t * Checks if this particular event dispatcher has any particular listeners set.\n\t *\n\t * @return Has particular event listeners?\n\t */\n\tpublic hasListenersByType<Key extends keyof T>(type: Key): boolean {\n\t\treturn $array.any(this._listeners, (x) => (x.type === null || x.type === type) && !x.killed);\n\t}\n\n\t/**\n\t * Enable dispatching of events if they were previously disabled by\n\t * `disable()`.\n\t */\n\tpublic enable(): void {\n\t\tthis._enabled = true;\n\t}\n\n\t/**\n\t * Disable dispatching of events until re-enabled by `enable()`.\n\t */\n\tpublic disable(): void {\n\t\tthis._enabled = false;\n\t}\n\n\t/**\n\t * Enable dispatching particular event, if it was disabled before by\n\t * `disableType()`.\n\t *\n\t * @param type Event type\n\t */\n\tpublic enableType<Key extends keyof T>(type: Key): void {\n\t\tdelete this._disabled[type];\n\t}\n\n\t/**\n\t * Disable dispatching of events for a certain event type.\n\t *\n\t * Optionally, can set how many dispatches to skip before automatically\n\t * re-enabling the dispatching.\n\t *\n\t * @param type    Event type\n\t * @param amount  Number of event dispatches to skip\n\t */\n\tpublic disableType<Key extends keyof T>(type: Key, amount: number = Infinity): void {\n\t\tthis._disabled[type] = amount;\n\t}\n\n\t/**\n\t * Removes listener from dispatcher.\n\t *\n\t * Will throw an exception if such listener does not exists.\n\t *\n\t * @param listener Listener to remove\n\t */\n\tprotected _removeListener(listener: EventListener): void {\n\t\tif (this._iterating === 0) {\n\t\t\tconst index = this._listeners.indexOf(listener);\n\n\t\t\tif (index === -1) {\n\t\t\t\tthrow new Error(\"Invalid state: could not remove listener\");\n\t\t\t}\n\n\t\t\tthis._listeners.splice(index, 1);\n\n\t\t} else {\n\t\t\tthis._killed.push(listener);\n\t\t}\n\t}\n\n\t/**\n\t * Removes existing listener by certain parameters.\n\t *\n\t * @param once         Listener's once setting\n\t * @param type         Listener's type\n\t * @param callback     Callback function\n\t * @param context      Callback context\n\t */\n\tprotected _removeExistingListener<C, Key extends keyof T>(once: boolean, type: Key | null, callback?: (this: C, event: T[Key]) => void, context?: C): void {\n\t\tif (this._disposed) {\n\t\t\tthrow new Error(\"EventDispatcher is disposed\");\n\t\t}\n\n\t\tthis._eachListener((info) => {\n\t\t\tif (info.once === once && // TODO is this correct ?\n\t\t\t\tinfo.type === type &&\n\t\t\t\t(callback === undefined || info.callback === callback) &&\n\t\t\t\tinfo.context === context) {\n\t\t\t\tinfo.disposer.dispose();\n\t\t\t}\n\t\t});\n\t}\n\n\t/**\n\t * Checks if dispatching for particular event type is enabled.\n\t *\n\t * @param type  Event type\n\t * @return Enabled?\n\t */\n\tpublic isEnabled<Key extends keyof T>(type: Key): boolean {\n\t\tif (this._disposed) {\n\t\t\tthrow new Error(\"EventDispatcher is disposed\");\n\t\t}\n\n\t\t// TODO is this check correct ?\n\t\treturn this._enabled && this._listeners.length > 0 && this.hasListenersByType(type) && this._disabled[type] === undefined;\n\t}\n\n\t/**\n\t * Removes all listeners of a particular event type\n\t *\n\t * @param type  Listener's type\n\t */\n\tpublic removeType<Key extends keyof T>(type: Key): void {\n\t\tif (this._disposed) {\n\t\t\tthrow new Error(\"EventDispatcher is disposed\");\n\t\t}\n\n\t\tthis._eachListener((info) => {\n\t\t\tif (info.type === type) {\n\t\t\t\tinfo.disposer.dispose();\n\t\t\t}\n\t\t});\n\t}\n\n\t/**\n\t * Checks if there's already a listener with specific parameters.\n\t *\n\t * @param type      Listener's type\n\t * @param callback  Callback function\n\t * @param context   Callback context\n\t * @return Has listener?\n\t */\n\tpublic has<C, Key extends keyof T>(type: Key, callback?: (this: C, event: T[Key]) => void, context?: C): boolean {\n\t\tconst index = $array.findIndex(this._listeners, (info) => {\n\t\t\treturn info.once !== true && // Ignoring \"once\" listeners\n\t\t\t\tinfo.type === type &&\n\t\t\t\t(callback === undefined || info.callback === callback) &&\n\t\t\t\tinfo.context === context;\n\t\t});\n\n\t\treturn index !== -1;\n\t}\n\n\t/**\n\t * Checks whether event of the particular type should be dispatched.\n\t *\n\t * @param type  Event type\n\t * @return Dispatch?\n\t */\n\tprotected _shouldDispatch<Key extends keyof T>(type: Key): boolean {\n\t\tif (this._disposed) {\n\t\t\tthrow new Error(\"EventDispatcher is disposed\");\n\t\t}\n\n\t\tconst count = this._disabled[type];\n\n\t\tif (!$type.isNumber(count)) {\n\t\t\treturn this._enabled;\n\n\t\t} else {\n\t\t\tif (count <= 1) {\n\t\t\t\tdelete this._disabled[type];\n\n\t\t\t} else {\n\t\t\t\t--this._disabled[type]!;\n\t\t\t}\n\n\t\t\treturn false;\n\t\t}\n\t}\n\n\t/**\n\t * [_eachListener description]\n\t *\n\t * All of this extra code is needed when a listener is removed while iterating\n\t *\n\t * @todo Description\n\t * @param fn [description]\n\t */\n\tprotected _eachListener(fn: (listener: EventListener) => void): void {\n\t\t++this._iterating;\n\n\t\ttry {\n\t\t\t$array.each(this._listeners, fn);\n\n\t\t} finally {\n\t\t\t--this._iterating;\n\n\t\t\t// TODO should this be inside or outside the finally ?\n\t\t\tif (this._iterating === 0 && this._killed.length !== 0) {\n\t\t\t\t// Remove killed listeners\n\t\t\t\t$array.each(this._killed, (killed) => {\n\t\t\t\t\tthis._removeListener(killed);\n\t\t\t\t});\n\n\t\t\t\tthis._killed.length = 0;\n\t\t\t}\n\t\t}\n\t}\n\n\t/**\n\t * Dispatches an event immediately without waiting for next cycle.\n\t *\n\t * @param type   Event type\n\t * @param event  Event object\n\t * @todo automatically add in type and target properties if they are missing\n\t */\n\tpublic dispatch<Key extends keyof T>(type: Key, event: T[Key]): void {\n\t\tif (this._shouldDispatch(type)) {\n\t\t\t// TODO check if it's faster to use an object of listeners rather than a single big array\n\t\t\t// TODO if the function throws, maybe it should keep going ?\n\t\t\tthis._eachListener((listener) => {\n\t\t\t\tif (!listener.killed && (listener.type === null || listener.type === type)) {\n\t\t\t\t\tlistener.dispatch(type, event);\n\t\t\t\t}\n\t\t\t});\n\t\t}\n\t}\n\n\t/**\n\t * Shelves the event to be dispatched within next update cycle.\n\t *\n\t * @param type   Event type\n\t * @param event  Event object\n\t * @todo automatically add in type and target properties if they are missing\n\t */\n\t/*public dispatchLater<Key extends keyof T>(type: Key, event: T[Key]): void {\n\t\tif (this._shouldDispatch(type)) {\n\t\t\tthis._eachListener((listener) => {\n\t\t\t\t// TODO check if it's faster to use an object of listeners rather than a single big array\n\t\t\t\tif (!listener.killed && (listener.type === null || listener.type === type)) {\n\t\t\t\t\t// TODO if the function throws, maybe it should keep going ?\n\t\t\t\t\t// TODO dispatch during the update cycle, rather than using whenIdle\n\t\t\t\t\t$async.whenIdle(() => {\n\t\t\t\t\t\tif (!listener.killed) {\n\t\t\t\t\t\t\tlistener.dispatch(type, event);\n\t\t\t\t\t\t}\n\t\t\t\t\t});\n\t\t\t\t}\n\t\t\t});\n\t\t}\n\t}*/\n\n\t/**\n\t * Creates, catalogs and returns an [[EventListener]].\n\t *\n\t * Event listener can be disposed.\n\t *\n\t * @param once         Listener's once setting\n\t * @param type         Listener's type\n\t * @param callback     Callback function\n\t * @param context      Callback context\n\t * @param shouldClone  Whether the listener should be copied when the EventDispatcher is copied\n\t * @param dispatch\n\t * @returns An event listener\n\t */\n\tprotected _on<C, Key extends keyof T>(once: boolean, type: Key | null, callback: any, context: C, shouldClone: boolean, dispatch: (type: Key, event: T[Key]) => void): EventListener {\n\t\tif (this._disposed) {\n\t\t\tthrow new Error(\"EventDispatcher is disposed\");\n\t\t}\n\n\t\tthis._removeExistingListener(once, type, callback, context);\n\n\t\tconst info: EventListener = {\n\t\t\ttype: type,\n\t\t\tcallback: callback,\n\t\t\tcontext: context,\n\t\t\tshouldClone: shouldClone,\n\t\t\tdispatch: <any>dispatch,\n\t\t\tkilled: false,\n\t\t\tonce: once,\n\t\t\tdisposer: new Disposer(() => {\n\t\t\t\tinfo.killed = true;\n\t\t\t\tthis._removeListener(info);\n\t\t\t})\n\t\t};\n\n\t\tthis._listeners.push(info);\n\n\t\treturn info;\n\t}\n\n\t/**\n\t * Creates an event listener to be invoked on **any** event.\n\t *\n\t * @param callback     Callback function\n\t * @param context      Callback context\n\t * @param shouldClone  Whether the listener should be copied when the EventDispatcher is copied\n\t * @returns A disposable event listener\n\t */\n\tpublic onAll<C, K extends keyof T>(callback: (this: C, event: T[K]) => void, context?: C, shouldClone: boolean = true): IDisposer {\n\t\treturn this._on(false, null, callback, context, shouldClone, (_type, event) => (<any>callback).call(context, event as any)).disposer;\n\t}\n\n\t/**\n\t * Creates an event listener to be invoked on a specific event type.\n\t *\n\t * ```TypeScript\n\t * button.events.once(\"click\", (ev) => {\n\t *   console.log(\"Button clicked\");\n\t * }, this);\n\t * ```\n\t * ```JavaScript\n\t * button.events.once(\"click\", (ev) => {\n\t *   console.log(\"Button clicked\");\n\t * }, this);\n\t * ```\n\t *\n\t * The above will invoke our custom event handler whenever series we put\n\t * event on is hidden.\n\t *\n\t * @param type         Listener's type\n\t * @param callback     Callback function\n\t * @param context      Callback context\n\t * @param shouldClone  Whether the listener should be copied when the EventDispatcher is copied\n\t * @returns A disposable event listener\n\t */\n\tpublic on<C, Key extends keyof T>(type: Key, callback: (this: C | undefined, event: T[Key]) => void, context?: C, shouldClone: boolean = true): IDisposer {\n\t\treturn this._on(false, type, callback, context, shouldClone, (_type, event) => callback.call(context, event)).disposer;\n\t}\n\n\t/**\n\t * Creates an event listener to be invoked on a specific event type once.\n\t *\n\t * Once the event listener is invoked, it is automatically disposed.\n\t *\n\t * ```TypeScript\n\t * button.events.once(\"click\", (ev) => {\n\t *   console.log(\"Button clicked\");\n\t * }, this);\n\t * ```\n\t * ```JavaScript\n\t * button.events.once(\"click\", (ev) => {\n\t *   console.log(\"Button clicked\");\n\t * }, this);\n\t * ```\n\t *\n\t * The above will invoke our custom event handler the first time series we\n\t * put event on is hidden.\n\t *\n\t * @param type         Listener's type\n\t * @param callback     Callback function\n\t * @param context      Callback context\n\t * @param shouldClone  Whether the listener should be copied when the EventDispatcher is copied\n\t * @returns A disposable event listener\n\t */\n\tpublic once<C, Key extends keyof T>(type: Key, callback: (this: C | undefined, event: T[Key]) => void, context?: C, shouldClone: boolean = true): IDisposer {\n\t\tconst x = this._on(true, type, callback, context, shouldClone, (_type, event) => {\n\t\t\tx.disposer.dispose();\n\t\t\tcallback.call(context, event)\n\t\t});\n\n\t\t// TODO maybe this should return a different Disposer ?\n\t\treturn x.disposer;\n\t}\n\n\t/**\n\t * Removes the event listener with specific parameters.\n\t *\n\t * @param type         Listener's type\n\t * @param callback     Callback function\n\t * @param context      Callback context\n\t */\n\tpublic off<C, Key extends keyof T>(type: Key, callback?: (this: C, event: T[Key]) => void, context?: C): void {\n\t\tthis._removeExistingListener(false, type, callback, context);\n\t}\n\n\n\t/**\n\t * Copies all dispatcher parameters, including listeners, from another event\n\t * dispatcher.\n\t *\n\t * @param source Source event dispatcher\n\t * @ignore\n\t */\n\tpublic copyFrom(source: this): IDisposer {\n\t\tif (this._disposed) {\n\t\t\tthrow new Error(\"EventDispatcher is disposed\");\n\t\t}\n\n\t\tif (source === this) {\n\t\t\tthrow new Error(\"Cannot copyFrom the same TargetedEventDispatcher\");\n\t\t}\n\n\t\tconst disposers: Array<IDisposer> = [];\n\n\t\t$array.each(source._listeners, (x) => {\n\t\t\t// TODO is this correct ?\n\t\t\tif (!x.killed && x.shouldClone) {\n\t\t\t\tif (x.type === null) {\n\t\t\t\t\tdisposers.push(this.onAll(x.callback as any, x.context));\n\n\t\t\t\t} else if (x.once) {\n\t\t\t\t\tdisposers.push(this.once(x.type, x.callback, x.context));\n\n\t\t\t\t} else {\n\t\t\t\t\tdisposers.push(this.on(x.type, x.callback, x.context));\n\t\t\t\t}\n\t\t\t}\n\t\t});\n\n\t\treturn new MultiDisposer(disposers);\n\t}\n\n}\n\n/**\n * A version of the [[EventDispatcher]] that dispatches events for a specific\n * target object.\n *\n * @ignore\n */\nexport class TargetedEventDispatcher<Target, T> extends EventDispatcher<T> {\n\n\t/**\n\t * A target object which is originating events using this dispatcher.\n\t */\n\tpublic target: Target;\n\n\t/**\n\t * Constructor\n\t *\n\t * @param target Event dispatcher target\n\t */\n\tconstructor(target: Target) {\n\t\tsuper();\n\t\tthis.target = target;\n\t}\n\n\t/**\n\t * Copies all dispatcher parameters, including listeners, from another event\n\t * dispatcher.\n\t *\n\t * @param source Source event dispatcher\n\t * @ignore\n\t */\n\tpublic copyFrom(source: this): IDisposer {\n\t\tif (this._disposed) {\n\t\t\tthrow new Error(\"EventDispatcher is disposed\");\n\t\t}\n\n\t\tif (source === this) {\n\t\t\tthrow new Error(\"Cannot copyFrom the same TargetedEventDispatcher\");\n\t\t}\n\n\t\tconst disposers: Array<IDisposer> = [];\n\n\t\t$array.each(source._listeners, (x) => {\n\t\t\t// TODO very hacky\n\t\t\tif (x.context === source.target) {\n\t\t\t\treturn;\n\t\t\t}\n\t\t\t// TODO is this correct ?\n\t\t\tif (!x.killed && x.shouldClone) {\n\t\t\t\tif (x.type === null) {\n\t\t\t\t\tdisposers.push(this.onAll(x.callback as any, x.context));\n\n\t\t\t\t} else if (x.once) {\n\t\t\t\t\tdisposers.push(this.once(x.type, x.callback, x.context));\n\n\t\t\t\t} else {\n\t\t\t\t\tdisposers.push(this.on(x.type, x.callback, x.context));\n\t\t\t\t}\n\t\t\t}\n\t\t});\n\n\t\treturn new MultiDisposer(disposers);\n\t}\n\n}\n","/**\r\n * ============================================================================\r\n * IMPORTS\r\n * ============================================================================\r\n * @hidden\r\n */\r\nimport * as $array from \"./Array\";\r\n/**\r\n * A base class for disposable objects.\r\n *\r\n * @ignore Exclude from docs\r\n */\r\nexport class DisposerClass {\r\n    /**\r\n     * Constructor.\r\n     */\r\n    constructor() {\r\n        /**\r\n         * Is object disposed?\r\n         */\r\n        Object.defineProperty(this, \"_disposed\", {\r\n            enumerable: true,\r\n            configurable: true,\r\n            writable: true,\r\n            value: void 0\r\n        });\r\n        this._disposed = false;\r\n    }\r\n    /**\r\n     * Checks if object is disposed.\r\n     *\r\n     * @return Disposed?\r\n     */\r\n    isDisposed() {\r\n        return this._disposed;\r\n    }\r\n    /**\r\n     * Disposes the object.\r\n     */\r\n    dispose() {\r\n        if (!this._disposed) {\r\n            this._disposed = true;\r\n            this._dispose();\r\n        }\r\n    }\r\n}\r\n/**\r\n * A class for creating an IDisposer.\r\n *\r\n * @ignore Exclude from docs\r\n */\r\nexport class Disposer {\r\n    /**\r\n     * Constructor.\r\n     *\r\n     * @param dispose  Function that disposes object\r\n     */\r\n    constructor(dispose) {\r\n        /**\r\n         * Is object disposed?\r\n         */\r\n        Object.defineProperty(this, \"_disposed\", {\r\n            enumerable: true,\r\n            configurable: true,\r\n            writable: true,\r\n            value: void 0\r\n        });\r\n        /**\r\n         * Method that disposes the object.\r\n         */\r\n        Object.defineProperty(this, \"_dispose\", {\r\n            enumerable: true,\r\n            configurable: true,\r\n            writable: true,\r\n            value: void 0\r\n        });\r\n        this._disposed = false;\r\n        this._dispose = dispose;\r\n    }\r\n    /**\r\n     * Checks if object is disposed.\r\n     *\r\n     * @return Disposed?\r\n     */\r\n    isDisposed() {\r\n        return this._disposed;\r\n    }\r\n    /**\r\n     * Disposes the object.\r\n     */\r\n    dispose() {\r\n        if (!this._disposed) {\r\n            this._disposed = true;\r\n            this._dispose();\r\n        }\r\n    }\r\n}\r\n/**\r\n * This can be extended by other classes to add a `_disposers` property.\r\n *\r\n * @ignore Exclude from docs\r\n */\r\nexport class ArrayDisposer extends DisposerClass {\r\n    constructor() {\r\n        super(...arguments);\r\n        Object.defineProperty(this, \"_disposers\", {\r\n            enumerable: true,\r\n            configurable: true,\r\n            writable: true,\r\n            value: []\r\n        });\r\n    }\r\n    _dispose() {\r\n        $array.each(this._disposers, (x) => {\r\n            x.dispose();\r\n        });\r\n    }\r\n}\r\n/**\r\n * A collection of related disposers that can be disposed in one go.\r\n *\r\n * @ignore Exclude from docs\r\n */\r\nexport class MultiDisposer extends DisposerClass {\r\n    constructor(disposers) {\r\n        super();\r\n        Object.defineProperty(this, \"_disposers\", {\r\n            enumerable: true,\r\n            configurable: true,\r\n            writable: true,\r\n            value: void 0\r\n        });\r\n        this._disposers = disposers;\r\n    }\r\n    _dispose() {\r\n        $array.each(this._disposers, (x) => {\r\n            x.dispose();\r\n        });\r\n    }\r\n    get disposers() {\r\n        return this._disposers;\r\n    }\r\n}\r\n/**\r\n * A special kind of Disposer that has attached value set.\r\n *\r\n * If a new value is set using `set()` method, the old disposer value is\r\n * disposed.\r\n *\r\n * @ignore Exclude from docs\r\n * @todo Description\r\n */\r\nexport class MutableValueDisposer extends DisposerClass {\r\n    constructor() {\r\n        super(...arguments);\r\n        /**\r\n         * Current disposer.\r\n         */\r\n        Object.defineProperty(this, \"_disposer\", {\r\n            enumerable: true,\r\n            configurable: true,\r\n            writable: true,\r\n            value: void 0\r\n        });\r\n        /**\r\n         * Current value.\r\n         */\r\n        Object.defineProperty(this, \"_value\", {\r\n            enumerable: true,\r\n            configurable: true,\r\n            writable: true,\r\n            value: void 0\r\n        });\r\n    }\r\n    _dispose() {\r\n        if (this._disposer != null) {\r\n            this._disposer.dispose();\r\n            this._disposer = undefined;\r\n        }\r\n    }\r\n    /**\r\n     * Returns current value.\r\n     *\r\n     * @return Value\r\n     */\r\n    get() {\r\n        return this._value;\r\n    }\r\n    /**\r\n     * Sets value and disposes previous disposer if it was set.\r\n     *\r\n     * @param value     New value\r\n     * @param disposer  Disposer\r\n     */\r\n    set(value, disposer) {\r\n        if (this._disposer != null) {\r\n            this._disposer.dispose();\r\n        }\r\n        this._disposer = disposer;\r\n        this._value = value;\r\n    }\r\n    /**\r\n     * Resets the disposer value.\r\n     */\r\n    reset() {\r\n        this.set(undefined, undefined);\r\n    }\r\n}\r\n/**\r\n * @ignore Exclude from docs\r\n * @todo Description\r\n */\r\nexport class CounterDisposer extends Disposer {\r\n    constructor() {\r\n        super(...arguments);\r\n        /**\r\n         * [_counter description]\r\n         *\r\n         * @todo Description\r\n         */\r\n        Object.defineProperty(this, \"_counter\", {\r\n            enumerable: true,\r\n            configurable: true,\r\n            writable: true,\r\n            value: 0\r\n        });\r\n    }\r\n    /**\r\n     * [increment description]\r\n     *\r\n     * @todo Description\r\n     */\r\n    increment() {\r\n        // TODO throw an error if it is disposed\r\n        ++this._counter;\r\n        // TODO make this more efficient\r\n        return new Disposer(() => {\r\n            --this._counter;\r\n            if (this._counter === 0) {\r\n                this.dispose();\r\n            }\r\n        });\r\n    }\r\n}\r\n//# sourceMappingURL=Disposer.js.map","/**\n * ============================================================================\n * IMPORTS\n * ============================================================================\n * @hidden\n */\nimport * as $array from \"./Array\";\nimport type { Optional } from \"./Type\";\n\n/**\n * Defines interface for disposable objects.\n *\n * @ignore Exclude from docs\n */\nexport interface IDisposer {\n\tisDisposed(): boolean;\n\tdispose(): void;\n}\n\n/**\n * A base class for disposable objects.\n *\n * @ignore Exclude from docs\n */\nexport abstract class DisposerClass implements IDisposer {\n\n\t/**\n\t * Is object disposed?\n\t */\n\tprivate _disposed: boolean;\n\n\t/**\n\t * Constructor.\n\t */\n\tconstructor() {\n\t\tthis._disposed = false;\n\t}\n\n\t/**\n\t * Checks if object is disposed.\n\t *\n\t * @return Disposed?\n\t */\n\tpublic isDisposed(): boolean {\n\t\treturn this._disposed;\n\t}\n\n\tprotected abstract _dispose(): void;\n\n\t/**\n\t * Disposes the object.\n\t */\n\tpublic dispose(): void {\n\t\tif (!this._disposed) {\n\t\t\tthis._disposed = true;\n\t\t\tthis._dispose();\n\t\t}\n\t}\n}\n\n/**\n * A class for creating an IDisposer.\n *\n * @ignore Exclude from docs\n */\nexport class Disposer implements IDisposer {\n\n\t/**\n\t * Is object disposed?\n\t */\n\tprivate _disposed: boolean;\n\n\t/**\n\t * Method that disposes the object.\n\t */\n\tprivate _dispose: () => void;\n\n\t/**\n\t * Constructor.\n\t *\n\t * @param dispose  Function that disposes object\n\t */\n\tconstructor(dispose: () => void) {\n\t\tthis._disposed = false;\n\t\tthis._dispose = dispose;\n\t}\n\n\t/**\n\t * Checks if object is disposed.\n\t *\n\t * @return Disposed?\n\t */\n\tpublic isDisposed(): boolean {\n\t\treturn this._disposed;\n\t}\n\n\t/**\n\t * Disposes the object.\n\t */\n\tpublic dispose(): void {\n\t\tif (!this._disposed) {\n\t\t\tthis._disposed = true;\n\t\t\tthis._dispose();\n\t\t}\n\t}\n}\n\n/**\n * This can be extended by other classes to add a `_disposers` property.\n *\n * @ignore Exclude from docs\n */\nexport class ArrayDisposer extends DisposerClass {\n\tprotected _disposers: Array<IDisposer> = [];\n\n\tprotected _dispose(): void {\n\t\t$array.each(this._disposers, (x) => {\n\t\t\tx.dispose();\n\t\t});\n\t}\n}\n\n/**\n * A collection of related disposers that can be disposed in one go.\n *\n * @ignore Exclude from docs\n */\nexport class MultiDisposer extends DisposerClass {\n\tprotected _disposers: Array<IDisposer>;\n\n\tconstructor(disposers: Array<IDisposer>) {\n\t\tsuper();\n\t\tthis._disposers = disposers;\n\t}\n\n\tprotected _dispose(): void {\n\t\t$array.each(this._disposers, (x) => {\n\t\t\tx.dispose();\n\t\t});\n\t}\n\n\tpublic get disposers(): Array<IDisposer> {\n\t\treturn this._disposers;\n\t}\n}\n\n/**\n * A special kind of Disposer that has attached value set.\n *\n * If a new value is set using `set()` method, the old disposer value is\n * disposed.\n *\n * @ignore Exclude from docs\n * @todo Description\n */\nexport class MutableValueDisposer<T extends IDisposer> extends DisposerClass {\n\n\t/**\n\t * Current disposer.\n\t */\n\tprivate _disposer: Optional<IDisposer>;\n\n\t/**\n\t * Current value.\n\t */\n\tprivate _value: Optional<T>;\n\n\tprotected _dispose(): void {\n\t\tif (this._disposer != null) {\n\t\t\tthis._disposer.dispose();\n\t\t\tthis._disposer = undefined;\n\t\t}\n\t}\n\n\t/**\n\t * Returns current value.\n\t *\n\t * @return Value\n\t */\n\tpublic get(): Optional<T> {\n\t\treturn this._value;\n\t}\n\n\t/**\n\t * Sets value and disposes previous disposer if it was set.\n\t *\n\t * @param value     New value\n\t * @param disposer  Disposer\n\t */\n\tpublic set(value: Optional<T>, disposer: Optional<IDisposer>): void {\n\t\tif (this._disposer != null) {\n\t\t\tthis._disposer.dispose();\n\t\t}\n\n\t\tthis._disposer = disposer;\n\t\tthis._value = value;\n\t}\n\n\t/**\n\t * Resets the disposer value.\n\t */\n\tpublic reset(): void {\n\t\tthis.set(undefined, undefined);\n\t}\n\n}\n\n/**\n * @ignore Exclude from docs\n * @todo Description\n */\nexport class CounterDisposer extends Disposer {\n\n\t/**\n\t * [_counter description]\n\t *\n\t * @todo Description\n\t */\n\tprivate _counter: number = 0;\n\n\t/**\n\t * [increment description]\n\t *\n\t * @todo Description\n\t */\n\tpublic increment() {\n\t\t// TODO throw an error if it is disposed\n\t\t++this._counter;\n\n\t\t// TODO make this more efficient\n\t\treturn new Disposer(() => {\n\t\t\t--this._counter;\n\n\t\t\tif (this._counter === 0) {\n\t\t\t\tthis.dispose();\n\t\t\t}\n\t\t});\n\t}\n\n}\n","import * as $type from \"./Type\";\r\n/**\r\n * ============================================================================\r\n * UTILITY FUNCTIONS\r\n * ============================================================================\r\n * @hidden\r\n */\r\n/**\r\n * Searches `array` for `value`.\r\n *\r\n * Returns -1 if not found.\r\n *\r\n * @param array  Source array\r\n * @param value  Value to search\r\n * @returns Index\r\n */\r\nexport function indexOf(array, value) {\r\n    const length = array.length;\r\n    for (let i = 0; i < length; ++i) {\r\n        // TODO handle NaN\r\n        if (array[i] === value) {\r\n            return i;\r\n        }\r\n    }\r\n    return -1;\r\n}\r\n/**\r\n * Calls `test` for each element in `array`.\r\n *\r\n * If `test` returns `true` then it immediately returns `true`.\r\n *\r\n * If `test` returns `false` for all of the elements in `array` then it returns `false`.\r\n *\r\n * @param array  Source array\r\n * @param test   Function which is called on each element\r\n * @returns Whether `test` returned true or not\r\n */\r\nexport function any(array, test) {\r\n    const length = array.length;\r\n    for (let i = 0; i < length; ++i) {\r\n        if (test(array[i])) {\r\n            return true;\r\n        }\r\n    }\r\n    return false;\r\n}\r\n/**\r\n * Calls `fn` function for every member of array and returns a new array out\r\n * of all outputs.\r\n *\r\n * @param array  Source array\r\n * @param fn     Callback function\r\n * @returns New array\r\n */\r\nexport function map(array, fn) {\r\n    const length = array.length;\r\n    const output = new Array(length);\r\n    for (let i = 0; i < length; ++i) {\r\n        output[i] = fn(array[i], i);\r\n    }\r\n    return output;\r\n}\r\n/**\r\n * Iterates through all items in array and calls `fn` function for each of\r\n * them.\r\n *\r\n * @param array  Source array\r\n * @param fn     Callback function\r\n */\r\nexport function each(array, fn) {\r\n    const length = array.length;\r\n    for (let i = 0; i < length; ++i) {\r\n        fn(array[i], i);\r\n    }\r\n}\r\n/**\r\n * Iterates through all items in array in reverse order and calls `fn` function for each of\r\n * them.\r\n *\r\n * @param array  Source array\r\n * @param fn     Callback function\r\n */\r\nexport function eachReverse(array, fn) {\r\n    let i = array.length;\r\n    while (i > 0) {\r\n        --i;\r\n        fn(array[i], i);\r\n    }\r\n}\r\n/**\r\n * Iterates through all items in array and calls `fn` function for each of\r\n * them.\r\n *\r\n * If `fn` call evaluates to `false`, further iteration is cancelled.\r\n *\r\n * @param array  Source array\r\n * @param fn     Callback function\r\n */\r\nexport function eachContinue(array, fn) {\r\n    const length = array.length;\r\n    for (let i = 0; i < length; ++i) {\r\n        if (!fn(array[i], i)) {\r\n            break;\r\n        }\r\n    }\r\n}\r\n/**\r\n * Shifts an item at `index` towards beginning of the array.\r\n *\r\n * @param array  Source array\r\n * @param index  Target element index\r\n */\r\nexport function shiftLeft(array, index) {\r\n    const length = array.length;\r\n    for (let i = index; i < length; ++i) {\r\n        array[i - index] = array[i];\r\n    }\r\n    array.length = length - index;\r\n}\r\n/**\r\n * Returns the last item of the array.\r\n *\r\n * @param array  Source array\r\n * @returns Last item\r\n */\r\nexport function last(array) {\r\n    const length = array.length;\r\n    return length ? array[length - 1] : undefined;\r\n}\r\n/**\r\n * Returns the first item of the array.\r\n *\r\n * @param array  Source array\r\n * @returns Last item\r\n */\r\nexport function first(array) {\r\n    return array[0];\r\n}\r\n/**\r\n * Inserts `element` into `array` at `index`.\r\n *\r\n * Caps `index` to be between `0` and `array.length`\r\n *\r\n * @param array    Source array\r\n * @param element  Item to insert\r\n * @param array    Index to insert item at\r\n */\r\nexport function insert(array, element, index) {\r\n    //if (array) {\r\n    index = Math.max(0, Math.min(index, array.length));\r\n    array.splice(index, 0, element);\r\n    //}\r\n}\r\n/**\r\n * Removes all copies of `element` from `array` (if they exist) and then\r\n * inserts `element` at `index`.\r\n *\r\n * @param array    Source array\r\n * @param element  Item\r\n * @param array    Index to move item to\r\n */\r\nexport function setIndex(array, element, index) {\r\n    remove(array, element);\r\n    insert(array, element, index);\r\n}\r\n/**\r\n * Pushes all of the elements from `input` into `array`.\r\n *\r\n * @param array  Output array\r\n * @param input  Input array\r\n */\r\nexport function pushAll(array, input) {\r\n    const length = input.length;\r\n    for (let i = 0; i < length; ++i) {\r\n        array.push(input[i]);\r\n    }\r\n}\r\n/**\r\n * Removes `element` from `array`.\r\n *\r\n * If there are multiple copies of `element`, they are all removed.\r\n *\r\n * @param array    Source array\r\n * @param element  Item to remove\r\n */\r\nexport function remove(array, element) {\r\n    let found = false;\r\n    let index = 0;\r\n    for (;;) {\r\n        index = array.indexOf(element, index);\r\n        if (index === -1) {\r\n            return found;\r\n        }\r\n        else {\r\n            found = true;\r\n            array.splice(index, 1);\r\n        }\r\n    }\r\n}\r\nexport function removeFirst(array, element) {\r\n    let index = array.indexOf(element);\r\n    if (index !== -1) {\r\n        array.splice(index, 1);\r\n        return true;\r\n    }\r\n    else {\r\n        return false;\r\n    }\r\n}\r\n/**\r\n * Adds an `element` to `array`.\r\n *\r\n * If array already contains and item like this, it is removed before adding\r\n * it again.\r\n *\r\n * Optionally `toIndex` can be specified to add element at specific index.\r\n *\r\n * @param array    Source array\r\n * @param element  Item to add\r\n * @param array    Index to move item to\r\n */\r\nexport function move(array, element, toIndex) {\r\n    // @todo this implementation must be the same as the List.moveValue method\r\n    // @todo don't do anything if the desired index is the same as the current index\r\n    let index = indexOf(array, element);\r\n    // @todo remove all old values rather than only the first ?\r\n    if (index !== -1) {\r\n        removeIndex(array, index);\r\n    }\r\n    if (toIndex == null) {\r\n        array.push(element);\r\n    }\r\n    else {\r\n        insertIndex(array, toIndex, element);\r\n    }\r\n}\r\n/**\r\n * Inserts `element` into `array` at `index`.\r\n *\r\n * If `index` is not provided, it will insert `element` at the end of `array`.\r\n *\r\n * @param array    Source array\r\n * @param element  Item to add\r\n * @param array    Index to add item at\r\n */\r\nexport function add(array, element, index) {\r\n    // Append to the end if index is not set\r\n    if (!$type.isNumber(index)) {\r\n        array.push(element);\r\n    }\r\n    // Add to the beginning of array if index is 0\r\n    else if (index === 0) {\r\n        array.unshift(element);\r\n    }\r\n    // Add to indicated place if index is set\r\n    else {\r\n        array.splice(index, 0, element);\r\n    }\r\n}\r\n/**\r\n * Pushes `element` into `array` if it doesn't already exist.\r\n *\r\n * @param array    Source array\r\n * @param element  Item to add\r\n */\r\nexport function pushOne(array, element) {\r\n    if (array.indexOf(element) === -1) {\r\n        array.push(element);\r\n    }\r\n}\r\n/**\r\n * Removes `element` from `array` (if it exists) and then inserts `element` at\r\n * `index`.\r\n *\r\n * If `index` is not provided, it will insert `element` at the end of `array`.\r\n *\r\n * @param array    Source array\r\n * @param element  Item to remove\r\n * @param array    Index to move item to\r\n */\r\nexport function replace(array, element, index) {\r\n    // check if exists\r\n    let ind = array.indexOf(element);\r\n    // remove if exists\r\n    if (ind !== -1) {\r\n        array.splice(ind, 1);\r\n    }\r\n    // add to end if index is not set\r\n    if (!$type.isNumber(index)) {\r\n        array.push(element);\r\n    }\r\n    // add to indicated place if index is set\r\n    else {\r\n        array.splice(index, 0, element);\r\n    }\r\n}\r\n/**\r\n * Wraps `input` in an array, if it isn't already an array.\r\n *\r\n * @param input  Source value\r\n * @return An array\r\n */\r\nexport function toArray(input) {\r\n    if (Array.isArray(input)) {\r\n        return input;\r\n    }\r\n    else {\r\n        return [input];\r\n    }\r\n}\r\n/**\r\n * Returns `true` if `element` exists in `array`.\r\n *\r\n * @param array    Source array\r\n * @param element  Item to search for\r\n * @returns Item in array?\r\n */\r\nexport function has(array, element) {\r\n    return indexOf(array, element) !== -1;\r\n}\r\n/**\r\n * Returns a shallow copy of `array`.\r\n *\r\n * @param array  Source array\r\n * @returns Copy of the array\r\n */\r\nexport function copy(array) {\r\n    const length = array.length;\r\n    // It's faster to create the array with a pre-defined length\r\n    const output = new Array(length);\r\n    for (let i = 0; i < length; ++i) {\r\n        // Because the array has a pre-defined length, we have to assign rather than push\r\n        // This is also faster than pushing\r\n        output[i] = array[i];\r\n    }\r\n    return output;\r\n}\r\n/**\r\n * Returns a copy of `array` which contains all the elements between `start`\r\n * and `end`. (including `start` and excluding `end`)\r\n *\r\n * If `end` is not provided, it defaults to `array.length`.\r\n *\r\n * @param array  Source array\r\n * @param start  Start index\r\n * @param end    End index\r\n * @returns Part of the array\r\n */\r\nexport function slice(array, start, end = array.length) {\r\n    const output = new Array(end - start);\r\n    for (let i = start; i < end; ++i) {\r\n        output[i - start] = array[i];\r\n    }\r\n    return output;\r\n}\r\n/**\r\n * Inserts a value into array at specific index.\r\n *\r\n * @param array  Source array\r\n * @param index  Index\r\n * @param value  Value to insert\r\n */\r\nexport function insertIndex(array, index, value) {\r\n    array.splice(index, 0, value);\r\n}\r\n/**\r\n * Removes a value from array at specific index.\r\n *\r\n * @param array  Source array\r\n * @param index  Index\r\n */\r\nexport function removeIndex(array, index) {\r\n    array.splice(index, 1);\r\n}\r\n/**\r\n * Searches the array using custom function and returns index of the item if\r\n * found.\r\n *\r\n * Will call `matches` function on all items of the array. If return value\r\n * evaluates to `true`, index is returned.\r\n *\r\n * Otherwise returns -1.\r\n *\r\n * @param array    Source array\r\n * @param matches  Search function\r\n * @returns Index of the item if found\r\n */\r\nexport function findIndex(array, matches) {\r\n    const length = array.length;\r\n    for (let i = 0; i < length; ++i) {\r\n        if (matches(array[i], i)) {\r\n            return i;\r\n        }\r\n    }\r\n    return -1;\r\n}\r\n/**\r\n * This is the same as `findIndex` except it searches from right to left.\r\n *\r\n * @param array    Source array\r\n * @param matches  Search function\r\n * @returns Index of the item if found\r\n */\r\nexport function findIndexReverse(array, matches) {\r\n    let i = array.length;\r\n    while (i > 0) {\r\n        --i;\r\n        if (matches(array[i], i)) {\r\n            return i;\r\n        }\r\n    }\r\n    return -1;\r\n}\r\n/**\r\n * Searches the array using custom function and returns item if found.\r\n *\r\n * Will call `matches` function on all items of the array. If return value\r\n * evaluates to `true`, index is returned.\r\n *\r\n * Otherwise returns `undefined`.\r\n *\r\n * @param array    Source array\r\n * @param matches  Search function\r\n * @returns Item if found\r\n */\r\nexport function find(array, matches) {\r\n    const index = findIndex(array, matches);\r\n    if (index !== -1) {\r\n        return array[index];\r\n    }\r\n}\r\n/**\r\n * This is the same as `find` except it searches from right to left.\r\n *\r\n * @param array    Source array\r\n * @param matches  Search function\r\n * @returns Item if found\r\n */\r\nexport function findReverse(array, matches) {\r\n    const index = findIndexReverse(array, matches);\r\n    if (index !== -1) {\r\n        return array[index];\r\n    }\r\n}\r\n/**\r\n * Searches the array using custom function and returns item if found.\r\n *\r\n * Will call `matches` function on all items of the array. If value\r\n * is not `undefined`, it returns it.\r\n *\r\n * Otherwise returns `undefined`.\r\n *\r\n * @param array    Source array\r\n * @param matches  Search function\r\n * @returns Item if found\r\n */\r\nexport function findMap(array, matches) {\r\n    const length = array.length;\r\n    for (let i = 0; i < length; ++i) {\r\n        const value = matches(array[i], i);\r\n        if (value !== undefined) {\r\n            return value;\r\n        }\r\n    }\r\n}\r\n/**\r\n * Iterates through all items in array and calls `fn` function for each of\r\n * them.\r\n *\r\n * @param array  Source array\r\n * @param fn     Callback function\r\n */\r\nexport function shuffle(array) {\r\n    // https://stackoverflow.com/a/2450976/449477\r\n    let currentIndex = array.length, temporaryValue, randomIndex;\r\n    // While there remain elements to shuffle...\r\n    while (0 !== currentIndex) {\r\n        // Pick a remaining element...\r\n        randomIndex = Math.floor(Math.random() * currentIndex);\r\n        currentIndex -= 1;\r\n        // And swap it with the current element.\r\n        temporaryValue = array[currentIndex];\r\n        array[currentIndex] = array[randomIndex];\r\n        array[randomIndex] = temporaryValue;\r\n    }\r\n}\r\n/**\r\n * Orders an array using specific `ordering` function and returns right-most index of\r\n * the `value`.\r\n *\r\n * @ignore Exclude from docs\r\n * @param array     Source array\r\n * @param ordering  An ordering function\r\n * @returns Result of the search\r\n */\r\nexport function getSortedIndex(array, ordering) {\r\n    let start = 0;\r\n    let end = array.length;\r\n    let found = false;\r\n    while (start < end) {\r\n        // TODO is this faster/slower than using Math.floor ?\r\n        const pivot = (start + end) >> 1;\r\n        const order = ordering(array[pivot]);\r\n        // less\r\n        if (order < 0) {\r\n            start = pivot + 1;\r\n            // equal\r\n        }\r\n        else if (order === 0) {\r\n            found = true;\r\n            start = pivot + 1;\r\n            // more\r\n        }\r\n        else {\r\n            end = pivot;\r\n        }\r\n    }\r\n    return {\r\n        found: found,\r\n        index: (found ? start - 1 : start)\r\n    };\r\n}\r\n/**\r\n * Orders an array using specific `ordering` function and returns left-most index of\r\n * the `value`.\r\n *\r\n * @ignore Exclude from docs\r\n * @param array     Source array\r\n * @param ordering  An ordering function\r\n * @returns Result of the search\r\n */\r\nexport function getFirstSortedIndex(array, ordering) {\r\n    let start = 0;\r\n    let end = array.length;\r\n    let found = false;\r\n    while (start < end) {\r\n        // TODO is this faster/slower than using Math.floor ?\r\n        const pivot = (start + end) >> 1;\r\n        const order = ordering(array[pivot]);\r\n        // less\r\n        if (order < 0) {\r\n            start = pivot + 1;\r\n            // equal\r\n        }\r\n        else if (order === 0) {\r\n            found = true;\r\n            end = pivot;\r\n            // more\r\n        }\r\n        else {\r\n            end = pivot;\r\n        }\r\n    }\r\n    return {\r\n        found: found,\r\n        index: start\r\n    };\r\n}\r\nexport function keepIf(array, keep) {\r\n    let i = array.length;\r\n    while (i > 0) {\r\n        --i;\r\n        if (!keep(array[i])) {\r\n            array.splice(i, 1);\r\n        }\r\n    }\r\n}\r\n//# sourceMappingURL=Array.js.map","/**\n * ============================================================================\n * IMPORTS\n * ============================================================================\n * @hidden\n */\nimport type { Optional } from \"./Type\";\nimport * as $type from \"./Type\";\n\n\n/**\n * ============================================================================\n * UTILITY FUNCTIONS\n * ============================================================================\n * @hidden\n */\n\n/**\n * Searches `array` for `value`.\n *\n * Returns -1 if not found.\n *\n * @param array  Source array\n * @param value  Value to search\n * @returns Index\n */\nexport function indexOf<A>(array: ArrayLike<A>, value: A): number {\n\tconst length = array.length;\n\n\tfor (let i = 0; i < length; ++i) {\n\t\t// TODO handle NaN\n\t\tif (array[i] === value) {\n\t\t\treturn i;\n\t\t}\n\t}\n\n\treturn -1;\n}\n\n/**\n * Calls `test` for each element in `array`.\n *\n * If `test` returns `true` then it immediately returns `true`.\n *\n * If `test` returns `false` for all of the elements in `array` then it returns `false`.\n *\n * @param array  Source array\n * @param test   Function which is called on each element\n * @returns Whether `test` returned true or not\n */\nexport function any<A>(array: ArrayLike<A>, test: (value: A) => boolean): boolean {\n\tconst length = array.length;\n\n\tfor (let i = 0; i < length; ++i) {\n\t\tif (test(array[i])) {\n\t\t\treturn true;\n\t\t}\n\t}\n\n\treturn false;\n}\n\n/**\n * Calls `fn` function for every member of array and returns a new array out\n * of all outputs.\n *\n * @param array  Source array\n * @param fn     Callback function\n * @returns New array\n */\nexport function map<A, B>(array: ArrayLike<A>, fn: (value: A, index: number) => B): Array<B> {\n\tconst length = array.length;\n\tconst output = new Array(length);\n\n\tfor (let i = 0; i < length; ++i) {\n\t\toutput[i] = fn(array[i], i);\n\t}\n\n\treturn output;\n}\n\n/**\n * Iterates through all items in array and calls `fn` function for each of\n * them.\n *\n * @param array  Source array\n * @param fn     Callback function\n */\nexport function each<A>(array: ArrayLike<A>, fn: (value: A, index: number) => void): void {\n\tconst length = array.length;\n\n\tfor (let i = 0; i < length; ++i) {\n\t\tfn(array[i], i);\n\t}\n}\n\n/**\n * Iterates through all items in array in reverse order and calls `fn` function for each of\n * them.\n *\n * @param array  Source array\n * @param fn     Callback function\n */\nexport function eachReverse<A>(array: ArrayLike<A>, fn: (value: A, index: number) => void): void {\n\tlet i = array.length;\n\n\twhile (i > 0) {\n\t\t--i;\n\t\tfn(array[i], i);\n\t}\n}\n\n/**\n * Iterates through all items in array and calls `fn` function for each of\n * them.\n *\n * If `fn` call evaluates to `false`, further iteration is cancelled.\n *\n * @param array  Source array\n * @param fn     Callback function\n */\nexport function eachContinue<A>(array: ArrayLike<A>, fn: (value: A, index: number) => boolean): void {\n\tconst length = array.length;\n\n\tfor (let i = 0; i < length; ++i) {\n\t\tif (!fn(array[i], i)) {\n\t\t\tbreak;\n\t\t}\n\t}\n}\n\n/**\n * Shifts an item at `index` towards beginning of the array.\n *\n * @param array  Source array\n * @param index  Target element index\n */\nexport function shiftLeft<A>(array: Array<A>, index: number): void {\n\tconst length = array.length;\n\n\tfor (let i = index; i < length; ++i) {\n\t\tarray[i - index] = array[i];\n\t}\n\n\tarray.length = length - index;\n}\n\n/**\n * Returns the last item of the array.\n *\n * @param array  Source array\n * @returns Last item\n */\nexport function last<A>(array: Array<A>): Optional<A> {\n\tconst length = array.length;\n\treturn length ? array[length - 1] : undefined;\n}\n\n/**\n * Returns the first item of the array.\n *\n * @param array  Source array\n * @returns Last item\n */\nexport function first<A>(array: Array<A>): Optional<A> {\n\treturn array[0];\n}\n\n/**\n * Inserts `element` into `array` at `index`.\n *\n * Caps `index` to be between `0` and `array.length`\n *\n * @param array    Source array\n * @param element  Item to insert\n * @param array    Index to insert item at\n */\nexport function insert<A>(array: Array<A>, element: A, index: number): void {\n\t//if (array) {\n\tindex = Math.max(0, Math.min(index, array.length));\n\tarray.splice(index, 0, element);\n\t//}\n}\n\n/**\n * Removes all copies of `element` from `array` (if they exist) and then\n * inserts `element` at `index`.\n *\n * @param array    Source array\n * @param element  Item\n * @param array    Index to move item to\n */\nexport function setIndex<A>(array: Array<A>, element: A, index: number): void {\n\tremove(array, element);\n\tinsert(array, element, index);\n}\n\n\n/**\n * Pushes all of the elements from `input` into `array`.\n *\n * @param array  Output array\n * @param input  Input array\n */\nexport function pushAll<A>(array: Array<A>, input: Array<A>) {\n\tconst length = input.length;\n\n\tfor (let i = 0; i < length; ++i) {\n\t\tarray.push(input[i]);\n\t}\n}\n\n\n/**\n * Removes `element` from `array`.\n *\n * If there are multiple copies of `element`, they are all removed.\n *\n * @param array    Source array\n * @param element  Item to remove\n */\nexport function remove<A>(array: Array<A>, element: A): boolean {\n\tlet found: boolean = false;\n\tlet index: number = 0;\n\n\tfor (;;) {\n\t\tindex = array.indexOf(element, index);\n\n\t\tif (index === -1) {\n\t\t\treturn found;\n\n\t\t} else {\n\t\t\tfound = true;\n\t\t\tarray.splice(index, 1);\n\t\t}\n\t}\n}\n\nexport function removeFirst<A>(array: Array<A>, element: A): boolean {\n\tlet index: number = array.indexOf(element);\n\n\tif (index !== -1) {\n\t\tarray.splice(index, 1);\n\t\treturn true;\n\n\t} else {\n\t\treturn false;\n\t}\n}\n\n/**\n * Adds an `element` to `array`.\n *\n * If array already contains and item like this, it is removed before adding\n * it again.\n *\n * Optionally `toIndex` can be specified to add element at specific index.\n *\n * @param array    Source array\n * @param element  Item to add\n * @param array    Index to move item to\n */\nexport function move<A>(array: Array<A>, element: A, toIndex?: number): void {\n\t// @todo this implementation must be the same as the List.moveValue method\n\t// @todo don't do anything if the desired index is the same as the current index\n\tlet index = indexOf(array, element);\n\n\t// @todo remove all old values rather than only the first ?\n\tif (index !== -1) {\n\t\tremoveIndex(array, index);\n\t}\n\n\tif (toIndex == null) {\n\t\tarray.push(element);\n\t} else {\n\t\tinsertIndex(array, toIndex, element);\n\t}\n}\n\n\n/**\n * Inserts `element` into `array` at `index`.\n *\n * If `index` is not provided, it will insert `element` at the end of `array`.\n *\n * @param array    Source array\n * @param element  Item to add\n * @param array    Index to add item at\n */\nexport function add<A>(array: Array<A>, element: A, index?: number): void {\n\t// Append to the end if index is not set\n\tif (!$type.isNumber(index)) {\n\t\tarray.push(element);\n\t}\n\n\t// Add to the beginning of array if index is 0\n\telse if (index === 0) {\n\t\tarray.unshift(element);\n\t}\n\t// Add to indicated place if index is set\n\telse {\n\t\tarray.splice(index, 0, element);\n\t}\n}\n\n\n/**\n * Pushes `element` into `array` if it doesn't already exist.\n *\n * @param array    Source array\n * @param element  Item to add\n */\nexport function pushOne<A>(array: Array<A>, element: A): void {\n\tif (array.indexOf(element) === -1) {\n\t\tarray.push(element);\n\t}\n}\n\n\n/**\n * Removes `element` from `array` (if it exists) and then inserts `element` at\n * `index`.\n *\n * If `index` is not provided, it will insert `element` at the end of `array`.\n *\n * @param array    Source array\n * @param element  Item to remove\n * @param array    Index to move item to\n */\nexport function replace<A>(array: Array<A>, element: A, index?: number): void {\n\t// check if exists\n\tlet ind: number = array.indexOf(element);\n\n\t// remove if exists\n\tif (ind !== -1) {\n\t\tarray.splice(ind, 1);\n\t}\n\n\t// add to end if index is not set\n\tif (!$type.isNumber(index)) {\n\t\tarray.push(element);\n\t}\n\t// add to indicated place if index is set\n\telse {\n\t\tarray.splice(index, 0, element);\n\t}\n}\n\n/**\n * Wraps `input` in an array, if it isn't already an array.\n *\n * @param input  Source value\n * @return An array\n */\nexport function toArray<A>(input: Array<A> | A): Array<A> {\n\tif (Array.isArray(input)) {\n\t\treturn input;\n\t}\n\telse {\n\t\treturn [input];\n\t}\n}\n\n/**\n * Returns `true` if `element` exists in `array`.\n *\n * @param array    Source array\n * @param element  Item to search for\n * @returns Item in array?\n */\nexport function has<A>(array: ArrayLike<A>, element: A): boolean {\n\treturn indexOf(array, element) !== -1;\n}\n\n/**\n * Returns a shallow copy of `array`.\n *\n * @param array  Source array\n * @returns Copy of the array\n */\nexport function copy<A>(array: ArrayLike<A>): Array<A> {\n\tconst length = array.length;\n\n\t// It's faster to create the array with a pre-defined length\n\tconst output = new Array(length);\n\n\tfor (let i = 0; i < length; ++i) {\n\t\t// Because the array has a pre-defined length, we have to assign rather than push\n\t\t// This is also faster than pushing\n\t\toutput[i] = array[i];\n\t}\n\n\treturn output;\n}\n\n\n/**\n * Returns a copy of `array` which contains all the elements between `start`\n * and `end`. (including `start` and excluding `end`)\n *\n * If `end` is not provided, it defaults to `array.length`.\n *\n * @param array  Source array\n * @param start  Start index\n * @param end    End index\n * @returns Part of the array\n */\nexport function slice<A>(array: ArrayLike<A>, start: number, end: number = array.length): Array<A> {\n\tconst output = new Array(end - start);\n\n\tfor (let i = start; i < end; ++i) {\n\t\toutput[i - start] = array[i];\n\t}\n\n\treturn output;\n}\n\n/**\n * Inserts a value into array at specific index.\n *\n * @param array  Source array\n * @param index  Index\n * @param value  Value to insert\n */\nexport function insertIndex<A>(array: Array<A>, index: number, value: A): void {\n\tarray.splice(index, 0, value);\n}\n\n/**\n * Removes a value from array at specific index.\n *\n * @param array  Source array\n * @param index  Index\n */\nexport function removeIndex<A>(array: Array<A>, index: number): void {\n\tarray.splice(index, 1);\n}\n\n/**\n * @ignore Exclude from docs\n * @todo Description\n */\nexport interface SortResult {\n\tfound: boolean;\n\tindex: number\n}\n\n/**\n * Searches the array using custom function and returns index of the item if\n * found.\n *\n * Will call `matches` function on all items of the array. If return value\n * evaluates to `true`, index is returned.\n *\n * Otherwise returns -1.\n *\n * @param array    Source array\n * @param matches  Search function\n * @returns Index of the item if found\n */\nexport function findIndex<A>(array: ArrayLike<A>, matches: (value: A, index: number) => boolean): number {\n\tconst length = array.length;\n\n\tfor (let i = 0; i < length; ++i) {\n\t\tif (matches(array[i], i)) {\n\t\t\treturn i;\n\t\t}\n\t}\n\n\treturn -1;\n}\n\n/**\n * This is the same as `findIndex` except it searches from right to left.\n *\n * @param array    Source array\n * @param matches  Search function\n * @returns Index of the item if found\n */\nexport function findIndexReverse<A>(array: ArrayLike<A>, matches: (value: A, index: number) => boolean): number {\n\tlet i = array.length;\n\n\twhile (i > 0) {\n\t\t--i;\n\t\tif (matches(array[i], i)) {\n\t\t\treturn i;\n\t\t}\n\t}\n\n\treturn -1;\n}\n\n/**\n * Searches the array using custom function and returns item if found.\n *\n * Will call `matches` function on all items of the array. If return value\n * evaluates to `true`, index is returned.\n *\n * Otherwise returns `undefined`.\n *\n * @param array    Source array\n * @param matches  Search function\n * @returns Item if found\n */\nexport function find<A>(array: ArrayLike<A>, matches: (value: A, index: number) => boolean): A | undefined {\n\tconst index = findIndex(array, matches);\n\n\tif (index !== -1) {\n\t\treturn array[index];\n\t}\n}\n\n/**\n * This is the same as `find` except it searches from right to left.\n *\n * @param array    Source array\n * @param matches  Search function\n * @returns Item if found\n */\nexport function findReverse<A>(array: ArrayLike<A>, matches: (value: A, index: number) => boolean): A | undefined {\n\tconst index = findIndexReverse(array, matches);\n\n\tif (index !== -1) {\n\t\treturn array[index];\n\t}\n}\n\n/**\n * Searches the array using custom function and returns item if found.\n *\n * Will call `matches` function on all items of the array. If value\n * is not `undefined`, it returns it.\n *\n * Otherwise returns `undefined`.\n *\n * @param array    Source array\n * @param matches  Search function\n * @returns Item if found\n */\nexport function findMap<A, B>(array: ArrayLike<A>, matches: (value: A, index: number) => B | undefined): B | undefined {\n\tconst length = array.length;\n\n\tfor (let i = 0; i < length; ++i) {\n\t\tconst value = matches(array[i], i);\n\n\t\tif (value !== undefined) {\n\t\t\treturn value;\n\t\t}\n\t}\n}\n\n/**\n * Iterates through all items in array and calls `fn` function for each of\n * them.\n *\n * @param array  Source array\n * @param fn     Callback function\n */\nexport function shuffle<A>(array: Array<A>) {\n\t// https://stackoverflow.com/a/2450976/449477\n\tlet currentIndex = array.length,\n\t\ttemporaryValue,\n\t\trandomIndex;\n\n\t// While there remain elements to shuffle...\n\twhile (0 !== currentIndex) {\n\t\t// Pick a remaining element...\n\t\trandomIndex = Math.floor(Math.random() * currentIndex);\n\t\tcurrentIndex -= 1;\n\n\t\t// And swap it with the current element.\n\t\ttemporaryValue = array[currentIndex];\n\t\tarray[currentIndex] = array[randomIndex];\n\t\tarray[randomIndex] = temporaryValue;\n\t}\n}\n\n\nexport type Ordering = -1 | 0 | 1;\n\n/**\n * @ignore Exclude from docs\n * @todo Description\n */\nexport interface SortResult {\n\tfound: boolean;\n\tindex: number\n}\n\n/**\n * Orders an array using specific `ordering` function and returns right-most index of\n * the `value`.\n *\n * @ignore Exclude from docs\n * @param array     Source array\n * @param ordering  An ordering function\n * @returns Result of the search\n */\nexport function getSortedIndex<A>(array: ArrayLike<A>, ordering: (left: A) => Ordering): SortResult {\n\tlet start = 0;\n\tlet end   = array.length;\n\tlet found = false;\n\n\twhile (start < end) {\n\t\t// TODO is this faster/slower than using Math.floor ?\n\t\tconst pivot = (start + end) >> 1;\n\n\t\tconst order = ordering(array[pivot]);\n\n\t\t// less\n\t\tif (order < 0) {\n\t\t\tstart = pivot + 1;\n\n\t\t// equal\n\t\t} else if (order === 0) {\n\t\t\tfound = true;\n\t\t\tstart = pivot + 1;\n\n\t\t// more\n\t\t} else {\n\t\t\tend = pivot;\n\t\t}\n\t}\n\n\treturn {\n\t\tfound: found,\n\t\tindex: (found ? start - 1 : start)\n\t};\n}\n\n\n/**\n * Orders an array using specific `ordering` function and returns left-most index of\n * the `value`.\n *\n * @ignore Exclude from docs\n * @param array     Source array\n * @param ordering  An ordering function\n * @returns Result of the search\n */\nexport function getFirstSortedIndex<A>(array: ArrayLike<A>, ordering: (left: A) => Ordering): SortResult {\n\tlet start = 0;\n\tlet end   = array.length;\n\tlet found = false;\n\n\twhile (start < end) {\n\t\t// TODO is this faster/slower than using Math.floor ?\n\t\tconst pivot = (start + end) >> 1;\n\n\t\tconst order = ordering(array[pivot]);\n\n\t\t// less\n\t\tif (order < 0) {\n\t\t\tstart = pivot + 1;\n\n\t\t// equal\n\t\t} else if (order === 0) {\n\t\t\tfound = true;\n\t\t\tend = pivot;\n\n\t\t// more\n\t\t} else {\n\t\t\tend = pivot;\n\t\t}\n\t}\n\n\treturn {\n\t\tfound: found,\n\t\tindex: start\n\t};\n}\n\n\nexport function keepIf<A>(array: Array<A>, keep: (value: A) => boolean): void {\n\tlet i = array.length;\n\n\twhile (i > 0) {\n\t\t--i;\n\n\t\tif (!keep(array[i])) {\n\t\t\tarray.splice(i, 1);\n\t\t}\n\t}\n}\n","/**\r\n * A collection of utility functions for various type checks and conversion\r\n * @hidden\r\n */\r\n/**\r\n * ============================================================================\r\n * TYPE CHECK\r\n * ============================================================================\r\n * @hidden\r\n */\r\n/**\r\n * Returns `true` if value is not a number (NaN).\r\n *\r\n * @param value Input value\r\n * @return Is NaN?\r\n */\r\nexport function isNaN(value) {\r\n    return Number(value) !== value;\r\n}\r\n/**\r\n * Returns a type of the value.\r\n *\r\n * @param value  Input value\r\n * @return Type of the value\r\n * @ignore\r\n */\r\nexport function getType(value) {\r\n    return ({}).toString.call(value);\r\n}\r\n/**\r\n * Asserts that the condition is true.\r\n *\r\n * @param condition  Condition to check\r\n * @param message    Message to display in the error\r\n * @ignore\r\n */\r\nexport function assert(condition, message = \"Assertion failed\") {\r\n    if (!condition) {\r\n        throw new Error(message);\r\n    }\r\n}\r\n/**\r\n * ============================================================================\r\n * QUICK CONVERSION\r\n * ============================================================================\r\n * @hidden\r\n */\r\n/**\r\n * Converts any value into a `number`.\r\n *\r\n * @param value  Source value\r\n * @return Number representation of value\r\n */\r\nexport function toNumber(value) {\r\n    if (value != null && !isNumber(value)) {\r\n        let converted = Number(value);\r\n        if (isNaN(converted) && isString(value) && value != \"\") {\r\n            return toNumber(value.replace(/[^0-9.\\-]+/g, ''));\r\n        }\r\n        return converted;\r\n    }\r\n    return value;\r\n}\r\n/**\r\n * Converts anything to Date object.\r\n *\r\n * @param value  A value of any type\r\n * @return Date object representing a value\r\n */\r\nexport function toDate(value) {\r\n    if (isDate(value)) {\r\n        // TODO maybe don't create a new Date ?\r\n        return new Date(value);\r\n    }\r\n    else if (isNumber(value)) {\r\n        return new Date(value);\r\n    }\r\n    else {\r\n        // Try converting to number (assuming timestamp)\r\n        let num = Number(value);\r\n        if (!isNumber(num)) {\r\n            return new Date(value);\r\n        }\r\n        else {\r\n            return new Date(num);\r\n        }\r\n    }\r\n}\r\n/**\r\n * Converts numeric value into string. Deals with large or small numbers that\r\n * would otherwise use exponents.\r\n *\r\n * @param value  Numeric value\r\n * @return Numeric value as string\r\n */\r\nexport function numberToString(value) {\r\n    // TODO handle Infinity and -Infinity\r\n    if (isNaN(value)) {\r\n        return \"NaN\";\r\n    }\r\n    if (value === Infinity) {\r\n        return \"Infinity\";\r\n    }\r\n    if (value === -Infinity) {\r\n        return \"-Infinity\";\r\n    }\r\n    // Negative 0\r\n    if ((value === 0) && (1 / value === -Infinity)) {\r\n        return \"-0\";\r\n    }\r\n    // Preserve negative and deal with absoute values\r\n    let negative = value < 0;\r\n    value = Math.abs(value);\r\n    // TODO test this\r\n    let parsed = /^([0-9]+)(?:\\.([0-9]+))?(?:e[\\+\\-]([0-9]+))?$/.exec(\"\" + value);\r\n    let digits = parsed[1];\r\n    let decimals = parsed[2] || \"\";\r\n    let res;\r\n    // Leave the nummber as it is if it does not use exponents\r\n    if (parsed[3] === undefined) {\r\n        res = (decimals === \"\" ? digits : digits + \".\" + decimals);\r\n    }\r\n    else {\r\n        let exponent = +parsed[3];\r\n        // Deal with decimals\r\n        if (value < 1) {\r\n            let zeros = exponent - 1;\r\n            res = \"0.\" + repeat(\"0\", zeros) + digits + decimals;\r\n            // Deal with integers\r\n        }\r\n        else {\r\n            let zeros = exponent - decimals.length;\r\n            if (zeros === 0) {\r\n                res = digits + decimals;\r\n            }\r\n            else if (zeros < 0) {\r\n                res = digits + decimals.slice(0, zeros) + \".\" + decimals.slice(zeros);\r\n            }\r\n            else {\r\n                res = digits + decimals + repeat(\"0\", zeros);\r\n            }\r\n        }\r\n    }\r\n    return negative ? \"-\" + res : res;\r\n}\r\n/**\r\n * Repeats a `string` number of times as set in `amount`.\r\n *\r\n * @ignore Exclude from docs\r\n * @todo Make this faster\r\n * @param string  Source string\r\n * @param amount  Number of times to repeat string\r\n * @return New string\r\n */\r\nexport function repeat(string, amount) {\r\n    return new Array(amount + 1).join(string);\r\n}\r\n/**\r\n * ============================================================================\r\n * TYPE CHECK\r\n * ============================================================================\r\n * @hidden\r\n */\r\n/**\r\n * Checks if parameter is `Date`.\r\n *\r\n * @param value  Input value\r\n * @return Is Date?\r\n */\r\nexport function isDate(value) {\r\n    return getType(value) === \"[object Date]\";\r\n}\r\n/**\r\n * Checks if parameter is `string`.\r\n *\r\n * @param value  Input value\r\n * @return Is string?\r\n */\r\nexport function isString(value) {\r\n    return typeof value === \"string\";\r\n}\r\n/**\r\n * Checks if parameter is `number`.\r\n *\r\n * @param value  Input value\r\n * @return Is number?\r\n */\r\nexport function isNumber(value) {\r\n    return typeof value === \"number\" && Number(value) == value;\r\n}\r\n/**\r\n * Checks if parameter is `object`.\r\n *\r\n * @param value  Input value\r\n * @return Is object?\r\n */\r\nexport function isObject(value) {\r\n    return typeof value === \"object\" && value !== null;\r\n}\r\n/**\r\n * Checks if parameter is `Array`.\r\n *\r\n * @param value  Input value\r\n * @return Is Array?\r\n */\r\nexport function isArray(value) {\r\n    return Array.isArray(value);\r\n}\r\n/**\r\n * ============================================================================\r\n * STATIC CONSTANTS\r\n * ============================================================================\r\n * @hidden\r\n */\r\n/**\r\n * @ignore Exclude from docs\r\n */\r\nexport const PLACEHOLDER = \"__§§§__\";\r\n/**\r\n * @ignore Exclude from docs\r\n */\r\nexport const PLACEHOLDER2 = \"__§§§§__\";\r\n//# sourceMappingURL=Type.js.map","/**\n * A collection of utility functions for various type checks and conversion\n * @hidden\n */\n\n/**\n * ============================================================================\n * IMPORTS\n * ============================================================================\n * @hidden\n */\n\n/**\n * ============================================================================\n * MISC\n * ============================================================================\n * @hidden\n */\n\ntype Cond<T, Keys extends keyof T> = Keys extends never\n\t? never\n\t: { [K in Keys]: T[K] };\n\ntype Never<T> = T extends undefined ? never : T;\n\n/**\n * Selects all the keys of T which have a value of U.\n */\nexport type SelectKeys<T, U> = Never<{ [K in keyof T]: T[K] extends U ? K : never }[keyof T]>;\n\n/**\n * Creates a new type which is the same as T except it only has the properties of type U.\n */\nexport type Select<T, U> = Cond<T, SelectKeys<T, U>>;\n\n\n/**\n * @todo Description\n * @ignore Exclude from docs\n */\nexport type Public<T> = { [P in keyof T]: T[P] };\n\n\n/**\n * `Keyof<T>` is the same as `keyof T` except it only accepts string keys, not numbers or symbols.\n */\nexport type Keyof<T> = Extract<keyof T, string>;\n\n\n\n/**\n * ============================================================================\n * TYPE CHECK\n * ============================================================================\n * @hidden\n */\n\n/**\n * Returns `true` if value is not a number (NaN).\n *\n * @param value Input value\n * @return Is NaN?\n */\nexport function isNaN(value: number): boolean {\n\treturn Number(value) !== value;\n}\n\n/**\n * Represents a type for all available JavaScript variable types.\n */\nexport type Type\n\t= \"[object Object]\"\n\t| \"[object Array]\"\n\t| \"[object String]\"\n\t| \"[object Number]\"\n\t| \"[object Boolean]\"\n\t| \"[object Date]\";\n\n/**\n * Returns a type of the value.\n *\n * @param value  Input value\n * @return Type of the value\n * @ignore\n */\nexport function getType<A>(value: A): Type {\n\treturn ({}).toString.call(value) as Type;\n}\n\n\n/**\n * Asserts that the condition is true.\n *\n * @param condition  Condition to check\n * @param message    Message to display in the error\n * @ignore\n */\nexport function assert(condition: boolean, message: string = \"Assertion failed\"): asserts condition {\n\tif (!condition) {\n\t\tthrow new Error(message);\n\t}\n}\n\n\n/**\n * ============================================================================\n * QUICK CONVERSION\n * ============================================================================\n * @hidden\n */\n\n\n/**\n * Converts any value into a `number`.\n *\n * @param value  Source value\n * @return Number representation of value\n */\nexport function toNumber(value: any): number {\n\tif (value != null && !isNumber(value)) {\n\t\tlet converted = Number(value);\n\t\tif (isNaN(converted) && isString(value) && value != \"\") {\n\t\t\treturn toNumber(value.replace(/[^0-9.\\-]+/g, ''));\n\t\t}\n\t\treturn converted;\n\t}\n\treturn value;\n}\n\n\n\n/**\n * Converts anything to Date object.\n *\n * @param value  A value of any type\n * @return Date object representing a value\n */\nexport function toDate(value: Date | number | string): Date {\n\tif (isDate(value)) {\n\t\t// TODO maybe don't create a new Date ?\n\t\treturn new Date(value);\n\t}\n\n\telse if (isNumber(value)) {\n\t\treturn new Date(value);\n\t}\n\n\telse {\n\t\t// Try converting to number (assuming timestamp)\n\t\tlet num = Number(value);\n\n\t\tif (!isNumber(num)) {\n\t\t\treturn new Date(value);\n\t\t}\n\t\telse {\n\t\t\treturn new Date(num);\n\t\t}\n\t}\n}\n\n/**\n * Converts numeric value into string. Deals with large or small numbers that\n * would otherwise use exponents.\n *\n * @param value  Numeric value\n * @return Numeric value as string\n */\nexport function numberToString(value: number): string {\n\t// TODO handle Infinity and -Infinity\n\tif (isNaN(value)) {\n\t\treturn \"NaN\";\n\t}\n\n\tif (value === Infinity) {\n\t\treturn \"Infinity\";\n\t}\n\n\tif (value === -Infinity) {\n\t\treturn \"-Infinity\";\n\t}\n\n\t// Negative 0\n\tif ((value === 0) && (1 / value === -Infinity)) {\n\t\treturn \"-0\";\n\t}\n\n\t// Preserve negative and deal with absoute values\n\tlet negative = value < 0;\n\n\tvalue = Math.abs(value);\n\n\t// TODO test this\n\tlet parsed = /^([0-9]+)(?:\\.([0-9]+))?(?:e[\\+\\-]([0-9]+))?$/.exec(\"\" + value)!;\n\tlet digits = parsed[1];\n\tlet decimals = parsed[2] || \"\";\n\n\tlet res: string;\n\n\t// Leave the nummber as it is if it does not use exponents\n\tif (parsed[3] === undefined) {\n\t\tres = (decimals === \"\" ? digits : digits + \".\" + decimals);\n\n\t} else {\n\t\tlet exponent = +parsed[3];\n\n\t\t// Deal with decimals\n\t\tif (value < 1) {\n\t\t\tlet zeros = exponent - 1;\n\n\t\t\tres = \"0.\" + repeat(\"0\", zeros) + digits + decimals;\n\n\t\t\t// Deal with integers\n\t\t} else {\n\t\t\tlet zeros = exponent - decimals.length;\n\n\t\t\tif (zeros === 0) {\n\t\t\t\tres = digits + decimals;\n\n\t\t\t} else if (zeros < 0) {\n\t\t\t\tres = digits + decimals.slice(0, zeros) + \".\" + decimals.slice(zeros);\n\n\t\t\t} else {\n\t\t\t\tres = digits + decimals + repeat(\"0\", zeros);\n\t\t\t}\n\t\t}\n\t}\n\n\treturn negative ? \"-\" + res : res;\n}\n\n/**\n * Repeats a `string` number of times as set in `amount`.\n *\n * @ignore Exclude from docs\n * @todo Make this faster\n * @param string  Source string\n * @param amount  Number of times to repeat string\n * @return New string\n */\nexport function repeat(string: string, amount: number): string {\n  return new Array(amount + 1).join(string);\n}\n\n\n/**\n * ============================================================================\n * VALUE PRESENCE CHECK\n * ============================================================================\n * @hidden\n */\n\n/**\n * Defines an optional value that can be of any type or `undefined`.\n */\nexport type Optional<A> = A | undefined;\n\n\n/**\n * ============================================================================\n * TYPE CHECK\n * ============================================================================\n * @hidden\n */\n\n/**\n * Checks if parameter is `Date`.\n *\n * @param value  Input value\n * @return Is Date?\n */\nexport function isDate(value: any): value is Date {\n\treturn getType(value) === \"[object Date]\";\n}\n\n/**\n * Checks if parameter is `string`.\n *\n * @param value  Input value\n * @return Is string?\n */\nexport function isString(value: any): value is string {\n\treturn typeof value === \"string\";\n}\n\n/**\n * Checks if parameter is `number`.\n *\n * @param value  Input value\n * @return Is number?\n */\nexport function isNumber(value: any): value is number {\n\treturn typeof value === \"number\" && Number(value) == value;\n}\n\n/**\n * Checks if parameter is `object`.\n *\n * @param value  Input value\n * @return Is object?\n */\nexport function isObject(value: any): value is object {\n\treturn typeof value === \"object\" && value !== null;\n}\n\n/**\n * Checks if parameter is `Array`.\n *\n * @param value  Input value\n * @return Is Array?\n */\nexport function isArray(value: any): value is Array<unknown> {\n\treturn Array.isArray(value);\n}\n\n\n/**\n * ============================================================================\n * STATIC CONSTANTS\n * ============================================================================\n * @hidden\n */\n\n\n/**\n * @ignore Exclude from docs\n */\nexport const PLACEHOLDER: string = \"__§§§__\";\n\n/**\n * @ignore Exclude from docs\n */\nexport const PLACEHOLDER2: string = \"__§§§§__\";\n","/**\r\n * ============================================================================\r\n * MAIN CLASS\r\n * ============================================================================\r\n * @hidden\r\n */\r\n/**\r\n * Represents a relative value (percent).\r\n *\r\n * The Percent object, can be instantiated using two ways:\r\n *\r\n * * Via `new Percent(X)`.\r\n * * Via `am5.percent(X)`.\r\n *\r\n * You can also use shortcut functions for `0%`, `50%`, and `100%`:\r\n * * `am5.p0`\r\n * * `am5.p50`\r\n * * `am5.p100`\r\n */\r\nexport class Percent {\r\n    /**\r\n     * Constructor.\r\n     *\r\n     * @param percent  Percent value\r\n     */\r\n    constructor(percent) {\r\n        /**\r\n         * Value in percent.\r\n         */\r\n        Object.defineProperty(this, \"_value\", {\r\n            enumerable: true,\r\n            configurable: true,\r\n            writable: true,\r\n            value: void 0\r\n        });\r\n        this._value = percent;\r\n    }\r\n    /**\r\n     * Relative value.\r\n     *\r\n     * E.g. 100% is 1, 50% is 0.5, etc.\r\n     *\r\n     * This is useful to apply transformations to other values. E.g.:\r\n     *\r\n     * ```TypeScript\r\n     * let value = 256;\r\n     * let percent = new am5.p50;\r\n     * console.log(value * percent.value); // outputs 128\r\n     * ```\r\n     * ```JavaScript\r\n     * var value = 256;\r\n     * var percent = new am5.p50;\r\n     * console.log(value * percent.value); // outputs 128\r\n     * ```\r\n     *\r\n     * Alternatively, you can use `am5.percent()` helper function:\r\n     *\r\n     * ```TypeScript\r\n     * let value = 256;\r\n     * let percent = am5.p50;\r\n     * console.log(value * percent.value); // outputs 128\r\n     * ```\r\n     * ```JavaScript\r\n     * var value = 256;\r\n     * var percent = am5.p50;\r\n     * console.log(value * percent.value); // outputs 128\r\n     * ```\r\n     *\r\n     * @readonly\r\n     * @return Relative value\r\n     */\r\n    get value() {\r\n        return this._value / 100;\r\n    }\r\n    /**\r\n     * Value in percent.\r\n     *\r\n     * @readonly\r\n     * @return Percent\r\n     */\r\n    get percent() {\r\n        return this._value;\r\n    }\r\n    toString() {\r\n        return \"\" + this._value + \"%\";\r\n    }\r\n    interpolate(min, max) {\r\n        return min + (this.value * (max - min));\r\n    }\r\n    static normalize(percent, min, max) {\r\n        if (percent instanceof Percent) {\r\n            return percent;\r\n        }\r\n        else {\r\n            if (min === max) {\r\n                return new Percent(0);\r\n            }\r\n            else {\r\n                return new Percent(Math.min(Math.max((percent - min) * (1 / (max - min)), 0), 1) * 100);\r\n            }\r\n        }\r\n    }\r\n}\r\n/**\r\n * Converts numeric percent value to a proper [[Percent]] object.\r\n *\r\n * ```TypeScript\r\n * pieSeries.set(\"radius\", am5.percent(80));\r\n * ```\r\n * ```JavaScript\r\n * pieSeries.set(\"radius\", am5.percent(80));\r\n * ```\r\n *\r\n * @param value  Percent\r\n * @return Percent object\r\n */\r\nexport function percent(value) {\r\n    return new Percent(value);\r\n}\r\n/**\r\n * A shortcut function to `am5.percent(0)`.\r\n */\r\nexport const p0 = percent(0);\r\n/**\r\n * A shortcut function to `am5.percent(100)`.\r\n */\r\nexport const p100 = percent(100);\r\n/**\r\n * A shortcut function to `am5.percent(50)`.\r\n */\r\nexport const p50 = percent(50);\r\n/**\r\n * Checks if value is a [[Percent]] object.\r\n *\r\n * @ignore Exclude from docs\r\n * @param value  Input value\r\n * @return Is percent?\r\n */\r\nexport function isPercent(value) {\r\n    return value instanceof Percent;\r\n}\r\n//# sourceMappingURL=Percent.js.map","/**\n * ============================================================================\n * MAIN CLASS\n * ============================================================================\n * @hidden\n */\n\n/**\n * Represents a relative value (percent).\n *\n * The Percent object, can be instantiated using two ways:\n *\n * * Via `new Percent(X)`.\n * * Via `am5.percent(X)`.\n *\n * You can also use shortcut functions for `0%`, `50%`, and `100%`:\n * * `am5.p0`\n * * `am5.p50`\n * * `am5.p100`\n */\nexport class Percent {\n\n\t/**\n\t * Value in percent.\n\t */\n\tprotected _value: number;\n\n\t/**\n\t * Constructor.\n\t *\n\t * @param percent  Percent value\n\t */\n\tconstructor(percent: number) {\n\t\tthis._value = percent;\n\t}\n\n\t/**\n\t * Relative value.\n\t *\n\t * E.g. 100% is 1, 50% is 0.5, etc.\n\t *\n\t * This is useful to apply transformations to other values. E.g.:\n\t *\n\t * ```TypeScript\n\t * let value = 256;\n\t * let percent = new am5.p50;\n\t * console.log(value * percent.value); // outputs 128\n\t * ```\n\t * ```JavaScript\n\t * var value = 256;\n\t * var percent = new am5.p50;\n\t * console.log(value * percent.value); // outputs 128\n\t * ```\n\t *\n\t * Alternatively, you can use `am5.percent()` helper function:\n\t *\n\t * ```TypeScript\n\t * let value = 256;\n\t * let percent = am5.p50;\n\t * console.log(value * percent.value); // outputs 128\n\t * ```\n\t * ```JavaScript\n\t * var value = 256;\n\t * var percent = am5.p50;\n\t * console.log(value * percent.value); // outputs 128\n\t * ```\n\t *\n\t * @readonly\n\t * @return Relative value\n\t */\n\tpublic get value(): number {\n\t\treturn this._value / 100;\n\t}\n\n\t/**\n\t * Value in percent.\n\t *\n\t * @readonly\n\t * @return Percent\n\t */\n\tpublic get percent(): number {\n\t\treturn this._value;\n\t}\n\n\tpublic toString(): string {\n\t\treturn \"\" + this._value + \"%\";\n\t}\n\n\tpublic interpolate(min: number, max: number): number {\n\t\treturn min + (this.value * (max - min));\n\t}\n\n\tstatic normalize(percent: Percent | number, min: number, max: number): Percent {\n\t\tif (percent instanceof Percent) {\n\t\t\treturn percent;\n\n\t\t} else {\n\t\t\tif (min === max) {\n\t\t\t\treturn new Percent(0);\n\n\t\t\t} else {\n\t\t\t\treturn new Percent(Math.min(Math.max((percent - min) * (1 / (max - min)), 0), 1) * 100);\n\t\t\t}\n\t\t}\n\t}\n\n\t/*public toNumber(): number {\n\t\treturn this.percent;\n\t}*/\n\n}\n\n\n/**\n * Converts numeric percent value to a proper [[Percent]] object.\n *\n * ```TypeScript\n * pieSeries.set(\"radius\", am5.percent(80));\n * ```\n * ```JavaScript\n * pieSeries.set(\"radius\", am5.percent(80));\n * ```\n *\n * @param value  Percent\n * @return Percent object\n */\nexport function percent(value: number): Percent {\n\treturn new Percent(value);\n}\n\n/**\n * A shortcut function to `am5.percent(0)`.\n */\nexport const p0 = percent(0);\n\n/**\n * A shortcut function to `am5.percent(100)`.\n */\nexport const p100 = percent(100);\n\n/**\n * A shortcut function to `am5.percent(50)`.\n */\nexport const p50 = percent(50);\n\n\n/**\n * Checks if value is a [[Percent]] object.\n *\n * @ignore Exclude from docs\n * @param value  Input value\n * @return Is percent?\n */\nexport function isPercent(value: any): boolean {\n\treturn value instanceof Percent;\n}\n","import { __awaiter } from \"tslib\";\r\nimport { Entity } from \"../util/Entity\";\r\nimport { Template } from \"../util/Template\";\r\nimport { Percent } from \"../util/Percent\";\r\nimport { EventDispatcher } from \"../util/EventDispatcher\";\r\nimport { MultiDisposer, CounterDisposer } from \"../util/Disposer\";\r\nimport { waitForAnimations } from \"../util/Animation\";\r\nimport * as $utils from \"../util/Utils\";\r\nimport * as $array from \"../util/Array\";\r\nimport * as $type from \"../util/Type\";\r\nimport * as $object from \"../util/Object\";\r\nimport * as $math from \"../util/Math\";\r\n//import { populateString } from \"../util/PopulateString\";\r\n/**\r\n * An [[EventDispatcher]] for [[Sprite]].\r\n *\r\n * @see {@link https://www.amcharts.com/docs/v5/concepts/events/} for more info\r\n */\r\nclass SpriteEventDispatcher extends EventDispatcher {\r\n    constructor(sprite) {\r\n        super();\r\n        Object.defineProperty(this, \"_sprite\", {\r\n            enumerable: true,\r\n            configurable: true,\r\n            writable: true,\r\n            value: void 0\r\n        });\r\n        Object.defineProperty(this, \"_rendererDisposers\", {\r\n            enumerable: true,\r\n            configurable: true,\r\n            writable: true,\r\n            value: {}\r\n        });\r\n        Object.defineProperty(this, \"_dispatchParents\", {\r\n            enumerable: true,\r\n            configurable: true,\r\n            writable: true,\r\n            value: true\r\n        });\r\n        this._sprite = sprite;\r\n    }\r\n    _makePointerEvent(key, event) {\r\n        return {\r\n            type: key,\r\n            originalEvent: event.event,\r\n            point: event.point,\r\n            simulated: event.simulated,\r\n            native: event.native,\r\n            target: this._sprite\r\n        };\r\n    }\r\n    _onRenderer(key, dispatch) {\r\n        // TODO: is this OK? it'd be good not to require to set this on each individual element\r\n        this._sprite.set(\"interactive\", true);\r\n        this._sprite._display.interactive = true;\r\n        let events = this._rendererDisposers[key];\r\n        if (events === undefined) {\r\n            const disposer = this._sprite._display.on(key, (e) => {\r\n                dispatch.call(this, e);\r\n            });\r\n            events = this._rendererDisposers[key] = new CounterDisposer(() => {\r\n                delete this._rendererDisposers[key];\r\n                disposer.dispose();\r\n            });\r\n        }\r\n        return events.increment();\r\n    }\r\n    _on(once, type, callback, context, shouldClone, dispatch) {\r\n        const info = super._on(once, type, callback, context, shouldClone, dispatch);\r\n        const rendererEvent = SpriteEventDispatcher.RENDERER_EVENTS[type];\r\n        if (rendererEvent !== undefined) {\r\n            info.disposer = new MultiDisposer([\r\n                info.disposer,\r\n                this._onRenderer(type, rendererEvent),\r\n            ]);\r\n        }\r\n        return info;\r\n    }\r\n    /**\r\n     * Will stop any bubbling up of the event to element's parents.\r\n     *\r\n     * Should be called in an event handler, e.g.:\r\n     *\r\n     * ```TypeScript\r\n     * element.events.on(\"pointerdown\", function(ev) {\r\n     *   // Do something here and prevent from \"pointerdown\" bubbling up\r\n     *   // ...\r\n     *   ev.target.events.stopParentDispatch();\r\n     * });\r\n     * ```\r\n     * ```JavaScript\r\n     * element.events.on(\"pointerdown\", function(ev) {\r\n     *   // Do something here and prevent from \"pointerdown\" bubbling up\r\n     *   // ...\r\n     *   ev.target.events.stopParentDispatch();\r\n     * });\r\n     * ```\r\n     */\r\n    stopParentDispatch() {\r\n        this._dispatchParents = false;\r\n    }\r\n    /**\r\n     * @ignore\r\n     */\r\n    dispatchParents(type, event) {\r\n        const old = this._dispatchParents;\r\n        this._dispatchParents = true;\r\n        try {\r\n            this.dispatch(type, event);\r\n            if (this._dispatchParents && this._sprite.parent) {\r\n                this._sprite.parent.events.dispatchParents(type, event);\r\n            }\r\n        }\r\n        finally {\r\n            this._dispatchParents = old;\r\n        }\r\n    }\r\n}\r\nObject.defineProperty(SpriteEventDispatcher, \"RENDERER_EVENTS\", {\r\n    enumerable: true,\r\n    configurable: true,\r\n    writable: true,\r\n    value: {\r\n        \"click\": function (event) {\r\n            if (this.isEnabled(\"click\") && !this._sprite.isDragging() && this._sprite._hasDown() && !this._sprite._hasMoved(this._makePointerEvent(\"click\", event))) {\r\n                this.dispatch(\"click\", this._makePointerEvent(\"click\", event));\r\n            }\r\n        },\r\n        \"rightclick\": function (event) {\r\n            if (this.isEnabled(\"rightclick\")) {\r\n                this.dispatch(\"rightclick\", this._makePointerEvent(\"rightclick\", event));\r\n            }\r\n        },\r\n        \"middleclick\": function (event) {\r\n            if (this.isEnabled(\"middleclick\")) {\r\n                this.dispatch(\"middleclick\", this._makePointerEvent(\"middleclick\", event));\r\n            }\r\n        },\r\n        \"dblclick\": function (event) {\r\n            this.dispatchParents(\"dblclick\", this._makePointerEvent(\"dblclick\", event));\r\n        },\r\n        \"pointerover\": function (event) {\r\n            const sprite = this._sprite;\r\n            let dispatch = true;\r\n            if (sprite.getPrivate(\"trustBounds\")) {\r\n                sprite._getBounds();\r\n                const bounds = sprite.globalBounds();\r\n                if (sprite.isType(\"Graphics\")) {\r\n                    const strokeWidth = sprite.get(\"strokeWidth\", 1) / 2;\r\n                    if (strokeWidth >= 1) {\r\n                        bounds.left -= strokeWidth;\r\n                        bounds.right += strokeWidth;\r\n                        bounds.top -= strokeWidth;\r\n                        bounds.bottom += strokeWidth;\r\n                    }\r\n                }\r\n                if (!$math.inBounds(event.point, bounds)) {\r\n                    dispatch = false;\r\n                    sprite._root._renderer.removeHovering(sprite._display);\r\n                }\r\n            }\r\n            if (dispatch && this.isEnabled(\"pointerover\")) {\r\n                this.dispatch(\"pointerover\", this._makePointerEvent(\"pointerover\", event));\r\n            }\r\n        },\r\n        \"pointerout\": function (event) {\r\n            if (this.isEnabled(\"pointerout\")) {\r\n                this.dispatch(\"pointerout\", this._makePointerEvent(\"pointerout\", event));\r\n            }\r\n        },\r\n        \"pointerdown\": function (event) {\r\n            this.dispatchParents(\"pointerdown\", this._makePointerEvent(\"pointerdown\", event));\r\n        },\r\n        \"pointerup\": function (event) {\r\n            if (this.isEnabled(\"pointerup\")) {\r\n                this.dispatch(\"pointerup\", this._makePointerEvent(\"pointerup\", event));\r\n            }\r\n        },\r\n        \"globalpointerup\": function (event) {\r\n            if (this.isEnabled(\"globalpointerup\")) {\r\n                this.dispatch(\"globalpointerup\", this._makePointerEvent(\"globalpointerup\", event));\r\n            }\r\n        },\r\n        \"globalpointermove\": function (event) {\r\n            if (this.isEnabled(\"globalpointermove\")) {\r\n                this.dispatch(\"globalpointermove\", this._makePointerEvent(\"globalpointermove\", event));\r\n            }\r\n        },\r\n        \"wheel\": function (event) {\r\n            this.dispatchParents(\"wheel\", {\r\n                type: \"wheel\",\r\n                target: this._sprite,\r\n                originalEvent: event.event,\r\n                point: event.point,\r\n            });\r\n        },\r\n    }\r\n});\r\n/**\r\n * A base class for all visual elements.\r\n *\r\n * @important\r\n */\r\nexport class Sprite extends Entity {\r\n    constructor() {\r\n        super(...arguments);\r\n        Object.defineProperty(this, \"_adjustedLocalBounds\", {\r\n            enumerable: true,\r\n            configurable: true,\r\n            writable: true,\r\n            value: { left: 0, right: 0, top: 0, bottom: 0 }\r\n        });\r\n        Object.defineProperty(this, \"_localBounds\", {\r\n            enumerable: true,\r\n            configurable: true,\r\n            writable: true,\r\n            value: { left: 0, right: 0, top: 0, bottom: 0 }\r\n        });\r\n        Object.defineProperty(this, \"_parent\", {\r\n            enumerable: true,\r\n            configurable: true,\r\n            writable: true,\r\n            value: void 0\r\n        });\r\n        Object.defineProperty(this, \"_dataItem\", {\r\n            enumerable: true,\r\n            configurable: true,\r\n            writable: true,\r\n            value: void 0\r\n        });\r\n        Object.defineProperty(this, \"_templateField\", {\r\n            enumerable: true,\r\n            configurable: true,\r\n            writable: true,\r\n            value: void 0\r\n        });\r\n        Object.defineProperty(this, \"_sizeDirty\", {\r\n            enumerable: true,\r\n            configurable: true,\r\n            writable: true,\r\n            value: false\r\n        });\r\n        // Will be true only when dragging\r\n        Object.defineProperty(this, \"_isDragging\", {\r\n            enumerable: true,\r\n            configurable: true,\r\n            writable: true,\r\n            value: false\r\n        });\r\n        // The event when the dragging starts\r\n        Object.defineProperty(this, \"_dragEvent\", {\r\n            enumerable: true,\r\n            configurable: true,\r\n            writable: true,\r\n            value: void 0\r\n        });\r\n        // The position when dragging starts\r\n        Object.defineProperty(this, \"_dragPoint\", {\r\n            enumerable: true,\r\n            configurable: true,\r\n            writable: true,\r\n            value: void 0\r\n        });\r\n        Object.defineProperty(this, \"_isHidden\", {\r\n            enumerable: true,\r\n            configurable: true,\r\n            writable: true,\r\n            value: false\r\n        });\r\n        Object.defineProperty(this, \"_isShowing\", {\r\n            enumerable: true,\r\n            configurable: true,\r\n            writable: true,\r\n            value: false\r\n        });\r\n        Object.defineProperty(this, \"_isHiding\", {\r\n            enumerable: true,\r\n            configurable: true,\r\n            writable: true,\r\n            value: false\r\n        });\r\n        Object.defineProperty(this, \"_isDown\", {\r\n            enumerable: true,\r\n            configurable: true,\r\n            writable: true,\r\n            value: false\r\n        });\r\n        Object.defineProperty(this, \"_downPoint\", {\r\n            enumerable: true,\r\n            configurable: true,\r\n            writable: true,\r\n            value: void 0\r\n        });\r\n        Object.defineProperty(this, \"_downPoints\", {\r\n            enumerable: true,\r\n            configurable: true,\r\n            writable: true,\r\n            value: {}\r\n        });\r\n        Object.defineProperty(this, \"_toggleDp\", {\r\n            enumerable: true,\r\n            configurable: true,\r\n            writable: true,\r\n            value: void 0\r\n        });\r\n        Object.defineProperty(this, \"_dragDp\", {\r\n            enumerable: true,\r\n            configurable: true,\r\n            writable: true,\r\n            value: void 0\r\n        });\r\n        Object.defineProperty(this, \"_tooltipDp\", {\r\n            enumerable: true,\r\n            configurable: true,\r\n            writable: true,\r\n            value: void 0\r\n        });\r\n        Object.defineProperty(this, \"_hoverDp\", {\r\n            enumerable: true,\r\n            configurable: true,\r\n            writable: true,\r\n            value: void 0\r\n        });\r\n        Object.defineProperty(this, \"_focusDp\", {\r\n            enumerable: true,\r\n            configurable: true,\r\n            writable: true,\r\n            value: void 0\r\n        });\r\n        Object.defineProperty(this, \"_tooltipMoveDp\", {\r\n            enumerable: true,\r\n            configurable: true,\r\n            writable: true,\r\n            value: void 0\r\n        });\r\n        Object.defineProperty(this, \"_tooltipPointerDp\", {\r\n            enumerable: true,\r\n            configurable: true,\r\n            writable: true,\r\n            value: void 0\r\n        });\r\n        Object.defineProperty(this, \"_statesHandled\", {\r\n            enumerable: true,\r\n            configurable: true,\r\n            writable: true,\r\n            value: false\r\n        });\r\n    }\r\n    _afterNew() {\r\n        this.setPrivateRaw(\"visible\", true);\r\n        super._afterNew();\r\n    }\r\n    /**\r\n     * Marks some setting as dirty. Could be used to trigger adapter.\r\n     * @param key\r\n     */\r\n    markDirtyKey(key) {\r\n        this._markDirtyKey(key);\r\n    }\r\n    _markDirtyKey(key) {\r\n        super._markDirtyKey(key);\r\n        if (key == \"x\" || key == \"y\" || key == \"dx\" || key == \"dy\") {\r\n            this.markDirtyBounds();\r\n            this._addPercentagePositionChildren();\r\n            this.markDirtyPosition();\r\n        }\r\n    }\r\n    _markDirtyPrivateKey(key) {\r\n        super._markDirtyPrivateKey(key);\r\n        if (key == \"x\" || key == \"y\") {\r\n            this.markDirtyPosition();\r\n        }\r\n    }\r\n    _removeTemplateField() {\r\n        if (this._templateField) {\r\n            this._templateField._removeObjectTemplate(this);\r\n        }\r\n    }\r\n    _createEvents() {\r\n        return new SpriteEventDispatcher(this);\r\n    }\r\n    _processTemplateField() {\r\n        let template;\r\n        const field = this.get(\"templateField\");\r\n        if (field) {\r\n            const dataItem = this.dataItem;\r\n            if (dataItem) {\r\n                const context = dataItem.dataContext;\r\n                if (context) {\r\n                    template = context[field];\r\n                    if (!(template instanceof Template) && template) {\r\n                        template = Template.new(template);\r\n                    }\r\n                }\r\n            }\r\n        }\r\n        if (this._templateField !== template) {\r\n            this._removeTemplateField();\r\n            this._templateField = template;\r\n            if (template) {\r\n                template._setObjectTemplate(this);\r\n            }\r\n            this._applyTemplates();\r\n        }\r\n    }\r\n    // TODO change this to run before the element is added to the parent, so that way\r\n    //      it doesn't need to apply the themes twice\r\n    _setDataItem(dataItem) {\r\n        const oldDataItem = this._dataItem;\r\n        this._dataItem = dataItem;\r\n        this._processTemplateField();\r\n        const eventType = \"dataitemchanged\";\r\n        if (dataItem != oldDataItem) {\r\n            if (this.events.isEnabled(eventType)) {\r\n                this.events.dispatch(eventType, {\r\n                    type: eventType,\r\n                    target: this,\r\n                    oldDataItem: oldDataItem,\r\n                    newDataItem: dataItem\r\n                });\r\n            }\r\n        }\r\n    }\r\n    /**\r\n     * A [[DataItem]] used for this element.\r\n     *\r\n     * NOTE: data item is being assigned automatically in most cases where it\r\n     * matters. Use this accessor to set data item only if you know what you're\r\n     * doing.\r\n     *\r\n     * @param  value  Data item\r\n     */\r\n    set dataItem(value) {\r\n        this._setDataItem(value);\r\n    }\r\n    /**\r\n     * @return DataItem\r\n     */\r\n    get dataItem() {\r\n        if (this._dataItem) {\r\n            return this._dataItem;\r\n        }\r\n        else {\r\n            let parent = this._parent;\r\n            while (parent) {\r\n                if (parent._dataItem) {\r\n                    return parent._dataItem;\r\n                }\r\n                else {\r\n                    parent = parent._parent;\r\n                }\r\n            }\r\n        }\r\n    }\r\n    _addPercentageSizeChildren() {\r\n        let parent = this.parent;\r\n        if (parent) {\r\n            if (this.get(\"width\") instanceof Percent || this.get(\"height\") instanceof Percent) {\r\n                $array.pushOne(parent._percentageSizeChildren, this);\r\n            }\r\n            else {\r\n                $array.removeFirst(parent._percentageSizeChildren, this);\r\n            }\r\n        }\r\n    }\r\n    _addPercentagePositionChildren() {\r\n        let parent = this.parent;\r\n        if (parent) {\r\n            if (this.get(\"x\") instanceof Percent || this.get(\"y\") instanceof Percent) {\r\n                $array.pushOne(parent._percentagePositionChildren, this);\r\n            }\r\n            else {\r\n                $array.removeFirst(parent._percentagePositionChildren, this);\r\n            }\r\n        }\r\n    }\r\n    /**\r\n     * @ignore\r\n     */\r\n    markDirtyPosition() {\r\n        this._root._addDirtyPosition(this);\r\n    }\r\n    updatePivotPoint() {\r\n        const bounds = this._localBounds;\r\n        if (bounds) {\r\n            const centerX = this.get(\"centerX\");\r\n            if (centerX != null) {\r\n                this._display.pivot.x = bounds.left + $utils.relativeToValue(centerX, bounds.right - bounds.left);\r\n            }\r\n            const centerY = this.get(\"centerY\");\r\n            if (centerY != null) {\r\n                this._display.pivot.y = bounds.top + $utils.relativeToValue(centerY, bounds.bottom - bounds.top);\r\n            }\r\n        }\r\n    }\r\n    _beforeChanged() {\r\n        super._beforeChanged();\r\n        // handling states in beforeChanged, otherwise states is not applied without animated theme\r\n        this._handleStates();\r\n        if (this.isDirty(\"tooltip\")) {\r\n            const previous = this._prevSettings.tooltip;\r\n            if (previous) {\r\n                previous.dispose();\r\n            }\r\n        }\r\n        if (this.isDirty(\"layer\") || this.isDirty(\"layerMargin\")) {\r\n            this._display.setLayer(this.get(\"layer\"), this.get(\"layerMargin\"));\r\n            this.markDirtyLayer();\r\n        }\r\n        if (this.isDirty(\"tooltipPosition\")) {\r\n            const tooltipMoveDp = this._tooltipMoveDp;\r\n            if (tooltipMoveDp) {\r\n                tooltipMoveDp.dispose();\r\n                this._tooltipMoveDp = undefined;\r\n            }\r\n            const tooltipPointerDp = this._tooltipPointerDp;\r\n            if (tooltipPointerDp) {\r\n                tooltipPointerDp.dispose();\r\n                this._tooltipPointerDp = undefined;\r\n            }\r\n            if (this.get(\"tooltipPosition\") == \"pointer\") {\r\n                if (this.isHover()) {\r\n                    this._tooltipMoveDp = this.events.on(\"globalpointermove\", (e) => {\r\n                        this.showTooltip(e.point);\r\n                    });\r\n                }\r\n                this._tooltipPointerDp = new MultiDisposer([\r\n                    this.events.on(\"pointerover\", () => {\r\n                        this._tooltipMoveDp = this.events.on(\"globalpointermove\", (e) => {\r\n                            this.showTooltip(e.point);\r\n                        });\r\n                    }),\r\n                    this.events.on(\"pointerout\", () => {\r\n                        const tooltipMoveDp = this._tooltipMoveDp;\r\n                        if (tooltipMoveDp) {\r\n                            tooltipMoveDp.dispose();\r\n                            this._tooltipMoveDp = undefined;\r\n                        }\r\n                    })\r\n                ]);\r\n            }\r\n        }\r\n    }\r\n    _handleStates() {\r\n        if (!this._statesHandled) {\r\n            if (this.isDirty(\"active\")) {\r\n                if (this.get(\"active\")) {\r\n                    this.states.applyAnimate(\"active\");\r\n                    this.set(\"ariaChecked\", true);\r\n                }\r\n                else {\r\n                    if (!this.isHidden()) {\r\n                        this.states.applyAnimate(\"default\");\r\n                    }\r\n                    this.set(\"ariaChecked\", false);\r\n                }\r\n                this.markDirtyAccessibility();\r\n            }\r\n            if (this.isDirty(\"disabled\")) {\r\n                if (this.get(\"disabled\")) {\r\n                    this.states.applyAnimate(\"disabled\");\r\n                    this.set(\"ariaChecked\", false);\r\n                }\r\n                else {\r\n                    if (!this.isHidden()) {\r\n                        this.states.applyAnimate(\"default\");\r\n                    }\r\n                    this.set(\"ariaChecked\", true);\r\n                }\r\n                this.markDirtyAccessibility();\r\n            }\r\n            this._statesHandled = true;\r\n        }\r\n    }\r\n    _changed() {\r\n        super._changed();\r\n        const display = this._display;\r\n        const events = this.events;\r\n        if (this.isDirty(\"draggable\")) {\r\n            const draggable = this.get(\"draggable\");\r\n            if (draggable) {\r\n                this.set(\"interactive\", true);\r\n                this._dragDp = new MultiDisposer([\r\n                    events.on(\"pointerdown\", (ev) => {\r\n                        this.dragStart(ev);\r\n                    }),\r\n                    events.on(\"globalpointermove\", (ev) => {\r\n                        this.dragMove(ev);\r\n                    }),\r\n                    events.on(\"globalpointerup\", (ev) => {\r\n                        this.dragStop(ev);\r\n                    })\r\n                ]);\r\n            }\r\n            else {\r\n                if (this._dragDp) {\r\n                    this._dragDp.dispose();\r\n                    this._dragDp = undefined;\r\n                }\r\n            }\r\n            display.cancelTouch = draggable ? true : false;\r\n        }\r\n        if (this.isDirty(\"tooltipText\") || this.isDirty(\"tooltipHTML\") || this.isDirty(\"showTooltipOn\")) {\r\n            const tooltipText = this.get(\"tooltipText\");\r\n            const tooltipHTML = this.get(\"tooltipHTML\");\r\n            const showTooltipOn = this.get(\"showTooltipOn\", \"hover\");\r\n            if (this._tooltipDp) {\r\n                this._tooltipDp.dispose();\r\n                this._tooltipDp = undefined;\r\n            }\r\n            if (tooltipText || tooltipHTML) {\r\n                if (showTooltipOn == \"click\") {\r\n                    this._tooltipDp = new MultiDisposer([\r\n                        events.on(\"click\", () => {\r\n                            this.setTimeout(() => {\r\n                                const tooltip = this.getTooltip();\r\n                                if (tooltip && !tooltip.isHidden() && tooltip.get(\"tooltipTarget\") === this) {\r\n                                    this.hideTooltip();\r\n                                }\r\n                                else {\r\n                                    this.showTooltip();\r\n                                }\r\n                            }, 10);\r\n                        }),\r\n                        $utils.addEventListener(document, \"click\", (_ev) => {\r\n                            this.hideTooltip();\r\n                        })\r\n                    ]);\r\n                    this._disposers.push(this._tooltipDp);\r\n                }\r\n                else if (showTooltipOn == \"always\") {\r\n                    // nothing\r\n                }\r\n                else {\r\n                    this._tooltipDp = new MultiDisposer([\r\n                        events.on(\"pointerover\", () => {\r\n                            this.showTooltip();\r\n                        }),\r\n                        events.on(\"pointerout\", () => {\r\n                            this.hideTooltip();\r\n                        })\r\n                    ]);\r\n                    this._disposers.push(this._tooltipDp);\r\n                }\r\n            }\r\n        }\r\n        if (this.isDirty(\"toggleKey\")) {\r\n            let toggleKey = this.get(\"toggleKey\");\r\n            if (toggleKey && toggleKey != \"none\") {\r\n                this._toggleDp = events.on(\"click\", () => {\r\n                    if (!this._isDragging) {\r\n                        this.set(toggleKey, !this.get(toggleKey));\r\n                    }\r\n                });\r\n            }\r\n            else {\r\n                if (this._toggleDp) {\r\n                    this._toggleDp.dispose();\r\n                    this._toggleDp = undefined;\r\n                }\r\n            }\r\n        }\r\n        if (this.isDirty(\"opacity\")) {\r\n            display.alpha = Math.max(0, this.get(\"opacity\", 1));\r\n            if (this.get(\"focusable\")) {\r\n                this.markDirtyAccessibility();\r\n            }\r\n        }\r\n        if (this.isDirty(\"rotation\")) {\r\n            this.markDirtyBounds();\r\n            display.angle = this.get(\"rotation\", 0);\r\n        }\r\n        if (this.isDirty(\"scale\")) {\r\n            this.markDirtyBounds();\r\n            display.scale = this.get(\"scale\", 0);\r\n        }\r\n        if (this.isDirty(\"centerX\") || this.isDirty(\"centerY\")) {\r\n            this.markDirtyBounds();\r\n            this.updatePivotPoint();\r\n        }\r\n        if (this.isDirty(\"visible\") || this.isPrivateDirty(\"visible\") || this.isDirty(\"forceHidden\")) {\r\n            if (!this.get(\"visible\") || !this.getPrivate(\"visible\") || this.get(\"forceHidden\")) {\r\n                display.visible = false;\r\n                this.hideTooltip();\r\n            }\r\n            else {\r\n                display.visible = true;\r\n            }\r\n            this.markDirtyBounds();\r\n            if (this.get(\"focusable\")) {\r\n                this.markDirtyAccessibility();\r\n            }\r\n        }\r\n        if (this.isDirty(\"width\") || this.isDirty(\"height\")) {\r\n            this.markDirtyBounds();\r\n            this._addPercentageSizeChildren();\r\n            const parent = this.parent;\r\n            if (parent) {\r\n                if ((this.isDirty(\"width\") && this.get(\"width\") instanceof Percent) || (this.isDirty(\"height\") && this.get(\"height\") instanceof Percent)) {\r\n                    parent.markDirty();\r\n                    parent._prevWidth = 0;\r\n                }\r\n            }\r\n            this._sizeDirty = true;\r\n        }\r\n        if (this.isDirty(\"maxWidth\") || this.isDirty(\"maxHeight\") || this.isPrivateDirty(\"width\") || this.isPrivateDirty(\"height\") || this.isDirty(\"minWidth\") || this.isDirty(\"minHeight\") || this.isPrivateDirty(\"maxWidth\") || this.isPrivateDirty(\"maxHeight\") || this.isPrivateDirty(\"minWidth\") || this.isPrivateDirty(\"minHeight\") || this.isDirty(\"marginLeft\") || this.isDirty(\"marginTop\") || this.isDirty(\"marginRight\") || this.isDirty(\"marginBottom\")) {\r\n            this.markDirtyBounds();\r\n            this._sizeDirty = true;\r\n        }\r\n        if (this._sizeDirty) {\r\n            this._updateSize();\r\n        }\r\n        if (this.isDirty(\"wheelable\")) {\r\n            const wheelable = this.get(\"wheelable\");\r\n            if (wheelable) {\r\n                this.set(\"interactive\", true);\r\n            }\r\n            display.wheelable = wheelable ? true : false;\r\n        }\r\n        // Accessibility\r\n        if (this.isDirty(\"tabindexOrder\") || this.isDirty(\"focusableGroup\")) {\r\n            if (this.get(\"focusable\")) {\r\n                this._root._registerTabindexOrder(this);\r\n            }\r\n            else {\r\n                this._root._unregisterTabindexOrder(this);\r\n            }\r\n        }\r\n        if (this.isDirty(\"filter\")) {\r\n            //this.markDirtyBounds();\r\n            display.filter = this.get(\"filter\");\r\n        }\r\n        let filter = this.get(\"filter\", \"\");\r\n        if (this.isDirty(\"blur\")) {\r\n            const blur = this.get(\"blur\", 0);\r\n            if (blur != 0) {\r\n                filter += \" blur(\" + blur + \"px)\";\r\n            }\r\n        }\r\n        if (this.isDirty(\"saturate\")) {\r\n            const saturate = this.get(\"saturate\", 1);\r\n            if (saturate != 1) {\r\n                filter += \" saturate(\" + saturate + \")\";\r\n            }\r\n        }\r\n        if (this.isDirty(\"brightness\")) {\r\n            const brightness = this.get(\"brightness\", 1);\r\n            if (brightness != 1) {\r\n                filter += \" brightness(\" + brightness + \")\";\r\n            }\r\n        }\r\n        if (this.isDirty(\"contrast\")) {\r\n            const contrast = this.get(\"contrast\", 1);\r\n            if (contrast != 1) {\r\n                filter += \" contrast(\" + contrast + \")\";\r\n            }\r\n        }\r\n        if (this.isDirty(\"sepia\")) {\r\n            const sepia = this.get(\"sepia\", 0);\r\n            if (sepia != 0) {\r\n                filter += \" sepia(\" + sepia + \")\";\r\n            }\r\n        }\r\n        if (this.isDirty(\"hue\")) {\r\n            const hue = this.get(\"hue\", 0);\r\n            if (hue != 0) {\r\n                filter += \" hue-rotate(\" + hue + \"deg)\";\r\n            }\r\n        }\r\n        if (this.isDirty(\"invert\")) {\r\n            const invert = this.get(\"invert\", 0);\r\n            if (invert != 0) {\r\n                filter += \" invert(\" + invert + \")\";\r\n            }\r\n        }\r\n        if (filter) {\r\n            display.filter = filter;\r\n        }\r\n        if (this.isDirty(\"cursorOverStyle\")) {\r\n            display.cursorOverStyle = this.get(\"cursorOverStyle\");\r\n        }\r\n        if (this.isDirty(\"hoverOnFocus\")) {\r\n            if (this.get(\"hoverOnFocus\")) {\r\n                this._focusDp = new MultiDisposer([\r\n                    events.on(\"focus\", () => {\r\n                        // TODO: proper hover, not just tooltip\r\n                        this.showTooltip();\r\n                    }),\r\n                    events.on(\"blur\", () => {\r\n                        // TODO: proper hover, not just tooltip\r\n                        this.hideTooltip();\r\n                    })\r\n                ]);\r\n            }\r\n            else {\r\n                if (this._focusDp) {\r\n                    this._focusDp.dispose();\r\n                    this._focusDp = undefined;\r\n                }\r\n            }\r\n        }\r\n        if (this.isDirty(\"focusable\")) {\r\n            if (this.get(\"focusable\")) {\r\n                this._root._registerTabindexOrder(this);\r\n            }\r\n            else {\r\n                this._root._unregisterTabindexOrder(this);\r\n            }\r\n            this.markDirtyAccessibility();\r\n            this._disposers.push(events.on(\"blur\", () => {\r\n                this.setPrivateRaw(\"touchHovering\", false);\r\n            }));\r\n        }\r\n        if (this.isPrivateDirty(\"focusable\")) {\r\n            this.markDirtyAccessibility();\r\n        }\r\n        if (this.isDirty(\"role\") || this.isDirty(\"ariaLive\") || this.isDirty(\"ariaChecked\") || this.isDirty(\"ariaHidden\") || this.isDirty(\"ariaOrientation\") || this.isDirty(\"ariaValueNow\") || this.isDirty(\"ariaValueMin\") || this.isDirty(\"ariaValueMax\") || this.isDirty(\"ariaValueText\") || this.isDirty(\"ariaLabel\") || this.isDirty(\"ariaControls\")) {\r\n            // display.accessibility.ariaLabel = populateString(this, this.get(\"ariaLabel\", \"\"));\r\n            // @todo make sure ariaLabel gets populated in Root\r\n            this.markDirtyAccessibility();\r\n        }\r\n        if (this.isDirty(\"exportable\")) {\r\n            display.exportable = this.get(\"exportable\");\r\n        }\r\n        if (this.isDirty(\"interactive\")) {\r\n            const events = this.events;\r\n            if (this.get(\"interactive\") && !events.isDisposed()) {\r\n                this._hoverDp = new MultiDisposer([\r\n                    events.on(\"click\", (ev) => {\r\n                        if ($utils.isTouchEvent(ev.originalEvent)) {\r\n                            if (!this.getPrivate(\"touchHovering\")) {\r\n                                this.setTimeout(() => {\r\n                                    this._handleOver();\r\n                                    if (this.get(\"tooltipText\") || this.get(\"tooltipHTML\")) {\r\n                                        this.showTooltip();\r\n                                    }\r\n                                    this.setPrivateRaw(\"touchHovering\", true);\r\n                                    this.events.dispatch(\"pointerover\", {\r\n                                        type: \"pointerover\",\r\n                                        target: ev.target,\r\n                                        originalEvent: ev.originalEvent,\r\n                                        point: ev.point,\r\n                                        simulated: ev.simulated\r\n                                    });\r\n                                }, 10);\r\n                            }\r\n                        }\r\n                    }),\r\n                    events.on(\"globalpointerup\", (ev) => {\r\n                        if ($utils.isTouchEvent(ev.originalEvent)) {\r\n                            if (this.getPrivate(\"touchHovering\")) {\r\n                                this._handleOut();\r\n                                if (this.get(\"tooltipText\") || this.get(\"tooltipHTML\")) {\r\n                                    this.hideTooltip();\r\n                                }\r\n                                this.setPrivateRaw(\"touchHovering\", false);\r\n                                this.events.dispatch(\"pointerout\", {\r\n                                    type: \"pointerout\",\r\n                                    target: ev.target,\r\n                                    originalEvent: ev.originalEvent,\r\n                                    point: ev.point,\r\n                                    simulated: ev.simulated\r\n                                });\r\n                            }\r\n                        }\r\n                        if (this._isDown) {\r\n                            this._handleUp(ev);\r\n                        }\r\n                        //this._isDown = false;\r\n                    }),\r\n                    events.on(\"pointerover\", () => {\r\n                        this._handleOver();\r\n                    }),\r\n                    events.on(\"pointerout\", () => {\r\n                        this._handleOut();\r\n                    }),\r\n                    events.on(\"pointerdown\", (e) => {\r\n                        this._handleDown(e);\r\n                    })\r\n                ]);\r\n            }\r\n            else {\r\n                this._display.interactive = false;\r\n                if (this._hoverDp) {\r\n                    this._hoverDp.dispose();\r\n                    this._hoverDp = undefined;\r\n                }\r\n            }\r\n        }\r\n        if (this.isDirty(\"forceInactive\")) {\r\n            this._display.inactive = this.get(\"forceInactive\", null);\r\n        }\r\n        if (this.get(\"showTooltipOn\") == \"always\" && this._display.visible) {\r\n            this.showTooltip();\r\n        }\r\n    }\r\n    /**\r\n     * @ignore\r\n     * @todo should this be user-accessible?\r\n     */\r\n    dragStart(e) {\r\n        this._dragEvent = e;\r\n        this.events.stopParentDispatch();\r\n    }\r\n    /**\r\n     * @ignore\r\n     * @todo should this be user-accessible?\r\n     */\r\n    dragStop(e) {\r\n        this._dragEvent = undefined;\r\n        this._dragPoint = undefined;\r\n        this.events.stopParentDispatch();\r\n        if (this._isDragging) {\r\n            this._isDragging = false;\r\n            const type = \"dragstop\";\r\n            if (this.events.isEnabled(type)) {\r\n                this.events.dispatch(type, {\r\n                    type: type,\r\n                    target: this,\r\n                    originalEvent: e.originalEvent,\r\n                    point: e.point,\r\n                    simulated: e.simulated,\r\n                });\r\n            }\r\n        }\r\n    }\r\n    _handleOver() {\r\n        if (!this.isHidden()) {\r\n            if (this.get(\"active\") && this.states.lookup(\"hoverActive\")) {\r\n                this.states.applyAnimate(\"hoverActive\");\r\n            }\r\n            else if (this.get(\"disabled\") && this.states.lookup(\"hoverDisabled\")) {\r\n                this.states.applyAnimate(\"hoverDisabled\");\r\n            }\r\n            else {\r\n                this.states.applyAnimate(\"hover\");\r\n            }\r\n            if (this.get(\"draggable\") && this._isDown && this.states.lookup(\"down\")) {\r\n                this.states.applyAnimate(\"down\");\r\n            }\r\n        }\r\n    }\r\n    _handleOut() {\r\n        if (!this.isHidden()) {\r\n            if (this.get(\"active\") && this.states.lookup(\"active\")) {\r\n                this.states.applyAnimate(\"active\");\r\n            }\r\n            else if (this.get(\"disabled\") && this.states.lookup(\"disabled\")) {\r\n                this.states.applyAnimate(\"disabled\");\r\n            }\r\n            else {\r\n                if (this.states.lookup(\"hover\") || this.states.lookup(\"hoverActive\")) {\r\n                    this.states.applyAnimate(\"default\");\r\n                }\r\n            }\r\n            if (this.get(\"draggable\") && this._isDown && this.states.lookup(\"down\")) {\r\n                this.states.applyAnimate(\"down\");\r\n            }\r\n        }\r\n    }\r\n    _handleUp(e) {\r\n        if (!this.isHidden()) {\r\n            if (this.get(\"active\") && this.states.lookup(\"active\")) {\r\n                this.states.applyAnimate(\"active\");\r\n            }\r\n            else if (this.get(\"disabled\") && this.states.lookup(\"disabled\")) {\r\n                this.states.applyAnimate(\"disabled\");\r\n            }\r\n            else if (this.states.lookup(\"down\")) {\r\n                if (this.isHover()) {\r\n                    this.states.applyAnimate(\"hover\");\r\n                }\r\n                else {\r\n                    this.states.applyAnimate(\"default\");\r\n                }\r\n            }\r\n            // @todo remove this once migrated to _downPoints\r\n            this._downPoint = undefined;\r\n            const pointerId = $utils.getPointerId(e.originalEvent);\r\n            delete this._downPoints[pointerId];\r\n            if ($object.keys(this._downPoints).length == 0) {\r\n                this._isDown = false;\r\n            }\r\n        }\r\n    }\r\n    _hasMoved(e) {\r\n        // @todo remove this once migrated to _downPoints\r\n        // if (this._downPoint) {\r\n        // \tconst x = Math.abs(this._downPoint.x - e.point.x);\r\n        // \tconst y = Math.abs(this._downPoint.y - e.point.y);\r\n        // \treturn (x > 5) || (y > 5);\r\n        // }\r\n        const pointerId = $utils.getPointerId(e.originalEvent);\r\n        const downPoint = this._downPoints[pointerId];\r\n        if (downPoint) {\r\n            const x = Math.abs(downPoint.x - e.point.x);\r\n            const y = Math.abs(downPoint.y - e.point.y);\r\n            return (x > 5) || (y > 5);\r\n        }\r\n        return false;\r\n    }\r\n    _hasDown() {\r\n        return $object.keys(this._downPoints).length > 0;\r\n    }\r\n    _handleDown(e) {\r\n        const parent = this.parent;\r\n        if (parent && !this.get(\"draggable\")) {\r\n            parent._handleDown(e);\r\n        }\r\n        if (this.get(\"interactive\") && !this.isHidden()) {\r\n            if (this.states.lookup(\"down\")) {\r\n                this.states.applyAnimate(\"down\");\r\n            }\r\n            this._downPoint = {\r\n                x: e.point.x,\r\n                y: e.point.y\r\n            };\r\n            // @todo remove this once migrated to _downPoints\r\n            this._isDown = true;\r\n            const pointerId = $utils.getPointerId(e.originalEvent);\r\n            this._downPoints[pointerId] = {\r\n                x: e.point.x,\r\n                y: e.point.y\r\n            };\r\n        }\r\n    }\r\n    /**\r\n     * @ignore\r\n     * @todo should this be user-accessible?\r\n     */\r\n    dragMove(e) {\r\n        let dragEvent = this._dragEvent;\r\n        if (dragEvent) {\r\n            if (dragEvent.simulated && !e.simulated) {\r\n                return true;\r\n            }\r\n            let angle = 0;\r\n            let parent = this.parent;\r\n            let scale = 1;\r\n            while (parent != null) {\r\n                angle += parent.get(\"rotation\", 0);\r\n                parent = parent.parent;\r\n                if (parent) {\r\n                    scale *= parent.get(\"scale\", 1);\r\n                }\r\n            }\r\n            let x = (e.point.x - dragEvent.point.x) / scale;\r\n            let y = (e.point.y - dragEvent.point.y) / scale;\r\n            const events = this.events;\r\n            if (dragEvent.simulated && !this._isDragging) {\r\n                this._isDragging = true;\r\n                this._dragEvent = e;\r\n                this._dragPoint = {\r\n                    x: this.x(),\r\n                    y: this.y()\r\n                };\r\n                const type = \"dragstart\";\r\n                if (events.isEnabled(type)) {\r\n                    events.dispatch(type, {\r\n                        type: type,\r\n                        target: this,\r\n                        originalEvent: e.originalEvent,\r\n                        point: e.point,\r\n                        simulated: e.simulated,\r\n                    });\r\n                }\r\n            }\r\n            if (this._isDragging) {\r\n                let dragPoint = this._dragPoint;\r\n                this.set(\"x\", dragPoint.x + x * $math.cos(angle) + y * $math.sin(angle));\r\n                this.set(\"y\", dragPoint.y + y * $math.cos(angle) - x * $math.sin(angle));\r\n                const type = \"dragged\";\r\n                if (events.isEnabled(type)) {\r\n                    events.dispatch(type, {\r\n                        type: type,\r\n                        target: this,\r\n                        originalEvent: e.originalEvent,\r\n                        point: e.point,\r\n                        simulated: e.simulated,\r\n                    });\r\n                }\r\n            }\r\n            else {\r\n                if (Math.hypot(x, y) > 5) {\r\n                    this._isDragging = true;\r\n                    this._dragEvent = e;\r\n                    this._dragPoint = {\r\n                        x: this.x(),\r\n                        y: this.y()\r\n                    };\r\n                    const type = \"dragstart\";\r\n                    if (events.isEnabled(type)) {\r\n                        events.dispatch(type, {\r\n                            type: type,\r\n                            target: this,\r\n                            originalEvent: e.originalEvent,\r\n                            point: e.point,\r\n                            simulated: e.simulated\r\n                        });\r\n                    }\r\n                }\r\n            }\r\n        }\r\n    }\r\n    _updateSize() {\r\n    }\r\n    _getBounds() {\r\n        this._localBounds = this._display.getLocalBounds();\r\n    }\r\n    /**\r\n     * Returns depth (how deep in the hierachy of the content tree) of this\r\n     * element.\r\n     *\r\n     * @return Depth\r\n     */\r\n    depth() {\r\n        let self = this.parent;\r\n        let depth = 0;\r\n        while (true) {\r\n            if (self) {\r\n                ++depth;\r\n                self = self.parent;\r\n            }\r\n            else {\r\n                return depth;\r\n            }\r\n        }\r\n    }\r\n    /**\r\n     * @ignore\r\n     */\r\n    markDirtySize() {\r\n        this._sizeDirty = true;\r\n        this.markDirty();\r\n    }\r\n    /**\r\n     * @ignore\r\n     */\r\n    markDirtyBounds() {\r\n        const display = this._display;\r\n        if (this.get(\"isMeasured\")) {\r\n            this._root._addDirtyBounds(this);\r\n            display.isMeasured = true;\r\n            display.invalidateBounds();\r\n            const parent = this.parent;\r\n            if (parent && this.get(\"position\") != \"absolute\") {\r\n                if (parent.get(\"width\") == null || parent.get(\"height\") == null || parent.get(\"layout\")) {\r\n                    parent.markDirtyBounds();\r\n                }\r\n            }\r\n            if (this.get(\"focusable\") && this.isFocus()) {\r\n                this.markDirtyAccessibility();\r\n            }\r\n        }\r\n    }\r\n    /**\r\n     * @ignore\r\n     */\r\n    markDirtyAccessibility() {\r\n        //if (this._root.focused(this)) {\r\n        this._root._invalidateAccessibility(this);\r\n        //}\r\n    }\r\n    /**\r\n     * @ignore\r\n     */\r\n    markDirtyLayer() {\r\n        //this._display.markDirtyLayer(this.isDirty(\"opacity\") || this.isDirty(\"visible\")); https://codepen.io/team/amcharts/pen/gOWZPmP <- problems\r\n        this._display.markDirtyLayer(true);\r\n    }\r\n    /**\r\n     * @ignore\r\n     */\r\n    markDirty() {\r\n        super.markDirty();\r\n        this.markDirtyLayer();\r\n    }\r\n    _updateBounds() {\r\n        const oldBounds = this._adjustedLocalBounds;\r\n        let newBounds;\r\n        // if display.visible == false, it still returns bounds\r\n        if (!this.get(\"visible\") || !this.getPrivate(\"visible\") || this.get(\"forceHidden\")) {\r\n            newBounds = {\r\n                left: 0,\r\n                right: 0,\r\n                top: 0,\r\n                bottom: 0\r\n            };\r\n            this._localBounds = newBounds;\r\n            this._adjustedLocalBounds = newBounds;\r\n        }\r\n        else {\r\n            this._getBounds();\r\n            this._fixMinBounds(this._localBounds);\r\n            this.updatePivotPoint();\r\n            this._adjustedLocalBounds = this._display.getAdjustedBounds(this._localBounds);\r\n            newBounds = this._adjustedLocalBounds;\r\n        }\r\n        if (!oldBounds || (oldBounds.left !== newBounds.left || oldBounds.top !== newBounds.top || oldBounds.right !== newBounds.right || oldBounds.bottom !== newBounds.bottom)) {\r\n            const eventType = \"boundschanged\";\r\n            if (this.events.isEnabled(eventType)) {\r\n                this.events.dispatch(eventType, { type: eventType, target: this });\r\n            }\r\n            if (this.parent) {\r\n                this.parent.markDirty();\r\n                this.parent.markDirtyBounds();\r\n            }\r\n            // Update tooltip position together with the Sprite\r\n            if (this.getPrivate(\"showingTooltip\")) {\r\n                this.showTooltip();\r\n            }\r\n        }\r\n    }\r\n    _fixMinBounds(bounds) {\r\n        let minWidth = this.get(\"minWidth\", this.getPrivate(\"minWidth\"));\r\n        let minHeight = this.get(\"minHeight\", this.getPrivate(\"minHeight\"));\r\n        if ($type.isNumber(minWidth)) {\r\n            if (bounds.right - bounds.left < minWidth) {\r\n                bounds.right = bounds.left + minWidth;\r\n            }\r\n        }\r\n        if ($type.isNumber(minHeight)) {\r\n            if (bounds.bottom - bounds.top < minHeight) {\r\n                bounds.bottom = bounds.top + minHeight;\r\n            }\r\n        }\r\n        let privateWidth = this.getPrivate(\"width\");\r\n        let privateHeight = this.getPrivate(\"height\");\r\n        if ($type.isNumber(privateWidth)) {\r\n            if (privateWidth > 0) {\r\n                bounds.right = bounds.left + privateWidth;\r\n            }\r\n            else {\r\n                bounds.left = bounds.right + privateWidth;\r\n            }\r\n        }\r\n        if ($type.isNumber(privateHeight)) {\r\n            if (privateHeight > 0) {\r\n                bounds.bottom = bounds.top + privateHeight;\r\n            }\r\n            else {\r\n                bounds.top = bounds.bottom + privateHeight;\r\n            }\r\n        }\r\n    }\r\n    _removeParent(parent) {\r\n        if (parent) {\r\n            parent.children.removeValue(this);\r\n            $array.removeFirst(parent._percentageSizeChildren, this);\r\n            $array.removeFirst(parent._percentagePositionChildren, this);\r\n        }\r\n    }\r\n    _clearDirty() {\r\n        super._clearDirty();\r\n        this._sizeDirty = false;\r\n        this._statesHandled = false;\r\n    }\r\n    /**\r\n     * Simulate hover over element.\r\n     */\r\n    hover() {\r\n        if (!this.isDisposed()) {\r\n            this.showTooltip();\r\n            this._handleOver();\r\n        }\r\n    }\r\n    /**\r\n     * Simulate unhover over element.\r\n     */\r\n    unhover() {\r\n        if (!this.isDisposed()) {\r\n            this.hideTooltip();\r\n            this._handleOut();\r\n        }\r\n    }\r\n    /**\r\n     * Shows element's [[Tooltip]].\r\n     */\r\n    showTooltip(point) {\r\n        if (!this.isDisposed()) {\r\n            const tooltip = this.getTooltip();\r\n            const tooltipText = this.get(\"tooltipText\");\r\n            const tooltipHTML = this.get(\"tooltipHTML\");\r\n            if ((tooltipText || tooltipHTML) && tooltip) {\r\n                const tooltipPosition = this.get(\"tooltipPosition\");\r\n                const tooltipTarget = this.getPrivate(\"tooltipTarget\", this);\r\n                if (tooltipPosition == \"fixed\" || !point) {\r\n                    this._display._setMatrix();\r\n                    point = this.toGlobal(tooltipTarget._getTooltipPoint());\r\n                }\r\n                tooltip.set(\"pointTo\", point);\r\n                tooltip.set(\"tooltipTarget\", tooltipTarget);\r\n                if (!tooltip.get(\"x\")) {\r\n                    tooltip.set(\"x\", point.x);\r\n                }\r\n                if (!tooltip.get(\"y\")) {\r\n                    tooltip.set(\"y\", point.y);\r\n                }\r\n                if (tooltipText) {\r\n                    tooltip.label.set(\"text\", tooltipText);\r\n                }\r\n                if (tooltipHTML) {\r\n                    tooltip.label.set(\"html\", tooltipHTML);\r\n                }\r\n                const dataItem = this.dataItem;\r\n                if (dataItem) {\r\n                    tooltip.label._setDataItem(dataItem);\r\n                }\r\n                if (this.get(\"showTooltipOn\") == \"always\" && (point.x < 0 || point.x > this._root.width() || point.y < 0 || point.y > this._root.height())) {\r\n                    this.hideTooltip();\r\n                    return;\r\n                }\r\n                tooltip.label.text.markDirtyText();\r\n                const promise = tooltip.show();\r\n                this.setPrivateRaw(\"showingTooltip\", true);\r\n                return promise;\r\n            }\r\n        }\r\n    }\r\n    /**\r\n     * Hides element's [[Tooltip]].\r\n     */\r\n    hideTooltip() {\r\n        const tooltip = this.getTooltip();\r\n        if (tooltip) {\r\n            if (tooltip.get(\"tooltipTarget\") == this.getPrivate(\"tooltipTarget\", this) || this.get(\"tooltip\") == tooltip) {\r\n                let timeout = tooltip.get(\"keepTargetHover\") && tooltip.get(\"stateAnimationDuration\", 0) == 0 ? 400 : undefined;\r\n                const promise = tooltip.hide(timeout);\r\n                this.setPrivateRaw(\"showingTooltip\", false);\r\n                return promise;\r\n            }\r\n        }\r\n    }\r\n    _getTooltipPoint() {\r\n        const bounds = this._localBounds;\r\n        if (bounds) {\r\n            let x = 0;\r\n            let y = 0;\r\n            if (!this.get(\"isMeasured\")) {\r\n                x = $utils.relativeToValue(this.get(\"tooltipX\", 0), this.width());\r\n                y = $utils.relativeToValue(this.get(\"tooltipY\", 0), this.height());\r\n            }\r\n            else {\r\n                x = bounds.left + $utils.relativeToValue(this.get(\"tooltipX\", 0), bounds.right - bounds.left);\r\n                y = bounds.top + $utils.relativeToValue(this.get(\"tooltipY\", 0), bounds.bottom - bounds.top);\r\n            }\r\n            return { x, y };\r\n        }\r\n        return { x: 0, y: 0 };\r\n    }\r\n    /**\r\n     * Returns [[Tooltip]] used for this element.\r\n     *\r\n     * @return Tooltip\r\n     */\r\n    getTooltip() {\r\n        let tooltip = this.get(\"tooltip\");\r\n        if (!tooltip) {\r\n            let parent = this.parent;\r\n            if (parent) {\r\n                return parent.getTooltip();\r\n            }\r\n        }\r\n        else {\r\n            return tooltip;\r\n        }\r\n    }\r\n    _updatePosition() {\r\n        const parent = this.parent;\r\n        let dx = this.get(\"dx\", 0);\r\n        let dy = this.get(\"dy\", 0);\r\n        let x = this.get(\"x\");\r\n        let _x = this.getPrivate(\"x\");\r\n        let xx = 0;\r\n        let yy = 0;\r\n        const position = this.get(\"position\");\r\n        if (x instanceof Percent) {\r\n            if (parent) {\r\n                x = parent.innerWidth() * x.value + parent.get(\"paddingLeft\", 0);\r\n            }\r\n            else {\r\n                x = 0;\r\n            }\r\n        }\r\n        if ($type.isNumber(x)) {\r\n            xx = x + dx;\r\n        }\r\n        else {\r\n            if (_x != null) {\r\n                xx = _x;\r\n            }\r\n            else if (parent) {\r\n                if (position == \"relative\") {\r\n                    xx = parent.get(\"paddingLeft\", 0) + dx;\r\n                }\r\n            }\r\n        }\r\n        let y = this.get(\"y\");\r\n        let _y = this.getPrivate(\"y\");\r\n        if (y instanceof Percent) {\r\n            if (parent) {\r\n                y = parent.innerHeight() * y.value + parent.get(\"paddingTop\", 0);\r\n            }\r\n            else {\r\n                y = 0;\r\n            }\r\n        }\r\n        if ($type.isNumber(y)) {\r\n            yy = y + dy;\r\n        }\r\n        else {\r\n            if (_y != null) {\r\n                yy = _y;\r\n            }\r\n            else if (parent) {\r\n                if (position == \"relative\") {\r\n                    yy = parent.get(\"paddingTop\", 0) + dy;\r\n                }\r\n            }\r\n        }\r\n        const display = this._display;\r\n        if (display.x != xx || display.y != yy) {\r\n            display.invalidateBounds();\r\n            display.x = xx;\r\n            display.y = yy;\r\n            const eventType = \"positionchanged\";\r\n            if (this.events.isEnabled(eventType)) {\r\n                this.events.dispatch(eventType, { type: eventType, target: this });\r\n            }\r\n        }\r\n        // Update tooltip position together with the Sprite\r\n        if (this.getPrivate(\"showingTooltip\")) {\r\n            this.showTooltip();\r\n        }\r\n    }\r\n    /**\r\n     * Returns element's actual X position in pixels.\r\n     *\r\n     * @return X (px)\r\n     */\r\n    x() {\r\n        let x = this.get(\"x\");\r\n        let _x = this.getPrivate(\"x\");\r\n        const parent = this.parent;\r\n        if (parent) {\r\n            if (x instanceof Percent) {\r\n                return $utils.relativeToValue(x, parent.innerWidth()) + parent.get(\"paddingLeft\", 0);\r\n            }\r\n            else {\r\n                if (!$type.isNumber(x)) {\r\n                    if (_x != null) {\r\n                        return _x;\r\n                    }\r\n                    else {\r\n                        return parent.get(\"paddingLeft\", this._display.x);\r\n                    }\r\n                }\r\n                else {\r\n                    return x;\r\n                }\r\n            }\r\n        }\r\n        return this._display.x;\r\n    }\r\n    /**\r\n     * Returns element's actual Y position in pixels.\r\n     *\r\n     * @return Y (px)\r\n     */\r\n    y() {\r\n        let _y = this.getPrivate(\"y\");\r\n        if (_y != null) {\r\n            return _y;\r\n        }\r\n        let y = this.get(\"y\");\r\n        const parent = this.parent;\r\n        if (parent) {\r\n            if (y instanceof Percent) {\r\n                return $utils.relativeToValue(y, parent.innerHeight()) + parent.get(\"paddingTop\", 0);\r\n            }\r\n            else {\r\n                if (!$type.isNumber(y)) {\r\n                    if (_y != null) {\r\n                        return _y;\r\n                    }\r\n                    else {\r\n                        return parent.get(\"paddingTop\", this._display.y);\r\n                    }\r\n                }\r\n                else {\r\n                    return y;\r\n                }\r\n            }\r\n        }\r\n        return this._display.y;\r\n    }\r\n    _dispose() {\r\n        super._dispose();\r\n        this._display.dispose();\r\n        this._removeTemplateField();\r\n        this._removeParent(this.parent);\r\n        this._root._removeFocusElement(this);\r\n        const tooltip = this.get(\"tooltip\");\r\n        if (tooltip) {\r\n            tooltip.dispose();\r\n        }\r\n        this.markDirty();\r\n    }\r\n    /**\r\n     * @ignore\r\n     */\r\n    adjustedLocalBounds() {\r\n        this._fixMinBounds(this._adjustedLocalBounds);\r\n        return this._adjustedLocalBounds;\r\n    }\r\n    /**\r\n     * Returns local coordinates of the element's bounds.\r\n     *\r\n     * @ignore\r\n     * @return Global bounds\r\n     */\r\n    localBounds() {\r\n        return this._localBounds;\r\n    }\r\n    /**\r\n     * Returns adjusted local coordinates of the element's bounds.\r\n     *\r\n     * @ignore\r\n     * @return Global bounds\r\n     */\r\n    bounds() {\r\n        const bounds = this._adjustedLocalBounds;\r\n        const x = this.x();\r\n        const y = this.y();\r\n        return { left: bounds.left + x, right: bounds.right + x, top: bounds.top + y, bottom: bounds.bottom + y };\r\n    }\r\n    /**\r\n     * Returns global coordinates of the element's bounds.\r\n     *\r\n     * @ignore\r\n     * @return Global bounds\r\n     */\r\n    globalBounds() {\r\n        const bounds = this.localBounds();\r\n        const p0 = this.toGlobal({ x: bounds.left, y: bounds.top });\r\n        const p1 = this.toGlobal({ x: bounds.right, y: bounds.top });\r\n        const p2 = this.toGlobal({ x: bounds.right, y: bounds.bottom });\r\n        const p3 = this.toGlobal({ x: bounds.left, y: bounds.bottom });\r\n        return {\r\n            left: Math.min(p0.x, p1.x, p2.x, p3.x),\r\n            top: Math.min(p0.y, p1.y, p2.y, p3.y),\r\n            right: Math.max(p0.x, p1.x, p2.x, p3.x),\r\n            bottom: Math.max(p0.y, p1.y, p2.y, p3.y)\r\n        };\r\n    }\r\n    _onShow(_duration) {\r\n    }\r\n    _onHide(_duration) {\r\n    }\r\n    /**\r\n     * Plays initial reveal animation regardless if element is currently hidden\r\n     * or visible.\r\n     *\r\n     * @param   duration  Duration of the animation in milliseconds\r\n     * @param   delay     Delay showing of the element by X milliseconds\r\n     * @return            Promise\r\n     */\r\n    appear(duration, delay) {\r\n        return __awaiter(this, void 0, void 0, function* () {\r\n            yield this.hide(0);\r\n            if (delay) {\r\n                return new Promise((success, _error) => {\r\n                    this.setTimeout(() => {\r\n                        success(this.show(duration));\r\n                    }, delay);\r\n                });\r\n            }\r\n            else {\r\n                return this.show(duration);\r\n            }\r\n        });\r\n    }\r\n    /**\r\n     * Shows currently hidden element and returns a `Promise` which completes\r\n     * when all showing animations are finished.\r\n     *\r\n     * ```TypeScript\r\n     * series.show().then(function(ev) {\r\n     *   console.log(\"Series is now fully visible\");\r\n     * })\r\n     * ```\r\n     * ```JavaScript\r\n     * series.show().then(function(ev) {\r\n     *   console.log(\"Series is now fully visible\");\r\n     * })\r\n     * ```\r\n     *\r\n     * @return Promise\r\n     */\r\n    show(duration) {\r\n        return __awaiter(this, void 0, void 0, function* () {\r\n            if (!this._isShowing) {\r\n                this._isHidden = false;\r\n                this._isShowing = true;\r\n                this._isHiding = false;\r\n                if (this.states.lookup(\"default\").get(\"visible\")) {\r\n                    this.set(\"visible\", true);\r\n                }\r\n                this._onShow(duration);\r\n                const animations = this.states.applyAnimate(\"default\", duration);\r\n                yield waitForAnimations(animations);\r\n                this._isShowing = false;\r\n            }\r\n        });\r\n    }\r\n    /**\r\n     * Hides the element and returns a `Promise` which completes when all hiding\r\n     * animations are finished.\r\n     *\r\n     * ```TypeScript\r\n     * series.hide().then(function(ev) {\r\n     *   console.log(\"Series finished hiding\");\r\n     * })\r\n     * ```\r\n     * ```JavaScript\r\n     * series.hide().then(function(ev) {\r\n     *   console.log(\"Series finished hiding\");\r\n     * })\r\n     * ```\r\n     *\r\n     * @return Promise\r\n     */\r\n    hide(duration) {\r\n        return __awaiter(this, void 0, void 0, function* () {\r\n            if (!this._isHiding && !this._isHidden) {\r\n                this._isHiding = true;\r\n                this._isShowing = false;\r\n                let state = this.states.lookup(\"hidden\");\r\n                if (!state) {\r\n                    state = this.states.create(\"hidden\", {\r\n                        \"opacity\": 0,\r\n                        \"visible\": false\r\n                    });\r\n                }\r\n                this._isHidden = true;\r\n                this._onHide(duration);\r\n                const animations = this.states.applyAnimate(\"hidden\", duration);\r\n                yield waitForAnimations(animations);\r\n                this._isHiding = false;\r\n            }\r\n        });\r\n    }\r\n    /**\r\n     * Returns `true` if this element is currently hidden.\r\n     *\r\n     * @return Is hidden?\r\n     */\r\n    isHidden() {\r\n        return this._isHidden;\r\n    }\r\n    /**\r\n     * Returns `true` if this element is currently animating to a default state.\r\n     *\r\n     * @return Is showing?\r\n     */\r\n    isShowing() {\r\n        return this._isShowing;\r\n    }\r\n    /**\r\n     * Returns `true` if this element is currently animating to a hidden state.\r\n     *\r\n     * @return Is hiding?\r\n     */\r\n    isHiding() {\r\n        return this._isHiding;\r\n    }\r\n    /**\r\n     * Returns `true` if this element is currently hovered by a pointer.\r\n     *\r\n     * @return Is hovered?\r\n     */\r\n    isHover() {\r\n        return this._display.hovering();\r\n    }\r\n    /**\r\n     * Returns `true` if this element does currently have focus.\r\n     *\r\n     * @return Is focused?\r\n     */\r\n    isFocus() {\r\n        return this._root.focused(this);\r\n    }\r\n    /**\r\n     * Returns `true` if this element is currently being dragged.\r\n     *\r\n     * @return Is dragged?\r\n     */\r\n    isDragging() {\r\n        return this._isDragging;\r\n    }\r\n    /**\r\n     * Returns `false` if if either public or private setting `visible` is set\r\n     * to `false`, or `forceHidden` is set to `true`.\r\n     *\r\n     * @return Visible?\r\n     */\r\n    isVisible() {\r\n        if (this.get(\"visible\") && this.getPrivate(\"visible\") && !this.get(\"forceHidden\")) {\r\n            return true;\r\n        }\r\n        return false;\r\n    }\r\n    /**\r\n     * Same as `isVisible()`, except it checks all ascendants, too.\r\n     *\r\n     * @since 5.2.7\r\n     * @return Visible?\r\n     */\r\n    isVisibleDeep() {\r\n        return this._parent ? (this._parent.isVisibleDeep() && this.isVisible()) : this.isVisible();\r\n    }\r\n    /**\r\n     * Returns an actual opacity of the element, taking into account all parents.\r\n     *\r\n     * @return Opacity\r\n     * @since 5.2.11\r\n     */\r\n    compositeOpacity() {\r\n        const opacity = this.get(\"opacity\", 1);\r\n        return this._parent ? (this._parent.compositeOpacity() * opacity) : opacity;\r\n    }\r\n    /**\r\n     * Returns an actual scale of the element, taking into account all parents.\r\n     *\r\n     * @return Opacity\r\n     * @since 5.9.2\r\n     */\r\n    compositeScale() {\r\n        const scale = this.get(\"scale\", 1);\r\n        return this._parent ? (this._parent.compositeScale() * scale) : scale;\r\n    }\r\n    /**\r\n     * Returns an actual roation of the element, taking into account all parents.\r\n     *\r\n     * @return Opacity\r\n     * @since 5.9.2\r\n     */\r\n    compositeRotation() {\r\n        const rotation = this.get(\"rotation\", 0);\r\n        return this._parent ? (this._parent.compositeRotation() + rotation) : rotation;\r\n    }\r\n    /**\r\n     * Returns width of this element in pixels.\r\n     *\r\n     * @return Width (px)\r\n     */\r\n    width() {\r\n        let width = this.get(\"width\");\r\n        let maxWidth = this.get(\"maxWidth\", this.getPrivate(\"maxWidth\"));\r\n        let minWidth = this.get(\"minWidth\", this.getPrivate(\"minWidth\"));\r\n        let privateWidth = this.getPrivate(\"width\");\r\n        let w = 0;\r\n        if ($type.isNumber(privateWidth)) {\r\n            w = privateWidth;\r\n        }\r\n        else {\r\n            if (width == null) {\r\n                if (this._adjustedLocalBounds) {\r\n                    w = this._adjustedLocalBounds.right - this._adjustedLocalBounds.left;\r\n                }\r\n            }\r\n            else {\r\n                if (width instanceof Percent) {\r\n                    const parent = this.parent;\r\n                    if (parent) {\r\n                        w = parent.innerWidth() * width.value;\r\n                    }\r\n                    else {\r\n                        w = this._root.width() * width.value;\r\n                    }\r\n                }\r\n                else if ($type.isNumber(width)) {\r\n                    w = width;\r\n                }\r\n            }\r\n        }\r\n        if ($type.isNumber(minWidth)) {\r\n            w = Math.max(minWidth, w);\r\n        }\r\n        if ($type.isNumber(maxWidth)) {\r\n            w = Math.min(maxWidth, w);\r\n        }\r\n        return w;\r\n    }\r\n    /**\r\n     * Returns maximum allowed width of this element in pixels.\r\n     *\r\n     * @return Maximum width (px)\r\n     */\r\n    maxWidth() {\r\n        let maxWidth = this.get(\"maxWidth\", this.getPrivate(\"maxWidth\"));\r\n        if ($type.isNumber(maxWidth)) {\r\n            return maxWidth;\r\n        }\r\n        else {\r\n            let width = this.get(\"width\");\r\n            if ($type.isNumber(width)) {\r\n                return width;\r\n            }\r\n        }\r\n        const parent = this.parent;\r\n        if (parent) {\r\n            return parent.innerWidth();\r\n        }\r\n        return this._root.width();\r\n    }\r\n    /**\r\n     * Returns maximum allowed height of this element in pixels.\r\n     *\r\n     * @return Maximum height (px)\r\n     */\r\n    maxHeight() {\r\n        let maxHeight = this.get(\"maxHeight\", this.getPrivate(\"maxHeight\"));\r\n        if ($type.isNumber(maxHeight)) {\r\n            return maxHeight;\r\n        }\r\n        else {\r\n            let height = this.get(\"height\");\r\n            if ($type.isNumber(height)) {\r\n                return height;\r\n            }\r\n        }\r\n        const parent = this.parent;\r\n        if (parent) {\r\n            return parent.innerHeight();\r\n        }\r\n        return this._root.height();\r\n    }\r\n    /**\r\n     * Returns height of this element in pixels.\r\n     *\r\n     * @return Height (px)\r\n     */\r\n    height() {\r\n        let height = this.get(\"height\");\r\n        let maxHeight = this.get(\"maxHeight\", this.getPrivate(\"maxHeight\"));\r\n        let minHeight = this.get(\"minHeight\", this.getPrivate(\"minHeight\"));\r\n        let privateHeight = this.getPrivate(\"height\");\r\n        let h = 0;\r\n        if ($type.isNumber(privateHeight)) {\r\n            h = privateHeight;\r\n        }\r\n        else {\r\n            if (height == null) {\r\n                if (this._adjustedLocalBounds) {\r\n                    h = this._adjustedLocalBounds.bottom - this._adjustedLocalBounds.top;\r\n                }\r\n            }\r\n            else {\r\n                if (height instanceof Percent) {\r\n                    const parent = this.parent;\r\n                    if (parent) {\r\n                        h = parent.innerHeight() * height.value;\r\n                    }\r\n                    else {\r\n                        h = this._root.height() * height.value;\r\n                    }\r\n                }\r\n                else if ($type.isNumber(height)) {\r\n                    h = height;\r\n                }\r\n            }\r\n        }\r\n        if ($type.isNumber(minHeight)) {\r\n            h = Math.max(minHeight, h);\r\n        }\r\n        if ($type.isNumber(maxHeight)) {\r\n            h = Math.min(maxHeight, h);\r\n        }\r\n        return h;\r\n    }\r\n    _findStaticTemplate(f) {\r\n        // templateField overrides template\r\n        if (this._templateField && f(this._templateField)) {\r\n            return this._templateField;\r\n        }\r\n        return super._findStaticTemplate(f);\r\n    }\r\n    _walkParents(f) {\r\n        if (this._parent) {\r\n            this._walkParent(f);\r\n        }\r\n    }\r\n    _walkParent(f) {\r\n        if (this._parent) {\r\n            this._parent._walkParent(f);\r\n        }\r\n        f(this);\r\n    }\r\n    /**\r\n     * Parent [[Container]] of this element.\r\n     *\r\n     * @return Parent container\r\n     */\r\n    get parent() {\r\n        return this._parent;\r\n    }\r\n    _setParent(parent, updateChildren = false) {\r\n        const prevParent = this._parent;\r\n        if (parent !== prevParent) {\r\n            this.markDirtyBounds();\r\n            parent.markDirty();\r\n            this._parent = parent;\r\n            if (updateChildren) {\r\n                this._removeParent(prevParent);\r\n                if (parent) {\r\n                    this._addPercentageSizeChildren();\r\n                    this._addPercentagePositionChildren();\r\n                }\r\n            }\r\n            this.markDirtyPosition();\r\n            this._applyThemes();\r\n        }\r\n    }\r\n    /**\r\n     * Returns an instance of [[NumberFormatter]] used in this element.\r\n     *\r\n     * If this element does not have it set, global one form [[Root]] is used.\r\n     *\r\n     * @see {@link https://www.amcharts.com/docs/v5/concepts/using-formatters/} for more info\r\n     * @return NumberFormatter instace\r\n     */\r\n    getNumberFormatter() {\r\n        return this.get(\"numberFormatter\", this._root.numberFormatter);\r\n    }\r\n    /**\r\n     * Returns an instance of [[DateFormatter]] used in this element.\r\n     *\r\n     * If this element does not have it set, global one form [[Root]] is used.\r\n     *\r\n     * @see {@link https://www.amcharts.com/docs/v5/concepts/using-formatters/} for more info\r\n     * @return DateFormatter instace\r\n     */\r\n    getDateFormatter() {\r\n        return this.get(\"dateFormatter\", this._root.dateFormatter);\r\n    }\r\n    /**\r\n     * Returns an instance of [[DurationFormatter]] used in this element.\r\n     *\r\n     * If this element does not have it set, global one form [[Root]] is used.\r\n     *\r\n     * @see {@link https://www.amcharts.com/docs/v5/concepts/using-formatters/} for more info\r\n     * @return DurationFormatter instace\r\n     */\r\n    getDurationFormatter() {\r\n        return this.get(\"durationFormatter\", this._root.durationFormatter);\r\n    }\r\n    /**\r\n     * Converts X/Y coordinate within this element to a global coordinate.\r\n     *\r\n     * @param  point  Local coordinate\r\n     * @return        Global coordinate\r\n     */\r\n    toGlobal(point) {\r\n        return this._display.toGlobal(point);\r\n    }\r\n    /**\r\n     * Converts global X/Y coordinate to a coordinate within this element.\r\n     *\r\n     * @param  point  Global coordinate\r\n     * @return        Local coordinate\r\n     */\r\n    toLocal(point) {\r\n        return this._display.toLocal(point);\r\n    }\r\n    _getDownPoint() {\r\n        const id = this._getDownPointId();\r\n        if (id) {\r\n            return this._downPoints[id];\r\n        }\r\n    }\r\n    _getDownPointId() {\r\n        if (this._downPoints) {\r\n            return $object.keysOrdered(this._downPoints, (a, b) => {\r\n                if (a > b) {\r\n                    return 1;\r\n                }\r\n                if (a < b) {\r\n                    return -1;\r\n                }\r\n                return 0;\r\n            })[0];\r\n        }\r\n    }\r\n    /**\r\n     * Moves sprite to the end of the parent's children array.\r\n     *\r\n     * Depending on `layout` setting of the parten container, it may effect the\r\n     * positioning or overlapping order of the elements.\r\n     */\r\n    toFront() {\r\n        const parent = this.parent;\r\n        if (parent) {\r\n            parent.children.moveValue(this, parent.children.length - 1);\r\n        }\r\n    }\r\n    /**\r\n     * Moves sprite to the beginning of the parent's children array.\r\n     *\r\n     * Depending on `layout` setting of the parten container, it may effect the\r\n     * positioning or overlapping order of the elements.\r\n     */\r\n    toBack() {\r\n        const parent = this.parent;\r\n        if (parent) {\r\n            parent.children.moveValue(this, 0);\r\n        }\r\n    }\r\n}\r\nObject.defineProperty(Sprite, \"className\", {\r\n    enumerable: true,\r\n    configurable: true,\r\n    writable: true,\r\n    value: \"Sprite\"\r\n});\r\nObject.defineProperty(Sprite, \"classNames\", {\r\n    enumerable: true,\r\n    configurable: true,\r\n    writable: true,\r\n    value: Entity.classNames.concat([Sprite.className])\r\n});\r\n//# sourceMappingURL=Sprite.js.map","import type { IDisplayObject, IRendererEvents, IRendererEvent, IPointerEvent, IMargin } from \"./backend/Renderer\";\nimport type { IBounds } from \"../util/IBounds\";\nimport type { Container } from \"./Container\";\nimport type { IAccessibilitySettings } from \"../util/Accessibility\";\nimport type { NumberFormatter } from \"../util/NumberFormatter\";\nimport type { DateFormatter } from \"../util/DateFormatter\";\nimport type { DurationFormatter } from \"../util/DurationFormatter\";\nimport type { DataItem, IComponentDataItem } from \"./Component\";\nimport type { Graphics } from \"./Graphics\";\nimport type { IPoint } from \"../util/IPoint\";\nimport type { ListTemplate } from \"../util/List\";\n\nimport type { Tooltip } from \"./Tooltip\";\nimport { Entity, IEntitySettings, IEntityPrivate, IEntityEvents } from \"../util/Entity\";\nimport { Template } from \"../util/Template\";\nimport { Percent } from \"../util/Percent\";\nimport { EventDispatcher, Events, EventListener } from \"../util/EventDispatcher\";\nimport { IDisposer, MultiDisposer, CounterDisposer } from \"../util/Disposer\";\nimport { waitForAnimations } from \"../util/Animation\";\n\nimport * as $utils from \"../util/Utils\";\nimport * as $array from \"../util/Array\";\nimport * as $type from \"../util/Type\";\nimport * as $object from \"../util/Object\";\nimport * as $math from \"../util/Math\";\n//import { populateString } from \"../util/PopulateString\";\n\n\n/**\n * An [[EventDispatcher]] for [[Sprite]].\n *\n * @see {@link https://www.amcharts.com/docs/v5/concepts/events/} for more info\n */\nclass SpriteEventDispatcher<Target, E extends Events<Target, ISpriteEvents>> extends EventDispatcher<E> {\n\tprotected static RENDERER_EVENTS: { [K in keyof IRendererEvents]?: <E extends Events<Sprite, ISpriteEvents>>(this: SpriteEventDispatcher<Sprite, E>, event: IRendererEvents[K]) => void } = {\n\t\t\"click\": function (event) {\n\t\t\tif (this.isEnabled(\"click\") && !this._sprite.isDragging() && this._sprite._hasDown() && !this._sprite._hasMoved(this._makePointerEvent(\"click\", event))) {\n\t\t\t\tthis.dispatch(\"click\", this._makePointerEvent(\"click\", event));\n\t\t\t}\n\t\t},\n\n\t\t\"rightclick\": function (event) {\n\t\t\tif (this.isEnabled(\"rightclick\")) {\n\t\t\t\tthis.dispatch(\"rightclick\", this._makePointerEvent(\"rightclick\", event));\n\t\t\t}\n\t\t},\n\n\t\t\"middleclick\": function (event) {\n\t\t\tif (this.isEnabled(\"middleclick\")) {\n\t\t\t\tthis.dispatch(\"middleclick\", this._makePointerEvent(\"middleclick\", event));\n\t\t\t}\n\t\t},\n\n\t\t\"dblclick\": function (event) {\n\t\t\tthis.dispatchParents(\"dblclick\", this._makePointerEvent(\"dblclick\", event));\n\t\t},\n\n\t\t\"pointerover\": function (event) {\n\n\t\t\tconst sprite = this._sprite;\n\t\t\tlet dispatch = true;\n\n\t\t\tif (sprite.getPrivate(\"trustBounds\")) {\n\t\t\t\tsprite._getBounds()\n\t\t\t\tconst bounds = sprite.globalBounds();\n\n\t\t\t\tif (sprite.isType<Graphics>(\"Graphics\")) {\n\t\t\t\t\tconst strokeWidth = sprite.get(\"strokeWidth\", 1) / 2;\n\t\t\t\t\tif (strokeWidth >= 1) {\n\t\t\t\t\t\tbounds.left -= strokeWidth;\n\t\t\t\t\t\tbounds.right += strokeWidth;\n\t\t\t\t\t\tbounds.top -= strokeWidth;\n\t\t\t\t\t\tbounds.bottom += strokeWidth;\n\t\t\t\t\t}\n\t\t\t\t}\n\n\t\t\t\tif (!$math.inBounds(event.point, bounds)) {\n\t\t\t\t\tdispatch = false;\n\t\t\t\t\tsprite._root._renderer.removeHovering(sprite._display);\n\t\t\t\t}\n\t\t\t}\n\n\t\t\tif (dispatch && this.isEnabled(\"pointerover\")) {\n\t\t\t\tthis.dispatch(\"pointerover\", this._makePointerEvent(\"pointerover\", event));\n\t\t\t}\n\t\t},\n\n\t\t\"pointerout\": function (event) {\n\t\t\tif (this.isEnabled(\"pointerout\")) {\n\t\t\t\tthis.dispatch(\"pointerout\", this._makePointerEvent(\"pointerout\", event));\n\t\t\t}\n\t\t},\n\n\t\t\"pointerdown\": function (event) {\n\t\t\tthis.dispatchParents(\"pointerdown\", this._makePointerEvent(\"pointerdown\", event));\n\t\t},\n\n\t\t\"pointerup\": function (event) {\n\t\t\tif (this.isEnabled(\"pointerup\")) {\n\t\t\t\tthis.dispatch(\"pointerup\", this._makePointerEvent(\"pointerup\", event));\n\t\t\t}\n\t\t},\n\n\t\t\"globalpointerup\": function (event) {\n\t\t\tif (this.isEnabled(\"globalpointerup\")) {\n\t\t\t\tthis.dispatch(\"globalpointerup\", this._makePointerEvent(\"globalpointerup\", event));\n\t\t\t}\n\t\t},\n\n\t\t\"globalpointermove\": function (event) {\n\t\t\tif (this.isEnabled(\"globalpointermove\")) {\n\t\t\t\tthis.dispatch(\"globalpointermove\", this._makePointerEvent(\"globalpointermove\", event));\n\t\t\t}\n\t\t},\n\n\t\t\"wheel\": function (event) {\n\t\t\tthis.dispatchParents(\"wheel\", {\n\t\t\t\ttype: \"wheel\",\n\t\t\t\ttarget: this._sprite,\n\t\t\t\toriginalEvent: event.event,\n\t\t\t\tpoint: event.point,\n\t\t\t});\n\t\t},\n\t};\n\n\tprotected _sprite: Sprite;\n\n\tprotected _rendererDisposers: { [K in keyof IRendererEvents]?: CounterDisposer } = {};\n\n\tprotected _dispatchParents: boolean = true;\n\n\tconstructor(sprite: Sprite) {\n\t\tsuper();\n\t\tthis._sprite = sprite;\n\t}\n\n\tprotected _makePointerEvent<K extends keyof E>(key: K, event: IRendererEvent<IPointerEvent>): ISpritePointerEvent & { type: K } {\n\t\treturn {\n\t\t\ttype: key,\n\t\t\toriginalEvent: event.event,\n\t\t\tpoint: event.point,\n\t\t\tsimulated: event.simulated,\n\t\t\tnative: event.native,\n\t\t\ttarget: this._sprite\n\t\t};\n\t}\n\n\tprotected _onRenderer<Key extends keyof IRendererEvents>(key: Key, dispatch: (this: this, event: IRendererEvents[Key]) => void): IDisposer {\n\t\t// TODO: is this OK? it'd be good not to require to set this on each individual element\n\t\tthis._sprite.set(\"interactive\", true);\n\t\tthis._sprite._display.interactive = true;\n\n\t\tlet events = this._rendererDisposers[key];\n\n\t\tif (events === undefined) {\n\t\t\tconst disposer = this._sprite._display.on(key, (e) => {\n\t\t\t\tdispatch.call(this, e);\n\t\t\t});\n\n\t\t\tevents = this._rendererDisposers[key] = new CounterDisposer(() => {\n\t\t\t\tdelete this._rendererDisposers[key];\n\t\t\t\tdisposer.dispose();\n\t\t\t});\n\t\t}\n\n\t\treturn events.increment();\n\t}\n\n\tprotected _on<C, Key extends keyof E>(once: boolean, type: Key | null, callback: any, context: C, shouldClone: boolean, dispatch: (type: Key, event: E[Key]) => void): EventListener {\n\t\tconst info = super._on(once, type, callback, context, shouldClone, dispatch);\n\n\t\tconst rendererEvent = (SpriteEventDispatcher.RENDERER_EVENTS as any)[type];\n\t\tif (rendererEvent !== undefined) {\n\t\t\tinfo.disposer = new MultiDisposer([\n\t\t\t\tinfo.disposer,\n\t\t\t\tthis._onRenderer(type as any, rendererEvent),\n\t\t\t]);\n\t\t}\n\n\t\treturn info;\n\t}\n\n\t/**\n\t * Will stop any bubbling up of the event to element's parents.\n\t *\n\t * Should be called in an event handler, e.g.:\n\t *\n\t * ```TypeScript\n\t * element.events.on(\"pointerdown\", function(ev) {\n\t *   // Do something here and prevent from \"pointerdown\" bubbling up\n\t *   // ...\n\t *   ev.target.events.stopParentDispatch();\n\t * });\n\t * ```\n\t * ```JavaScript\n\t * element.events.on(\"pointerdown\", function(ev) {\n\t *   // Do something here and prevent from \"pointerdown\" bubbling up\n\t *   // ...\n\t *   ev.target.events.stopParentDispatch();\n\t * });\n\t * ```\n\t */\n\tpublic stopParentDispatch() {\n\t\tthis._dispatchParents = false;\n\t}\n\n\t/**\n\t * @ignore\n\t */\n\tpublic dispatchParents<Key extends keyof E>(type: Key, event: E[Key]): void {\n\t\tconst old = this._dispatchParents;\n\n\t\tthis._dispatchParents = true;\n\n\t\ttry {\n\t\t\tthis.dispatch(type, event);\n\n\t\t\tif (this._dispatchParents && this._sprite.parent) {\n\t\t\t\tthis._sprite.parent.events.dispatchParents(type as any, event);\n\t\t\t}\n\n\t\t} finally {\n\t\t\tthis._dispatchParents = old;\n\t\t}\n\t}\n}\n\n\nexport interface ISpriteSettings extends IEntitySettings, IAccessibilitySettings {\n\n\t/**\n\t * X position relative to parent.\n\t */\n\tx?: number | Percent | null;\n\n\t/**\n\t * Y position relative to parent.\n\t */\n\ty?: number | Percent | null;\n\n\t/**\n\t * Element's absolute width in pixels (numeric value) or relative width to\n\t * parent ([[Percent]]);\n\t */\n\twidth?: number | Percent | null;\n\n\t/**\n\t * Element's absolute height in pixels (numeric value) or relative height to\n\t * parent ([[Percent]]);\n\t */\n\theight?: number | Percent | null;\n\n\t/**\n\t * Maximum allowed width in pixels.\n\t */\n\tmaxWidth?: number | null;\n\n\t/**\n\t * Maximum allowed height in pixels.\n\t */\n\tmaxHeight?: number | null;\n\n\t/**\n\t * Minimum allowed width in pixels.\n\t */\n\tminWidth?: number | null;\n\n\t/**\n\t * Minimum allowed height in pixels.\n\t */\n\tminHeight?: number | null;\n\n\t/**\n\t * Opacity. 0 - fully transparent; 1 - fully opaque.\n\t */\n\topacity?: number;\n\n\t/**\n\t * Rotation in degrees.\n\t */\n\trotation?: number;\n\n\t/**\n\t * Scale.\n\t *\n\t * Setting to a value less than 1 will shrink object.\n\t */\n\tscale?: number;\n\n\t/**\n\t * X coordinate of the center of the element relative to itself.\n\t *\n\t * Center coordinates will affect placement as well as rotation pivot point.\n\t */\n\tcenterX?: number | Percent;\n\n\t/**\n\t * Y coordinate of the center of the element relative to itself.\n\t *\n\t * Center coordinates will affect placement as well as rotation pivot point.\n\t */\n\tcenterY?: number | Percent;\n\n\t/**\n\t * Left margin in pixels.\n\t */\n\tmarginLeft?: number;\n\n\t/**\n\t * Right margin in pixels.\n\t */\n\tmarginRight?: number;\n\n\t/**\n\t * Top margin in pixels.\n\t */\n\tmarginTop?: number;\n\n\t/**\n\t * Bottom margin in pixels.\n\t */\n\tmarginBottom?: number;\n\n\t/**\n\t * Is element visible?\n\t */\n\tvisible?: boolean;\n\n\t/**\n\t * Positioning of the element.\n\t *\n\t * `\"absolute\"` means element will not participate in parent layout scheme,\n\t * and will be positioned solely accoridng its `x` and `y` settings.\n\t */\n\tposition?: \"absolute\" | \"relative\";\n\n\t/**\n\t * Horizontal shift in pixels. Can be negative to shift leftward.\n\t */\n\tdx?: number;\n\n\t/**\n\t * Vertical shift in pixels. Can be negative to shift upward.\n\t */\n\tdy?: number;\n\n\t/**\n\t * Should this element accept user interaction events?\n\t */\n\tinteractive?: boolean;\n\n\t/**\n\t * Text to show in a tooltip when hovered.\n\t */\n\ttooltipText?: string;\n\n\t/**\n\t * HTML content to show in a tooltip when hovered.\n\t *\n\t * @since 5.2.11\n\t */\n\ttooltipHTML?: string;\n\n\t/**\n\t * Tooltip pointer X coordinate relative to the element itself.\n\t */\n\ttooltipX?: number | Percent;\n\n\t/**\n\t * Tooltip pointer Y coordinate relative to the element itself.\n\t */\n\ttooltipY?: number | Percent;\n\n\t/**\n\t * [[Tooltip]] instance.\n\t */\n\ttooltip?: Tooltip;\n\n\t/**\n\t * Tooltip position.\n\t */\n\ttooltipPosition?: \"fixed\" | \"pointer\";\n\n\t/**\n\t * If set to `false` element will not be measured and cannot participate in\n\t * layout schemes.\n\t */\n\tisMeasured?: boolean;\n\n\t/**\n\t * Allows binding element's settings to data.\n\t *\n\t * @see {@link https://www.amcharts.com/docs/v5/concepts/settings/template-fields/} for more info\n\t */\n\ttemplateField?: string;\n\n\t/**\n\t * If set to `true`, user will be able to drag this element. It will also\n\t * disable default drag events over the area of this element.\n\t */\n\tdraggable?: boolean;\n\n\t/**\n\t * If set to `true`, mouse wheel events will be triggered over the element. It\n\t * will also disable page scrolling using mouse wheel when pointer is over\n\t * the element.\n\t */\n\twheelable?: boolean;\n\n\t/**\n\t * An instance of [[NumberFormatter]] that should be used instead of global\n\t * formatter object.\n\t *\n\t * @see {@link https://www.amcharts.com/docs/v5/concepts/using-formatters/} for more info\n\t */\n\tnumberFormatter?: NumberFormatter | undefined;\n\n\t/**\n\t * An instance of [[DateFormatter]] that should be used instead of global\n\t * formatter object.\n\t *\n\t * @see {@link https://www.amcharts.com/docs/v5/concepts/using-formatters/} for more info\n\t */\n\tdateFormatter?: DateFormatter | undefined;\n\n\t/**\n\t * An instance of [[DurationFormatter]] that should be used instead of global\n\t * formatter object.\n\t *\n\t * @see {@link https://www.amcharts.com/docs/v5/concepts/using-formatters/} for more info\n\t */\n\tdurationFormatter?: DurationFormatter | undefined;\n\n\t/**\n\t * If set, element will toggle specified boolean setting between `true` and\n\t * `false` when clicked/touched.\n\t */\n\ttoggleKey?: \"disabled\" | \"active\" | \"none\" | undefined;\n\n\t/**\n\t * Indicates if element is currently active.\n\t */\n\tactive?: boolean;\n\n\t/**\n\t * Indicates if element is disabled.\n\t */\n\tdisabled?: boolean;\n\n\t/**\n\t * An SVG filter to apply to the element.\n\t *\n\t * IMPORTANT: SVG filters are not supported in some browsers, e.g. Safari.\n\t *\n\t * @see {@link https://www.amcharts.com/docs/v5/concepts/colors-gradients-and-patterns/filters/#SVG_filters} for more info\n\t * @ignore todo: figure out if we still need this\n\t */\n\tfilter?: string;\n\n\t/**\n\t * A named mouse cursor style to show when hovering this element.\n\t *\n\t * @see {@link https://developer.mozilla.org/en-US/docs/Web/CSS/cursor} for more info\n\t */\n\tcursorOverStyle?: string;\n\n\t/**\n\t * If set to `false` this element will not appear in exported snapshots of\n\t * the chart.\n\t */\n\texportable?: boolean;\n\n\t/**\n\t * Numeric layer to put element in.\n\t *\n\t * Elements with higher number will appear in front of the ones with lower\n\t * numer.\n\t *\n\t * If not set, will inherit layer from its ascendants.\n\t */\n\tlayer?: number;\n\n\t/**\n\t * Margins for the layer.\n\t *\n\t * Can be used to make the layer larger/or smaller than default chart size.\n\t *\n\t * @since @5.2.39\n\t */\n\tlayerMargin?: IMargin;\n\n\t/**\n\t * If set to `true` the element will be hidden regardless of `visible` or\n\t * even if `show()` is called.\n\t */\n\tforceHidden?: boolean;\n\n\t/**\n\t * If set to `true` the element will be inactive - absolutely oblivious\n\t * to all interactions, even if there are related events set, or\n\t * the `interactive: true` is set.\n\t *\n\t * @since 5.0.21\n\t */\n\tforceInactive?: boolean;\n\n\t/**\n\t * Defines when tooltip is shown over the element.\n\t *\n\t * Available options:\n\t * * `\"hover\"` (default) - tooltip is shown when element is hovered by a pointer or touched. It is hidden as soon as element is not hovered anymore, or touch occurs outside it.\n\t * * `\"always\"` - a tooltip will always be shown over the element, without any interactions. Please note that if you need to show tooltips for multiple elements at the same time, you need to explicitly create a `Tooltip` instance and set element's `tooltip` setting with it.\n\t * * '\"click\"' - a tooltip will only appear when target element is clicked/tapped. Tooltip will hide when clicking anywhere else on the page.\n\t *\n\t * @see {@link https://www.amcharts.com/docs/v5/concepts/common-elements/tooltips/#Sticky_tooltips} for more info\n\t * @default \"hover\"\n\t * @since 5.0.16\n\t */\n\tshowTooltipOn?: \"hover\" | \"always\" | \"click\";\n\n\t/**\n\t * If set to `true`, an element will try to draw itself in such way, that it\n\t * looks crisp on screen, with minimal anti-aliasing.\n\t *\n\t * It will round x/y position so it is positioned fine \"on pixel\".\n\t *\n\t * It will also adjust `strokeWidth` based on device pixel ratio or zoom,\n\t * so the line might look thinner than expected.\n\t *\n\t * NOTE: this is might not universally work, especially when set on several\n\t * objects that are supposed to fit perfectly with each other.\n\t *\n\t * @default false\n\t * @since 5.3.0\n\t */\n\tcrisp?: boolean;\n\n\t/**\n\t * Apply blur filter.\n\t *\n\t * Ranges of values in pixels: `0` to `X`.\n\t *\n\t * IMPORTANT: This setting is not supported in Safari browsers.\n\t *\n\t * @see {@link https://www.amcharts.com/docs/v5/concepts/colors-gradients-and-patterns/filters/} for more info\n\t * @since 5.5.0\n\t */\n\tblur?: number;\n\n\t/**\n\t * Modifty visual brightness.\n\t *\n\t * Range of values: `0` to `1`.\n\t *\n\t * IMPORTANT: This setting is not supported in Safari browsers.\n\t *\n\t * @see {@link https://www.amcharts.com/docs/v5/concepts/colors-gradients-and-patterns/filters/} for more info\n\t * @since 5.5.0\n\t */\n\tbrightness?: number;\n\n\t/**\n\t * Modify contrast.\n\t *\n\t * Range of values: `0` to `1`.\n\t *\n\t * IMPORTANT: This setting is not supported in Safari browsers.\n\t *\n\t * @see {@link https://www.amcharts.com/docs/v5/concepts/colors-gradients-and-patterns/filters/} for more info\n\t * @since 5.5.0\n\t */\n\tcontrast?: number;\n\n\t/**\n\t * Modify saturation.\n\t *\n\t * Range of values in pixels: `0` to `X`.\n\t *\n\t * * `0` - grayscale\n\t * * `1` - no changes\n\t * * `>1` - more saturated\n\t *\n\t * IMPORTANT: This setting is not supported in Safari browsers.\n\t *\n\t * @see {@link https://www.amcharts.com/docs/v5/concepts/colors-gradients-and-patterns/filters/} for more info\n\t * @since 5.5.0\n\t */\n\tsaturate?: number;\n\n\t/**\n\t * Apply sepia filter.\n\t *\n\t * Range of values: `0` (no changes) to `1` (complete sepia).\n\t *\n\t * IMPORTANT: This setting is not supported in Safari browsers.\n\t *\n\t * @see {@link https://www.amcharts.com/docs/v5/concepts/colors-gradients-and-patterns/filters/} for more info\n\t * @since 5.5.0\n\t */\n\tsepia?: number;\n\n\t/**\n\t * Invert colors.\n\t *\n\t * Range of values: `0` (no changes) to `1` (completely inverted colors).\n\t *\n\t * IMPORTANT: This setting is not supported in Safari browsers.\n\t *\n\t * @see {@link https://www.amcharts.com/docs/v5/concepts/colors-gradients-and-patterns/filters/} for more info\n\t * @since 5.5.0\n\t */\n\tinvert?: number;\n\n\t/**\n\t * Rotate HUE colors in degrees.\n\t *\n\t * Range of values: `0` to `360`.\n\t *\n\t * IMPORTANT: This setting is not supported in Safari browsers.\n\t *\n\t * @see {@link https://www.amcharts.com/docs/v5/concepts/colors-gradients-and-patterns/filters/} for more info\n\t * @since 5.5.0\n\t */\n\thue?: number;\n\n}\n\nexport interface ISpritePrivate extends IEntityPrivate {\n\t/**\n\t * @ignore\n\t */\n\tcustomData?: any;\n\n\t/**\n\t * @ignore\n\t */\n\tx?: number;\n\n\t/**\n\t * @ignore\n\t */\n\ty?: number;\n\n\t/**\n\t * @ignore\n\t */\n\twidth?: number;\n\n\t/**\n\t * @ignore\n\t */\n\theight?: number;\n\n\t/**\n\t * @ignore\n\t */\n\tvisible?: boolean;\n\n\t/**\n\t * Is element currently showing a tooltip?\n\t */\n\tshowingTooltip?: boolean;\n\n\t/**\n\t * @ignore\n\t */\n\ttouchHovering?: boolean;\n\n\t/**\n\t * @ignore\n\t */\n\tfocusElement?: {\n\t\tdom: HTMLDivElement,\n\t\tdisposers: Array<IDisposer>,\n\t};\n\n\t/**\n\t * An element tooltip should inherit its colors from.\n\t */\n\ttooltipTarget?: Graphics;\n\n\t/**\n\t * @ignore\n\t */\n\tlist?: ListTemplate<Sprite>;\n\n\t/**\n\t * @ignore\n\t */\n\tmaxWidth?: number | null;\n\n\t/**\n\t * @ignore\n\t */\n\tmaxHeight?: number | null;\n\n\t/**\n\t * @ignore\n\t */\n\tminWidth?: number | null;\n\n\t/**\n\t * @ignore\n\t */\n\tminHeight?: number | null;\n\n\t/**\n\t * If set to `false`, its tabindex will be set to -1, so it does not get\n\t * focused with TAB, regardless whether its public setting `focusable` is\n\t * set to `true`.\n\t *\n\t * @since 5.3.16\n\t */\n\tfocusable?: boolean;\n\n\t/**\n\t * If set to `true`, the sprite will check if a mouse pointer is within\n\t * its bounds before dispatching pointer events.\n\t *\n\t * This helps to solve ghost tooltips problem that sometimes appear while\n\t * moving the pointer over interactive objects.\n\t *\n\t * This is set to `true` by default on `Rectangle` and `Circle`.\n\t *\n\t * @since 5.5.0\n\t */\n\ttrustBounds?: boolean;\n\n}\n\n/**\n * An interface defining event objects that originate from pinter interactions.\n */\nexport interface ISpritePointerEvent {\n\n\t/**\n\t * Original event object that caused the interaction, e.g. [[MouseEvent]].\n\t */\n\toriginalEvent: IPointerEvent;\n\n\t/**\n\t * A point where event originated.\n\t */\n\tpoint: IPoint;\n\n\t/**\n\t * Is it a simulated event, e.g. if the event was generated by code rather\n\t * then actual user interaction.\n\t */\n\tsimulated: boolean;\n\n\t/**\n\t * Whether event originated in chart's container or its children.\n\t */\n\tnative?: boolean;\n\n\t/**\n\t * The element on which the event occurred.\n\t */\n\ttarget: Sprite;\n\n}\n\nexport interface ISpriteEvents extends IEntityEvents {\n\n\t/**\n\t * Invoked when element's data item changes.\n\t */\n\tdataitemchanged: {\n\t\toldDataItem: DataItem<IComponentDataItem> | undefined,\n\t\tnewDataItem: DataItem<IComponentDataItem> | undefined\n\t};\n\n\t/**\n\t * Invoked when element's position (X/Y) changes.\n\t */\n\tpositionchanged: {};\n\n\t/**\n\t * Invoked when element's bounds change due to any manipulation to it.\n\t */\n\tboundschanged: {};\n\n\t/**\n\t * Invoked when element dragging starts.\n\t */\n\tdragstart: ISpritePointerEvent;\n\n\t/**\n\t * Invoked when element dragging stops.\n\t */\n\tdragstop: ISpritePointerEvent;\n\n\t/**\n\t * Invoked when element ois being dragged.\n\t */\n\tdragged: ISpritePointerEvent;\n\n\t/**\n\t * Invoked when element is clicked or tapped.\n\t */\n\tclick: ISpritePointerEvent;\n\n\t/**\n\t * Invoked when element is clicked width the right mouse button.\n\t */\n\trightclick: ISpritePointerEvent;\n\n\t/**\n\t * Invoked when element is clicked with the middle mouse button.\n\t */\n\tmiddleclick: ISpritePointerEvent;\n\n\t/**\n\t * Invoked when element is doubleclicked or tapped twice quickly.\n\t */\n\tdblclick: ISpritePointerEvent;\n\n\t/**\n\t * Invoked when pointer moves over the element.\n\t */\n\tpointerover: ISpritePointerEvent;\n\n\t/**\n\t * Invoked when pointer moves outside the element.\n\t */\n\tpointerout: ISpritePointerEvent;\n\n\t/**\n\t * Invoked when pointer button is pressed or touch starts over the element.\n\t */\n\tpointerdown: ISpritePointerEvent;\n\n\t/**\n\t * Invoked when pointer button is released or touch stops over the element.\n\t */\n\tpointerup: ISpritePointerEvent;\n\n\t/**\n\t * Invoked when pointer button is released or touch stops in the window, even\n\t * outside of the element or even chart area.\n\t */\n\tglobalpointerup: ISpritePointerEvent;\n\n\t/**\n\t * Invoked when pointer is moving anywhere in the window, even outside of the\n\t * element or even chart area.\n\t */\n\tglobalpointermove: ISpritePointerEvent;\n\n\t/**\n\t * Invoked when mouse wheel is spinned while pointer is over the element.\n\t */\n\twheel: {\n\t\toriginalEvent: WheelEvent;\n\t\tpoint: IPoint;\n\t};\n\n\t/**\n\t * Invoked when element gains focus.\n\t */\n\tfocus: {\n\t\toriginalEvent: FocusEvent;\n\t\ttarget: Sprite;\n\t};\n\n\t/**\n\t * Invoked when element loses focus.\n\t */\n\tblur: {\n\t\toriginalEvent: FocusEvent;\n\t\ttarget: Sprite;\n\t};\n\n}\n\n/**\n * A base class for all visual elements.\n *\n * @important\n */\nexport abstract class Sprite extends Entity {\n\tdeclare public _settings: ISpriteSettings;\n\tdeclare public _privateSettings: ISpritePrivate;\n\tdeclare public _events: ISpriteEvents;\n\n\tdeclare public events: SpriteEventDispatcher<this, Events<this, this[\"_events\"]>>;\n\n\tpublic abstract _display: IDisplayObject;\n\n\tpublic _adjustedLocalBounds: IBounds = { left: 0, right: 0, top: 0, bottom: 0 };\n\n\tpublic _localBounds: IBounds = { left: 0, right: 0, top: 0, bottom: 0 };\n\n\tpublic static className: string = \"Sprite\";\n\tpublic static classNames: Array<string> = Entity.classNames.concat([Sprite.className]);\n\n\tpublic _parent: Container | undefined;\n\tprotected _dataItem: DataItem<IComponentDataItem> | undefined;\n\n\tprotected _templateField: Template<this> | undefined;\n\n\tprotected _sizeDirty: boolean = false;\n\n\t// Will be true only when dragging\n\tpublic _isDragging: boolean = false;\n\n\t// The event when the dragging starts\n\tprotected _dragEvent: ISpritePointerEvent | undefined;\n\n\t// The position when dragging starts\n\tprotected _dragPoint: IPoint | undefined;\n\n\tprotected _isHidden: boolean = false;\n\n\tprotected _isShowing: boolean = false;\n\n\tprotected _isHiding: boolean = false;\n\n\tprotected _isDown: boolean = false;\n\tpublic _downPoint: IPoint | undefined;\n\n\tpublic _downPoints: { [index: number]: IPoint } = {};\n\n\tpublic _toggleDp: IDisposer | undefined;\n\n\tprotected _dragDp: MultiDisposer | undefined;\n\n\tprotected _tooltipDp: MultiDisposer | undefined;\n\n\tprotected _hoverDp: MultiDisposer | undefined;\n\n\tprotected _focusDp: MultiDisposer | undefined;\n\n\tprotected _tooltipMoveDp: IDisposer | undefined;\n\n\tprotected _tooltipPointerDp: MultiDisposer | undefined;\n\n\tprotected _statesHandled: boolean = false;\n\n\tprotected _afterNew() {\n\t\tthis.setPrivateRaw(\"visible\", true);\n\t\tsuper._afterNew();\n\t}\n\n\t/**\n\t * Marks some setting as dirty. Could be used to trigger adapter.\n\t * @param key \n\t */\n\tpublic markDirtyKey<Key extends keyof this[\"_settings\"]>(key: Key) {\n\t\tthis._markDirtyKey(key);\n\t}\n\n\tpublic _markDirtyKey<Key extends keyof this[\"_settings\"]>(key: Key) {\n\t\tsuper._markDirtyKey(key);\n\t\tif (key == \"x\" || key == \"y\" || key == \"dx\" || key == \"dy\") {\n\t\t\tthis.markDirtyBounds();\n\t\t\tthis._addPercentagePositionChildren();\n\t\t\tthis.markDirtyPosition();\n\t\t}\n\t}\n\n\tpublic _markDirtyPrivateKey<Key extends keyof this[\"_privateSettings\"]>(key: Key) {\n\t\tsuper._markDirtyPrivateKey(key);\n\t\tif (key == \"x\" || key == \"y\") {\n\t\t\tthis.markDirtyPosition();\n\t\t}\n\t}\n\n\tprotected _removeTemplateField(): void {\n\t\tif (this._templateField) {\n\t\t\tthis._templateField._removeObjectTemplate(this);\n\t\t}\n\t}\n\n\tprotected _createEvents(): SpriteEventDispatcher<this, Events<this, this[\"_events\"]>> {\n\t\treturn new SpriteEventDispatcher(this);\n\t}\n\n\tpublic _processTemplateField(): void {\n\t\tlet template;\n\n\t\tconst field = this.get(\"templateField\");\n\n\t\tif (field) {\n\t\t\tconst dataItem = this.dataItem;\n\t\t\tif (dataItem) {\n\t\t\t\tconst context = dataItem.dataContext;\n\t\t\t\tif (context) {\n\t\t\t\t\ttemplate = (context as any)[field];\n\n\t\t\t\t\tif (!(template instanceof Template) && template) {\n\t\t\t\t\t\ttemplate = Template.new(template);\n\t\t\t\t\t}\n\t\t\t\t}\n\t\t\t}\n\t\t}\n\n\t\tif (this._templateField !== template) {\n\t\t\tthis._removeTemplateField();\n\n\t\t\tthis._templateField = template;\n\n\t\t\tif (template) {\n\t\t\t\ttemplate._setObjectTemplate(this);\n\t\t\t}\n\n\t\t\tthis._applyTemplates();\n\t\t}\n\t}\n\n\t// TODO change this to run before the element is added to the parent, so that way\n\t//      it doesn't need to apply the themes twice\n\tpublic _setDataItem(dataItem?: DataItem<IComponentDataItem>): void {\n\t\tconst oldDataItem = this._dataItem\n\t\tthis._dataItem = dataItem;\n\t\tthis._processTemplateField();\n\t\tconst eventType = \"dataitemchanged\";\n\t\tif (dataItem != oldDataItem) {\n\t\t\tif (this.events.isEnabled(eventType)) {\n\t\t\t\tthis.events.dispatch(eventType, {\n\t\t\t\t\ttype: eventType,\n\t\t\t\t\ttarget: this,\n\t\t\t\t\toldDataItem: oldDataItem,\n\t\t\t\t\tnewDataItem: dataItem\n\t\t\t\t});\n\t\t\t}\n\t\t}\n\t}\n\n\t/**\n\t * A [[DataItem]] used for this element.\n\t *\n\t * NOTE: data item is being assigned automatically in most cases where it\n\t * matters. Use this accessor to set data item only if you know what you're\n\t * doing.\n\t *\n\t * @param  value  Data item\n\t */\n\tpublic set dataItem(value: DataItem<IComponentDataItem> | undefined) {\n\t\tthis._setDataItem(value);\n\t}\n\n\t/**\n\t * @return DataItem\n\t */\n\tpublic get dataItem(): DataItem<IComponentDataItem> | undefined {\n\t\tif (this._dataItem) {\n\t\t\treturn this._dataItem;\n\n\t\t} else {\n\t\t\tlet parent = this._parent;\n\n\t\t\twhile (parent) {\n\t\t\t\tif (parent._dataItem) {\n\t\t\t\t\treturn parent._dataItem;\n\n\t\t\t\t} else {\n\t\t\t\t\tparent = parent._parent;\n\t\t\t\t}\n\t\t\t}\n\t\t}\n\t}\n\n\tprotected _addPercentageSizeChildren() {\n\t\tlet parent = this.parent;\n\t\tif (parent) {\n\t\t\tif (this.get(\"width\") instanceof Percent || this.get(\"height\") instanceof Percent) {\n\t\t\t\t$array.pushOne(parent._percentageSizeChildren, this);\n\t\t\t} else {\n\t\t\t\t$array.removeFirst(parent._percentageSizeChildren, this);\n\t\t\t}\n\t\t}\n\t}\n\n\tprotected _addPercentagePositionChildren() {\n\t\tlet parent = this.parent;\n\t\tif (parent) {\n\t\t\tif (this.get(\"x\") instanceof Percent || this.get(\"y\") instanceof Percent) {\n\t\t\t\t$array.pushOne(parent._percentagePositionChildren, this);\n\t\t\t} else {\n\t\t\t\t$array.removeFirst(parent._percentagePositionChildren, this);\n\t\t\t}\n\t\t}\n\t}\n\n\t/**\n\t * @ignore\n\t */\n\tpublic markDirtyPosition() {\n\t\tthis._root._addDirtyPosition(this);\n\t}\n\n\tprotected updatePivotPoint() {\n\t\tconst bounds = this._localBounds;\n\t\tif (bounds) {\n\t\t\tconst centerX = this.get(\"centerX\");\n\t\t\tif (centerX != null) {\n\t\t\t\tthis._display.pivot.x = bounds.left + $utils.relativeToValue(centerX!, bounds.right - bounds.left);\n\t\t\t}\n\n\t\t\tconst centerY = this.get(\"centerY\");\n\t\t\tif (centerY != null) {\n\t\t\t\tthis._display.pivot.y = bounds.top + $utils.relativeToValue(centerY!, bounds.bottom - bounds.top);\n\t\t\t}\n\t\t}\n\t}\n\n\tpublic _beforeChanged() {\n\t\tsuper._beforeChanged();\n\n\t\t// handling states in beforeChanged, otherwise states is not applied without animated theme\n\t\tthis._handleStates();\n\n\t\tif (this.isDirty(\"tooltip\")) {\n\t\t\tconst previous = this._prevSettings.tooltip;\n\t\t\tif (previous) {\n\t\t\t\tprevious.dispose();\n\t\t\t}\n\t\t}\n\n\t\tif (this.isDirty(\"layer\") || this.isDirty(\"layerMargin\")) {\n\t\t\tthis._display.setLayer(this.get(\"layer\"), this.get(\"layerMargin\"));\n\t\t\tthis.markDirtyLayer();\n\t\t}\n\n\t\tif (this.isDirty(\"tooltipPosition\")) {\n\t\t\tconst tooltipMoveDp = this._tooltipMoveDp;\n\t\t\tif (tooltipMoveDp) {\n\t\t\t\ttooltipMoveDp.dispose();\n\t\t\t\tthis._tooltipMoveDp = undefined;\n\t\t\t}\n\n\t\t\tconst tooltipPointerDp = this._tooltipPointerDp;\n\t\t\tif (tooltipPointerDp) {\n\t\t\t\ttooltipPointerDp.dispose();\n\t\t\t\tthis._tooltipPointerDp = undefined;\n\t\t\t}\n\n\t\t\tif (this.get(\"tooltipPosition\") == \"pointer\") {\n\n\t\t\t\tif (this.isHover()) {\n\t\t\t\t\tthis._tooltipMoveDp = this.events.on(\"globalpointermove\", (e) => {\n\t\t\t\t\t\tthis.showTooltip(e.point);\n\t\t\t\t\t})\n\t\t\t\t}\n\n\t\t\t\tthis._tooltipPointerDp = new MultiDisposer([\n\t\t\t\t\tthis.events.on(\"pointerover\", () => {\n\t\t\t\t\t\tthis._tooltipMoveDp = this.events.on(\"globalpointermove\", (e) => {\n\t\t\t\t\t\t\tthis.showTooltip(e.point);\n\t\t\t\t\t\t})\n\t\t\t\t\t}),\n\n\t\t\t\t\tthis.events.on(\"pointerout\", () => {\n\t\t\t\t\t\tconst tooltipMoveDp = this._tooltipMoveDp;\n\t\t\t\t\t\tif (tooltipMoveDp) {\n\t\t\t\t\t\t\ttooltipMoveDp.dispose();\n\t\t\t\t\t\t\tthis._tooltipMoveDp = undefined;\n\t\t\t\t\t\t}\n\t\t\t\t\t})])\n\t\t\t}\n\t\t}\n\t}\n\n\tprotected _handleStates() {\n\t\tif (!this._statesHandled) {\n\t\t\tif (this.isDirty(\"active\")) {\n\t\t\t\tif (this.get(\"active\")) {\n\t\t\t\t\tthis.states.applyAnimate(\"active\");\n\t\t\t\t\tthis.set(\"ariaChecked\", true);\n\t\t\t\t}\n\t\t\t\telse {\n\t\t\t\t\tif (!this.isHidden()) {\n\t\t\t\t\t\tthis.states.applyAnimate(\"default\");\n\t\t\t\t\t}\n\t\t\t\t\tthis.set(\"ariaChecked\", false);\n\t\t\t\t}\n\t\t\t\tthis.markDirtyAccessibility();\n\t\t\t}\n\n\t\t\tif (this.isDirty(\"disabled\")) {\n\t\t\t\tif (this.get(\"disabled\")) {\n\t\t\t\t\tthis.states.applyAnimate(\"disabled\");\n\t\t\t\t\tthis.set(\"ariaChecked\", false);\n\t\t\t\t}\n\t\t\t\telse {\n\t\t\t\t\tif (!this.isHidden()) {\n\t\t\t\t\t\tthis.states.applyAnimate(\"default\");\n\t\t\t\t\t}\n\t\t\t\t\tthis.set(\"ariaChecked\", true);\n\t\t\t\t}\n\t\t\t\tthis.markDirtyAccessibility();\n\t\t\t}\n\t\t\tthis._statesHandled = true;\n\t\t}\n\t}\n\n\tpublic _changed() {\n\t\tsuper._changed();\n\n\t\tconst display = this._display;\n\t\tconst events = this.events;\n\n\t\tif (this.isDirty(\"draggable\")) {\n\t\t\tconst draggable = this.get(\"draggable\");\n\t\t\tif (draggable) {\n\t\t\t\tthis.set(\"interactive\", true);\n\n\t\t\t\tthis._dragDp = new MultiDisposer([\n\t\t\t\t\tevents.on(\"pointerdown\", (ev) => {\n\t\t\t\t\t\tthis.dragStart(ev);\n\t\t\t\t\t}),\n\n\t\t\t\t\tevents.on(\"globalpointermove\", (ev) => {\n\t\t\t\t\t\tthis.dragMove(ev);\n\t\t\t\t\t}),\n\n\t\t\t\t\tevents.on(\"globalpointerup\", (ev) => {\n\t\t\t\t\t\tthis.dragStop(ev);\n\t\t\t\t\t})])\n\n\t\t\t}\n\t\t\telse {\n\t\t\t\tif (this._dragDp) {\n\t\t\t\t\tthis._dragDp.dispose();\n\t\t\t\t\tthis._dragDp = undefined;\n\t\t\t\t}\n\t\t\t}\n\t\t\tdisplay.cancelTouch = draggable ? true : false;\n\t\t}\n\n\t\tif (this.isDirty(\"tooltipText\") || this.isDirty(\"tooltipHTML\") || this.isDirty(\"showTooltipOn\")) {\n\t\t\tconst tooltipText = this.get(\"tooltipText\");\n\t\t\tconst tooltipHTML = this.get(\"tooltipHTML\");\n\t\t\tconst showTooltipOn = this.get(\"showTooltipOn\", \"hover\");\n\t\t\tif (this._tooltipDp) {\n\t\t\t\tthis._tooltipDp.dispose();\n\t\t\t\tthis._tooltipDp = undefined;\n\t\t\t}\n\t\t\tif (tooltipText || tooltipHTML) {\n\t\t\t\tif (showTooltipOn == \"click\") {\n\t\t\t\t\tthis._tooltipDp = new MultiDisposer([\n\t\t\t\t\t\tevents.on(\"click\", () => {\n\t\t\t\t\t\t\tthis.setTimeout(() => {\n\t\t\t\t\t\t\t\tconst tooltip = this.getTooltip();\n\t\t\t\t\t\t\t\tif (tooltip && !tooltip.isHidden() && tooltip.get(\"tooltipTarget\") === this) {\n\t\t\t\t\t\t\t\t\tthis.hideTooltip();\n\t\t\t\t\t\t\t\t}\n\t\t\t\t\t\t\t\telse {\n\t\t\t\t\t\t\t\t\tthis.showTooltip();\n\t\t\t\t\t\t\t\t}\n\t\t\t\t\t\t\t}, 10);\n\t\t\t\t\t\t}),\n\t\t\t\t\t\t$utils.addEventListener(document, \"click\", (_ev: MouseEvent) => {\n\t\t\t\t\t\t\tthis.hideTooltip();\n\t\t\t\t\t\t})\n\t\t\t\t\t]);\n\t\t\t\t\tthis._disposers.push(this._tooltipDp);\n\t\t\t\t}\n\t\t\t\telse if (showTooltipOn == \"always\") {\n\t\t\t\t\t// nothing\n\t\t\t\t}\n\t\t\t\telse {\n\t\t\t\t\tthis._tooltipDp = new MultiDisposer([\n\t\t\t\t\t\tevents.on(\"pointerover\", () => {\n\t\t\t\t\t\t\tthis.showTooltip();\n\t\t\t\t\t\t}),\n\t\t\t\t\t\tevents.on(\"pointerout\", () => {\n\t\t\t\t\t\t\tthis.hideTooltip();\n\t\t\t\t\t\t})\n\t\t\t\t\t]);\n\t\t\t\t\tthis._disposers.push(this._tooltipDp);\n\t\t\t\t}\n\t\t\t}\n\t\t}\n\n\t\tif (this.isDirty(\"toggleKey\")) {\n\t\t\tlet toggleKey = this.get(\"toggleKey\") as any;\n\t\t\tif (toggleKey && toggleKey != \"none\") {\n\t\t\t\tthis._toggleDp = events.on(\"click\", () => {\n\t\t\t\t\tif (!this._isDragging) {\n\t\t\t\t\t\tthis.set(toggleKey, !this.get(toggleKey));\n\t\t\t\t\t}\n\t\t\t\t})\n\t\t\t}\n\t\t\telse {\n\t\t\t\tif (this._toggleDp) {\n\t\t\t\t\tthis._toggleDp.dispose();\n\t\t\t\t\tthis._toggleDp = undefined;\n\t\t\t\t}\n\t\t\t}\n\t\t}\n\n\n\t\tif (this.isDirty(\"opacity\")) {\n\t\t\tdisplay.alpha = Math.max(0, this.get(\"opacity\", 1));\n\t\t\tif (this.get(\"focusable\")) {\n\t\t\t\tthis.markDirtyAccessibility();\n\t\t\t}\n\t\t}\n\n\t\tif (this.isDirty(\"rotation\")) {\n\t\t\tthis.markDirtyBounds();\n\t\t\tdisplay.angle = this.get(\"rotation\", 0);\n\t\t}\n\n\t\tif (this.isDirty(\"scale\")) {\n\t\t\tthis.markDirtyBounds();\n\t\t\tdisplay.scale = this.get(\"scale\", 0);\n\t\t}\n\n\t\tif (this.isDirty(\"centerX\") || this.isDirty(\"centerY\")) {\n\t\t\tthis.markDirtyBounds();\n\t\t\tthis.updatePivotPoint();\n\t\t}\n\n\t\tif (this.isDirty(\"visible\") || this.isPrivateDirty(\"visible\") || this.isDirty(\"forceHidden\")) {\n\t\t\tif (!this.get(\"visible\") || !this.getPrivate(\"visible\") || this.get(\"forceHidden\")) {\n\t\t\t\tdisplay.visible = false;\n\t\t\t\tthis.hideTooltip();\n\t\t\t}\n\t\t\telse {\n\t\t\t\tdisplay.visible = true;\n\t\t\t}\n\n\t\t\tthis.markDirtyBounds();\n\t\t\tif (this.get(\"focusable\")) {\n\t\t\t\tthis.markDirtyAccessibility();\n\t\t\t}\n\t\t}\n\n\t\tif (this.isDirty(\"width\") || this.isDirty(\"height\")) {\n\t\t\tthis.markDirtyBounds();\n\t\t\tthis._addPercentageSizeChildren();\n\n\t\t\tconst parent = this.parent;\n\t\t\tif (parent) {\n\t\t\t\tif ((this.isDirty(\"width\") && this.get(\"width\") instanceof Percent) || (this.isDirty(\"height\") && this.get(\"height\") instanceof Percent)) {\n\t\t\t\t\tparent.markDirty();\n\t\t\t\t\tparent._prevWidth = 0;\n\t\t\t\t}\n\t\t\t}\n\n\t\t\tthis._sizeDirty = true;\n\t\t}\n\n\t\tif (this.isDirty(\"maxWidth\") || this.isDirty(\"maxHeight\") || this.isPrivateDirty(\"width\") || this.isPrivateDirty(\"height\") || this.isDirty(\"minWidth\") || this.isDirty(\"minHeight\") || this.isPrivateDirty(\"maxWidth\") || this.isPrivateDirty(\"maxHeight\") || this.isPrivateDirty(\"minWidth\") || this.isPrivateDirty(\"minHeight\") || this.isDirty(\"marginLeft\") || this.isDirty(\"marginTop\") || this.isDirty(\"marginRight\") || this.isDirty(\"marginBottom\")) {\n\t\t\tthis.markDirtyBounds();\n\t\t\tthis._sizeDirty = true;\n\t\t}\n\n\t\tif (this._sizeDirty) {\n\t\t\tthis._updateSize();\n\t\t}\n\n\t\tif (this.isDirty(\"wheelable\")) {\n\t\t\tconst wheelable = this.get(\"wheelable\");\n\t\t\tif (wheelable) {\n\t\t\t\tthis.set(\"interactive\", true);\n\t\t\t}\n\t\t\tdisplay.wheelable = wheelable ? true : false;\n\t\t}\n\n\t\t// Accessibility\n\t\tif (this.isDirty(\"tabindexOrder\") || this.isDirty(\"focusableGroup\")) {\n\t\t\tif (this.get(\"focusable\")) {\n\t\t\t\tthis._root._registerTabindexOrder(this);\n\t\t\t}\n\t\t\telse {\n\t\t\t\tthis._root._unregisterTabindexOrder(this);\n\t\t\t}\n\t\t}\n\n\t\tif (this.isDirty(\"filter\")) {\n\t\t\t//this.markDirtyBounds();\n\t\t\tdisplay.filter = this.get(\"filter\");\n\t\t}\n\n\t\tlet filter = this.get(\"filter\", \"\");\n\n\t\tif (this.isDirty(\"blur\")) {\n\t\t\tconst blur = this.get(\"blur\", 0);\n\t\t\tif (blur != 0) {\n\t\t\t\tfilter += \" blur(\" + blur + \"px)\";\n\t\t\t}\n\t\t}\n\n\t\tif (this.isDirty(\"saturate\")) {\n\t\t\tconst saturate = this.get(\"saturate\", 1);\n\t\t\tif (saturate != 1) {\n\t\t\t\tfilter += \" saturate(\" + saturate + \")\";\n\t\t\t}\n\t\t}\n\n\t\tif (this.isDirty(\"brightness\")) {\n\t\t\tconst brightness = this.get(\"brightness\", 1);\n\t\t\tif (brightness != 1) {\n\t\t\t\tfilter += \" brightness(\" + brightness + \")\";\n\t\t\t}\n\t\t}\n\n\t\tif (this.isDirty(\"contrast\")) {\n\t\t\tconst contrast = this.get(\"contrast\", 1);\n\t\t\tif (contrast != 1) {\n\t\t\t\tfilter += \" contrast(\" + contrast + \")\";\n\t\t\t}\n\t\t}\n\n\t\tif (this.isDirty(\"sepia\")) {\n\t\t\tconst sepia = this.get(\"sepia\", 0);\n\t\t\tif (sepia != 0) {\n\t\t\t\tfilter += \" sepia(\" + sepia + \")\";\n\t\t\t}\n\t\t}\n\n\t\tif (this.isDirty(\"hue\")) {\n\t\t\tconst hue = this.get(\"hue\", 0);\n\t\t\tif (hue != 0) {\n\t\t\t\tfilter += \" hue-rotate(\" + hue + \"deg)\";\n\t\t\t}\n\t\t}\n\n\t\tif (this.isDirty(\"invert\")) {\n\t\t\tconst invert = this.get(\"invert\", 0);\n\t\t\tif (invert != 0) {\n\t\t\t\tfilter += \" invert(\" + invert + \")\";\n\t\t\t}\n\t\t}\n\n\n\t\tif (filter) {\n\t\t\tdisplay.filter = filter;\n\t\t}\n\n\t\tif (this.isDirty(\"cursorOverStyle\")) {\n\t\t\tdisplay.cursorOverStyle = this.get(\"cursorOverStyle\");\n\t\t}\n\n\t\tif (this.isDirty(\"hoverOnFocus\")) {\n\t\t\tif (this.get(\"hoverOnFocus\")) {\n\t\t\t\tthis._focusDp = new MultiDisposer([\n\t\t\t\t\tevents.on(\"focus\", () => {\n\t\t\t\t\t\t// TODO: proper hover, not just tooltip\n\t\t\t\t\t\tthis.showTooltip();\n\t\t\t\t\t}),\n\n\t\t\t\t\tevents.on(\"blur\", () => {\n\t\t\t\t\t\t// TODO: proper hover, not just tooltip\n\t\t\t\t\t\tthis.hideTooltip();\n\t\t\t\t\t})]);\n\t\t\t}\n\t\t\telse {\n\t\t\t\tif (this._focusDp) {\n\t\t\t\t\tthis._focusDp.dispose();\n\t\t\t\t\tthis._focusDp = undefined;\n\t\t\t\t}\n\t\t\t}\n\t\t}\n\n\t\tif (this.isDirty(\"focusable\")) {\n\t\t\tif (this.get(\"focusable\")) {\n\t\t\t\tthis._root._registerTabindexOrder(this);\n\t\t\t}\n\t\t\telse {\n\t\t\t\tthis._root._unregisterTabindexOrder(this);\n\t\t\t}\n\t\t\tthis.markDirtyAccessibility();\n\t\t\tthis._disposers.push(events.on(\"blur\", () => {\n\t\t\t\tthis.setPrivateRaw(\"touchHovering\", false);\n\t\t\t}));\n\t\t}\n\n\t\tif (this.isPrivateDirty(\"focusable\")) {\n\t\t\tthis.markDirtyAccessibility();\n\t\t}\n\n\t\tif (this.isDirty(\"role\") || this.isDirty(\"ariaLive\") || this.isDirty(\"ariaChecked\") || this.isDirty(\"ariaHidden\") || this.isDirty(\"ariaOrientation\") || this.isDirty(\"ariaValueNow\") || this.isDirty(\"ariaValueMin\") || this.isDirty(\"ariaValueMax\") || this.isDirty(\"ariaValueText\") || this.isDirty(\"ariaLabel\") || this.isDirty(\"ariaControls\")) {\n\t\t\t// display.accessibility.ariaLabel = populateString(this, this.get(\"ariaLabel\", \"\"));\n\t\t\t// @todo make sure ariaLabel gets populated in Root\n\t\t\tthis.markDirtyAccessibility();\n\t\t}\n\n\t\tif (this.isDirty(\"exportable\")) {\n\t\t\tdisplay.exportable = this.get(\"exportable\");\n\t\t}\n\n\t\tif (this.isDirty(\"interactive\")) {\n\t\t\tconst events = this.events;\n\t\t\tif (this.get(\"interactive\") && !events.isDisposed()) {\n\t\t\t\tthis._hoverDp = new MultiDisposer([\n\t\t\t\t\tevents.on(\"click\", (ev) => {\n\t\t\t\t\t\tif ($utils.isTouchEvent(ev.originalEvent)) {\n\t\t\t\t\t\t\tif (!this.getPrivate(\"touchHovering\")) {\n\t\t\t\t\t\t\t\tthis.setTimeout(() => {\n\t\t\t\t\t\t\t\t\tthis._handleOver();\n\t\t\t\t\t\t\t\t\tif (this.get(\"tooltipText\") || this.get(\"tooltipHTML\")) {\n\t\t\t\t\t\t\t\t\t\tthis.showTooltip();\n\t\t\t\t\t\t\t\t\t}\n\t\t\t\t\t\t\t\t\tthis.setPrivateRaw(\"touchHovering\", true);\n\t\t\t\t\t\t\t\t\tthis.events.dispatch(\"pointerover\", {\n\t\t\t\t\t\t\t\t\t\ttype: \"pointerover\",\n\t\t\t\t\t\t\t\t\t\ttarget: ev.target,\n\t\t\t\t\t\t\t\t\t\toriginalEvent: ev.originalEvent,\n\t\t\t\t\t\t\t\t\t\tpoint: ev.point,\n\t\t\t\t\t\t\t\t\t\tsimulated: ev.simulated\n\t\t\t\t\t\t\t\t\t});\n\t\t\t\t\t\t\t\t}, 10)\n\t\t\t\t\t\t\t}\n\t\t\t\t\t\t}\n\t\t\t\t\t}),\n\n\t\t\t\t\tevents.on(\"globalpointerup\", (ev) => {\n\t\t\t\t\t\tif ($utils.isTouchEvent(ev.originalEvent)) {\n\t\t\t\t\t\t\tif (this.getPrivate(\"touchHovering\")) {\n\t\t\t\t\t\t\t\tthis._handleOut();\n\t\t\t\t\t\t\t\tif (this.get(\"tooltipText\") || this.get(\"tooltipHTML\")) {\n\t\t\t\t\t\t\t\t\tthis.hideTooltip();\n\t\t\t\t\t\t\t\t}\n\t\t\t\t\t\t\t\tthis.setPrivateRaw(\"touchHovering\", false);\n\t\t\t\t\t\t\t\tthis.events.dispatch(\"pointerout\", {\n\t\t\t\t\t\t\t\t\ttype: \"pointerout\",\n\t\t\t\t\t\t\t\t\ttarget: ev.target,\n\t\t\t\t\t\t\t\t\toriginalEvent: ev.originalEvent,\n\t\t\t\t\t\t\t\t\tpoint: ev.point,\n\t\t\t\t\t\t\t\t\tsimulated: ev.simulated\n\t\t\t\t\t\t\t\t});\n\t\t\t\t\t\t\t}\n\t\t\t\t\t\t}\n\n\t\t\t\t\t\tif (this._isDown) {\n\t\t\t\t\t\t\tthis._handleUp(ev);\n\t\t\t\t\t\t}\n\t\t\t\t\t\t//this._isDown = false;\n\t\t\t\t\t}),\n\n\t\t\t\t\tevents.on(\"pointerover\", () => {\n\t\t\t\t\t\tthis._handleOver();\n\t\t\t\t\t}),\n\n\t\t\t\t\tevents.on(\"pointerout\", () => {\n\t\t\t\t\t\tthis._handleOut();\n\t\t\t\t\t}),\n\n\t\t\t\t\tevents.on(\"pointerdown\", (e) => {\n\t\t\t\t\t\tthis._handleDown(e);\n\t\t\t\t\t})\n\t\t\t\t])\n\t\t\t}\n\t\t\telse {\n\t\t\t\tthis._display.interactive = false;\n\t\t\t\tif (this._hoverDp) {\n\t\t\t\t\tthis._hoverDp.dispose();\n\t\t\t\t\tthis._hoverDp = undefined;\n\t\t\t\t}\n\t\t\t}\n\t\t}\n\n\t\tif (this.isDirty(\"forceInactive\")) {\n\t\t\tthis._display.inactive = this.get(\"forceInactive\", null);\n\t\t}\n\n\t\tif (this.get(\"showTooltipOn\") == \"always\" && this._display.visible) {\n\t\t\tthis.showTooltip();\n\t\t}\n\t}\n\n\t/**\n\t * @ignore\n\t * @todo should this be user-accessible?\n\t */\n\tpublic dragStart(e: ISpritePointerEvent) {\n\t\tthis._dragEvent = e;\n\t\tthis.events.stopParentDispatch();\n\t}\n\n\t/**\n\t * @ignore\n\t * @todo should this be user-accessible?\n\t */\n\tpublic dragStop(e: ISpritePointerEvent) {\n\t\tthis._dragEvent = undefined;\n\t\tthis._dragPoint = undefined;\n\t\tthis.events.stopParentDispatch();\n\n\t\tif (this._isDragging) {\n\t\t\tthis._isDragging = false;\n\n\t\t\tconst type = \"dragstop\";\n\t\t\tif (this.events.isEnabled(type)) {\n\t\t\t\tthis.events.dispatch(type, {\n\t\t\t\t\ttype: type,\n\t\t\t\t\ttarget: this,\n\t\t\t\t\toriginalEvent: e.originalEvent,\n\t\t\t\t\tpoint: e.point,\n\t\t\t\t\tsimulated: e.simulated,\n\t\t\t\t});\n\t\t\t}\n\t\t}\n\t}\n\n\tprotected _handleOver() {\n\t\tif (!this.isHidden()) {\n\t\t\tif (this.get(\"active\") && this.states.lookup(\"hoverActive\")) {\n\t\t\t\tthis.states.applyAnimate(\"hoverActive\");\n\t\t\t}\n\t\t\telse if (this.get(\"disabled\") && this.states.lookup(\"hoverDisabled\")) {\n\t\t\t\tthis.states.applyAnimate(\"hoverDisabled\");\n\t\t\t}\n\t\t\telse {\n\t\t\t\tthis.states.applyAnimate(\"hover\");\n\t\t\t}\n\t\t\tif (this.get(\"draggable\") && this._isDown && this.states.lookup(\"down\")) {\n\t\t\t\tthis.states.applyAnimate(\"down\");\n\t\t\t}\n\t\t}\n\t}\n\n\tprotected _handleOut() {\n\t\tif (!this.isHidden()) {\n\t\t\tif (this.get(\"active\") && this.states.lookup(\"active\")) {\n\t\t\t\tthis.states.applyAnimate(\"active\");\n\t\t\t}\n\t\t\telse if (this.get(\"disabled\") && this.states.lookup(\"disabled\")) {\n\t\t\t\tthis.states.applyAnimate(\"disabled\");\n\t\t\t}\n\t\t\telse {\n\t\t\t\tif (this.states.lookup(\"hover\") || this.states.lookup(\"hoverActive\")) {\n\t\t\t\t\tthis.states.applyAnimate(\"default\");\n\t\t\t\t}\n\t\t\t}\n\t\t\tif (this.get(\"draggable\") && this._isDown && this.states.lookup(\"down\")) {\n\t\t\t\tthis.states.applyAnimate(\"down\");\n\t\t\t}\n\t\t}\n\t}\n\n\tprotected _handleUp(e: ISpritePointerEvent) {\n\t\tif (!this.isHidden()) {\n\t\t\tif (this.get(\"active\") && this.states.lookup(\"active\")) {\n\t\t\t\tthis.states.applyAnimate(\"active\");\n\t\t\t}\n\t\t\telse if (this.get(\"disabled\") && this.states.lookup(\"disabled\")) {\n\t\t\t\tthis.states.applyAnimate(\"disabled\");\n\t\t\t}\n\t\t\telse if (this.states.lookup(\"down\")) {\n\t\t\t\tif (this.isHover()) {\n\t\t\t\t\tthis.states.applyAnimate(\"hover\");\n\t\t\t\t}\n\t\t\t\telse {\n\t\t\t\t\tthis.states.applyAnimate(\"default\");\n\t\t\t\t}\n\t\t\t}\n\n\n\t\t\t// @todo remove this once migrated to _downPoints\n\t\t\tthis._downPoint = undefined;\n\n\t\t\tconst pointerId = $utils.getPointerId(e.originalEvent);\n\t\t\tdelete this._downPoints[pointerId];\n\n\t\t\tif ($object.keys(this._downPoints).length == 0) {\n\t\t\t\tthis._isDown = false;\n\t\t\t}\n\t\t}\n\t}\n\n\tpublic _hasMoved(e: ISpritePointerEvent): boolean {\n\t\t// @todo remove this once migrated to _downPoints\n\t\t// if (this._downPoint) {\n\t\t// \tconst x = Math.abs(this._downPoint.x - e.point.x);\n\t\t// \tconst y = Math.abs(this._downPoint.y - e.point.y);\n\t\t// \treturn (x > 5) || (y > 5);\n\t\t// }\n\n\t\tconst pointerId = $utils.getPointerId(e.originalEvent);\n\t\tconst downPoint = this._downPoints[pointerId];\n\t\tif (downPoint) {\n\t\t\tconst x = Math.abs(downPoint.x - e.point.x);\n\t\t\tconst y = Math.abs(downPoint.y - e.point.y);\n\t\t\treturn (x > 5) || (y > 5);\n\t\t}\n\n\t\treturn false;\n\t}\n\n\tpublic _hasDown(): boolean {\n\t\treturn $object.keys(this._downPoints).length > 0;\n\t}\n\n\tprotected _handleDown(e: ISpritePointerEvent) {\n\n\t\tconst parent = this.parent;\n\t\tif (parent && !this.get(\"draggable\")) {\n\t\t\tparent._handleDown(e);\n\t\t}\n\n\t\tif (this.get(\"interactive\") && !this.isHidden()) {\n\t\t\tif (this.states.lookup(\"down\")) {\n\t\t\t\tthis.states.applyAnimate(\"down\");\n\t\t\t}\n\t\t\tthis._downPoint = {\n\t\t\t\tx: e.point.x,\n\t\t\t\ty: e.point.y\n\t\t\t};\n\n\n\t\t\t// @todo remove this once migrated to _downPoints\n\t\t\tthis._isDown = true;\n\n\t\t\tconst pointerId = $utils.getPointerId(e.originalEvent);\n\t\t\tthis._downPoints[pointerId] = {\n\t\t\t\tx: e.point.x,\n\t\t\t\ty: e.point.y\n\t\t\t};\n\t\t}\n\t}\n\n\t/**\n\t * @ignore\n\t * @todo should this be user-accessible?\n\t */\n\tpublic dragMove(e: ISpritePointerEvent) {\n\t\tlet dragEvent = this._dragEvent;\n\n\t\tif (dragEvent) {\n\n\t\t\tif (dragEvent.simulated && !e.simulated) {\n\t\t\t\treturn true;\n\t\t\t}\n\n\t\t\tlet angle = 0;\n\n\t\t\tlet parent = this.parent;\n\t\t\tlet scale = 1;\n\n\t\t\twhile (parent != null) {\n\t\t\t\tangle += parent.get(\"rotation\", 0);\n\t\t\t\tparent = parent.parent;\n\t\t\t\tif (parent) {\n\t\t\t\t\tscale *= parent.get(\"scale\", 1);\n\t\t\t\t}\n\t\t\t}\n\n\t\t\tlet x = (e.point.x - dragEvent.point.x) / scale;\n\t\t\tlet y = (e.point.y - dragEvent.point.y) / scale;\n\n\t\t\tconst events = this.events;\n\n\t\t\tif (dragEvent.simulated && !this._isDragging) {\n\t\t\t\tthis._isDragging = true;\n\t\t\t\tthis._dragEvent = e;\n\n\t\t\t\tthis._dragPoint = {\n\t\t\t\t\tx: this.x(),\n\t\t\t\t\ty: this.y()\n\t\t\t\t};\n\n\t\t\t\tconst type = \"dragstart\";\n\t\t\t\tif (events.isEnabled(type)) {\n\t\t\t\t\tevents.dispatch(type, {\n\t\t\t\t\t\ttype: type,\n\t\t\t\t\t\ttarget: this,\n\t\t\t\t\t\toriginalEvent: e.originalEvent,\n\t\t\t\t\t\tpoint: e.point,\n\t\t\t\t\t\tsimulated: e.simulated,\n\t\t\t\t\t});\n\t\t\t\t}\n\t\t\t}\n\n\t\t\tif (this._isDragging) {\n\t\t\t\tlet dragPoint = this._dragPoint!;\n\n\t\t\t\tthis.set(\"x\", dragPoint.x + x * $math.cos(angle) + y * $math.sin(angle));\n\t\t\t\tthis.set(\"y\", dragPoint.y + y * $math.cos(angle) - x * $math.sin(angle));\n\n\t\t\t\tconst type = \"dragged\";\n\t\t\t\tif (events.isEnabled(type)) {\n\t\t\t\t\tevents.dispatch(type, {\n\t\t\t\t\t\ttype: type,\n\t\t\t\t\t\ttarget: this,\n\t\t\t\t\t\toriginalEvent: e.originalEvent,\n\t\t\t\t\t\tpoint: e.point,\n\t\t\t\t\t\tsimulated: e.simulated,\n\t\t\t\t\t});\n\t\t\t\t}\n\n\t\t\t} else {\n\t\t\t\tif (Math.hypot(x, y) > 5) {\n\t\t\t\t\tthis._isDragging = true;\n\t\t\t\t\tthis._dragEvent = e;\n\n\t\t\t\t\tthis._dragPoint = {\n\t\t\t\t\t\tx: this.x(),\n\t\t\t\t\t\ty: this.y()\n\t\t\t\t\t};\n\n\t\t\t\t\tconst type = \"dragstart\";\n\t\t\t\t\tif (events.isEnabled(type)) {\n\t\t\t\t\t\tevents.dispatch(type, {\n\t\t\t\t\t\t\ttype: type,\n\t\t\t\t\t\t\ttarget: this,\n\t\t\t\t\t\t\toriginalEvent: e.originalEvent,\n\t\t\t\t\t\t\tpoint: e.point,\n\t\t\t\t\t\t\tsimulated: e.simulated\n\t\t\t\t\t\t});\n\t\t\t\t\t}\n\t\t\t\t}\n\t\t\t}\n\t\t}\n\t}\n\n\tpublic _updateSize() {\n\n\t}\n\n\tpublic _getBounds() {\n\t\tthis._localBounds = this._display.getLocalBounds();\n\t}\n\n\t/**\n\t * Returns depth (how deep in the hierachy of the content tree) of this\n\t * element.\n\t *\n\t * @return Depth\n\t */\n\tpublic depth(): number {\n\t\tlet self: Container | undefined = this.parent;\n\t\tlet depth = 0;\n\n\t\twhile (true) {\n\t\t\tif (self) {\n\t\t\t\t++depth;\n\t\t\t\tself = self.parent;\n\n\t\t\t} else {\n\t\t\t\treturn depth;\n\t\t\t}\n\t\t}\n\t}\n\n\t/**\n\t * @ignore\n\t */\n\tpublic markDirtySize(): void {\n\t\tthis._sizeDirty = true;\n\t\tthis.markDirty();\n\t}\n\n\t/**\n\t * @ignore\n\t */\n\tpublic markDirtyBounds(): void {\n\t\tconst display = this._display;\n\t\tif (this.get(\"isMeasured\")) {\n\t\t\tthis._root._addDirtyBounds(this);\n\t\t\tdisplay.isMeasured = true;\n\t\t\tdisplay.invalidateBounds();\n\n\t\t\tconst parent = this.parent;\n\n\t\t\tif (parent && this.get(\"position\") != \"absolute\") {\n\t\t\t\tif (parent.get(\"width\") == null || parent.get(\"height\") == null || parent.get(\"layout\")) {\n\t\t\t\t\tparent.markDirtyBounds();\n\t\t\t\t}\n\t\t\t}\n\n\t\t\tif (this.get(\"focusable\") && this.isFocus()) {\n\t\t\t\tthis.markDirtyAccessibility();\n\t\t\t}\n\t\t}\n\t}\n\n\t/**\n\t * @ignore\n\t */\n\tpublic markDirtyAccessibility(): void {\n\t\t//if (this._root.focused(this)) {\n\t\tthis._root._invalidateAccessibility(this);\n\t\t//}\n\t}\n\n\t/**\n\t * @ignore\n\t */\n\tpublic markDirtyLayer() {\n\t\t//this._display.markDirtyLayer(this.isDirty(\"opacity\") || this.isDirty(\"visible\")); https://codepen.io/team/amcharts/pen/gOWZPmP <- problems\n\t\tthis._display.markDirtyLayer(true);\n\t}\n\n\t/**\n\t * @ignore\n\t */\n\tpublic markDirty() {\n\t\tsuper.markDirty();\n\t\tthis.markDirtyLayer();\n\t}\n\n\tpublic _updateBounds() {\n\t\tconst oldBounds = this._adjustedLocalBounds;\n\n\t\tlet newBounds: IBounds;\n\n\t\t// if display.visible == false, it still returns bounds\n\t\tif (!this.get(\"visible\") || !this.getPrivate(\"visible\") || this.get(\"forceHidden\")) {\n\t\t\tnewBounds = {\n\t\t\t\tleft: 0,\n\t\t\t\tright: 0,\n\t\t\t\ttop: 0,\n\t\t\t\tbottom: 0\n\t\t\t};\n\t\t\tthis._localBounds = newBounds;\n\t\t\tthis._adjustedLocalBounds = newBounds;\n\t\t}\n\t\telse {\n\t\t\tthis._getBounds();\n\t\t\tthis._fixMinBounds(this._localBounds);\n\t\t\tthis.updatePivotPoint();\n\t\t\tthis._adjustedLocalBounds = this._display.getAdjustedBounds(this._localBounds);\n\t\t\tnewBounds = this._adjustedLocalBounds!;\n\t\t}\n\n\t\tif (!oldBounds || (oldBounds.left !== newBounds.left || oldBounds.top !== newBounds.top || oldBounds.right !== newBounds.right || oldBounds.bottom !== newBounds.bottom)) {\n\t\t\tconst eventType = \"boundschanged\";\n\t\t\tif (this.events.isEnabled(eventType)) {\n\t\t\t\tthis.events.dispatch(eventType, { type: eventType, target: this });\n\t\t\t}\n\t\t\tif (this.parent) {\n\t\t\t\tthis.parent.markDirty();\n\t\t\t\tthis.parent.markDirtyBounds();\n\t\t\t}\n\n\t\t\t// Update tooltip position together with the Sprite\n\t\t\tif (this.getPrivate(\"showingTooltip\")) {\n\t\t\t\tthis.showTooltip();\n\t\t\t}\n\t\t}\n\t}\n\n\tpublic _fixMinBounds(bounds: IBounds) {\n\t\tlet minWidth = this.get(\"minWidth\", this.getPrivate(\"minWidth\"));\n\t\tlet minHeight = this.get(\"minHeight\", this.getPrivate(\"minHeight\"));\n\n\t\tif ($type.isNumber(minWidth)) {\n\t\t\tif (bounds.right - bounds.left < minWidth) {\n\t\t\t\tbounds.right = bounds.left + minWidth;\n\t\t\t}\n\t\t}\n\n\t\tif ($type.isNumber(minHeight)) {\n\t\t\tif (bounds.bottom - bounds.top < minHeight) {\n\t\t\t\tbounds.bottom = bounds.top + minHeight;\n\t\t\t}\n\t\t}\n\n\t\tlet privateWidth = this.getPrivate(\"width\");\n\t\tlet privateHeight = this.getPrivate(\"height\");\n\n\t\tif ($type.isNumber(privateWidth)) {\n\t\t\tif (privateWidth > 0) {\n\t\t\t\tbounds.right = bounds.left + privateWidth;\n\t\t\t}\n\t\t\telse {\n\t\t\t\tbounds.left = bounds.right + privateWidth;\n\t\t\t}\n\t\t}\n\n\t\tif ($type.isNumber(privateHeight)) {\n\t\t\tif (privateHeight > 0) {\n\t\t\t\tbounds.bottom = bounds.top + privateHeight;\n\t\t\t}\n\t\t\telse {\n\t\t\t\tbounds.top = bounds.bottom + privateHeight;\n\t\t\t}\n\t\t}\n\t}\n\n\tprotected _removeParent(parent: Container | undefined) {\n\t\tif (parent) {\n\t\t\tparent.children.removeValue(this);\n\t\t\t$array.removeFirst(parent._percentageSizeChildren, this);\n\t\t\t$array.removeFirst(parent._percentagePositionChildren, this);\n\t\t}\n\t}\n\n\tpublic _clearDirty() {\n\t\tsuper._clearDirty();\n\t\tthis._sizeDirty = false;\n\t\tthis._statesHandled = false;\n\t}\n\n\t/**\n\t * Simulate hover over element.\n\t */\n\tpublic hover() {\n\t\tif (!this.isDisposed()) {\n\t\t\tthis.showTooltip();\n\t\t\tthis._handleOver();\n\t\t}\n\t}\n\n\t/**\n\t * Simulate unhover over element.\n\t */\n\tpublic unhover(): void {\n\t\tif (!this.isDisposed()) {\n\t\t\tthis.hideTooltip();\n\t\t\tthis._handleOut();\n\t\t}\n\t}\n\n\t/**\n\t * Shows element's [[Tooltip]].\n\t */\n\tpublic showTooltip(point?: IPoint): Promise<void> | undefined {\n\t\tif (!this.isDisposed()) {\n\t\t\tconst tooltip = this.getTooltip();\n\t\t\tconst tooltipText = this.get(\"tooltipText\");\n\t\t\tconst tooltipHTML = this.get(\"tooltipHTML\");\n\n\t\t\tif ((tooltipText || tooltipHTML) && tooltip) {\n\t\t\t\tconst tooltipPosition = this.get(\"tooltipPosition\");\n\t\t\t\tconst tooltipTarget = this.getPrivate(\"tooltipTarget\", this);\n\n\t\t\t\tif (tooltipPosition == \"fixed\" || !point) {\n\t\t\t\t\tthis._display._setMatrix();\n\t\t\t\t\tpoint = this.toGlobal(tooltipTarget._getTooltipPoint());\n\t\t\t\t}\n\n\t\t\t\ttooltip.set(\"pointTo\", point);\n\t\t\t\ttooltip.set(\"tooltipTarget\", tooltipTarget);\n\n\t\t\t\tif (!tooltip.get(\"x\")) {\n\t\t\t\t\ttooltip.set(\"x\", point.x);\n\t\t\t\t}\n\t\t\t\tif (!tooltip.get(\"y\")) {\n\t\t\t\t\ttooltip.set(\"y\", point.y);\n\t\t\t\t}\n\n\t\t\t\tif (tooltipText) {\n\t\t\t\t\ttooltip.label.set(\"text\", tooltipText);\n\t\t\t\t}\n\t\t\t\tif (tooltipHTML) {\n\t\t\t\t\ttooltip.label.set(\"html\", tooltipHTML);\n\t\t\t\t}\n\t\t\t\tconst dataItem = this.dataItem;\n\t\t\t\tif (dataItem) {\n\t\t\t\t\ttooltip.label._setDataItem(dataItem);\n\t\t\t\t}\n\n\t\t\t\tif (this.get(\"showTooltipOn\") == \"always\" && (point.x < 0 || point.x > this._root.width() || point.y < 0 || point.y > this._root.height())) {\n\t\t\t\t\tthis.hideTooltip();\n\t\t\t\t\treturn;\n\t\t\t\t}\n\n\t\t\t\ttooltip.label.text.markDirtyText();\n\t\t\t\tconst promise = tooltip.show();\n\t\t\t\tthis.setPrivateRaw(\"showingTooltip\", true);\n\t\t\t\treturn promise;\n\t\t\t}\n\t\t}\n\t}\n\n\t/**\n\t * Hides element's [[Tooltip]].\n\t */\n\tpublic hideTooltip(): Promise<void> | undefined {\n\t\tconst tooltip = this.getTooltip();\n\t\tif (tooltip) {\n\t\t\tif (tooltip.get(\"tooltipTarget\") == this.getPrivate(\"tooltipTarget\", this) || this.get(\"tooltip\") == tooltip) {\n\t\t\t\tlet timeout = tooltip.get(\"keepTargetHover\") && tooltip.get(\"stateAnimationDuration\", 0) == 0 ? 400 : undefined;\n\t\t\t\tconst promise = tooltip.hide(timeout);\n\t\t\t\tthis.setPrivateRaw(\"showingTooltip\", false);\n\t\t\t\treturn promise;\n\t\t\t}\n\t\t}\n\t}\n\n\tpublic _getTooltipPoint(): IPoint {\n\t\tconst bounds = this._localBounds!;\n\n\t\tif (bounds) {\n\t\t\tlet x = 0;\n\t\t\tlet y = 0;\n\n\t\t\tif (!this.get(\"isMeasured\")) {\n\t\t\t\tx = $utils.relativeToValue(this.get(\"tooltipX\", 0), this.width());\n\t\t\t\ty = $utils.relativeToValue(this.get(\"tooltipY\", 0), this.height());\n\t\t\t}\n\t\t\telse {\n\t\t\t\tx = bounds.left + $utils.relativeToValue(this.get(\"tooltipX\", 0), bounds.right - bounds.left);\n\t\t\t\ty = bounds.top + $utils.relativeToValue(this.get(\"tooltipY\", 0), bounds.bottom - bounds.top);\n\t\t\t}\n\n\t\t\treturn { x, y };\n\t\t}\n\t\treturn { x: 0, y: 0 };\n\t}\n\n\t/**\n\t * Returns [[Tooltip]] used for this element.\n\t *\n\t * @return Tooltip\n\t */\n\tpublic getTooltip(): Tooltip | undefined {\n\t\tlet tooltip = this.get(\"tooltip\");\n\t\tif (!tooltip) {\n\t\t\tlet parent = this.parent;\n\t\t\tif (parent) {\n\t\t\t\treturn parent.getTooltip();\n\t\t\t}\n\t\t}\n\t\telse {\n\t\t\treturn tooltip;\n\t\t}\n\t}\n\n\tpublic _updatePosition() {\n\n\t\tconst parent = this.parent;\n\n\t\tlet dx = this.get(\"dx\", 0);\n\t\tlet dy = this.get(\"dy\", 0);\n\n\t\tlet x = this.get(\"x\");\n\t\tlet _x = this.getPrivate(\"x\");\n\n\t\tlet xx = 0;\n\t\tlet yy = 0;\n\n\t\tconst position = this.get(\"position\");\n\n\t\tif (x instanceof Percent) {\n\t\t\tif (parent) {\n\t\t\t\tx = parent.innerWidth() * x.value + parent.get(\"paddingLeft\", 0);\n\t\t\t}\n\t\t\telse {\n\t\t\t\tx = 0;\n\t\t\t}\n\t\t}\n\t\tif ($type.isNumber(x)) {\n\t\t\txx = x + dx;\n\t\t}\n\t\telse {\n\t\t\tif (_x != null) {\n\t\t\t\txx = _x;\n\t\t\t}\n\t\t\telse if (parent) {\n\t\t\t\tif (position == \"relative\") {\n\t\t\t\t\txx = parent.get(\"paddingLeft\", 0) + dx;\n\t\t\t\t}\n\t\t\t}\n\t\t}\n\n\n\t\tlet y = this.get(\"y\");\n\t\tlet _y = this.getPrivate(\"y\");\n\n\t\tif (y instanceof Percent) {\n\t\t\tif (parent) {\n\t\t\t\ty = parent.innerHeight() * y.value + parent.get(\"paddingTop\", 0);\n\t\t\t}\n\t\t\telse {\n\t\t\t\ty = 0;\n\t\t\t}\n\t\t}\n\t\tif ($type.isNumber(y)) {\n\t\t\tyy = y + dy;\n\t\t}\n\t\telse {\n\t\t\tif (_y != null) {\n\t\t\t\tyy = _y;\n\t\t\t}\n\t\t\telse if (parent) {\n\t\t\t\tif (position == \"relative\") {\n\t\t\t\t\tyy = parent.get(\"paddingTop\", 0) + dy;\n\t\t\t\t}\n\t\t\t}\n\t\t}\n\n\t\tconst display = this._display;\n\n\t\tif (display.x != xx || display.y != yy) {\n\t\t\tdisplay.invalidateBounds();\n\t\t\tdisplay.x = xx;\n\t\t\tdisplay.y = yy;\n\n\t\t\tconst eventType = \"positionchanged\";\n\t\t\tif (this.events.isEnabled(eventType)) {\n\t\t\t\tthis.events.dispatch(eventType, { type: eventType, target: this });\n\t\t\t}\n\t\t}\n\n\t\t// Update tooltip position together with the Sprite\n\t\tif (this.getPrivate(\"showingTooltip\")) {\n\t\t\tthis.showTooltip();\n\t\t}\n\t}\n\n\t/**\n\t * Returns element's actual X position in pixels.\n\t *\n\t * @return X (px)\n\t */\n\tpublic x(): number {\n\t\tlet x = this.get(\"x\");\n\t\tlet _x = this.getPrivate(\"x\");\n\n\t\tconst parent = this.parent;\n\t\tif (parent) {\n\t\t\tif (x instanceof Percent) {\n\t\t\t\treturn $utils.relativeToValue(x, parent.innerWidth()) + parent.get(\"paddingLeft\", 0);\n\t\t\t}\n\t\t\telse {\n\t\t\t\tif (!$type.isNumber(x)) {\n\t\t\t\t\tif (_x != null) {\n\t\t\t\t\t\treturn _x;\n\t\t\t\t\t}\n\t\t\t\t\telse {\n\t\t\t\t\t\treturn parent.get(\"paddingLeft\", this._display.x)\n\t\t\t\t\t}\n\t\t\t\t}\n\t\t\t\telse {\n\t\t\t\t\treturn x;\n\t\t\t\t}\n\t\t\t}\n\t\t}\n\n\t\treturn this._display.x;\n\t}\n\n\t/**\n\t * Returns element's actual Y position in pixels.\n\t *\n\t * @return Y (px)\n\t */\n\tpublic y(): number {\n\n\t\tlet _y = this.getPrivate(\"y\");\n\n\t\tif (_y != null) {\n\t\t\treturn _y;\n\t\t}\n\n\t\tlet y = this.get(\"y\");\n\t\tconst parent = this.parent;\n\n\t\tif (parent) {\n\t\t\tif (y instanceof Percent) {\n\t\t\t\treturn $utils.relativeToValue(y, parent.innerHeight()) + parent.get(\"paddingTop\", 0);\n\t\t\t}\n\t\t\telse {\n\t\t\t\tif (!$type.isNumber(y)) {\n\t\t\t\t\tif (_y != null) {\n\t\t\t\t\t\treturn _y;\n\t\t\t\t\t}\n\t\t\t\t\telse {\n\t\t\t\t\t\treturn parent.get(\"paddingTop\", this._display.y)\n\t\t\t\t\t}\n\t\t\t\t}\n\t\t\t\telse {\n\t\t\t\t\treturn y;\n\t\t\t\t}\n\t\t\t}\n\t\t}\n\n\t\treturn this._display.y;\n\t}\n\n\tprotected _dispose() {\n\t\tsuper._dispose();\n\t\tthis._display.dispose();\n\t\tthis._removeTemplateField();\n\t\tthis._removeParent(this.parent);\n\t\tthis._root._removeFocusElement(this);\n\n\t\tconst tooltip = this.get(\"tooltip\");\n\t\tif (tooltip) {\n\t\t\ttooltip.dispose();\n\t\t}\n\n\t\tthis.markDirty();\n\t}\n\n\t/**\n\t * @ignore\n\t */\n\tpublic adjustedLocalBounds(): IBounds {\n\t\tthis._fixMinBounds(this._adjustedLocalBounds);\n\t\treturn this._adjustedLocalBounds;\n\t}\n\n\t/**\n\t * Returns local coordinates of the element's bounds.\n\t *\n\t * @ignore\n\t * @return Global bounds\n\t */\n\tpublic localBounds(): IBounds {\n\t\treturn this._localBounds;\n\t}\n\n\t/**\n\t * Returns adjusted local coordinates of the element's bounds.\n\t *\n\t * @ignore\n\t * @return Global bounds\n\t */\n\tpublic bounds(): IBounds {\n\t\tconst bounds = this._adjustedLocalBounds;\n\t\tconst x = this.x();\n\t\tconst y = this.y();\n\t\treturn { left: bounds.left + x, right: bounds.right + x, top: bounds.top + y, bottom: bounds.bottom + y };\n\t}\n\n\t/**\n\t * Returns global coordinates of the element's bounds.\n\t *\n\t * @ignore\n\t * @return Global bounds\n\t */\n\tpublic globalBounds(): IBounds {\n\t\tconst bounds = this.localBounds();\n\n\t\tconst p0 = this.toGlobal({ x: bounds.left, y: bounds.top });\n\t\tconst p1 = this.toGlobal({ x: bounds.right, y: bounds.top });\n\t\tconst p2 = this.toGlobal({ x: bounds.right, y: bounds.bottom });\n\t\tconst p3 = this.toGlobal({ x: bounds.left, y: bounds.bottom });\n\n\t\treturn {\n\t\t\tleft: Math.min(p0.x, p1.x, p2.x, p3.x),\n\t\t\ttop: Math.min(p0.y, p1.y, p2.y, p3.y),\n\t\t\tright: Math.max(p0.x, p1.x, p2.x, p3.x),\n\t\t\tbottom: Math.max(p0.y, p1.y, p2.y, p3.y)\n\t\t}\n\t}\n\n\tprotected _onShow(_duration?: number) {\n\n\t}\n\n\tprotected _onHide(_duration?: number) {\n\n\t}\n\n\t/**\n\t * Plays initial reveal animation regardless if element is currently hidden\n\t * or visible.\n\t *\n\t * @param   duration  Duration of the animation in milliseconds\n\t * @param   delay     Delay showing of the element by X milliseconds\n\t * @return            Promise\n\t */\n\tpublic async appear(duration?: number, delay?: number): Promise<void> {\n\t\tawait this.hide(0);\n\t\tif (delay) {\n\t\t\treturn new Promise<void>((success, _error) => {\n\t\t\t\tthis.setTimeout(() => {\n\t\t\t\t\tsuccess(this.show(duration));\n\t\t\t\t}, delay);\n\t\t\t});\n\n\t\t}\n\t\telse {\n\t\t\treturn this.show(duration);\n\t\t}\n\t}\n\n\t/**\n\t * Shows currently hidden element and returns a `Promise` which completes\n\t * when all showing animations are finished.\n\t *\n\t * ```TypeScript\n\t * series.show().then(function(ev) {\n\t *   console.log(\"Series is now fully visible\");\n\t * })\n\t * ```\n\t * ```JavaScript\n\t * series.show().then(function(ev) {\n\t *   console.log(\"Series is now fully visible\");\n\t * })\n\t * ```\n\t *\n\t * @return Promise\n\t */\n\tpublic async show(duration?: number): Promise<void> {\n\t\tif (!this._isShowing) {\n\t\t\tthis._isHidden = false;\n\t\t\tthis._isShowing = true;\n\t\t\tthis._isHiding = false;\n\n\t\t\tif (this.states.lookup(\"default\")!.get(\"visible\")) {\n\t\t\t\tthis.set(\"visible\", true);\n\t\t\t}\n\t\t\tthis._onShow(duration);\n\n\t\t\tconst animations = this.states.applyAnimate(\"default\", duration);\n\t\t\tawait waitForAnimations(animations);\n\n\t\t\tthis._isShowing = false;\n\t\t}\n\t}\n\n\t/**\n\t * Hides the element and returns a `Promise` which completes when all hiding\n\t * animations are finished.\n\t *\n\t * ```TypeScript\n\t * series.hide().then(function(ev) {\n\t *   console.log(\"Series finished hiding\");\n\t * })\n\t * ```\n\t * ```JavaScript\n\t * series.hide().then(function(ev) {\n\t *   console.log(\"Series finished hiding\");\n\t * })\n\t * ```\n\t *\n\t * @return Promise\n\t */\n\tpublic async hide(duration?: number): Promise<void> {\n\t\tif (!this._isHiding && !this._isHidden) {\n\t\t\tthis._isHiding = true;\n\t\t\tthis._isShowing = false;\n\t\t\tlet state = this.states.lookup(\"hidden\");\n\t\t\tif (!state) {\n\t\t\t\tstate = this.states.create(\"hidden\", {\n\t\t\t\t\t\"opacity\": 0,\n\t\t\t\t\t\"visible\": false\n\t\t\t\t});\n\t\t\t}\n\t\t\tthis._isHidden = true;\n\t\t\tthis._onHide(duration);\n\n\t\t\tconst animations = this.states.applyAnimate(\"hidden\", duration);\n\n\t\t\tawait waitForAnimations(animations);\n\n\t\t\tthis._isHiding = false;\n\t\t}\n\t}\n\n\t/**\n\t * Returns `true` if this element is currently hidden.\n\t *\n\t * @return Is hidden?\n\t */\n\tpublic isHidden(): boolean {\n\t\treturn this._isHidden;\n\t}\n\n\t/**\n\t * Returns `true` if this element is currently animating to a default state.\n\t *\n\t * @return Is showing?\n\t */\n\tpublic isShowing(): boolean {\n\t\treturn this._isShowing;\n\t}\n\n\t/**\n\t * Returns `true` if this element is currently animating to a hidden state.\n\t *\n\t * @return Is hiding?\n\t */\n\tpublic isHiding(): boolean {\n\t\treturn this._isHiding;\n\t}\n\n\t/**\n\t * Returns `true` if this element is currently hovered by a pointer.\n\t *\n\t * @return Is hovered?\n\t */\n\tpublic isHover(): boolean {\n\t\treturn this._display.hovering();\n\t}\n\n\t/**\n\t * Returns `true` if this element does currently have focus.\n\t *\n\t * @return Is focused?\n\t */\n\tpublic isFocus(): boolean {\n\t\treturn this._root.focused(this);\n\t}\n\n\t/**\n\t * Returns `true` if this element is currently being dragged.\n\t *\n\t * @return Is dragged?\n\t */\n\tpublic isDragging(): boolean {\n\t\treturn this._isDragging;\n\t}\n\n\t/**\n\t * Returns `false` if if either public or private setting `visible` is set\n\t * to `false`, or `forceHidden` is set to `true`.\n\t *\n\t * @return Visible?\n\t */\n\tpublic isVisible(): boolean {\n\t\tif (this.get(\"visible\") && this.getPrivate(\"visible\") && !this.get(\"forceHidden\")) {\n\t\t\treturn true;\n\t\t}\n\t\treturn false;\n\t}\n\n\t/**\n\t * Same as `isVisible()`, except it checks all ascendants, too.\n\t *\n\t * @since 5.2.7\n\t * @return Visible?\n\t */\n\tpublic isVisibleDeep(): boolean {\n\t\treturn this._parent ? (this._parent.isVisibleDeep() && this.isVisible()) : this.isVisible();\n\t}\n\n\t/**\n\t * Returns an actual opacity of the element, taking into account all parents.\n\t *\n\t * @return Opacity\n\t * @since 5.2.11\n\t */\n\tpublic compositeOpacity(): number {\n\t\tconst opacity = this.get(\"opacity\", 1);\n\t\treturn this._parent ? (this._parent.compositeOpacity() * opacity) : opacity;\n\t}\n\n\t/**\n\t * Returns an actual scale of the element, taking into account all parents.\n\t *\n\t * @return Opacity\n\t * @since 5.9.2\n\t */\n\tpublic compositeScale(): number {\n\t\tconst scale = this.get(\"scale\", 1);\n\t\treturn this._parent ? (this._parent.compositeScale() * scale) : scale;\n\t}\n\n\t/**\n\t * Returns an actual roation of the element, taking into account all parents.\n\t *\n\t * @return Opacity\n\t * @since 5.9.2\n\t */\n\tpublic compositeRotation(): number {\n\t\tconst rotation = this.get(\"rotation\", 0);\n\t\treturn this._parent ? (this._parent.compositeRotation() + rotation) : rotation;\n\t}\n\n\t/**\n\t * Returns width of this element in pixels.\n\t *\n\t * @return Width (px)\n\t */\n\tpublic width(): number {\n\t\tlet width = this.get(\"width\");\n\t\tlet maxWidth = this.get(\"maxWidth\", this.getPrivate(\"maxWidth\"));\n\t\tlet minWidth = this.get(\"minWidth\", this.getPrivate(\"minWidth\"));\n\t\tlet privateWidth = this.getPrivate(\"width\");\n\t\tlet w = 0;\n\n\t\tif ($type.isNumber(privateWidth)) {\n\t\t\tw = privateWidth;\n\t\t}\n\t\telse {\n\t\t\tif (width == null) {\n\t\t\t\tif (this._adjustedLocalBounds) {\n\t\t\t\t\tw = this._adjustedLocalBounds.right - this._adjustedLocalBounds.left;\n\t\t\t\t}\n\t\t\t}\n\t\t\telse {\n\t\t\t\tif (width instanceof Percent) {\n\t\t\t\t\tconst parent = this.parent;\n\t\t\t\t\tif (parent) {\n\t\t\t\t\t\tw = parent.innerWidth() * width.value;\n\t\t\t\t\t}\n\t\t\t\t\telse {\n\t\t\t\t\t\tw = this._root.width() * width.value;\n\t\t\t\t\t}\n\t\t\t\t}\n\t\t\t\telse if ($type.isNumber(width)) {\n\t\t\t\t\tw = width;\n\t\t\t\t}\n\t\t\t}\n\t\t}\n\n\t\tif ($type.isNumber(minWidth)) {\n\t\t\tw = Math.max(minWidth, w);\n\t\t}\n\t\tif ($type.isNumber(maxWidth)) {\n\t\t\tw = Math.min(maxWidth, w);\n\t\t}\n\n\t\treturn w;\n\t}\n\n\t/**\n\t * Returns maximum allowed width of this element in pixels.\n\t *\n\t * @return Maximum width (px)\n\t */\n\tpublic maxWidth(): number {\n\t\tlet maxWidth = this.get(\"maxWidth\", this.getPrivate(\"maxWidth\"));\n\t\tif ($type.isNumber(maxWidth)) {\n\t\t\treturn maxWidth;\n\t\t}\n\t\telse {\n\t\t\tlet width = this.get(\"width\")\n\t\t\tif ($type.isNumber(width)) {\n\t\t\t\treturn width;\n\t\t\t}\n\t\t}\n\t\tconst parent = this.parent;\n\t\tif (parent) {\n\t\t\treturn parent.innerWidth();\n\t\t}\n\t\treturn this._root.width();\n\t}\n\n\t/**\n\t * Returns maximum allowed height of this element in pixels.\n\t *\n\t * @return Maximum height (px)\n\t */\n\tpublic maxHeight(): number {\n\t\tlet maxHeight = this.get(\"maxHeight\", this.getPrivate(\"maxHeight\"));\n\t\tif ($type.isNumber(maxHeight)) {\n\t\t\treturn maxHeight;\n\t\t}\n\t\telse {\n\t\t\tlet height = this.get(\"height\")\n\t\t\tif ($type.isNumber(height)) {\n\t\t\t\treturn height;\n\t\t\t}\n\t\t}\n\t\tconst parent = this.parent;\n\t\tif (parent) {\n\t\t\treturn parent.innerHeight();\n\t\t}\n\t\treturn this._root.height();\n\t}\n\n\t/**\n\t * Returns height of this element in pixels.\n\t *\n\t * @return Height (px)\n\t */\n\tpublic height(): number {\n\t\tlet height = this.get(\"height\");\n\t\tlet maxHeight = this.get(\"maxHeight\", this.getPrivate(\"maxHeight\"));\n\t\tlet minHeight = this.get(\"minHeight\", this.getPrivate(\"minHeight\"));\n\t\tlet privateHeight = this.getPrivate(\"height\");\n\t\tlet h = 0;\n\n\t\tif ($type.isNumber(privateHeight)) {\n\t\t\th = privateHeight;\n\t\t}\n\t\telse {\n\t\t\tif (height == null) {\n\t\t\t\tif (this._adjustedLocalBounds) {\n\t\t\t\t\th = this._adjustedLocalBounds.bottom - this._adjustedLocalBounds.top;\n\t\t\t\t}\n\t\t\t}\n\t\t\telse {\n\t\t\t\tif (height instanceof Percent) {\n\t\t\t\t\tconst parent = this.parent;\n\t\t\t\t\tif (parent) {\n\t\t\t\t\t\th = parent.innerHeight() * height.value;\n\t\t\t\t\t}\n\t\t\t\t\telse {\n\t\t\t\t\t\th = this._root.height() * height.value;\n\t\t\t\t\t}\n\t\t\t\t}\n\t\t\t\telse if ($type.isNumber(height)) {\n\t\t\t\t\th = height;\n\t\t\t\t}\n\t\t\t}\n\t\t}\n\n\t\tif ($type.isNumber(minHeight)) {\n\t\t\th = Math.max(minHeight, h);\n\t\t}\n\t\tif ($type.isNumber(maxHeight)) {\n\t\t\th = Math.min(maxHeight, h);\n\t\t}\n\n\t\treturn h;\n\t}\n\n\tprotected _findStaticTemplate(f: (template: Template<this>) => boolean): Template<this> | undefined {\n\t\t// templateField overrides template\n\t\tif (this._templateField && f(this._templateField)) {\n\t\t\treturn this._templateField;\n\t\t}\n\n\t\treturn super._findStaticTemplate(f);\n\t}\n\n\tpublic _walkParents(f: (parent: Sprite) => void): void {\n\t\tif (this._parent) {\n\t\t\tthis._walkParent(f);\n\t\t}\n\t}\n\n\tprotected _walkParent(f: (parent: Sprite) => void): void {\n\t\tif (this._parent) {\n\t\t\tthis._parent._walkParent(f);\n\t\t}\n\n\t\tf(this);\n\t}\n\n\t/**\n\t * Parent [[Container]] of this element.\n\t *\n\t * @return Parent container\n\t */\n\tpublic get parent(): Container | undefined {\n\t\treturn this._parent;\n\t}\n\n\tpublic _setParent(parent: Container, updateChildren: boolean = false) {\n\t\tconst prevParent = this._parent;\n\t\tif (parent !== prevParent) {\n\t\t\tthis.markDirtyBounds();\n\n\t\t\tparent.markDirty();\n\n\t\t\tthis._parent = parent;\n\n\t\t\tif (updateChildren) {\n\t\t\t\tthis._removeParent(prevParent);\n\n\t\t\t\tif (parent) {\n\t\t\t\t\tthis._addPercentageSizeChildren();\n\t\t\t\t\tthis._addPercentagePositionChildren();\n\t\t\t\t}\n\t\t\t}\n\n\t\t\tthis.markDirtyPosition();\n\t\t\tthis._applyThemes();\n\t\t}\n\t}\n\n\t/**\n\t * Returns an instance of [[NumberFormatter]] used in this element.\n\t *\n\t * If this element does not have it set, global one form [[Root]] is used.\n\t *\n\t * @see {@link https://www.amcharts.com/docs/v5/concepts/using-formatters/} for more info\n\t * @return NumberFormatter instace\n\t */\n\tpublic getNumberFormatter(): NumberFormatter {\n\t\treturn this.get(\"numberFormatter\", this._root.numberFormatter);\n\t}\n\n\t/**\n\t * Returns an instance of [[DateFormatter]] used in this element.\n\t *\n\t * If this element does not have it set, global one form [[Root]] is used.\n\t *\n\t * @see {@link https://www.amcharts.com/docs/v5/concepts/using-formatters/} for more info\n\t * @return DateFormatter instace\n\t */\n\tpublic getDateFormatter(): DateFormatter {\n\t\treturn this.get(\"dateFormatter\", this._root.dateFormatter);\n\t}\n\n\t/**\n\t * Returns an instance of [[DurationFormatter]] used in this element.\n\t *\n\t * If this element does not have it set, global one form [[Root]] is used.\n\t *\n\t * @see {@link https://www.amcharts.com/docs/v5/concepts/using-formatters/} for more info\n\t * @return DurationFormatter instace\n\t */\n\tpublic getDurationFormatter(): DurationFormatter {\n\t\treturn this.get(\"durationFormatter\", this._root.durationFormatter);\n\t}\n\n\t/**\n\t * Converts X/Y coordinate within this element to a global coordinate.\n\t *\n\t * @param  point  Local coordinate\n\t * @return        Global coordinate\n\t */\n\tpublic toGlobal(point: IPoint): IPoint {\n\t\treturn this._display.toGlobal(point);\n\t}\n\n\t/**\n\t * Converts global X/Y coordinate to a coordinate within this element.\n\t *\n\t * @param  point  Global coordinate\n\t * @return        Local coordinate\n\t */\n\tpublic toLocal(point: IPoint): IPoint {\n\t\treturn this._display.toLocal(point);\n\t}\n\n\tpublic _getDownPoint(): IPoint | undefined {\n\t\tconst id = this._getDownPointId();\n\t\tif (id) {\n\t\t\treturn this._downPoints[id];\n\t\t}\n\n\t}\n\n\tpublic _getDownPointId(): number | undefined {\n\t\tif (this._downPoints) {\n\t\t\treturn $object.keysOrdered(this._downPoints, (a, b) => {\n\t\t\t\tif (a > b) {\n\t\t\t\t\treturn 1;\n\t\t\t\t}\n\t\t\t\tif (a < b) {\n\t\t\t\t\treturn -1;\n\t\t\t\t}\n\t\t\t\treturn 0;\n\t\t\t})[0];\n\t\t}\n\t}\n\n\t/**\n\t * Moves sprite to the end of the parent's children array.\n\t *\n\t * Depending on `layout` setting of the parten container, it may effect the\n\t * positioning or overlapping order of the elements.\n\t */\n\tpublic toFront() {\n\t\tconst parent = this.parent;\n\t\tif (parent) {\n\t\t\tparent.children.moveValue(this, parent.children.length - 1);\n\t\t}\n\t}\n\n\t/**\n\t * Moves sprite to the beginning of the parent's children array.\n\t *\n\t * Depending on `layout` setting of the parten container, it may effect the\n\t * positioning or overlapping order of the elements.\n\t */\n\tpublic toBack() {\n\t\tconst parent = this.parent;\n\t\tif (parent) {\n\t\t\tparent.children.moveValue(this, 0);\n\t\t}\n\t}\n\n}\n","/******************************************************************************\r\nCopyright (c) Microsoft Corporation.\r\n\r\nPermission to use, copy, modify, and/or distribute this software for any\r\npurpose with or without fee is hereby granted.\r\n\r\nTHE SOFTWARE IS PROVIDED \"AS IS\" AND THE AUTHOR DISCLAIMS ALL WARRANTIES WITH\r\nREGARD TO THIS SOFTWARE INCLUDING ALL IMPLIED WARRANTIES OF MERCHANTABILITY\r\nAND FITNESS. IN NO EVENT SHALL THE AUTHOR BE LIABLE FOR ANY SPECIAL, DIRECT,\r\nINDIRECT, OR CONSEQUENTIAL DAMAGES OR ANY DAMAGES WHATSOEVER RESULTING FROM\r\nLOSS OF USE, DATA OR PROFITS, WHETHER IN AN ACTION OF CONTRACT, NEGLIGENCE OR\r\nOTHER TORTIOUS ACTION, ARISING OUT OF OR IN CONNECTION WITH THE USE OR\r\nPERFORMANCE OF THIS SOFTWARE.\r\n***************************************************************************** */\r\n/* global Reflect, Promise, SuppressedError, Symbol, Iterator */\r\n\r\nvar extendStatics = function(d, b) {\r\n    extendStatics = Object.setPrototypeOf ||\r\n        ({ __proto__: [] } instanceof Array && function (d, b) { d.__proto__ = b; }) ||\r\n        function (d, b) { for (var p in b) if (Object.prototype.hasOwnProperty.call(b, p)) d[p] = b[p]; };\r\n    return extendStatics(d, b);\r\n};\r\n\r\nexport function __extends(d, b) {\r\n    if (typeof b !== \"function\" && b !== null)\r\n        throw new TypeError(\"Class extends value \" + String(b) + \" is not a constructor or null\");\r\n    extendStatics(d, b);\r\n    function __() { this.constructor = d; }\r\n    d.prototype = b === null ? Object.create(b) : (__.prototype = b.prototype, new __());\r\n}\r\n\r\nexport var __assign = function() {\r\n    __assign = Object.assign || function __assign(t) {\r\n        for (var s, i = 1, n = arguments.length; i < n; i++) {\r\n            s = arguments[i];\r\n            for (var p in s) if (Object.prototype.hasOwnProperty.call(s, p)) t[p] = s[p];\r\n        }\r\n        return t;\r\n    }\r\n    return __assign.apply(this, arguments);\r\n}\r\n\r\nexport function __rest(s, e) {\r\n    var t = {};\r\n    for (var p in s) if (Object.prototype.hasOwnProperty.call(s, p) && e.indexOf(p) < 0)\r\n        t[p] = s[p];\r\n    if (s != null && typeof Object.getOwnPropertySymbols === \"function\")\r\n        for (var i = 0, p = Object.getOwnPropertySymbols(s); i < p.length; i++) {\r\n            if (e.indexOf(p[i]) < 0 && Object.prototype.propertyIsEnumerable.call(s, p[i]))\r\n                t[p[i]] = s[p[i]];\r\n        }\r\n    return t;\r\n}\r\n\r\nexport function __decorate(decorators, target, key, desc) {\r\n    var c = arguments.length, r = c < 3 ? target : desc === null ? desc = Object.getOwnPropertyDescriptor(target, key) : desc, d;\r\n    if (typeof Reflect === \"object\" && typeof Reflect.decorate === \"function\") r = Reflect.decorate(decorators, target, key, desc);\r\n    else for (var i = decorators.length - 1; i >= 0; i--) if (d = decorators[i]) r = (c < 3 ? d(r) : c > 3 ? d(target, key, r) : d(target, key)) || r;\r\n    return c > 3 && r && Object.defineProperty(target, key, r), r;\r\n}\r\n\r\nexport function __param(paramIndex, decorator) {\r\n    return function (target, key) { decorator(target, key, paramIndex); }\r\n}\r\n\r\nexport function __esDecorate(ctor, descriptorIn, decorators, contextIn, initializers, extraInitializers) {\r\n    function accept(f) { if (f !== void 0 && typeof f !== \"function\") throw new TypeError(\"Function expected\"); return f; }\r\n    var kind = contextIn.kind, key = kind === \"getter\" ? \"get\" : kind === \"setter\" ? \"set\" : \"value\";\r\n    var target = !descriptorIn && ctor ? contextIn[\"static\"] ? ctor : ctor.prototype : null;\r\n    var descriptor = descriptorIn || (target ? Object.getOwnPropertyDescriptor(target, contextIn.name) : {});\r\n    var _, done = false;\r\n    for (var i = decorators.length - 1; i >= 0; i--) {\r\n        var context = {};\r\n        for (var p in contextIn) context[p] = p === \"access\" ? {} : contextIn[p];\r\n        for (var p in contextIn.access) context.access[p] = contextIn.access[p];\r\n        context.addInitializer = function (f) { if (done) throw new TypeError(\"Cannot add initializers after decoration has completed\"); extraInitializers.push(accept(f || null)); };\r\n        var result = (0, decorators[i])(kind === \"accessor\" ? { get: descriptor.get, set: descriptor.set } : descriptor[key], context);\r\n        if (kind === \"accessor\") {\r\n            if (result === void 0) continue;\r\n            if (result === null || typeof result !== \"object\") throw new TypeError(\"Object expected\");\r\n            if (_ = accept(result.get)) descriptor.get = _;\r\n            if (_ = accept(result.set)) descriptor.set = _;\r\n            if (_ = accept(result.init)) initializers.unshift(_);\r\n        }\r\n        else if (_ = accept(result)) {\r\n            if (kind === \"field\") initializers.unshift(_);\r\n            else descriptor[key] = _;\r\n        }\r\n    }\r\n    if (target) Object.defineProperty(target, contextIn.name, descriptor);\r\n    done = true;\r\n};\r\n\r\nexport function __runInitializers(thisArg, initializers, value) {\r\n    var useValue = arguments.length > 2;\r\n    for (var i = 0; i < initializers.length; i++) {\r\n        value = useValue ? initializers[i].call(thisArg, value) : initializers[i].call(thisArg);\r\n    }\r\n    return useValue ? value : void 0;\r\n};\r\n\r\nexport function __propKey(x) {\r\n    return typeof x === \"symbol\" ? x : \"\".concat(x);\r\n};\r\n\r\nexport function __setFunctionName(f, name, prefix) {\r\n    if (typeof name === \"symbol\") name = name.description ? \"[\".concat(name.description, \"]\") : \"\";\r\n    return Object.defineProperty(f, \"name\", { configurable: true, value: prefix ? \"\".concat(prefix, \" \", name) : name });\r\n};\r\n\r\nexport function __metadata(metadataKey, metadataValue) {\r\n    if (typeof Reflect === \"object\" && typeof Reflect.metadata === \"function\") return Reflect.metadata(metadataKey, metadataValue);\r\n}\r\n\r\nexport function __awaiter(thisArg, _arguments, P, generator) {\r\n    function adopt(value) { return value instanceof P ? value : new P(function (resolve) { resolve(value); }); }\r\n    return new (P || (P = Promise))(function (resolve, reject) {\r\n        function fulfilled(value) { try { step(generator.next(value)); } catch (e) { reject(e); } }\r\n        function rejected(value) { try { step(generator[\"throw\"](value)); } catch (e) { reject(e); } }\r\n        function step(result) { result.done ? resolve(result.value) : adopt(result.value).then(fulfilled, rejected); }\r\n        step((generator = generator.apply(thisArg, _arguments || [])).next());\r\n    });\r\n}\r\n\r\nexport function __generator(thisArg, body) {\r\n    var _ = { label: 0, sent: function() { if (t[0] & 1) throw t[1]; return t[1]; }, trys: [], ops: [] }, f, y, t, g = Object.create((typeof Iterator === \"function\" ? Iterator : Object).prototype);\r\n    return g.next = verb(0), g[\"throw\"] = verb(1), g[\"return\"] = verb(2), typeof Symbol === \"function\" && (g[Symbol.iterator] = function() { return this; }), g;\r\n    function verb(n) { return function (v) { return step([n, v]); }; }\r\n    function step(op) {\r\n        if (f) throw new TypeError(\"Generator is already executing.\");\r\n        while (g && (g = 0, op[0] && (_ = 0)), _) try {\r\n            if (f = 1, y && (t = op[0] & 2 ? y[\"return\"] : op[0] ? y[\"throw\"] || ((t = y[\"return\"]) && t.call(y), 0) : y.next) && !(t = t.call(y, op[1])).done) return t;\r\n            if (y = 0, t) op = [op[0] & 2, t.value];\r\n            switch (op[0]) {\r\n                case 0: case 1: t = op; break;\r\n                case 4: _.label++; return { value: op[1], done: false };\r\n                case 5: _.label++; y = op[1]; op = [0]; continue;\r\n                case 7: op = _.ops.pop(); _.trys.pop(); continue;\r\n                default:\r\n                    if (!(t = _.trys, t = t.length > 0 && t[t.length - 1]) && (op[0] === 6 || op[0] === 2)) { _ = 0; continue; }\r\n                    if (op[0] === 3 && (!t || (op[1] > t[0] && op[1] < t[3]))) { _.label = op[1]; break; }\r\n                    if (op[0] === 6 && _.label < t[1]) { _.label = t[1]; t = op; break; }\r\n                    if (t && _.label < t[2]) { _.label = t[2]; _.ops.push(op); break; }\r\n                    if (t[2]) _.ops.pop();\r\n                    _.trys.pop(); continue;\r\n            }\r\n            op = body.call(thisArg, _);\r\n        } catch (e) { op = [6, e]; y = 0; } finally { f = t = 0; }\r\n        if (op[0] & 5) throw op[1]; return { value: op[0] ? op[1] : void 0, done: true };\r\n    }\r\n}\r\n\r\nexport var __createBinding = Object.create ? (function(o, m, k, k2) {\r\n    if (k2 === undefined) k2 = k;\r\n    var desc = Object.getOwnPropertyDescriptor(m, k);\r\n    if (!desc || (\"get\" in desc ? !m.__esModule : desc.writable || desc.configurable)) {\r\n        desc = { enumerable: true, get: function() { return m[k]; } };\r\n    }\r\n    Object.defineProperty(o, k2, desc);\r\n}) : (function(o, m, k, k2) {\r\n    if (k2 === undefined) k2 = k;\r\n    o[k2] = m[k];\r\n});\r\n\r\nexport function __exportStar(m, o) {\r\n    for (var p in m) if (p !== \"default\" && !Object.prototype.hasOwnProperty.call(o, p)) __createBinding(o, m, p);\r\n}\r\n\r\nexport function __values(o) {\r\n    var s = typeof Symbol === \"function\" && Symbol.iterator, m = s && o[s], i = 0;\r\n    if (m) return m.call(o);\r\n    if (o && typeof o.length === \"number\") return {\r\n        next: function () {\r\n            if (o && i >= o.length) o = void 0;\r\n            return { value: o && o[i++], done: !o };\r\n        }\r\n    };\r\n    throw new TypeError(s ? \"Object is not iterable.\" : \"Symbol.iterator is not defined.\");\r\n}\r\n\r\nexport function __read(o, n) {\r\n    var m = typeof Symbol === \"function\" && o[Symbol.iterator];\r\n    if (!m) return o;\r\n    var i = m.call(o), r, ar = [], e;\r\n    try {\r\n        while ((n === void 0 || n-- > 0) && !(r = i.next()).done) ar.push(r.value);\r\n    }\r\n    catch (error) { e = { error: error }; }\r\n    finally {\r\n        try {\r\n            if (r && !r.done && (m = i[\"return\"])) m.call(i);\r\n        }\r\n        finally { if (e) throw e.error; }\r\n    }\r\n    return ar;\r\n}\r\n\r\n/** @deprecated */\r\nexport function __spread() {\r\n    for (var ar = [], i = 0; i < arguments.length; i++)\r\n        ar = ar.concat(__read(arguments[i]));\r\n    return ar;\r\n}\r\n\r\n/** @deprecated */\r\nexport function __spreadArrays() {\r\n    for (var s = 0, i = 0, il = arguments.length; i < il; i++) s += arguments[i].length;\r\n    for (var r = Array(s), k = 0, i = 0; i < il; i++)\r\n        for (var a = arguments[i], j = 0, jl = a.length; j < jl; j++, k++)\r\n            r[k] = a[j];\r\n    return r;\r\n}\r\n\r\nexport function __spreadArray(to, from, pack) {\r\n    if (pack || arguments.length === 2) for (var i = 0, l = from.length, ar; i < l; i++) {\r\n        if (ar || !(i in from)) {\r\n            if (!ar) ar = Array.prototype.slice.call(from, 0, i);\r\n            ar[i] = from[i];\r\n        }\r\n    }\r\n    return to.concat(ar || Array.prototype.slice.call(from));\r\n}\r\n\r\nexport function __await(v) {\r\n    return this instanceof __await ? (this.v = v, this) : new __await(v);\r\n}\r\n\r\nexport function __asyncGenerator(thisArg, _arguments, generator) {\r\n    if (!Symbol.asyncIterator) throw new TypeError(\"Symbol.asyncIterator is not defined.\");\r\n    var g = generator.apply(thisArg, _arguments || []), i, q = [];\r\n    return i = Object.create((typeof AsyncIterator === \"function\" ? AsyncIterator : Object).prototype), verb(\"next\"), verb(\"throw\"), verb(\"return\", awaitReturn), i[Symbol.asyncIterator] = function () { return this; }, i;\r\n    function awaitReturn(f) { return function (v) { return Promise.resolve(v).then(f, reject); }; }\r\n    function verb(n, f) { if (g[n]) { i[n] = function (v) { return new Promise(function (a, b) { q.push([n, v, a, b]) > 1 || resume(n, v); }); }; if (f) i[n] = f(i[n]); } }\r\n    function resume(n, v) { try { step(g[n](v)); } catch (e) { settle(q[0][3], e); } }\r\n    function step(r) { r.value instanceof __await ? Promise.resolve(r.value.v).then(fulfill, reject) : settle(q[0][2], r); }\r\n    function fulfill(value) { resume(\"next\", value); }\r\n    function reject(value) { resume(\"throw\", value); }\r\n    function settle(f, v) { if (f(v), q.shift(), q.length) resume(q[0][0], q[0][1]); }\r\n}\r\n\r\nexport function __asyncDelegator(o) {\r\n    var i, p;\r\n    return i = {}, verb(\"next\"), verb(\"throw\", function (e) { throw e; }), verb(\"return\"), i[Symbol.iterator] = function () { return this; }, i;\r\n    function verb(n, f) { i[n] = o[n] ? function (v) { return (p = !p) ? { value: __await(o[n](v)), done: false } : f ? f(v) : v; } : f; }\r\n}\r\n\r\nexport function __asyncValues(o) {\r\n    if (!Symbol.asyncIterator) throw new TypeError(\"Symbol.asyncIterator is not defined.\");\r\n    var m = o[Symbol.asyncIterator], i;\r\n    return m ? m.call(o) : (o = typeof __values === \"function\" ? __values(o) : o[Symbol.iterator](), i = {}, verb(\"next\"), verb(\"throw\"), verb(\"return\"), i[Symbol.asyncIterator] = function () { return this; }, i);\r\n    function verb(n) { i[n] = o[n] && function (v) { return new Promise(function (resolve, reject) { v = o[n](v), settle(resolve, reject, v.done, v.value); }); }; }\r\n    function settle(resolve, reject, d, v) { Promise.resolve(v).then(function(v) { resolve({ value: v, done: d }); }, reject); }\r\n}\r\n\r\nexport function __makeTemplateObject(cooked, raw) {\r\n    if (Object.defineProperty) { Object.defineProperty(cooked, \"raw\", { value: raw }); } else { cooked.raw = raw; }\r\n    return cooked;\r\n};\r\n\r\nvar __setModuleDefault = Object.create ? (function(o, v) {\r\n    Object.defineProperty(o, \"default\", { enumerable: true, value: v });\r\n}) : function(o, v) {\r\n    o[\"default\"] = v;\r\n};\r\n\r\nvar ownKeys = function(o) {\r\n    ownKeys = Object.getOwnPropertyNames || function (o) {\r\n        var ar = [];\r\n        for (var k in o) if (Object.prototype.hasOwnProperty.call(o, k)) ar[ar.length] = k;\r\n        return ar;\r\n    };\r\n    return ownKeys(o);\r\n};\r\n\r\nexport function __importStar(mod) {\r\n    if (mod && mod.__esModule) return mod;\r\n    var result = {};\r\n    if (mod != null) for (var k = ownKeys(mod), i = 0; i < k.length; i++) if (k[i] !== \"default\") __createBinding(result, mod, k[i]);\r\n    __setModuleDefault(result, mod);\r\n    return result;\r\n}\r\n\r\nexport function __importDefault(mod) {\r\n    return (mod && mod.__esModule) ? mod : { default: mod };\r\n}\r\n\r\nexport function __classPrivateFieldGet(receiver, state, kind, f) {\r\n    if (kind === \"a\" && !f) throw new TypeError(\"Private accessor was defined without a getter\");\r\n    if (typeof state === \"function\" ? receiver !== state || !f : !state.has(receiver)) throw new TypeError(\"Cannot read private member from an object whose class did not declare it\");\r\n    return kind === \"m\" ? f : kind === \"a\" ? f.call(receiver) : f ? f.value : state.get(receiver);\r\n}\r\n\r\nexport function __classPrivateFieldSet(receiver, state, value, kind, f) {\r\n    if (kind === \"m\") throw new TypeError(\"Private method is not writable\");\r\n    if (kind === \"a\" && !f) throw new TypeError(\"Private accessor was defined without a setter\");\r\n    if (typeof state === \"function\" ? receiver !== state || !f : !state.has(receiver)) throw new TypeError(\"Cannot write private member to an object whose class did not declare it\");\r\n    return (kind === \"a\" ? f.call(receiver, value) : f ? f.value = value : state.set(receiver, value)), value;\r\n}\r\n\r\nexport function __classPrivateFieldIn(state, receiver) {\r\n    if (receiver === null || (typeof receiver !== \"object\" && typeof receiver !== \"function\")) throw new TypeError(\"Cannot use 'in' operator on non-object\");\r\n    return typeof state === \"function\" ? receiver === state : state.has(receiver);\r\n}\r\n\r\nexport function __addDisposableResource(env, value, async) {\r\n    if (value !== null && value !== void 0) {\r\n        if (typeof value !== \"object\" && typeof value !== \"function\") throw new TypeError(\"Object expected.\");\r\n        var dispose, inner;\r\n        if (async) {\r\n            if (!Symbol.asyncDispose) throw new TypeError(\"Symbol.asyncDispose is not defined.\");\r\n            dispose = value[Symbol.asyncDispose];\r\n        }\r\n        if (dispose === void 0) {\r\n            if (!Symbol.dispose) throw new TypeError(\"Symbol.dispose is not defined.\");\r\n            dispose = value[Symbol.dispose];\r\n            if (async) inner = dispose;\r\n        }\r\n        if (typeof dispose !== \"function\") throw new TypeError(\"Object not disposable.\");\r\n        if (inner) dispose = function() { try { inner.call(this); } catch (e) { return Promise.reject(e); } };\r\n        env.stack.push({ value: value, dispose: dispose, async: async });\r\n    }\r\n    else if (async) {\r\n        env.stack.push({ async: true });\r\n    }\r\n    return value;\r\n\r\n}\r\n\r\nvar _SuppressedError = typeof SuppressedError === \"function\" ? SuppressedError : function (error, suppressed, message) {\r\n    var e = new Error(message);\r\n    return e.name = \"SuppressedError\", e.error = error, e.suppressed = suppressed, e;\r\n};\r\n\r\nexport function __disposeResources(env) {\r\n    function fail(e) {\r\n        env.error = env.hasError ? new _SuppressedError(e, env.error, \"An error was suppressed during disposal.\") : e;\r\n        env.hasError = true;\r\n    }\r\n    var r, s = 0;\r\n    function next() {\r\n        while (r = env.stack.pop()) {\r\n            try {\r\n                if (!r.async && s === 1) return s = 0, env.stack.push(r), Promise.resolve().then(next);\r\n                if (r.dispose) {\r\n                    var result = r.dispose.call(r.value);\r\n                    if (r.async) return s |= 2, Promise.resolve(result).then(next, function(e) { fail(e); return next(); });\r\n                }\r\n                else s |= 1;\r\n            }\r\n            catch (e) {\r\n                fail(e);\r\n            }\r\n        }\r\n        if (s === 1) return env.hasError ? Promise.reject(env.error) : Promise.resolve();\r\n        if (env.hasError) throw env.error;\r\n    }\r\n    return next();\r\n}\r\n\r\nexport function __rewriteRelativeImportExtension(path, preserveJsx) {\r\n    if (typeof path === \"string\" && /^\\.\\.?\\//.test(path)) {\r\n        return path.replace(/\\.(tsx)$|((?:\\.d)?)((?:\\.[^./]+?)?)\\.([cm]?)ts$/i, function (m, tsx, d, ext, cm) {\r\n            return tsx ? preserveJsx ? \".jsx\" : \".js\" : d && (!ext || !cm) ? m : (d + ext + \".\" + cm.toLowerCase() + \"js\");\r\n        });\r\n    }\r\n    return path;\r\n}\r\n\r\nexport default {\r\n    __extends: __extends,\r\n    __assign: __assign,\r\n    __rest: __rest,\r\n    __decorate: __decorate,\r\n    __param: __param,\r\n    __esDecorate: __esDecorate,\r\n    __runInitializers: __runInitializers,\r\n    __propKey: __propKey,\r\n    __setFunctionName: __setFunctionName,\r\n    __metadata: __metadata,\r\n    __awaiter: __awaiter,\r\n    __generator: __generator,\r\n    __createBinding: __createBinding,\r\n    __exportStar: __exportStar,\r\n    __values: __values,\r\n    __read: __read,\r\n    __spread: __spread,\r\n    __spreadArrays: __spreadArrays,\r\n    __spreadArray: __spreadArray,\r\n    __await: __await,\r\n    __asyncGenerator: __asyncGenerator,\r\n    __asyncDelegator: __asyncDelegator,\r\n    __asyncValues: __asyncValues,\r\n    __makeTemplateObject: __makeTemplateObject,\r\n    __importStar: __importStar,\r\n    __importDefault: __importDefault,\r\n    __classPrivateFieldGet: __classPrivateFieldGet,\r\n    __classPrivateFieldSet: __classPrivateFieldSet,\r\n    __classPrivateFieldIn: __classPrivateFieldIn,\r\n    __addDisposableResource: __addDisposableResource,\r\n    __disposeResources: __disposeResources,\r\n    __rewriteRelativeImportExtension: __rewriteRelativeImportExtension,\r\n};\r\n","import { Disposer } from \"./Disposer\";\r\nimport { EventDispatcher } from \"./EventDispatcher\";\r\nimport { AnimationState, getInterpolate } from \"./Animation\";\r\nimport { States } from \"./States\";\r\nimport { registry } from \"../Registry\";\r\nimport * as $object from \"./Object\";\r\nimport * as $ease from \"./Ease\";\r\nimport * as $array from \"./Array\";\r\nimport * as $order from \"./Order\";\r\n/**\r\n * Allows to dynamically modify setting value of its target element.\r\n *\r\n * @see {@link https://www.amcharts.com/docs/v5/concepts/settings/adapters/} for more info\r\n */\r\nexport class Adapters {\r\n    constructor(entity) {\r\n        Object.defineProperty(this, \"_entity\", {\r\n            enumerable: true,\r\n            configurable: true,\r\n            writable: true,\r\n            value: void 0\r\n        });\r\n        Object.defineProperty(this, \"_callbacks\", {\r\n            enumerable: true,\r\n            configurable: true,\r\n            writable: true,\r\n            value: {}\r\n        });\r\n        Object.defineProperty(this, \"_disabled\", {\r\n            enumerable: true,\r\n            configurable: true,\r\n            writable: true,\r\n            value: {}\r\n        });\r\n        this._entity = entity;\r\n    }\r\n    /**\r\n     * Add a function (`callback`) that will modify value for setting `key`.\r\n     *\r\n     * @see {@link https://www.amcharts.com/docs/v5/concepts/settings/adapters/} for more info\r\n     */\r\n    add(key, callback) {\r\n        let callbacks = this._callbacks[key];\r\n        if (callbacks === undefined) {\r\n            callbacks = this._callbacks[key] = [];\r\n        }\r\n        callbacks.push(callback);\r\n        this._entity._markDirtyKey(key);\r\n        return new Disposer(() => {\r\n            if ($array.removeFirst(callbacks, callback)) {\r\n                this._entity._markDirtyKey(key);\r\n            }\r\n        });\r\n    }\r\n    /**\r\n     * Removes all adapters for the specific key.\r\n     *\r\n     * @since 5.1.0\r\n     */\r\n    remove(key) {\r\n        const callbacks = this._callbacks[key];\r\n        if (callbacks !== undefined) {\r\n            delete this._callbacks[key];\r\n            if (callbacks.length !== 0) {\r\n                this._entity._markDirtyKey(key);\r\n            }\r\n        }\r\n    }\r\n    /**\r\n     * Enables (previously disabled) adapters for specific key.\r\n     *\r\n     * @since 5.1.0\r\n     */\r\n    enable(key) {\r\n        if (this._disabled[key]) {\r\n            delete this._disabled[key];\r\n            this._entity._markDirtyKey(key);\r\n        }\r\n    }\r\n    /**\r\n     * Disables all adapters for specific key.\r\n     *\r\n     * @since 5.1.0\r\n     */\r\n    disable(key) {\r\n        if (!this._disabled[key]) {\r\n            this._disabled[key] = true;\r\n            this._entity._markDirtyKey(key);\r\n        }\r\n    }\r\n    /**\r\n     * @ignore\r\n     */\r\n    fold(key, value) {\r\n        if (!this._disabled[key]) {\r\n            const callbacks = this._callbacks[key];\r\n            if (callbacks !== undefined) {\r\n                for (let i = 0, len = callbacks.length; i < len; ++i) {\r\n                    value = callbacks[i](value, this._entity, key);\r\n                }\r\n            }\r\n        }\r\n        return value;\r\n    }\r\n}\r\n/**\r\n * Animation object.\r\n *\r\n * @see {@link https://www.amcharts.com/docs/v5/concepts/animations/} for more info\r\n */\r\nexport class Animation {\r\n    constructor(animation, from, to, duration, easing, loops, startingTime) {\r\n        Object.defineProperty(this, \"_animation\", {\r\n            enumerable: true,\r\n            configurable: true,\r\n            writable: true,\r\n            value: void 0\r\n        });\r\n        Object.defineProperty(this, \"_from\", {\r\n            enumerable: true,\r\n            configurable: true,\r\n            writable: true,\r\n            value: void 0\r\n        });\r\n        Object.defineProperty(this, \"_to\", {\r\n            enumerable: true,\r\n            configurable: true,\r\n            writable: true,\r\n            value: void 0\r\n        });\r\n        Object.defineProperty(this, \"_duration\", {\r\n            enumerable: true,\r\n            configurable: true,\r\n            writable: true,\r\n            value: void 0\r\n        });\r\n        Object.defineProperty(this, \"_easing\", {\r\n            enumerable: true,\r\n            configurable: true,\r\n            writable: true,\r\n            value: void 0\r\n        });\r\n        Object.defineProperty(this, \"_loops\", {\r\n            enumerable: true,\r\n            configurable: true,\r\n            writable: true,\r\n            value: void 0\r\n        });\r\n        Object.defineProperty(this, \"_interpolate\", {\r\n            enumerable: true,\r\n            configurable: true,\r\n            writable: true,\r\n            value: void 0\r\n        });\r\n        Object.defineProperty(this, \"_oldTime\", {\r\n            enumerable: true,\r\n            configurable: true,\r\n            writable: true,\r\n            value: void 0\r\n        });\r\n        Object.defineProperty(this, \"_time\", {\r\n            enumerable: true,\r\n            configurable: true,\r\n            writable: true,\r\n            value: 0\r\n        });\r\n        Object.defineProperty(this, \"_stopped\", {\r\n            enumerable: true,\r\n            configurable: true,\r\n            writable: true,\r\n            value: false\r\n        });\r\n        Object.defineProperty(this, \"_playing\", {\r\n            enumerable: true,\r\n            configurable: true,\r\n            writable: true,\r\n            value: true\r\n        });\r\n        Object.defineProperty(this, \"events\", {\r\n            enumerable: true,\r\n            configurable: true,\r\n            writable: true,\r\n            value: new EventDispatcher()\r\n        });\r\n        this._animation = animation;\r\n        this._from = from;\r\n        this._to = to;\r\n        this._duration = duration;\r\n        this._easing = easing;\r\n        this._loops = loops;\r\n        this._interpolate = getInterpolate(from, to);\r\n        this._oldTime = startingTime;\r\n    }\r\n    get to() {\r\n        return this._to;\r\n    }\r\n    get from() {\r\n        return this._from;\r\n    }\r\n    get playing() {\r\n        return this._playing;\r\n    }\r\n    get stopped() {\r\n        return this._stopped;\r\n    }\r\n    stop() {\r\n        if (!this._stopped) {\r\n            this._stopped = true;\r\n            this._playing = false;\r\n            if (this.events.isEnabled(\"stopped\")) {\r\n                this.events.dispatch(\"stopped\", {\r\n                    type: \"stopped\",\r\n                    target: this,\r\n                });\r\n            }\r\n        }\r\n    }\r\n    pause() {\r\n        this._playing = false;\r\n        this._oldTime = null;\r\n    }\r\n    play() {\r\n        if (!this._stopped && !this._playing) {\r\n            this._playing = true;\r\n            this._animation._startAnimation();\r\n        }\r\n    }\r\n    get percentage() {\r\n        return this._time / this._duration;\r\n    }\r\n    waitForStop() {\r\n        return new Promise((resolve, _reject) => {\r\n            if (this._stopped) {\r\n                resolve();\r\n            }\r\n            else {\r\n                const listener = () => {\r\n                    stopped.dispose();\r\n                    resolve();\r\n                };\r\n                const stopped = this.events.on(\"stopped\", listener);\r\n            }\r\n        });\r\n    }\r\n    _checkEnded() {\r\n        if (this._loops > 1) {\r\n            --this._loops;\r\n            return false;\r\n        }\r\n        else {\r\n            return true;\r\n        }\r\n    }\r\n    _run(currentTime) {\r\n        if (this._oldTime !== null) {\r\n            this._time += currentTime - this._oldTime;\r\n            if (this._time > this._duration) {\r\n                this._time = this._duration;\r\n            }\r\n        }\r\n        this._oldTime = currentTime;\r\n    }\r\n    _reset(currentTime) {\r\n        this._oldTime = currentTime;\r\n        this._time = 0;\r\n    }\r\n    _value(diff) {\r\n        return this._interpolate(this._easing(diff), this._from, this._to);\r\n    }\r\n}\r\n/**\r\n * @ignore\r\n */\r\nlet counter = 0;\r\n/**\r\n * Base class for [[Entity]] objects that support Settings.\r\n *\r\n * @see {@link https://www.amcharts.com/docs/v5/concepts/settings/} for more info\r\n */\r\nexport class Settings {\r\n    constructor(settings) {\r\n        /**\r\n         * Unique ID.\r\n         */\r\n        Object.defineProperty(this, \"uid\", {\r\n            enumerable: true,\r\n            configurable: true,\r\n            writable: true,\r\n            value: ++counter\r\n        });\r\n        Object.defineProperty(this, \"_settings\", {\r\n            enumerable: true,\r\n            configurable: true,\r\n            writable: true,\r\n            value: void 0\r\n        });\r\n        Object.defineProperty(this, \"_privateSettings\", {\r\n            enumerable: true,\r\n            configurable: true,\r\n            writable: true,\r\n            value: {}\r\n        });\r\n        Object.defineProperty(this, \"_settingEvents\", {\r\n            enumerable: true,\r\n            configurable: true,\r\n            writable: true,\r\n            value: {}\r\n        });\r\n        Object.defineProperty(this, \"_privateSettingEvents\", {\r\n            enumerable: true,\r\n            configurable: true,\r\n            writable: true,\r\n            value: {}\r\n        });\r\n        Object.defineProperty(this, \"_prevSettings\", {\r\n            enumerable: true,\r\n            configurable: true,\r\n            writable: true,\r\n            value: {}\r\n        });\r\n        Object.defineProperty(this, \"_prevPrivateSettings\", {\r\n            enumerable: true,\r\n            configurable: true,\r\n            writable: true,\r\n            value: {}\r\n        });\r\n        Object.defineProperty(this, \"_animatingSettings\", {\r\n            enumerable: true,\r\n            configurable: true,\r\n            writable: true,\r\n            value: {}\r\n        });\r\n        Object.defineProperty(this, \"_animatingPrivateSettings\", {\r\n            enumerable: true,\r\n            configurable: true,\r\n            writable: true,\r\n            value: {}\r\n        });\r\n        Object.defineProperty(this, \"_disposed\", {\r\n            enumerable: true,\r\n            configurable: true,\r\n            writable: true,\r\n            value: false\r\n        });\r\n        // TODO move this into Entity\r\n        Object.defineProperty(this, \"_userProperties\", {\r\n            enumerable: true,\r\n            configurable: true,\r\n            writable: true,\r\n            value: {}\r\n        });\r\n        /**\r\n         * If this is set to `false` then disposing does nothing, it's a no-op.\r\n         */\r\n        Object.defineProperty(this, \"enableDispose\", {\r\n            enumerable: true,\r\n            configurable: true,\r\n            writable: true,\r\n            value: true\r\n        });\r\n        this._settings = settings;\r\n    }\r\n    _checkDirty() {\r\n        $object.keys(this._settings).forEach((key) => {\r\n            this._userProperties[key] = true;\r\n            this._markDirtyKey(key);\r\n        });\r\n    }\r\n    /**\r\n     * @ignore\r\n     */\r\n    resetUserSettings() {\r\n        this._userProperties = {};\r\n    }\r\n    _runAnimation(currentTime) {\r\n        let state = AnimationState.Stopped;\r\n        if (!this.isDisposed()) {\r\n            let playing = false;\r\n            let paused = false;\r\n            $object.each(this._animatingSettings, (key, animation) => {\r\n                if (animation.stopped) {\r\n                    this._stopAnimation(key);\r\n                }\r\n                else if (animation.playing) {\r\n                    animation._run(currentTime);\r\n                    const diff = animation.percentage;\r\n                    if (diff >= 1) {\r\n                        if (animation._checkEnded()) {\r\n                            this.set(key, animation._value(1));\r\n                        }\r\n                        else {\r\n                            playing = true;\r\n                            animation._reset(currentTime);\r\n                            this._set(key, animation._value(1));\r\n                        }\r\n                    }\r\n                    else {\r\n                        playing = true;\r\n                        this._set(key, animation._value(diff));\r\n                    }\r\n                }\r\n                else {\r\n                    paused = true;\r\n                }\r\n            });\r\n            $object.each(this._animatingPrivateSettings, (key, animation) => {\r\n                if (animation.stopped) {\r\n                    this._stopAnimationPrivate(key);\r\n                }\r\n                else if (animation.playing) {\r\n                    animation._run(currentTime);\r\n                    const diff = animation.percentage;\r\n                    if (diff >= 1) {\r\n                        if (animation._checkEnded()) {\r\n                            this.setPrivate(key, animation._value(1));\r\n                        }\r\n                        else {\r\n                            playing = true;\r\n                            animation._reset(currentTime);\r\n                            this._setPrivate(key, animation._value(1));\r\n                        }\r\n                    }\r\n                    else {\r\n                        playing = true;\r\n                        this._setPrivate(key, animation._value(diff));\r\n                    }\r\n                }\r\n                else {\r\n                    paused = true;\r\n                }\r\n            });\r\n            if (playing) {\r\n                state = AnimationState.Playing;\r\n            }\r\n            else if (paused) {\r\n                state = AnimationState.Paused;\r\n            }\r\n        }\r\n        return state;\r\n    }\r\n    _markDirtyKey(_key) {\r\n        this.markDirty();\r\n    }\r\n    _markDirtyPrivateKey(_key) {\r\n        this.markDirty();\r\n    }\r\n    /**\r\n     * Sets a callback function to invoke when specific key of settings changes\r\n     * or is set.\r\n     *\r\n     * @see {@link https://www.amcharts.com/docs/v5/concepts/events/#Settings_value_change} for more info\r\n     * @param   key       Settings key\r\n     * @param   callback  Callback\r\n     * @return            Disposer for event\r\n     */\r\n    on(key, callback) {\r\n        let events = this._settingEvents[key];\r\n        if (events === undefined) {\r\n            events = this._settingEvents[key] = [];\r\n        }\r\n        events.push(callback);\r\n        return new Disposer(() => {\r\n            $array.removeFirst(events, callback);\r\n            if (events.length === 0) {\r\n                delete this._settingEvents[key];\r\n            }\r\n        });\r\n    }\r\n    /**\r\n     * Removes a callback for when value of a setting changes.\r\n     *\r\n     * @see {@link https://www.amcharts.com/docs/v5/concepts/events/#Settings_value_change} for more info\r\n     * @param   key       Private settings key\r\n     * @param   callback  Callback\r\n     * @since 5.9.2\r\n     */\r\n    off(key, callback) {\r\n        let events = this._settingEvents[key];\r\n        if (events !== undefined && callback !== undefined) {\r\n            $array.removeFirst(events, callback);\r\n        }\r\n        else {\r\n            delete this._settingEvents[key];\r\n        }\r\n    }\r\n    /**\r\n     * Sets a callback function to invoke when specific key of private settings\r\n     * changes or is set.\r\n     *\r\n     * @see {@link https://www.amcharts.com/docs/v5/concepts/events/#Settings_value_change} for more info\r\n     * @param   key       Private settings key\r\n     * @param   callback  Callback\r\n     * @return            Disposer for event\r\n     */\r\n    onPrivate(key, callback) {\r\n        let events = this._privateSettingEvents[key];\r\n        if (events === undefined) {\r\n            events = this._privateSettingEvents[key] = [];\r\n        }\r\n        events.push(callback);\r\n        return new Disposer(() => {\r\n            $array.removeFirst(events, callback);\r\n            if (events.length === 0) {\r\n                delete this._privateSettingEvents[key];\r\n            }\r\n        });\r\n    }\r\n    /**\r\n     * Removes a callback for when value of a private setting changes.\r\n     *\r\n     * @see {@link https://www.amcharts.com/docs/v5/concepts/events/#Settings_value_change} for more info\r\n     * @param   key       Private settings key\r\n     * @param   callback  Callback\r\n     * @since 5.9.2\r\n     */\r\n    offPrivate(key, callback) {\r\n        let events = this._privateSettingEvents[key];\r\n        if (events !== undefined && callback !== undefined) {\r\n            $array.removeFirst(events, callback);\r\n        }\r\n        else {\r\n            delete this._privateSettingEvents[key];\r\n        }\r\n    }\r\n    /**\r\n     * @ignore\r\n     */\r\n    getRaw(key, fallback) {\r\n        const value = this._settings[key];\r\n        if (value !== undefined) {\r\n            return value;\r\n        }\r\n        else {\r\n            return fallback;\r\n        }\r\n    }\r\n    /**\r\n     * Returns `true` if the setting exists.\r\n     *\r\n     * @see {@link https://www.amcharts.com/docs/v5/concepts/settings/} for more info\r\n     * @param   key        Settings key\r\n     * @return  {boolean}  Key exists\r\n     */\r\n    has(key) {\r\n        return key in this._settings;\r\n    }\r\n    get(key, fallback) {\r\n        return this.getRaw(key, fallback);\r\n    }\r\n    _sendKeyEvent(key, value) {\r\n        const events = this._settingEvents[key];\r\n        if (events !== undefined) {\r\n            $array.each(events, (callback) => {\r\n                callback(value, this, key);\r\n            });\r\n        }\r\n    }\r\n    _sendPrivateKeyEvent(key, value) {\r\n        const events = this._privateSettingEvents[key];\r\n        if (events !== undefined) {\r\n            $array.each(events, (callback) => {\r\n                callback(value, this, key);\r\n            });\r\n        }\r\n    }\r\n    /**\r\n     * @ignore\r\n     */\r\n    _setRaw(key, old, value) {\r\n        this._prevSettings[key] = old;\r\n        this._sendKeyEvent(key, value);\r\n    }\r\n    /**\r\n     * @ignore\r\n     */\r\n    setRaw(key, value) {\r\n        const old = this._settings[key];\r\n        this._settings[key] = value;\r\n        if (old !== value) {\r\n            this._setRaw(key, old, value);\r\n        }\r\n    }\r\n    /**\r\n     * @ignore\r\n     */\r\n    _set(key, value) {\r\n        const old = this._settings[key];\r\n        this._settings[key] = value;\r\n        if (old !== value) {\r\n            this._setRaw(key, old, value);\r\n            this._markDirtyKey(key);\r\n        }\r\n    }\r\n    _stopAnimation(key) {\r\n        const animation = this._animatingSettings[key];\r\n        if (animation) {\r\n            delete this._animatingSettings[key];\r\n            animation.stop();\r\n        }\r\n    }\r\n    /**\r\n     * Sets a setting `value` for the specified `key`, and returns the same `value`.\r\n     *\r\n     * @see {@link https://www.amcharts.com/docs/v5/concepts/settings/} for more info\r\n     * @param   key       Setting key\r\n     * @param   value     Setting value\r\n     * @return            Setting value\r\n     */\r\n    set(key, value) {\r\n        this._set(key, value);\r\n        this._stopAnimation(key);\r\n        return value;\r\n    }\r\n    /**\r\n     * Removes a setting value for the specified `key`;\r\n     *\r\n     * @see {@link https://www.amcharts.com/docs/v5/concepts/settings/} for more info\r\n     * @param   key       Setting key\r\n     */\r\n    remove(key) {\r\n        if (key in this._settings) {\r\n            this._prevSettings[key] = this._settings[key];\r\n            delete this._settings[key];\r\n            this._sendKeyEvent(key, undefined);\r\n            this._markDirtyKey(key);\r\n        }\r\n        this._stopAnimation(key);\r\n    }\r\n    /**\r\n     * Removes all keys;\r\n     *\r\n     * @see {@link https://www.amcharts.com/docs/v5/concepts/settings/} for more info\r\n     */\r\n    removeAll() {\r\n        $array.each($object.keys(this._settings), (key) => {\r\n            this.remove(key);\r\n        });\r\n    }\r\n    /**\r\n     * Returns a value of a private setting.\r\n     *\r\n     * @see {@link https://www.amcharts.com/docs/v5/concepts/settings/#Private_settings} for more info\r\n     */\r\n    getPrivate(key, fallback) {\r\n        const value = this._privateSettings[key];\r\n        if (value !== undefined) {\r\n            return value;\r\n        }\r\n        else {\r\n            return fallback;\r\n        }\r\n    }\r\n    /**\r\n     * @ignore\r\n     */\r\n    _setPrivateRaw(key, old, value) {\r\n        this._prevPrivateSettings[key] = old;\r\n        this._sendPrivateKeyEvent(key, value);\r\n    }\r\n    /**\r\n     * @ignore\r\n     */\r\n    setPrivateRaw(key, value) {\r\n        const old = this._privateSettings[key];\r\n        this._privateSettings[key] = value;\r\n        if (old !== value) {\r\n            this._setPrivateRaw(key, old, value);\r\n        }\r\n    }\r\n    /**\r\n     * @ignore\r\n     */\r\n    _setPrivate(key, value) {\r\n        const old = this._privateSettings[key];\r\n        this._privateSettings[key] = value;\r\n        if (old !== value) {\r\n            this._setPrivateRaw(key, old, value);\r\n            this._markDirtyPrivateKey(key);\r\n        }\r\n    }\r\n    _stopAnimationPrivate(key) {\r\n        const animation = this._animatingPrivateSettings[key];\r\n        if (animation) {\r\n            animation.stop();\r\n            delete this._animatingPrivateSettings[key];\r\n        }\r\n    }\r\n    /**\r\n     * @ignore\r\n     */\r\n    setPrivate(key, value) {\r\n        this._setPrivate(key, value);\r\n        this._stopAnimationPrivate(key);\r\n        return value;\r\n    }\r\n    /**\r\n     * @ignore\r\n     */\r\n    removePrivate(key) {\r\n        if (key in this._privateSettings) {\r\n            this._prevPrivateSettings[key] = this._privateSettings[key];\r\n            delete this._privateSettings[key];\r\n            this._markDirtyPrivateKey(key);\r\n        }\r\n        this._stopAnimationPrivate(key);\r\n    }\r\n    /**\r\n     * Sets multiple settings at once.\r\n     *\r\n     * `settings` must be an object with key: value pairs.\r\n     *\r\n     * @see {@link https://www.amcharts.com/docs/v5/concepts/settings/} for more info\r\n     * @param settings Settings\r\n     */\r\n    setAll(settings) {\r\n        $object.each(settings, (key, value) => {\r\n            this.set(key, value);\r\n        });\r\n    }\r\n    /**\r\n     * Animates setting values from current/start values to new ones.\r\n     *\r\n     * @see {@link https://www.amcharts.com/docs/v5/concepts/animations/#Animating_settings} for more info\r\n     * @param   options  Animation options\r\n     * @return           Animation object\r\n     */\r\n    animate(options) {\r\n        const key = options.key;\r\n        const to = options.to;\r\n        const duration = options.duration || 0;\r\n        const loops = options.loops || 1;\r\n        const from = (options.from === undefined ? this.get(key) : options.from);\r\n        const easing = (options.easing === undefined ? $ease.linear : options.easing);\r\n        if (duration === 0) {\r\n            this.set(key, to);\r\n        }\r\n        else {\r\n            if (from === undefined || from === to) {\r\n                this.set(key, to);\r\n            }\r\n            else {\r\n                this.set(key, from);\r\n                const animation = this._animatingSettings[key] = new Animation(this, from, to, duration, easing, loops, this._animationTime());\r\n                this._startAnimation();\r\n                return animation;\r\n            }\r\n        }\r\n        const animation = new Animation(this, from, to, duration, easing, loops, null);\r\n        animation.stop();\r\n        return animation;\r\n    }\r\n    /**\r\n     * @ignore\r\n     */\r\n    animatePrivate(options) {\r\n        const key = options.key;\r\n        const to = options.to;\r\n        const duration = options.duration || 0;\r\n        const loops = options.loops || 1;\r\n        const from = (options.from === undefined ? this.getPrivate(key) : options.from);\r\n        const easing = (options.easing === undefined ? $ease.linear : options.easing);\r\n        if (duration === 0) {\r\n            this.setPrivate(key, to);\r\n        }\r\n        else {\r\n            if (from === undefined || from === to) {\r\n                this.setPrivate(key, to);\r\n            }\r\n            else {\r\n                this.setPrivate(key, from);\r\n                const animation = this._animatingPrivateSettings[key] = new Animation(this, from, to, duration, easing, loops, this._animationTime());\r\n                this._startAnimation();\r\n                return animation;\r\n            }\r\n        }\r\n        const animation = new Animation(this, from, to, duration, easing, loops, null);\r\n        animation.stop();\r\n        return animation;\r\n    }\r\n    _dispose() { }\r\n    /**\r\n     * Returns `true` if this element is disposed.\r\n     *\r\n     * @return Disposed\r\n     */\r\n    isDisposed() {\r\n        return this._disposed;\r\n    }\r\n    /**\r\n     * Disposes this object.\r\n     */\r\n    dispose() {\r\n        if (this.enableDispose && !this._disposed) {\r\n            this._disposed = true;\r\n            this._dispose();\r\n        }\r\n    }\r\n}\r\n/**\r\n * Base class.\r\n *\r\n * @important\r\n */\r\nexport class Entity extends Settings {\r\n    /**\r\n     * IMPORTANT! Do not instantiate this class via `new Class()` syntax.\r\n     *\r\n     * Use static method `Class.new()` instead.\r\n     *\r\n     * @see {@link https://www.amcharts.com/docs/v5/getting-started/#New_element_syntax} for more info\r\n     * @ignore\r\n     */\r\n    constructor(root, settings, isReal, templates = []) {\r\n        super(settings);\r\n        Object.defineProperty(this, \"_root\", {\r\n            enumerable: true,\r\n            configurable: true,\r\n            writable: true,\r\n            value: void 0\r\n        });\r\n        Object.defineProperty(this, \"_user_id\", {\r\n            enumerable: true,\r\n            configurable: true,\r\n            writable: true,\r\n            value: void 0\r\n        }); // for testing purposes\r\n        Object.defineProperty(this, \"states\", {\r\n            enumerable: true,\r\n            configurable: true,\r\n            writable: true,\r\n            value: new States(this)\r\n        });\r\n        Object.defineProperty(this, \"adapters\", {\r\n            enumerable: true,\r\n            configurable: true,\r\n            writable: true,\r\n            value: new Adapters(this)\r\n        });\r\n        Object.defineProperty(this, \"events\", {\r\n            enumerable: true,\r\n            configurable: true,\r\n            writable: true,\r\n            value: this._createEvents()\r\n        });\r\n        Object.defineProperty(this, \"_userPrivateProperties\", {\r\n            enumerable: true,\r\n            configurable: true,\r\n            writable: true,\r\n            value: {}\r\n        });\r\n        Object.defineProperty(this, \"_dirty\", {\r\n            enumerable: true,\r\n            configurable: true,\r\n            writable: true,\r\n            value: {}\r\n        });\r\n        Object.defineProperty(this, \"_dirtyPrivate\", {\r\n            enumerable: true,\r\n            configurable: true,\r\n            writable: true,\r\n            value: {}\r\n        });\r\n        Object.defineProperty(this, \"_template\", {\r\n            enumerable: true,\r\n            configurable: true,\r\n            writable: true,\r\n            value: void 0\r\n        });\r\n        // Templates for the themes\r\n        Object.defineProperty(this, \"_templates\", {\r\n            enumerable: true,\r\n            configurable: true,\r\n            writable: true,\r\n            value: []\r\n        });\r\n        // Internal templates which can be overridden by the user's templates\r\n        Object.defineProperty(this, \"_internalTemplates\", {\r\n            enumerable: true,\r\n            configurable: true,\r\n            writable: true,\r\n            value: void 0\r\n        });\r\n        // Default themes which can be overridden by the user's themes\r\n        Object.defineProperty(this, \"_defaultThemes\", {\r\n            enumerable: true,\r\n            configurable: true,\r\n            writable: true,\r\n            value: []\r\n        });\r\n        // Disposers for all of the templates\r\n        Object.defineProperty(this, \"_templateDisposers\", {\r\n            enumerable: true,\r\n            configurable: true,\r\n            writable: true,\r\n            value: []\r\n        });\r\n        Object.defineProperty(this, \"_disposers\", {\r\n            enumerable: true,\r\n            configurable: true,\r\n            writable: true,\r\n            value: []\r\n        });\r\n        // Whether the template setup function should be run\r\n        Object.defineProperty(this, \"_runSetup\", {\r\n            enumerable: true,\r\n            configurable: true,\r\n            writable: true,\r\n            value: true\r\n        });\r\n        Object.defineProperty(this, \"_disposerProperties\", {\r\n            enumerable: true,\r\n            configurable: true,\r\n            writable: true,\r\n            value: {}\r\n        });\r\n        if (!isReal) {\r\n            throw new Error(\"You cannot use `new Class()`, instead use `Class.new()`\");\r\n        }\r\n        this._root = root;\r\n        this._internalTemplates = templates;\r\n        if (settings.id) {\r\n            this._registerId(settings.id);\r\n        }\r\n    }\r\n    /**\r\n     * Use this method to create an instance of this class.\r\n     *\r\n     * @see {@link https://www.amcharts.com/docs/v5/getting-started/#New_element_syntax} for more info\r\n     * @param   root      Root element\r\n     * @param   settings  Settings\r\n     * @param   template  Template\r\n     * @return            Instantiated object\r\n     */\r\n    static new(root, settings, template) {\r\n        const x = (new this(root, settings, true));\r\n        x._template = template;\r\n        x._afterNew();\r\n        return x;\r\n    }\r\n    static _new(root, settings, templates = []) {\r\n        const x = (new this(root, settings, true, templates));\r\n        x._afterNew();\r\n        return x;\r\n    }\r\n    _afterNew() {\r\n        this._checkDirty();\r\n        let shouldApply = false;\r\n        const template = this._template;\r\n        if (template) {\r\n            shouldApply = true;\r\n            template._setObjectTemplate(this);\r\n        }\r\n        $array.each(this._internalTemplates, (template) => {\r\n            shouldApply = true;\r\n            template._setObjectTemplate(this);\r\n        });\r\n        if (shouldApply) {\r\n            this._applyTemplates(false);\r\n        }\r\n        this.states.create(\"default\", {});\r\n        this._setDefaults();\r\n    }\r\n    // This is the same as _afterNew, except it also applies the themes.\r\n    // This should only be used for classes which don't have a parent (because they extend from Entity and not Sprite).\r\n    _afterNewApplyThemes() {\r\n        this._checkDirty();\r\n        const template = this._template;\r\n        if (template) {\r\n            template._setObjectTemplate(this);\r\n        }\r\n        $array.each(this._internalTemplates, (template) => {\r\n            template._setObjectTemplate(this);\r\n        });\r\n        this.states.create(\"default\", {});\r\n        this._setDefaults();\r\n        this._applyThemes();\r\n    }\r\n    _createEvents() {\r\n        return new EventDispatcher();\r\n    }\r\n    /**\r\n     * @ignore\r\n     */\r\n    get classNames() {\r\n        return this.constructor.classNames;\r\n    }\r\n    /**\r\n     * @ignore\r\n     */\r\n    get className() {\r\n        return this.constructor.className;\r\n    }\r\n    _setDefaults() {\r\n    }\r\n    _setDefaultFn(key, f) {\r\n        const value = this.get(key);\r\n        if (value) {\r\n            return value;\r\n        }\r\n        else {\r\n            const value = f();\r\n            this.set(key, value);\r\n            return value;\r\n        }\r\n    }\r\n    _setDefault(key, value) {\r\n        if (!this.has(key)) {\r\n            super.set(key, value);\r\n        }\r\n    }\r\n    _setRawDefault(key, value) {\r\n        if (!this.has(key)) {\r\n            super.setRaw(key, value);\r\n        }\r\n    }\r\n    _clearDirty() {\r\n        $object.keys(this._dirty).forEach((key) => {\r\n            this._dirty[key] = false;\r\n        });\r\n        $object.keys(this._dirtyPrivate).forEach((key) => {\r\n            this._dirtyPrivate[key] = false;\r\n        });\r\n    }\r\n    /**\r\n     * @ignore\r\n     */\r\n    isDirty(key) {\r\n        return !!this._dirty[key];\r\n    }\r\n    /**\r\n     * @ignore\r\n     */\r\n    isPrivateDirty(key) {\r\n        return !!this._dirtyPrivate[key];\r\n    }\r\n    _markDirtyKey(key) {\r\n        this._dirty[key] = true;\r\n        super._markDirtyKey(key);\r\n    }\r\n    _markDirtyPrivateKey(key) {\r\n        this._dirtyPrivate[key] = true;\r\n        super._markDirtyKey(key);\r\n    }\r\n    /**\r\n     * Checks if element is of certain class (or inherits one).\r\n     *\r\n     * @param   type  Class name to check\r\n     * @return {boolean} Is of class?\r\n     */\r\n    isType(type) {\r\n        return this.classNames.indexOf(type) !== -1;\r\n    }\r\n    _pushPropertyDisposer(key, disposer) {\r\n        let disposers = this._disposerProperties[key];\r\n        if (disposers === undefined) {\r\n            disposers = this._disposerProperties[key] = [];\r\n        }\r\n        disposers.push(disposer);\r\n        return disposer;\r\n    }\r\n    _disposeProperty(key) {\r\n        const disposers = this._disposerProperties[key];\r\n        if (disposers !== undefined) {\r\n            $array.each(disposers, (disposer) => {\r\n                disposer.dispose();\r\n            });\r\n            delete this._disposerProperties[key];\r\n        }\r\n    }\r\n    /**\r\n     * @todo needs description\r\n     * @param  value  Template\r\n     */\r\n    set template(value) {\r\n        const template = this._template;\r\n        if (template !== value) {\r\n            this._template = value;\r\n            if (template) {\r\n                template._removeObjectTemplate(this);\r\n            }\r\n            if (value) {\r\n                value._setObjectTemplate(this);\r\n            }\r\n            this._applyTemplates();\r\n        }\r\n    }\r\n    get template() {\r\n        return this._template;\r\n    }\r\n    /**\r\n     * @ignore\r\n     */\r\n    markDirty() {\r\n        this._root._addDirtyEntity(this);\r\n    }\r\n    _startAnimation() {\r\n        this._root._addAnimation(this);\r\n    }\r\n    _animationTime() {\r\n        return this._root.animationTime;\r\n    }\r\n    _applyState(_name) { }\r\n    _applyStateAnimated(_name, _duration) { }\r\n    get(key, fallback) {\r\n        const value = this.adapters.fold(key, this._settings[key]);\r\n        if (value !== undefined) {\r\n            return value;\r\n        }\r\n        else {\r\n            return fallback;\r\n        }\r\n    }\r\n    /**\r\n     * @ignore\r\n     */\r\n    isUserSetting(key) {\r\n        return this._userProperties[key] || false;\r\n    }\r\n    /**\r\n     * Sets a setting `value` for the specified `key`, and returns the same `value`.\r\n     *\r\n     * @see {@link https://www.amcharts.com/docs/v5/concepts/settings/} for more info\r\n     * @param   key       Setting key\r\n     * @param   value     Setting value\r\n     * @return            Setting value\r\n     */\r\n    set(key, value) {\r\n        this._userProperties[key] = true;\r\n        return super.set(key, value);\r\n    }\r\n    /**\r\n     * @ignore\r\n     */\r\n    setRaw(key, value) {\r\n        this._userProperties[key] = true;\r\n        super.setRaw(key, value);\r\n    }\r\n    /**\r\n     * Sets a setting `value` for the specified `key` only if the value for this key was not set previously using set method, and returns the same `value`.\r\n     *\r\n     * @see {@link https://www.amcharts.com/docs/v5/concepts/settings/} for more info\r\n     * @param   key       Setting key\r\n     * @param   value     Setting value\r\n     * @return            Setting value\r\n     */\r\n    _setSoft(key, value) {\r\n        if (!this._userProperties[key]) {\r\n            return super.set(key, value);\r\n        }\r\n        return value;\r\n    }\r\n    /**\r\n     * Removes a setting value for the specified `key`.\r\n     *\r\n     * @see {@link https://www.amcharts.com/docs/v5/concepts/settings/} for more info\r\n     * @param   key       Setting key\r\n     */\r\n    remove(key) {\r\n        delete this._userProperties[key];\r\n        this._removeTemplateProperty(key);\r\n    }\r\n    /**\r\n     * @ignore\r\n     */\r\n    setPrivate(key, value) {\r\n        this._userPrivateProperties[key] = true;\r\n        return super.setPrivate(key, value);\r\n    }\r\n    /**\r\n     * @ignore\r\n     */\r\n    setPrivateRaw(key, value) {\r\n        this._userPrivateProperties[key] = true;\r\n        super.setPrivateRaw(key, value);\r\n    }\r\n    /**\r\n     * @ignore\r\n     */\r\n    removePrivate(key) {\r\n        delete this._userPrivateProperties[key];\r\n        this._removeTemplatePrivateProperty(key);\r\n    }\r\n    _setTemplateProperty(template, key, value) {\r\n        if (!this._userProperties[key]) {\r\n            const match = this._findTemplateByKey(key);\r\n            if (template === match) {\r\n                super.set(key, value);\r\n            }\r\n        }\r\n    }\r\n    _setTemplatePrivateProperty(template, key, value) {\r\n        if (!this._userPrivateProperties[key]) {\r\n            const match = this._findTemplateByPrivateKey(key);\r\n            if (template === match) {\r\n                super.setPrivate(key, value);\r\n            }\r\n        }\r\n    }\r\n    _removeTemplateProperty(key) {\r\n        if (!this._userProperties[key]) {\r\n            const match = this._findTemplateByKey(key);\r\n            if (match) {\r\n                // TODO don't stop the animation if the property didn't change\r\n                super.set(key, match._settings[key]);\r\n            }\r\n            else {\r\n                super.remove(key);\r\n            }\r\n        }\r\n    }\r\n    _removeTemplatePrivateProperty(key) {\r\n        if (!this._userPrivateProperties[key]) {\r\n            const match = this._findTemplateByPrivateKey(key);\r\n            if (match) {\r\n                // TODO don't stop the animation if the property didn't change\r\n                super.setPrivate(key, match._privateSettings[key]);\r\n            }\r\n            else {\r\n                super.removePrivate(key);\r\n            }\r\n        }\r\n    }\r\n    _walkParents(f) {\r\n        f(this._root._rootContainer);\r\n        f(this);\r\n    }\r\n    // TODO faster version of this method which is specialized to just 1 key\r\n    _applyStateByKey(name) {\r\n        const other = this.states.create(name, {});\r\n        const seen = {};\r\n        this._eachTemplate((template) => {\r\n            const state = template.states.lookup(name);\r\n            if (state) {\r\n                state._apply(other, seen);\r\n            }\r\n        });\r\n        $object.each(other._settings, (key) => {\r\n            if (!seen[key] && !other._userSettings[key]) {\r\n                other.remove(key);\r\n            }\r\n        });\r\n    }\r\n    _applyTemplate(template, state) {\r\n        this._templateDisposers.push(template._apply(this, state));\r\n        $object.each(template._settings, (key, value) => {\r\n            if (!state.settings[key] && !this._userProperties[key]) {\r\n                state.settings[key] = true;\r\n                super.set(key, value);\r\n            }\r\n        });\r\n        $object.each(template._privateSettings, (key, value) => {\r\n            if (!state.privateSettings[key] && !this._userPrivateProperties[key]) {\r\n                state.privateSettings[key] = true;\r\n                super.setPrivate(key, value);\r\n            }\r\n        });\r\n        if (this._runSetup && template.setup) {\r\n            this._runSetup = false;\r\n            template.setup(this);\r\n        }\r\n    }\r\n    /**\r\n     * Calls the closure with each template and returns the first template which is true\r\n     */\r\n    _findStaticTemplate(f) {\r\n        if (this._template) {\r\n            if (f(this._template)) {\r\n                return this._template;\r\n            }\r\n        }\r\n    }\r\n    _eachTemplate(f) {\r\n        this._findStaticTemplate((template) => {\r\n            f(template);\r\n            return false;\r\n        });\r\n        // _internalTemplates is sorted with most specific to the right\r\n        $array.eachReverse(this._internalTemplates, f);\r\n        // _templates is sorted with most specific to the left\r\n        $array.each(this._templates, f);\r\n    }\r\n    _applyTemplates(remove = true) {\r\n        if (remove) {\r\n            this._disposeTemplates();\r\n        }\r\n        const state = {\r\n            settings: {},\r\n            privateSettings: {},\r\n            states: {},\r\n        };\r\n        this._eachTemplate((template) => {\r\n            this._applyTemplate(template, state);\r\n        });\r\n        if (remove) {\r\n            $object.each(this._settings, (key) => {\r\n                if (!this._userProperties[key] && !state.settings[key]) {\r\n                    super.remove(key);\r\n                }\r\n            });\r\n            $object.each(this._privateSettings, (key) => {\r\n                if (!this._userPrivateProperties[key] && !state.privateSettings[key]) {\r\n                    super.removePrivate(key);\r\n                }\r\n            });\r\n        }\r\n    }\r\n    _findTemplate(f) {\r\n        const value = this._findStaticTemplate(f);\r\n        if (value === undefined) {\r\n            // _internalTemplates is sorted with most specific to the right\r\n            const value = $array.findReverse(this._internalTemplates, f);\r\n            if (value === undefined) {\r\n                // _templates is sorted with most specific to the left\r\n                return $array.find(this._templates, f);\r\n            }\r\n            else {\r\n                return value;\r\n            }\r\n        }\r\n        else {\r\n            return value;\r\n        }\r\n    }\r\n    _findTemplateByKey(key) {\r\n        return this._findTemplate((template) => {\r\n            return key in template._settings;\r\n        });\r\n    }\r\n    _findTemplateByPrivateKey(key) {\r\n        return this._findTemplate((template) => {\r\n            return key in template._privateSettings;\r\n        });\r\n    }\r\n    _disposeTemplates() {\r\n        $array.each(this._templateDisposers, (disposer) => {\r\n            disposer.dispose();\r\n        });\r\n        this._templateDisposers.length = 0;\r\n    }\r\n    _removeTemplates() {\r\n        $array.each(this._templates, (template) => {\r\n            template._removeObjectTemplate(this);\r\n        });\r\n        this._templates.length = 0;\r\n    }\r\n    _applyThemes(force = false) {\r\n        let isConnected = false;\r\n        const defaults = [];\r\n        let themes = [];\r\n        const themeTags = new Set();\r\n        const tags = this.get(\"themeTagsSelf\");\r\n        if (tags) {\r\n            $array.each(tags, (tag) => {\r\n                themeTags.add(tag);\r\n            });\r\n        }\r\n        this._walkParents((entity) => {\r\n            if (entity === this._root._rootContainer) {\r\n                isConnected = true;\r\n            }\r\n            if (entity._defaultThemes.length > 0) {\r\n                defaults.push(entity._defaultThemes);\r\n            }\r\n            const theme = entity.get(\"themes\");\r\n            if (theme) {\r\n                themes.push(theme);\r\n            }\r\n            const tags = entity.get(\"themeTags\");\r\n            if (tags) {\r\n                $array.each(tags, (tag) => {\r\n                    themeTags.add(tag);\r\n                });\r\n            }\r\n        });\r\n        themes = defaults.concat(themes);\r\n        this._removeTemplates();\r\n        if (isConnected || force) {\r\n            $array.eachReverse(this.classNames, (name) => {\r\n                const allRules = [];\r\n                $array.each(themes, (themes) => {\r\n                    $array.each(themes, (theme) => {\r\n                        const rules = theme._lookupRules(name);\r\n                        if (rules) {\r\n                            $array.eachReverse(rules, (rule) => {\r\n                                const matches = rule.tags.every((tag) => {\r\n                                    return themeTags.has(tag);\r\n                                });\r\n                                if (matches) {\r\n                                    const result = $array.getFirstSortedIndex(allRules, (x) => {\r\n                                        const order = $order.compare(rule.tags.length, x.tags.length);\r\n                                        if (order === 0) {\r\n                                            return $order.compareArray(rule.tags, x.tags, $order.compare);\r\n                                        }\r\n                                        else {\r\n                                            return order;\r\n                                        }\r\n                                    });\r\n                                    allRules.splice(result.index, 0, rule);\r\n                                }\r\n                            });\r\n                        }\r\n                    });\r\n                });\r\n                $array.each(allRules, (rule) => {\r\n                    this._templates.push(rule.template);\r\n                    rule.template._setObjectTemplate(this);\r\n                });\r\n            });\r\n        }\r\n        this._applyTemplates();\r\n        if (isConnected || force) {\r\n            // This causes it to only run the setup function the first time that the themes are applied\r\n            this._runSetup = false;\r\n        }\r\n        return isConnected || force;\r\n    }\r\n    _changed() { }\r\n    _beforeChanged() {\r\n        if (this.isDirty(\"id\")) {\r\n            const id = this.get(\"id\");\r\n            if (id) {\r\n                this._registerId(id);\r\n            }\r\n            const prevId = this._prevSettings.id;\r\n            if (prevId) {\r\n                delete registry.entitiesById[prevId];\r\n            }\r\n        }\r\n    }\r\n    _registerId(id) {\r\n        if (registry.entitiesById[id] && registry.entitiesById[id] !== this) {\r\n            throw new Error(\"An entity with id \\\"\" + id + \"\\\" already exists.\");\r\n        }\r\n        registry.entitiesById[id] = this;\r\n    }\r\n    _afterChanged() { }\r\n    /**\r\n     * @ignore\r\n     */\r\n    addDisposer(disposer) {\r\n        this._disposers.push(disposer);\r\n        return disposer;\r\n    }\r\n    _dispose() {\r\n        super._dispose();\r\n        const template = this._template;\r\n        if (template) {\r\n            template._removeObjectTemplate(this);\r\n        }\r\n        $array.each(this._internalTemplates, (template) => {\r\n            template._removeObjectTemplate(this);\r\n        });\r\n        this._removeTemplates();\r\n        this._disposeTemplates();\r\n        this.events.dispose();\r\n        this._disposers.forEach((x) => {\r\n            x.dispose();\r\n        });\r\n        $object.each(this._disposerProperties, (_, disposers) => {\r\n            $array.each(disposers, (disposer) => {\r\n                disposer.dispose();\r\n            });\r\n        });\r\n        const id = this.get(\"id\");\r\n        if (id) {\r\n            delete registry.entitiesById[id];\r\n        }\r\n    }\r\n    /**\r\n     * Creates and returns a \"disposable\" timeout.\r\n     *\r\n     * @param   fn     Callback\r\n     * @param   delay  Delay in milliseconds\r\n     * @return         Timeout disposer\r\n     */\r\n    setTimeout(fn, delay) {\r\n        const id = setTimeout(() => {\r\n            this.removeDispose(disposer);\r\n            fn();\r\n        }, delay);\r\n        const disposer = new Disposer(() => {\r\n            clearTimeout(id);\r\n        });\r\n        this._disposers.push(disposer);\r\n        return disposer;\r\n    }\r\n    /**\r\n     * @ignore\r\n     */\r\n    removeDispose(target) {\r\n        if (!this.isDisposed()) {\r\n            let index = $array.indexOf(this._disposers, target);\r\n            if (index > -1) {\r\n                this._disposers.splice(index, 1);\r\n            }\r\n        }\r\n        target.dispose();\r\n    }\r\n    /**\r\n     * @ignore\r\n     */\r\n    hasTag(tag) {\r\n        return $array.indexOf(this.get(\"themeTags\", []), tag) !== -1;\r\n    }\r\n    /**\r\n     * @ignore\r\n     */\r\n    addTag(tag) {\r\n        if (!this.hasTag(tag)) {\r\n            const tags = this.get(\"themeTags\", []);\r\n            tags.push(tag);\r\n            this.set(\"themeTags\", tags);\r\n        }\r\n    }\r\n    /**\r\n     * @ignore\r\n     */\r\n    removeTag(tag) {\r\n        if (this.hasTag(tag)) {\r\n            const tags = this.get(\"themeTags\", []);\r\n            $array.remove(tags, tag);\r\n            this.set(\"themeTags\", tags);\r\n        }\r\n    }\r\n    _t(text, locale, ...rest) {\r\n        return this._root.language.translate(text, locale, ...rest);\r\n    }\r\n    /**\r\n     * An instance of [[Root]] object.\r\n     *\r\n     * @readonly\r\n     * @since 5.0.6\r\n     * @return Root object\r\n     */\r\n    get root() {\r\n        return this._root;\r\n    }\r\n}\r\nObject.defineProperty(Entity, \"className\", {\r\n    enumerable: true,\r\n    configurable: true,\r\n    writable: true,\r\n    value: \"Entity\"\r\n});\r\nObject.defineProperty(Entity, \"classNames\", {\r\n    enumerable: true,\r\n    configurable: true,\r\n    writable: true,\r\n    value: [\"Entity\"]\r\n});\r\n//# sourceMappingURL=Entity.js.map","import type { Root } from \"../Root\";\nimport type { Template, ApplyState } from \"./Template\";\nimport type { Theme, IRule } from \"../Theme\";\nimport type { ILocale } from \"./Language\";\n\nimport { IDisposer, Disposer } from \"./Disposer\";\nimport { EventDispatcher, Events } from \"./EventDispatcher\";\nimport { Time, IAnimation, AnimationState, getInterpolate } from \"./Animation\";\nimport { States } from \"./States\";\nimport { registry } from \"../Registry\";\n\nimport * as $object from \"./Object\";\nimport * as $ease from \"./Ease\";\nimport * as $array from \"./Array\";\nimport * as $order from \"./Order\";\n\n/**\n * @ignore\n */\nexport type Dirty<A> = { [K in keyof A]?: boolean };\n\n\n/**\n * Allows to dynamically modify setting value of its target element.\n *\n * @see {@link https://www.amcharts.com/docs/v5/concepts/settings/adapters/} for more info\n */\nexport class Adapters<E extends Settings> {\n\tprivate _entity: E;\n\tprivate _callbacks: { [K in keyof E[\"_settings\"]]?: Array<<O extends E>(value: O[\"_settings\"][K], target: O, key: K) => O[\"_settings\"][K]> } = {};\n\tprivate _disabled: { [K in keyof E[\"_settings\"]]?: boolean } = {};\n\n\tconstructor(entity: E) {\n\t\tthis._entity = entity;\n\t}\n\n\t/**\n\t * Add a function (`callback`) that will modify value for setting `key`.\n\t *\n\t * @see {@link https://www.amcharts.com/docs/v5/concepts/settings/adapters/} for more info\n\t */\n\tpublic add<Key extends keyof E[\"_settings\"]>(key: Key, callback: (value: E[\"_settings\"][Key], target: E, key: Key) => E[\"_settings\"][Key]): IDisposer {\n\t\tlet callbacks = this._callbacks[key];\n\n\t\tif (callbacks === undefined) {\n\t\t\tcallbacks = this._callbacks[key] = [];\n\t\t}\n\n\t\tcallbacks.push(callback);\n\n\t\tthis._entity._markDirtyKey(key);\n\n\t\treturn new Disposer(() => {\n\t\t\tif ($array.removeFirst(callbacks!, callback)) {\n\t\t\t\tthis._entity._markDirtyKey(key);\n\t\t\t}\n\t\t});\n\t}\n\n\t/**\n\t * Removes all adapters for the specific key.\n\t *\n\t * @since 5.1.0\n\t */\n\tpublic remove<Key extends keyof E[\"_settings\"]>(key: Key) {\n\t\tconst callbacks = this._callbacks[key];\n\n\t\tif (callbacks !== undefined) {\n\t\t\tdelete this._callbacks[key];\n\n\t\t\tif (callbacks.length !== 0) {\n\t\t\t\tthis._entity._markDirtyKey(key);\n\t\t\t}\n\t\t}\n\t}\n\n\t/**\n\t * Enables (previously disabled) adapters for specific key.\n\t *\n\t * @since 5.1.0\n\t */\n\tpublic enable<Key extends keyof E[\"_settings\"]>(key: Key) {\n\t\tif (this._disabled[key]) {\n\t\t\tdelete this._disabled[key];\n\t\t\tthis._entity._markDirtyKey(key);\n\t\t}\n\t}\n\n\t/**\n\t * Disables all adapters for specific key.\n\t *\n\t * @since 5.1.0\n\t */\n\tpublic disable<Key extends keyof E[\"_settings\"]>(key: Key) {\n\t\tif (!this._disabled[key]) {\n\t\t\tthis._disabled[key] = true;\n\t\t\tthis._entity._markDirtyKey(key);\n\t\t}\n\t}\n\n\t/**\n\t * @ignore\n\t */\n\tpublic fold<Key extends keyof E[\"_settings\"]>(key: Key, value: E[\"_settings\"][Key]): E[\"_settings\"][Key] {\n\t\tif (!this._disabled[key]) {\n\t\t\tconst callbacks = this._callbacks[key];\n\n\t\t\tif (callbacks !== undefined) {\n\t\t\t\tfor (let i = 0, len = callbacks.length; i < len; ++i) {\n\t\t\t\t\tvalue = callbacks[i](value, this._entity, key);\n\t\t\t\t}\n\t\t\t}\n\t\t}\n\n\t\treturn value;\n\t}\n}\n\n\nexport interface IEntitySettings {\n\n\t/**\n\t * Tags which can be used by the theme rules.\n\t *\n\t * @see {@link https://www.amcharts.com/docs/v5/concepts/themes/} for more info\n\t */\n\tthemeTags?: Array<string>;\n\n\t/**\n\t * Tags which can be used by the theme rules.\n\t *\n\t * These tags only apply to this object, not any children.\n\t *\n\t * @see {@link https://www.amcharts.com/docs/v5/concepts/themes/} for more info\n\t */\n\tthemeTagsSelf?: Array<string>;\n\n\t/**\n\t * A list of themes applied to the element.\n\t */\n\tthemes?: Array<Theme>;\n\n\n\t/**\n\t * Duration of transition from one state to another.\n\t */\n\tstateAnimationDuration?:number;\n\n\t/**\n\t * Easing of transition from one state to another.\n\t */\n\tstateAnimationEasing?:$ease.Easing;\n\n\t/**\n\t * A custom string ID for the element.\n\t *\n\t * If set, element can be looked up via `am5.registry.entitiesById`.\n\t *\n\t * Will raise error if an element with the same ID already exists.\n\t */\n\tid?: string;\n\n\t/**\n\t * A storage for any custom user data that needs to be associated with the\n\t * element.\n\t */\n\tuserData?: any;\n\n}\n\nexport interface IEntityPrivate {\n}\n\nexport interface IEntityEvents {\n}\n\n/**\n * Animation options.\n *\n * @see {@link https://www.amcharts.com/docs/v5/concepts/animations/} for more info\n */\nexport interface AnimationOptions<Key, Value> {\n\n\t/**\n\t * A setting key to animate value for.\n\t */\n\tkey: Key,\n\n\t/**\n\t * Initial value to animate from. If not set, will use current value.\n\t */\n\tfrom?: Value;\n\n\t/**\n\t * Target value to animate to.\n\t */\n\tto: Value;\n\n\t/**\n\t * Animation duration in milliseconds.\n\t */\n\tduration: number;\n\n\t/**\n\t * Easing function. Defaults to linear.\n\t *\n\t * @see {@link https://www.amcharts.com/docs/v5/concepts/animations/#Easing_functions} for more info\n\t */\n\teasing?: $ease.Easing;\n\n\t/**\n\t * How many times to play the animation. Defaults to 1.\n\t */\n\tloops?: number;\n}\n\nexport interface IAnimationEvents {\n\t/**\n\t * Invoked when animation was stopped, which happens in these situations:\n\t * 1. When the animation reached the end.\n\t * 2. When the `stop()` method is called.\n\t * 3. When a new animation starts for the same key.\n\t * 4. When calling `set` for the same key.\n\t */\n\tstopped: {};\n}\n\n/**\n * Animation object.\n *\n * @see {@link https://www.amcharts.com/docs/v5/concepts/animations/} for more info\n */\nexport class Animation<Value> {\n\tprivate _animation: IStartAnimation;\n\tprivate _from: Value;\n\tprivate _to: Value;\n\tprivate _duration: number;\n\tprivate _easing: $ease.Easing;\n\tprivate _loops: number;\n\tprivate _interpolate: <A extends Value>(diff: Time, from: A, to: A) => A;\n\tprivate _oldTime: number | null;\n\tprivate _time: number = 0;\n\n\tpublic _stopped: boolean = false;\n\tpublic _playing: boolean = true;\n\n\tpublic events: EventDispatcher<Events<this, IAnimationEvents>> = new EventDispatcher();\n\n\tconstructor(animation: IStartAnimation, from: Value, to: Value, duration: number, easing: $ease.Easing, loops: number, startingTime: number | null) {\n\t\tthis._animation = animation;\n\t\tthis._from = from;\n\t\tthis._to = to;\n\t\tthis._duration = duration;\n\t\tthis._easing = easing;\n\t\tthis._loops = loops;\n\t\tthis._interpolate = getInterpolate(from, to);\n\t\tthis._oldTime = startingTime;\n\t}\n\n\tpublic get to() {\n\t\treturn this._to;\n\t}\n\n\tpublic get from() {\n\t\treturn this._from;\n\t}\n\n\tpublic get playing() {\n\t\treturn this._playing;\n\t}\n\n\tpublic get stopped() {\n\t\treturn this._stopped;\n\t}\n\n\tpublic stop(): void {\n\t\tif (!this._stopped) {\n\t\t\tthis._stopped = true;\n\t\t\tthis._playing = false;\n\n\t\t\tif (this.events.isEnabled(\"stopped\")) {\n\t\t\t\tthis.events.dispatch(\"stopped\", {\n\t\t\t\t\ttype: \"stopped\",\n\t\t\t\t\ttarget: this,\n\t\t\t\t});\n\t\t\t}\n\t\t}\n\t}\n\n\tpublic pause(): void {\n\t\tthis._playing = false;\n\t\tthis._oldTime = null;\n\t}\n\n\tpublic play(): void {\n\t\tif (!this._stopped && !this._playing) {\n\t\t\tthis._playing = true;\n\t\t\tthis._animation._startAnimation();\n\t\t}\n\t}\n\n\tpublic get percentage(): Time {\n\t\treturn this._time / this._duration;\n\t}\n\n\tpublic waitForStop(): Promise<void> {\n\t\treturn new Promise((resolve, _reject) => {\n\t\t\tif (this._stopped) {\n\t\t\t\tresolve();\n\n\t\t\t} else {\n\t\t\t\tconst listener = () => {\n\t\t\t\t\tstopped.dispose();\n\t\t\t\t\tresolve();\n\t\t\t\t};\n\n\t\t\t\tconst stopped = this.events.on(\"stopped\", listener);\n\t\t\t}\n\t\t});\n\t}\n\n\tpublic _checkEnded(): boolean {\n\t\tif (this._loops > 1) {\n\t\t\t--this._loops;\n\t\t\treturn false;\n\n\t\t} else {\n\t\t\treturn true;\n\t\t}\n\t}\n\n\tpublic _run(currentTime: number): void {\n\t\tif (this._oldTime !== null) {\n\t\t\tthis._time += currentTime - this._oldTime;\n\n\t\t\tif (this._time > this._duration) {\n\t\t\t\tthis._time = this._duration;\n\t\t\t}\n\t\t}\n\n\t\tthis._oldTime = currentTime;\n\t}\n\n\tpublic _reset(currentTime: number): void {\n\t\tthis._oldTime = currentTime;\n\t\tthis._time = 0;\n\t}\n\n\tpublic _value(diff: Time): Value {\n\t\treturn this._interpolate(this._easing(diff), this._from, this._to);\n\t}\n}\n\ntype Animated<P> = { [K in keyof P]?: Animation<P[K]> };\n\n\ninterface IStartAnimation {\n\t_startAnimation(): void;\n}\n\n\n/**\n * @ignore\n */\nlet counter = 0;\n\n/**\n * Base class for [[Entity]] objects that support Settings.\n *\n * @see {@link https://www.amcharts.com/docs/v5/concepts/settings/} for more info\n */\nexport abstract class Settings implements IDisposer, IAnimation, IStartAnimation {\n\n\t/**\n\t * Unique ID.\n\t */\n\tpublic uid: number = ++counter;\n\n\tpublic _settings: {};\n\tpublic _privateSettings: {} = {};\n\n\tpublic _settingEvents: { [K in keyof this[\"_settings\"]]?: Array<<V extends this[\"_settings\"][K], O extends this>(value: V, target?: O, key?: K) => void> } = {};\n\tpublic _privateSettingEvents: { [K in keyof this[\"_settings\"]]?: Array<<V extends this[\"_settings\"][K], O extends this>(value: V, target?: O, key?: K) => void> } = {};\n\n\tpublic _prevSettings: this[\"_settings\"] = {};\n\tpublic _prevPrivateSettings: this[\"_privateSettings\"] = {};\n\n\tprotected _animatingSettings: Animated<this[\"_settings\"]> = {};\n\tprotected _animatingPrivateSettings: Animated<this[\"_privateSettings\"]> = {};\n\n\tprivate _disposed: boolean = false;\n\n\t// TODO move this into Entity\n\tprotected _userProperties: Dirty<this[\"_settings\"]> = {};\n\n\t/**\n\t * If this is set to `false` then disposing does nothing, it's a no-op.\n\t */\n\tpublic enableDispose: boolean = true;\n\n\tconstructor(settings: Settings[\"_settings\"]) {\n\t\tthis._settings = settings;\n\t}\n\n\tprotected _checkDirty(): void {\n\t\t$object.keys(this._settings).forEach((key) => {\n\t\t\t(this._userProperties as any)[key] = true;\n\t\t\tthis._markDirtyKey(key);\n\t\t});\n\t}\n\n\t/**\n\t * @ignore\n\t */\n\tpublic resetUserSettings(){\n\t\tthis._userProperties = {};\n\t}\n\n\t/**\n\t * @ignore\n\t */\n\tpublic abstract markDirty(): void;\n\n\tpublic _runAnimation(currentTime: number): AnimationState {\n\t\tlet state = AnimationState.Stopped;\n\n\t\tif (!this.isDisposed()) {\n\t\t\tlet playing = false;\n\t\t\tlet paused = false;\n\n\t\t\t$object.each(this._animatingSettings, (key, animation) => {\n\t\t\t\tif (animation.stopped) {\n\t\t\t\t\tthis._stopAnimation(key);\n\n\t\t\t\t} else if (animation.playing) {\n\t\t\t\t\tanimation._run(currentTime);\n\n\t\t\t\t\tconst diff = animation.percentage;\n\n\t\t\t\t\tif (diff >= 1) {\n\t\t\t\t\t\tif (animation._checkEnded()) {\n\t\t\t\t\t\t\tthis.set(key, animation._value(1));\n\n\t\t\t\t\t\t} else {\n\t\t\t\t\t\t\tplaying = true;\n\t\t\t\t\t\t\tanimation._reset(currentTime);\n\t\t\t\t\t\t\tthis._set(key, animation._value(1));\n\t\t\t\t\t\t}\n\n\t\t\t\t\t} else {\n\t\t\t\t\t\tplaying = true;\n\t\t\t\t\t\tthis._set(key, animation._value(diff));\n\t\t\t\t\t}\n\n\t\t\t\t} else {\n\t\t\t\t\tpaused = true;\n\t\t\t\t}\n\t\t\t});\n\n\t\t\t$object.each(this._animatingPrivateSettings, (key, animation) => {\n\t\t\t\tif (animation.stopped) {\n\t\t\t\t\tthis._stopAnimationPrivate(key);\n\n\t\t\t\t} else if (animation.playing) {\n\t\t\t\t\tanimation._run(currentTime);\n\n\t\t\t\t\tconst diff = animation.percentage;\n\n\t\t\t\t\tif (diff >= 1) {\n\t\t\t\t\t\tif (animation._checkEnded()) {\n\t\t\t\t\t\t\tthis.setPrivate(key, animation._value(1));\n\n\t\t\t\t\t\t} else {\n\t\t\t\t\t\t\tplaying = true;\n\t\t\t\t\t\t\tanimation._reset(currentTime);\n\t\t\t\t\t\t\tthis._setPrivate(key, animation._value(1));\n\t\t\t\t\t\t}\n\n\t\t\t\t\t} else {\n\t\t\t\t\t\tplaying = true;\n\t\t\t\t\t\tthis._setPrivate(key, animation._value(diff));\n\t\t\t\t\t}\n\n\t\t\t\t} else {\n\t\t\t\t\tpaused = true;\n\t\t\t\t}\n\t\t\t});\n\n\t\t\tif (playing) {\n\t\t\t\tstate = AnimationState.Playing;\n\n\t\t\t} else if (paused) {\n\t\t\t\tstate = AnimationState.Paused;\n\t\t\t}\n\t\t}\n\n\t\treturn state;\n\t}\n\n\tpublic abstract _startAnimation(): void;\n\tprotected abstract _animationTime(): number | null;\n\n\tpublic _markDirtyKey<Key extends keyof this[\"_settings\"]>(_key: Key) {\n\t\tthis.markDirty();\n\t}\n\n\tpublic _markDirtyPrivateKey<Key extends keyof this[\"_privateSettings\"]>(_key: Key) {\n\t\tthis.markDirty();\n\t}\n\n\t/**\n\t * Sets a callback function to invoke when specific key of settings changes\n\t * or is set.\n\t *\n\t * @see {@link https://www.amcharts.com/docs/v5/concepts/events/#Settings_value_change} for more info\n\t * @param   key       Settings key\n\t * @param   callback  Callback\n\t * @return            Disposer for event\n\t */\n\tpublic on<Key extends keyof this[\"_settings\"]>(key: Key, callback: (value: this[\"_settings\"][Key], target?: this, key?: Key) => void): IDisposer {\n\t\tlet events = this._settingEvents[key];\n\n\t\tif (events === undefined) {\n\t\t\tevents = this._settingEvents[key] = [];\n\t\t}\n\n\t\tevents.push(callback);\n\n\t\treturn new Disposer(() => {\n\t\t\t$array.removeFirst(events!, callback);\n\n\t\t\tif (events!.length === 0) {\n\t\t\t\tdelete this._settingEvents[key];\n\t\t\t}\n\t\t});\n\t}\n\n\t/**\n\t * Removes a callback for when value of a setting changes.\n\t *\n\t * @see {@link https://www.amcharts.com/docs/v5/concepts/events/#Settings_value_change} for more info\n\t * @param   key       Private settings key\n\t * @param   callback  Callback\n\t * @since 5.9.2\n\t */\n\tpublic off<Key extends keyof this[\"_settings\"]>(key: Key, callback?: (value: this[\"_settings\"][Key], target?: this, key?: Key) => void): void {\n\t\tlet events = this._settingEvents[key];\n\t\tif (events !== undefined && callback !== undefined) {\n\t\t\t$array.removeFirst(events, callback);\n\t\t}\n\t\telse {\n\t\t\tdelete this._settingEvents[key];\n\t\t}\n\t}\n\n\t/**\n\t * Sets a callback function to invoke when specific key of private settings\n\t * changes or is set.\n\t *\n\t * @see {@link https://www.amcharts.com/docs/v5/concepts/events/#Settings_value_change} for more info\n\t * @param   key       Private settings key\n\t * @param   callback  Callback\n\t * @return            Disposer for event\n\t */\n\tpublic onPrivate<Key extends keyof this[\"_privateSettings\"]>(key: Key, callback: (value: this[\"_privateSettings\"][Key], target?: this, key?: Key) => void): IDisposer {\n\t\tlet events = this._privateSettingEvents[key];\n\n\t\tif (events === undefined) {\n\t\t\tevents = this._privateSettingEvents[key] = [];\n\t\t}\n\n\t\tevents.push(callback);\n\n\t\treturn new Disposer(() => {\n\t\t\t$array.removeFirst(events!, callback);\n\n\t\t\tif (events!.length === 0) {\n\t\t\t\tdelete this._privateSettingEvents[key];\n\t\t\t}\n\t\t});\n\t}\n\n\t/**\n\t * Removes a callback for when value of a private setting changes.\n\t *\n\t * @see {@link https://www.amcharts.com/docs/v5/concepts/events/#Settings_value_change} for more info\n\t * @param   key       Private settings key\n\t * @param   callback  Callback\n\t * @since 5.9.2\n\t */\n\tpublic offPrivate<Key extends keyof this[\"_privateSettings\"]>(key: Key, callback?: (value: this[\"_privateSettings\"][Key], target?: this, key?: Key) => void): void {\n\t\tlet events = this._privateSettingEvents[key];\n\t\tif (events !== undefined && callback !== undefined) {\n\t\t\t$array.removeFirst(events, callback);\n\t\t}\n\t\telse {\n\t\t\tdelete this._privateSettingEvents[key];\n\t\t}\n\t}\n\n/**\n\t * @ignore\n\t */\n\tpublic getRaw<Key extends keyof this[\"_settings\"], F>(key: Key, fallback: F): NonNullable<this[\"_settings\"][Key]> | F;\n\n\t/**\n\t * @ignore\n\t */\n\tpublic getRaw<Key extends keyof this[\"_settings\"]>(key: Key): this[\"_settings\"][Key];\n\n\t/**\n\t * @ignore\n\t */\n\tpublic getRaw<Key extends keyof this[\"_settings\"]>(key: Key, fallback?: any): any {\n\t\tconst value = (<any>this._settings)[key];\n\n\t\tif (value !== undefined) {\n\t\t\treturn value;\n\n\t\t} else {\n\t\t\treturn fallback;\n\t\t}\n\t}\n\n\t/**\n\t * Returns `true` if the setting exists.\n\t *\n\t * @see {@link https://www.amcharts.com/docs/v5/concepts/settings/} for more info\n\t * @param   key        Settings key\n\t * @return  {boolean}  Key exists\n\t */\n\tpublic has<Key extends keyof this[\"_settings\"]>(key: Key): boolean {\n\t\treturn key in this._settings;\n\t}\n\n\t/**\n\t * Returns settings value for the specified `key`.\n\t *\n\t * If there is no value, `fallback` is returned instead (if set).\n\t *\n\t * @see {@link https://www.amcharts.com/docs/v5/concepts/settings/} for more info\n\t * @param   key       Settings value\n\t * @param   callback  Fallback value\n\t * @return  {any}     Value\n\t */\n\tpublic get<Key extends keyof this[\"_settings\"], F>(key: Key, fallback: F): NonNullable<this[\"_settings\"][Key]> | F;\n\tpublic get<Key extends keyof this[\"_settings\"]>(key: Key): this[\"_settings\"][Key];\n\tpublic get<Key extends keyof this[\"_settings\"]>(key: Key, fallback?: any): any {\n\t\treturn this.getRaw(key, fallback);\n\t}\n\n\tprotected _sendKeyEvent<Key extends keyof this[\"_settings\"], Value extends this[\"_settings\"][Key]>(key: Key, value: Value): void {\n\t\tconst events = this._settingEvents[key];\n\n\t\tif (events !== undefined) {\n\t\t\t$array.each(events!, (callback) => {\n\t\t\t\tcallback(value, this, key);\n\t\t\t});\n\t\t}\n\t}\n\n\tprotected _sendPrivateKeyEvent<Key extends keyof this[\"_settings\"], Value extends this[\"_settings\"][Key]>(key: Key, value: Value): void {\n\t\tconst events = this._privateSettingEvents[key];\n\n\t\tif (events !== undefined) {\n\t\t\t$array.each(events!, (callback) => {\n\t\t\t\tcallback(value, this, key);\n\t\t\t});\n\t\t}\n\t}\n\n\t/**\n\t * @ignore\n\t */\n\tprivate _setRaw<Key extends keyof this[\"_settings\"], Value extends this[\"_settings\"][Key]>(key: Key, old: Value, value: Value) {\n\t\tthis._prevSettings[key] = old;\n\t\tthis._sendKeyEvent(key, value);\n\t}\n\n\t/**\n\t * @ignore\n\t */\n\tpublic setRaw<Key extends keyof this[\"_settings\"], Value extends this[\"_settings\"][Key]>(key: Key, value: Value) {\n\t\tconst old = (<any>this._settings)[key];\n\n\t\t(<any>this._settings)[key] = value;\n\n\t\tif (old !== value) {\n\t\t\tthis._setRaw(key, old, value);\n\t\t}\n\t}\n\n\t/**\n\t * @ignore\n\t */\n\tprivate _set<Key extends keyof this[\"_settings\"]>(key: Key, value: this[\"_settings\"][Key]) {\n\t\tconst old = (<any>this._settings)[key];\n\n\t\t(<any>this._settings)[key] = value;\n\n\t\tif (old !== value) {\n\t\t\tthis._setRaw(key, old, value);\n\t\t\tthis._markDirtyKey(key);\n\t\t}\n\t}\n\n\n\tprotected _stopAnimation<Key extends keyof this[\"_settings\"]>(key: Key): void {\n\t\tconst animation = this._animatingSettings[key];\n\n\t\tif (animation) {\n\t\t\tdelete this._animatingSettings[key];\n\t\t\tanimation.stop();\n\t\t}\n\t}\n\n\t/**\n\t * Sets a setting `value` for the specified `key`, and returns the same `value`.\n\t *\n\t * @see {@link https://www.amcharts.com/docs/v5/concepts/settings/} for more info\n\t * @param   key       Setting key\n\t * @param   value     Setting value\n\t * @return            Setting value\n\t */\n\tpublic set<Key extends keyof this[\"_settings\"], Value extends this[\"_settings\"][Key]>(key: Key, value: Value): Value {\n\t\tthis._set(key, value);\n\t\tthis._stopAnimation(key);\n\t\treturn value;\n\t}\n\n\t/**\n\t * Removes a setting value for the specified `key`;\n\t *\n\t * @see {@link https://www.amcharts.com/docs/v5/concepts/settings/} for more info\n\t * @param   key       Setting key\n\t */\n\tpublic remove<Key extends keyof this[\"_settings\"]>(key: Key): void {\n\t\tif (key in this._settings) {\n\t\t\tthis._prevSettings[key] = (<any>this._settings)[key];\n\n\t\t\tdelete (<any>this._settings)[key];\n\n\t\t\tthis._sendKeyEvent(key, undefined as any);\n\t\t\tthis._markDirtyKey(key);\n\t\t}\n\n\t\tthis._stopAnimation(key);\n\t}\n\n\t/**\n\t * Removes all keys;\n\t *\n\t * @see {@link https://www.amcharts.com/docs/v5/concepts/settings/} for more info\n\t */\n\tpublic removeAll(): void {\n\t\t$array.each($object.keys(this._settings), (key) => {\n\t\t\tthis.remove(key);\n\t\t});\n\t}\n\n\t/**\n\t * @ignore\n\t */\n\tpublic getPrivate<Key extends keyof this[\"_privateSettings\"], F>(key: Key, fallback: F): NonNullable<this[\"_privateSettings\"][Key]> | F;\n\n\t/**\n\t * @ignore\n\t */\n\tpublic getPrivate<Key extends keyof this[\"_privateSettings\"]>(key: Key): this[\"_privateSettings\"][Key];\n\n\t/**\n\t * Returns a value of a private setting.\n\t *\n\t * @see {@link https://www.amcharts.com/docs/v5/concepts/settings/#Private_settings} for more info\n\t */\n\tpublic getPrivate<Key extends keyof this[\"_privateSettings\"]>(key: Key, fallback?: any): any {\n\t\tconst value = (<any>this._privateSettings)[key];\n\n\t\tif (value !== undefined) {\n\t\t\treturn value;\n\n\t\t} else {\n\t\t\treturn fallback;\n\t\t}\n\t}\n\n\t/**\n\t * @ignore\n\t */\n\tprivate _setPrivateRaw<Key extends keyof this[\"_privateSettings\"], Value extends this[\"_privateSettings\"][Key]>(key: Key, old: Value, value: Value) {\n\t\tthis._prevPrivateSettings[key] = old;\n\t\tthis._sendPrivateKeyEvent(key, value);\n\t}\n\n\t/**\n\t * @ignore\n\t */\n\tpublic setPrivateRaw<Key extends keyof this[\"_privateSettings\"], Value extends this[\"_privateSettings\"][Key]>(key: Key, value: Value) {\n\t\tconst old = (<any>this._privateSettings)[key];\n\n\t\t(<any>this._privateSettings)[key] = value;\n\n\t\tif (old !== value) {\n\t\t\tthis._setPrivateRaw(key, old, value);\n\t\t}\n\t}\n\n\t/**\n\t * @ignore\n\t */\n\tprivate _setPrivate<Key extends keyof this[\"_privateSettings\"]>(key: Key, value: this[\"_privateSettings\"][Key]) {\n\t\tconst old = (<any>this._privateSettings)[key];\n\n\t\t(<any>this._privateSettings)[key] = value;\n\n\t\tif (old !== value) {\n\t\t\tthis._setPrivateRaw(key, old, value);\n\t\t\tthis._markDirtyPrivateKey(key);\n\t\t}\n\t}\n\n\tprotected _stopAnimationPrivate<Key extends keyof this[\"_privateSettings\"]>(key: Key): void {\n\t\tconst animation = this._animatingPrivateSettings[key];\n\n\t\tif (animation) {\n\t\t\tanimation.stop();\n\t\t\tdelete this._animatingPrivateSettings[key];\n\t\t}\n\t}\n\n\t/**\n\t * @ignore\n\t */\n\tpublic setPrivate<Key extends keyof this[\"_privateSettings\"], Value extends this[\"_privateSettings\"][Key]>(key: Key, value: Value): Value {\n\t\tthis._setPrivate(key, value);\n\t\tthis._stopAnimationPrivate(key);\n\t\treturn value;\n\t}\n\n\t/**\n\t * @ignore\n\t */\n\tpublic removePrivate<Key extends keyof this[\"_privateSettings\"]>(key: Key): void {\n\t\tif (key in this._privateSettings) {\n\t\t\tthis._prevPrivateSettings[key] = (<any>this._privateSettings)[key];\n\n\t\t\tdelete (<any>this._privateSettings)[key];\n\n\t\t\tthis._markDirtyPrivateKey(key);\n\t\t}\n\n\t\tthis._stopAnimationPrivate(key);\n\t}\n\n\t/**\n\t * Sets multiple settings at once.\n\t *\n\t * `settings` must be an object with key: value pairs.\n\t *\n\t * @see {@link https://www.amcharts.com/docs/v5/concepts/settings/} for more info\n\t * @param settings Settings\n\t */\n\tpublic setAll(settings: Partial<this[\"_settings\"]>) {\n\t\t$object.each(settings, (key, value) => {\n\t\t\tthis.set(key, value);\n\t\t});\n\t}\n\n\t/**\n\t * Animates setting values from current/start values to new ones.\n\t *\n\t * @see {@link https://www.amcharts.com/docs/v5/concepts/animations/#Animating_settings} for more info\n\t * @param   options  Animation options\n\t * @return           Animation object\n\t */\n\tpublic animate<Key extends keyof this[\"_settings\"]>(options: AnimationOptions<Key, this[\"_settings\"][Key]>): Animation<this[\"_settings\"][Key]> {\n\t\tconst key = options.key;\n\t\tconst to = options.to;\n\t\tconst duration = options.duration || 0;\n\t\tconst loops = options.loops || 1;\n\n\t\tconst from = (options.from === undefined ? this.get(key) : options.from);\n\t\tconst easing = (options.easing === undefined ? $ease.linear : options.easing);\n\n\t\tif (duration === 0) {\n\t\t\tthis.set(key, to);\n\n\t\t} else {\n\t\t\tif (from === undefined || from === to) {\n\t\t\t\tthis.set(key, to);\n\n\t\t\t} else {\n\t\t\t\tthis.set(key, from);\n\n\t\t\t\tconst animation = this._animatingSettings[key] = new Animation(this, from, to, duration, easing, loops, this._animationTime());\n\n\t\t\t\tthis._startAnimation();\n\n\t\t\t\treturn animation;\n\t\t\t}\n\t\t}\n\n\t\tconst animation = new Animation(this, from, to, duration, easing, loops, null);\n\t\tanimation.stop();\n\t\treturn animation;\n\t}\n\n\t/**\n\t * @ignore\n\t */\n\tpublic animatePrivate<Key extends keyof this[\"_privateSettings\"]>(options: AnimationOptions<Key, this[\"_privateSettings\"][Key]>): Animation<this[\"_privateSettings\"][Key]> {\n\t\tconst key = options.key;\n\t\tconst to = options.to;\n\t\tconst duration = options.duration || 0;\n\t\tconst loops = options.loops || 1;\n\n\t\tconst from = (options.from === undefined ? this.getPrivate(key) : options.from);\n\t\tconst easing = (options.easing === undefined ? $ease.linear : options.easing);\n\n\t\tif (duration === 0) {\n\t\t\tthis.setPrivate(key, to);\n\n\t\t} else {\n\t\t\tif (from === undefined || from === to) {\n\t\t\t\tthis.setPrivate(key, to);\n\n\t\t\t} else {\n\t\t\t\tthis.setPrivate(key, from);\n\n\t\t\t\tconst animation = this._animatingPrivateSettings[key] = new Animation(this, from, to, duration, easing, loops, this._animationTime());\n\n\t\t\t\tthis._startAnimation();\n\n\t\t\t\treturn animation;\n\t\t\t}\n\t\t}\n\n\t\tconst animation = new Animation(this, from, to, duration, easing, loops, null);\n\t\tanimation.stop();\n\t\treturn animation;\n\t}\n\n\tprotected _dispose() {}\n\n\t/**\n\t * Returns `true` if this element is disposed.\n\t *\n\t * @return Disposed\n\t */\n\tpublic isDisposed(): boolean {\n\t\treturn this._disposed;\n\t}\n\n\t/**\n\t * Disposes this object.\n\t */\n\tpublic dispose() {\n\t\tif (this.enableDispose && !this._disposed) {\n\t\t\tthis._disposed = true;\n\t\t\tthis._dispose();\n\t\t}\n\t}\n}\n\n/**\n * Base class.\n *\n * @important\n */\nexport class Entity extends Settings implements IDisposer {\n\tpublic _root: Root;\n\n\tpublic _user_id:any; // for testing purposes\n\n\tdeclare public _settings: IEntitySettings;\n\tdeclare public _privateSettings: IEntityPrivate;\n\tdeclare public _events: IEntityEvents;\n\n\tpublic states: States<this> = new States(this);\n\tpublic adapters: Adapters<this> = new Adapters(this);\n\tpublic events: EventDispatcher<Events<this, this[\"_events\"]>> = this._createEvents();\n\n\tprotected _userPrivateProperties: Dirty<this[\"_privateSettings\"]> = {};\n\n\tpublic _dirty: Dirty<this[\"_settings\"]> = {};\n\tpublic _dirtyPrivate: Dirty<this[\"_privateSettings\"]> = {};\n\n\tprotected _template: Template<this> | undefined;\n\n\t// Templates for the themes\n\tprotected _templates: Array<Template<this>> = [];\n\n\t// Internal templates which can be overridden by the user's templates\n\tprotected _internalTemplates: Array<Template<this>>;\n\n\t// Default themes which can be overridden by the user's themes\n\tpublic _defaultThemes: Array<Theme> = [];\n\n\t// Disposers for all of the templates\n\tprotected _templateDisposers: Array<IDisposer> = [];\n\n\tprotected _disposers: Array<IDisposer> = [];\n\n\t// Whether the template setup function should be run\n\tprotected _runSetup: boolean = true;\n\n\tpublic static className: string = \"Entity\";\n\tpublic static classNames: Array<string> = [\"Entity\"];\n\n\tprotected _disposerProperties: { [Key in keyof this[\"_settings\"]]?: Array<IDisposer> } = {};\n\n\t/**\n\t * IMPORTANT! Do not instantiate this class via `new Class()` syntax.\n\t *\n\t * Use static method `Class.new()` instead.\n\t *\n\t * @see {@link https://www.amcharts.com/docs/v5/getting-started/#New_element_syntax} for more info\n\t * @ignore\n\t */\n\tconstructor(root: Root, settings: Entity[\"_settings\"], isReal: boolean, templates: Array<Template<Entity>> = []) {\n\t\tsuper(settings);\n\t\tif (!isReal) {\n\t\t\tthrow new Error(\"You cannot use `new Class()`, instead use `Class.new()`\");\n\t\t}\n\t\tthis._root = root;\n\t\tthis._internalTemplates = templates as Array<Template<this>>;\n\n\t\tif (settings.id) {\n\t\t\tthis._registerId(settings.id);\n\t\t}\n\t}\n\n\t/**\n\t * Use this method to create an instance of this class.\n\t *\n\t * @see {@link https://www.amcharts.com/docs/v5/getting-started/#New_element_syntax} for more info\n\t * @param   root      Root element\n\t * @param   settings  Settings\n\t * @param   template  Template\n\t * @return            Instantiated object\n\t */\n\tstatic new<C extends typeof Entity, T extends InstanceType<C>>(this: C, root: Root, settings: T[\"_settings\"], template?: Template<T>): T {\n\t\tconst x = (new this(root, settings, true)) as T;\n\t\tx._template = template;\n\t\tx._afterNew();\n\t\treturn x;\n\t}\n\n\tstatic _new<C extends typeof Entity, T extends InstanceType<C>>(this: C, root: Root, settings: T[\"_settings\"], templates: Array<Template<T>> = []): T {\n\t\tconst x = (new this(root, settings, true, templates)) as T;\n\t\tx._afterNew();\n\t\treturn x;\n\t}\n\n\tprotected _afterNew() {\n\t\tthis._checkDirty();\n\n\t\tlet shouldApply = false;\n\n\t\tconst template = this._template;\n\n\t\tif (template) {\n\t\t\tshouldApply = true;\n\t\t\ttemplate._setObjectTemplate(this);\n\t\t}\n\n\t\t$array.each(this._internalTemplates, (template) => {\n\t\t\tshouldApply = true;\n\t\t\ttemplate._setObjectTemplate(this);\n\t\t});\n\n\t\tif (shouldApply) {\n\t\t\tthis._applyTemplates(false);\n\t\t}\n\n\t\tthis.states.create(\"default\", {});\n\n\t\tthis._setDefaults();\n\t}\n\n\t// This is the same as _afterNew, except it also applies the themes.\n\t// This should only be used for classes which don't have a parent (because they extend from Entity and not Sprite).\n\tprotected _afterNewApplyThemes() {\n\t\tthis._checkDirty();\n\n\t\tconst template = this._template;\n\n\t\tif (template) {\n\t\t\ttemplate._setObjectTemplate(this);\n\t\t}\n\n\t\t$array.each(this._internalTemplates, (template) => {\n\t\t\ttemplate._setObjectTemplate(this);\n\t\t});\n\n\t\tthis.states.create(\"default\", {});\n\n\t\tthis._setDefaults();\n\n\t\tthis._applyThemes();\n\t}\n\n\tprotected _createEvents(): EventDispatcher<Events<this, this[\"_events\"]>> {\n\t\treturn new EventDispatcher();\n\t}\n\n\t/**\n\t * @ignore\n\t */\n\tpublic get classNames(): Array<string> {\n\t\treturn (this.constructor as any).classNames;\n\t}\n\n\t/**\n\t * @ignore\n\t */\n\tpublic get className(): string {\n\t\treturn (this.constructor as any).className;\n\t}\n\n\tprotected _setDefaults(){\n\n\t}\n\n\tpublic _setDefaultFn<Key extends keyof this[\"_settings\"], Value extends this[\"_settings\"][Key]>(key: Key, f: () => Value): NonNullable<this[\"_settings\"][Key]> | Value {\n\t\tconst value = this.get(key);\n\n\t\tif (value) {\n\t\t\treturn value as any;\n\n\t\t} else {\n\t\t\tconst value = f();\n\t\t\tthis.set(key, value);\n\t\t\treturn value;\n\t\t}\n\t}\n\n\tpublic _setDefault<Key extends keyof this[\"_settings\"]>(key: Key, value: this[\"_settings\"][Key]) {\n\t\tif (!this.has(key)) {\n\t\t\tsuper.set(key, value);\n\t\t}\n\t}\n\n\tpublic _setRawDefault<Key extends keyof this[\"_settings\"]>(key: Key, value: this[\"_settings\"][Key]) {\n\t\tif (!this.has(key)) {\n\t\t\tsuper.setRaw(key, value);\n\t\t}\n\t}\n\n\tpublic _clearDirty() {\n\t\t$object.keys(this._dirty).forEach((key) => {\n\t\t\tthis._dirty[key] = false;\n\t\t});\n\n\t\t$object.keys(this._dirtyPrivate).forEach((key) => {\n\t\t\tthis._dirtyPrivate[key] = false;\n\t\t});\n\t}\n\n\t/**\n\t * @ignore\n\t */\n\tpublic isDirty<Key extends keyof this[\"_settings\"]>(key: Key): boolean {\n\t\treturn !!this._dirty[key];\n\t}\n\n\t/**\n\t * @ignore\n\t */\n\tpublic isPrivateDirty<Key extends keyof this[\"_privateSettings\"]>(key: Key): boolean {\n\t\treturn !!this._dirtyPrivate[key];\n\t}\n\n\tpublic _markDirtyKey<Key extends keyof this[\"_settings\"]>(key: Key) {\n\t\tthis._dirty[key] = true;\n\t\tsuper._markDirtyKey(key);\n\t}\n\n\tpublic _markDirtyPrivateKey<Key extends keyof this[\"_privateSettings\"]>(key: Key) {\n\t\tthis._dirtyPrivate[key] = true;\n\t\tsuper._markDirtyKey(key);\n\t}\n\n\t/**\n\t * Checks if element is of certain class (or inherits one).\n\t *\n\t * @param   type  Class name to check\n\t * @return {boolean} Is of class?\n\t */\n\tpublic isType<A>(type: string): this is A {\n\t\treturn this.classNames.indexOf(type) !== -1;\n\t}\n\n\tprotected _pushPropertyDisposer<Key extends keyof this[\"_settings\"], D extends IDisposer>(key: Key, disposer: D): D {\n\t\tlet disposers = this._disposerProperties[key];\n\n\t\tif (disposers === undefined) {\n\t\t\tdisposers = this._disposerProperties[key] = [];\n\t\t}\n\n\t\tdisposers.push(disposer);\n\n\t\treturn disposer;\n\t}\n\n\tprotected _disposeProperty<Key extends keyof this[\"_settings\"]>(key: Key): void {\n\t\tconst disposers = this._disposerProperties[key];\n\n\t\tif (disposers !== undefined) {\n\t\t\t$array.each(disposers!, (disposer) => {\n\t\t\t\tdisposer.dispose();\n\t\t\t});\n\n\t\t\tdelete this._disposerProperties[key];\n\t\t}\n\t}\n\n\t/**\n\t * @todo needs description\n\t * @param  value  Template\n\t */\n\tpublic set template(value: Template<this> | undefined) {\n\t\tconst template = this._template;\n\n\t\tif (template !== value) {\n\t\t\tthis._template = value;\n\n\t\t\tif (template) {\n\t\t\t\ttemplate._removeObjectTemplate(this);\n\t\t\t}\n\n\t\t\tif (value) {\n\t\t\t\tvalue._setObjectTemplate(this);\n\t\t\t}\n\n\t\t\tthis._applyTemplates();\n\t\t}\n\t}\n\n\tpublic get template(): Template<this> | undefined {\n\t\treturn this._template;\n\t}\n\n\t/**\n\t * @ignore\n\t */\n\tpublic markDirty() {\n\t\tthis._root._addDirtyEntity(this);\n\t}\n\n\tpublic _startAnimation(): void {\n\t\tthis._root._addAnimation(this);\n\t}\n\n\tprotected _animationTime(): number | null {\n\t\treturn this._root.animationTime;\n\t}\n\n\tpublic _applyState(_name: string): void { }\n\tpublic _applyStateAnimated(_name: string, _duration?: number): void { }\n\n\t/**\n\t * Returns settings value for the specified `key`.\n\t *\n\t * If there is no value, `fallback` is returned instead (if set).\n\t *\n\t * @see {@link https://www.amcharts.com/docs/v5/concepts/settings/} for more info\n\t * @param   key       Settings value\n\t * @param   callback  Fallback value\n\t * @return            Value\n\t */\n\tpublic get<Key extends keyof this[\"_settings\"], F>(key: Key, fallback: F): NonNullable<this[\"_settings\"][Key]> | F;\n\tpublic get<Key extends keyof this[\"_settings\"]>(key: Key): this[\"_settings\"][Key];\n\tpublic get<Key extends keyof this[\"_settings\"]>(key: Key, fallback?: any): any {\n\t\tconst value = this.adapters.fold(key, (<any>this._settings)[key]);\n\n\t\tif (value !== undefined) {\n\t\t\treturn value;\n\n\t\t} else {\n\t\t\treturn fallback;\n\t\t}\n\t}\n\n\t/**\n\t * @ignore\n\t */\n\tpublic isUserSetting<Key extends keyof this[\"_settings\"]>(key: Key): boolean {\n\t\treturn this._userProperties[key] || false;\n\t}\n\n\t/**\n\t * Sets a setting `value` for the specified `key`, and returns the same `value`.\n\t *\n\t * @see {@link https://www.amcharts.com/docs/v5/concepts/settings/} for more info\n\t * @param   key       Setting key\n\t * @param   value     Setting value\n\t * @return            Setting value\n\t */\n\tpublic set<Key extends keyof this[\"_settings\"], Value extends this[\"_settings\"][Key]>(key: Key, value: Value): Value {\n\t\tthis._userProperties[key] = true;\n\t\treturn super.set(key, value);\n\t}\n\n\n\t/**\n\t * @ignore\n\t */\n\tpublic setRaw<Key extends keyof this[\"_settings\"], Value extends this[\"_settings\"][Key]>(key: Key, value: Value) {\n\t\tthis._userProperties[key] = true;\n\t\tsuper.setRaw(key, value);\n\t}\n\n\t/**\n\t * Sets a setting `value` for the specified `key` only if the value for this key was not set previously using set method, and returns the same `value`.\n\t *\n\t * @see {@link https://www.amcharts.com/docs/v5/concepts/settings/} for more info\n\t * @param   key       Setting key\n\t * @param   value     Setting value\n\t * @return            Setting value\n\t */\n\tpublic _setSoft<Key extends keyof this[\"_settings\"], Value extends this[\"_settings\"][Key]>(key: Key, value: Value): Value {\n\t\tif(!this._userProperties[key]){\n\t\t\treturn super.set(key, value);\n\t\t}\n\t\treturn value;\n\t}\n\n\t/**\n\t * Removes a setting value for the specified `key`.\n\t *\n\t * @see {@link https://www.amcharts.com/docs/v5/concepts/settings/} for more info\n\t * @param   key       Setting key\n\t */\n\tpublic remove<Key extends keyof this[\"_settings\"]>(key: Key) {\n\t\tdelete this._userProperties[key];\n\t\tthis._removeTemplateProperty(key);\n\t}\n\n\t/**\n\t * @ignore\n\t */\n\tpublic setPrivate<Key extends keyof this[\"_privateSettings\"], Value extends this[\"_privateSettings\"][Key]>(key: Key, value: Value): Value {\n\t\tthis._userPrivateProperties[key] = true;\n\t\treturn super.setPrivate(key, value);\n\t}\n\n\t/**\n\t * @ignore\n\t */\n\tpublic setPrivateRaw<Key extends keyof this[\"_privateSettings\"], Value extends this[\"_privateSettings\"][Key]>(key: Key, value: Value) {\n\t\tthis._userPrivateProperties[key] = true;\n\t\tsuper.setPrivateRaw(key, value);\n\t}\n\n\t/**\n\t * @ignore\n\t */\n\tpublic removePrivate<Key extends keyof this[\"_privateSettings\"]>(key: Key) {\n\t\tdelete this._userPrivateProperties[key];\n\t\tthis._removeTemplatePrivateProperty(key);\n\t}\n\n\tpublic _setTemplateProperty<Key extends keyof this[\"_settings\"]>(template: Template<this>, key: Key, value: this[\"_settings\"][Key]) {\n\t\tif (!this._userProperties[key]) {\n\t\t\tconst match = this._findTemplateByKey(key);\n\n\t\t\tif (template === match) {\n\t\t\t\tsuper.set(key, value);\n\t\t\t}\n\t\t}\n\t}\n\n\tpublic _setTemplatePrivateProperty<Key extends keyof this[\"_privateSettings\"]>(template: Template<this>, key: Key, value: this[\"_privateSettings\"][Key]) {\n\t\tif (!this._userPrivateProperties[key]) {\n\t\t\tconst match = this._findTemplateByPrivateKey(key);\n\n\t\t\tif (template === match) {\n\t\t\t\tsuper.setPrivate(key, value);\n\t\t\t}\n\t\t}\n\t}\n\n\tpublic _removeTemplateProperty<Key extends keyof this[\"_settings\"]>(key: Key) {\n\t\tif (!this._userProperties[key]) {\n\t\t\tconst match = this._findTemplateByKey(key);\n\n\t\t\tif (match) {\n\t\t\t\t// TODO don't stop the animation if the property didn't change\n\t\t\t\tsuper.set(key, match._settings[key]!);\n\n\t\t\t} else {\n\t\t\t\tsuper.remove(key);\n\t\t\t}\n\t\t}\n\t}\n\n\tpublic _removeTemplatePrivateProperty<Key extends keyof this[\"_privateSettings\"]>(key: Key) {\n\t\tif (!this._userPrivateProperties[key]) {\n\t\t\tconst match = this._findTemplateByPrivateKey(key);\n\n\t\t\tif (match) {\n\t\t\t\t// TODO don't stop the animation if the property didn't change\n\t\t\t\tsuper.setPrivate(key, match._privateSettings[key]);\n\n\t\t\t} else {\n\t\t\t\tsuper.removePrivate(key);\n\t\t\t}\n\t\t}\n\t}\n\n\tpublic _walkParents(f: (parent: Entity) => void): void {\n\t\tf(this._root._rootContainer);\n\t\tf(this);\n\t}\n\n\t// TODO faster version of this method which is specialized to just 1 key\n\tpublic _applyStateByKey(name: string): void {\n\t\tconst other = this.states.create(name, {});\n\t\tconst seen: Dirty<this[\"_settings\"]> = {};\n\n\t\tthis._eachTemplate((template) => {\n\t\t\tconst state = template.states.lookup(name);\n\n\t\t\tif (state) {\n\t\t\t\tstate._apply(other, seen);\n\t\t\t}\n\t\t});\n\n\t\t$object.each(other._settings, (key) => {\n\t\t\tif (!seen[key] && !other._userSettings[key]) {\n\t\t\t\tother.remove(key);\n\t\t\t}\n\t\t});\n\t}\n\n\tprotected _applyTemplate(template: Template<this>, state: ApplyState<this>): void {\n\t\tthis._templateDisposers.push(template._apply(this, state));\n\n\t\t$object.each(template._settings, (key, value) => {\n\t\t\tif (!state.settings[key] && !this._userProperties[key]) {\n\t\t\t\tstate.settings[key] = true;\n\t\t\t\tsuper.set(key, value);\n\t\t\t}\n\t\t});\n\n\t\t$object.each(template._privateSettings, (key, value) => {\n\t\t\tif (!state.privateSettings[key] && !this._userPrivateProperties[key]) {\n\t\t\t\tstate.privateSettings[key] = true;\n\t\t\t\tsuper.setPrivate(key, value);\n\t\t\t}\n\t\t});\n\n\t\tif (this._runSetup && template.setup) {\n\t\t\tthis._runSetup = false;\n\t\t\ttemplate.setup(this);\n\t\t}\n\t}\n\n\t/**\n\t * Calls the closure with each template and returns the first template which is true\n\t */\n\tprotected _findStaticTemplate(f: (template: Template<this>) => boolean): Template<this> | undefined {\n\t\tif (this._template) {\n\t\t\tif (f(this._template)) {\n\t\t\t\treturn this._template;\n\t\t\t}\n\t\t}\n\t}\n\n\tpublic _eachTemplate(f: (template: Template<this>) => void): void {\n\t\tthis._findStaticTemplate((template) => {\n\t\t\tf(template);\n\t\t\treturn false;\n\t\t});\n\n\t\t// _internalTemplates is sorted with most specific to the right\n\t\t$array.eachReverse(this._internalTemplates, f);\n\n\t\t// _templates is sorted with most specific to the left\n\t\t$array.each(this._templates, f);\n\t}\n\n\tpublic _applyTemplates(remove: boolean = true): void {\n\t\tif (remove) {\n\t\t\tthis._disposeTemplates();\n\t\t}\n\n\t\tconst state: ApplyState<this> = {\n\t\t\tsettings: {},\n\t\t\tprivateSettings: {},\n\t\t\tstates: {},\n\t\t};\n\n\t\tthis._eachTemplate((template) => {\n\t\t\tthis._applyTemplate(template, state);\n\t\t});\n\n\t\tif (remove) {\n\t\t\t$object.each(this._settings, (key) => {\n\t\t\t\tif (!this._userProperties[key] && !state.settings[key]) {\n\t\t\t\t\tsuper.remove(key);\n\t\t\t\t}\n\t\t\t});\n\n\t\t\t$object.each(this._privateSettings, (key) => {\n\t\t\t\tif (!this._userPrivateProperties[key] && !state.privateSettings[key]) {\n\t\t\t\t\tsuper.removePrivate(key);\n\t\t\t\t}\n\t\t\t});\n\t\t}\n\t}\n\n\tprotected _findTemplate(f: (template: Template<this>) => boolean): Template<this> | undefined {\n\t\tconst value = this._findStaticTemplate(f);\n\n\t\tif (value === undefined) {\n\t\t\t// _internalTemplates is sorted with most specific to the right\n\t\t\tconst value = $array.findReverse(this._internalTemplates, f);\n\n\t\t\tif (value === undefined) {\n\t\t\t\t// _templates is sorted with most specific to the left\n\t\t\t\treturn $array.find(this._templates, f);\n\n\t\t\t} else {\n\t\t\t\treturn value;\n\t\t\t}\n\n\t\t} else {\n\t\t\treturn value;\n\t\t}\n\t}\n\n\tprotected _findTemplateByKey<Key extends keyof this[\"_settings\"]>(key: Key): Template<this> | undefined {\n\t\treturn this._findTemplate((template) => {\n\t\t\treturn key in template._settings;\n\t\t});\n\t}\n\n\tprotected _findTemplateByPrivateKey<Key extends keyof this[\"_privateSettings\"]>(key: Key): Template<this> | undefined {\n\t\treturn this._findTemplate((template) => {\n\t\t\treturn key in template._privateSettings;\n\t\t});\n\t}\n\n\tprotected _disposeTemplates() {\n\t\t$array.each(this._templateDisposers, (disposer) => {\n\t\t\tdisposer.dispose();\n\t\t});\n\n\t\tthis._templateDisposers.length = 0;\n\t}\n\n\tprotected _removeTemplates() {\n\t\t$array.each(this._templates, (template) => {\n\t\t\ttemplate._removeObjectTemplate(this);\n\t\t});\n\n\t\tthis._templates.length = 0;\n\t}\n\n\tpublic _applyThemes(force: boolean = false): boolean {\n\t\tlet isConnected = false;\n\n\t\tconst defaults: Array<Array<Theme>> = [];\n\n\t\tlet themes: Array<Array<Theme>> = [];\n\n\t\tconst themeTags: Set<string> = new Set();\n\n\t\tconst tags = this.get(\"themeTagsSelf\");\n\n\t\tif (tags) {\n\t\t\t$array.each(tags, (tag) => {\n\t\t\t\tthemeTags.add(tag);\n\t\t\t});\n\t\t}\n\n\t\tthis._walkParents((entity) => {\n\t\t\tif (entity === this._root._rootContainer) {\n\t\t\t\tisConnected = true;\n\t\t\t}\n\n\t\t\tif (entity._defaultThemes.length > 0) {\n\t\t\t\tdefaults.push(entity._defaultThemes);\n\t\t\t}\n\n\t\t\tconst theme = entity.get(\"themes\");\n\n\t\t\tif (theme) {\n\t\t\t\tthemes.push(theme);\n\t\t\t}\n\n\t\t\tconst tags = entity.get(\"themeTags\");\n\n\t\t\tif (tags) {\n\t\t\t\t$array.each(tags, (tag) => {\n\t\t\t\t\tthemeTags.add(tag);\n\t\t\t\t});\n\t\t\t}\n\t\t});\n\n\t\tthemes = defaults.concat(themes);\n\n\t\tthis._removeTemplates();\n\n\t\tif (isConnected || force) {\n\t\t\t$array.eachReverse(this.classNames, (name) => {\n\t\t\t\tconst allRules: Array<IRule<this>> = [];\n\n\t\t\t\t$array.each(themes, (themes) => {\n\t\t\t\t\t$array.each(themes, (theme) => {\n\t\t\t\t\t\tconst rules = theme._lookupRules<this>(name);\n\n\t\t\t\t\t\tif (rules) {\n\t\t\t\t\t\t\t$array.eachReverse(rules, (rule) => {\n\t\t\t\t\t\t\t\tconst matches = rule.tags.every((tag) => {\n\t\t\t\t\t\t\t\t\treturn themeTags.has(tag);\n\t\t\t\t\t\t\t\t});\n\n\t\t\t\t\t\t\t\tif (matches) {\n\t\t\t\t\t\t\t\t\tconst result = $array.getFirstSortedIndex(allRules, (x) => {\n\t\t\t\t\t\t\t\t\t\tconst order = $order.compare(rule.tags.length, x.tags.length);\n\n\t\t\t\t\t\t\t\t\t\tif (order === 0) {\n\t\t\t\t\t\t\t\t\t\t\treturn $order.compareArray(rule.tags, x.tags, $order.compare);\n\n\t\t\t\t\t\t\t\t\t\t} else {\n\t\t\t\t\t\t\t\t\t\t\treturn order;\n\t\t\t\t\t\t\t\t\t\t}\n\t\t\t\t\t\t\t\t\t});\n\n\t\t\t\t\t\t\t\t\tallRules.splice(result.index, 0, rule);\n\t\t\t\t\t\t\t\t}\n\t\t\t\t\t\t\t});\n\t\t\t\t\t\t}\n\t\t\t\t\t});\n\t\t\t\t});\n\n\t\t\t\t$array.each(allRules, (rule) => {\n\t\t\t\t\tthis._templates.push(rule.template);\n\t\t\t\t\trule.template._setObjectTemplate(this);\n\t\t\t\t});\n\t\t\t});\n\t\t}\n\n\t\tthis._applyTemplates();\n\n\t\tif (isConnected || force) {\n\t\t\t// This causes it to only run the setup function the first time that the themes are applied\n\t\t\tthis._runSetup = false;\n\t\t}\n\n\t\treturn isConnected || force;\n\t}\n\n\tpublic _changed(): void { }\n\n\tpublic _beforeChanged(): void {\n\n\t\tif (this.isDirty(\"id\")) {\n\t\t\tconst id = this.get(\"id\")!;\n\t\t\tif (id) {\n\t\t\t\tthis._registerId(id);\n\t\t\t}\n\n\t\t\tconst prevId = this._prevSettings.id;\n\t\t\tif(prevId) {\n\t\t\t\tdelete registry.entitiesById[prevId];\n\t\t\t}\n\t\t}\n\t}\n\n\tprivate _registerId(id: string): void {\n\t\tif (registry.entitiesById[id] && registry.entitiesById[id] !== this) {\n\t\t\tthrow new Error(\"An entity with id \\\"\" + id + \"\\\" already exists.\");\n\t\t}\n\t\tregistry.entitiesById[id] = this;\n\t}\n\n\tpublic _afterChanged(): void { }\n\n\t/**\n\t * @ignore\n\t */\n\tpublic addDisposer<T extends IDisposer>(disposer: T): T {\n\t\tthis._disposers.push(disposer);\n\t\treturn disposer;\n\t}\n\n\tprotected _dispose() {\n\t\tsuper._dispose();\n\n\t\tconst template = this._template;\n\n\t\tif (template) {\n\t\t\ttemplate._removeObjectTemplate(this);\n\t\t}\n\n\t\t$array.each(this._internalTemplates, (template) => {\n\t\t\ttemplate._removeObjectTemplate(this);\n\t\t});\n\n\t\tthis._removeTemplates();\n\t\tthis._disposeTemplates();\n\n\t\tthis.events.dispose();\n\n\t\tthis._disposers.forEach((x) => {\n\t\t\tx.dispose();\n\t\t});\n\n\t\t$object.each(this._disposerProperties, (_, disposers) => {\n\t\t\t$array.each(disposers, (disposer) => {\n\t\t\t\tdisposer.dispose();\n\t\t\t});\n\t\t});\n\n\t\tconst id = this.get(\"id\")!;\n\t\tif (id) {\n\t\t\tdelete registry.entitiesById[id];\n\t\t}\n\t}\n\n\t/**\n\t * Creates and returns a \"disposable\" timeout.\n\t *\n\t * @param   fn     Callback\n\t * @param   delay  Delay in milliseconds\n\t * @return         Timeout disposer\n\t */\n\tpublic setTimeout(fn: () => void, delay: number): IDisposer {\n\t\tconst id = setTimeout(() => {\n\t\t\tthis.removeDispose(disposer);\n\t\t\tfn();\n\t\t}, delay);\n\n\t\tconst disposer = new Disposer(() => {\n\t\t\tclearTimeout(id);\n\t\t});\n\n\t\tthis._disposers.push(disposer);\n\t\treturn disposer;\n\t}\n\n\t/**\n\t * @ignore\n\t */\n\tpublic removeDispose(target: IDisposer): void {\n\t\tif (!this.isDisposed()) {\n\t\t\tlet index = $array.indexOf(this._disposers, target);\n\t\t\tif (index > -1) {\n\t\t\t\tthis._disposers.splice(index, 1);\n\t\t\t}\n\t\t}\n\n\t\ttarget.dispose();\n\t}\n\n\t/**\n\t * @ignore\n\t */\n\tpublic hasTag(tag: string): boolean {\n\t\treturn $array.indexOf(this.get(\"themeTags\", []), tag) !== -1;\n\t}\n\n\t/**\n\t * @ignore\n\t */\n\tpublic addTag(tag: string): void {\n\t\tif (!this.hasTag(tag)) {\n\t\t\tconst tags = (<any>this).get(\"themeTags\", []);\n\t\t\ttags.push(tag);\n\t\t\tthis.set(\"themeTags\", tags);\n\t\t}\n\t}\n\n\t/**\n\t * @ignore\n\t */\n\tpublic removeTag(tag: string): void {\n\t\tif (this.hasTag(tag)) {\n\t\t\tconst tags = (<any>this).get(\"themeTags\", []);\n\t\t\t$array.remove(tags, tag);\n\t\t\tthis.set(\"themeTags\", tags);\n\t\t}\n\t}\n\n\tprotected _t(text: any, locale?: ILocale, ...rest: Array<string>){\n\t\treturn this._root.language.translate(text, locale, ...rest);\n\t}\n\n\t/**\n\t * An instance of [[Root]] object.\n\t *\n\t * @readonly\n\t * @since 5.0.6\n\t * @return Root object\n\t */\n\tpublic get root(): Root {\n\t\treturn this._root;\n\t}\n\n}\n","import { __awaiter } from \"tslib\";\r\nimport { Percent } from \"./Percent\";\r\nimport { Color } from \"./Color\";\r\nimport { EventDispatcher } from \"./EventDispatcher\";\r\nimport * as $object from \"./Object\";\r\n/**\r\n * @ignore\r\n */\r\nexport function waitForAnimations(animations) {\r\n    return __awaiter(this, void 0, void 0, function* () {\r\n        if (animations !== undefined) {\r\n            const promises = [];\r\n            $object.each(animations, (_, animation) => {\r\n                promises.push(animation.waitForStop());\r\n            });\r\n            yield Promise.all(promises);\r\n        }\r\n    });\r\n}\r\n/**\r\n * @ignore\r\n */\r\nexport function normalize(value, min, max) {\r\n    if (min === max) {\r\n        return 0;\r\n    }\r\n    else {\r\n        return Math.min(Math.max((value - min) * (1 / (max - min)), 0), 1);\r\n    }\r\n}\r\n/**\r\n * @ignore\r\n */\r\nexport function range(diff, from, to) {\r\n    return from + (diff * (to - from));\r\n}\r\n/**\r\n * @ignore\r\n */\r\nexport function defaultInterpolate(diff, from, to) {\r\n    if (diff >= 1) {\r\n        return to;\r\n    }\r\n    else {\r\n        return from;\r\n    }\r\n}\r\n/**\r\n * @ignore\r\n */\r\nexport function percentInterpolate(diff, from, to) {\r\n    return new Percent(range(diff, from.percent, to.percent));\r\n}\r\n/**\r\n * @ignore\r\n */\r\nexport function colorInterpolate(diff, from, to) {\r\n    return Color.interpolate(diff, from, to);\r\n}\r\n/**\r\n * @ignore\r\n */\r\nexport function getInterpolate(from, to) {\r\n    if (typeof from === \"number\" && typeof to === \"number\") {\r\n        return range;\r\n    }\r\n    if (from instanceof Percent && to instanceof Percent) {\r\n        return percentInterpolate;\r\n    }\r\n    if (from instanceof Color && to instanceof Color) {\r\n        return colorInterpolate;\r\n    }\r\n    return defaultInterpolate;\r\n}\r\nexport var AnimationState;\r\n(function (AnimationState) {\r\n    AnimationState[AnimationState[\"Stopped\"] = 0] = \"Stopped\";\r\n    AnimationState[AnimationState[\"Playing\"] = 1] = \"Playing\";\r\n    AnimationState[AnimationState[\"Paused\"] = 2] = \"Paused\";\r\n})(AnimationState || (AnimationState = {}));\r\n/**\r\n * @ignore\r\n */\r\nexport class AnimationTime {\r\n    constructor(entity, duration) {\r\n        Object.defineProperty(this, \"_entity\", {\r\n            enumerable: true,\r\n            configurable: true,\r\n            writable: true,\r\n            value: void 0\r\n        });\r\n        Object.defineProperty(this, \"_duration\", {\r\n            enumerable: true,\r\n            configurable: true,\r\n            writable: true,\r\n            value: void 0\r\n        });\r\n        Object.defineProperty(this, \"_playingDuration\", {\r\n            enumerable: true,\r\n            configurable: true,\r\n            writable: true,\r\n            value: null\r\n        });\r\n        Object.defineProperty(this, \"_startingTime\", {\r\n            enumerable: true,\r\n            configurable: true,\r\n            writable: true,\r\n            value: null\r\n        });\r\n        Object.defineProperty(this, \"_current\", {\r\n            enumerable: true,\r\n            configurable: true,\r\n            writable: true,\r\n            value: 0\r\n        });\r\n        Object.defineProperty(this, \"_from\", {\r\n            enumerable: true,\r\n            configurable: true,\r\n            writable: true,\r\n            value: 0\r\n        });\r\n        Object.defineProperty(this, \"_to\", {\r\n            enumerable: true,\r\n            configurable: true,\r\n            writable: true,\r\n            value: 0\r\n        });\r\n        Object.defineProperty(this, \"events\", {\r\n            enumerable: true,\r\n            configurable: true,\r\n            writable: true,\r\n            value: new EventDispatcher()\r\n        });\r\n        Object.defineProperty(this, \"easing\", {\r\n            enumerable: true,\r\n            configurable: true,\r\n            writable: true,\r\n            value: void 0\r\n        });\r\n        this._entity = entity;\r\n        this._duration = duration;\r\n    }\r\n    _stopEvent() {\r\n        const type = \"stopped\";\r\n        if (this.events.isEnabled(type)) {\r\n            this.events.dispatch(type, { type: type, target: this });\r\n        }\r\n    }\r\n    _runAnimation(currentTime) {\r\n        if (this._playingDuration !== null) {\r\n            if (this._startingTime === null) {\r\n                this._startingTime = currentTime;\r\n                return AnimationState.Playing;\r\n            }\r\n            else {\r\n                const diff = (currentTime - this._startingTime) / this._playingDuration;\r\n                if (diff >= 1) {\r\n                    this._playingDuration = null;\r\n                    this._startingTime = null;\r\n                    this._from = this._to;\r\n                    this._current = this._to;\r\n                    this._entity.markDirty();\r\n                    this._stopEvent();\r\n                    const type = \"ended\";\r\n                    if (this.events.isEnabled(type)) {\r\n                        this.events.dispatch(type, { type: type, target: this });\r\n                    }\r\n                    return AnimationState.Stopped;\r\n                }\r\n                else {\r\n                    this._current = range(diff, this._from, this._to);\r\n                    this._entity.markDirty();\r\n                    const type = \"progress\";\r\n                    if (this.events.isEnabled(type)) {\r\n                        this.events.dispatch(type, { type: type, target: this, progress: diff });\r\n                    }\r\n                    return AnimationState.Playing;\r\n                }\r\n            }\r\n        }\r\n        else {\r\n            return AnimationState.Stopped;\r\n        }\r\n    }\r\n    _play() {\r\n        this._from = this._current;\r\n        if (this._playingDuration === null) {\r\n            this._entity._root._addAnimation(this);\r\n            const type = \"started\";\r\n            if (this.events.isEnabled(type)) {\r\n                this.events.dispatch(type, { type: type, target: this });\r\n            }\r\n        }\r\n        else {\r\n            this._startingTime = null;\r\n        }\r\n        this._playingDuration = Math.abs(this._to - this._from) * this._duration;\r\n    }\r\n    get duration() {\r\n        return this._duration;\r\n    }\r\n    set duration(value) {\r\n        if (this._duration !== value) {\r\n            this._duration = value;\r\n            if (value === 0) {\r\n                this.jumpTo(this._to);\r\n            }\r\n            else if (this._current !== this._to) {\r\n                this._play();\r\n            }\r\n        }\r\n    }\r\n    get current() {\r\n        if (this.easing) {\r\n            return this.easing(this._current);\r\n        }\r\n        else {\r\n            return this._current;\r\n        }\r\n    }\r\n    stop() {\r\n        this.jumpTo(this._current);\r\n    }\r\n    jumpTo(value) {\r\n        if (this._current !== value) {\r\n            this._entity.markDirty();\r\n        }\r\n        if (this._playingDuration !== null) {\r\n            this._stopEvent();\r\n        }\r\n        this._playingDuration = null;\r\n        this._startingTime = null;\r\n        this._current = value;\r\n        this._from = value;\r\n        this._to = value;\r\n    }\r\n    tweenTo(value) {\r\n        if (this._current === value || this._duration === 0) {\r\n            this.jumpTo(value);\r\n        }\r\n        else {\r\n            if (this._to !== value) {\r\n                this._to = value;\r\n                this._play();\r\n            }\r\n        }\r\n    }\r\n}\r\n/*export class AnimationValue extends AnimationTime {\r\n    public _min: number;\r\n    public _max: number;\r\n\r\n    constructor(entity: Entity, duration: number, min: number, max: number) {\r\n        super(entity, duration);\r\n        this._min = min;\r\n        this._max = max;\r\n    }\r\n\r\n    public get min(): number {\r\n        return this._min;\r\n    }\r\n\r\n    public set min(value: number) {\r\n        if (this._min !== value) {\r\n            this._min = value;\r\n            this._entity.markDirty();\r\n        }\r\n    }\r\n\r\n    public get max(): number {\r\n        return this._max;\r\n    }\r\n\r\n    public set max(value: number) {\r\n        if (this._max !== value) {\r\n            this._max = value;\r\n            this._entity.markDirty();\r\n        }\r\n    }\r\n\r\n    public currentValue(): number {\r\n        return range(super.currentTime(), this._min, this._max);\r\n    }\r\n\r\n    public jumpToValue(value: number) {\r\n        super.jumpToTime(normalize(value, this._min, this._max));\r\n    }\r\n\r\n    public tweenToValue(value: number) {\r\n        super.tweenToTime(normalize(value, this._min, this._max));\r\n    }\r\n}\r\n*/\r\n//# sourceMappingURL=Animation.js.map","import type { Entity, Animation } from \"./Entity\";\nimport { Percent } from \"./Percent\";\nimport { Color } from \"./Color\";\nimport type { Easing } from \"./Ease\";\nimport { EventDispatcher, Events } from \"./EventDispatcher\";\nimport * as $object from \"./Object\";\n\nexport type Animations<T> = { [K in keyof T]?: Animation<T[K]> };\n\n/**\n * @ignore\n */\nexport async function waitForAnimations<T>(animations: Animations<T> | undefined): Promise<void> {\n\tif (animations !== undefined) {\n\t\tconst promises: Array<Promise<void>> = [];\n\n\t\t$object.each(animations, (_, animation) => {\n\t\t\tpromises.push(animation.waitForStop());\n\t\t});\n\n\t\tawait Promise.all(promises);\n\t}\n}\n\n\ninterface ITime {\n\treadonly tag: unique symbol;\n}\n\n/**\n * New type which allows for conversion from a number into a Time, but not from a Time to a number\n */\nexport type Time = number | ITime;\n\n\n/**\n * @ignore\n */\nexport function normalize(value: number, min: number, max: number): Time {\n\tif (min === max) {\n\t\treturn 0;\n\n\t} else {\n\t\treturn Math.min(Math.max((value - min) * (1 / (max - min)), 0), 1);\n\t}\n}\n\n/**\n * @ignore\n */\nexport function range(diff: Time, from: number, to: number): number {\n\treturn from + (diff as number * (to - from));\n}\n\n/**\n * @ignore\n */\nexport function defaultInterpolate<A, B>(diff: Time, from: A, to: B): A | B {\n\tif (diff >= 1) {\n\t\treturn to;\n\n\t} else {\n\t\treturn from;\n\t}\n}\n\n/**\n * @ignore\n */\nexport function percentInterpolate(diff: Time, from: Percent, to: Percent): Percent {\n\treturn new Percent(range(diff, from.percent, to.percent));\n}\n\n/**\n * @ignore\n */\nexport function colorInterpolate(diff: Time, from: Color, to: Color): Color {\n\treturn Color.interpolate(diff, from, to);\n}\n\n/**\n * @ignore\n */\nexport function getInterpolate(from: number, to: number): typeof range;\n\n/**\n * @ignore\n */\nexport function getInterpolate(from: Percent, to: Percent): typeof percentInterpolate;\n\n/**\n * @ignore\n */\nexport function getInterpolate(from: any, to: any): typeof defaultInterpolate;\n\n/**\n * @ignore\n */\nexport function getInterpolate(from: any, to: any): (diff: Time, from: any, to: any) => any {\n\tif (typeof from === \"number\" && typeof to === \"number\") {\n\t\treturn range;\n\t}\n\n\tif (from instanceof Percent && to instanceof Percent) {\n\t\treturn percentInterpolate;\n\t}\n\n\tif (from instanceof Color && to instanceof Color) {\n\t\treturn colorInterpolate;\n\t}\n\n\treturn defaultInterpolate;\n}\n\n\nexport enum AnimationState {\n\tStopped,\n\tPlaying,\n\tPaused,\n}\n\nexport interface IAnimation {\n\t_runAnimation(_currentTime: number): AnimationState;\n}\n\n\n/**\n * @ignore\n */\nexport interface IEntityEvents {\n\tstarted: {};\n\tstopped: {};\n\t// TODO replace this with stopped\n\tended: {};\n\tprogress: { progress: number };\n}\n\n/**\n * @ignore\n */\nexport class AnimationTime implements IAnimation {\n\tprotected _entity: Entity;\n\tprotected _duration: number;\n\n\tprotected _playingDuration: number | null = null;\n\tprotected _startingTime: number | null = null;\n\tprotected _current: Time = 0;\n\tprotected _from: Time = 0;\n\tprotected _to: Time = 0;\n\n\tdeclare public _events: IEntityEvents;\n\tpublic events: EventDispatcher<Events<this, this[\"_events\"]>> = new EventDispatcher();\n\n\tpublic easing: Easing | undefined;\n\n\tconstructor(entity: Entity, duration: number) {\n\t\tthis._entity = entity;\n\t\tthis._duration = duration;\n\t}\n\n\tprivate _stopEvent() {\n\t\tconst type = \"stopped\";\n\t\tif (this.events.isEnabled(type)) {\n\t\t\tthis.events.dispatch(type, { type: type, target: this });\n\t\t}\n\t}\n\n\tpublic _runAnimation(currentTime: number): AnimationState {\n\t\tif (this._playingDuration !== null) {\n\t\t\tif (this._startingTime === null) {\n\t\t\t\tthis._startingTime = currentTime;\n\t\t\t\treturn AnimationState.Playing;\n\t\t\t}\n\t\t\telse {\n\t\t\t\tconst diff = (currentTime - this._startingTime) / this._playingDuration;\n\n\t\t\t\tif (diff >= 1) {\n\t\t\t\t\tthis._playingDuration = null;\n\t\t\t\t\tthis._startingTime = null;\n\t\t\t\t\tthis._from = this._to;\n\t\t\t\t\tthis._current = this._to;\n\t\t\t\t\tthis._entity.markDirty();\n\t\t\t\t\tthis._stopEvent();\n\t\t\t\t\tconst type = \"ended\";\n\t\t\t\t\tif (this.events.isEnabled(type)) {\n\t\t\t\t\t\tthis.events.dispatch(type, { type: type, target: this });\n\t\t\t\t\t}\n\t\t\t\t\treturn AnimationState.Stopped;\n\n\t\t\t\t} else {\n\t\t\t\t\tthis._current = range(diff, this._from as number, this._to as number);\n\t\t\t\t\tthis._entity.markDirty();\n\n\t\t\t\t\tconst type = \"progress\";\n\t\t\t\t\tif (this.events.isEnabled(type)) {\n\t\t\t\t\t\tthis.events.dispatch(type, { type: type, target: this, progress: diff });\n\t\t\t\t\t}\n\n\t\t\t\t\treturn AnimationState.Playing;\n\t\t\t\t}\n\t\t\t}\n\n\t\t} else {\n\t\t\treturn AnimationState.Stopped;\n\t\t}\n\t}\n\n\tprivate _play() {\n\t\tthis._from = this._current;\n\n\t\tif (this._playingDuration === null) {\n\t\t\tthis._entity._root._addAnimation(this);\n\n\t\t\tconst type = \"started\";\n\t\t\tif (this.events.isEnabled(type)) {\n\t\t\t\tthis.events.dispatch(type, { type: type, target: this });\n\t\t\t}\n\n\t\t} else {\n\t\t\tthis._startingTime = null;\n\t\t}\n\n\t\tthis._playingDuration = Math.abs((this._to as number) - (this._from as number)) * this._duration;\n\t}\n\n\tpublic get duration(): number {\n\t\treturn this._duration;\n\t}\n\n\tpublic set duration(value: number) {\n\t\tif (this._duration !== value) {\n\t\t\tthis._duration = value;\n\n\t\t\tif (value === 0) {\n\t\t\t\tthis.jumpTo(this._to);\n\n\t\t\t} else if (this._current !== this._to) {\n\t\t\t\tthis._play();\n\t\t\t}\n\t\t}\n\t}\n\n\tpublic get current(): Time {\n\t\tif (this.easing) {\n\t\t\treturn this.easing(this._current);\n\n\t\t} else {\n\t\t\treturn this._current;\n\t\t}\n\t}\n\n\tpublic stop() {\n\t\tthis.jumpTo(this._current);\n\t}\n\n\tpublic jumpTo(value: Time) {\n\t\tif (this._current !== value) {\n\t\t\tthis._entity.markDirty();\n\t\t}\n\n\t\tif (this._playingDuration !== null) {\n\t\t\tthis._stopEvent();\n\t\t}\n\n\t\tthis._playingDuration = null;\n\t\tthis._startingTime = null;\n\t\tthis._current = value;\n\t\tthis._from = value;\n\t\tthis._to = value;\n\t}\n\n\tpublic tweenTo(value: Time) {\n\t\tif (this._current === value || this._duration === 0) {\n\t\t\tthis.jumpTo(value);\n\n\t\t} else {\n\t\t\tif (this._to !== value) {\n\t\t\t\tthis._to = value;\n\t\t\t\tthis._play();\n\t\t\t}\n\t\t}\n\t}\n}\n\n\n/*export class AnimationValue extends AnimationTime {\n\tpublic _min: number;\n\tpublic _max: number;\n\n\tconstructor(entity: Entity, duration: number, min: number, max: number) {\n\t\tsuper(entity, duration);\n\t\tthis._min = min;\n\t\tthis._max = max;\n\t}\n\n\tpublic get min(): number {\n\t\treturn this._min;\n\t}\n\n\tpublic set min(value: number) {\n\t\tif (this._min !== value) {\n\t\t\tthis._min = value;\n\t\t\tthis._entity.markDirty();\n\t\t}\n\t}\n\n\tpublic get max(): number {\n\t\treturn this._max;\n\t}\n\n\tpublic set max(value: number) {\n\t\tif (this._max !== value) {\n\t\t\tthis._max = value;\n\t\t\tthis._entity.markDirty();\n\t\t}\n\t}\n\n\tpublic currentValue(): number {\n\t\treturn range(super.currentTime(), this._min, this._max);\n\t}\n\n\tpublic jumpToValue(value: number) {\n\t\tsuper.jumpToTime(normalize(value, this._min, this._max));\n\t}\n\n\tpublic tweenToValue(value: number) {\n\t\tsuper.tweenToTime(normalize(value, this._min, this._max));\n\t}\n}\n*/\n","import { range } from \"./Animation\";\r\nimport * as $utils from \"./Utils\";\r\nimport * as $type from \"./Type\";\r\n/**\r\n * @ignore\r\n */\r\nfunction string2hex(string) {\r\n    //string = cssColorNames[string.toLowerCase()] || string;\r\n    if (string[0] === \"#\") {\r\n        string = string.substr(1);\r\n    }\r\n    if (string.length == 3) {\r\n        string = string[0].repeat(2) + string[1].repeat(2) + string[2].repeat(2);\r\n    }\r\n    return parseInt(string, 16);\r\n}\r\n/**\r\n * @ignore\r\n */\r\nexport function rgba2hex(color) {\r\n    color = color.replace(/[ ]/g, \"\");\r\n    // Init\r\n    let matches = color.match(/^rgb\\(([0-9]*),([0-9]*),([0-9]*)\\)/i);\r\n    // Try rgb() format\r\n    if (matches) {\r\n        matches.push(\"1\");\r\n    }\r\n    else {\r\n        matches = color.match(/^rgba\\(([0-9]*),([0-9]*),([0-9]*),([.0-9]*)\\)/i);\r\n        if (!matches) {\r\n            return 0x000000;\r\n        }\r\n    }\r\n    let hex = \"\";\r\n    for (let i = 1; i <= 3; i++) {\r\n        let val = parseInt(matches[i]).toString(16);\r\n        if (val.length == 1) {\r\n            val = \"0\" + val;\r\n        }\r\n        hex += val;\r\n    }\r\n    return string2hex(hex);\r\n}\r\n/**\r\n * Returns a new [[Color]] object base on input.\r\n *\r\n * Accepts parameters in CSS hex or rgb/rtba strings, or hex numbers.\r\n *\r\n * * `\"#f00\"`\r\n * * `\"#ff0000\"`\r\n * * `\"rgb(255, 0, 0)\"`\r\n * * `\"rgba(255, 0, 0, 1)\"`\r\n * * `0xff0000`\r\n *\r\n * @param   input  Input color\r\n * @return         Color\r\n */\r\nexport function color(input) {\r\n    return Color.fromAny(input);\r\n}\r\n/**\r\n * Wherever color needs to be specified in amCharts 5, `Color` object needs to\r\n * be used.\r\n *\r\n * @see {@link https://www.amcharts.com/docs/v5/concepts/colors-gradients-and-patterns/} for more info\r\n * @important\r\n */\r\nexport class Color {\r\n    constructor(hex) {\r\n        Object.defineProperty(this, \"_hex\", {\r\n            enumerable: true,\r\n            configurable: true,\r\n            writable: true,\r\n            value: void 0\r\n        });\r\n        this._hex = hex | 0;\r\n    }\r\n    /**\r\n     * Color numeric value.\r\n     */\r\n    get hex() {\r\n        return this._hex;\r\n    }\r\n    /**\r\n     * Value of color's R channel.\r\n     * @return R value\r\n     */\r\n    get r() {\r\n        return this._hex >>> 16;\r\n    }\r\n    /**\r\n     * Value of color's G channel.\r\n     * @return G value\r\n     */\r\n    get g() {\r\n        return (this._hex >> 8) & 0xFF;\r\n    }\r\n    /**\r\n     * Value of color's B channel.\r\n     * @return B value\r\n     */\r\n    get b() {\r\n        return this._hex & 0xFF;\r\n    }\r\n    /**\r\n     * Returns color CSS representation in form of `rgba(r, g, b, a)` string.\r\n     *\r\n     * @param   alpha  Opacity\r\n     * @return         CSS string\r\n     */\r\n    toCSS(alpha = 1) {\r\n        return \"rgba(\" + this.r + \", \" + this.g + \", \" + this.b + \", \" + alpha + \")\";\r\n    }\r\n    /**\r\n     * Returns color CSS representation in form of `#rgb` string.\r\n     *\r\n     * @return         CSS string\r\n     */\r\n    toCSSHex() {\r\n        return \"#\" + $utils.padString(this.r.toString(16), 2) + $utils.padString(this.g.toString(16), 2) + $utils.padString(this.b.toString(16), 2);\r\n    }\r\n    /**\r\n     * Returns color's HSL info.\r\n     * @param   alpha Opacity\r\n     * @return        HSL info\r\n     */\r\n    toHSL(alpha = 1) {\r\n        return $utils.rgbToHsl({\r\n            r: this.r,\r\n            g: this.g,\r\n            b: this.b,\r\n            a: alpha\r\n        });\r\n    }\r\n    /**\r\n     * Converts HSL values into a new [[Color]] object.\r\n     *\r\n     * @param   h H value\r\n     * @param   s S value\r\n     * @param   l L value\r\n     * @return    Color object\r\n     */\r\n    static fromHSL(h, s, l) {\r\n        const rgb = $utils.hslToRgb({\r\n            h: h,\r\n            s: s,\r\n            l: l\r\n        });\r\n        return this.fromRGB(rgb.r, rgb.g, rgb.b);\r\n    }\r\n    toString() {\r\n        return this.toCSSHex();\r\n    }\r\n    /**\r\n     * Converts hex number into a new [[Color]] object.\r\n     *\r\n     * ```TypeScript\r\n     * Color.fromHex(0xff0000) // red\r\n     * ```\r\n     * ```JavaScript\r\n     * Color.fromHex(0xff0000) // red\r\n     * ```\r\n     *\r\n     * @param   hex  Hex color\r\n     * @return       Color\r\n     */\r\n    static fromHex(hex) {\r\n        return new Color(hex);\r\n    }\r\n    /**\r\n     * Converts RGB values to a new [[Color]] object.\r\n     *\r\n     * @param   r  R value\r\n     * @param   g  G value\r\n     * @param   b  B value\r\n     * @return     Color\r\n     */\r\n    static fromRGB(r, g, b) {\r\n        return new Color((b | 0) + (g << 8) + (r << 16));\r\n    }\r\n    /**\r\n     * Converts RGB string to a new [[Color]] object.\r\n     *\r\n     * ```TypeScript\r\n     * Color.fromString(\"#ff0000\") // red\r\n     * ```\r\n     * ```JavaScript\r\n     * Color.fromString(\"#ff0000\") // red\r\n     * ```\r\n     *\r\n     * @param   s  RGB string\r\n     * @return     Color\r\n     */\r\n    static fromString(s) {\r\n        return new Color(string2hex(s));\r\n    }\r\n    /**\r\n     * Converts CSS rgba() syntax to a new [[Color]] object.\r\n     *\r\n     * ```TypeScript\r\n     * Color.fromCSS(\"rgba(255, 0, 0, 1)\") // red\r\n     * ```\r\n     * ```JavaScript\r\n     * Color.fromCSS(\"rgba(255, 0, 0, 1)\") // red\r\n     * ```\r\n     *\r\n     * @param  {string} s [description]\r\n     * @return {Color}    [description]\r\n     */\r\n    static fromCSS(s) {\r\n        return new Color(rgba2hex(s));\r\n    }\r\n    /**\r\n     * Convert to color from virtually anything.\r\n     *\r\n     * Will throw an exception if unable to resolve the color.\r\n     *\r\n     * @param   s  Source\r\n     * @return     Color\r\n     */\r\n    static fromAny(s) {\r\n        if ($type.isString(s)) {\r\n            if (s[0] == \"#\") {\r\n                return Color.fromString(s);\r\n            }\r\n            else if (s.substr(0, 3) == \"rgb\") {\r\n                return Color.fromCSS(s);\r\n            }\r\n        }\r\n        else if ($type.isNumber(s)) {\r\n            return Color.fromHex(s);\r\n        }\r\n        else if (s instanceof Color) {\r\n            return Color.fromHex(s.hex);\r\n        }\r\n        throw new Error(\"Unknown color syntax: \" + s);\r\n    }\r\n    /**\r\n     * Returns a new [[Color]] object based on either `lightAlternative` or\r\n     * `darkAlternative` depending on which one is more contrasting with\r\n     * the `color`.\r\n     *\r\n     * @param   color             Reference color\r\n     * @param   lightAlternative  Light color\r\n     * @param   darkAlternative   Dark color\r\n     * @return                    Alternative color\r\n     */\r\n    static alternative(color, lightAlternative, darkAlternative) {\r\n        const rgb = $utils.alternativeColor({ r: color.r, g: color.g, b: color.b }, lightAlternative ? { r: lightAlternative.r, g: lightAlternative.g, b: lightAlternative.b } : undefined, darkAlternative ? { r: darkAlternative.r, g: darkAlternative.g, b: darkAlternative.b } : undefined);\r\n        return this.fromRGB(rgb.r, rgb.g, rgb.b);\r\n    }\r\n    /**\r\n     * Returns an intermediate Color between two reference colors depending on\r\n     * the progress (`diff`) between the two.\r\n     *\r\n     * @param   diff  Progress\r\n     * @param   from  Source color\r\n     * @param   to    Target color\r\n     * @param   mode  Interpolation mode\r\n     * @return        Color\r\n     */\r\n    static interpolate(diff, from, to, mode = \"rgb\") {\r\n        if (mode == \"hsl\") {\r\n            const fromHSL = from.toHSL();\r\n            const toHSL = to.toHSL();\r\n            return Color.fromHSL(range(diff, fromHSL.h, toHSL.h), range(diff, fromHSL.s, toHSL.s), range(diff, fromHSL.l, toHSL.l));\r\n        }\r\n        else {\r\n            return Color.fromRGB(range(diff, from.r, to.r), range(diff, from.g, to.g), range(diff, from.b, to.b));\r\n        }\r\n    }\r\n    /**\r\n     * Returns a new [[Color]] lightened by `percent` value.\r\n     *\r\n     * Use negative value to darken the color.\r\n     *\r\n     * @param   color    Source color\r\n     * @param   percent  Percent\r\n     * @return           New color\r\n     */\r\n    static lighten(color, percent) {\r\n        const rgb = $utils.lighten({ r: color.r, g: color.g, b: color.b }, percent);\r\n        return Color.fromRGB(rgb.r, rgb.g, rgb.b);\r\n    }\r\n    /**\r\n     * Returns a new [[Color]] brightened by `percent` value.\r\n     *\r\n     * Use negative value to dim the color.\r\n     *\r\n     * @param   color    Source color\r\n     * @param   percent  Percent\r\n     * @return           New color\r\n     */\r\n    static brighten(color, percent) {\r\n        const rgb = $utils.brighten({ r: color.r, g: color.g, b: color.b }, percent);\r\n        return Color.fromRGB(rgb.r, rgb.g, rgb.b);\r\n    }\r\n    /**\r\n     * Returns a new [[Color]] saturated by `percent` value.\r\n     *\r\n     * Value range is between `0` (fully desaturated), to `1` (full color).\r\n     *\r\n     * @param   color    Source color\r\n     * @param   percent  Percent\r\n     * @return           New color\r\n     */\r\n    static saturate(color, percent) {\r\n        const rgb = $utils.saturate({ r: color.r, g: color.g, b: color.b }, percent);\r\n        return Color.fromRGB(rgb.r, rgb.g, rgb.b);\r\n    }\r\n}\r\n//# sourceMappingURL=Color.js.map","import { range, Time } from \"./Animation\";\nimport * as $utils from \"./Utils\";\nimport * as $type from \"./Type\";\n\n/**\n * @ignore\n */\nfunction string2hex(string: string): number {\n\t//string = cssColorNames[string.toLowerCase()] || string;\n\n\tif (string[0] === \"#\") {\n\t\tstring = string.substr(1);\n\t}\n\tif (string.length == 3) {\n\t\tstring = string[0].repeat(2) + string[1].repeat(2) + string[2].repeat(2);\n\t}\n\n\treturn parseInt(string, 16);\n}\n\n/**\n * @ignore\n */\nexport function rgba2hex(color: string): number {\n\tcolor = color.replace(/[ ]/g, \"\");\n\n\t// Init\n\tlet matches: string[] | null = color.match(/^rgb\\(([0-9]*),([0-9]*),([0-9]*)\\)/i);\n\n\t// Try rgb() format\n\tif (matches) {\n\t\tmatches.push(\"1\");\n\n\t} else {\n\t\tmatches = color.match(/^rgba\\(([0-9]*),([0-9]*),([0-9]*),([.0-9]*)\\)/i);\n\n\t\tif (!matches) {\n\t\t\treturn 0x000000;\n\t\t}\n\t}\n\n\tlet hex = \"\";\n\tfor (let i = 1; i <= 3; i++) {\n\t\tlet val = parseInt(matches[i]).toString(16);\n\t\tif (val.length == 1) {\n\t\t\tval = \"0\" + val;\n\t\t}\n\t\thex += val;\n\t}\n\n\treturn string2hex(hex);\n\n}\n\n/**\n * Returns a new [[Color]] object base on input.\n *\n * Accepts parameters in CSS hex or rgb/rtba strings, or hex numbers.\n *\n * * `\"#f00\"`\n * * `\"#ff0000\"`\n * * `\"rgb(255, 0, 0)\"`\n * * `\"rgba(255, 0, 0, 1)\"`\n * * `0xff0000`\n * \n * @param   input  Input color\n * @return         Color\n */\nexport function color(input: number | string): Color {\n\treturn Color.fromAny(input);\n}\n\n/**\n * Wherever color needs to be specified in amCharts 5, `Color` object needs to\n * be used.\n *\n * @see {@link https://www.amcharts.com/docs/v5/concepts/colors-gradients-and-patterns/} for more info\n * @important\n */\nexport class Color {\n\tprotected _hex: number;\n\n\tprivate constructor(hex: number) {\n\t\tthis._hex = hex | 0;\n\t}\n\n\t/**\n\t * Color numeric value.\n\t */\n\tpublic get hex(): number {\n\t\treturn this._hex;\n\t}\n\n\t/**\n\t * Value of color's R channel.\n\t * @return R value\n\t */\n\tpublic get r(): number {\n\t\treturn this._hex >>> 16;\n\t}\n\n\t/**\n\t * Value of color's G channel.\n\t * @return G value\n\t */\n\tpublic get g(): number {\n\t\treturn (this._hex >> 8) & 0xFF;\n\t}\n\n\t/**\n\t * Value of color's B channel.\n\t * @return B value\n\t */\n\tpublic get b(): number {\n\t\treturn this._hex & 0xFF;\n\t}\n\n\t/**\n\t * Returns color CSS representation in form of `rgba(r, g, b, a)` string.\n\t * \n\t * @param   alpha  Opacity\n\t * @return         CSS string\n\t */\n\tpublic toCSS(alpha: number = 1): string {\n\t\treturn \"rgba(\" + this.r + \", \" + this.g + \", \" + this.b + \", \" + alpha + \")\";\n\t}\n\n\t/**\n\t * Returns color CSS representation in form of `#rgb` string.\n\t * \n\t * @return         CSS string\n\t */\n\tpublic toCSSHex(): string {\n\t\treturn \"#\" + $utils.padString(this.r.toString(16), 2) + $utils.padString(this.g.toString(16), 2) + $utils.padString(this.b.toString(16), 2);\n\t}\n\n\t/**\n\t * Returns color's HSL info.\n\t * @param   alpha Opacity\n\t * @return        HSL info\n\t */\n\tpublic toHSL(alpha: number = 1): $utils.iHSL {\n\t\treturn $utils.rgbToHsl({\n\t\t\tr: this.r,\n\t\t\tg: this.g,\n\t\t\tb: this.b,\n\t\t\ta: alpha\n\t\t})\n\t}\n\n\t/**\n\t * Converts HSL values into a new [[Color]] object.\n\t *\n\t * @param   h H value\n\t * @param   s S value\n\t * @param   l L value\n\t * @return    Color object\n\t */\n\tpublic static fromHSL(h: number, s: number, l: number): Color {\n\t\tconst rgb = $utils.hslToRgb({\n\t\t\th: h,\n\t\t\ts: s,\n\t\t\tl: l\n\t\t});\n\t\treturn this.fromRGB(rgb.r, rgb.g, rgb.b);\n\t}\n\n\tpublic toString(): string {\n\t\treturn this.toCSSHex();\n\t}\n\n\t/**\n\t * Converts hex number into a new [[Color]] object.\n\t *\n\t * ```TypeScript\n\t * Color.fromHex(0xff0000) // red\n\t * ```\n\t * ```JavaScript\n\t * Color.fromHex(0xff0000) // red\n\t * ```\n\t *\n\t * @param   hex  Hex color\n\t * @return       Color\n\t */\n\tpublic static fromHex(hex: number): Color {\n\t\treturn new Color(hex);\n\t}\n\n\t/**\n\t * Converts RGB values to a new [[Color]] object.\n\t *\n\t * @param   r  R value\n\t * @param   g  G value\n\t * @param   b  B value\n\t * @return     Color\n\t */\n\tpublic static fromRGB(r: number, g: number, b: number): Color {\n\t\treturn new Color((b | 0) + (g << 8) + (r << 16));\n\t}\n\n\t/**\n\t * Converts RGB string to a new [[Color]] object.\n\t *\n\t * ```TypeScript\n\t * Color.fromString(\"#ff0000\") // red\n\t * ```\n\t * ```JavaScript\n\t * Color.fromString(\"#ff0000\") // red\n\t * ```\n\t *\n\t * @param   s  RGB string\n\t * @return     Color\n\t */\n\tpublic static fromString(s: string): Color {\n\t\treturn new Color(string2hex(s));\n\t}\n\n\t/**\n\t * Converts CSS rgba() syntax to a new [[Color]] object.\n\t *\n\t * ```TypeScript\n\t * Color.fromCSS(\"rgba(255, 0, 0, 1)\") // red\n\t * ```\n\t * ```JavaScript\n\t * Color.fromCSS(\"rgba(255, 0, 0, 1)\") // red\n\t * ```\n\t *\n\t * @param  {string} s [description]\n\t * @return {Color}    [description]\n\t */\n\tpublic static fromCSS(s: string): Color {\n\t\treturn new Color(rgba2hex(s));\n\t}\n\n\t/**\n\t * Convert to color from virtually anything.\n\t *\n\t * Will throw an exception if unable to resolve the color.\n\t *\n\t * @param   s  Source\n\t * @return     Color\n\t */\n\tpublic static fromAny(s: string | number | Color): Color {\n\t\tif ($type.isString(s)) {\n\t\t\tif (s[0] == \"#\") {\n\t\t\t\treturn Color.fromString(s);\n\t\t\t}\n\t\t\telse if (s.substr(0, 3) == \"rgb\") {\n\t\t\t\treturn Color.fromCSS(s);\n\t\t\t}\n\t\t}\n\t\telse if ($type.isNumber(s)) {\n\t\t\treturn Color.fromHex(s);\n\t\t}\n\t\telse if (s instanceof Color) {\n\t\t\treturn Color.fromHex(s.hex);\n\t\t}\n\n\t\tthrow new Error(\"Unknown color syntax: \" + s);\n\t}\n\n\t/**\n\t * Returns a new [[Color]] object based on either `lightAlternative` or\n\t * `darkAlternative` depending on which one is more contrasting with\n\t * the `color`.\n\t *\n\t * @param   color             Reference color\n\t * @param   lightAlternative  Light color\n\t * @param   darkAlternative   Dark color\n\t * @return                    Alternative color\n\t */\n\tpublic static alternative(color: Color, lightAlternative?: Color, darkAlternative?: Color): Color {\n\t\tconst rgb = $utils.alternativeColor(\n\t\t\t{ r: color.r, g: color.g, b: color.b },\n\t\t\tlightAlternative ? { r: lightAlternative.r, g: lightAlternative.g, b: lightAlternative.b } : undefined,\n\t\t\tdarkAlternative ? { r: darkAlternative.r, g: darkAlternative.g, b: darkAlternative.b } : undefined\n\t\t);\n\t\treturn this.fromRGB(rgb.r, rgb.g, rgb.b);\n\t}\n\n\t/**\n\t * Returns an intermediate Color between two reference colors depending on\n\t * the progress (`diff`) between the two.\n\t *\n\t * @param   diff  Progress\n\t * @param   from  Source color\n\t * @param   to    Target color\n\t * @param   mode  Interpolation mode\n\t * @return        Color\n\t */\n\tpublic static interpolate(diff: Time, from: Color, to: Color, mode: \"rgb\" | \"hsl\" = \"rgb\"): Color {\n\t\tif (mode == \"hsl\") {\n\t\t\tconst fromHSL = from.toHSL();\n\t\t\tconst toHSL = to.toHSL();\n\t\t\treturn Color.fromHSL(\n\t\t\t\trange(diff, fromHSL.h, toHSL.h),\n\t\t\t\trange(diff, fromHSL.s, toHSL.s),\n\t\t\t\trange(diff, fromHSL.l, toHSL.l)\n\t\t\t);\n\t\t}\n\t\telse {\n\t\t\treturn Color.fromRGB(\n\t\t\t\trange(diff, from.r, to.r),\n\t\t\t\trange(diff, from.g, to.g),\n\t\t\t\trange(diff, from.b, to.b)\n\t\t\t);\n\t\t}\n\t}\n\n\t/**\n\t * Returns a new [[Color]] lightened by `percent` value.\n\t *\n\t * Use negative value to darken the color.\n\t *\n\t * @param   color    Source color\n\t * @param   percent  Percent\n\t * @return           New color\n\t */\n\tpublic static lighten(color: Color, percent: number): Color {\n\t\tconst rgb = $utils.lighten({ r: color.r, g: color.g, b: color.b }, percent);\n\t\treturn Color.fromRGB(rgb!.r, rgb!.g, rgb!.b);\n\t}\n\n\t/**\n\t * Returns a new [[Color]] brightened by `percent` value.\n\t *\n\t * Use negative value to dim the color.\n\t *\n\t * @param   color    Source color\n\t * @param   percent  Percent\n\t * @return           New color\n\t */\n\tpublic static brighten(color: Color, percent: number): Color {\n\t\tconst rgb = $utils.brighten({ r: color.r, g: color.g, b: color.b }, percent);\n\t\treturn Color.fromRGB(rgb!.r, rgb!.g, rgb!.b);\n\t}\n\n\t/**\n\t * Returns a new [[Color]] saturated by `percent` value.\n\t *\n\t * Value range is between `0` (fully desaturated), to `1` (full color).\n\t *\n\t * @param   color    Source color\n\t * @param   percent  Percent\n\t * @return           New color\n\t */\n\tpublic static saturate(color: Color, percent: number): Color {\n\t\tconst rgb = $utils.saturate({ r: color.r, g: color.g, b: color.b }, percent);\n\t\treturn Color.fromRGB(rgb!.r, rgb!.g, rgb!.b);\n\t}\n}\n","import * as $type from \"./Type\";\r\nimport * as $array from \"./Array\";\r\nimport * as $object from \"./Object\";\r\nimport { Disposer, DisposerClass } from \"./Disposer\";\r\n/**\r\n * ============================================================================\r\n * DOM FUNCTIONS\r\n * ============================================================================\r\n * @hidden\r\n */\r\n/**\r\n * Execute a function when DOM is ready.\r\n *\r\n * @since 5.0.2\r\n * @param  f  Callback\r\n */\r\nexport function ready(f) {\r\n    if (document.readyState !== \"loading\") {\r\n        f();\r\n    }\r\n    else {\r\n        const listener = () => {\r\n            if (document.readyState !== \"loading\") {\r\n                document.removeEventListener(\"readystatechange\", listener);\r\n                f();\r\n            }\r\n        };\r\n        document.addEventListener(\"readystatechange\", listener);\r\n    }\r\n}\r\n/**\r\n * Removes a DOM element.\r\n * @param  el  Target element\r\n */\r\nexport function removeElement(el) {\r\n    if (el.parentNode) {\r\n        el.parentNode.removeChild(el);\r\n    }\r\n}\r\n/**\r\n * Function that adds a disposable event listener directly to a DOM element.\r\n *\r\n * @ignore Exclude from docs\r\n * @param dom       A DOM element to add event to\r\n * @param type      Event type\r\n * @param listener  Event listener\r\n * @returns Disposable event\r\n */\r\nexport function addEventListener(dom, type, listener, options) {\r\n    //@todo proper type check for options: EventListenerOptions | boolean (TS for some reason gives error on passive parameter)\r\n    dom.addEventListener(type, listener, options || false);\r\n    return new Disposer(() => {\r\n        dom.removeEventListener(type, listener, options || false);\r\n    });\r\n}\r\n/**\r\n * Function that adds an event listener which is triggered when the browser's zoom changes.\r\n *\r\n * @param listener  Event listener\r\n * @returns Disposable event\r\n */\r\nexport function onZoom(listener) {\r\n    // TODO use matchMedia instead ?\r\n    return addEventListener(window, \"resize\", (_ev) => {\r\n        listener();\r\n    });\r\n}\r\n/**\r\n * @ignore\r\n */\r\nexport function supports(cap) {\r\n    switch (cap) {\r\n        case \"touchevents\":\r\n            //return \"ontouchstart\" in document.documentElement;\r\n            return window.hasOwnProperty(\"TouchEvent\");\r\n        case \"pointerevents\":\r\n            return window.hasOwnProperty(\"PointerEvent\");\r\n        case \"mouseevents\":\r\n            return window.hasOwnProperty(\"MouseEvent\");\r\n        case \"wheelevents\":\r\n            return window.hasOwnProperty(\"WheelEvent\");\r\n        case \"keyboardevents\":\r\n            return window.hasOwnProperty(\"KeyboardEvent\");\r\n    }\r\n    return false;\r\n}\r\n/**\r\n * @ignore\r\n */\r\nexport function getPointerId(event) {\r\n    let id = event.pointerId || 0;\r\n    return id;\r\n}\r\n/**\r\n * Removes focus from any element by shifting focus to body.\r\n *\r\n * @ignore\r\n */\r\nexport function blur() {\r\n    if (document.activeElement && document.activeElement != document.body) {\r\n        if (document.activeElement.blur) {\r\n            document.activeElement.blur();\r\n        }\r\n        else {\r\n            let input = document.createElement(\"button\");\r\n            input.style.position = \"fixed\";\r\n            input.style.top = \"0px\";\r\n            input.style.left = \"-10000px\";\r\n            document.body.appendChild(input);\r\n            input.focus();\r\n            input.blur();\r\n            document.body.removeChild(input);\r\n        }\r\n    }\r\n}\r\n/**\r\n * Focuses element.\r\n *\r\n * @ignore\r\n */\r\nexport function focus(el) {\r\n    if (el) {\r\n        el.focus();\r\n    }\r\n}\r\n/**\r\n * @ignore\r\n */\r\nexport function getRendererEvent(key) {\r\n    if (supports(\"pointerevents\")) {\r\n        return key;\r\n    }\r\n    else if (supports(\"touchevents\")) {\r\n        switch (key) {\r\n            case \"pointerover\": return \"touchstart\";\r\n            case \"pointerout\": return \"touchend\";\r\n            case \"pointerleave\": return \"touchend\";\r\n            case \"pointerdown\": return \"touchstart\";\r\n            case \"pointermove\": return \"touchmove\";\r\n            case \"pointerup\": return \"touchend\";\r\n            case \"click\": return \"click\";\r\n            case \"dblclick\": return \"dblclick\";\r\n        }\r\n    }\r\n    else if (supports(\"mouseevents\")) {\r\n        switch (key) {\r\n            case \"pointerover\": return \"mouseover\";\r\n            case \"pointerout\": return \"mouseout\";\r\n            case \"pointerleave\": return \"mouseleave\";\r\n            case \"pointerdown\": return \"mousedown\";\r\n            case \"pointermove\": return \"mousemove\";\r\n            case \"pointerup\": return \"mouseup\";\r\n            case \"click\": return \"click\";\r\n            case \"dblclick\": return \"dblclick\";\r\n        }\r\n    }\r\n    return key;\r\n}\r\n/**\r\n * Determines if pointer event originated from a touch pointer or mouse.\r\n *\r\n * @param ev  Original event\r\n * @return Touch pointer?\r\n */\r\nexport function isTouchEvent(ev) {\r\n    if (typeof Touch !== \"undefined\" && ev instanceof Touch) {\r\n        return true;\r\n    }\r\n    else if (typeof PointerEvent !== \"undefined\" && ev instanceof PointerEvent && ev.pointerType != null) {\r\n        switch (ev.pointerType) {\r\n            case \"touch\":\r\n            case \"pen\":\r\n            case 2:\r\n                return true;\r\n            case \"mouse\":\r\n            case 4:\r\n                return false;\r\n            default:\r\n                return !(ev instanceof MouseEvent);\r\n        }\r\n    }\r\n    else if (ev.type != null) {\r\n        if (ev.type.match(/^mouse/)) {\r\n            return false;\r\n        }\r\n    }\r\n    return true;\r\n}\r\n/**\r\n * Sets style property on DOM element.\r\n *\r\n * @ignore Exclude from docs\r\n */\r\nexport function setStyle(dom, property, value) {\r\n    dom.style[property] = value;\r\n}\r\nexport function getStyle(dom, property) {\r\n    return dom.style[property];\r\n}\r\n/**\r\n * Gets the target of the event, works for shadow DOM too.\r\n */\r\nexport function getEventTarget(event) {\r\n    if (event.composedPath) {\r\n        const path = event.composedPath();\r\n        if (path.length === 0) {\r\n            return null;\r\n        }\r\n        else {\r\n            return path[0];\r\n        }\r\n    }\r\n    else {\r\n        return event.target;\r\n    }\r\n}\r\n/**\r\n * Checks of element `a` contains element `b`.\r\n *\r\n * @param a  Aleged ascendant\r\n * @param b  Aleged descendant\r\n * @return Contains?\r\n */\r\nexport function contains(a, b) {\r\n    let cursor = b;\r\n    while (true) {\r\n        if (a === cursor) {\r\n            return true;\r\n        }\r\n        else if (cursor.parentNode === null) {\r\n            // TODO better ShadowRoot detection\r\n            if (cursor.host == null) {\r\n                return false;\r\n            }\r\n            else {\r\n                cursor = cursor.host;\r\n            }\r\n        }\r\n        else {\r\n            cursor = cursor.parentNode;\r\n        }\r\n    }\r\n}\r\n/**\r\n * Returns `true` if pointer event originated on an element within Root.\r\n *\r\n * @since 5.2.8\r\n * @param  event   Event\r\n * @param  target  Target element\r\n */\r\nexport function isLocalEvent(event, target) {\r\n    return event.target && contains(target.root.dom, event.target);\r\n}\r\n/**\r\n * Disables or enables interactivity of a DOM element.\r\n *\r\n * @param  target       Target element\r\n * @param  interactive  Interactive?\r\n */\r\nexport function setInteractive(target, interactive) {\r\n    if (interactive) {\r\n        target.style.pointerEvents = \"auto\";\r\n    }\r\n    else {\r\n        target.style.pointerEvents = \"none\";\r\n    }\r\n}\r\nexport function getEventKey(event) {\r\n    if (event.key !== undefined) {\r\n        return event.key;\r\n    }\r\n    switch (event.keyCode) {\r\n        case 9: return \"Tab\";\r\n        case 13: return \"Enter\";\r\n        case 16: return \"Shift\";\r\n        case 17: return \"Control\";\r\n        case 27: return \"Escape\";\r\n        case 32: return \" \";\r\n        case 37: return \"ArrowLeft\";\r\n        case 38: return \"ArrowUp\";\r\n        case 39: return \"ArrowRight\";\r\n        case 40: return \"ArrowDown\";\r\n        case 46: return \"Delete\";\r\n    }\r\n    return \"\" + event.keyCode;\r\n}\r\n/**\r\n * Returns the shadow root of the element or null\r\n *\r\n * @param a  Node\r\n * @return Root\r\n */\r\nexport function getShadowRoot(a) {\r\n    let cursor = a;\r\n    while (true) {\r\n        if (cursor.parentNode === null) {\r\n            // TODO better ShadowRoot detection\r\n            if (cursor.host != null) {\r\n                return cursor;\r\n            }\r\n            else {\r\n                return null;\r\n            }\r\n        }\r\n        else {\r\n            cursor = cursor.parentNode;\r\n        }\r\n    }\r\n}\r\n/**\r\n * [rootStylesheet description]\r\n *\r\n * @ignore Exclude from docs\r\n * @todo Description\r\n */\r\nlet rootStylesheet;\r\n/**\r\n * @ignore Exclude from docs\r\n */\r\nfunction createStylesheet(element, text, nonce = \"\") {\r\n    // TODO use createElementNS ?\r\n    const e = document.createElement(\"style\");\r\n    e.type = \"text/css\";\r\n    if (nonce != \"\") {\r\n        e.setAttribute(\"nonce\", nonce);\r\n    }\r\n    e.textContent = text;\r\n    if (element === null) {\r\n        document.head.appendChild(e);\r\n    }\r\n    else {\r\n        element.appendChild(e);\r\n    }\r\n    return e;\r\n}\r\n/**\r\n * [getStylesheet description]\r\n *\r\n * @ignore Exclude from docs\r\n * @todo Description\r\n * @return [description]\r\n */\r\nfunction getStylesheet(element, nonce = \"\") {\r\n    if (element === null) {\r\n        if (rootStylesheet == null) {\r\n            // TODO use createElementNS ?\r\n            const e = document.createElement(\"style\");\r\n            e.type = \"text/css\";\r\n            if (nonce != \"\") {\r\n                e.setAttribute(\"nonce\", nonce);\r\n            }\r\n            document.head.appendChild(e);\r\n            rootStylesheet = e.sheet;\r\n        }\r\n        return rootStylesheet;\r\n    }\r\n    else {\r\n        // TODO use createElementNS ?\r\n        const e = document.createElement(\"style\");\r\n        e.type = \"text/css\";\r\n        if (nonce != \"\") {\r\n            e.setAttribute(\"nonce\", nonce);\r\n        }\r\n        element.appendChild(e);\r\n        return e.sheet;\r\n    }\r\n}\r\n/**\r\n * [makeStylesheet description]\r\n *\r\n * @ignore Exclude from docs\r\n * @todo Description\r\n * @param selector  [description]\r\n * @return [description]\r\n */\r\nfunction appendStylesheet(root, selector) {\r\n    const index = root.cssRules.length;\r\n    root.insertRule(selector + \"{}\", index);\r\n    return root.cssRules[index];\r\n}\r\n/**\r\n * Defines a class for a CSS rule.\r\n *\r\n * Can be used to dynamically add CSS to the document.\r\n */\r\nexport class StyleRule extends DisposerClass {\r\n    /**\r\n     * Constructor.\r\n     *\r\n     * @param selector  CSS selector\r\n     * @param styles    An object of style attribute - value pairs\r\n     */\r\n    constructor(element, selector, styles, nonce = \"\") {\r\n        super();\r\n        Object.defineProperty(this, \"_root\", {\r\n            enumerable: true,\r\n            configurable: true,\r\n            writable: true,\r\n            value: void 0\r\n        });\r\n        /**\r\n         * CSS rule.\r\n         */\r\n        Object.defineProperty(this, \"_rule\", {\r\n            enumerable: true,\r\n            configurable: true,\r\n            writable: true,\r\n            value: void 0\r\n        });\r\n        this._root = getStylesheet(element, nonce);\r\n        try {\r\n            this._rule = appendStylesheet(this._root, selector);\r\n        }\r\n        catch (err) {\r\n            // Create an empty rule on failed selectors\r\n            this._rule = appendStylesheet(this._root, \":not(*)\");\r\n        }\r\n        $object.each(styles, (key, value) => {\r\n            this.setStyle(key, value);\r\n        });\r\n    }\r\n    /**\r\n     * A CSS selector text.\r\n     *\r\n     * E.g.: `.myClass p`\r\n     *\r\n     * @param selector  CSS selector\r\n     */\r\n    set selector(selector) {\r\n        this._rule.selectorText = selector;\r\n    }\r\n    /**\r\n     * @return CSS selector\r\n     */\r\n    get selector() {\r\n        return this._rule.selectorText;\r\n    }\r\n    // TODO test this\r\n    _dispose() {\r\n        // TODO a bit hacky\r\n        const index = $array.indexOf(this._root.cssRules, this._rule);\r\n        if (index === -1) {\r\n            throw new Error(\"Could not dispose StyleRule\");\r\n        }\r\n        else {\r\n            // TODO if it's empty remove it from the DOM ?\r\n            this._root.deleteRule(index);\r\n        }\r\n    }\r\n    /**\r\n     * Sets the same style properties with browser-specific prefixes.\r\n     *\r\n     * @param name   Attribute name\r\n     * @param value  Attribute value\r\n     */\r\n    _setVendorPrefixName(name, value) {\r\n        const style = this._rule.style;\r\n        style.setProperty(\"-webkit-\" + name, value, \"\");\r\n        style.setProperty(\"-moz-\" + name, value, \"\");\r\n        style.setProperty(\"-ms-\" + name, value, \"\");\r\n        style.setProperty(\"-o-\" + name, value, \"\");\r\n        style.setProperty(name, value, \"\");\r\n    }\r\n    /**\r\n     * Sets a value for specific style attribute.\r\n     *\r\n     * @param name   Attribute\r\n     * @param value  Value\r\n     */\r\n    setStyle(name, value) {\r\n        if (name === \"transition\") {\r\n            this._setVendorPrefixName(name, value);\r\n        }\r\n        else {\r\n            this._rule.style.setProperty(name, value, \"\");\r\n        }\r\n    }\r\n}\r\n/**\r\n * Defines a class for an entire CSS style sheet.\r\n *\r\n * Can be used to dynamically add CSS to the document.\r\n */\r\nexport class StyleSheet extends DisposerClass {\r\n    /**\r\n     * Constructor.\r\n     *\r\n     * @param text  CSS stylesheet\r\n     */\r\n    constructor(element, text, nonce = \"\") {\r\n        super();\r\n        Object.defineProperty(this, \"_element\", {\r\n            enumerable: true,\r\n            configurable: true,\r\n            writable: true,\r\n            value: void 0\r\n        });\r\n        this._element = createStylesheet(element, text, nonce);\r\n    }\r\n    _dispose() {\r\n        if (this._element.parentNode) {\r\n            this._element.parentNode.removeChild(this._element);\r\n        }\r\n    }\r\n}\r\n/**\r\n * Adds a class name to an HTML or SVG element.\r\n *\r\n * @ignore Exclude from docs\r\n * @param element    Element\r\n * @param className  Class name to add\r\n */\r\nexport function addClass(element, className) {\r\n    if (!element) {\r\n        return;\r\n    }\r\n    if (element.classList) {\r\n        const classes = className.split(\" \");\r\n        $array.each(classes, (name) => {\r\n            element.classList.add(name);\r\n        });\r\n    }\r\n    else {\r\n        let currentClassName = element.getAttribute(\"class\");\r\n        if (currentClassName) {\r\n            element.setAttribute(\"class\", currentClassName.split(\" \").filter((item) => {\r\n                return item !== className;\r\n            }).join(\" \") + \" \" + className);\r\n        }\r\n        else {\r\n            element.setAttribute(\"class\", className);\r\n        }\r\n    }\r\n}\r\n/**\r\n * Removes a class name from an HTML or SVG element.\r\n *\r\n * @ignore Exclude from docs\r\n * @param element    Element\r\n * @param className  Class name to add\r\n */\r\nexport function removeClass(element, className) {\r\n    if (!element) {\r\n        return;\r\n    }\r\n    if (element.classList) {\r\n        element.classList.remove(className);\r\n    }\r\n    else {\r\n        let currentClassName = element.getAttribute(\"class\");\r\n        if (currentClassName) {\r\n            element.setAttribute(\"class\", currentClassName.split(\" \").filter((item) => {\r\n                return item !== className;\r\n            }).join(\" \"));\r\n        }\r\n    }\r\n}\r\n// /**\r\n//  * Applies a set of styles to an element. Stores the original styles so they\r\n//  * can be restored later.\r\n//  *\r\n//  * @ignore\r\n//  * @param io      Element\r\n//   */\r\n// export function prepElementForDrag(dom: HTMLElement): void {\r\n// \t// @todo: save current values\r\n// \t// Define possible props\r\n// \tlet props = [\r\n// \t\t\"touchAction\", \"webkitTouchAction\", \"MozTouchAction\", \"MSTouchAction\", \"msTouchAction\", \"oTouchAction\",\r\n// \t\t\"userSelect\", \"webkitUserSelect\", \"MozUserSelect\", \"MSUserSelect\", \"msUserSelect\", \"oUserSelect\",\r\n// \t\t\"touchSelect\", \"webkitTouchSelect\", \"MozTouchSelect\", \"MSTouchSelect\", \"msTouchSelect\", \"oTouchSelect\",\r\n// \t\t\"touchCallout\", \"webkitTouchCallout\", \"MozTouchCallout\", \"MSTouchCallout\", \"msTouchCallout\", \"oTouchCallout\",\r\n// \t\t\"contentZooming\", \"webkitContentZooming\", \"MozContentZooming\", \"MSContentZooming\", \"msContentZooming\", \"oContentZooming\",\r\n// \t\t\"userDrag\", \"webkitUserDrag\", \"MozUserDrag\", \"MSUserDrag\", \"msUserDrag\", \"oUserDrag\"\r\n// \t];\r\n// \tfor (let i = 0; i < props.length; i++) {\r\n// \t\tif (props[i] in dom.style) {\r\n// \t\t\tsetStyle(dom, props[i], \"none\");\r\n// \t\t}\r\n// \t}\r\n// \t// Remove iOS-specific selection;\r\n// \tsetStyle(dom, \"tapHighlightColor\", \"rgba(0, 0, 0, 0)\");\r\n// }\r\n// /**\r\n//  * Restores replaced styles\r\n//  *\r\n//  * @ignore\r\n//  * @param  io  Element\r\n//  */\r\n// export function unprepElementForDrag(dom: HTMLElement): void {\r\n// \t// Define possible props\r\n// \tlet props = [\r\n// \t\t\"touchAction\", \"webkitTouchAction\", \"MozTouchAction\", \"MSTouchAction\", \"msTouchAction\", \"oTouchAction\",\r\n// \t\t\"userSelect\", \"webkitUserSelect\", \"MozUserSelect\", \"MSUserSelect\", \"msUserSelect\", \"oUserSelect\",\r\n// \t\t\"touchSelect\", \"webkitTouchSelect\", \"MozTouchSelect\", \"MSTouchSelect\", \"msTouchSelect\", \"oTouchSelect\",\r\n// \t\t\"touchCallout\", \"webkitTouchCallout\", \"MozTouchCallout\", \"MSTouchCallout\", \"msTouchCallout\", \"oTouchCallout\",\r\n// \t\t\"contentZooming\", \"webkitContentZooming\", \"MozContentZooming\", \"MSContentZooming\", \"msContentZooming\", \"oContentZooming\",\r\n// \t\t\"userDrag\", \"webkitUserDrag\", \"MozUserDrag\", \"MSUserDrag\", \"msUserDrag\", \"oUserDrag\"\r\n// \t];\r\n// \tfor (let i = 0; i < props.length; i++) {\r\n// \t\tif (props[i] in dom.style) {\r\n// \t\t\tsetStyle(dom, props[i], \"\");\r\n// \t\t}\r\n// \t}\r\n// \t// Remove iOS-specific selection;\r\n// \tsetStyle(dom, \"tapHighlightColor\", \"\");\r\n// }\r\nexport function iOS() {\r\n    return /apple/i.test(navigator.vendor) && \"ontouchend\" in document;\r\n}\r\nexport function getSafeResolution() {\r\n    return iOS() ? 1 : undefined;\r\n}\r\nexport function relativeToValue(percent, full) {\r\n    if ($type.isNumber(percent)) {\r\n        return percent;\r\n    }\r\n    else if (percent != null && $type.isNumber(percent.value) && $type.isNumber(full)) {\r\n        return full * percent.value;\r\n    }\r\n    else {\r\n        return 0;\r\n    }\r\n}\r\n/**\r\n * Returns number of decimals\r\n *\r\n * @ignore Exclude from docs\r\n * @param number  Input number\r\n * @return Number of decimals\r\n */\r\nexport function decimalPlaces(number) {\r\n    let match = ('' + number).match(/(?:\\.(\\d+))?(?:[eE]([+-]?\\d+))?$/);\r\n    if (!match) {\r\n        return 0;\r\n    }\r\n    return Math.max(0, (match[1] ? match[1].length : 0) - (match[2] ? +match[2] : 0));\r\n}\r\n/**\r\n * ============================================================================\r\n * STRING FORMATTING FUNCTIONS\r\n * ============================================================================\r\n * @hidden\r\n */\r\n/**\r\n * Pads a string with additional characters to certain length.\r\n *\r\n * @param value  A numeric value\r\n * @param len    Result string length in characters\r\n * @param char   A character to use for padding\r\n * @return Padded value as string\r\n */\r\nexport function padString(value, len = 0, char = \"0\") {\r\n    if (typeof value !== \"string\") {\r\n        value = value.toString();\r\n    }\r\n    return len > value.length ? Array(len - value.length + 1).join(char) + value : value;\r\n}\r\nexport function trimLeft(text) {\r\n    return text.replace(/^[\\s]*/, \"\");\r\n}\r\nexport function trimRight(text) {\r\n    return text.replace(/[\\s]*$/, \"\");\r\n}\r\nexport function trim(text) {\r\n    return trimLeft(trimRight(text));\r\n}\r\nexport function truncateTextWithEllipsis(text, maxLength, breakWords = false, ellipsis = \"...\") {\r\n    if (text.length > maxLength) {\r\n        // Find the last non-alphanumeric character before maxLength\r\n        let lastNonAlphanumericIndex = maxLength - 1;\r\n        while (lastNonAlphanumericIndex >= 0 && text.charAt(lastNonAlphanumericIndex).match(/\\w/)) {\r\n            lastNonAlphanumericIndex--;\r\n        }\r\n        if (lastNonAlphanumericIndex >= 0 && breakWords == false) {\r\n            return text.substring(0, lastNonAlphanumericIndex + 1) + '...';\r\n        }\r\n        else {\r\n            // If no non-alphanumeric character found, truncate without breaking words\r\n            return text.substring(0, maxLength) + ellipsis;\r\n        }\r\n    }\r\n    else {\r\n        return text;\r\n    }\r\n}\r\n/**\r\n * Tries to determine format type.\r\n *\r\n * @ignore Exclude from docs\r\n * @param format  Format string\r\n * @return Format type (\"string\" | \"number\" | \"date\" | \"duration\")\r\n */\r\nexport function getFormat(format) {\r\n    // Undefined?\r\n    if (typeof format === \"undefined\") {\r\n        return \"string\";\r\n    }\r\n    // Cleanup and lowercase format\r\n    format = format.toLowerCase().replace(/^\\[[^\\]]*\\]/, \"\");\r\n    // Remove style tags\r\n    format = format.replace(/\\[[^\\]]+\\]/, \"\");\r\n    // Trim\r\n    format = format.trim();\r\n    // Check for any explicit format hints (i.e. /Date)\r\n    let hints = format.match(/\\/(date|number|duration)$/);\r\n    if (hints) {\r\n        return hints[1];\r\n    }\r\n    // Check for explicit hints\r\n    if (format === \"number\") {\r\n        return \"number\";\r\n    }\r\n    if (format === \"date\") {\r\n        return \"date\";\r\n    }\r\n    if (format === \"duration\") {\r\n        return \"duration\";\r\n    }\r\n    // Detect number formatting symbols\r\n    if (format.match(/[#0]/)) {\r\n        return \"number\";\r\n    }\r\n    // Detect date formatting symbols\r\n    if (format.match(/[ymwdhnsqaxkzgtei]/)) {\r\n        return \"date\";\r\n    }\r\n    // Nothing? Let's display as string\r\n    return \"string\";\r\n}\r\n/**\r\n * Cleans up format:\r\n * * Strips out formatter hints\r\n *\r\n * @ignore Exclude from docs\r\n * @param format  Format\r\n * @return Cleaned format\r\n */\r\nexport function cleanFormat(format) {\r\n    return format.replace(/\\/(date|number|duration)$/i, \"\");\r\n}\r\n/**\r\n * Strips all tags from the string.\r\n *\r\n * @param text  Source string\r\n * @return String without tags\r\n */\r\nexport function stripTags(text) {\r\n    return text ? text.replace(/<[^>]*>/g, \"\") : text;\r\n}\r\n/**\r\n * Removes new lines and tags from a string.\r\n *\r\n * @param text  String to conver\r\n * @return Converted string\r\n */\r\nexport function plainText(text) {\r\n    return text ? stripTags((\"\" + text).replace(/[\\n\\r]+/g, \". \")) : text;\r\n}\r\n/**\r\n * Escapes string so it can safely be used in a Regex.\r\n *\r\n * @param value  Unsescaped string\r\n * @return Escaped string\r\n */\r\nexport function escapeForRgex(value) {\r\n    return value.replace(/[-[\\]{}()*+?.,\\\\^$|#\\s]/g, '\\\\$&');\r\n}\r\n/**\r\n * Adds space before each uppercase letter.\r\n *\r\n * @param   str Input string\r\n * @return      Output string\r\n */\r\nexport function addSpacing(str) {\r\n    let result = \"\";\r\n    for (let i = 0; i < str.length; i++) {\r\n        const char = str.charAt(i);\r\n        if (char.toUpperCase() == char && i != 0) {\r\n            result += \" \";\r\n        }\r\n        result += char;\r\n    }\r\n    return result;\r\n}\r\n/**\r\n * Splits the string into separate characters. Keeps RTL words non-split.\r\n *\r\n * @param   source  Input\r\n * @return          Split text\r\n */\r\nexport function splitString(source) {\r\n    // Regular expression to identify RTL characters\r\n    const rtlChar = /[\\u0590-\\u05FF\\u0600-\\u06FF\\u0750-\\u077F\\u08A0-\\u08FF\\uFB50-\\uFDFF\\uFE70-\\uFEFF]/;\r\n    // Regular expression to capture segments ending with specific Arabic characters\r\n    const splitPattern = /([^اأدذرزو]*[اأدذرزو])/gi;\r\n    // Split input string into array of words or characters, including whitespace\r\n    let segments = source.split(/(\\s+)/); // Split by whitespace, capturing it\r\n    let result = [];\r\n    segments.forEach(segment => {\r\n        if (segment.match(/^\\s+$/)) {\r\n            // If the segment is purely whitespace\r\n            if (segment = \" \") {\r\n                segment = \"  \";\r\n            }\r\n            result.push(segment);\r\n        }\r\n        else if (rtlChar.test(segment)) {\r\n            // If the segment contains RTL characters, handle special splits\r\n            let parts = segment.split(splitPattern).filter(part => part !== '');\r\n            // Concatenate parts processed by the split pattern directly to result\r\n            result = result.concat(parts);\r\n        }\r\n        else {\r\n            // Treat this segment as LTR: split into characters\r\n            result = result.concat([...segment]);\r\n        }\r\n    });\r\n    return result;\r\n}\r\n/**\r\n * ============================================================================\r\n * DATE-RELATED FUNCTIONS\r\n * ============================================================================\r\n * @hidden\r\n */\r\n/**\r\n * Returns a year day.\r\n *\r\n * @param date  Date\r\n * @param utc   Assume UTC dates?\r\n * @return Year day\r\n * @todo Account for UTC\r\n */\r\nexport function getYearDay(date, utc = false) {\r\n    // TODO: utc needed?\r\n    utc;\r\n    const start = new Date(date.getFullYear(), 0, 0);\r\n    const diff = (date.getTime() - start.getTime()) + ((start.getTimezoneOffset() - date.getTimezoneOffset()) * 60 * 1000);\r\n    const oneDay = 1000 * 60 * 60 * 24;\r\n    return Math.floor(diff / oneDay);\r\n}\r\n/**\r\n * Returns week number for a given date.\r\n *\r\n * @param date  Date\r\n * @param utc   Assume UTC dates?\r\n * @return Week number\r\n * @todo Account for UTC\r\n */\r\nexport function getWeek(date, _utc = false) {\r\n    const d = new Date(Date.UTC(date.getFullYear(), date.getMonth(), date.getDate()));\r\n    const day = d.getUTCDay() || 7;\r\n    d.setUTCDate(d.getUTCDate() + 4 - day);\r\n    const firstDay = new Date(Date.UTC(d.getUTCFullYear(), 0, 1));\r\n    return Math.ceil((((d.getTime() - firstDay.getTime()) / 86400000) + 1) / 7);\r\n}\r\n/**\r\n * Returns a \"week year\" of the given date.\r\n *\r\n * @param date  Date\r\n * @param utc   Assume UTC dates?\r\n * @return Year of week\r\n * @since 5.3.0\r\n * @todo Account for UTC\r\n */\r\nexport function getWeekYear(date, _utc = false) {\r\n    const d = new Date(Date.UTC(date.getFullYear(), date.getMonth(), date.getDate()));\r\n    const day = d.getUTCDay() || 7;\r\n    d.setUTCDate(d.getUTCDate() + 4 - day);\r\n    const firstDay = new Date(Date.UTC(d.getUTCFullYear(), 0, 1));\r\n    return firstDay.getFullYear();\r\n}\r\n/**\r\n * Returns a week number in the month.\r\n *\r\n * @param date  Source Date\r\n * @param utc   Assume UTC dates?\r\n * @return Week number in month\r\n */\r\nexport function getMonthWeek(date, utc = false) {\r\n    const firstWeek = getWeek(new Date(date.getFullYear(), date.getMonth(), 1), utc);\r\n    let currentWeek = getWeek(date, utc);\r\n    if (currentWeek == 1) {\r\n        currentWeek = 53;\r\n    }\r\n    return currentWeek - firstWeek + 1;\r\n}\r\n/**\r\n * Returns a year day out of the given week number.\r\n *\r\n * @param week     Week\r\n * @param year     Year\r\n * @param weekday  Weekday\r\n * @param utc      Assume UTC dates\r\n * @return Day in a year\r\n */\r\nexport function getDayFromWeek(week, year, weekday = 1, utc = false) {\r\n    let date = new Date(year, 0, 4, 0, 0, 0, 0);\r\n    if (utc) {\r\n        date.setUTCFullYear(year);\r\n    }\r\n    let day = week * 7 + weekday - ((date.getDay() || 7) + 3);\r\n    return day;\r\n}\r\n/**\r\n * Returns 12-hour representation out of the 24-hour hours.\r\n *\r\n * @param hours  24-hour number\r\n * @return 12-hour number\r\n */\r\nexport function get12Hours(hours, base) {\r\n    if (hours > 12) {\r\n        hours -= 12;\r\n    }\r\n    else if (hours === 0) {\r\n        hours = 12;\r\n    }\r\n    return base != null ? hours + (base - 1) : hours;\r\n}\r\n/**\r\n * Returns a string name of the time zone.\r\n *\r\n * @param date     Date object\r\n * @param long     Should return long (\"Pacific Standard Time\") or short abbreviation (\"PST\")\r\n * @param savings  Include information if it's in daylight savings mode\r\n * @param utc      Assume UTC dates\r\n * @return Time zone name\r\n */\r\nexport function getTimeZone(date, long = false, savings = false, utc = false, timezone) {\r\n    if (utc) {\r\n        return long ? \"Coordinated Universal Time\" : \"UTC\";\r\n    }\r\n    else if (timezone) {\r\n        const d1 = date.toLocaleString(\"en-US\", { timeZone: timezone });\r\n        const d2 = date.toLocaleString(\"en-US\", { timeZone: timezone, timeZoneName: long ? \"long\" : \"short\" });\r\n        return trim(d2.substr(d1.length));\r\n    }\r\n    let wotz = date.toLocaleString(\"UTC\");\r\n    let wtz = date.toLocaleString(\"UTC\", { timeZoneName: long ? \"long\" : \"short\" }).substr(wotz.length);\r\n    //wtz = wtz.replace(/[+-]+[0-9]+$/, \"\");\r\n    if (savings === false) {\r\n        wtz = wtz.replace(/ (standard|daylight|summer|winter) /i, \" \");\r\n    }\r\n    return trim(wtz);\r\n}\r\nexport function getTimezoneOffset(timezone) {\r\n    const date = new Date(Date.UTC(2012, 0, 1, 0, 0, 0, 0));\r\n    const utcDate = new Date(date.toLocaleString(\"en-US\", { timeZone: \"UTC\" }));\r\n    const tzDate = new Date(date.toLocaleString(\"en-US\", { timeZone: timezone }));\r\n    return (tzDate.getTime() - utcDate.getTime()) / 6e4 * -1;\r\n}\r\nexport function capitalizeFirst(text) {\r\n    return text.charAt(0).toUpperCase() + text.slice(1);\r\n}\r\n/**\r\n * The functions below are taken and adapted from Garry Tan's blog post:\r\n * http://axonflux.com/handy-rgb-to-hsl-and-rgb-to-hsv-color-model-c\r\n *\r\n * The further attributions go mjijackson.com, which now seems to be defunct.\r\n */\r\n/**\r\n * Converts an HSL color value to RGB. Conversion formula\r\n * adapted from http://en.wikipedia.org/wiki/HSL_color_space.\r\n * Assumes h, s, and l are contained in the set [0, 1] and\r\n * returns r, g, and b in the set [0, 255].\r\n *\r\n * Function adapted from:\r\n * http://axonflux.com/handy-rgb-to-hsl-and-rgb-to-hsv-color-model-c\r\n *\r\n * @param h       The hue\r\n * @param s       The saturation\r\n * @param l       The lightness\r\n * @return The RGB representation\r\n */\r\nexport function hslToRgb(color) {\r\n    let r, g, b;\r\n    let h = color.h;\r\n    let s = color.s;\r\n    let l = color.l;\r\n    if (s == 0) {\r\n        r = g = b = l; // achromatic\r\n    }\r\n    else {\r\n        let hue2rgb = function hue2rgb(p, q, t) {\r\n            if (t < 0) {\r\n                t += 1;\r\n            }\r\n            if (t > 1) {\r\n                t -= 1;\r\n            }\r\n            if (t < 1 / 6) {\r\n                return p + (q - p) * 6 * t;\r\n            }\r\n            if (t < 1 / 2) {\r\n                return q;\r\n            }\r\n            if (t < 2 / 3) {\r\n                return p + (q - p) * (2 / 3 - t) * 6;\r\n            }\r\n            return p;\r\n        };\r\n        let q = l < 0.5 ? l * (1 + s) : l + s - l * s;\r\n        let p = 2 * l - q;\r\n        r = hue2rgb(p, q, h + 1 / 3);\r\n        g = hue2rgb(p, q, h);\r\n        b = hue2rgb(p, q, h - 1 / 3);\r\n    }\r\n    return {\r\n        r: Math.round(r * 255),\r\n        g: Math.round(g * 255),\r\n        b: Math.round(b * 255)\r\n    };\r\n}\r\n/**\r\n * Converts an RGB color value to HSL. Conversion formula\r\n * adapted from http://en.wikipedia.org/wiki/HSL_color_space.\r\n * Assumes r, g, and b are contained in the set [0, 255] and\r\n * returns h, s, and l in the set [0, 1].\r\n *\r\n * Function adapted from:\r\n * http://axonflux.com/handy-rgb-to-hsl-and-rgb-to-hsv-color-model-c\r\n *\r\n * @param r       The red color value\r\n * @param g       The green color value\r\n * @param b       The blue color value\r\n * @return The HSL representation\r\n */\r\nexport function rgbToHsl(color) {\r\n    let r = color.r / 255;\r\n    let g = color.g / 255;\r\n    let b = color.b / 255;\r\n    let max = Math.max(r, g, b);\r\n    let min = Math.min(r, g, b);\r\n    let h = 0;\r\n    let s = 0;\r\n    let l = (max + min) / 2;\r\n    if (max === min) {\r\n        h = s = 0; // achromatic\r\n    }\r\n    else {\r\n        let d = max - min;\r\n        s = l > 0.5 ? d / (2 - max - min) : d / (max + min);\r\n        switch (max) {\r\n            case r:\r\n                h = (g - b) / d + (g < b ? 6 : 0);\r\n                break;\r\n            case g:\r\n                h = (b - r) / d + 2;\r\n                break;\r\n            case b:\r\n                h = (r - g) / d + 4;\r\n                break;\r\n        }\r\n        h /= 6;\r\n    }\r\n    return {\r\n        h: h,\r\n        s: s,\r\n        l: l,\r\n    };\r\n}\r\n/**\r\n * Converts HSV to HSL.\r\n *\r\n * https://en.wikipedia.org/wiki/HSL_and_HSV#HSV_to_HSL\r\n */\r\nexport function hsvToHsl(hsv) {\r\n    const l = hsv.v * (1 - (hsv.s / 2));\r\n    const s = (l === 0 || l === 1\r\n        ? 0\r\n        : (hsv.v - l) / Math.min(l, 1 - l));\r\n    return {\r\n        h: hsv.h,\r\n        s,\r\n        l,\r\n        a: hsv.a,\r\n    };\r\n}\r\n/**\r\n * Converts HSL to HSV.\r\n *\r\n * https://en.wikipedia.org/wiki/HSL_and_HSV#HSL_to_HSV\r\n */\r\nexport function hslToHsv(hsl) {\r\n    const v = hsl.l + (hsl.s * Math.min(hsl.l, 1 - hsl.l));\r\n    const s = (v === 0\r\n        ? 0\r\n        : 2 * (1 - (hsl.l / v)));\r\n    return {\r\n        h: hsl.h,\r\n        s,\r\n        v,\r\n        a: hsl.a,\r\n    };\r\n}\r\n/**\r\n * Returns a color that is `percent` brighter than the reference color.\r\n *\r\n * @param color    Reference color\r\n * @param percent  Brightness percent\r\n * @return Hex code of the new color\r\n */\r\nexport function lighten(rgb, percent) {\r\n    if (rgb) {\r\n        return {\r\n            r: Math.max(0, Math.min(255, rgb.r + getLightnessStep(rgb.r, percent))),\r\n            g: Math.max(0, Math.min(255, rgb.g + getLightnessStep(rgb.g, percent))),\r\n            b: Math.max(0, Math.min(255, rgb.b + getLightnessStep(rgb.b, percent))),\r\n            a: rgb.a\r\n        };\r\n    }\r\n    else {\r\n        // TODO is this correct ?\r\n        return rgb;\r\n    }\r\n}\r\n;\r\n/**\r\n * Gets lightness step.\r\n *\r\n * @param value    Value\r\n * @param percent  Percent\r\n * @return Step\r\n */\r\nexport function getLightnessStep(value, percent) {\r\n    let base = percent > 0 ? 255 - value : value;\r\n    return Math.round(base * percent);\r\n}\r\n/**\r\n * Returns a color that is `percent` brighter than the source `color`.\r\n *\r\n * @param color    Source color\r\n * @param percent  Brightness percent\r\n * @return New color\r\n */\r\nexport function brighten(rgb, percent) {\r\n    if (rgb) {\r\n        let base = Math.min(Math.max(rgb.r, rgb.g, rgb.b), 230);\r\n        //let base = Math.max(rgb.r, rgb.g, rgb.b);\r\n        let step = getLightnessStep(base, percent);\r\n        return {\r\n            r: Math.max(0, Math.min(255, Math.round(rgb.r + step))),\r\n            g: Math.max(0, Math.min(255, Math.round(rgb.g + step))),\r\n            b: Math.max(0, Math.min(255, Math.round(rgb.b + step))),\r\n            a: rgb.a\r\n        };\r\n    }\r\n    else {\r\n        // TODO is this correct ?\r\n        return rgb;\r\n    }\r\n}\r\n;\r\n/**\r\n * Returns brightness step.\r\n *\r\n * @ignore Exclude from docs\r\n * @param value    Value\r\n * @param percent  Percent\r\n * @return Step\r\n */\r\nexport function getBrightnessStep(_value, percent) {\r\n    let base = 255; //percent > 0 ? 255 - value : value;\r\n    return Math.round(base * percent);\r\n}\r\n/**\r\n * Returns `true` if color is \"light\". Useful indetermining which contrasting\r\n * color to use for elements over this color. E.g.: you would want to use\r\n * black text over light background, and vice versa.\r\n *\r\n * @param color  Source color\r\n * @return Light?\r\n */\r\nexport function isLight(color) {\r\n    return ((color.r * 299) + (color.g * 587) + (color.b * 114)) / 1000 >= 128;\r\n}\r\n/**\r\n * Returns a new [[iRGB]] object based on `rgb` parameter with specific\r\n * saturation applied.\r\n *\r\n * `saturation` can be in the range of 0 (fully desaturated) to 1 (fully\r\n * saturated).\r\n *\r\n * @param color       Base color\r\n * @param saturation  Saturation (0-1)\r\n * @return New color\r\n */\r\nexport function saturate(rgb, saturation) {\r\n    if (rgb === undefined || saturation == 1) {\r\n        return rgb;\r\n    }\r\n    let hsl = rgbToHsl(rgb);\r\n    hsl.s = saturation;\r\n    return hslToRgb(hsl);\r\n}\r\n/**\r\n * Returns a color which contrasts more with the source `color`.\r\n *\r\n * @param  color             Base color\r\n * @param  lightAlternative  Light option\r\n * @param  darkAlternative   Dark option\r\n * @return New color\r\n */\r\nexport function alternativeColor(color, lightAlternative = { r: 255, g: 255, b: 255 }, darkAlternative = { r: 255, g: 255, b: 255 }) {\r\n    let light = lightAlternative;\r\n    let dark = darkAlternative;\r\n    if (isLight(darkAlternative)) {\r\n        light = darkAlternative;\r\n        dark = lightAlternative;\r\n    }\r\n    return isLight(color) ? dark : light;\r\n}\r\n/**\r\n * @ignore\r\n */\r\nexport function mergeTags(tags1, tags2) {\r\n    if (!tags1) {\r\n        tags1 = [];\r\n    }\r\n    return [...tags1, ...tags2].filter((value, index, self) => {\r\n        return self.indexOf(value) === index;\r\n    });\r\n}\r\n/**\r\n * @ignore\r\n */\r\nexport function sameBounds(a, b) {\r\n    if (!b) {\r\n        return false;\r\n    }\r\n    if (a.left != b.left) {\r\n        return false;\r\n    }\r\n    if (a.right != b.right) {\r\n        return false;\r\n    }\r\n    if (a.top != b.top) {\r\n        return false;\r\n    }\r\n    if (a.bottom != b.bottom) {\r\n        return false;\r\n    }\r\n    return true;\r\n}\r\n//# sourceMappingURL=Utils.js.map","import type { Percent } from \"./Percent\";\nimport type { IPointerEvent } from \"../render/backend/Renderer\";\nimport type { Sprite } from \"../render/Sprite\";\n\nimport * as $type from \"./Type\";\nimport * as $array from \"./Array\";\nimport * as $object from \"./Object\";\nimport type { IBounds } from \"./IBounds\";\n\nimport { Disposer, DisposerClass, IDisposer } from \"./Disposer\";\n\n/**\n * ============================================================================\n * DOM FUNCTIONS\n * ============================================================================\n * @hidden\n */\n\n/**\n * Execute a function when DOM is ready.\n *\n * @since 5.0.2\n * @param  f  Callback\n */\nexport function ready(f: () => void): void {\n\tif (document.readyState !== \"loading\") {\n\t\tf();\n\n\t} else {\n\t\tconst listener = () => {\n\t\t\tif (document.readyState !== \"loading\") {\n\t\t\t\tdocument.removeEventListener(\"readystatechange\", listener);\n\t\t\t\tf();\n\t\t\t}\n\t\t};\n\n\t\tdocument.addEventListener(\"readystatechange\", listener);\n\t}\n}\n\n/**\n * Removes a DOM element.\n * @param  el  Target element\n */\nexport function removeElement(el: HTMLElement): void {\n\tif (el.parentNode) {\n\t\tel.parentNode.removeChild(el);\n\t}\n}\n\n/**\n * Function that adds a disposable event listener directly to a DOM element.\n *\n * @ignore Exclude from docs\n * @param dom       A DOM element to add event to\n * @param type      Event type\n * @param listener  Event listener\n * @returns Disposable event\n */\nexport function addEventListener<E extends Event>(dom: EventTarget, type: string, listener: (event: E) => void, options?: any): IDisposer {\n\t//@todo proper type check for options: EventListenerOptions | boolean (TS for some reason gives error on passive parameter)\n\tdom.addEventListener(type, <EventListener>listener, options || false);\n\n\treturn new Disposer(() => {\n\t\tdom.removeEventListener(type, <EventListener>listener, options || false);\n\t});\n}\n\n/**\n * Function that adds an event listener which is triggered when the browser's zoom changes.\n *\n * @param listener  Event listener\n * @returns Disposable event\n */\nexport function onZoom(listener: () => void): IDisposer {\n\t// TODO use matchMedia instead ?\n\treturn addEventListener(window, \"resize\", (_ev) => {\n\t\tlistener();\n\t});\n}\n\n/**\n * @ignore\n */\nexport function supports(cap: \"touchevents\" | \"pointerevents\" | \"mouseevents\" | \"wheelevents\" | \"keyboardevents\"): boolean {\n\tswitch (cap) {\n\t\tcase \"touchevents\":\n\t\t\t//return \"ontouchstart\" in document.documentElement;\n\t\t\treturn window.hasOwnProperty(\"TouchEvent\");\n\n\t\tcase \"pointerevents\":\n\t\t\treturn window.hasOwnProperty(\"PointerEvent\");\n\n\t\tcase \"mouseevents\":\n\t\t\treturn window.hasOwnProperty(\"MouseEvent\");\n\n\t\tcase \"wheelevents\":\n\t\t\treturn window.hasOwnProperty(\"WheelEvent\");\n\n\t\tcase \"keyboardevents\":\n\t\t\treturn window.hasOwnProperty(\"KeyboardEvent\");\n\t}\n\treturn false;\n}\n\n/**\n * @ignore\n */\nexport function getPointerId(event: IPointerEvent) {\n\tlet id = (<any>event).pointerId || 0;\n\treturn id;\n}\n\n/**\n * Removes focus from any element by shifting focus to body.\n *\n * @ignore\n */\nexport function blur(): void {\n\tif (document.activeElement && document.activeElement != document.body) {\n\t\tif ((<any>document.activeElement).blur) {\n\t\t\t(<any>document.activeElement).blur();\n\t\t}\n\t\telse {\n\t\t\tlet input = document.createElement(\"button\");\n\t\t\tinput.style.position = \"fixed\";\n\t\t\tinput.style.top = \"0px\";\n\t\t\tinput.style.left = \"-10000px\";\n\t\t\tdocument.body.appendChild(input);\n\t\t\tinput.focus();\n\t\t\tinput.blur();\n\t\t\tdocument.body.removeChild(input);\n\t\t}\n\t}\n}\n\n/**\n * Focuses element.\n *\n * @ignore\n */\nexport function focus(el: HTMLElement): void {\n\tif (el) {\n\t\tel.focus();\n\t}\n}\n\n/**\n * @ignore\n */\nexport function getRendererEvent(key: string): string {\n\tif (supports(\"pointerevents\")) {\n\t\treturn key;\n\t}\n\telse if (supports(\"touchevents\")) {\n\t\tswitch (key) {\n\t\t\tcase \"pointerover\": return \"touchstart\";\n\t\t\tcase \"pointerout\": return \"touchend\";\n\t\t\tcase \"pointerleave\": return \"touchend\";\n\t\t\tcase \"pointerdown\": return \"touchstart\";\n\t\t\tcase \"pointermove\": return \"touchmove\";\n\t\t\tcase \"pointerup\": return \"touchend\";\n\t\t\tcase \"click\": return \"click\";\n\t\t\tcase \"dblclick\": return \"dblclick\";\n\n\t\t}\n\t}\n\telse if (supports(\"mouseevents\")) {\n\t\tswitch (key) {\n\t\t\tcase \"pointerover\": return \"mouseover\";\n\t\t\tcase \"pointerout\": return \"mouseout\";\n\t\t\tcase \"pointerleave\": return \"mouseleave\";\n\t\t\tcase \"pointerdown\": return \"mousedown\";\n\t\t\tcase \"pointermove\": return \"mousemove\";\n\t\t\tcase \"pointerup\": return \"mouseup\";\n\t\t\tcase \"click\": return \"click\";\n\t\t\tcase \"dblclick\": return \"dblclick\";\n\n\t\t}\n\t}\n\treturn key;\n}\n\n/**\n * Determines if pointer event originated from a touch pointer or mouse.\n *\n * @param ev  Original event\n * @return Touch pointer?\n */\nexport function isTouchEvent(ev: MouseEvent | Touch): boolean {\n\tif (typeof Touch !== \"undefined\" && ev instanceof Touch) {\n\t\treturn true;\n\t}\n\telse if (typeof PointerEvent !== \"undefined\" && ev instanceof PointerEvent && (<any>ev).pointerType != null) {\n\t\tswitch ((<any>ev).pointerType) {\n\t\t\tcase \"touch\":\n\t\t\tcase \"pen\":\n\t\t\tcase 2:\n\t\t\t\treturn true;\n\t\t\tcase \"mouse\":\n\t\t\tcase 4:\n\t\t\t\treturn false;\n\t\t\tdefault:\n\t\t\t\treturn !(ev instanceof MouseEvent);\n\t\t}\n\t}\n\telse if ((<any>ev).type != null) {\n\t\tif ((<any>ev).type.match(/^mouse/)) {\n\t\t\treturn false;\n\t\t}\n\t}\n\treturn true;\n}\n\n/**\n * Sets style property on DOM element.\n *\n * @ignore Exclude from docs\n */\nexport function setStyle(dom: HTMLElement, property: string, value: string | undefined): void {\n\t(<any>dom.style)[property] = value;\n}\n\nexport function getStyle(dom: HTMLElement, property: string): string | undefined {\n\treturn (<any>dom.style)[property];\n}\n\n/**\n * Gets the target of the event, works for shadow DOM too.\n */\nexport function getEventTarget(event: Event | Touch): Node | null {\n\tif ((event as any).composedPath) {\n\t\tconst path = (event as Event).composedPath();\n\n\t\tif (path.length === 0) {\n\t\t\treturn null;\n\n\t\t} else {\n\t\t\treturn path[0] as Node;\n\t\t}\n\n\t} else {\n\t\treturn event.target as Node | null;\n\t}\n}\n\n/**\n * Checks of element `a` contains element `b`.\n *\n * @param a  Aleged ascendant\n * @param b  Aleged descendant\n * @return Contains?\n */\nexport function contains(a: Element, b: Element): boolean {\n\tlet cursor: Node = b;\n\n\twhile (true) {\n\t\tif (a === cursor) {\n\t\t\treturn true;\n\n\t\t} else if (cursor.parentNode === null) {\n\t\t\t// TODO better ShadowRoot detection\n\t\t\tif ((<ShadowRoot>cursor).host == null) {\n\t\t\t\treturn false;\n\n\t\t\t} else {\n\t\t\t\tcursor = (<ShadowRoot>cursor).host;\n\t\t\t}\n\n\t\t} else {\n\t\t\tcursor = cursor.parentNode;\n\t\t}\n\t}\n}\n\n/**\n * Returns `true` if pointer event originated on an element within Root.\n *\n * @since 5.2.8\n * @param  event   Event\n * @param  target  Target element\n */\nexport function isLocalEvent(event: IPointerEvent, target: Sprite) {\n\treturn event.target && contains(target.root.dom, <Element>event.target);\n}\n\n/**\n * Disables or enables interactivity of a DOM element.\n *\n * @param  target       Target element\n * @param  interactive  Interactive?\n */\nexport function setInteractive(target: HTMLElement, interactive: boolean): void {\n\tif (interactive) {\n\t\ttarget.style.pointerEvents = \"auto\";\n\t}\n\telse {\n\t\ttarget.style.pointerEvents = \"none\";\n\t}\n}\n\nexport function getEventKey(event: KeyboardEvent): string {\n\tif (event.key !== undefined) {\n\t\treturn event.key;\n\t}\n\tswitch (event.keyCode) {\n\t\tcase 9: return \"Tab\";\n\t\tcase 13: return \"Enter\";\n\t\tcase 16: return \"Shift\";\n\t\tcase 17: return \"Control\";\n\t\tcase 27: return \"Escape\";\n\t\tcase 32: return \" \";\n\t\tcase 37: return \"ArrowLeft\";\n\t\tcase 38: return \"ArrowUp\";\n\t\tcase 39: return \"ArrowRight\";\n\t\tcase 40: return \"ArrowDown\";\n\t\tcase 46: return \"Delete\";\n\t}\n\treturn \"\" + event.keyCode;\n}\n\n/**\n * Returns the shadow root of the element or null\n *\n * @param a  Node\n * @return Root\n */\nexport function getShadowRoot(a: Node): ShadowRoot | null {\n\tlet cursor: Node = a;\n\n\twhile (true) {\n\t\tif (cursor.parentNode === null) {\n\t\t\t// TODO better ShadowRoot detection\n\t\t\tif ((<ShadowRoot>cursor).host != null) {\n\t\t\t\treturn <ShadowRoot>cursor;\n\n\t\t\t} else {\n\t\t\t\treturn null;\n\t\t\t}\n\n\t\t} else {\n\t\t\tcursor = cursor.parentNode;\n\t\t}\n\t}\n}\n\n/**\n * [rootStylesheet description]\n *\n * @ignore Exclude from docs\n * @todo Description\n */\nlet rootStylesheet: $type.Optional<CSSStyleSheet>;\n\n/**\n * @ignore Exclude from docs\n */\nfunction createStylesheet(element: ShadowRoot | null, text: string, nonce: string = \"\"): HTMLStyleElement {\n\t// TODO use createElementNS ?\n\tconst e = document.createElement(\"style\");\n\te.type = \"text/css\";\n\tif (nonce != \"\") {\n\t\te.setAttribute(\"nonce\", nonce)\n\t}\n\te.textContent = text;\n\n\tif (element === null) {\n\t\tdocument.head.appendChild(e);\n\t} else {\n\t\telement.appendChild(e);\n\t}\n\n\treturn e;\n}\n\n/**\n * [getStylesheet description]\n *\n * @ignore Exclude from docs\n * @todo Description\n * @return [description]\n */\nfunction getStylesheet(element: ShadowRoot | null, nonce: string = \"\"): CSSStyleSheet {\n\tif (element === null) {\n\t\tif (rootStylesheet == null) {\n\t\t\t// TODO use createElementNS ?\n\t\t\tconst e = document.createElement(\"style\");\n\t\t\te.type = \"text/css\";\n\t\t\tif (nonce != \"\") {\n\t\t\t\te.setAttribute(\"nonce\", nonce)\n\t\t\t}\n\t\t\tdocument.head.appendChild(e);\n\t\t\trootStylesheet = e.sheet as CSSStyleSheet;\n\t\t}\n\n\t\treturn rootStylesheet;\n\n\t} else {\n\t\t// TODO use createElementNS ?\n\t\tconst e = document.createElement(\"style\");\n\t\te.type = \"text/css\";\n\t\tif (nonce != \"\") {\n\t\t\te.setAttribute(\"nonce\", nonce)\n\t\t}\n\t\telement.appendChild(e);\n\t\treturn e.sheet as CSSStyleSheet;\n\t}\n}\n\n/**\n * [makeStylesheet description]\n *\n * @ignore Exclude from docs\n * @todo Description\n * @param selector  [description]\n * @return [description]\n */\nfunction appendStylesheet(root: CSSStyleSheet, selector: string): CSSStyleRule {\n\tconst index = root.cssRules.length;\n\troot.insertRule(selector + \"{}\", index);\n\n\treturn root.cssRules[index] as CSSStyleRule;\n}\n\n/**\n * Defines a class for a CSS rule.\n *\n * Can be used to dynamically add CSS to the document.\n */\nexport class StyleRule extends DisposerClass {\n\tprivate _root: CSSStyleSheet;\n\n\t/**\n\t * CSS rule.\n\t */\n\tprivate _rule: CSSStyleRule;\n\n\t/**\n\t * A CSS selector text.\n\t *\n\t * E.g.: `.myClass p`\n\t *\n\t * @param selector  CSS selector\n\t */\n\tpublic set selector(selector: string) {\n\t\tthis._rule.selectorText = selector;\n\t}\n\n\t/**\n\t * @return CSS selector\n\t */\n\tpublic get selector(): string {\n\t\treturn this._rule.selectorText;\n\t}\n\n\t/**\n\t * Constructor.\n\t *\n\t * @param selector  CSS selector\n\t * @param styles    An object of style attribute - value pairs\n\t */\n\tconstructor(element: ShadowRoot | null, selector: string, styles: { [name: string]: string }, nonce: string = \"\") {\n\t\tsuper();\n\n\t\tthis._root = getStylesheet(element, nonce);\n\n\t\ttry {\n\t\t\tthis._rule = appendStylesheet(this._root, selector);\n\t\t}\n\t\tcatch (err) {\n\t\t\t// Create an empty rule on failed selectors\n\t\t\tthis._rule = appendStylesheet(this._root, \":not(*)\");\n\t\t}\n\n\t\t$object.each(styles, (key, value) => {\n\t\t\tthis.setStyle(<string>key, value);\n\t\t});\n\t}\n\n\t// TODO test this\n\tprotected _dispose(): void {\n\t\t// TODO a bit hacky\n\t\tconst index = $array.indexOf(this._root.cssRules, this._rule);\n\n\t\tif (index === -1) {\n\t\t\tthrow new Error(\"Could not dispose StyleRule\");\n\n\t\t} else {\n\t\t\t// TODO if it's empty remove it from the DOM ?\n\t\t\tthis._root.deleteRule(index);\n\t\t}\n\t}\n\n\t/**\n\t * Sets the same style properties with browser-specific prefixes.\n\t *\n\t * @param name   Attribute name\n\t * @param value  Attribute value\n\t */\n\tprivate _setVendorPrefixName(name: string, value: string): void {\n\t\tconst style = this._rule.style;\n\t\tstyle.setProperty(\"-webkit-\" + name, value, \"\");\n\t\tstyle.setProperty(\"-moz-\" + name, value, \"\");\n\t\tstyle.setProperty(\"-ms-\" + name, value, \"\");\n\t\tstyle.setProperty(\"-o-\" + name, value, \"\");\n\t\tstyle.setProperty(name, value, \"\");\n\t}\n\n\t/**\n\t * Sets a value for specific style attribute.\n\t *\n\t * @param name   Attribute\n\t * @param value  Value\n\t */\n\tpublic setStyle(name: string, value: string): void {\n\t\tif (name === \"transition\") {\n\t\t\tthis._setVendorPrefixName(name, value);\n\n\t\t} else {\n\t\t\tthis._rule.style.setProperty(name, value, \"\");\n\t\t}\n\t}\n}\n\n/**\n * Defines a class for an entire CSS style sheet.\n *\n * Can be used to dynamically add CSS to the document.\n */\nexport class StyleSheet extends DisposerClass {\n\tprivate _element: HTMLStyleElement;\n\n\t/**\n\t * Constructor.\n\t *\n\t * @param text  CSS stylesheet\n\t */\n\tconstructor(element: ShadowRoot | null, text: string, nonce: string = \"\") {\n\t\tsuper();\n\t\tthis._element = createStylesheet(element, text, nonce);\n\t}\n\n\tprotected _dispose(): void {\n\t\tif (this._element.parentNode) {\n\t\t\tthis._element.parentNode.removeChild(this._element);\n\t\t}\n\t}\n}\n\n\n/**\n * Adds a class name to an HTML or SVG element.\n *\n * @ignore Exclude from docs\n * @param element    Element\n * @param className  Class name to add\n */\nexport function addClass(element: HTMLElement | SVGElement, className: string): void {\n\tif (!element) {\n\t\treturn;\n\t}\n\tif (element.classList) {\n\t\tconst classes = className.split(\" \");\n\t\t$array.each(classes, (name) => {\n\t\t\telement.classList.add(name);\n\t\t});\n\t}\n\telse {\n\t\tlet currentClassName = element.getAttribute(\"class\");\n\t\tif (currentClassName) {\n\t\t\telement.setAttribute(\"class\", currentClassName.split(\" \").filter((item) => {\n\t\t\t\treturn item !== className;\n\t\t\t}).join(\" \") + \" \" + className);\n\t\t}\n\t\telse {\n\t\t\telement.setAttribute(\"class\", className);\n\t\t}\n\t}\n}\n\n/**\n * Removes a class name from an HTML or SVG element.\n *\n * @ignore Exclude from docs\n * @param element    Element\n * @param className  Class name to add\n */\nexport function removeClass(element: HTMLElement, className: string): void {\n\tif (!element) {\n\t\treturn;\n\t}\n\tif (element.classList) {\n\t\telement.classList.remove(className);\n\t}\n\telse {\n\t\tlet currentClassName = element.getAttribute(\"class\");\n\t\tif (currentClassName) {\n\t\t\telement.setAttribute(\"class\", currentClassName.split(\" \").filter((item) => {\n\t\t\t\treturn item !== className;\n\t\t\t}).join(\" \"));\n\t\t}\n\t}\n}\n\n// /**\n//  * Applies a set of styles to an element. Stores the original styles so they\n//  * can be restored later.\n//  *\n//  * @ignore\n//  * @param io      Element\n//   */\n// export function prepElementForDrag(dom: HTMLElement): void {\n\n// \t// @todo: save current values\n\n// \t// Define possible props\n// \tlet props = [\n// \t\t\"touchAction\", \"webkitTouchAction\", \"MozTouchAction\", \"MSTouchAction\", \"msTouchAction\", \"oTouchAction\",\n// \t\t\"userSelect\", \"webkitUserSelect\", \"MozUserSelect\", \"MSUserSelect\", \"msUserSelect\", \"oUserSelect\",\n// \t\t\"touchSelect\", \"webkitTouchSelect\", \"MozTouchSelect\", \"MSTouchSelect\", \"msTouchSelect\", \"oTouchSelect\",\n// \t\t\"touchCallout\", \"webkitTouchCallout\", \"MozTouchCallout\", \"MSTouchCallout\", \"msTouchCallout\", \"oTouchCallout\",\n// \t\t\"contentZooming\", \"webkitContentZooming\", \"MozContentZooming\", \"MSContentZooming\", \"msContentZooming\", \"oContentZooming\",\n// \t\t\"userDrag\", \"webkitUserDrag\", \"MozUserDrag\", \"MSUserDrag\", \"msUserDrag\", \"oUserDrag\"\n// \t];\n// \tfor (let i = 0; i < props.length; i++) {\n// \t\tif (props[i] in dom.style) {\n// \t\t\tsetStyle(dom, props[i], \"none\");\n// \t\t}\n// \t}\n\n// \t// Remove iOS-specific selection;\n// \tsetStyle(dom, \"tapHighlightColor\", \"rgba(0, 0, 0, 0)\");\n\n// }\n\n// /**\n//  * Restores replaced styles\n//  *\n//  * @ignore\n//  * @param  io  Element\n//  */\n// export function unprepElementForDrag(dom: HTMLElement): void {\n\n// \t// Define possible props\n// \tlet props = [\n// \t\t\"touchAction\", \"webkitTouchAction\", \"MozTouchAction\", \"MSTouchAction\", \"msTouchAction\", \"oTouchAction\",\n// \t\t\"userSelect\", \"webkitUserSelect\", \"MozUserSelect\", \"MSUserSelect\", \"msUserSelect\", \"oUserSelect\",\n// \t\t\"touchSelect\", \"webkitTouchSelect\", \"MozTouchSelect\", \"MSTouchSelect\", \"msTouchSelect\", \"oTouchSelect\",\n// \t\t\"touchCallout\", \"webkitTouchCallout\", \"MozTouchCallout\", \"MSTouchCallout\", \"msTouchCallout\", \"oTouchCallout\",\n// \t\t\"contentZooming\", \"webkitContentZooming\", \"MozContentZooming\", \"MSContentZooming\", \"msContentZooming\", \"oContentZooming\",\n// \t\t\"userDrag\", \"webkitUserDrag\", \"MozUserDrag\", \"MSUserDrag\", \"msUserDrag\", \"oUserDrag\"\n// \t];\n// \tfor (let i = 0; i < props.length; i++) {\n// \t\tif (props[i] in dom.style) {\n// \t\t\tsetStyle(dom, props[i], \"\");\n// \t\t}\n// \t}\n\n// \t// Remove iOS-specific selection;\n// \tsetStyle(dom, \"tapHighlightColor\", \"\");\n\n// }\n\nexport function iOS(): boolean {\n\treturn /apple/i.test(navigator.vendor) && \"ontouchend\" in document;\n}\n\nexport function getSafeResolution(): number | undefined {\n\treturn iOS() ? 1 : undefined;\n}\n\nexport function relativeToValue(percent: number | Percent | undefined | null, full: number): number {\n\tif ($type.isNumber(percent)) {\n\t\treturn percent;\n\t} else if (percent != null && $type.isNumber(percent.value) && $type.isNumber(full)) {\n\t\treturn full * percent.value;\n\n\t} else {\n\t\treturn 0;\n\t}\n}\n\n\n\n/**\n * Returns number of decimals\n *\n * @ignore Exclude from docs\n * @param number  Input number\n * @return Number of decimals\n */\nexport function decimalPlaces(number: number): number {\n\tlet match = ('' + number).match(/(?:\\.(\\d+))?(?:[eE]([+-]?\\d+))?$/);\n\tif (!match) { return 0; }\n\treturn Math.max(0, (match[1] ? match[1].length : 0) - (match[2] ? +match[2] : 0));\n}\n\n\n/**\n * ============================================================================\n * STRING FORMATTING FUNCTIONS\n * ============================================================================\n * @hidden\n */\n\n/**\n * Pads a string with additional characters to certain length.\n *\n * @param value  A numeric value\n * @param len    Result string length in characters\n * @param char   A character to use for padding\n * @return Padded value as string\n */\nexport function padString(value: any, len: number = 0, char: string = \"0\"): string {\n\tif (typeof value !== \"string\") {\n\t\tvalue = value.toString();\n\t}\n\n\treturn len > value.length ? Array(len - value.length + 1).join(char) + value : value;\n}\n\nexport function trimLeft(text: string): string {\n\treturn text.replace(/^[\\s]*/, \"\");\n}\n\nexport function trimRight(text: string): string {\n\treturn text.replace(/[\\s]*$/, \"\");\n}\n\nexport function trim(text: string): string {\n\treturn trimLeft(trimRight(text));\n}\n\nexport function truncateTextWithEllipsis(text: string, maxLength: number, breakWords: boolean = false, ellipsis: string = \"...\") {\n\tif (text.length > maxLength) {\n\t\t// Find the last non-alphanumeric character before maxLength\n\t\tlet lastNonAlphanumericIndex = maxLength - 1;\n\t\twhile (lastNonAlphanumericIndex >= 0 && text.charAt(lastNonAlphanumericIndex).match(/\\w/)) {\n\t\t\tlastNonAlphanumericIndex--;\n\t\t}\n\n\t\tif (lastNonAlphanumericIndex >= 0 && breakWords == false) {\n\t\t\treturn text.substring(0, lastNonAlphanumericIndex + 1) + '...';\n\t\t} else {\n\t\t\t// If no non-alphanumeric character found, truncate without breaking words\n\t\t\treturn text.substring(0, maxLength) + ellipsis;\n\t\t}\n\t} else {\n\t\treturn text;\n\t}\n}\n\n/**\n * Tries to determine format type.\n *\n * @ignore Exclude from docs\n * @param format  Format string\n * @return Format type (\"string\" | \"number\" | \"date\" | \"duration\")\n */\nexport function getFormat(format: string): string {\n\n\t// Undefined?\n\tif (typeof format === \"undefined\") {\n\t\treturn \"string\";\n\t}\n\n\t// Cleanup and lowercase format\n\tformat = format.toLowerCase().replace(/^\\[[^\\]]*\\]/, \"\");\n\n\t// Remove style tags\n\tformat = format.replace(/\\[[^\\]]+\\]/, \"\");\n\n\t// Trim\n\tformat = format.trim();\n\n\t// Check for any explicit format hints (i.e. /Date)\n\tlet hints: RegExpMatchArray | null = format.match(/\\/(date|number|duration)$/);\n\n\tif (hints) {\n\t\treturn hints[1];\n\t}\n\n\t// Check for explicit hints\n\tif (format === \"number\") {\n\t\treturn \"number\";\n\t}\n\n\tif (format === \"date\") {\n\t\treturn \"date\";\n\t}\n\n\tif (format === \"duration\") {\n\t\treturn \"duration\";\n\t}\n\n\t// Detect number formatting symbols\n\tif (format.match(/[#0]/)) {\n\t\treturn \"number\";\n\t}\n\n\t// Detect date formatting symbols\n\tif (format.match(/[ymwdhnsqaxkzgtei]/)) {\n\t\treturn \"date\";\n\t}\n\n\t// Nothing? Let's display as string\n\treturn \"string\";\n}\n\n/**\n * Cleans up format:\n * * Strips out formatter hints\n *\n * @ignore Exclude from docs\n * @param format  Format\n * @return Cleaned format\n */\nexport function cleanFormat(format: string): string {\n\treturn format.replace(/\\/(date|number|duration)$/i, \"\");\n}\n\n/**\n * Strips all tags from the string.\n *\n * @param text  Source string\n * @return String without tags\n */\nexport function stripTags(text: string): string {\n\treturn text ? text.replace(/<[^>]*>/g, \"\") : text;\n}\n\n/**\n * Removes new lines and tags from a string.\n *\n * @param text  String to conver\n * @return Converted string\n */\nexport function plainText(text: string): string {\n\treturn text ? stripTags((\"\" + text).replace(/[\\n\\r]+/g, \". \")) : text;\n}\n\n/**\n * Escapes string so it can safely be used in a Regex.\n *\n * @param value  Unsescaped string\n * @return Escaped string\n */\nexport function escapeForRgex(value: string): string {\n\treturn value.replace(/[-[\\]{}()*+?.,\\\\^$|#\\s]/g, '\\\\$&');\n}\n\n/**\n * Adds space before each uppercase letter.\n *\n * @param   str Input string\n * @return      Output string\n */\nexport function addSpacing(str: string): string {\n\tlet result = \"\";\n\tfor (let i = 0; i < str.length; i++) {\n\t\tconst char = str.charAt(i);\n\t\tif (char.toUpperCase() == char && i != 0) {\n\t\t\tresult += \" \";\n\t\t}\n\t\tresult += char;\n\t}\n\treturn result;\n}\n\n/**\n * Splits the string into separate characters. Keeps RTL words non-split.\n *\n * @param   source  Input\n * @return          Split text\n */\nexport function splitString(source: string): string[] {\n\t// Regular expression to identify RTL characters\n\tconst rtlChar = /[\\u0590-\\u05FF\\u0600-\\u06FF\\u0750-\\u077F\\u08A0-\\u08FF\\uFB50-\\uFDFF\\uFE70-\\uFEFF]/;\n\n\t// Regular expression to capture segments ending with specific Arabic characters\n\tconst splitPattern = /([^اأدذرزو]*[اأدذرزو])/gi;\n\n\t// Split input string into array of words or characters, including whitespace\n\tlet segments = source.split(/(\\s+)/); // Split by whitespace, capturing it\n\n\tlet result: string[] = [];\n\tsegments.forEach(segment => {\n\t\tif (segment.match(/^\\s+$/)) {\n\t\t\t// If the segment is purely whitespace\n\t\t\tif (segment = \" \") {\n\t\t\t\tsegment = \"  \";\n\t\t\t}\n\t\t\tresult.push(segment);\n\t\t} else if (rtlChar.test(segment)) {\n\t\t\t// If the segment contains RTL characters, handle special splits\n\t\t\tlet parts = segment.split(splitPattern).filter(part => part !== '');\n\t\t\t// Concatenate parts processed by the split pattern directly to result\n\t\t\tresult = result.concat(parts);\n\t\t} else {\n\t\t\t// Treat this segment as LTR: split into characters\n\t\t\tresult = result.concat([...segment]);\n\t\t}\n\t});\n\n\treturn result;\n}\n\n/**\n * ============================================================================\n * DATE-RELATED FUNCTIONS\n * ============================================================================\n * @hidden\n */\n\n/**\n * Returns a year day.\n *\n * @param date  Date\n * @param utc   Assume UTC dates?\n * @return Year day\n * @todo Account for UTC\n */\nexport function getYearDay(date: Date, utc: boolean = false): number {\n\t// TODO: utc needed?\n\tutc;\n\tconst start = new Date(date.getFullYear(), 0, 0);\n\tconst diff = (date.getTime() - start.getTime()) + ((start.getTimezoneOffset() - date.getTimezoneOffset()) * 60 * 1000);\n\tconst oneDay = 1000 * 60 * 60 * 24;\n\treturn Math.floor(diff / oneDay);\n}\n\n/**\n * Returns week number for a given date.\n *\n * @param date  Date\n * @param utc   Assume UTC dates?\n * @return Week number\n * @todo Account for UTC\n */\nexport function getWeek(date: Date, _utc: boolean = false): number {\n\tconst d = new Date(Date.UTC(date.getFullYear(), date.getMonth(), date.getDate()));\n\tconst day = d.getUTCDay() || 7;\n\td.setUTCDate(d.getUTCDate() + 4 - day);\n\tconst firstDay = new Date(Date.UTC(d.getUTCFullYear(), 0, 1));\n\treturn Math.ceil((((d.getTime() - firstDay.getTime()) / 86400000) + 1) / 7);\n}\n\n/**\n * Returns a \"week year\" of the given date.\n *\n * @param date  Date\n * @param utc   Assume UTC dates?\n * @return Year of week\n * @since 5.3.0\n * @todo Account for UTC\n */\nexport function getWeekYear(date: Date, _utc: boolean = false): number {\n\tconst d = new Date(Date.UTC(date.getFullYear(), date.getMonth(), date.getDate()));\n\tconst day = d.getUTCDay() || 7;\n\td.setUTCDate(d.getUTCDate() + 4 - day);\n\tconst firstDay = new Date(Date.UTC(d.getUTCFullYear(), 0, 1));\n\treturn firstDay.getFullYear();\n}\n\n/**\n * Returns a week number in the month.\n *\n * @param date  Source Date\n * @param utc   Assume UTC dates?\n * @return Week number in month\n */\nexport function getMonthWeek(date: Date, utc: boolean = false): number {\n\tconst firstWeek = getWeek(new Date(date.getFullYear(), date.getMonth(), 1), utc);\n\tlet currentWeek = getWeek(date, utc);\n\tif (currentWeek == 1) {\n\t\tcurrentWeek = 53;\n\t}\n\treturn currentWeek - firstWeek + 1;\n}\n\n/**\n * Returns a year day out of the given week number.\n *\n * @param week     Week\n * @param year     Year\n * @param weekday  Weekday\n * @param utc      Assume UTC dates\n * @return Day in a year\n */\nexport function getDayFromWeek(week: number, year: number, weekday: number = 1, utc: boolean = false): number {\n\tlet date = new Date(year, 0, 4, 0, 0, 0, 0);\n\tif (utc) {\n\t\tdate.setUTCFullYear(year);\n\t}\n\tlet day = week * 7 + weekday - ((date.getDay() || 7) + 3);\n\treturn day;\n}\n\n/**\n * Returns 12-hour representation out of the 24-hour hours.\n *\n * @param hours  24-hour number\n * @return 12-hour number\n */\nexport function get12Hours(hours: number, base?: number): number {\n\tif (hours > 12) {\n\t\thours -= 12;\n\t}\n\telse if (hours === 0) {\n\t\thours = 12;\n\t}\n\treturn base != null ? hours + (base - 1) : hours;\n}\n\n/**\n * Returns a string name of the time zone.\n *\n * @param date     Date object\n * @param long     Should return long (\"Pacific Standard Time\") or short abbreviation (\"PST\")\n * @param savings  Include information if it's in daylight savings mode\n * @param utc      Assume UTC dates\n * @return Time zone name\n */\nexport function getTimeZone(date: Date, long: boolean = false, savings: boolean = false, utc: boolean = false, timezone?: string): string {\n\tif (utc) {\n\t\treturn long ? \"Coordinated Universal Time\" : \"UTC\";\n\t}\n\telse if (timezone) {\n\t\tconst d1 = date.toLocaleString(\"en-US\", { timeZone: timezone });\n\t\tconst d2 = date.toLocaleString(\"en-US\", { timeZone: timezone, timeZoneName: long ? \"long\" : \"short\" });\n\t\treturn trim(d2.substr(d1.length));\n\t}\n\tlet wotz = date.toLocaleString(\"UTC\");\n\tlet wtz = date.toLocaleString(\"UTC\", { timeZoneName: long ? \"long\" : \"short\" }).substr(wotz.length);\n\t//wtz = wtz.replace(/[+-]+[0-9]+$/, \"\");\n\tif (savings === false) {\n\t\twtz = wtz.replace(/ (standard|daylight|summer|winter) /i, \" \");\n\t}\n\treturn trim(wtz);\n}\n\nexport function getTimezoneOffset(timezone: string): number {\n\tconst date = new Date(Date.UTC(2012, 0, 1, 0, 0, 0, 0));\n\tconst utcDate = new Date(date.toLocaleString(\"en-US\", { timeZone: \"UTC\" }));\n\tconst tzDate = new Date(date.toLocaleString(\"en-US\", { timeZone: timezone }));\n\treturn (tzDate.getTime() - utcDate.getTime()) / 6e4 * -1;\n}\n\n\nexport function capitalizeFirst(text: string): string {\n\treturn text.charAt(0).toUpperCase() + text.slice(1);\n}\n\n\n/**\n * ============================================================================\n * COLOR UTILS\n * ============================================================================\n */\n\n\n/**\n * Represents an interface for an object that represents an RGB color.\n */\nexport interface iRGB {\n\tr: number;\n\tg: number;\n\tb: number;\n\ta?: number;\n}\n\n/**\n * Represents an interface for an object that represents an HSL color.\n */\nexport interface iHSL {\n\th: number;\n\ts: number;\n\tl: number;\n\ta?: number;\n}\n\n/**\n * Represents an interface for an object that represents an HSV color.\n */\nexport interface iHSV {\n\th: number;\n\ts: number;\n\tv: number;\n\ta?: number;\n}\n\n/**\n * The functions below are taken and adapted from Garry Tan's blog post:\n * http://axonflux.com/handy-rgb-to-hsl-and-rgb-to-hsv-color-model-c\n *\n * The further attributions go mjijackson.com, which now seems to be defunct.\n */\n\n\n/**\n * Converts an HSL color value to RGB. Conversion formula\n * adapted from http://en.wikipedia.org/wiki/HSL_color_space.\n * Assumes h, s, and l are contained in the set [0, 1] and\n * returns r, g, and b in the set [0, 255].\n *\n * Function adapted from:\n * http://axonflux.com/handy-rgb-to-hsl-and-rgb-to-hsv-color-model-c\n *\n * @param h       The hue\n * @param s       The saturation\n * @param l       The lightness\n * @return The RGB representation\n */\nexport function hslToRgb(color: iHSL): iRGB {\n\tlet r, g, b;\n\tlet h = color.h;\n\tlet s = color.s;\n\tlet l = color.l;\n\n\tif (s == 0) {\n\t\tr = g = b = l; // achromatic\n\t} else {\n\t\tlet hue2rgb = function hue2rgb(p: number, q: number, t: number) {\n\t\t\tif (t < 0) { t += 1; }\n\t\t\tif (t > 1) { t -= 1; }\n\t\t\tif (t < 1 / 6) { return p + (q - p) * 6 * t; }\n\t\t\tif (t < 1 / 2) { return q; }\n\t\t\tif (t < 2 / 3) { return p + (q - p) * (2 / 3 - t) * 6; }\n\t\t\treturn p;\n\t\t}\n\n\t\tlet q = l < 0.5 ? l * (1 + s) : l + s - l * s;\n\t\tlet p = 2 * l - q;\n\t\tr = hue2rgb(p, q, h + 1 / 3);\n\t\tg = hue2rgb(p, q, h);\n\t\tb = hue2rgb(p, q, h - 1 / 3);\n\t}\n\n\treturn {\n\t\tr: Math.round(r * 255),\n\t\tg: Math.round(g * 255),\n\t\tb: Math.round(b * 255)\n\t};\n}\n\n/**\n * Converts an RGB color value to HSL. Conversion formula\n * adapted from http://en.wikipedia.org/wiki/HSL_color_space.\n * Assumes r, g, and b are contained in the set [0, 255] and\n * returns h, s, and l in the set [0, 1].\n *\n * Function adapted from:\n * http://axonflux.com/handy-rgb-to-hsl-and-rgb-to-hsv-color-model-c\n *\n * @param r       The red color value\n * @param g       The green color value\n * @param b       The blue color value\n * @return The HSL representation\n */\nexport function rgbToHsl(color: iRGB): iHSL {\n\tlet r = color.r / 255;\n\tlet g = color.g / 255;\n\tlet b = color.b / 255;\n\tlet max = Math.max(r, g, b);\n\tlet min = Math.min(r, g, b);\n\tlet h = 0;\n\tlet s = 0;\n\tlet l = (max + min) / 2;\n\n\tif (max === min) {\n\t\th = s = 0; // achromatic\n\n\t} else {\n\t\tlet d = max - min;\n\n\t\ts = l > 0.5 ? d / (2 - max - min) : d / (max + min);\n\n\t\tswitch (max) {\n\t\t\tcase r: h = (g - b) / d + (g < b ? 6 : 0); break;\n\t\t\tcase g: h = (b - r) / d + 2; break;\n\t\t\tcase b: h = (r - g) / d + 4; break;\n\t\t}\n\n\t\th /= 6;\n\t}\n\n\treturn {\n\t\th: h,\n\t\ts: s,\n\t\tl: l,\n\t};\n}\n\n\n/**\n * Converts HSV to HSL.\n *\n * https://en.wikipedia.org/wiki/HSL_and_HSV#HSV_to_HSL\n */\nexport function hsvToHsl(hsv: iHSV): iHSL {\n\tconst l = hsv.v * (1 - (hsv.s / 2));\n\n\tconst s =\n\t\t(l === 0 || l === 1\n\t\t\t? 0\n\t\t\t: (hsv.v - l) / Math.min(l, 1 - l));\n\n\treturn {\n\t\th: hsv.h,\n\t\ts,\n\t\tl,\n\t\ta: hsv.a,\n\t};\n}\n\n\n/**\n * Converts HSL to HSV.\n *\n * https://en.wikipedia.org/wiki/HSL_and_HSV#HSL_to_HSV\n */\nexport function hslToHsv(hsl: iHSL): iHSV {\n\tconst v = hsl.l + (hsl.s * Math.min(hsl.l, 1 - hsl.l));\n\n\tconst s =\n\t\t(v === 0\n\t\t\t? 0\n\t\t\t: 2 * (1 - (hsl.l / v)));\n\n\treturn {\n\t\th: hsl.h,\n\t\ts,\n\t\tv,\n\t\ta: hsl.a,\n\t};\n}\n\n\n/**\n * Returns a color that is `percent` brighter than the reference color.\n *\n * @param color    Reference color\n * @param percent  Brightness percent\n * @return Hex code of the new color\n */\nexport function lighten(rgb: $type.Optional<iRGB>, percent: number): $type.Optional<iRGB> {\n\tif (rgb) {\n\t\treturn {\n\t\t\tr: Math.max(0, Math.min(255, rgb.r + getLightnessStep(rgb.r, percent))),\n\t\t\tg: Math.max(0, Math.min(255, rgb.g + getLightnessStep(rgb.g, percent))),\n\t\t\tb: Math.max(0, Math.min(255, rgb.b + getLightnessStep(rgb.b, percent))),\n\t\t\ta: rgb.a\n\t\t};\n\n\t} else {\n\t\t// TODO is this correct ?\n\t\treturn rgb;\n\t}\n};\n\n/**\n * Gets lightness step.\n *\n * @param value    Value\n * @param percent  Percent\n * @return Step\n */\nexport function getLightnessStep(value: number, percent: number): number {\n\tlet base = percent > 0 ? 255 - value : value;\n\treturn Math.round(base * percent);\n}\n\n/**\n * Returns a color that is `percent` brighter than the source `color`.\n *\n * @param color    Source color\n * @param percent  Brightness percent\n * @return New color\n */\nexport function brighten(rgb: $type.Optional<iRGB>, percent: number): $type.Optional<iRGB> {\n\tif (rgb) {\n\t\tlet base = Math.min(Math.max(rgb.r, rgb.g, rgb.b), 230);\n\t\t//let base = Math.max(rgb.r, rgb.g, rgb.b);\n\t\tlet step = getLightnessStep(base, percent);\n\t\treturn {\n\t\t\tr: Math.max(0, Math.min(255, Math.round(rgb.r + step))),\n\t\t\tg: Math.max(0, Math.min(255, Math.round(rgb.g + step))),\n\t\t\tb: Math.max(0, Math.min(255, Math.round(rgb.b + step))),\n\t\t\ta: rgb.a\n\t\t};\n\n\t} else {\n\t\t// TODO is this correct ?\n\t\treturn rgb;\n\t}\n};\n\n/**\n * Returns brightness step.\n *\n * @ignore Exclude from docs\n * @param value    Value\n * @param percent  Percent\n * @return Step\n */\nexport function getBrightnessStep(_value: number, percent: number): number {\n\tlet base = 255; //percent > 0 ? 255 - value : value;\n\treturn Math.round(base * percent);\n}\n\n/**\n * Returns `true` if color is \"light\". Useful indetermining which contrasting\n * color to use for elements over this color. E.g.: you would want to use\n * black text over light background, and vice versa.\n *\n * @param color  Source color\n * @return Light?\n */\nexport function isLight(color: iRGB): boolean {\n\treturn ((color.r * 299) + (color.g * 587) + (color.b * 114)) / 1000 >= 128;\n}\n\n/**\n * Returns a new [[iRGB]] object based on `rgb` parameter with specific\n * saturation applied.\n *\n * `saturation` can be in the range of 0 (fully desaturated) to 1 (fully\n * saturated).\n *\n * @param color       Base color\n * @param saturation  Saturation (0-1)\n * @return New color\n */\nexport function saturate(rgb: $type.Optional<iRGB>, saturation: number): $type.Optional<iRGB> {\n\tif (rgb === undefined || saturation == 1) {\n\t\treturn rgb;\n\t}\n\n\tlet hsl = rgbToHsl(rgb);\n\thsl.s = saturation;\n\treturn hslToRgb(hsl);\n}\n\n/**\n * Returns a color which contrasts more with the source `color`.\n *\n * @param  color             Base color\n * @param  lightAlternative  Light option\n * @param  darkAlternative   Dark option\n * @return New color\n */\nexport function alternativeColor(color: iRGB, lightAlternative: iRGB = { r: 255, g: 255, b: 255 }, darkAlternative: iRGB = { r: 255, g: 255, b: 255 }): iRGB {\n\tlet light = lightAlternative;\n\tlet dark = darkAlternative;\n\tif (isLight(darkAlternative)) {\n\t\tlight = darkAlternative;\n\t\tdark = lightAlternative;\n\t}\n\treturn isLight(color) ? dark : light;\n}\n\n/**\n * @ignore\n */\nexport function mergeTags(tags1: string[] | undefined, tags2: string[]): string[] {\n\tif (!tags1) {\n\t\ttags1 = [];\n\t}\n\treturn [...tags1, ...tags2].filter((value, index, self) => {\n\t\treturn self.indexOf(value) === index;\n\t});\n}\n\n/**\n * @ignore\n */\nexport function sameBounds(a: IBounds, b?: IBounds): boolean {\n\tif (!b) {\n\t\treturn false;\n\t}\n\tif (a.left != b.left) {\n\t\treturn false\n\t}\n\tif (a.right != b.right) {\n\t\treturn false\n\t}\n\tif (a.top != b.top) {\n\t\treturn false\n\t}\n\tif (a.bottom != b.bottom) {\n\t\treturn false\n\t}\n\treturn true;\n}\n","import * as $array from \"./Array\";\r\nexport function keys(object) {\r\n    return Object.keys(object);\r\n}\r\n/**\r\n * Returns an array of object's property names ordered using specific ordering\r\n * function.\r\n *\r\n * @param object  Source object\r\n * @param order   Ordering function\r\n * @returns Object property names\r\n */\r\nexport function keysOrdered(object, order) {\r\n    return keys(object).sort(order);\r\n}\r\nexport function copy(object) {\r\n    return Object.assign({}, object);\r\n}\r\nexport function each(object, f) {\r\n    keys(object).forEach((key) => {\r\n        f(key, object[key]);\r\n    });\r\n}\r\n/**\r\n * Iterates through all properties of the object calling `fn` for each of them.\r\n *\r\n * If return value of the function evaluates to `false` further iteration is\r\n * cancelled.\r\n *\r\n * @param object  Source object\r\n * @param fn      Callback function\r\n */\r\nexport function eachContinue(object, fn) {\r\n    for (let key in object) {\r\n        if (hasKey(object, key)) {\r\n            if (!fn(key, object[key])) {\r\n                break;\r\n            }\r\n        }\r\n    }\r\n}\r\n/**\r\n * Orders object properties using custom `ord` function and iterates through\r\n * them calling `fn` for each of them.\r\n *\r\n * @param object  Source object\r\n * @param fn      Callback function\r\n * @param order   Ordering function\r\n */\r\nexport function eachOrdered(object, fn, ord) {\r\n    $array.each(keysOrdered(object, ord), (key) => {\r\n        fn(key, object[key]);\r\n    });\r\n}\r\n/**\r\n * Checks if `object` has a specific `key`.\r\n *\r\n * @param object  Source object\r\n * @param key     Property name\r\n * @returns Has key?\r\n */\r\nexport function hasKey(object, key) {\r\n    return {}.hasOwnProperty.call(object, key);\r\n}\r\n/**\r\n * Copies all properties of one object to the other, omitting undefined, but only if property in target object doesn't have a value set.\r\n *\r\n * @param fromObject  Source object\r\n * @param toObject    Target object\r\n * @return Updated target object\r\n * @todo Maybe consolidate with utils.copy?\r\n */\r\nexport function softCopyProperties(source, target) {\r\n    each(source, (key, value) => {\r\n        // only if value is set\r\n        //if ($type.hasValue(value) && !($type.hasValue((<any>target)[key]))) {\r\n        if (value != null && target[key] == null) {\r\n            target[key] = value;\r\n        }\r\n    });\r\n    return target;\r\n}\r\n//# sourceMappingURL=Object.js.map","import * as $array from \"./Array\";\nimport type { Keyof } from \"./Type\";\n\nexport function keys<O>(object: O): Array<Keyof<O>> {\n\treturn Object.keys(object) as Array<Keyof<O>>;\n}\n\n/**\n * Returns an array of object's property names ordered using specific ordering\n * function.\n *\n * @param object  Source object\n * @param order   Ordering function\n * @returns Object property names\n */\nexport function keysOrdered<Object>(object: Object, order: (a: Keyof<Object>, b: Keyof<Object>) => number): Array<Keyof<Object>> {\n\treturn keys(object).sort(order);\n}\n\nexport function copy<O>(object: O): O {\n\treturn Object.assign({}, object);\n}\n\nexport function each<O>(object: O, f: <K extends keyof O>(key: K, value: Exclude<O[K], undefined>) => void): void {\n\tkeys(object).forEach((key) => {\n\t\tf(key, object[key] as any);\n\t});\n}\n\n/**\n * Iterates through all properties of the object calling `fn` for each of them.\n *\n * If return value of the function evaluates to `false` further iteration is\n * cancelled.\n *\n * @param object  Source object\n * @param fn      Callback function\n */\nexport function eachContinue<Object>(object: Object, fn: <Key extends Keyof<Object>>(key: Key, value: Object[Key]) => boolean): void {\n\tfor (let key in object) {\n\t\tif (hasKey(object, key)) {\n\t\t\tif (!fn(key as Keyof<Object>, object[key] as Object[Keyof<Object>])) {\n\t\t\t\tbreak;\n\t\t\t}\n\t\t}\n\t}\n}\n\n/**\n * Orders object properties using custom `ord` function and iterates through\n * them calling `fn` for each of them.\n *\n * @param object  Source object\n * @param fn      Callback function\n * @param order   Ordering function\n */\nexport function eachOrdered<Object>(object: Object, fn: <Key extends Keyof<Object>>(key: Key, value: Object[Key]) => void, ord: (a: Keyof<Object>, b: Keyof<Object>) => number): void {\n\t$array.each(keysOrdered(object, ord), (key) => {\n\t\tfn(key, object[key]);\n\t});\n}\n\n/**\n * Checks if `object` has a specific `key`.\n *\n * @param object  Source object\n * @param key     Property name\n * @returns Has key?\n */\nexport function hasKey<Object, Key extends keyof Object>(object: Object, key: Key): boolean {\n\treturn {}.hasOwnProperty.call(object, key);\n}\n\n/**\n * Copies all properties of one object to the other, omitting undefined, but only if property in target object doesn't have a value set.\n *\n * @param fromObject  Source object\n * @param toObject    Target object\n * @return Updated target object\n * @todo Maybe consolidate with utils.copy?\n */\nexport function softCopyProperties(source: Object, target: Object): Object {\n\teach(source, (key, value) => {\n\t\t// only if value is set\n\t\t//if ($type.hasValue(value) && !($type.hasValue((<any>target)[key]))) {\n\t\tif (value != null && (<any>target)[key] == null) {\n\t\t\t(<any>target)[key] = value;\n\t\t}\n\t});\n\treturn target;\n}\n","import * as $object from \"./Object\";\r\nimport * as $ease from \"./Ease\";\r\n/**\r\n * An object representing a collection of setting values to apply as required.\r\n *\r\n * @see {@link https://www.amcharts.com/docs/v5/concepts/settings/states/} for more info\r\n */\r\nexport class State {\r\n    constructor(entity, settings) {\r\n        Object.defineProperty(this, \"_entity\", {\r\n            enumerable: true,\r\n            configurable: true,\r\n            writable: true,\r\n            value: void 0\r\n        });\r\n        Object.defineProperty(this, \"_settings\", {\r\n            enumerable: true,\r\n            configurable: true,\r\n            writable: true,\r\n            value: void 0\r\n        });\r\n        Object.defineProperty(this, \"_userSettings\", {\r\n            enumerable: true,\r\n            configurable: true,\r\n            writable: true,\r\n            value: {}\r\n        });\r\n        this._entity = entity;\r\n        this._settings = settings;\r\n        $object.each(settings, (key) => {\r\n            this._userSettings[key] = true;\r\n        });\r\n    }\r\n    get(key, fallback) {\r\n        const value = this._settings[key];\r\n        if (value !== undefined) {\r\n            return value;\r\n        }\r\n        else {\r\n            return fallback;\r\n        }\r\n    }\r\n    /**\r\n     * @ignore\r\n     */\r\n    setRaw(key, value) {\r\n        this._settings[key] = value;\r\n    }\r\n    /**\r\n     * Sets a setting `value` for the specified `key` to be set when the state\r\n     * is applied.\r\n     *\r\n     * @param   key       Setting key\r\n     * @param   value     Setting value\r\n     * @return            Setting value\r\n     */\r\n    set(key, value) {\r\n        this._userSettings[key] = true;\r\n        this.setRaw(key, value);\r\n    }\r\n    /**\r\n     * Removes a setting value for the specified `key`.\r\n     *\r\n     * @see {@link https://www.amcharts.com/docs/v5/concepts/settings/} for more info\r\n     * @param   key       Setting key\r\n     */\r\n    remove(key) {\r\n        delete this._userSettings[key];\r\n        delete this._settings[key];\r\n    }\r\n    /**\r\n     * Sets multiple settings at once.\r\n     *\r\n     * `settings` must be an object with key: value pairs.\r\n     *\r\n     * @see {@link https://www.amcharts.com/docs/v5/concepts/settings/} for more info\r\n     * @param settings Settings\r\n     */\r\n    setAll(settings) {\r\n        $object.keys(settings).forEach((key) => {\r\n            this.set(key, settings[key]);\r\n        });\r\n    }\r\n    _eachSetting(f) {\r\n        $object.each(this._settings, f);\r\n    }\r\n    /**\r\n     * Applies the state to the target element.\r\n     *\r\n     * All setting values are set immediately.\r\n     */\r\n    apply() {\r\n        const seen = {};\r\n        seen[\"stateAnimationEasing\"] = true;\r\n        seen[\"stateAnimationDuration\"] = true;\r\n        const defaultState = this._entity.states.lookup(\"default\");\r\n        this._eachSetting((key, value) => {\r\n            if (!seen[key]) {\r\n                seen[key] = true;\r\n                // save values to default state\r\n                if (this !== defaultState) {\r\n                    if (!(key in defaultState._settings)) {\r\n                        defaultState._settings[key] = this._entity.get(key);\r\n                    }\r\n                }\r\n                this._entity.set(key, value);\r\n            }\r\n        });\r\n    }\r\n    /**\r\n     * Applies the state to the target element.\r\n     *\r\n     * Returns an object representing all [[Animation]] objects created for\r\n     * each setting key transition.\r\n     *\r\n     * @return           Animations\r\n     */\r\n    applyAnimate(duration) {\r\n        if (duration == null) {\r\n            duration = this._settings.stateAnimationDuration;\r\n        }\r\n        if (duration == null) {\r\n            duration = this.get(\"stateAnimationDuration\", this._entity.get(\"stateAnimationDuration\", 0));\r\n        }\r\n        let easing = this._settings.stateAnimationEasing;\r\n        if (easing == null) {\r\n            easing = this.get(\"stateAnimationEasing\", this._entity.get(\"stateAnimationEasing\", $ease.cubic));\r\n        }\r\n        const defaultState = this._entity.states.lookup(\"default\");\r\n        const seen = {};\r\n        seen[\"stateAnimationEasing\"] = true;\r\n        seen[\"stateAnimationDuration\"] = true;\r\n        const animations = {};\r\n        this._eachSetting((key, value) => {\r\n            if (!seen[key]) {\r\n                seen[key] = true;\r\n                // save values to default state\r\n                if (this != defaultState) {\r\n                    if (!(key in defaultState._settings)) {\r\n                        defaultState._settings[key] = this._entity.get(key);\r\n                    }\r\n                }\r\n                const animation = this._entity.animate({\r\n                    key: key,\r\n                    to: value,\r\n                    duration: duration,\r\n                    easing: easing\r\n                });\r\n                if (animation) {\r\n                    animations[key] = animation;\r\n                }\r\n            }\r\n        });\r\n        return animations;\r\n    }\r\n}\r\n/**\r\n * Collection of [[State]] objects for an element.\r\n *\r\n * @see {@link https://www.amcharts.com/docs/v5/concepts/settings/states/} for more info\r\n */\r\nexport class States {\r\n    constructor(entity) {\r\n        Object.defineProperty(this, \"_states\", {\r\n            enumerable: true,\r\n            configurable: true,\r\n            writable: true,\r\n            value: {}\r\n        });\r\n        Object.defineProperty(this, \"_entity\", {\r\n            enumerable: true,\r\n            configurable: true,\r\n            writable: true,\r\n            value: void 0\r\n        });\r\n        this._entity = entity;\r\n    }\r\n    /**\r\n     * Checks if a state by `name` exists. Returns it there is one.\r\n     *\r\n     * @param  name  State name\r\n     * @return       State\r\n     */\r\n    lookup(name) {\r\n        return this._states[name];\r\n    }\r\n    /**\r\n     * Sets supplied `settings` on a state by the `name`.\r\n     *\r\n     * If such state does not yet exists, it is created.\r\n     *\r\n     * @param   name      State name\r\n     * @param   settings  Settings\r\n     * @return            New State\r\n     */\r\n    create(name, settings) {\r\n        const state = this._states[name];\r\n        if (state) {\r\n            state.setAll(settings);\r\n            return state;\r\n        }\r\n        else {\r\n            const state = new State(this._entity, settings);\r\n            this._states[name] = state;\r\n            return state;\r\n        }\r\n    }\r\n    /**\r\n     * Removes the state called `name`.\r\n     *\r\n     * @param   name      State name\r\n     */\r\n    remove(name) {\r\n        delete this._states[name];\r\n    }\r\n    /**\r\n     * Applies a named state to the target element.\r\n     *\r\n     * @param  newState  State name\r\n     */\r\n    apply(newState) {\r\n        const state = this._states[newState];\r\n        if (state) {\r\n            state.apply();\r\n        }\r\n        this._entity._applyState(newState);\r\n    }\r\n    /**\r\n     * Applies a named state to the element.\r\n     *\r\n     * Returns an object representing all [[Animation]] objects created for\r\n     * each setting key transition.\r\n     *\r\n     * @param   newState  State name\r\n     * @return            Animations\r\n     */\r\n    applyAnimate(newState, duration) {\r\n        let animations;\r\n        const state = this._states[newState];\r\n        if (state) {\r\n            animations = state.applyAnimate(duration);\r\n        }\r\n        this._entity._applyStateAnimated(newState, duration);\r\n        return animations;\r\n    }\r\n}\r\n//# sourceMappingURL=States.js.map","import type { Entity, Dirty } from \"./Entity\";\nimport type { Animations } from \"./Animation\";\nimport * as $object from \"./Object\";\nimport * as $ease from \"./Ease\";\n\n/**\n * An object representing a collection of setting values to apply as required.\n *\n * @see {@link https://www.amcharts.com/docs/v5/concepts/settings/states/} for more info\n */\nexport class State<E extends Entity> {\n\tprivate _entity: E;\n\tpublic _settings: Partial<E[\"_settings\"]>;\n\tpublic _userSettings: Dirty<E[\"_settings\"]> = {};\n\n\tconstructor(entity: E, settings: Partial<E[\"_settings\"]>) {\n\t\tthis._entity = entity;\n\t\tthis._settings = settings;\n\n\t\t$object.each(settings, (key) => {\n\t\t\tthis._userSettings[key] = true;\n\t\t});\n\t}\n\n\t/**\n\t * Returns settings value for the specified `key`.\n\t *\n\t * If there is no value, `fallback` is returned instead (if set).\n\t *\n\t * @see {@link https://www.amcharts.com/docs/v5/concepts/settings/} for more info\n\t * @param   key       Settings value\n\t * @param   callback  Fallback value\n\t * @return            Value\n\t */\n\tpublic get<Key extends keyof this[\"_settings\"]>(key: Key): this[\"_settings\"][Key];\n\tpublic get<Key extends keyof this[\"_settings\"], F>(key: Key, fallback: F): NonNullable<this[\"_settings\"][Key]> | F;\n\tpublic get<Key extends keyof this[\"_settings\"]>(key: Key, fallback?: any): any {\n\t\tconst value = this._settings[key];\n\n\t\tif (value !== undefined) {\n\t\t\treturn value;\n\n\t\t} else {\n\t\t\treturn fallback;\n\t\t}\n\t}\n\n\t/**\n\t * @ignore\n\t */\n\tpublic setRaw<Key extends keyof E[\"_settings\"]>(key: Key, value: E[\"_settings\"][Key]) {\n\t\tthis._settings[key] = value;\n\t}\n\n\t/**\n\t * Sets a setting `value` for the specified `key` to be set when the state\n\t * is applied.\n\t *\n\t * @param   key       Setting key\n\t * @param   value     Setting value\n\t * @return            Setting value\n\t */\n\tpublic set<Key extends keyof E[\"_settings\"]>(key: Key, value: E[\"_settings\"][Key]) {\n\t\tthis._userSettings[key] = true;\n\t\tthis.setRaw(key, value);\n\t}\n\n\t/**\n\t * Removes a setting value for the specified `key`.\n\t *\n\t * @see {@link https://www.amcharts.com/docs/v5/concepts/settings/} for more info\n\t * @param   key       Setting key\n\t */\n\tpublic remove<Key extends keyof this[\"_settings\"]>(key: Key) {\n\t\tdelete this._userSettings[key];\n\t\tdelete this._settings[key];\n\t}\n\n\t/**\n\t * Sets multiple settings at once.\n\t *\n\t * `settings` must be an object with key: value pairs.\n\t *\n\t * @see {@link https://www.amcharts.com/docs/v5/concepts/settings/} for more info\n\t * @param settings Settings\n\t */\n\tpublic setAll(settings: this[\"_settings\"]) {\n\t\t$object.keys(settings).forEach((key) => {\n\t\t\tthis.set(key, settings[key]);\n\t\t});\n\t}\n\n\tprivate _eachSetting<Key extends keyof E[\"_settings\"], Value extends E[\"_settings\"][Key]>(f: (key: Key, value: Value) => void): void {\n\t\t$object.each(this._settings, f as any);\n\t}\n\n\t/**\n\t * Applies the state to the target element.\n\t *\n\t * All setting values are set immediately.\n\t */\n\tpublic apply() {\n\t\tconst seen: Dirty<E[\"_settings\"]> = {};\n\n\t\tseen[\"stateAnimationEasing\"] = true;\n\t\tseen[\"stateAnimationDuration\"] = true;\n\n\t\tconst defaultState = this._entity.states.lookup(\"default\")!;\n\n\t\tthis._eachSetting((key, value) => {\n\t\t\tif (!seen[key]) {\n\t\t\t\tseen[key] = true;\n\n\t\t\t\t// save values to default state\n\t\t\t\tif (this !== defaultState) {\n\t\t\t\t\tif (!(key in defaultState._settings)) {\n\t\t\t\t\t\tdefaultState._settings[key] = this._entity.get(key);\n\t\t\t\t\t}\n\t\t\t\t}\n\n\t\t\t\tthis._entity.set(key, value);\n\t\t\t}\n\t\t});\n\t}\n\n\n\n\t/**\n\t * Applies the state to the target element.\n\t *\n\t * Returns an object representing all [[Animation]] objects created for\n\t * each setting key transition.\n\t *\n\t * @return           Animations\n\t */\n\tpublic applyAnimate(duration?: number): Animations<E[\"_settings\"]> {\n\n\t\tif (duration == null) {\n\t\t\tduration = this._settings.stateAnimationDuration;\n\t\t}\n\t\tif (duration == null) {\n\t\t\tduration = this.get(\"stateAnimationDuration\", this._entity.get(\"stateAnimationDuration\", 0));\n\t\t}\n\n\t\tlet easing = this._settings.stateAnimationEasing;\n\t\tif (easing == null) {\n\t\t\teasing = this.get(\"stateAnimationEasing\", this._entity.get(\"stateAnimationEasing\", $ease.cubic));\n\t\t}\n\n\t\tconst defaultState = this._entity.states.lookup(\"default\")!;\n\n\t\tconst seen: Dirty<E[\"_settings\"]> = {};\n\n\t\tseen[\"stateAnimationEasing\"] = true;\n\t\tseen[\"stateAnimationDuration\"] = true;\n\n\t\tconst animations: Animations<E[\"_settings\"]> = {};\n\n\t\tthis._eachSetting((key, value) => {\n\t\t\tif (!seen[key]) {\n\t\t\t\tseen[key] = true;\n\n\t\t\t\t// save values to default state\n\t\t\t\tif (this != defaultState) {\n\t\t\t\t\tif (!(key in defaultState._settings)) {\n\t\t\t\t\t\tdefaultState._settings[key] = this._entity.get(key);\n\t\t\t\t\t}\n\t\t\t\t}\n\n\t\t\t\tconst animation = this._entity.animate({\n\t\t\t\t\tkey: key,\n\t\t\t\t\tto: value,\n\t\t\t\t\tduration: duration!,\n\t\t\t\t\teasing: easing\n\t\t\t\t});\n\n\t\t\t\tif (animation) {\n\t\t\t\t\tanimations[key] = animation;\n\t\t\t\t}\n\t\t\t}\n\t\t});\n\n\t\treturn animations;\n\t}\n}\n\n/**\n * Collection of [[State]] objects for an element.\n *\n * @see {@link https://www.amcharts.com/docs/v5/concepts/settings/states/} for more info\n */\nexport class States<E extends Entity> {\n\tprivate _states: { [key: string]: State<E> } = {};\n\tprivate _entity: E;\n\n\tconstructor(entity: E) {\n\t\tthis._entity = entity;\n\t}\n\n\t/**\n\t * Checks if a state by `name` exists. Returns it there is one.\n\t *\n\t * @param  name  State name\n\t * @return       State\n\t */\n\tpublic lookup(name: string): State<E> | undefined {\n\t\treturn this._states[name];\n\t}\n\n\t/**\n\t * Sets supplied `settings` on a state by the `name`.\n\t *\n\t * If such state does not yet exists, it is created.\n\t *\n\t * @param   name      State name\n\t * @param   settings  Settings\n\t * @return            New State\n\t */\n\tpublic create(name: string, settings: Partial<E[\"_settings\"]>): State<E> {\n\t\tconst state = this._states[name];\n\n\t\tif (state) {\n\t\t\tstate.setAll(settings);\n\t\t\treturn state;\n\n\t\t} else {\n\t\t\tconst state = new State(this._entity, settings);\n\t\t\tthis._states[name] = state;\n\t\t\treturn state;\n\t\t}\n\t}\n\n\t/**\n\t * Removes the state called `name`.\n\t *\n\t * @param   name      State name\n\t */\n\tpublic remove(name: string): void {\n\t\tdelete this._states[name];\n\t}\n\n\t/**\n\t * Applies a named state to the target element.\n\t *\n\t * @param  newState  State name\n\t */\n\tpublic apply(newState: string) {\n\t\tconst state = this._states[newState];\n\n\t\tif (state) {\n\t\t\tstate.apply();\n\t\t}\n\n\t\tthis._entity._applyState(newState);\n\t}\n\n\t/**\n\t * Applies a named state to the element.\n\t *\n\t * Returns an object representing all [[Animation]] objects created for\n\t * each setting key transition.\n\t *\n\t * @param   newState  State name\n\t * @return            Animations\n\t */\n\tpublic applyAnimate(newState: string, duration?: number): Animations<E[\"_settings\"]> | undefined {\n\t\tlet animations;\n\t\tconst state = this._states[newState];\n\n\t\tif (state) {\n\t\t\tanimations = state.applyAnimate(duration);\n\t\t}\n\n\t\tthis._entity._applyStateAnimated(newState, duration);\n\t\treturn animations;\n\t}\n}\n","/**\r\n * A collection of easing functions\r\n *\r\n * Parts of this collection are taken from D3.js library (https://d3js.org/)\r\n */\r\n/**\r\n * ============================================================================\r\n * IMPORTS\r\n * ============================================================================\r\n * @hidden\r\n */\r\nimport * as $math from \"./Math\";\r\n/**\r\n * The functions below are from D3.js library (https://d3js.org/)\r\n *\r\n * ----------------------------------------------------------------------------\r\n * Copyright 2017 Mike Bostock\r\n *\r\n * Redistribution and use in source and binary forms, with or without\r\n * modification, are permitted provided that the following conditions are met:\r\n *\r\n * 1. Redistributions of source code must retain the above copyright notice,\r\n *\tthis list of conditions and the following disclaimer.\r\n *\r\n * 2. Redistributions in binary form must reproduce the above copyright notice,\r\n *\tthis list of conditions and the following disclaimer in the documentation\r\n *\tand/or other materials provided with the distribution.\r\n *\r\n * 3. Neither the name of the copyright holder nor the names of its\r\n *\tcontributors may be used to endorse or promote products derived from this\r\n *\tsoftware without specific prior written permission.\r\n *\r\n * THIS SOFTWARE IS PROVIDED BY THE COPYRIGHT HOLDERS AND CONTRIBUTORS \"AS IS\"\r\n * AND ANY EXPRESS OR IMPLIED WARRANTIES, INCLUDING, BUT NOT LIMITED TO, THE\r\n * IMPLIED WARRANTIES OF MERCHANTABILITY AND FITNESS FOR A PARTICULAR PURPOSE\r\n * ARE DISCLAIMED. IN NO EVENT SHALL THE COPYRIGHT HOLDER OR CONTRIBUTORS BE\r\n * LIABLE FOR ANY DIRECT, INDIRECT, INCIDENTAL, SPECIAL, EXEMPLARY, OR\r\n * CONSEQUENTIAL DAMAGES (INCLUDING, BUT NOT LIMITED TO, PROCUREMENT OF\r\n * SUBSTITUTE GOODS OR SERVICES; LOSS OF USE, DATA, OR PROFITS; OR BUSINESS\r\n * INTERRUPTION) HOWEVER CAUSED AND ON ANY THEORY OF LIABILITY, WHETHER IN\r\n * CONTRACT, STRICT LIABILITY, OR TORT (INCLUDING NEGLIGENCE OR OTHERWISE)\r\n * ARISING IN ANY WAY OUT OF THE USE OF THIS SOFTWARE, EVEN IF ADVISED OF THE\r\n * POSSIBILITY OF SUCH DAMAGE.\r\n * ----------------------------------------------------------------------------\r\n * @hidden\r\n */\r\n/**\r\n */\r\nexport function linear(t) {\r\n    return t;\r\n}\r\nexport function quad(t) {\r\n    return t * t;\r\n}\r\nexport function cubic(t) {\r\n    return t * t * t;\r\n}\r\nexport function pow(t, e) {\r\n    return Math.pow(t, e);\r\n}\r\nexport function exp(t) {\r\n    return Math.pow(2, 10 * t - 10);\r\n}\r\nexport function sine(t) {\r\n    return 1 - Math.cos(t * $math.HALFPI);\r\n}\r\nexport function circle(t) {\r\n    return 1 - Math.sqrt(1 - t * t);\r\n}\r\n/**\r\n * ============================================================================\r\n * TRANSFORMERS\r\n * ============================================================================\r\n * @hidden\r\n */\r\n/**\r\n */\r\nexport function yoyo(ease) {\r\n    return function (t) {\r\n        if (t < 0.5) {\r\n            return ease(t * 2.0);\r\n        }\r\n        else {\r\n            return ease((1.0 - t) * 2.0);\r\n        }\r\n    };\r\n}\r\nexport function out(ease) {\r\n    return function (t) {\r\n        return 1.0 - ease(1.0 - t);\r\n    };\r\n}\r\nexport function inOut(ease) {\r\n    return function (t) {\r\n        if (t <= 0.5) {\r\n            return ease(t * 2.0) / 2.0;\r\n        }\r\n        else {\r\n            return 1.0 - (ease((1.0 - t) * 2.0) / 2.0);\r\n        }\r\n    };\r\n}\r\n/**\r\n * ============================================================================\r\n * BOUNCE\r\n * ============================================================================\r\n * @hidden\r\n */\r\nlet b1 = 4 / 11, b2 = 6 / 11, b3 = 8 / 11, b4 = 3 / 4, b5 = 9 / 11, b6 = 10 / 11, b7 = 15 / 16, b8 = 21 / 22, b9 = 63 / 64, b0 = 1 / b1 / b1;\r\nexport function bounce(t) {\r\n    return 1 - bounceOut(1 - t);\r\n}\r\n/**\r\n * @ignore\r\n */\r\nfunction bounceOut(t) {\r\n    t = t;\r\n    if (t < b1) {\r\n        return b0 * t * t;\r\n    }\r\n    else if (t < b3) {\r\n        return b0 * (t -= b2) * t + b4;\r\n    }\r\n    else if (t < b6) {\r\n        return b0 * (t -= b5) * t + b7;\r\n    }\r\n    else {\r\n        return b0 * (t -= b8) * t + b9;\r\n    }\r\n}\r\n/**\r\n * ============================================================================\r\n * ELASTIC\r\n * ============================================================================\r\n * @hidden\r\n */\r\n/**\r\n * @ignore\r\n */\r\nlet tau = 2 * Math.PI;\r\n/**\r\n * @ignore\r\n */\r\nlet amplitude = 1;\r\n/**\r\n * @ignore\r\n */\r\nlet period = 0.3 / tau;\r\n/**\r\n * @ignore\r\n */\r\nlet s = Math.asin(1 / amplitude) * period;\r\nexport function elastic(t) {\r\n    let v = t;\r\n    return amplitude * Math.pow(2, 10 * --v) * Math.sin((s - v) / period);\r\n}\r\n//# sourceMappingURL=Ease.js.map","/**\n * A collection of easing functions\n *\n * Parts of this collection are taken from D3.js library (https://d3js.org/)\n */\n\n/**\n * ============================================================================\n * IMPORTS\n * ============================================================================\n * @hidden\n */\nimport * as $math from \"./Math\";\nimport type { Time } from \"./Animation\";\n\nexport type Easing = (time: Time) => Time;\n\n/**\n * The functions below are from D3.js library (https://d3js.org/)\n *\n * ----------------------------------------------------------------------------\n * Copyright 2017 Mike Bostock\n *\n * Redistribution and use in source and binary forms, with or without\n * modification, are permitted provided that the following conditions are met:\n *\n * 1. Redistributions of source code must retain the above copyright notice,\n *\tthis list of conditions and the following disclaimer.\n *\n * 2. Redistributions in binary form must reproduce the above copyright notice,\n *\tthis list of conditions and the following disclaimer in the documentation\n *\tand/or other materials provided with the distribution.\n *\n * 3. Neither the name of the copyright holder nor the names of its\n *\tcontributors may be used to endorse or promote products derived from this\n *\tsoftware without specific prior written permission.\n *\n * THIS SOFTWARE IS PROVIDED BY THE COPYRIGHT HOLDERS AND CONTRIBUTORS \"AS IS\"\n * AND ANY EXPRESS OR IMPLIED WARRANTIES, INCLUDING, BUT NOT LIMITED TO, THE\n * IMPLIED WARRANTIES OF MERCHANTABILITY AND FITNESS FOR A PARTICULAR PURPOSE\n * ARE DISCLAIMED. IN NO EVENT SHALL THE COPYRIGHT HOLDER OR CONTRIBUTORS BE\n * LIABLE FOR ANY DIRECT, INDIRECT, INCIDENTAL, SPECIAL, EXEMPLARY, OR\n * CONSEQUENTIAL DAMAGES (INCLUDING, BUT NOT LIMITED TO, PROCUREMENT OF\n * SUBSTITUTE GOODS OR SERVICES; LOSS OF USE, DATA, OR PROFITS; OR BUSINESS\n * INTERRUPTION) HOWEVER CAUSED AND ON ANY THEORY OF LIABILITY, WHETHER IN\n * CONTRACT, STRICT LIABILITY, OR TORT (INCLUDING NEGLIGENCE OR OTHERWISE)\n * ARISING IN ANY WAY OUT OF THE USE OF THIS SOFTWARE, EVEN IF ADVISED OF THE\n * POSSIBILITY OF SUCH DAMAGE.\n * ----------------------------------------------------------------------------\n * @hidden\n */\n\n/**\n */\nexport function linear(t: Time): Time {\n\treturn t;\n}\n\nexport function quad(t: Time): Time {\n\treturn (t as number) * (t as number);\n}\n\nexport function cubic(t: Time): Time {\n\treturn (t as number) * (t as number) * (t as number);\n}\n\nexport function pow(t: Time, e: number): Time {\n\treturn Math.pow(t as number, e);\n}\n\nexport function exp(t: Time): Time {\n\treturn Math.pow(2, 10 * (t as number) - 10);\n}\n\nexport function sine(t: Time): Time {\n\treturn 1 - Math.cos((t as number) * $math.HALFPI);\n}\n\nexport function circle(t: Time): Time {\n\treturn 1 - Math.sqrt(1 - (t as number) * (t as number));\n}\n\n/**\n * ============================================================================\n * TRANSFORMERS\n * ============================================================================\n * @hidden\n */\n\n/**\n */\nexport function yoyo(ease: Easing): Easing {\n\treturn function (t: Time) {\n\t\tif ((t as number) < 0.5) {\n\t\t\treturn ease((t as number) * 2.0);\n\n\t\t} else {\n\t\t\treturn ease((1.0 - (t as number)) * 2.0);\n\t\t}\n\t};\n}\n\nexport function out(ease: Easing): Easing {\n\treturn function (t: Time) {\n\t\treturn 1.0 - (ease(1.0 - (t as number)) as number);\n\t};\n}\n\nexport function inOut(ease: Easing): Easing {\n\treturn function (t: Time) {\n\t\tif (t as number <= 0.5) {\n\t\t\treturn ease(t as number * 2.0) as number / 2.0;\n\n\t\t} else {\n\t\t\treturn 1.0 - (ease((1.0 - (t as number)) * 2.0) as number / 2.0);\n\t\t}\n\t};\n}\n\n/**\n * ============================================================================\n * BOUNCE\n * ============================================================================\n * @hidden\n */\nlet b1 = 4 / 11,\n\tb2 = 6 / 11,\n\tb3 = 8 / 11,\n\tb4 = 3 / 4,\n\tb5 = 9 / 11,\n\tb6 = 10 / 11,\n\tb7 = 15 / 16,\n\tb8 = 21 / 22,\n\tb9 = 63 / 64,\n\tb0 = 1 / b1 / b1;\n\nexport function bounce(t: Time): Time {\n\treturn 1 - (bounceOut(1 - (t as number)) as number);\n}\n\n/**\n * @ignore\n */\nfunction bounceOut(t: Time): Time {\n\tt = t as number;\n\tif (t < b1) {\n\t\treturn b0 * t * t;\n\t} else if (t < b3) {\n\t\treturn b0 * (t -= b2) * t + b4;\n\t} else if (t < b6) {\n\t\treturn b0 * (t -= b5) * t + b7;\n\t} else {\n\t\treturn b0 * (t -= b8) * t + b9;\n\t}\n}\n\n/**\n * ============================================================================\n * ELASTIC\n * ============================================================================\n * @hidden\n */\n\n/**\n * @ignore\n */\nlet tau = 2 * Math.PI;\n\n/**\n * @ignore\n */\nlet amplitude = 1;\n\n/**\n * @ignore\n */\nlet period = 0.3 / tau;\n\n/**\n * @ignore\n */\nlet s = Math.asin(1 / amplitude) * period;\n\nexport function elastic(t: Time): Time {\n\tlet v = t as number;\n\treturn amplitude * Math.pow(2, 10 * --v) * Math.sin((s - v) / period);\n}\n","import { isNumber } from \"./Type\";\r\n/**\r\n * ============================================================================\r\n * CONSTANTS\r\n * ============================================================================\r\n * @hidden\r\n */\r\nexport const PI = Math.PI;\r\nexport const HALFPI = PI / 2;\r\nexport const RADIANS = PI / 180;\r\nexport const DEGREES = 180 / PI;\r\n/**\r\n * Rounds the numeric value to whole number or specific precision of set.\r\n *\r\n * @param value      Value\r\n * @param precision  Precision (number of decimal points)\r\n * @param floor  In case value ends with 0.5 and precision is 0, we might need to floor the value instead of ceiling it.\r\n * @return Rounded value\r\n */\r\nexport function round(value, precision, floor) {\r\n    if (!isNumber(precision) || precision <= 0) {\r\n        let rounded = Math.round(value);\r\n        if (floor) {\r\n            if (rounded - value == 0.5) {\r\n                rounded--;\r\n            }\r\n        }\r\n        return rounded;\r\n    }\r\n    else {\r\n        let d = Math.pow(10, precision);\r\n        return Math.round(value * d) / d;\r\n    }\r\n}\r\n/**\r\n * Ceils the numeric value to whole number or specific precision of set.\r\n *\r\n * @param value      Value\r\n * @param precision  Precision (number of decimal points)\r\n * @return Rounded value\r\n */\r\nexport function ceil(value, precision) {\r\n    if (!isNumber(precision) || precision <= 0) {\r\n        return Math.ceil(value);\r\n    }\r\n    else {\r\n        let d = Math.pow(10, precision);\r\n        return Math.ceil(value * d) / d;\r\n    }\r\n}\r\n/**\r\n * [getCubicControlPointA description]\r\n *\r\n * @ignore Exclude from docs\r\n * @todo Description\r\n * @param p0        [description]\r\n * @param p1        [description]\r\n * @param p2        [description]\r\n * @param p3        [description]\r\n * @param tensionX  [description]\r\n * @param tensionY  [description]\r\n * @return [description]\r\n */\r\nexport function getCubicControlPointA(p0, p1, p2, tensionX, tensionY) {\r\n    return { x: ((-p0.x + p1.x / tensionX + p2.x) * tensionX), y: ((-p0.y + p1.y / tensionY + p2.y) * tensionY) };\r\n}\r\n/**\r\n * [getCubicControlPointB description]\r\n *\r\n * @ignore Exclude from docs\r\n * @todo Description\r\n * @param p0        [description]\r\n * @param p1        [description]\r\n * @param p2        [description]\r\n * @param p3        [description]\r\n * @param tensionX  [description]\r\n * @param tensionY  [description]\r\n * @return [description]\r\n */\r\nexport function getCubicControlPointB(p1, p2, p3, tensionX, tensionY) {\r\n    return { x: ((p1.x + p2.x / tensionX - p3.x) * tensionX), y: ((p1.y + p2.y / tensionY - p3.y) * tensionY) };\r\n}\r\nexport function fitToRange(value, min, max) {\r\n    return Math.min(Math.max(value, min), max);\r\n}\r\n/**\r\n * Returns sine of an angle specified in degrees.\r\n *\r\n * @param value  Value\r\n * @return Sine\r\n */\r\nexport function sin(angle) {\r\n    return Math.sin(RADIANS * angle);\r\n}\r\n/**\r\n * Returns tan of an angle specified in degrees.\r\n *\r\n * @param value  Value\r\n * @return Sine\r\n */\r\nexport function tan(angle) {\r\n    return Math.tan(RADIANS * angle);\r\n}\r\n/**\r\n * Returns cosine of an angle specified in degrees.\r\n *\r\n * @param value  Value\r\n * @return Cosine\r\n */\r\nexport function cos(angle) {\r\n    return Math.cos(RADIANS * angle);\r\n}\r\n// 0 to 360\r\nexport function normalizeAngle(value) {\r\n    value = value % 360;\r\n    if (value < 0) {\r\n        value += 360;\r\n    }\r\n    return value;\r\n}\r\n// TODO this doesn't work properly for skewing, and it's probably broken for rotation too\r\nexport function getArcBounds(cx, cy, startAngle, endAngle, radius) {\r\n    let minX = Number.MAX_VALUE;\r\n    let minY = Number.MAX_VALUE;\r\n    let maxX = -Number.MAX_VALUE;\r\n    let maxY = -Number.MAX_VALUE;\r\n    let bpoints = [];\r\n    bpoints.push(getArcPoint(radius, startAngle));\r\n    bpoints.push(getArcPoint(radius, endAngle));\r\n    let fromAngle = Math.min(Math.floor(startAngle / 90) * 90, Math.floor(endAngle / 90) * 90);\r\n    let toAngle = Math.max(Math.ceil(startAngle / 90) * 90, Math.ceil(endAngle / 90) * 90);\r\n    for (let angle = fromAngle; angle <= toAngle; angle += 90) {\r\n        if (angle >= startAngle && angle <= endAngle) {\r\n            bpoints.push(getArcPoint(radius, angle));\r\n        }\r\n    }\r\n    for (let i = 0; i < bpoints.length; i++) {\r\n        let pt = bpoints[i];\r\n        if (pt.x < minX) {\r\n            minX = pt.x;\r\n        }\r\n        if (pt.y < minY) {\r\n            minY = pt.y;\r\n        }\r\n        if (pt.x > maxX) {\r\n            maxX = pt.x;\r\n        }\r\n        if (pt.y > maxY) {\r\n            maxY = pt.y;\r\n        }\r\n    }\r\n    return ({ left: cx + minX, top: cy + minY, right: cx + maxX, bottom: cy + maxY });\r\n}\r\n/**\r\n * Returns point on arc\r\n *\r\n * @param center point\r\n * @param radius\r\n * @param arc\r\n * @return {boolean}\r\n */\r\nexport function getArcPoint(radius, arc) {\r\n    return ({ x: radius * cos(arc), y: radius * sin(arc) });\r\n}\r\nexport function mergeBounds(bounds) {\r\n    const len = bounds.length;\r\n    if (len > 0) {\r\n        let bound = bounds[0];\r\n        let left = bound.left;\r\n        let top = bound.top;\r\n        let right = bound.right;\r\n        let bottom = bound.bottom;\r\n        if (len > 1) {\r\n            for (let i = 1; i < len; i++) {\r\n                bound = bounds[i];\r\n                left = Math.min(bound.left, left);\r\n                right = Math.max(bound.right, right);\r\n                top = Math.min(bound.top, top);\r\n                bottom = Math.max(bound.bottom, bottom);\r\n            }\r\n        }\r\n        return { left, right, top, bottom };\r\n    }\r\n    return { left: 0, right: 0, top: 0, bottom: 0 };\r\n}\r\nexport function fitAngleToRange(value, startAngle, endAngle) {\r\n    if (startAngle > endAngle) {\r\n        let temp = startAngle;\r\n        startAngle = endAngle;\r\n        endAngle = temp;\r\n    }\r\n    value = normalizeAngle(value);\r\n    let count = (startAngle - normalizeAngle(startAngle)) / 360;\r\n    if (value < startAngle) {\r\n        value += 360 * (count + 1);\r\n    }\r\n    let maxEnd = startAngle + (endAngle - startAngle) / 2 + 180;\r\n    let maxStart = startAngle + (endAngle - startAngle) / 2 - 180;\r\n    if (value > endAngle) {\r\n        if (value - 360 > startAngle) {\r\n            value -= 360;\r\n        }\r\n        else {\r\n            if (value < maxEnd) {\r\n                value = endAngle;\r\n            }\r\n            else {\r\n                value = startAngle;\r\n            }\r\n        }\r\n    }\r\n    if (value < startAngle) {\r\n        if (value > maxStart) {\r\n            value = startAngle;\r\n        }\r\n        else {\r\n            value = endAngle;\r\n        }\r\n    }\r\n    return value;\r\n}\r\nexport function inBounds(point, bounds) {\r\n    if (point.x >= bounds.left && point.y >= bounds.top && point.x <= bounds.right && point.y <= bounds.bottom) {\r\n        return true;\r\n    }\r\n    return false;\r\n}\r\nexport function getAngle(point1, point2) {\r\n    if (!point2) {\r\n        point2 = { x: point1.x * 2, y: point1.y * 2 };\r\n    }\r\n    let diffX = point2.x - point1.x;\r\n    let diffY = point2.y - point1.y;\r\n    let angle = Math.atan2(diffY, diffX) * DEGREES;\r\n    if (angle < 0) {\r\n        angle += 360;\r\n    }\r\n    return normalizeAngle(angle);\r\n}\r\n/**\r\n * [getPointOnQuadraticCurve description]\r\n *\r\n * @ignore Exclude from docs\r\n * @todo Description\r\n * @param pointA        [description]\r\n * @param pointB        [description]\r\n * @param controlPoint  [description]\r\n * @param position      [description]\r\n * @return [description]\r\n */\r\nexport function getPointOnQuadraticCurve(pointA, pointB, controlPoint, position) {\r\n    let x = (1 - position) * (1 - position) * pointA.x + 2 * (1 - position) * position * controlPoint.x + position * position * pointB.x;\r\n    let y = (1 - position) * (1 - position) * pointA.y + 2 * (1 - position) * position * controlPoint.y + position * position * pointB.y;\r\n    return { x: x, y: y };\r\n}\r\nexport function getPointOnLine(pointA, pointB, position) {\r\n    return { x: pointA.x + (pointB.x - pointA.x) * position, y: pointA.y + (pointB.y - pointA.y) * position };\r\n}\r\n/**\r\n * Returns the closest value from the array of values to the reference value.\r\n *\r\n * @param values  Array of values\r\n * @param value   Reference value\r\n * @return Closes value from the array\r\n */\r\nexport function closest(values, referenceValue) {\r\n    return values.reduce(function (prev, curr) {\r\n        return (Math.abs(curr - referenceValue) < Math.abs(prev - referenceValue) ? curr : prev);\r\n    });\r\n}\r\n/**\r\n * Returns true if bounds overlap\r\n * @param bounds1 IBounds\r\n * @param bounds2 IBounds\r\n * @returns boolean\r\n */\r\nexport function boundsOverlap(bounds1, bounds2) {\r\n    const horizontalOverlap = bounds1.left < bounds2.right && bounds1.right > bounds2.left;\r\n    const verticalOverlap = bounds1.top < bounds2.bottom && bounds1.bottom > bounds2.top;\r\n    return horizontalOverlap && verticalOverlap;\r\n}\r\n/**\r\n * Generates points of a spiral\r\n * @param cx\r\n * @param cy\r\n * @param radius\r\n * @param radiusY\r\n * @param innerRadius\r\n * @param step\r\n * @param radiusStep\r\n * @param startAngle\r\n * @param endAngle\r\n * @returns IPoint[]\r\n */\r\nexport function spiralPoints(cx, cy, radius, radiusY, innerRadius, step, radiusStep, startAngle, endAngle) {\r\n    let r = innerRadius + 0.01;\r\n    let angle = startAngle * RADIANS;\r\n    let points = [];\r\n    while (r < radius + radiusStep) {\r\n        let stepSize = step;\r\n        if (stepSize / 2 > r) {\r\n            stepSize = 2 * r;\r\n        }\r\n        angle += 2 * Math.asin(stepSize / 2 / r);\r\n        if (angle * DEGREES > endAngle + ((radius - innerRadius) / radiusStep) * 360) {\r\n            break;\r\n        }\r\n        let degrees = angle * DEGREES;\r\n        let point = { x: cx + r * Math.cos(angle), y: cy + r * radiusY / radius * Math.sin(angle) };\r\n        points.push(point);\r\n        r = innerRadius + degrees / 360 * radiusStep;\r\n    }\r\n    points.shift();\r\n    return points;\r\n}\r\n/**\r\n * Returns true if circles overlap\r\n * @param circle1\r\n * @param circle2\r\n * @returns boolean\r\n */\r\nexport function circlesOverlap(circle1, circle2) {\r\n    return Math.hypot(circle1.x - circle2.x, circle1.y - circle2.y) <= circle1.radius + circle2.radius;\r\n}\r\n//# sourceMappingURL=Math.js.map","import type { IPoint } from \"./IPoint\";\nimport { isNumber } from \"./Type\";\nimport type { IBounds } from \"./IBounds\";\n\n/**\n * ============================================================================\n * CONSTANTS\n * ============================================================================\n * @hidden\n */\nexport const PI = Math.PI;\nexport const HALFPI = PI / 2;\nexport const RADIANS = PI / 180;\nexport const DEGREES = 180 / PI;\n\n/**\n * Rounds the numeric value to whole number or specific precision of set.\n *\n * @param value      Value\n * @param precision  Precision (number of decimal points)\n * @param floor  In case value ends with 0.5 and precision is 0, we might need to floor the value instead of ceiling it.\n * @return Rounded value\n */\nexport function round(value: number, precision?: number, floor?: boolean): number {\n\tif (!isNumber(precision) || precision <= 0) {\n\n\t\tlet rounded = Math.round(value);\n\t\tif (floor) {\n\t\t\tif (rounded - value == 0.5) {\n\t\t\t\trounded--;\n\t\t\t}\n\t\t}\n\t\treturn rounded;\n\t}\n\telse {\n\t\tlet d: number = Math.pow(10, precision);\n\t\treturn Math.round(value * d) / d;\n\t}\n}\n\n\n/**\n * Ceils the numeric value to whole number or specific precision of set.\n *\n * @param value      Value\n * @param precision  Precision (number of decimal points)\n * @return Rounded value\n */\nexport function ceil(value: number, precision: number): number {\n\tif (!isNumber(precision) || precision <= 0) {\n\t\treturn Math.ceil(value);\n\t}\n\telse {\n\t\tlet d: number = Math.pow(10, precision);\n\t\treturn Math.ceil(value * d) / d;\n\t}\n}\n\n\n/**\n * [getCubicControlPointA description]\n *\n * @ignore Exclude from docs\n * @todo Description\n * @param p0        [description]\n * @param p1        [description]\n * @param p2        [description]\n * @param p3        [description]\n * @param tensionX  [description]\n * @param tensionY  [description]\n * @return [description]\n */\nexport function getCubicControlPointA(p0: IPoint, p1: IPoint, p2: IPoint, tensionX: number, tensionY: number): IPoint {\n\treturn { x: ((-p0.x + p1.x / tensionX + p2.x) * tensionX), y: ((-p0.y + p1.y / tensionY + p2.y) * tensionY) };\n}\n\n/**\n * [getCubicControlPointB description]\n *\n * @ignore Exclude from docs\n * @todo Description\n * @param p0        [description]\n * @param p1        [description]\n * @param p2        [description]\n * @param p3        [description]\n * @param tensionX  [description]\n * @param tensionY  [description]\n * @return [description]\n */\nexport function getCubicControlPointB(p1: IPoint, p2: IPoint, p3: IPoint, tensionX: number, tensionY: number): IPoint {\n\treturn { x: ((p1.x + p2.x / tensionX - p3.x) * tensionX), y: ((p1.y + p2.y / tensionY - p3.y) * tensionY) };\n}\n\n\nexport function fitToRange(value: number, min: number, max: number): number {\n\treturn Math.min(Math.max(value, min), max);\n}\n\n/**\n * Returns sine of an angle specified in degrees.\n *\n * @param value  Value\n * @return Sine\n */\nexport function sin(angle: number): number {\n\treturn Math.sin(RADIANS * angle);\n}\n\n/**\n * Returns tan of an angle specified in degrees.\n *\n * @param value  Value\n * @return Sine\n */\nexport function tan(angle: number): number {\n\treturn Math.tan(RADIANS * angle);\n}\n\n/**\n * Returns cosine of an angle specified in degrees.\n *\n * @param value  Value\n * @return Cosine\n */\nexport function cos(angle: number): number {\n\treturn Math.cos(RADIANS * angle);\n}\n\n// 0 to 360\nexport function normalizeAngle(value: number): number {\n\tvalue = value % 360;\n\tif (value < 0) {\n\t\tvalue += 360;\n\t}\n\treturn value;\n}\n\n// TODO this doesn't work properly for skewing, and it's probably broken for rotation too\nexport function getArcBounds(cx: number, cy: number, startAngle: number, endAngle: number, radius: number): IBounds {\n\n\tlet minX = Number.MAX_VALUE;\n\tlet minY = Number.MAX_VALUE;\n\tlet maxX = -Number.MAX_VALUE;\n\tlet maxY = -Number.MAX_VALUE;\n\n\tlet bpoints = [];\n\n\tbpoints.push(getArcPoint(radius, startAngle));\n\tbpoints.push(getArcPoint(radius, endAngle));\n\n\tlet fromAngle = Math.min(Math.floor(startAngle / 90) * 90, Math.floor(endAngle / 90) * 90);\n\tlet toAngle = Math.max(Math.ceil(startAngle / 90) * 90, Math.ceil(endAngle / 90) * 90);\n\n\tfor (let angle = fromAngle; angle <= toAngle; angle += 90) {\n\t\tif (angle >= startAngle && angle <= endAngle) {\n\t\t\tbpoints.push(getArcPoint(radius, angle));\n\t\t}\n\t}\n\n\tfor (let i = 0; i < bpoints.length; i++) {\n\t\tlet pt = bpoints[i];\n\t\tif (pt.x < minX) { minX = pt.x; }\n\t\tif (pt.y < minY) { minY = pt.y; }\n\t\tif (pt.x > maxX) { maxX = pt.x; }\n\t\tif (pt.y > maxY) { maxY = pt.y; }\n\t}\n\n\treturn ({ left: cx + minX, top: cy + minY, right: cx + maxX, bottom: cy + maxY });\n}\n\n/**\n * Returns point on arc\n *\n * @param center point\n * @param radius\n * @param arc\n * @return {boolean}\n */\nexport function getArcPoint(radius: number, arc: number) {\n\treturn ({ x: radius * cos(arc), y: radius * sin(arc) });\n}\n\n\nexport function mergeBounds(bounds: IBounds[]): IBounds {\n\tconst len = bounds.length;\n\n\tif (len > 0) {\n\t\tlet bound = bounds[0];\n\t\tlet left = bound.left;\n\t\tlet top = bound.top;\n\t\tlet right = bound.right;\n\t\tlet bottom = bound.bottom;\n\n\t\tif (len > 1) {\n\t\t\tfor (let i = 1; i < len; i++) {\n\t\t\t\tbound = bounds[i];\n\t\t\t\tleft = Math.min(bound.left, left);\n\t\t\t\tright = Math.max(bound.right, right);\n\t\t\t\ttop = Math.min(bound.top, top);\n\t\t\t\tbottom = Math.max(bound.bottom, bottom);\n\t\t\t}\n\t\t}\n\n\t\treturn { left, right, top, bottom };\n\t}\n\treturn { left: 0, right: 0, top: 0, bottom: 0 };\n}\n\n\nexport function fitAngleToRange(value: number, startAngle: number, endAngle: number): number {\n\n\tif (startAngle > endAngle) {\n\t\tlet temp: number = startAngle;\n\t\tstartAngle = endAngle;\n\t\tendAngle = temp;\n\t}\n\n\tvalue = normalizeAngle(value);\n\n\tlet count = (startAngle - normalizeAngle(startAngle)) / 360;\n\n\tif (value < startAngle) {\n\t\tvalue += 360 * (count + 1);\n\t}\n\n\tlet maxEnd: number = startAngle + (endAngle - startAngle) / 2 + 180;\n\tlet maxStart: number = startAngle + (endAngle - startAngle) / 2 - 180;\n\n\tif (value > endAngle) {\n\n\t\tif (value - 360 > startAngle) {\n\t\t\tvalue -= 360;\n\t\t}\n\t\telse {\n\t\t\tif (value < maxEnd) {\n\t\t\t\tvalue = endAngle;\n\t\t\t}\n\t\t\telse {\n\t\t\t\tvalue = startAngle;\n\t\t\t}\n\t\t}\n\t}\n\n\tif (value < startAngle) {\n\t\tif (value > maxStart) {\n\t\t\tvalue = startAngle;\n\t\t}\n\t\telse {\n\t\t\tvalue = endAngle;\n\t\t}\n\t}\n\n\treturn value;\n}\n\nexport function inBounds(point: IPoint, bounds: IBounds) {\n\tif (point.x >= bounds.left && point.y >= bounds.top && point.x <= bounds.right && point.y <= bounds.bottom) {\n\t\treturn true;\n\t}\n\treturn false;\n}\n\nexport function getAngle(point1: IPoint, point2?: IPoint): number {\n\tif (!point2) {\n\t\tpoint2 = { x: point1.x * 2, y: point1.y * 2 };\n\t}\n\tlet diffX: number = point2.x - point1.x;\n\tlet diffY: number = point2.y - point1.y;\n\tlet angle: number = Math.atan2(diffY, diffX) * DEGREES;\n\tif (angle < 0) {\n\t\tangle += 360;\n\t}\n\treturn normalizeAngle(angle);\n}\n\n/**\n * [getPointOnQuadraticCurve description]\n *\n * @ignore Exclude from docs\n * @todo Description\n * @param pointA        [description]\n * @param pointB        [description]\n * @param controlPoint  [description]\n * @param position      [description]\n * @return [description]\n */\nexport function getPointOnQuadraticCurve(pointA: IPoint, pointB: IPoint, controlPoint: IPoint, position: number): IPoint {\n\tlet x: number = (1 - position) * (1 - position) * pointA.x + 2 * (1 - position) * position * controlPoint.x + position * position * pointB.x;\n\tlet y: number = (1 - position) * (1 - position) * pointA.y + 2 * (1 - position) * position * controlPoint.y + position * position * pointB.y;\n\treturn { x: x, y: y };\n}\n\nexport function getPointOnLine(pointA: IPoint, pointB: IPoint, position: number): IPoint {\n\treturn { x: pointA.x + (pointB.x - pointA.x) * position, y: pointA.y + (pointB.y - pointA.y) * position };\n}\n\n\n/**\n * Returns the closest value from the array of values to the reference value.\n *\n * @param values  Array of values\n * @param value   Reference value\n * @return Closes value from the array\n */\nexport function closest(values: number[], referenceValue: number): number {\n\treturn values.reduce(function(prev, curr) {\n\t\treturn (Math.abs(curr - referenceValue) < Math.abs(prev - referenceValue) ? curr : prev);\n\t});\n}\n\n/**\n * Returns true if bounds overlap\n * @param bounds1 IBounds\n * @param bounds2 IBounds\n * @returns boolean\n */\nexport function boundsOverlap(bounds1: IBounds, bounds2: IBounds): boolean {\n\tconst horizontalOverlap = bounds1.left < bounds2.right && bounds1.right > bounds2.left;\n\tconst verticalOverlap = bounds1.top < bounds2.bottom && bounds1.bottom > bounds2.top;\n\treturn horizontalOverlap && verticalOverlap;\n}\n\n/**\n * Generates points of a spiral\n * @param cx \n * @param cy \n * @param radius \n * @param radiusY \n * @param innerRadius \n * @param step \n * @param radiusStep \n * @param startAngle \n * @param endAngle \n * @returns IPoint[]\n */\nexport function spiralPoints(cx: number, cy: number, radius: number, radiusY: number, innerRadius: number, step: number, radiusStep: number, startAngle: number, endAngle: number): IPoint[] {\n\n\tlet r = innerRadius + 0.01;\n\tlet angle = startAngle * RADIANS;\n\tlet points = [];\n\n\twhile (r < radius + radiusStep) {\n\n\t\tlet stepSize = step;\n\t\tif (stepSize / 2 > r) {\n\t\t\tstepSize = 2 * r;\n\t\t}\n\n\t\tangle += 2 * Math.asin(stepSize / 2 / r);\n\n\t\tif (angle * DEGREES > endAngle + ((radius - innerRadius) / radiusStep) * 360) {\n\t\t\tbreak;\n\t\t}\n\n\t\tlet degrees = angle * DEGREES;\n\n\t\tlet point = { x: cx + r * Math.cos(angle), y: cy + r * radiusY / radius * Math.sin(angle) };\n\t\tpoints.push(point);\n\n\t\tr = innerRadius + degrees / 360 * radiusStep;\n\t}\n\n\tpoints.shift();\n\n\treturn points;\n}\n\n/**\n * Returns true if circles overlap\n * @param circle1\n * @param circle2 \n * @returns boolean\n */\nexport function circlesOverlap(circle1: { x: number, y: number, radius: number }, circle2: { x: number, y: number, radius: number }): boolean {\n\treturn Math.hypot(circle1.x - circle2.x, circle1.y - circle2.y) <= circle1.radius + circle2.radius;\n}","/**\r\n * @ignore\r\n */\r\nexport class Registry {\r\n    constructor() {\r\n        /**\r\n         * Currently running version of amCharts.\r\n         */\r\n        Object.defineProperty(this, \"version\", {\r\n            enumerable: true,\r\n            configurable: true,\r\n            writable: true,\r\n            value: \"5.10.8\"\r\n        });\r\n        /**\r\n         * List of applied licenses.\r\n         * @ignore\r\n         */\r\n        Object.defineProperty(this, \"licenses\", {\r\n            enumerable: true,\r\n            configurable: true,\r\n            writable: true,\r\n            value: []\r\n        });\r\n        /**\r\n         * Entities that have their `id` setting set.\r\n         */\r\n        Object.defineProperty(this, \"entitiesById\", {\r\n            enumerable: true,\r\n            configurable: true,\r\n            writable: true,\r\n            value: {}\r\n        });\r\n        /**\r\n         * All created [[Root]] elements.\r\n         */\r\n        Object.defineProperty(this, \"rootElements\", {\r\n            enumerable: true,\r\n            configurable: true,\r\n            writable: true,\r\n            value: []\r\n        });\r\n    }\r\n}\r\n/**\r\n    * @ignore\r\n */\r\nexport const registry = new Registry();\r\n/**\r\n * Adds a license, e.g.:\r\n *\r\n * ```TypeScript\r\n * am5.addLicense(\"xxxxxxxx\");\r\n * ```\r\n * ```JavaScript\r\n * am5.addLicense(\"xxxxxxxx\");\r\n * ```\r\n *\r\n * Multiple licenses can be added to cover for multiple products.\r\n *\r\n * @param  license  License key\r\n */\r\nexport function addLicense(license) {\r\n    registry.licenses.push(license);\r\n}\r\n/**\r\n * Disposes all [[Root]] elements.\r\n */\r\nexport function disposeAllRootElements() {\r\n    let root;\r\n    while (root = registry.rootElements.pop()) {\r\n        root.dispose();\r\n    }\r\n}\r\n/**\r\n * Finds and returns a `Root` element assigned to a container with `id`.\r\n *\r\n * @param   id  Container ID\r\n * @return      Root\r\n * @since 5.9.2\r\n */\r\nexport function getRootById(id) {\r\n    let found;\r\n    registry.rootElements.forEach((item) => {\r\n        if (item.dom.id == id) {\r\n            found = item;\r\n        }\r\n    });\r\n    return found;\r\n}\r\n//# sourceMappingURL=Registry.js.map","\r\n/**\r\n * @ignore\r\n */\r\nexport class Registry {\r\n\t/**\r\n\t * Currently running version of amCharts.\r\n\t */\r\n\treadonly version: string = \"5.10.8\";\r\n\r\n\t/**\r\n\t * List of applied licenses.\r\n\t * @ignore\r\n\t */\r\n\tlicenses: String[] = [];\r\n\r\n\t/**\r\n\t * Entities that have their `id` setting set.\r\n\t */\r\n\tentitiesById: { [index: string]: any } = {};\r\n\r\n\t/**\r\n\t * All created [[Root]] elements.\r\n\t */\r\n\trootElements: any[] = [];\r\n\r\n}\r\n\r\n/**\r\n\t* @ignore\r\n */\r\nexport const registry = new Registry();\r\n\r\n/**\r\n * Adds a license, e.g.:\r\n *\r\n * ```TypeScript\r\n * am5.addLicense(\"xxxxxxxx\");\r\n * ```\r\n * ```JavaScript\r\n * am5.addLicense(\"xxxxxxxx\");\r\n * ```\r\n *\r\n * Multiple licenses can be added to cover for multiple products.\r\n *\r\n * @param  license  License key\r\n */\r\nexport function addLicense(license: string): void {\r\n\tregistry.licenses.push(license);\r\n}\r\n\r\n\r\n/**\r\n * Disposes all [[Root]] elements.\r\n */\r\nexport function disposeAllRootElements(): void {\r\n\tlet root;\r\n\twhile(root = registry.rootElements.pop()) {\r\n\t\troot.dispose();\r\n\t}\r\n}\r\n\r\n/**\r\n * Finds and returns a `Root` element assigned to a container with `id`.\r\n * \r\n * @param   id  Container ID\r\n * @return      Root\r\n * @since 5.9.2\r\n */\r\nexport function getRootById(id: string): any {\r\n\tlet found;\r\n\tregistry.rootElements.forEach((item) => {\r\n\t\tif (item.dom.id == id) {\r\n\t\t\tfound = item;\r\n\t\t}\r\n\t});\r\n\treturn found;\r\n}","/**\r\n * @ignore\r\n */\r\nexport function compare(left, right) {\r\n    if (left === right) {\r\n        return 0;\r\n    }\r\n    else if (left < right) {\r\n        return -1;\r\n    }\r\n    else {\r\n        return 1;\r\n    }\r\n}\r\n/**\r\n * @ignore\r\n */\r\nexport function compareArray(left, right, f) {\r\n    const leftLength = left.length;\r\n    const rightLength = right.length;\r\n    const length = Math.min(leftLength, rightLength);\r\n    for (let i = 0; i < length; ++i) {\r\n        const order = f(left[i], right[i]);\r\n        if (order !== 0) {\r\n            return order;\r\n        }\r\n    }\r\n    return compare(leftLength, rightLength);\r\n}\r\n/**\r\n * @ignore\r\n */\r\nexport function reverse(order) {\r\n    if (order < 0) {\r\n        return 1;\r\n    }\r\n    else if (order > 0) {\r\n        return -1;\r\n    }\r\n    else {\r\n        return 0;\r\n    }\r\n}\r\n/**\r\n * @ignore\r\n */\r\nexport function compareNumber(a, b) {\r\n    if (a === b) {\r\n        return 0;\r\n    }\r\n    else if (a < b) {\r\n        return -1;\r\n    }\r\n    else {\r\n        return 1;\r\n    }\r\n}\r\n//# sourceMappingURL=Order.js.map","export type Order = -1 | 0 | 1;\n\n/**\n * @ignore\n */\nexport function compare<A extends string | number | boolean>(left: A, right: A): Order {\n\tif (left === right) {\n\t\treturn 0;\n\n\t} else if (left < right) {\n\t\treturn -1;\n\n\t} else {\n\t\treturn 1;\n\t}\n}\n\n/**\n * @ignore\n */\nexport function compareArray<A>(left: ArrayLike<A>, right: ArrayLike<A>, f: (x: A, y: A) => Order): Order {\n\tconst leftLength = left.length;\n\tconst rightLength = right.length;\n\n\tconst length = Math.min(leftLength, rightLength);\n\n\tfor (let i = 0; i < length; ++i) {\n\t\tconst order = f(left[i], right[i]);\n\n\t\tif (order !== 0) {\n\t\t\treturn order;\n\t\t}\n\t}\n\n\treturn compare(leftLength, rightLength);\n}\n\n/**\n * @ignore\n */\nexport function reverse(order: Order): Order {\n\tif (order < 0) {\n\t\treturn 1;\n\n\t} else if (order > 0) {\n\t\treturn -1;\n\n\t} else {\n\t\treturn 0;\n\t}\n}\n\n/**\n * @ignore\n */\nexport function compareNumber(a: number, b: number): Order {\n\tif (a === b) {\n\t\treturn 0;\n\n\t} else if (a < b) {\n\t\treturn -1;\n\n\t} else {\n\t\treturn 1;\n\t}\n}\n","import { EventDispatcher } from \"./EventDispatcher\";\r\nimport { Disposer, MultiDisposer } from \"./Disposer\";\r\nimport * as $array from \"./Array\";\r\nimport * as $object from \"./Object\";\r\nimport * as $type from \"./Type\";\r\nfunction disposeSettings(settings) {\r\n    $object.each(settings, (_key, value) => {\r\n        if ($type.isObject(value) && typeof value.dispose === \"function\") {\r\n            value.enableDispose = true;\r\n            value.dispose();\r\n        }\r\n    });\r\n}\r\nexport class TemplateState {\r\n    constructor(name, template, settings) {\r\n        Object.defineProperty(this, \"_settings\", {\r\n            enumerable: true,\r\n            configurable: true,\r\n            writable: true,\r\n            value: void 0\r\n        });\r\n        Object.defineProperty(this, \"_name\", {\r\n            enumerable: true,\r\n            configurable: true,\r\n            writable: true,\r\n            value: void 0\r\n        });\r\n        Object.defineProperty(this, \"_template\", {\r\n            enumerable: true,\r\n            configurable: true,\r\n            writable: true,\r\n            value: void 0\r\n        });\r\n        this._name = name;\r\n        this._template = template;\r\n        this._settings = settings;\r\n    }\r\n    _dispose() {\r\n        disposeSettings(this._settings);\r\n    }\r\n    get(key, fallback) {\r\n        const value = this._settings[key];\r\n        if (value !== undefined) {\r\n            return value;\r\n        }\r\n        else {\r\n            return fallback;\r\n        }\r\n    }\r\n    set(key, value) {\r\n        this._settings[key] = value;\r\n        // TODO maybe only do this if the value changed ?\r\n        this._template._stateChanged(this._name);\r\n    }\r\n    remove(key) {\r\n        delete this._settings[key];\r\n        // TODO maybe only do this if the value changed ?\r\n        this._template._stateChanged(this._name);\r\n    }\r\n    setAll(settings) {\r\n        $object.keys(settings).forEach((key) => {\r\n            this._settings[key] = settings[key];\r\n        });\r\n        this._template._stateChanged(this._name);\r\n    }\r\n    _apply(other, seen) {\r\n        $object.each(this._settings, (key, value) => {\r\n            if (!seen[key] && !other._userSettings[key]) {\r\n                seen[key] = true;\r\n                other.setRaw(key, value);\r\n            }\r\n        });\r\n    }\r\n}\r\nexport class TemplateStates {\r\n    constructor(template) {\r\n        Object.defineProperty(this, \"_template\", {\r\n            enumerable: true,\r\n            configurable: true,\r\n            writable: true,\r\n            value: void 0\r\n        });\r\n        Object.defineProperty(this, \"_states\", {\r\n            enumerable: true,\r\n            configurable: true,\r\n            writable: true,\r\n            value: {}\r\n        });\r\n        this._template = template;\r\n    }\r\n    _dispose() {\r\n        $object.each(this._states, (_key, state) => {\r\n            state._dispose();\r\n        });\r\n    }\r\n    lookup(name) {\r\n        return this._states[name];\r\n    }\r\n    create(name, settings) {\r\n        const state = this._states[name];\r\n        if (state) {\r\n            state.setAll(settings);\r\n            return state;\r\n        }\r\n        else {\r\n            const state = new TemplateState(name, this._template, settings);\r\n            this._states[name] = state;\r\n            this._template._stateChanged(name);\r\n            return state;\r\n        }\r\n    }\r\n    remove(name) {\r\n        delete this._states[name];\r\n        this._template._stateChanged(name);\r\n    }\r\n    _apply(entity, state) {\r\n        $object.each(this._states, (key, value) => {\r\n            let seen = state.states[key];\r\n            if (seen == null) {\r\n                seen = state.states[key] = {};\r\n            }\r\n            const other = entity.states.create(key, {});\r\n            value._apply(other, seen);\r\n        });\r\n    }\r\n}\r\nexport class TemplateAdapters {\r\n    constructor() {\r\n        Object.defineProperty(this, \"_callbacks\", {\r\n            enumerable: true,\r\n            configurable: true,\r\n            writable: true,\r\n            value: {}\r\n        });\r\n    }\r\n    add(key, callback) {\r\n        let callbacks = this._callbacks[key];\r\n        if (callbacks === undefined) {\r\n            callbacks = this._callbacks[key] = [];\r\n        }\r\n        callbacks.push(callback);\r\n        return new Disposer(() => {\r\n            $array.removeFirst(callbacks, callback);\r\n            if (callbacks.length === 0) {\r\n                delete this._callbacks[key];\r\n            }\r\n        });\r\n    }\r\n    remove(key) {\r\n        const callbacks = this._callbacks[key];\r\n        if (callbacks !== undefined) {\r\n            delete this._callbacks[key];\r\n        }\r\n    }\r\n    _apply(entity) {\r\n        const disposers = [];\r\n        $object.each(this._callbacks, (key, callbacks) => {\r\n            $array.each(callbacks, (callback) => {\r\n                disposers.push(entity.adapters.add(key, callback));\r\n            });\r\n        });\r\n        return new MultiDisposer(disposers);\r\n    }\r\n}\r\n// TODO maybe extend from Properties ?\r\nexport class Template {\r\n    constructor(settings, isReal) {\r\n        Object.defineProperty(this, \"_disposed\", {\r\n            enumerable: true,\r\n            configurable: true,\r\n            writable: true,\r\n            value: false\r\n        });\r\n        Object.defineProperty(this, \"_settings\", {\r\n            enumerable: true,\r\n            configurable: true,\r\n            writable: true,\r\n            value: void 0\r\n        });\r\n        Object.defineProperty(this, \"_privateSettings\", {\r\n            enumerable: true,\r\n            configurable: true,\r\n            writable: true,\r\n            value: {}\r\n        });\r\n        // TODO code duplication with Properties\r\n        Object.defineProperty(this, \"_settingEvents\", {\r\n            enumerable: true,\r\n            configurable: true,\r\n            writable: true,\r\n            value: {}\r\n        });\r\n        Object.defineProperty(this, \"_privateSettingEvents\", {\r\n            enumerable: true,\r\n            configurable: true,\r\n            writable: true,\r\n            value: {}\r\n        });\r\n        Object.defineProperty(this, \"_entities\", {\r\n            enumerable: true,\r\n            configurable: true,\r\n            writable: true,\r\n            value: []\r\n        });\r\n        Object.defineProperty(this, \"states\", {\r\n            enumerable: true,\r\n            configurable: true,\r\n            writable: true,\r\n            value: new TemplateStates(this)\r\n        });\r\n        Object.defineProperty(this, \"adapters\", {\r\n            enumerable: true,\r\n            configurable: true,\r\n            writable: true,\r\n            value: new TemplateAdapters()\r\n        });\r\n        Object.defineProperty(this, \"events\", {\r\n            enumerable: true,\r\n            configurable: true,\r\n            writable: true,\r\n            value: new EventDispatcher()\r\n        });\r\n        Object.defineProperty(this, \"setup\", {\r\n            enumerable: true,\r\n            configurable: true,\r\n            writable: true,\r\n            value: void 0\r\n        });\r\n        if (!isReal) {\r\n            throw new Error(\"You cannot use `new Class()`, instead use `Class.new()`\");\r\n        }\r\n        this._settings = settings;\r\n    }\r\n    /**\r\n     * Use this method to create an instance of this class.\r\n     *\r\n     * @see {@link https://www.amcharts.com/docs/v5/getting-started/#New_element_syntax} for more info\r\n     * @param   root      Root element\r\n     * @param   settings  Settings\r\n     * @param   template  Template\r\n     * @return            Instantiated object\r\n     */\r\n    static new(settings) {\r\n        return new Template(settings, true);\r\n    }\r\n    _dispose() {\r\n        disposeSettings(this._settings);\r\n        disposeSettings(this._privateSettings);\r\n    }\r\n    /**\r\n     * Returns `true` if this element is disposed.\r\n     *\r\n     * @return Disposed\r\n     */\r\n    isDisposed() {\r\n        return this._disposed;\r\n    }\r\n    /**\r\n     * Disposes this object.\r\n     */\r\n    dispose() {\r\n        if (!this._disposed) {\r\n            this._disposed = true;\r\n            this._dispose();\r\n        }\r\n    }\r\n    _checkDisposed() {\r\n        if (this._disposed) {\r\n            throw new Error(\"Template is disposed\");\r\n        }\r\n    }\r\n    /**\r\n     * Array of all entities using this template.\r\n     */\r\n    get entities() {\r\n        return this._entities;\r\n    }\r\n    get(key, fallback) {\r\n        this._checkDisposed();\r\n        const value = this._settings[key];\r\n        if (value !== undefined) {\r\n            return value;\r\n        }\r\n        else {\r\n            return fallback;\r\n        }\r\n    }\r\n    setRaw(key, value) {\r\n        this._checkDisposed();\r\n        this._settings[key] = value;\r\n    }\r\n    set(key, value) {\r\n        this._checkDisposed();\r\n        if (this._settings[key] !== value) {\r\n            this.setRaw(key, value);\r\n            this._entities.forEach((entity) => {\r\n                entity._setTemplateProperty(this, key, value);\r\n            });\r\n        }\r\n    }\r\n    remove(key) {\r\n        this._checkDisposed();\r\n        if (key in this._settings) {\r\n            delete this._settings[key];\r\n            this._entities.forEach((entity) => {\r\n                entity._removeTemplateProperty(key);\r\n            });\r\n        }\r\n    }\r\n    removeAll() {\r\n        this._checkDisposed();\r\n        $object.each(this._settings, (key, _value) => {\r\n            this.remove(key);\r\n        });\r\n    }\r\n    getPrivate(key, fallback) {\r\n        this._checkDisposed();\r\n        const value = this._privateSettings[key];\r\n        if (value !== undefined) {\r\n            return value;\r\n        }\r\n        else {\r\n            return fallback;\r\n        }\r\n    }\r\n    setPrivateRaw(key, value) {\r\n        this._checkDisposed();\r\n        this._privateSettings[key] = value;\r\n        return value;\r\n    }\r\n    setPrivate(key, value) {\r\n        this._checkDisposed();\r\n        if (this._privateSettings[key] !== value) {\r\n            this.setPrivateRaw(key, value);\r\n            this._entities.forEach((entity) => {\r\n                entity._setTemplatePrivateProperty(this, key, value);\r\n            });\r\n        }\r\n        return value;\r\n    }\r\n    removePrivate(key) {\r\n        this._checkDisposed();\r\n        if (key in this._privateSettings) {\r\n            delete this._privateSettings[key];\r\n            this._entities.forEach((entity) => {\r\n                entity._removeTemplatePrivateProperty(key);\r\n            });\r\n        }\r\n    }\r\n    setAll(value) {\r\n        this._checkDisposed();\r\n        $object.each(value, (key, value) => {\r\n            this.set(key, value);\r\n        });\r\n    }\r\n    // TODO code duplication with Properties\r\n    on(key, callback) {\r\n        this._checkDisposed();\r\n        let events = this._settingEvents[key];\r\n        if (events === undefined) {\r\n            events = this._settingEvents[key] = [];\r\n        }\r\n        events.push(callback);\r\n        return new Disposer(() => {\r\n            $array.removeFirst(events, callback);\r\n            if (events.length === 0) {\r\n                delete this._settingEvents[key];\r\n            }\r\n        });\r\n    }\r\n    // TODO code duplication with Properties\r\n    onPrivate(key, callback) {\r\n        this._checkDisposed();\r\n        let events = this._privateSettingEvents[key];\r\n        if (events === undefined) {\r\n            events = this._privateSettingEvents[key] = [];\r\n        }\r\n        events.push(callback);\r\n        return new Disposer(() => {\r\n            $array.removeFirst(events, callback);\r\n            if (events.length === 0) {\r\n                delete this._privateSettingEvents[key];\r\n            }\r\n        });\r\n    }\r\n    _apply(entity, state) {\r\n        this._checkDisposed();\r\n        const disposers = [];\r\n        $object.each(this._settingEvents, (key, events) => {\r\n            $array.each(events, (event) => {\r\n                disposers.push(entity.on(key, event));\r\n            });\r\n        });\r\n        $object.each(this._privateSettingEvents, (key, events) => {\r\n            $array.each(events, (event) => {\r\n                disposers.push(entity.onPrivate(key, event));\r\n            });\r\n        });\r\n        this.states._apply(entity, state);\r\n        disposers.push(this.adapters._apply(entity));\r\n        disposers.push(entity.events.copyFrom(this.events));\r\n        return new MultiDisposer(disposers);\r\n    }\r\n    _setObjectTemplate(entity) {\r\n        this._checkDisposed();\r\n        this._entities.push(entity);\r\n    }\r\n    _removeObjectTemplate(entity) {\r\n        //this._checkDisposed();\r\n        $array.remove(this._entities, entity);\r\n    }\r\n    _stateChanged(name) {\r\n        this._checkDisposed();\r\n        this._entities.forEach((entity) => {\r\n            entity._applyStateByKey(name);\r\n        });\r\n    }\r\n}\r\n//# sourceMappingURL=Template.js.map","import type { Entity, Dirty } from \"./Entity\";\nimport type { State } from \"./States\";\nimport { EventDispatcher, Events } from \"./EventDispatcher\";\nimport { IDisposer, Disposer, MultiDisposer } from \"./Disposer\";\nimport * as $array from \"./Array\";\nimport * as $object from \"./Object\";\nimport * as $type from \"./Type\";\n\n\nfunction disposeSettings(settings: object) {\n\t$object.each(settings, (_key, value) => {\n\t\tif ($type.isObject(value) && typeof (value as any).dispose === \"function\") {\n\t\t\t(value as any).enableDispose = true;\n\t\t\t(value as any).dispose();\n\t\t}\n\t});\n}\n\n\nexport class TemplateState<E extends Entity> {\n\tpublic _settings: Partial<E[\"_settings\"]>;\n\n\tprivate _name: string;\n\tprivate _template: Template<E>;\n\n\tconstructor(name: string, template: Template<E>, settings: Partial<E[\"_settings\"]>) {\n\t\tthis._name = name;\n\t\tthis._template = template;\n\t\tthis._settings = settings;\n\t}\n\n\tpublic _dispose() {\n\t\tdisposeSettings(this._settings);\n\t}\n\n\tpublic get<Key extends keyof this[\"_settings\"]>(key: Key): this[\"_settings\"][Key];\n\tpublic get<Key extends keyof this[\"_settings\"], F>(key: Key, fallback: F): NonNullable<this[\"_settings\"][Key]> | F;\n\tpublic get<Key extends keyof this[\"_settings\"]>(key: Key, fallback?: any): any {\n\t\tconst value = this._settings[key];\n\n\t\tif (value !== undefined) {\n\t\t\treturn value;\n\n\t\t} else {\n\t\t\treturn fallback;\n\t\t}\n\t}\n\n\tpublic set<Key extends keyof E[\"_settings\"]>(key: Key, value: E[\"_settings\"][Key]) {\n\t\tthis._settings[key] = value;\n\t\t// TODO maybe only do this if the value changed ?\n\t\tthis._template._stateChanged(this._name);\n\t}\n\n\tpublic remove<Key extends keyof this[\"_settings\"]>(key: Key) {\n\t\tdelete this._settings[key];\n\t\t// TODO maybe only do this if the value changed ?\n\t\tthis._template._stateChanged(this._name);\n\t}\n\n\tpublic setAll(settings: this[\"_settings\"]) {\n\t\t$object.keys(settings).forEach((key) => {\n\t\t\tthis._settings[key] = settings[key];\n\t\t});\n\n\t\tthis._template._stateChanged(this._name);\n\t}\n\n\tpublic _apply(other: State<E>, seen: Dirty<E[\"_settings\"]>): void {\n\t\t$object.each(this._settings, (key, value) => {\n\t\t\tif (!seen[key] && !other._userSettings[key]) {\n\t\t\t\tseen[key] = true;\n\t\t\t\tother.setRaw(key, value);\n\t\t\t}\n\t\t});\n\t}\n}\n\n\nexport class TemplateStates<E extends Entity> {\n\tprivate _template: Template<E>;\n\tprivate _states: { [key: string]: TemplateState<E> } = {};\n\n\tconstructor(template: Template<E>) {\n\t\tthis._template = template;\n\t}\n\n\tpublic _dispose() {\n\t\t$object.each(this._states, (_key, state) => {\n\t\t\tstate._dispose();\n\t\t});\n\t}\n\n\tpublic lookup(name: string): TemplateState<E> | undefined {\n\t\treturn this._states[name];\n\t}\n\n\tpublic create(name: string, settings: Partial<E[\"_settings\"]>): TemplateState<E> {\n\t\tconst state = this._states[name];\n\n\t\tif (state) {\n\t\t\tstate.setAll(settings);\n\t\t\treturn state;\n\n\t\t} else {\n\t\t\tconst state = new TemplateState(name, this._template, settings);\n\t\t\tthis._states[name] = state;\n\t\t\tthis._template._stateChanged(name);\n\t\t\treturn state;\n\t\t}\n\t}\n\n\tpublic remove(name: string) {\n\t\tdelete this._states[name];\n\t\tthis._template._stateChanged(name);\n\t}\n\n\tpublic _apply(entity: E, state: ApplyState<E>): void {\n\t\t$object.each(this._states, (key, value) => {\n\t\t\tlet seen = state.states[key];\n\n\t\t\tif (seen == null) {\n\t\t\t\tseen = state.states[key] = {};\n\t\t\t}\n\n\t\t\tconst other = entity.states.create(key as string, {});\n\t\t\tvalue._apply(other, seen);\n\t\t});\n\t}\n}\n\n\nexport class TemplateAdapters<E extends Entity> {\n\tprivate _callbacks: { [K in keyof E[\"_settings\"]]?: Array<<O extends E>(value: O[\"_settings\"][K], target: O, key: K) => O[\"_settings\"][K]> } = {};\n\n\tpublic add<Key extends keyof E[\"_settings\"]>(key: Key, callback: (value: E[\"_settings\"][Key], target: E, key: Key) => E[\"_settings\"][Key]): IDisposer {\n\t\tlet callbacks = this._callbacks[key];\n\n\t\tif (callbacks === undefined) {\n\t\t\tcallbacks = this._callbacks[key] = [];\n\t\t}\n\n\t\tcallbacks.push(callback);\n\n\t\treturn new Disposer(() => {\n\t\t\t$array.removeFirst(callbacks!, callback);\n\n\t\t\tif (callbacks!.length === 0) {\n\t\t\t\tdelete this._callbacks[key];\n\t\t\t}\n\t\t});\n\t}\n\n\tpublic remove<Key extends keyof E[\"_settings\"]>(key: Key) {\n\t\tconst callbacks = this._callbacks[key];\n\n\t\tif (callbacks !== undefined) {\n\t\t\tdelete this._callbacks[key];\n\t\t}\n\t}\n\n\tpublic _apply(entity: E): IDisposer {\n\t\tconst disposers: Array<IDisposer> = [];\n\n\t\t$object.each(this._callbacks, (key, callbacks) => {\n\t\t\t$array.each(callbacks, (callback) => {\n\t\t\t\tdisposers.push(entity.adapters.add(key, callback));\n\t\t\t});\n\t\t});\n\n\t\treturn new MultiDisposer(disposers);\n\t}\n}\n\n\nexport interface ApplyState<E extends Entity> {\n\tsettings: Dirty<E[\"_settings\"]>;\n\tprivateSettings: Dirty<E[\"_privateSettings\"]>;\n\tstates: { [name: string]: Dirty<E[\"_settings\"]> };\n}\n\n\n// TODO maybe extend from Properties ?\nexport class Template<E extends Entity> implements IDisposer {\n\tprivate _disposed: boolean = false;\n\n\tpublic _settings: Partial<E[\"_settings\"]>;\n\tpublic _privateSettings: E[\"_privateSettings\"] = {};\n\n\t// TODO code duplication with Properties\n\tpublic _settingEvents: { [K in keyof this[\"_settings\"]]?: Array<<V extends this[\"_settings\"][K]>(value: V) => void> } = {};\n\tpublic _privateSettingEvents: { [K in keyof this[\"_settings\"]]?: Array<<V extends this[\"_settings\"][K]>(value: V) => void> } = {};\n\n\tpublic _entities: Array<E> = [];\n\n\tpublic readonly states: TemplateStates<E> = new TemplateStates(this);\n\n\tpublic readonly adapters: TemplateAdapters<E> = new TemplateAdapters();\n\tpublic readonly events: EventDispatcher<Events<E, E[\"_events\"]>> = new EventDispatcher();\n\n\tpublic setup: (<O extends E>(entity: O) => void) | undefined;\n\n\t/**\n\t * Use this method to create an instance of this class.\n\t *\n\t * @see {@link https://www.amcharts.com/docs/v5/getting-started/#New_element_syntax} for more info\n\t * @param   root      Root element\n\t * @param   settings  Settings\n\t * @param   template  Template\n\t * @return            Instantiated object\n\t */\n\tpublic static new<E extends Entity>(settings: E[\"_settings\"]): Template<E> {\n\t\treturn new Template<E>(settings, true);\n\t}\n\n\tprotected _dispose() {\n\t\tdisposeSettings(this._settings);\n\t\tdisposeSettings(this._privateSettings);\n\t}\n\n\t/**\n\t * Returns `true` if this element is disposed.\n\t *\n\t * @return Disposed\n\t */\n\tpublic isDisposed(): boolean {\n\t\treturn this._disposed;\n\t}\n\n\t/**\n\t * Disposes this object.\n\t */\n\tpublic dispose() {\n\t\tif (!this._disposed) {\n\t\t\tthis._disposed = true;\n\t\t\tthis._dispose();\n\t\t}\n\t}\n\n\tprivate _checkDisposed() {\n\t\tif (this._disposed) {\n\t\t\tthrow new Error(\"Template is disposed\");\n\t\t}\n\t}\n\n\t/**\n\t * Array of all entities using this template.\n\t */\n\tpublic get entities():Array<E>{\n\t\treturn this._entities;\n\t}\n\n\tconstructor(settings: E[\"_settings\"], isReal: boolean) {\n\t\tif (!isReal) {\n\t\t\tthrow new Error(\"You cannot use `new Class()`, instead use `Class.new()`\");\n\t\t}\n\n\t\tthis._settings = settings;\n\t}\n\n\tpublic get<Key extends keyof this[\"_settings\"]>(key: Key): this[\"_settings\"][Key];\n\tpublic get<Key extends keyof this[\"_settings\"], F>(key: Key, fallback: F): NonNullable<this[\"_settings\"][Key]> | F;\n\tpublic get<Key extends keyof this[\"_settings\"]>(key: Key, fallback?: any): any {\n\t\tthis._checkDisposed();\n\n\t\tconst value = this._settings[key];\n\n\t\tif (value !== undefined) {\n\t\t\treturn value;\n\n\t\t} else {\n\t\t\treturn fallback;\n\t\t}\n\t}\n\n\tpublic setRaw<Key extends keyof this[\"_settings\"]>(key: Key, value: this[\"_settings\"][Key]) {\n\t\tthis._checkDisposed();\n\t\tthis._settings[key] = value;\n\t}\n\n\tpublic set<Key extends keyof this[\"_settings\"]>(key: Key, value: this[\"_settings\"][Key]) {\n\t\tthis._checkDisposed();\n\n\t\tif (this._settings[key] !== value) {\n\t\t\tthis.setRaw(key, value);\n\n\t\t\tthis._entities.forEach((entity) => {\n\t\t\t\tentity._setTemplateProperty(this, key, value);\n\t\t\t});\n\t\t}\n\t}\n\n\tpublic remove<Key extends keyof this[\"_settings\"]>(key: Key): void {\n\t\tthis._checkDisposed();\n\n\t\tif (key in this._settings) {\n\t\t\tdelete this._settings[key];\n\n\t\t\tthis._entities.forEach((entity) => {\n\t\t\t\tentity._removeTemplateProperty(key);\n\t\t\t});\n\t\t}\n\t}\n\n\tpublic removeAll(): void {\n\t\tthis._checkDisposed();\n\n\t\t$object.each(this._settings, (key, _value) => {\n\t\t\tthis.remove(key);\n\t\t});\n\t}\n\n\tpublic getPrivate<Key extends keyof this[\"_privateSettings\"], F>(key: Key, fallback: F): NonNullable<this[\"_privateSettings\"][Key]> | F;\n\tpublic getPrivate<Key extends keyof this[\"_privateSettings\"]>(key: Key): this[\"_privateSettings\"][Key];\n\tpublic getPrivate<Key extends keyof this[\"_privateSettings\"]>(key: Key, fallback?: any): any {\n\t\tthis._checkDisposed();\n\n\t\tconst value = this._privateSettings[key];\n\n\t\tif (value !== undefined) {\n\t\t\treturn value;\n\n\t\t} else {\n\t\t\treturn fallback;\n\t\t}\n\t}\n\n\tpublic setPrivateRaw<Key extends keyof this[\"_privateSettings\"], Value extends this[\"_privateSettings\"][Key]>(key: Key, value: Value): Value {\n\t\tthis._checkDisposed();\n\t\tthis._privateSettings[key] = value;\n\t\treturn value;\n\t}\n\n\tpublic setPrivate<Key extends keyof this[\"_privateSettings\"], Value extends this[\"_privateSettings\"][Key]>(key: Key, value: Value): Value {\n\t\tthis._checkDisposed();\n\n\t\tif (this._privateSettings[key] !== value) {\n\t\t\tthis.setPrivateRaw(key, value);\n\n\t\t\tthis._entities.forEach((entity) => {\n\t\t\t\tentity._setTemplatePrivateProperty(this, key, value);\n\t\t\t});\n\t\t}\n\n\t\treturn value;\n\t}\n\n\tpublic removePrivate<Key extends keyof this[\"_privateSettings\"]>(key: Key): void {\n\t\tthis._checkDisposed();\n\n\t\tif (key in this._privateSettings) {\n\t\t\tdelete this._privateSettings[key];\n\n\t\t\tthis._entities.forEach((entity) => {\n\t\t\t\tentity._removeTemplatePrivateProperty(key);\n\t\t\t});\n\t\t}\n\t}\n\n\tpublic setAll(value: this[\"_settings\"]) {\n\t\tthis._checkDisposed();\n\n\t\t$object.each(value, (key, value) => {\n\t\t\tthis.set(key, value);\n\t\t});\n\t}\n\n\t// TODO code duplication with Properties\n\tpublic on<Key extends keyof this[\"_settings\"]>(key: Key, callback: (value: this[\"_settings\"][Key], target?: E, key?: Key) => void): IDisposer {\n\t\tthis._checkDisposed();\n\n\t\tlet events = this._settingEvents[key];\n\n\t\tif (events === undefined) {\n\t\t\tevents = this._settingEvents[key] = [];\n\t\t}\n\n\t\tevents.push(callback);\n\n\t\treturn new Disposer(() => {\n\t\t\t$array.removeFirst(events!, callback);\n\n\t\t\tif (events!.length === 0) {\n\t\t\t\tdelete this._settingEvents[key];\n\t\t\t}\n\t\t});\n\t}\n\n\t// TODO code duplication with Properties\n\tpublic onPrivate<Key extends keyof this[\"_privateSettings\"]>(key: Key, callback: (value: this[\"_privateSettings\"][Key], target?: E, key?: Key) => void): IDisposer {\n\t\tthis._checkDisposed();\n\n\t\tlet events = this._privateSettingEvents[key];\n\n\t\tif (events === undefined) {\n\t\t\tevents = this._privateSettingEvents[key] = [];\n\t\t}\n\n\t\tevents.push(callback);\n\n\t\treturn new Disposer(() => {\n\t\t\t$array.removeFirst(events!, callback);\n\n\t\t\tif (events!.length === 0) {\n\t\t\t\tdelete this._privateSettingEvents[key];\n\t\t\t}\n\t\t});\n\t}\n\n\tpublic _apply(entity: E, state: ApplyState<E>): IDisposer {\n\t\tthis._checkDisposed();\n\n\t\tconst disposers: Array<IDisposer> = [];\n\n\t\t$object.each(this._settingEvents, (key, events) => {\n\t\t\t$array.each(events, (event) => {\n\t\t\t\tdisposers.push(entity.on(key, event));\n\t\t\t});\n\t\t});\n\n\t\t$object.each(this._privateSettingEvents, (key, events) => {\n\t\t\t$array.each(events, (event) => {\n\t\t\t\tdisposers.push(entity.onPrivate(key, event));\n\t\t\t});\n\t\t});\n\n\t\tthis.states._apply(entity, state);\n\n\t\tdisposers.push(this.adapters._apply(entity));\n\t\tdisposers.push(entity.events.copyFrom(this.events));\n\n\t\treturn new MultiDisposer(disposers);\n\t}\n\n\tpublic _setObjectTemplate(entity: E) {\n\t\tthis._checkDisposed();\n\t\tthis._entities.push(entity);\n\t}\n\n\tpublic _removeObjectTemplate(entity: E) {\n\t\t//this._checkDisposed();\n\t\t$array.remove(this._entities, entity);\n\t}\n\n\tpublic _stateChanged(name: string): void {\n\t\tthis._checkDisposed();\n\n\t\tthis._entities.forEach((entity) => {\n\t\t\tentity._applyStateByKey(name);\n\t\t});\n\t}\n}\n","import { Graphics } from \"./Graphics\";\r\n/**\r\n * Draws a rectangle.\r\n *\r\n * @see {@link https://www.amcharts.com/docs/v5/concepts/common-elements/graphics/} for more info\r\n * @important\r\n */\r\nexport class Rectangle extends Graphics {\r\n    _afterNew() {\r\n        super._afterNew();\r\n        this._display.isMeasured = true;\r\n        this.setPrivateRaw(\"trustBounds\", true);\r\n    }\r\n    _beforeChanged() {\r\n        super._beforeChanged();\r\n        if (this.isDirty(\"width\") || this.isDirty(\"height\") || this.isPrivateDirty(\"width\") || this.isPrivateDirty(\"height\")) {\r\n            this._clear = true;\r\n        }\r\n    }\r\n    _changed() {\r\n        super._changed();\r\n        if (this._clear && !this.get(\"draw\")) {\r\n            this._draw();\r\n        }\r\n    }\r\n    _draw() {\r\n        this._display.drawRect(0, 0, this.width(), this.height());\r\n    }\r\n    _updateSize() {\r\n        this.markDirty();\r\n        this._clear = true;\r\n    }\r\n}\r\nObject.defineProperty(Rectangle, \"className\", {\r\n    enumerable: true,\r\n    configurable: true,\r\n    writable: true,\r\n    value: \"Rectangle\"\r\n});\r\nObject.defineProperty(Rectangle, \"classNames\", {\r\n    enumerable: true,\r\n    configurable: true,\r\n    writable: true,\r\n    value: Graphics.classNames.concat([Rectangle.className])\r\n});\r\n//# sourceMappingURL=Rectangle.js.map","import { Graphics, IGraphicsSettings, IGraphicsPrivate } from \"./Graphics\";\n\nexport interface IRectangleSettings extends IGraphicsSettings {\n}\n\nexport interface IRectanglePrivate extends IGraphicsPrivate {\n}\n\n/**\n * Draws a rectangle.\n *\n * @see {@link https://www.amcharts.com/docs/v5/concepts/common-elements/graphics/} for more info\n * @important\n */\nexport class Rectangle extends Graphics {\n\n\tdeclare public _settings: IRectangleSettings;\n\tdeclare public _privateSettings: IRectanglePrivate;\n\n\tpublic static className: string = \"Rectangle\";\n\tpublic static classNames: Array<string> = Graphics.classNames.concat([Rectangle.className]);\n\n\tpublic _afterNew(){\n\t\tsuper._afterNew();\n\t\tthis._display.isMeasured = true;\n\t\tthis.setPrivateRaw(\"trustBounds\", true);\n\t}\n\n\tpublic _beforeChanged() {\n\t\tsuper._beforeChanged();\n\n\t\tif (this.isDirty(\"width\") || this.isDirty(\"height\") || this.isPrivateDirty(\"width\") || this.isPrivateDirty(\"height\")) {\n\t\t\tthis._clear = true;\n\t\t}\n\t}\n\n\tpublic _changed() {\n\t\tsuper._changed();\n\n\t\tif (this._clear && !this.get(\"draw\")) {\n\t\t\tthis._draw();\n\t\t}\n\t}\n\n\tprotected _draw() {\n\t\tthis._display.drawRect(0, 0, this.width(), this.height());\n\t}\n\n\tpublic _updateSize() {\n\t\tthis.markDirty()\n\t\tthis._clear = true;\n\t}\n}\n","import { PicturePattern } from \"../render/patterns/PicturePattern\";\r\nimport { Sprite } from \"./Sprite\";\r\nimport { BlendMode } from \"./backend/Renderer\";\r\nimport * as $type from \"../util/Type\";\r\nimport * as $array from \"../util/Array\";\r\nexport const visualSettings = [\"fill\", \"fillOpacity\", \"stroke\", \"strokeWidth\", \"strokeOpacity\", \"fillPattern\", \"strokePattern\", \"fillGradient\", \"strokeGradient\", \"strokeDasharray\", \"strokeDashoffset\", \"shadowBlur\", \"shadowColor\", \"shadowOpacity\", \"shadowOffsetX\", \"shadowOffsetY\", \"blur\", \"sepia\", \"invert\", \"brightness\", \"hue\", \"contrast\", \"saturate\"];\r\n/**\r\n * Base class used for drawing shapes.\r\n *\r\n * @see {@link https://www.amcharts.com/docs/v5/concepts/common-elements/graphics/} for more info\r\n * @important\r\n */\r\nexport class Graphics extends Sprite {\r\n    constructor() {\r\n        super(...arguments);\r\n        Object.defineProperty(this, \"_display\", {\r\n            enumerable: true,\r\n            configurable: true,\r\n            writable: true,\r\n            value: this._root._renderer.makeGraphics()\r\n        });\r\n        Object.defineProperty(this, \"_clear\", {\r\n            enumerable: true,\r\n            configurable: true,\r\n            writable: true,\r\n            value: false\r\n        });\r\n    }\r\n    _beforeChanged() {\r\n        super._beforeChanged();\r\n        if (this.isDirty(\"draw\") || this.isDirty(\"svgPath\")) {\r\n            this.markDirtyBounds();\r\n        }\r\n        if (this.isDirty(\"fill\") || this.isDirty(\"stroke\") || this.isDirty(\"visible\") || this.isDirty(\"forceHidden\") || this.isDirty(\"scale\") || this.isDirty(\"fillGradient\") || this.isDirty(\"strokeGradient\") || this.isDirty(\"fillPattern\") || this.isDirty(\"strokePattern\") || this.isDirty(\"fillOpacity\") || this.isDirty(\"strokeOpacity\") || this.isDirty(\"strokeWidth\") || this.isDirty(\"draw\") || this.isDirty(\"blendMode\") || this.isDirty(\"strokeDasharray\") || this.isDirty(\"strokeDashoffset\") || this.isDirty(\"svgPath\") || this.isDirty(\"lineJoin\") || this.isDirty(\"lineCap\") || this.isDirty(\"shadowColor\") || this.isDirty(\"shadowBlur\") || this.isDirty(\"shadowOffsetX\") || this.isDirty(\"shadowOffsetY\")) {\r\n            this._clear = true;\r\n        }\r\n        this._display.crisp = this.get(\"crisp\", false);\r\n        if (this.isDirty(\"fillGradient\")) {\r\n            const gradient = this.get(\"fillGradient\");\r\n            if (gradient) {\r\n                this._display.isMeasured = true;\r\n                const gradientTarget = gradient.get(\"target\");\r\n                if (gradientTarget) {\r\n                    this._disposers.push(gradientTarget.events.on(\"boundschanged\", () => {\r\n                        this._markDirtyKey(\"fill\");\r\n                    }));\r\n                    this._disposers.push(gradientTarget.events.on(\"positionchanged\", () => {\r\n                        this._markDirtyKey(\"fill\");\r\n                    }));\r\n                }\r\n            }\r\n        }\r\n        if (this.isDirty(\"strokeGradient\")) {\r\n            const gradient = this.get(\"strokeGradient\");\r\n            if (gradient) {\r\n                this._display.isMeasured = true;\r\n                const gradientTarget = gradient.get(\"target\");\r\n                if (gradientTarget) {\r\n                    this._disposers.push(gradientTarget.events.on(\"boundschanged\", () => {\r\n                        this._markDirtyKey(\"stroke\");\r\n                    }));\r\n                    this._disposers.push(gradientTarget.events.on(\"positionchanged\", () => {\r\n                        this._markDirtyKey(\"stroke\");\r\n                    }));\r\n                }\r\n            }\r\n        }\r\n    }\r\n    _changed() {\r\n        super._changed();\r\n        if (this._clear) {\r\n            this.markDirtyBounds();\r\n            this.markDirtyLayer();\r\n            this._display.clear();\r\n            let strokeDasharray = this.get(\"strokeDasharray\");\r\n            if ($type.isNumber(strokeDasharray)) {\r\n                if (strokeDasharray < 0.5) {\r\n                    strokeDasharray = [0];\r\n                }\r\n                else {\r\n                    strokeDasharray = [strokeDasharray];\r\n                }\r\n            }\r\n            this._display.setLineDash(strokeDasharray);\r\n            const strokeDashoffset = this.get(\"strokeDashoffset\");\r\n            if (strokeDashoffset) {\r\n                this._display.setLineDashOffset(strokeDashoffset);\r\n            }\r\n            const blendMode = this.get(\"blendMode\", BlendMode.NORMAL);\r\n            this._display.blendMode = blendMode;\r\n            const draw = this.get(\"draw\");\r\n            if (draw && typeof draw === \"function\") {\r\n                draw(this._display, this);\r\n            }\r\n            const svgPath = this.get(\"svgPath\");\r\n            if (svgPath != null) {\r\n                this._display.svgPath(svgPath);\r\n            }\r\n        }\r\n    }\r\n    _afterChanged() {\r\n        super._afterChanged();\r\n        if (this._clear) {\r\n            const fill = this.get(\"fill\");\r\n            const fillGradient = this.get(\"fillGradient\");\r\n            const fillPattern = this.get(\"fillPattern\");\r\n            const fillOpacity = this.get(\"fillOpacity\");\r\n            const stroke = this.get(\"stroke\");\r\n            const strokeGradient = this.get(\"strokeGradient\");\r\n            const strokePattern = this.get(\"strokePattern\");\r\n            const shadowColor = this.get(\"shadowColor\");\r\n            const shadowBlur = this.get(\"shadowBlur\");\r\n            const shadowOffsetX = this.get(\"shadowOffsetX\");\r\n            const shadowOffsetY = this.get(\"shadowOffsetY\");\r\n            const shadowOpacity = this.get(\"shadowOpacity\");\r\n            if (shadowColor && (shadowBlur || shadowOffsetX || shadowOffsetY)) {\r\n                this._display.shadow(shadowColor, shadowBlur, shadowOffsetX, shadowOffsetY, shadowOpacity);\r\n            }\r\n            if (fill && !fillGradient) {\r\n                this._display.beginFill(fill, fillOpacity);\r\n                this._display.endFill();\r\n            }\r\n            if (fillGradient) {\r\n                if (fill) {\r\n                    const stops = fillGradient.get(\"stops\", []);\r\n                    if (stops.length) {\r\n                        $array.each(stops, (stop) => {\r\n                            if ((!stop.color || stop.colorInherited) && fill) {\r\n                                stop.color = fill;\r\n                                stop.colorInherited = true;\r\n                            }\r\n                            if (stop.opacity == null || stop.opacityInherited) {\r\n                                stop.opacity = fillOpacity;\r\n                                stop.opacityInherited = true;\r\n                            }\r\n                        });\r\n                    }\r\n                }\r\n                const gradient = fillGradient.getFill(this);\r\n                if (gradient) {\r\n                    this._display.beginFill(gradient, fillOpacity);\r\n                    this._display.endFill();\r\n                }\r\n            }\r\n            if (fillPattern) {\r\n                const pattern = fillPattern.pattern;\r\n                if (pattern) {\r\n                    this._display.beginFill(pattern, fillOpacity);\r\n                    this._display.endFill();\r\n                    if (fillPattern instanceof PicturePattern) {\r\n                        fillPattern.events.once(\"loaded\", () => {\r\n                            this._clear = true;\r\n                            this.markDirty();\r\n                        });\r\n                    }\r\n                }\r\n            }\r\n            if (stroke || strokeGradient || strokePattern) {\r\n                const strokeOpacity = this.get(\"strokeOpacity\");\r\n                let strokeWidth = this.get(\"strokeWidth\", 1);\r\n                if (this.get(\"nonScalingStroke\")) {\r\n                    strokeWidth = strokeWidth / this.get(\"scale\", 1);\r\n                }\r\n                if (this.get(\"crisp\")) {\r\n                    strokeWidth /= this._root._renderer.resolution;\r\n                }\r\n                const lineJoin = this.get(\"lineJoin\");\r\n                const lineCap = this.get(\"lineCap\");\r\n                if (stroke && !strokeGradient) {\r\n                    this._display.lineStyle(strokeWidth, stroke, strokeOpacity, lineJoin, lineCap);\r\n                    this._display.endStroke();\r\n                }\r\n                if (strokeGradient) {\r\n                    const stops = strokeGradient.get(\"stops\", []);\r\n                    if (stops.length) {\r\n                        $array.each(stops, (stop) => {\r\n                            if ((!stop.color || stop.colorInherited) && stroke) {\r\n                                stop.color = stroke;\r\n                                stop.colorInherited = true;\r\n                            }\r\n                            if (stop.opacity == null || stop.opacityInherited) {\r\n                                stop.opacity = strokeOpacity;\r\n                                stop.opacityInherited = true;\r\n                            }\r\n                        });\r\n                    }\r\n                    const gradient = strokeGradient.getFill(this);\r\n                    if (gradient) {\r\n                        this._display.lineStyle(strokeWidth, gradient, strokeOpacity, lineJoin, lineCap);\r\n                        this._display.endStroke();\r\n                    }\r\n                }\r\n                if (strokePattern) {\r\n                    /*\r\n                    let changed = false;\r\n                    \r\n                    if (stroke && (!strokePattern.get(\"color\") || strokePattern.get(\"colorInherited\"))) {\r\n                        strokePattern.set(\"color\", stroke);\r\n                        strokePattern.set(\"colorInherited\", true);\r\n                        changed = true;\r\n                    }\r\n                    if (changed) {\r\n                        // @todo: is this OK?\r\n                        strokePattern._changed();\r\n                    }\r\n                    */\r\n                    let pattern = strokePattern.pattern;\r\n                    if (pattern) {\r\n                        this._display.lineStyle(strokeWidth, pattern, strokeOpacity, lineJoin, lineCap);\r\n                        this._display.endStroke();\r\n                        if (strokePattern instanceof PicturePattern) {\r\n                            strokePattern.events.once(\"loaded\", () => {\r\n                                this._clear = true;\r\n                                this.markDirty();\r\n                            });\r\n                        }\r\n                    }\r\n                }\r\n            }\r\n            if (this.getPrivate(\"showingTooltip\")) {\r\n                this.showTooltip();\r\n            }\r\n        }\r\n        this._clear = false;\r\n    }\r\n}\r\nObject.defineProperty(Graphics, \"className\", {\r\n    enumerable: true,\r\n    configurable: true,\r\n    writable: true,\r\n    value: \"Graphics\"\r\n});\r\nObject.defineProperty(Graphics, \"classNames\", {\r\n    enumerable: true,\r\n    configurable: true,\r\n    writable: true,\r\n    value: Sprite.classNames.concat([Graphics.className])\r\n});\r\n//# sourceMappingURL=Graphics.js.map","import type { Color } from \"../util/Color\";\nimport type { Pattern } from \"../render/patterns/Pattern\";\nimport type { Gradient } from \"../render/gradients/Gradient\";\n\nimport { PicturePattern } from \"../render/patterns/PicturePattern\";\nimport { ISpriteSettings, ISpritePrivate, ISpriteEvents, Sprite } from \"./Sprite\";\nimport { IGraphics, BlendMode } from \"./backend/Renderer\";\n\nimport * as $type from \"../util/Type\";\nimport * as $array from \"../util/Array\";\n\n\nexport const visualSettings = [\"fill\", \"fillOpacity\", \"stroke\", \"strokeWidth\", \"strokeOpacity\", \"fillPattern\", \"strokePattern\", \"fillGradient\", \"strokeGradient\", \"strokeDasharray\", \"strokeDashoffset\", \"shadowBlur\", \"shadowColor\", \"shadowOpacity\", \"shadowOffsetX\", \"shadowOffsetY\", \"blur\", \"sepia\", \"invert\", \"brightness\", \"hue\", \"contrast\", \"saturate\"];\n\nexport interface IGraphicsSettings extends ISpriteSettings {\n\n\t/**\n\t * Fill color.\n\t *\n\t * @see {@link https://www.amcharts.com/docs/v5/concepts/colors-gradients-and-patterns/} for more information\n\t */\n\tfill?: Color;\n\n\t/**\n\t * Stroke (border or line) color.\n\t *\n\t * @see {@link https://www.amcharts.com/docs/v5/concepts/colors-gradients-and-patterns/} for more information\n\t */\n\tstroke?: Color;\n\n\t/**\n\t * Fill pattern.\n\t *\n\t * @see {@link https://www.amcharts.com/docs/v5/concepts/colors-gradients-and-patterns/patterns/} for more information\n\t */\n\tfillPattern?: Pattern;\n\n\t/**\n\t * Stroke (border or line) pattern.\n\t *\n\t * @see {@link https://www.amcharts.com/docs/v5/concepts/colors-gradients-and-patterns/patterns/} for more information\n\t */\n\tstrokePattern?: Pattern;\n\n\t/**\n\t * Fill gradient.\n\t *\n\t * @see {@link https://www.amcharts.com/docs/v5/concepts/colors-gradients-and-patterns/gradients/} for more information\n\t */\n\tfillGradient?: Gradient;\n\n\t/**\n\t * Stroke (border or line) gradient.\n\t *\n\t * @see {@link https://www.amcharts.com/docs/v5/concepts/colors-gradients-and-patterns/gradients/} for more information\n\t */\n\tstrokeGradient?: Gradient;\n\n\t/**\n\t * Stroke (border or line) dash settings.\n\t *\n\t * @see {@link https://www.amcharts.com/docs/v5/concepts/colors-gradients-and-patterns/#Dashed_lines} for more information\n\t */\n\tstrokeDasharray?: number[] | number;\n\n\t/**\n\t * Stroke (border or line) dash offset.\n\t *\n\t * @see {@link https://www.amcharts.com/docs/v5/concepts/colors-gradients-and-patterns/#Dashed_lines} for more information\n\t */\n\tstrokeDashoffset?: number;\n\n\t/**\n\t * Opacity of the fill. 0 - fully transparent; 1 - fully opaque.\n\t */\n\tfillOpacity?: number;\n\n\t/**\n\t * Opacity of the stroke (border or line). 0 - fully transparent; 1 - fully opaque.\n\t */\n\tstrokeOpacity?: number;\n\n\t/**\n\t * Width of the stroke (border or line) in pixels.\n\t */\n\tstrokeWidth?: number;\n\n\t/**\n\t * Indicates if stroke of a Graphics should stay the same when it's scale changes. Note, this doesn't take into account parent container scale changes.\n\t * @default false\n\t */\n\tnonScalingStroke?: boolean;\n\n\t/**\n\t * Drawing function.\n\t *\n\t * Must use renderer (`display` parameter) methods to draw.\n\t *\n\t * @see {@link https://www.amcharts.com/docs/v5/concepts/common-elements/graphics/#Custom_draw_functions} for more info\n\t */\n\tdraw?: (display: IGraphics, graphics: Graphics) => void;\n\n\t/**\n\t * Rendering mode.\n\t *\n\t * @default BlendMode.NORMAL (\"source-over\")\n\t * @see {@link https://developer.mozilla.org/en-US/docs/Web/API/CanvasRenderingContext2D/globalCompositeOperation} for more information\n\t * @ignore\n\t */\n\tblendMode?: BlendMode;\n\n\t/**\n\t * Draw a shape using an SVG path.\n\t *\n\t * @see {@link https://developer.mozilla.org/en-US/docs/Web/SVG/Tutorial/Paths} for more information\n\t */\n\tsvgPath?: string;\n\n\t/**\n\t * Color of the element's shadow.\n\t *\n\t * For this to work at least one of the following needs to be set as well:\n\t * `shadowBlur`, `shadowOffsetX`, `shadowOffsetY`.\n\t *\n\t * @see {@link https://www.amcharts.com/docs/v5/concepts/colors-gradients-and-patterns/shadows/} for more info\n\t */\n\tshadowColor?: Color | null;\n\n\t/**\n\t * Blurriness of the the shadow.\n\t *\n\t * The bigger the number, the more blurry shadow will be.\n\t *\n\t * @see {@link https://www.amcharts.com/docs/v5/concepts/colors-gradients-and-patterns/shadows/} for more info\n\t */\n\tshadowBlur?: number;\n\n\t/**\n\t * Horizontal shadow offset in pixels.\n\t *\n\t * @see {@link https://www.amcharts.com/docs/v5/concepts/colors-gradients-and-patterns/shadows/} for more info\n\t */\n\tshadowOffsetX?: number;\n\n\t/**\n\t * Vertical shadow offset in pixels.\n\t *\n\t * @see {@link https://www.amcharts.com/docs/v5/concepts/colors-gradients-and-patterns/shadows/} for more info\n\t */\n\tshadowOffsetY?: number;\n\n\t/**\n\t * Opacity of the shadow (0-1).\n\t *\n\t * If not set, will use the same as `fillOpacity` of the element.\n\t *\n\t * @see {@link https://www.amcharts.com/docs/v5/concepts/colors-gradients-and-patterns/shadows/} for more info\n\t */\n\tshadowOpacity?: number;\n\n\t/**\n\t * A method to be used on anchor points (joints) of the multi-point line.\n\t *\n\t * @see {@link https://developer.mozilla.org/en-US/docs/Web/API/CanvasRenderingContext2D/lineJoin} for more info\n\t * @default \"miter\"\n\t * @since 5.2.10\n\t */\n\tlineJoin?: \"miter\" | \"round\" | \"bevel\";\n\n\t/**\n\t * This setting determines the shape used to draw the end points of lines.\n\t *\n\t * @see {@link https://developer.mozilla.org/en-US/docs/Web/API/CanvasRenderingContext2D/lineCap} for more info\n\t * @default \"butt\"\n\t * @since 5.10.8\n\t */\n\tlineCap?: \"butt\" | \"round\" | \"square\";\n}\n\nexport interface IGraphicsPrivate extends ISpritePrivate {\n\n}\n\nexport interface IGraphicsEvents extends ISpriteEvents {\n\n}\n\n/**\n * Base class used for drawing shapes.\n *\n * @see {@link https://www.amcharts.com/docs/v5/concepts/common-elements/graphics/} for more info\n * @important\n */\nexport class Graphics extends Sprite {\n\n\tdeclare public _settings: IGraphicsSettings;\n\tdeclare public _privateSettings: IGraphicsPrivate;\n\tdeclare public _events: IGraphicsEvents;\n\n\tpublic _display: IGraphics = this._root._renderer.makeGraphics();\n\n\tprotected _clear = false;\n\n\tpublic static className: string = \"Graphics\";\n\tpublic static classNames: Array<string> = Sprite.classNames.concat([Graphics.className]);\n\n\tpublic _beforeChanged() {\n\t\tsuper._beforeChanged();\n\n\t\tif (this.isDirty(\"draw\") || this.isDirty(\"svgPath\")) {\n\t\t\tthis.markDirtyBounds();\n\t\t}\n\n\t\tif (this.isDirty(\"fill\") || this.isDirty(\"stroke\") || this.isDirty(\"visible\") || this.isDirty(\"forceHidden\") || this.isDirty(\"scale\") || this.isDirty(\"fillGradient\") || this.isDirty(\"strokeGradient\") || this.isDirty(\"fillPattern\") || this.isDirty(\"strokePattern\") || this.isDirty(\"fillOpacity\") || this.isDirty(\"strokeOpacity\") || this.isDirty(\"strokeWidth\") || this.isDirty(\"draw\") || this.isDirty(\"blendMode\") || this.isDirty(\"strokeDasharray\") || this.isDirty(\"strokeDashoffset\") || this.isDirty(\"svgPath\") || this.isDirty(\"lineJoin\") || this.isDirty(\"lineCap\") || this.isDirty(\"shadowColor\") || this.isDirty(\"shadowBlur\") || this.isDirty(\"shadowOffsetX\") || this.isDirty(\"shadowOffsetY\")) {\n\t\t\tthis._clear = true;\n\t\t}\n\n\t\tthis._display.crisp = this.get(\"crisp\", false);\n\n\t\tif (this.isDirty(\"fillGradient\")) {\n\t\t\tconst gradient = this.get(\"fillGradient\");\n\t\t\tif (gradient) {\n\t\t\t\tthis._display.isMeasured = true;\n\t\t\t\tconst gradientTarget = gradient.get(\"target\");\n\t\t\t\tif (gradientTarget) {\n\t\t\t\t\tthis._disposers.push(gradientTarget.events.on(\"boundschanged\", () => {\n\t\t\t\t\t\tthis._markDirtyKey(\"fill\");\n\t\t\t\t\t}))\n\t\t\t\t\tthis._disposers.push(\n\t\t\t\t\t\tgradientTarget.events.on(\"positionchanged\", () => {\n\t\t\t\t\t\t\tthis._markDirtyKey(\"fill\");\n\t\t\t\t\t\t}))\n\t\t\t\t}\n\t\t\t}\n\t\t}\n\n\t\tif (this.isDirty(\"strokeGradient\")) {\n\t\t\tconst gradient = this.get(\"strokeGradient\");\n\t\t\tif (gradient) {\n\t\t\t\tthis._display.isMeasured = true;\n\t\t\t\tconst gradientTarget = gradient.get(\"target\");\n\t\t\t\tif (gradientTarget) {\n\t\t\t\t\tthis._disposers.push(\n\t\t\t\t\t\tgradientTarget.events.on(\"boundschanged\", () => {\n\t\t\t\t\t\t\tthis._markDirtyKey(\"stroke\");\n\t\t\t\t\t\t}))\n\t\t\t\t\tthis._disposers.push(\n\t\t\t\t\t\tgradientTarget.events.on(\"positionchanged\", () => {\n\t\t\t\t\t\t\tthis._markDirtyKey(\"stroke\");\n\t\t\t\t\t\t}))\n\t\t\t\t}\n\t\t\t}\n\t\t}\n\t}\n\n\tpublic _changed() {\n\t\tsuper._changed();\n\n\t\tif (this._clear) {\n\t\t\tthis.markDirtyBounds();\n\t\t\tthis.markDirtyLayer();\n\t\t\tthis._display.clear();\n\n\t\t\tlet strokeDasharray = this.get(\"strokeDasharray\");\n\t\t\tif ($type.isNumber(strokeDasharray)) {\n\t\t\t\tif (strokeDasharray < 0.5) {\n\t\t\t\t\tstrokeDasharray = [0];\n\t\t\t\t}\n\t\t\t\telse {\n\t\t\t\t\tstrokeDasharray = [strokeDasharray]\n\t\t\t\t}\n\t\t\t}\n\t\t\tthis._display.setLineDash(strokeDasharray as number[]);\n\n\t\t\tconst strokeDashoffset = this.get(\"strokeDashoffset\");\n\t\t\tif (strokeDashoffset) {\n\t\t\t\tthis._display.setLineDashOffset(strokeDashoffset);\n\t\t\t}\n\n\t\t\tconst blendMode = this.get(\"blendMode\", BlendMode.NORMAL);\n\t\t\tthis._display.blendMode = blendMode;\n\n\t\t\tconst draw = this.get(\"draw\");\n\n\t\t\tif (draw && typeof draw === \"function\") {\n\t\t\t\tdraw(this._display, this);\n\t\t\t}\n\n\t\t\tconst svgPath = this.get(\"svgPath\");\n\t\t\tif (svgPath != null) {\n\t\t\t\tthis._display.svgPath(svgPath!);\n\t\t\t}\n\t\t}\n\t}\n\n\tpublic _afterChanged() {\n\t\tsuper._afterChanged();\n\n\t\tif (this._clear) {\n\t\t\tconst fill = this.get(\"fill\");\n\t\t\tconst fillGradient = this.get(\"fillGradient\");\n\t\t\tconst fillPattern = this.get(\"fillPattern\");\n\t\t\tconst fillOpacity = this.get(\"fillOpacity\");\n\n\t\t\tconst stroke = this.get(\"stroke\");\n\t\t\tconst strokeGradient = this.get(\"strokeGradient\");\n\t\t\tconst strokePattern = this.get(\"strokePattern\");\n\n\t\t\tconst shadowColor = this.get(\"shadowColor\");\n\t\t\tconst shadowBlur = this.get(\"shadowBlur\");\n\t\t\tconst shadowOffsetX = this.get(\"shadowOffsetX\");\n\t\t\tconst shadowOffsetY = this.get(\"shadowOffsetY\");\n\t\t\tconst shadowOpacity = this.get(\"shadowOpacity\");\n\n\t\t\tif (shadowColor && (shadowBlur || shadowOffsetX || shadowOffsetY)) {\n\t\t\t\tthis._display.shadow(shadowColor, shadowBlur, shadowOffsetX, shadowOffsetY, shadowOpacity);\n\t\t\t}\n\n\t\t\tif (fill && !fillGradient) {\n\t\t\t\tthis._display.beginFill(fill, fillOpacity);\n\t\t\t\tthis._display.endFill();\n\t\t\t}\n\n\t\t\tif (fillGradient) {\n\t\t\t\tif (fill) {\n\t\t\t\t\tconst stops = fillGradient.get(\"stops\", []);\n\t\t\t\t\tif (stops.length) {\n\t\t\t\t\t\t$array.each(stops, (stop: any) => {\n\t\t\t\t\t\t\tif ((!stop.color || stop.colorInherited) && fill) {\n\t\t\t\t\t\t\t\tstop.color = fill;\n\t\t\t\t\t\t\t\tstop.colorInherited = true;\n\t\t\t\t\t\t\t}\n\n\t\t\t\t\t\t\tif (stop.opacity == null || stop.opacityInherited) {\n\t\t\t\t\t\t\t\tstop.opacity = fillOpacity;\n\t\t\t\t\t\t\t\tstop.opacityInherited = true;\n\t\t\t\t\t\t\t}\n\t\t\t\t\t\t})\n\t\t\t\t\t}\n\t\t\t\t}\n\t\t\t\tconst gradient = fillGradient.getFill(this);\n\t\t\t\tif (gradient) {\n\t\t\t\t\tthis._display.beginFill(gradient, fillOpacity);\n\t\t\t\t\tthis._display.endFill();\n\t\t\t\t}\n\t\t\t}\n\n\t\t\tif (fillPattern) {\n\t\t\t\tconst pattern = fillPattern.pattern;\n\t\t\t\tif (pattern) {\n\t\t\t\t\tthis._display.beginFill(pattern, fillOpacity);\n\t\t\t\t\tthis._display.endFill();\n\n\t\t\t\t\tif (fillPattern instanceof PicturePattern) {\n\t\t\t\t\t\tfillPattern.events.once(\"loaded\", () => {\n\t\t\t\t\t\t\tthis._clear = true;\n\t\t\t\t\t\t\tthis.markDirty();\n\t\t\t\t\t\t});\n\t\t\t\t\t}\n\t\t\t\t}\n\t\t\t}\n\n\t\t\tif (stroke || strokeGradient || strokePattern) {\n\t\t\t\tconst strokeOpacity = this.get(\"strokeOpacity\");\n\t\t\t\tlet strokeWidth = this.get(\"strokeWidth\", 1);\n\n\t\t\t\tif (this.get(\"nonScalingStroke\")) {\n\t\t\t\t\tstrokeWidth = strokeWidth / this.get(\"scale\", 1)\n\t\t\t\t}\n\n\t\t\t\tif (this.get(\"crisp\")) {\n\t\t\t\t\tstrokeWidth /= this._root._renderer.resolution;\n\t\t\t\t}\n\n\t\t\t\tconst lineJoin = this.get(\"lineJoin\");\n\t\t\t\tconst lineCap = this.get(\"lineCap\");\n\n\t\t\t\tif (stroke && !strokeGradient) {\n\t\t\t\t\tthis._display.lineStyle(strokeWidth, stroke, strokeOpacity, lineJoin, lineCap);\n\t\t\t\t\tthis._display.endStroke();\n\t\t\t\t}\n\n\n\t\t\t\tif (strokeGradient) {\n\t\t\t\t\tconst stops = strokeGradient.get(\"stops\", []);\n\t\t\t\t\tif (stops.length) {\n\t\t\t\t\t\t$array.each(stops, (stop: any) => {\n\t\t\t\t\t\t\tif ((!stop.color || stop.colorInherited) && stroke) {\n\t\t\t\t\t\t\t\tstop.color = stroke;\n\t\t\t\t\t\t\t\tstop.colorInherited = true;\n\t\t\t\t\t\t\t}\n\n\t\t\t\t\t\t\tif (stop.opacity == null || stop.opacityInherited) {\n\t\t\t\t\t\t\t\tstop.opacity = strokeOpacity;\n\t\t\t\t\t\t\t\tstop.opacityInherited = true;\n\t\t\t\t\t\t\t}\n\t\t\t\t\t\t})\n\t\t\t\t\t}\n\n\t\t\t\t\tconst gradient = strokeGradient.getFill(this);\n\t\t\t\t\tif (gradient) {\n\t\t\t\t\t\tthis._display.lineStyle(strokeWidth, gradient, strokeOpacity, lineJoin, lineCap);\n\t\t\t\t\t\tthis._display.endStroke();\n\t\t\t\t\t}\n\t\t\t\t}\n\n\t\t\t\tif (strokePattern) {\n\t\t\t\t\t/*\n\t\t\t\t\tlet changed = false;\n\t\t\t\t\t\n\t\t\t\t\tif (stroke && (!strokePattern.get(\"color\") || strokePattern.get(\"colorInherited\"))) {\n\t\t\t\t\t\tstrokePattern.set(\"color\", stroke);\n\t\t\t\t\t\tstrokePattern.set(\"colorInherited\", true);\n\t\t\t\t\t\tchanged = true;\n\t\t\t\t\t}\n\t\t\t\t\tif (changed) {\n\t\t\t\t\t\t// @todo: is this OK?\n\t\t\t\t\t\tstrokePattern._changed();\n\t\t\t\t\t}\n\t\t\t\t\t*/\n\t\t\t\t\tlet pattern = strokePattern.pattern;\n\n\t\t\t\t\tif (pattern) {\n\t\t\t\t\t\tthis._display.lineStyle(strokeWidth, pattern, strokeOpacity, lineJoin, lineCap);\n\t\t\t\t\t\tthis._display.endStroke();\n\n\t\t\t\t\t\tif (strokePattern instanceof PicturePattern) {\n\t\t\t\t\t\t\tstrokePattern.events.once(\"loaded\", () => {\n\t\t\t\t\t\t\t\tthis._clear = true;\n\t\t\t\t\t\t\t\tthis.markDirty();\n\t\t\t\t\t\t\t});\n\t\t\t\t\t\t}\n\t\t\t\t\t}\n\t\t\t\t}\n\t\t\t}\n\n\t\t\tif (this.getPrivate(\"showingTooltip\")) {\n\t\t\t\tthis.showTooltip();\n\t\t\t}\n\t\t}\n\n\t\tthis._clear = false;\n\t}\n\n}\n","import { Pattern } from \"./Pattern\";\r\n/**\r\n * Picture pattern.\r\n *\r\n * @since 5.2.15\r\n *\r\n * @see {@link https://www.amcharts.com/docs/v5/concepts/colors-gradients-and-patterns/patterns/} for more info\r\n */\r\nexport class PicturePattern extends Pattern {\r\n    constructor() {\r\n        super(...arguments);\r\n        Object.defineProperty(this, \"_image\", {\r\n            enumerable: true,\r\n            configurable: true,\r\n            writable: true,\r\n            value: void 0\r\n        });\r\n    }\r\n    _beforeChanged() {\r\n        super._beforeChanged();\r\n        this._clear = true;\r\n        if (this.isDirty(\"src\")) {\r\n            this._load();\r\n        }\r\n        const canvas = this.get(\"canvas\");\r\n        if (canvas) {\r\n            this.set(\"width\", canvas.width);\r\n            this.set(\"height\", canvas.height);\r\n        }\r\n    }\r\n    _draw() {\r\n        super._draw();\r\n        const image = this._image;\r\n        if (image) {\r\n            const patternWidth = this.get(\"width\", 100);\r\n            const patternHeight = this.get(\"height\", 100);\r\n            // Fit\r\n            const fit = this.get(\"fit\", \"image\");\r\n            let width = 0;\r\n            let height = 0;\r\n            if (fit == \"pattern\") {\r\n                width = patternWidth;\r\n                height = patternHeight;\r\n            }\r\n            else {\r\n                width = image.width;\r\n                height = image.height;\r\n                if (fit == \"image\") {\r\n                    this.set(\"width\", width);\r\n                    this.set(\"height\", height);\r\n                }\r\n            }\r\n            // Position\r\n            const centered = this.get(\"centered\", true);\r\n            let x = 0;\r\n            let y = 0;\r\n            if (centered) {\r\n                x = patternWidth / 2 - width / 2;\r\n                y = patternHeight / 2 - height / 2;\r\n            }\r\n            this._display.image(image, width, height, x, y);\r\n        }\r\n        const canvas = this.get(\"canvas\");\r\n        if (canvas) {\r\n            this._display.image(canvas, canvas.width, canvas.height, 0, 0);\r\n        }\r\n    }\r\n    _load() {\r\n        const src = this.get(\"src\");\r\n        if (src) {\r\n            const image = new Image();\r\n            //image.crossOrigin = \"Anonymous\";\r\n            image.src = src;\r\n            image.decode().then(() => {\r\n                this._image = image;\r\n                this._draw();\r\n                if (this.events.isEnabled(\"loaded\")) {\r\n                    this.events.dispatch(\"loaded\", { type: \"loaded\", target: this });\r\n                }\r\n            }).catch((_error) => {\r\n                // TODO: maybe raise error?\r\n            });\r\n        }\r\n    }\r\n}\r\nObject.defineProperty(PicturePattern, \"className\", {\r\n    enumerable: true,\r\n    configurable: true,\r\n    writable: true,\r\n    value: \"PicturePattern\"\r\n});\r\nObject.defineProperty(PicturePattern, \"classNames\", {\r\n    enumerable: true,\r\n    configurable: true,\r\n    writable: true,\r\n    value: Pattern.classNames.concat([PicturePattern.className])\r\n});\r\n//# sourceMappingURL=PicturePattern.js.map","import { Pattern, IPatternSettings, IPatternPrivate, IPatternEvents } from \"./Pattern\";\n\nexport interface IPicturePatternSettings extends IPatternSettings {\n\n\t/**\n\t * A source URI of the image.\n\t *\n\t * Can be relative or absolute URL, or data-uri.\n\t */\n\tsrc?: string;\n\n\t/**\n\t * How pattern should be sized:\n\t *\n\t * * `\"image\"` (default) - pattern will be sized to actual image dimensions.\n\t * * `\"pattern\"` - image will sized to image dimensions.\n\t * * `\"none\"` - image will be placed in the pattern, regardless of either dimensions.\n\t * \n\t * @default \"image\"\n\t */\n\tfit?: \"image\" | \"pattern\" | \"none\";\n\n\t/**\n\t * Center images.\n\t *\n\t * @default true\n\t */\n\tcentered?: boolean;\n\n\n\n\tcanvas?: HTMLCanvasElement;\n\n}\n\nexport interface IPicturePatternPrivate extends IPatternPrivate {\n}\n\nexport interface IPicturePatternEvents extends IPatternEvents {\n\n\t/**\n\t * Invoked when related image is loaded.\n\t */\n\tloaded: {};\n\n}\n\n/**\n * Picture pattern.\n *\n * @since 5.2.15\n *\n * @see {@link https://www.amcharts.com/docs/v5/concepts/colors-gradients-and-patterns/patterns/} for more info\n */\nexport class PicturePattern extends Pattern {\n\tdeclare public _settings: IPicturePatternSettings;\n\tdeclare public _privateSettings: IPicturePatternPrivate;\n\tdeclare public _events: IPicturePatternEvents;\n\n\tpublic static className: string = \"PicturePattern\";\n\tpublic static classNames: Array<string> = Pattern.classNames.concat([PicturePattern.className]);\n\n\tpublic _image: HTMLImageElement | undefined;\n\n\tpublic _beforeChanged() {\n\t\tsuper._beforeChanged();\n\n\t\tthis._clear = true;\n\n\t\tif (this.isDirty(\"src\")) {\n\t\t\tthis._load();\n\t\t}\n\n\t\tconst canvas = this.get(\"canvas\");\n\t\tif (canvas) {\n\t\t\tthis.set(\"width\", canvas.width);\n\t\t\tthis.set(\"height\", canvas.height)\n\t\t}\t\t\n\t}\n\n\tprotected _draw() {\n\t\tsuper._draw();\n\t\tconst image = this._image;\n\t\tif (image) {\n\t\t\tconst patternWidth = this.get(\"width\", 100);\n\t\t\tconst patternHeight = this.get(\"height\", 100);\n\n\t\t\t// Fit\n\t\t\tconst fit = this.get(\"fit\", \"image\");\n\t\t\tlet width = 0;\n\t\t\tlet height = 0;\n\t\t\tif (fit == \"pattern\") {\n\t\t\t\twidth = patternWidth;\n\t\t\t\theight = patternHeight;\n\t\t\t}\n\t\t\telse {\n\t\t\t\twidth = image.width;\n\t\t\t\theight = image.height;\n\t\t\t\tif (fit == \"image\") {\n\t\t\t\t\tthis.set(\"width\", width);\n\t\t\t\t\tthis.set(\"height\", height);\n\t\t\t\t}\n\t\t\t}\n\n\t\t\t// Position\n\t\t\tconst centered = this.get(\"centered\", true);\n\t\t\tlet x = 0;\n\t\t\tlet y = 0;\n\t\t\tif (centered) {\n\t\t\t\tx = patternWidth / 2 - width / 2;\n\t\t\t\ty = patternHeight / 2 - height / 2;\n\t\t\t}\n\t\t\tthis._display.image(image, width, height, x, y);\n\t\t}\n\n\t\tconst canvas = this.get(\"canvas\");\n\t\tif (canvas) {\n\t\t\tthis._display.image(canvas, canvas.width, canvas.height, 0, 0);\n\t\t}\n\t}\n\n\tprotected _load() {\n\t\tconst src = this.get(\"src\");\n\t\tif (src) {\n\t\t\tconst image = new Image();\n\t\t\t//image.crossOrigin = \"Anonymous\";\n\t\t\timage.src = src!;\n\t\t\timage.decode().then(() => {\n\t\t\t\tthis._image = image;\n\t\t\t\tthis._draw();\n\t\t\t\tif (this.events.isEnabled(\"loaded\")) {\n\t\t\t\t\tthis.events.dispatch(\"loaded\", { type: \"loaded\", target: this });\n\t\t\t\t}\n\t\t\t}).catch((_error: any) => {\n\t\t\t\t// TODO: maybe raise error?\n\t\t\t});\n\t\t}\n\t}\n\n}","import { Entity } from \"../../util/Entity\";\r\n/**\r\n * Base class for patterns.\r\n *\r\n * @see {@link https://www.amcharts.com/docs/v5/concepts/colors-gradients-and-patterns/patterns/} for more info\r\n */\r\nexport class Pattern extends Entity {\r\n    constructor() {\r\n        super(...arguments);\r\n        Object.defineProperty(this, \"_display\", {\r\n            enumerable: true,\r\n            configurable: true,\r\n            writable: true,\r\n            value: this._root._renderer.makeGraphics()\r\n        });\r\n        Object.defineProperty(this, \"_backgroundDisplay\", {\r\n            enumerable: true,\r\n            configurable: true,\r\n            writable: true,\r\n            value: this._root._renderer.makeGraphics()\r\n        });\r\n        Object.defineProperty(this, \"_clear\", {\r\n            enumerable: true,\r\n            configurable: true,\r\n            writable: true,\r\n            value: false\r\n        });\r\n        Object.defineProperty(this, \"_pattern\", {\r\n            enumerable: true,\r\n            configurable: true,\r\n            writable: true,\r\n            value: void 0\r\n        });\r\n    }\r\n    _afterNew() {\r\n        // Applying themes because pattern will not have parent\r\n        super._afterNewApplyThemes();\r\n    }\r\n    get pattern() {\r\n        return this._pattern;\r\n    }\r\n    _draw() { }\r\n    _beforeChanged() {\r\n        super._beforeChanged();\r\n        if (this.isDirty(\"repetition\") || this.isDirty(\"width\") || this.isDirty(\"height\") || this.isDirty(\"rotation\") || this.isDirty(\"strokeWidth\") || this.isDirty(\"strokeDasharray\") || this.isDirty(\"strokeDashoffset\") || this.isDirty(\"colorOpacity\") || this.isDirty(\"fillOpacity\")) {\r\n            this._clear = true;\r\n        }\r\n        this._checkDirtyFill();\r\n    }\r\n    _checkDirtyFill() {\r\n        if (this.isDirty(\"color\") || this.isDirty(\"fill\")) {\r\n            this._clear = true;\r\n        }\r\n    }\r\n    _changed() {\r\n        super._changed();\r\n        if (this._clear) {\r\n            const repetition = this.get(\"repetition\", \"\");\r\n            const width = this.get(\"width\", 100);\r\n            const height = this.get(\"height\", 100);\r\n            const fill = this.get(\"fill\");\r\n            const fillOpacity = this.get(\"fillOpacity\", 1);\r\n            const backgroundDisplay = this._backgroundDisplay;\r\n            const display = this._display;\r\n            display.clear();\r\n            backgroundDisplay.clear();\r\n            if (fill && (fillOpacity > 0)) {\r\n                backgroundDisplay.beginFill(fill, fillOpacity);\r\n                backgroundDisplay.drawRect(0, 0, width, height);\r\n                backgroundDisplay.endFill();\r\n            }\r\n            display.angle = this.get(\"rotation\", 0);\r\n            //display.pivot = { x: width / 2, y: height / 2 };\r\n            this._draw();\r\n            this._pattern = this._root._renderer.createPattern(display, backgroundDisplay, repetition, width, height);\r\n        }\r\n        this._clear = false;\r\n    }\r\n}\r\nObject.defineProperty(Pattern, \"className\", {\r\n    enumerable: true,\r\n    configurable: true,\r\n    writable: true,\r\n    value: \"Pattern\"\r\n});\r\nObject.defineProperty(Pattern, \"classNames\", {\r\n    enumerable: true,\r\n    configurable: true,\r\n    writable: true,\r\n    value: Entity.classNames.concat([Pattern.className])\r\n});\r\n//# sourceMappingURL=Pattern.js.map","import type { IGraphics, IPattern } from \"../backend/Renderer\";\nimport type { Color } from \"../../util/Color\";\n\nimport { Entity, IEntitySettings, IEntityPrivate, IEntityEvents } from \"../../util/Entity\";\n\nexport interface IPatternSettings extends IEntitySettings {\n\n\t/**\n\t * Rotation of patterm in degrees. Supported values: -90 to 90.\n\t *\n\t * @default 0\n\t * @see {@link https://www.amcharts.com/docs/v5/concepts/colors-gradients-and-patterns/patterns/#Rotation} for more info\n\t */\n\trotation?: number;\n\n\t/**\n\t * How pattern tiles are repeated when filling the area.\n\t *\n\t * @see {@link https://www.amcharts.com/docs/v5/concepts/colors-gradients-and-patterns/patterns/#Repetition} for more info\n\t */\n\trepetition?: \"repeat\" | \"repeat-x\" | \"repeat-y\" | \"no-repeat\";\n\n\t/**\n\t * Width of the pattern tile, in pixels.\n\t *\n\t * @see {@link https://www.amcharts.com/docs/v5/concepts/colors-gradients-and-patterns/patterns/#Sizing_patterns} for more info\n\t */\n\twidth?: number;\n\n\t/**\n\t * Width of the pattern tile, in pixels.\n\t *\n\t * @see {@link https://www.amcharts.com/docs/v5/concepts/colors-gradients-and-patterns/patterns/#Sizing_patterns} for more info\n\t */\n\theight?: number;\n\n\t/**\n\t * Color of the pattern shape.\n\t *\n\t * @see {@link https://www.amcharts.com/docs/v5/concepts/colors-gradients-and-patterns/patterns/#Colors} for more info\n\t */\n\tcolor?: Color;\n\n\t/**\n\t * Opacity of the pattern shape.\n\t *\n\t * @see {@link https://www.amcharts.com/docs/v5/concepts/colors-gradients-and-patterns/patterns/#Colors} for more info\n\t */\n\tcolorOpacity?: number;\n\n\t/**\n\t * Width of the pattern's line elements.\n\t *\n\t * @default 1\n\t */\n\tstrokeWidth?: number;\n\n\t/**\n\t * Stroke (border or line) dash settings.\n\t *\n\t * @see {@link https://www.amcharts.com/docs/v5/concepts/colors-gradients-and-patterns/#Dashed_lines} for more information\n\t */\n\tstrokeDasharray?: number[] | number;\n\n\t/**\n\t * Stroke (border or line) dash offset.\n\t *\n\t * @see {@link https://www.amcharts.com/docs/v5/concepts/colors-gradients-and-patterns/#Dashed_lines} for more information\n\t */\n\tstrokeDashoffset?: number;\n\n\t/**\n\t * Color to fill gaps between pattern shapes.\n\t *\n\t * @see {@link https://www.amcharts.com/docs/v5/concepts/colors-gradients-and-patterns/patterns/#Colors} for more info\n\t */\n\tfill?: Color;\n\n\t/**\n\t * Opacity of the fill for gaps between pattern shapes.\n\t *\n\t * @see {@link https://www.amcharts.com/docs/v5/concepts/colors-gradients-and-patterns/patterns/#Colors} for more info\n\t */\n\tfillOpacity?: number;\n\n\t/**\n\t * @ignore\n\t */\n\tcolorInherited?: boolean;\n\n\t/**\n\t * @ignore\n\t */\n\tfillInherited?: boolean;\n}\n\nexport interface IPatternPrivate extends IEntityPrivate {\n}\n\nexport interface IPatternEvents extends IEntityEvents {\n}\n\n/**\n * Base class for patterns.\n *\n * @see {@link https://www.amcharts.com/docs/v5/concepts/colors-gradients-and-patterns/patterns/} for more info\n */\nexport class Pattern extends Entity {\n\tprotected _afterNew() {\n\t\t// Applying themes because pattern will not have parent\n\t\tsuper._afterNewApplyThemes();\n\t}\n\n\tdeclare public _settings: IPatternSettings;\n\tdeclare public _privateSettings: IPatternPrivate;\n\n\tpublic static className: string = \"Pattern\";\n\tpublic static classNames: Array<string> = Entity.classNames.concat([Pattern.className]);\n\n\tpublic _display: IGraphics = this._root._renderer.makeGraphics();\n\tpublic _backgroundDisplay: IGraphics = this._root._renderer.makeGraphics();\n\n\tprotected _clear = false;\n\n\tprotected _pattern: IPattern | undefined | null;\n\n\tpublic get pattern(): IPattern | undefined | null {\n\t\treturn this._pattern;\n\t}\n\n\tprotected _draw(): void { }\n\n\tpublic _beforeChanged() {\n\t\tsuper._beforeChanged();\n\n\t\tif (this.isDirty(\"repetition\") || this.isDirty(\"width\") || this.isDirty(\"height\") || this.isDirty(\"rotation\") || this.isDirty(\"strokeWidth\") || this.isDirty(\"strokeDasharray\") || this.isDirty(\"strokeDashoffset\") || this.isDirty(\"colorOpacity\") || this.isDirty(\"fillOpacity\")) {\n\t\t\tthis._clear = true;\n\t\t}\n\n\t\tthis._checkDirtyFill();\n\t}\n\n\tprotected _checkDirtyFill() {\n\t\tif (this.isDirty(\"color\") || this.isDirty(\"fill\")) {\n\t\t\tthis._clear = true;\n\t\t}\n\t}\n\n\tpublic _changed() {\n\t\tsuper._changed();\n\n\t\tif (this._clear) {\n\t\t\tconst repetition = this.get(\"repetition\", \"\");\n\t\t\tconst width = this.get(\"width\", 100);\n\t\t\tconst height = this.get(\"height\", 100);\n\t\t\tconst fill = this.get(\"fill\");\n\t\t\tconst fillOpacity = this.get(\"fillOpacity\", 1);\n\n\t\t\tconst backgroundDisplay = this._backgroundDisplay;\n\t\t\tconst display = this._display;\n\n\t\t\tdisplay.clear();\n\t\t\tbackgroundDisplay.clear();\n\n\t\t\tif (fill && (fillOpacity > 0)) {\n\t\t\t\tbackgroundDisplay.beginFill(fill, fillOpacity);\n\t\t\t\tbackgroundDisplay.drawRect(0, 0, width, height);\n\t\t\t\tbackgroundDisplay.endFill();\n\t\t\t}\n\n\t\t\tdisplay.angle = this.get(\"rotation\", 0);\n\t\t\t//display.pivot = { x: width / 2, y: height / 2 };\n\t\t\tthis._draw();\n\n\t\t\tthis._pattern = this._root._renderer.createPattern(display, backgroundDisplay, repetition, width, height);\n\t\t}\n\n\t\tthis._clear = false;\n\t}\n}\n","/**\r\n * From https://github.com/pixijs/pixi.js/blob/3dd0ff9a935f0bc13a09aefff9eb2872f02c51b9/packages/canvas/canvas-renderer/src/utils/mapCanvasBlendModesToPixi.ts#L13\r\n */\r\nexport var BlendMode;\r\n(function (BlendMode) {\r\n    BlendMode[\"ADD\"] = \"lighter\";\r\n    BlendMode[\"COLOR\"] = \"color\";\r\n    BlendMode[\"COLOR_BURN\"] = \"color-burn\";\r\n    BlendMode[\"COLOR_DODGE\"] = \"color-dodge\";\r\n    BlendMode[\"DARKEN\"] = \"darken\";\r\n    BlendMode[\"DIFFERENCE\"] = \"difference\";\r\n    BlendMode[\"DST_OVER\"] = \"destination-over\";\r\n    BlendMode[\"EXCLUSION\"] = \"exclusion\";\r\n    BlendMode[\"HARD_LIGHT\"] = \"hard-light\";\r\n    BlendMode[\"HUE\"] = \"hue\";\r\n    BlendMode[\"LIGHTEN\"] = \"lighten\";\r\n    BlendMode[\"LUMINOSITY\"] = \"luminosity\";\r\n    BlendMode[\"MULTIPLY\"] = \"multiply\";\r\n    BlendMode[\"NORMAL\"] = \"source-over\";\r\n    BlendMode[\"OVERLAY\"] = \"overlay\";\r\n    BlendMode[\"SATURATION\"] = \"saturation\";\r\n    BlendMode[\"SCREEN\"] = \"screen\";\r\n    BlendMode[\"SOFT_LIGHT\"] = \"soft-light\";\r\n    BlendMode[\"SRC_ATOP\"] = \"source-atop\";\r\n    BlendMode[\"XOR\"] = \"xor\";\r\n})(BlendMode || (BlendMode = {}));\r\n//# sourceMappingURL=Renderer.js.map","import type { IDisposer } from \"../../util/Disposer\";\nimport type { IPoint } from \"../../util/IPoint\";\nimport type { Color } from \"../../util/Color\";\nimport type { Percent } from \"../../util/Percent\";\nimport type { Matrix } from \"../../util/Matrix\";\nimport type { IBounds } from \"../../util/IBounds\";\n\nexport interface IGradient {\n\taddColorStop(offset: number, color: string): void;\n}\n\n/**\n * Represents an object describing color switching point in a gradiend.\n *F\n * @see {@link https://www.amcharts.com/docs/v5/concepts/colors-gradients-and-patterns/gradients/} for more info\n */\nexport interface IGradientStop {\n\n\t/**\n\t * Color.\n\t */\n\tcolor?: Color;\n\n\t/**\n\t * Offset defines where in the gradient the color should kick in. Values\n\t * from 0 to 1 are possible with 0 meaning start, 0.5 half-way through the\n\t * gradient, etc.\n\t */\n\toffset?: number;\n\n\t/**\n\t * Transparency of the color. 0 - completely transparent, 1 - fully opaque.\n\t */\n\topacity?: number;\n\n\t/**\n\t * Sets lightness of the color.\n\t *\n\t * @see {@link https://www.amcharts.com/docs/v5/concepts/colors-gradients-and-patterns/gradients/#Brightness} for more info\n\t */\n\tlighten?: number;\n\n\t/**\n\t * Sets brightness of the color.\n\t *\n\t * @see {@link https://www.amcharts.com/docs/v5/concepts/colors-gradients-and-patterns/gradients/#Brightness} for more info\n\t */\n\tbrighten?: number;\n\n\t/**\n\t * @ignore\n\t */\n\tcolorInherited?: boolean;\n\n\t/**\n\t * @ignore\n\t */\n\topacityInherited?: boolean;\n\n}\n\nexport interface IPattern {\n}\n\nexport type IPointerEvent = PointerEvent | MouseEvent | Touch;\n\nexport type Id = number | null;\n\nexport interface IRendererEvent<E> {\n\tevent: E;\n\tpoint: IPoint;\n\tid: Id;\n\tsimulated: boolean;\n\tnative: boolean;\n}\n\nexport interface IRendererEvents {\n\tclick: IRendererEvent<IPointerEvent>;\n\trightclick: IRendererEvent<IPointerEvent>;\n\tmiddleclick: IRendererEvent<IPointerEvent>;\n\tdblclick: IRendererEvent<IPointerEvent>;\n\tglobalpointermove: IRendererEvent<IPointerEvent>,\n\tglobalpointerup: IRendererEvent<IPointerEvent>,\n\tpointerover: IRendererEvent<IPointerEvent>;\n\tpointerout: IRendererEvent<IPointerEvent>;\n\tpointerdown: IRendererEvent<IPointerEvent>;\n\tpointermove: IRendererEvent<IPointerEvent>;\n\tpointerup: IRendererEvent<IPointerEvent>;\n\twheel: IRendererEvent<WheelEvent>;\n}\n\nexport interface IDisplayObject extends IDisposer {\n\tmask: IGraphics | null;\n\tvisible: boolean;\n\tinteractive: boolean;\n\tinactive: boolean | null;\n\twheelable: boolean;\n\tcancelTouch: boolean;\n\tisMeasured: boolean;\n\tbuttonMode: boolean;\n\talpha: number;\n\tangle: number;\n\tscale: number;\n\tcrisp: boolean;\n\tx: number;\n\ty: number;\n\tpivot: IPoint;\n\tfilter?: string;\n\tcursorOverStyle?: string;\n\texportable?: boolean;\n\n\t_setMatrix(): void;\n\tgetLayer(): ILayer;\n\tsetLayer(order: number | undefined, margin: IMargin | undefined): void;\n\tmarkDirtyLayer(deep?: boolean): void;\n\tclear(): void;\n\tinvalidateBounds(): void;\n\ttoLocal(point: IPoint): IPoint;\n\ttoGlobal(point: IPoint): IPoint;\n\tgetLocalBounds(): IBounds;\n\tgetAdjustedBounds(bounds?: IBounds): IBounds;\n\ton<C, Key extends keyof IRendererEvents>(key: Key, callback: (this: C, event: IRendererEvents[Key]) => void, context?: C): IDisposer;\n\thovering(): boolean;\n\tgetCanvas(): HTMLCanvasElement;\n\n\t/**\n\t * @ignore\n\t */\n\tgetLocalMatrix(): Matrix;\n}\n\nexport interface IContainer extends IDisplayObject {\n\tinteractiveChildren: boolean;\n\t_renderer:IRenderer;\n\taddChild(child: IDisplayObject): void;\n\taddChildAt(child: IDisplayObject, index: number): void;\n\tremoveChild(child: IDisplayObject): void;\n}\n\n\n/**\n * From https://github.com/pixijs/pixi.js/blob/3dd0ff9a935f0bc13a09aefff9eb2872f02c51b9/packages/canvas/canvas-renderer/src/utils/mapCanvasBlendModesToPixi.ts#L13\n */\nexport enum BlendMode {\n\tADD = \"lighter\",\n\tCOLOR = \"color\",\n\tCOLOR_BURN = \"color-burn\",\n\tCOLOR_DODGE = \"color-dodge\",\n\tDARKEN = \"darken\",\n\tDIFFERENCE = \"difference\",\n\tDST_OVER = \"destination-over\",\n\tEXCLUSION = \"exclusion\",\n\tHARD_LIGHT = \"hard-light\",\n\tHUE = \"hue\",\n\tLIGHTEN = \"lighten\",\n\tLUMINOSITY = \"luminosity\",\n\tMULTIPLY = \"multiply\",\n\tNORMAL = \"source-over\",\n\tOVERLAY = \"overlay\",\n\tSATURATION = \"saturation\",\n\tSCREEN = \"screen\",\n\tSOFT_LIGHT = \"soft-light\",\n\tSRC_ATOP = \"source-atop\",\n\tXOR = \"xor\",\n}\n\nexport interface IGraphics extends IDisplayObject {\n\tblendMode: BlendMode;\n\n\tclear(): void;\n\n\tbeginFill(color?: Color | IGradient | IPattern, alpha?: number): void;\n\tendFill(): void;\n\tbeginPath(): void;\n\n\tlineStyle(width?: number, color?: Color | IGradient | IPattern, alpha?: number, lineJoin?: \"miter\" | \"round\" | \"bevel\", lineCap?: \"butt\" | \"round\" | \"square\"): void;\n\tsetLineDash(dash?: number[]): void;\n\tsetLineDashOffset(dashOffset?: number): void;\n\tendStroke(): void;\n\n\tdrawRect(x: number, y: number, width: number, height: number): void;\n\tdrawCircle(x: number, y: number, radius: number): void;\n\tdrawEllipse(x: number, y: number, radiusX: number, radiusY: number): void;\n\tarc(cx: number, cy: number, radius: number, startAngle: number, endAngle: number, anticlockwise?: boolean): void;\n\tarcTo(x1: number, y1: number, x2: number, y2: number, radius: number): void;\n\tlineTo(x: number, y: number): void;\n\tmoveTo(x: number, y: number): void;\n\tclosePath(): void;\n\tbezierCurveTo(cpX: number, cpY: number, cpX2: number, cpY2: number, toX: number, toY: number): void;\n\tquadraticCurveTo(cpX: number, cpY: number, toX: number, toY: number): void;\n\tsvgPath(path: string): void;\n\timage(image: HTMLImageElement | HTMLCanvasElement, width: number, height: number, x: number, y: number): void;\n\tshadow(color: Color, blur?: number, offsetX?: number, offsetY?: number, opacity?: number): void;\n}\n\n/**\n * @ignore\n */\nexport interface IText extends IDisplayObject {\n\tresolution: number;\n\ttext: string;\n\tstyle: ITextStyle;\n\ttextVisible: boolean;\n}\n\n/**\n * @ignore\n */\nexport interface IRadialText extends IText {\n\ttextType?: \"regular\" | \"circular\" | \"radial\" | \"aligned\" | \"adjusted\";\n\tradius?: number;\n\tstartAngle?: number;\n\trelativeAngle?: number;\n\tinside?: boolean;\n\torientation?: \"inward\" | \"outward\" | \"auto\";\n\tkerning?: number;\n}\n\nexport interface ITextStyle {\n\t//wordWrapWidth: number = 100;\n\tfill?: Color | IGradient | IPattern;\n\ttextAlign?: \"start\" | \"end\" | \"left\" | \"right\" | \"center\";\n\tverticalAlign?: \"baseline\" | \"sub\" | \"super\";\n\tfontFamily?: string;\n\tfontSize?: string | number;\n\tfontWeight?: 'normal' | 'bold' | 'bolder' | 'lighter' | '100' | '200' | '300' | '400' | '500' | '600' | '700' | '800' | '900'\n\tfontStyle?: 'normal' | 'italic' | 'oblique';\n\tfontVariant?: \"normal\" | \"small-caps\";\n\ttextDecoration?: \"underline\" | \"line-through\";\n\tshadowColor?: Color | null;\n\tshadowBlur?: number;\n\tshadowOffsetX?: number;\n\tshadowOffsetY?: number;\n\tshadowOpacity?: number;\n\n\n\t// leading?: number;\n\t// letterSpacing?: number;\n\tlineHeight?: number | Percent;\n\tbaselineRatio?: number;\n\t// padding?: number;\n\t// stroke?: number;\n\t// strokeThickness?: number;\n\t// trim?: number;\n\t// wordWrap?: boolean;\n\tdirection?: \"ltr\" | \"rtl\";\n\ttextBaseline?: \"top\" | \"hanging\" | \"middle\" | \"alphabetic\" | \"ideographic\" | \"bottom\";\n\toversizedBehavior?: \"none\" | \"hide\" | \"fit\" | \"wrap\" | \"wrap-no-break\" | \"truncate\";\n\tbreakWords?: boolean;\n\tellipsis?: string;\n\tmaxWidth?: number;\n\tmaxHeight?: number;\n\tminScale?: number;\n}\n\nexport interface IPicture extends IDisplayObject {\n\timage: HTMLImageElement | undefined;\n\twidth?: number | undefined;\n\theight?: number | undefined;\n\tshadowColor?: Color;\n\tshadowBlur?: number;\n\tshadowOffsetX?: number;\n\tshadowOffsetY?: number;\n\tshadowOpacity?: number;\n}\n\nexport interface IRenderer extends IDisposer {\n\tdebugGhostView: boolean;\n\ttapToActivate: boolean;\n\ttapToActivateTimeout: number;\n\tresolution: number;\n\tremoveHovering(graphics:IDisplayObject):void;\n\tinteractionsEnabled: boolean;\n\tcreateLinearGradient(x1: number, y1: number, x2: number, y2: number): IGradient;\n\tcreateRadialGradient(x1: number, y1: number, radius1: number, x2: number, y2: number, radius2: number): IGradient;\n\tcreatePattern(graphics: IGraphics, background: IGraphics, repetition: string, width: number, height: number): IPattern;\n\tmakeContainer(): IContainer;\n\tmakeGraphics(): IGraphics;\n\tmakeText(text: string, style: ITextStyle): IText;\n\tmakeRadialText(text: string, style: ITextStyle): IText;\n\tmakeTextStyle(): ITextStyle;\n\tmakePicture(image: HTMLImageElement | undefined): IPicture;\n\tresize(canvasWidth: number, canvasHeight: number, domWidth: number, domHeight: number): void;\n\trender(root: IDisplayObject): void;\n\tgetCanvas(root: IDisplayObject, options?: ICanvasOptions): HTMLCanvasElement;\n\tview: HTMLElement;\n\tgetEvent<A extends IPointerEvent>(originalEvent: A, adjustPoint?: boolean): IRendererEvent<A>;\n\tgetObjectAtPoint(point: IPoint): IDisplayObject | undefined;\t\n\tresetImageArray():void;\n}\n\nexport interface ICanvasOptions {\n\tmaintainPixelRatio?: boolean;\n\tminWidth?: number;\n\tmaxWidth?: number;\n\tminHeight?: number;\n\tmaxHeight?: number;\n}\n\nexport interface IMargin {\n\tleft: number;\n\tright: number;\n\ttop: number;\n\tbottom: number;\n}\n\n/**\n * @ignore\n */\nexport interface ILayer {\n\tvisible: boolean;\n\torder: number;\n\twidth: number | undefined;\n\theight: number | undefined;\n\tdirty: boolean;\n\tmargin: IMargin | undefined;\n}\n","import { Layout, eachChildren } from \"./Layout\";\r\nimport * as $type from \"../util/Type\";\r\nimport { Percent } from \"../util/Percent\";\r\n/**\r\n * A horizontal children layout for [[Container]].\r\n *\r\n * @see {@link https://www.amcharts.com/docs/v5/concepts/common-elements/containers/#Layout} for more info\r\n */\r\nexport class HorizontalLayout extends Layout {\r\n    /**\r\n     * @ignore\r\n     */\r\n    updateContainer(container) {\r\n        let paddingLeft = container.get(\"paddingLeft\", 0);\r\n        let availableWidth = container.innerWidth();\r\n        let totalPercent = 0;\r\n        eachChildren(container, (child) => {\r\n            if (child.isVisible()) {\r\n                if (child.get(\"position\") == \"relative\") {\r\n                    let childWidth = child.get(\"width\");\r\n                    if (childWidth instanceof Percent) {\r\n                        totalPercent += childWidth.value;\r\n                        let w = availableWidth * childWidth.value;\r\n                        let minWidth = child.get(\"minWidth\", child.getPrivate(\"minWidth\", -Infinity));\r\n                        if (minWidth > w) {\r\n                            availableWidth -= minWidth;\r\n                            totalPercent -= childWidth.value;\r\n                        }\r\n                        let maxWidth = child.get(\"maxWidth\", child.getPrivate(\"maxWidth\", Infinity));\r\n                        if (w > maxWidth) {\r\n                            availableWidth -= maxWidth;\r\n                            totalPercent -= childWidth.value;\r\n                        }\r\n                    }\r\n                    else {\r\n                        if (!$type.isNumber(childWidth)) {\r\n                            childWidth = child.width();\r\n                        }\r\n                        availableWidth -= childWidth + child.get(\"marginLeft\", 0) + child.get(\"marginRight\", 0);\r\n                    }\r\n                }\r\n            }\r\n        });\r\n        if (availableWidth <= 0 || availableWidth == Infinity) {\r\n            availableWidth = .1;\r\n        }\r\n        //if (availableWidth > 0) {\r\n        eachChildren(container, (child) => {\r\n            if (child.isVisible()) {\r\n                if (child.get(\"position\") == \"relative\") {\r\n                    let childWidth = child.get(\"width\");\r\n                    if (childWidth instanceof Percent) {\r\n                        let privateWidth = availableWidth * childWidth.value / totalPercent - child.get(\"marginLeft\", 0) - child.get(\"marginRight\", 0);\r\n                        let minWidth = child.get(\"minWidth\", child.getPrivate(\"minWidth\", -Infinity));\r\n                        let maxWidth = child.get(\"maxWidth\", child.getPrivate(\"maxWidth\", Infinity));\r\n                        privateWidth = Math.min(Math.max(minWidth, privateWidth), maxWidth);\r\n                        child.setPrivate(\"width\", privateWidth);\r\n                    }\r\n                    else {\r\n                        if (child._prevSettings.width instanceof Percent) {\r\n                            child.setPrivate(\"width\", undefined);\r\n                        }\r\n                    }\r\n                }\r\n            }\r\n        });\r\n        //}\r\n        let prevX = paddingLeft;\r\n        eachChildren(container, (child) => {\r\n            if (child.get(\"position\") == \"relative\") {\r\n                if (child.isVisible()) {\r\n                    let bounds = child.adjustedLocalBounds();\r\n                    let marginLeft = child.get(\"marginLeft\", 0);\r\n                    let marginRight = child.get(\"marginRight\", 0);\r\n                    let maxWidth = child.get(\"maxWidth\");\r\n                    let left = bounds.left;\r\n                    let right = bounds.right;\r\n                    if (maxWidth) {\r\n                        if (right - left > maxWidth) {\r\n                            right = left + maxWidth;\r\n                        }\r\n                    }\r\n                    let x = prevX + marginLeft - left;\r\n                    child.setPrivate(\"x\", x);\r\n                    prevX = x + right + marginRight;\r\n                }\r\n                else {\r\n                    child.setPrivate(\"x\", undefined);\r\n                }\r\n            }\r\n        });\r\n    }\r\n}\r\nObject.defineProperty(HorizontalLayout, \"className\", {\r\n    enumerable: true,\r\n    configurable: true,\r\n    writable: true,\r\n    value: \"HorizontalLayout\"\r\n});\r\nObject.defineProperty(HorizontalLayout, \"classNames\", {\r\n    enumerable: true,\r\n    configurable: true,\r\n    writable: true,\r\n    value: Layout.classNames.concat([HorizontalLayout.className])\r\n});\r\n//# sourceMappingURL=HorizontalLayout.js.map","import { Layout, eachChildren } from \"./Layout\";\nimport * as $type from \"../util/Type\";\nimport { Percent } from \"../util/Percent\";\nimport type { Container } from \"./Container\";\n\n/**\n * A horizontal children layout for [[Container]].\n *\n * @see {@link https://www.amcharts.com/docs/v5/concepts/common-elements/containers/#Layout} for more info\n */\nexport class HorizontalLayout extends Layout {\n\n\tpublic static className: string = \"HorizontalLayout\";\n\tpublic static classNames: Array<string> = Layout.classNames.concat([HorizontalLayout.className]);\n\n\t/**\n\t * @ignore\n\t */\n\tpublic updateContainer(container: Container): void {\n\n\t\tlet paddingLeft = container.get(\"paddingLeft\", 0);\n\n\t\tlet availableWidth = container.innerWidth();\n\n\t\tlet totalPercent = 0;\n\n\t\teachChildren(container, (child) => {\n\t\t\tif (child.isVisible()) {\n\t\t\t\tif (child.get(\"position\") == \"relative\") {\n\t\t\t\t\tlet childWidth = child.get(\"width\");\n\t\t\t\t\tif (childWidth instanceof Percent) {\n\t\t\t\t\t\ttotalPercent += childWidth.value;\n\n\t\t\t\t\t\tlet w = availableWidth * childWidth.value;\n\t\t\t\t\t\tlet minWidth = child.get(\"minWidth\", child.getPrivate(\"minWidth\", -Infinity));\n\t\t\t\t\t\tif (minWidth > w) {\n\t\t\t\t\t\t\tavailableWidth -= minWidth;\n\t\t\t\t\t\t\ttotalPercent -= childWidth.value;\n\t\t\t\t\t\t}\n\t\t\t\t\t\tlet maxWidth = child.get(\"maxWidth\", child.getPrivate(\"maxWidth\", Infinity));\n\t\t\t\t\t\tif (w > maxWidth) {\n\t\t\t\t\t\t\tavailableWidth -= maxWidth;\n\t\t\t\t\t\t\ttotalPercent -= childWidth.value;\n\t\t\t\t\t\t}\n\t\t\t\t\t}\n\t\t\t\t\telse {\n\t\t\t\t\t\tif (!$type.isNumber(childWidth)) {\n\t\t\t\t\t\t\tchildWidth = child.width();\n\t\t\t\t\t\t}\n\t\t\t\t\t\tavailableWidth -= childWidth + child.get(\"marginLeft\", 0) + child.get(\"marginRight\", 0);\n\t\t\t\t\t}\n\t\t\t\t}\n\t\t\t}\n\t\t});\n\n\t\tif (availableWidth <= 0 || availableWidth == Infinity) {\n\t\t\tavailableWidth = .1;\n\t\t}\n\n\t\t//if (availableWidth > 0) {\n\t\teachChildren(container, (child) => {\n\t\t\tif (child.isVisible()) {\n\t\t\t\tif (child.get(\"position\") == \"relative\") {\n\t\t\t\t\tlet childWidth = child.get(\"width\");\n\t\t\t\t\tif (childWidth instanceof Percent) {\n\t\t\t\t\t\tlet privateWidth = availableWidth * childWidth.value / totalPercent - child.get(\"marginLeft\", 0) - child.get(\"marginRight\", 0);\n\t\t\t\t\t\tlet minWidth = child.get(\"minWidth\", child.getPrivate(\"minWidth\", -Infinity));\n\t\t\t\t\t\tlet maxWidth = child.get(\"maxWidth\", child.getPrivate(\"maxWidth\", Infinity));\n\t\t\t\t\t\tprivateWidth = Math.min(Math.max(minWidth, privateWidth), maxWidth);\n\n\t\t\t\t\t\tchild.setPrivate(\"width\", privateWidth);\n\t\t\t\t\t}\n\t\t\t\t\telse {\n\t\t\t\t\t\tif (child._prevSettings.width instanceof Percent) {\n\t\t\t\t\t\t\tchild.setPrivate(\"width\", undefined);\n\t\t\t\t\t\t}\n\t\t\t\t\t}\n\t\t\t\t}\n\t\t\t}\n\t\t});\n\t\t//}\n\n\t\tlet prevX = paddingLeft;\n\n\t\teachChildren(container, (child) => {\n\n\t\t\tif (child.get(\"position\") == \"relative\") {\n\t\t\t\tif (child.isVisible()) {\n\t\t\t\t\tlet bounds = child.adjustedLocalBounds();\n\t\t\t\t\tlet marginLeft = child.get(\"marginLeft\", 0);\n\t\t\t\t\tlet marginRight = child.get(\"marginRight\", 0);\n\n\t\t\t\t\tlet maxWidth = child.get(\"maxWidth\");\n\n\t\t\t\t\tlet left = bounds.left;\n\t\t\t\t\tlet right = bounds.right;\n\t\t\t\t\tif (maxWidth) {\n\t\t\t\t\t\tif (right - left > maxWidth) {\n\t\t\t\t\t\t\tright = left + maxWidth\n\t\t\t\t\t\t}\n\t\t\t\t\t}\n\n\t\t\t\t\tlet x = prevX + marginLeft - left;\n\t\t\t\t\tchild.setPrivate(\"x\", x);\n\t\t\t\t\tprevX = x + right + marginRight;\n\t\t\t\t}\n\t\t\t\telse {\n\t\t\t\t\tchild.setPrivate(\"x\", undefined);\n\t\t\t\t}\n\t\t\t}\n\t\t});\n\t}\n}\n","import { Entity } from \"../util/Entity\";\r\nexport function eachChildren(container, f) {\r\n    if (container.get(\"reverseChildren\", false)) {\r\n        container.children.eachReverse(f);\r\n    }\r\n    else {\r\n        container.children.each(f);\r\n    }\r\n}\r\n/**\r\n * Base class for [[Container]] layouts.\r\n */\r\nexport class Layout extends Entity {\r\n}\r\nObject.defineProperty(Layout, \"className\", {\r\n    enumerable: true,\r\n    configurable: true,\r\n    writable: true,\r\n    value: \"Layout\"\r\n});\r\nObject.defineProperty(Layout, \"classNames\", {\r\n    enumerable: true,\r\n    configurable: true,\r\n    writable: true,\r\n    value: Entity.classNames.concat([Layout.className])\r\n});\r\n//# sourceMappingURL=Layout.js.map","import type { Container } from \"./Container\";\nimport type { Sprite } from \"./Sprite\";\nimport { Entity, IEntitySettings, IEntityPrivate } from \"../util/Entity\";\n\nexport interface ILayoutSettings extends IEntitySettings {\n}\n\nexport interface ILayoutPrivate extends IEntityPrivate {\n}\n\nexport function eachChildren(container: Container, f: (sprite: Sprite) => void): void {\n    if (container.get(\"reverseChildren\", false)) {\n        container.children.eachReverse(f);\n    } else {\n        container.children.each(f);\n    }\n}\n\n/**\n * Base class for [[Container]] layouts.\n */\nexport abstract class Layout extends Entity {\n\tdeclare public _settings: ILayoutSettings;\n\tdeclare public _privateSettings: ILayoutPrivate;\n\n\tpublic static className: string = \"Layout\";\n\tpublic static classNames: Array<string> = Entity.classNames.concat([Layout.className]);\n\n\t/**\n\t * @ignore\n\t */\n\tpublic abstract updateContainer(_container: Container): void;\n}\n","import { Layout, eachChildren } from \"./Layout\";\r\nimport * as $type from \"../util/Type\";\r\nimport { Percent } from \"../util/Percent\";\r\n/**\r\n * A vertical children layout for [[Container]].\r\n *\r\n * @see {@link https://www.amcharts.com/docs/v5/concepts/common-elements/containers/#Layout} for more info\r\n */\r\nexport class VerticalLayout extends Layout {\r\n    /**\r\n     * @ignore\r\n     */\r\n    updateContainer(container) {\r\n        let paddingTop = container.get(\"paddingTop\", 0);\r\n        let availableHeight = container.innerHeight();\r\n        let totalPercent = 0;\r\n        eachChildren(container, (child) => {\r\n            if (child.isVisible()) {\r\n                if (child.get(\"position\") == \"relative\") {\r\n                    let childHeight = child.get(\"height\");\r\n                    if (childHeight instanceof Percent) {\r\n                        totalPercent += childHeight.value;\r\n                        let h = availableHeight * childHeight.value;\r\n                        let minHeight = child.get(\"minHeight\", child.getPrivate(\"minHeight\", -Infinity));\r\n                        if (minHeight > h) {\r\n                            availableHeight -= minHeight;\r\n                            totalPercent -= childHeight.value;\r\n                        }\r\n                        let maxHeight = child.get(\"maxHeight\", child.getPrivate(\"maxHeight\", Infinity));\r\n                        if (h > maxHeight) {\r\n                            availableHeight -= maxHeight;\r\n                            totalPercent -= childHeight.value;\r\n                        }\r\n                    }\r\n                    else {\r\n                        if (!$type.isNumber(childHeight)) {\r\n                            childHeight = child.height();\r\n                        }\r\n                        availableHeight -= childHeight + child.get(\"marginTop\", 0) + child.get(\"marginBottom\", 0);\r\n                    }\r\n                }\r\n            }\r\n        });\r\n        if (availableHeight <= 0 || availableHeight == Infinity) {\r\n            availableHeight = .1;\r\n        }\r\n        //if (availableHeight > 0) {\r\n        eachChildren(container, (child) => {\r\n            if (child.isVisible()) {\r\n                if (child.get(\"position\") == \"relative\") {\r\n                    let childHeight = child.get(\"height\");\r\n                    if (childHeight instanceof Percent) {\r\n                        let privateHeight = availableHeight * childHeight.value / totalPercent - child.get(\"marginTop\", 0) - child.get(\"marginBottom\", 0);\r\n                        let minHeight = child.get(\"minHeight\", child.getPrivate(\"minHeight\", -Infinity));\r\n                        let maxHeight = child.get(\"maxHeight\", child.getPrivate(\"maxHeight\", Infinity));\r\n                        privateHeight = Math.min(Math.max(minHeight, privateHeight), maxHeight);\r\n                        child.setPrivate(\"height\", privateHeight);\r\n                    }\r\n                    else {\r\n                        if (child._prevSettings.height instanceof Percent) {\r\n                            child.setPrivate(\"height\", undefined);\r\n                        }\r\n                    }\r\n                }\r\n            }\r\n        });\r\n        //}\r\n        let prevY = paddingTop;\r\n        eachChildren(container, (child) => {\r\n            if (child.get(\"position\") == \"relative\") {\r\n                if (child.isVisible()) {\r\n                    let bounds = child.adjustedLocalBounds();\r\n                    let marginTop = child.get(\"marginTop\", 0);\r\n                    let top = bounds.top;\r\n                    let bottom = bounds.bottom;\r\n                    let maxHeight = child.get(\"maxHeight\");\r\n                    if (maxHeight) {\r\n                        if (bottom - top > maxHeight) {\r\n                            bottom = top + maxHeight;\r\n                        }\r\n                    }\r\n                    let marginBottom = child.get(\"marginBottom\", 0);\r\n                    let y = prevY + marginTop - top;\r\n                    child.setPrivate(\"y\", y);\r\n                    prevY = y + bottom + marginBottom;\r\n                }\r\n                else {\r\n                    child.setPrivate(\"y\", undefined);\r\n                }\r\n            }\r\n        });\r\n    }\r\n}\r\nObject.defineProperty(VerticalLayout, \"className\", {\r\n    enumerable: true,\r\n    configurable: true,\r\n    writable: true,\r\n    value: \"VerticalLayout\"\r\n});\r\nObject.defineProperty(VerticalLayout, \"classNames\", {\r\n    enumerable: true,\r\n    configurable: true,\r\n    writable: true,\r\n    value: Layout.classNames.concat([VerticalLayout.className])\r\n});\r\n//# sourceMappingURL=VerticalLayout.js.map","import { Layout, eachChildren } from \"./Layout\";\nimport * as $type from \"../util/Type\";\nimport { Percent } from \"../util/Percent\";\nimport type { Container } from \"./Container\";\n\n\n/**\n * A vertical children layout for [[Container]].\n *\n * @see {@link https://www.amcharts.com/docs/v5/concepts/common-elements/containers/#Layout} for more info\n */\nexport class VerticalLayout extends Layout {\n\n\tpublic static className: string = \"VerticalLayout\";\n\tpublic static classNames: Array<string> = Layout.classNames.concat([VerticalLayout.className]);\n\n\t/**\n\t * @ignore\n\t */\n\tpublic updateContainer(container: Container): void {\n\t\tlet paddingTop = container.get(\"paddingTop\", 0);\n\n\t\tlet availableHeight = container.innerHeight();\n\t\tlet totalPercent = 0;\n\n\t\teachChildren(container, (child) => {\n\t\t\tif (child.isVisible()) {\n\t\t\t\tif (child.get(\"position\") == \"relative\") {\n\t\t\t\t\tlet childHeight = child.get(\"height\");\n\t\t\t\t\tif (childHeight instanceof Percent) {\n\t\t\t\t\t\ttotalPercent += childHeight.value;\n\n\t\t\t\t\t\tlet h = availableHeight * childHeight.value;\n\t\t\t\t\t\tlet minHeight = child.get(\"minHeight\", child.getPrivate(\"minHeight\", -Infinity));\n\t\t\t\t\t\tif (minHeight > h) {\n\t\t\t\t\t\t\tavailableHeight -= minHeight;\n\t\t\t\t\t\t\ttotalPercent -= childHeight.value;\n\t\t\t\t\t\t}\n\t\t\t\t\t\tlet maxHeight = child.get(\"maxHeight\", child.getPrivate(\"maxHeight\", Infinity));\n\t\t\t\t\t\tif (h > maxHeight) {\n\t\t\t\t\t\t\tavailableHeight -= maxHeight;\n\t\t\t\t\t\t\ttotalPercent -= childHeight.value;\n\t\t\t\t\t\t}\n\n\t\t\t\t\t}\n\t\t\t\t\telse {\n\t\t\t\t\t\tif (!$type.isNumber(childHeight)) {\n\t\t\t\t\t\t\tchildHeight = child.height();\n\t\t\t\t\t\t}\n\t\t\t\t\t\tavailableHeight -= childHeight + child.get(\"marginTop\", 0) + child.get(\"marginBottom\", 0);\n\t\t\t\t\t}\n\t\t\t\t}\n\t\t\t}\n\t\t})\n\n\t\tif (availableHeight <= 0 || availableHeight == Infinity) {\n\t\t\tavailableHeight = .1;\n\t\t}\n\n\t\t//if (availableHeight > 0) {\n\t\teachChildren(container, (child) => {\n\t\t\tif (child.isVisible()) {\n\t\t\t\tif (child.get(\"position\") == \"relative\") {\n\t\t\t\t\tlet childHeight = child.get(\"height\");\n\n\t\t\t\t\tif (childHeight instanceof Percent) {\n\t\t\t\t\t\tlet privateHeight = availableHeight * childHeight.value / totalPercent - child.get(\"marginTop\", 0) - child.get(\"marginBottom\", 0);\n\n\t\t\t\t\t\tlet minHeight = child.get(\"minHeight\", child.getPrivate(\"minHeight\", -Infinity));\n\t\t\t\t\t\tlet maxHeight = child.get(\"maxHeight\", child.getPrivate(\"maxHeight\", Infinity));\n\t\t\t\t\t\tprivateHeight = Math.min(Math.max(minHeight, privateHeight), maxHeight);\n\n\t\t\t\t\t\tchild.setPrivate(\"height\", privateHeight);\n\t\t\t\t\t}\n\t\t\t\t\telse {\n\t\t\t\t\t\tif(child._prevSettings.height instanceof Percent){\n\t\t\t\t\t\t\tchild.setPrivate(\"height\", undefined);\n\t\t\t\t\t\t}\n\t\t\t\t\t}\n\t\t\t\t}\n\t\t\t}\n\t\t});\n\t\t//}\n\n\t\tlet prevY = paddingTop;\n\n\t\teachChildren(container, (child) => {\n\t\t\tif (child.get(\"position\") == \"relative\") {\n\t\t\t\tif (child.isVisible()) {\n\t\t\t\t\tlet bounds = child.adjustedLocalBounds();\n\t\t\t\t\tlet marginTop = child.get(\"marginTop\", 0);\n\n\t\t\t\t\tlet top = bounds.top;\n\t\t\t\t\tlet bottom = bounds.bottom;\n\n\t\t\t\t\tlet maxHeight = child.get(\"maxHeight\");\n\t\t\t\t\tif (maxHeight) {\n\t\t\t\t\t\tif (bottom - top > maxHeight) {\n\t\t\t\t\t\t\tbottom = top + maxHeight;\n\t\t\t\t\t\t}\n\t\t\t\t\t}\n\n\t\t\t\t\tlet marginBottom = child.get(\"marginBottom\", 0);\n\t\t\t\t\tlet y = prevY + marginTop - top;\n\t\t\t\t\tchild.setPrivate(\"y\", y);\n\t\t\t\t\tprevY = y + bottom + marginBottom;\n\t\t\t\t}\n\t\t\t\telse {\n\t\t\t\t\tchild.setPrivate(\"y\", undefined);\n\t\t\t\t}\n\t\t\t}\n\t\t});\n\t}\n}\n","import { Layout, eachChildren } from \"./Layout\";\r\nimport * as $array from \"../util/Array\";\r\nimport * as $math from \"../util/Math\";\r\n/**\r\n * A grid children layout for [[Container]].\r\n *\r\n * @see {@link https://www.amcharts.com/docs/v5/concepts/common-elements/containers/#Layout} for more info\r\n */\r\nexport class GridLayout extends Layout {\r\n    _afterNew() {\r\n        this._setRawDefault(\"maxColumns\", Number.MAX_VALUE);\r\n        super._afterNew();\r\n    }\r\n    /**\r\n     * @ignore\r\n     */\r\n    updateContainer(container) {\r\n        let paddingLeft = container.get(\"paddingLeft\", 0);\r\n        let paddingRight = container.get(\"paddingRight\", 0);\r\n        let paddingTop = container.get(\"paddingTop\", 0);\r\n        let availableWidth = container.maxWidth() - paddingLeft - paddingRight;\r\n        let minCellWidth = availableWidth;\r\n        let maxCellWidth = 1;\r\n        eachChildren(container, (child) => {\r\n            if (child.get(\"visible\") && child.getPrivate(\"visible\") && !child.get(\"forceHidden\")) {\r\n                if (child.get(\"position\") != \"absolute\") {\r\n                    let childWidth = child.width();\r\n                    if (childWidth < minCellWidth) {\r\n                        minCellWidth = childWidth;\r\n                    }\r\n                    if (childWidth > maxCellWidth) {\r\n                        maxCellWidth = childWidth;\r\n                    }\r\n                }\r\n            }\r\n        });\r\n        minCellWidth = $math.fitToRange(minCellWidth, 1, availableWidth);\r\n        maxCellWidth = $math.fitToRange(maxCellWidth, 1, availableWidth);\r\n        let columnCount = 1;\r\n        if (this.get(\"fixedWidthGrid\")) {\r\n            columnCount = availableWidth / maxCellWidth;\r\n        }\r\n        else {\r\n            columnCount = availableWidth / minCellWidth;\r\n        }\r\n        columnCount = Math.max(1, Math.floor(columnCount));\r\n        columnCount = Math.min(this.get(\"maxColumns\", Number.MAX_VALUE), columnCount);\r\n        let columnWidths = this.getColumnWidths(container, columnCount, maxCellWidth, availableWidth);\r\n        let prevY = paddingTop;\r\n        let column = 0;\r\n        let maxColumnHeight = 0;\r\n        columnCount = columnWidths.length;\r\n        let prevX = paddingLeft;\r\n        eachChildren(container, (child) => {\r\n            if (child.get(\"position\") == \"relative\" && child.isVisible()) {\r\n                const marginTop = child.get(\"marginTop\", 0);\r\n                const marginBottom = child.get(\"marginBottom\", 0);\r\n                let bounds = child.adjustedLocalBounds();\r\n                let marginLeft = child.get(\"marginLeft\", 0);\r\n                let marginRight = child.get(\"marginRight\", 0);\r\n                let x = prevX + marginLeft - bounds.left;\r\n                let y = prevY + marginTop - bounds.top;\r\n                child.setPrivate(\"x\", x);\r\n                child.setPrivate(\"y\", y);\r\n                prevX += columnWidths[column] + marginRight;\r\n                maxColumnHeight = Math.max(maxColumnHeight, child.height() + marginTop + marginBottom);\r\n                column++;\r\n                if (column >= columnCount) {\r\n                    column = 0;\r\n                    prevX = paddingLeft;\r\n                    prevY += maxColumnHeight;\r\n                }\r\n            }\r\n        });\r\n    }\r\n    /**\r\n     * @ignore\r\n     */\r\n    getColumnWidths(container, columnCount, maxCellWidth, availableWidth) {\r\n        let totalWidth = 0;\r\n        let columnWidths = [];\r\n        let column = 0;\r\n        eachChildren(container, (child) => {\r\n            let bounds = child.adjustedLocalBounds();\r\n            if (child.get(\"position\") != \"absolute\" && child.isVisible()) {\r\n                if (this.get(\"fixedWidthGrid\")) {\r\n                    columnWidths[column] = maxCellWidth;\r\n                }\r\n                else {\r\n                    columnWidths[column] = Math.max(columnWidths[column] | 0, bounds.right - bounds.left + child.get(\"marginLeft\", 0) + child.get(\"marginRight\", 0));\r\n                }\r\n                if (column < container.children.length - 1) {\r\n                    column++;\r\n                    if (column == columnCount) {\r\n                        column = 0;\r\n                    }\r\n                }\r\n            }\r\n        });\r\n        $array.each(columnWidths, (w) => {\r\n            totalWidth += w;\r\n        });\r\n        if (totalWidth > availableWidth) {\r\n            if (columnCount > 2) {\r\n                columnCount -= 1;\r\n                return this.getColumnWidths(container, columnCount, maxCellWidth, availableWidth);\r\n            }\r\n            else {\r\n                return [availableWidth];\r\n            }\r\n        }\r\n        return columnWidths;\r\n    }\r\n}\r\nObject.defineProperty(GridLayout, \"className\", {\r\n    enumerable: true,\r\n    configurable: true,\r\n    writable: true,\r\n    value: \"GridLayout\"\r\n});\r\nObject.defineProperty(GridLayout, \"classNames\", {\r\n    enumerable: true,\r\n    configurable: true,\r\n    writable: true,\r\n    value: Layout.classNames.concat([GridLayout.className])\r\n});\r\n//# sourceMappingURL=GridLayout.js.map","import { Layout, ILayoutSettings, ILayoutPrivate, eachChildren } from \"./Layout\";\nimport * as $array from \"../util/Array\";\nimport * as $math from \"../util/Math\";\nimport type { Container } from \"./Container\";\n\n\nexport interface IGridLayoutSettings extends ILayoutSettings {\n\n\t/**\n\t * If set to `true` all columns in the grid will be equal width.\n\t *\n\t * @default false\n\t */\n\tfixedWidthGrid?: boolean;\n\n\t/**\n\t * Maximum number of columns in the grid.\n\t */\n\tmaxColumns?: number;\n\n}\n\nexport interface IGridLayoutPrivate extends ILayoutPrivate {\n}\n\n/**\n * A grid children layout for [[Container]].\n *\n * @see {@link https://www.amcharts.com/docs/v5/concepts/common-elements/containers/#Layout} for more info\n */\nexport class GridLayout extends Layout {\n\n\tpublic static className: string = \"GridLayout\";\n\tpublic static classNames: Array<string> = Layout.classNames.concat([GridLayout.className]);\n\n\tdeclare public _settings: IGridLayoutSettings;\n\tdeclare public _privateSettings: IGridLayoutPrivate;\n\n\n\tprotected _afterNew() {\n\t\tthis._setRawDefault(\"maxColumns\", Number.MAX_VALUE);\n\t\tsuper._afterNew();\n\t}\n\n\t/**\n\t * @ignore\n\t */\n\tpublic updateContainer(container: Container): void {\n\t\tlet paddingLeft = container.get(\"paddingLeft\", 0);\n\t\tlet paddingRight = container.get(\"paddingRight\", 0);\n\t\tlet paddingTop = container.get(\"paddingTop\", 0);\n\n\t\tlet availableWidth = container.maxWidth() - paddingLeft - paddingRight;\n\n\t\tlet minCellWidth = availableWidth;\n\t\tlet maxCellWidth = 1;\n\n\t\teachChildren(container, (child) => {\n\t\t\tif(child.get(\"visible\") && child.getPrivate(\"visible\") && !child.get(\"forceHidden\")){\n\t\t\t\tif (child.get(\"position\") != \"absolute\") {\n\t\t\t\t\tlet childWidth = child.width();\n\n\t\t\t\t\tif (childWidth < minCellWidth) {\n\t\t\t\t\t\tminCellWidth = childWidth;\n\t\t\t\t\t}\n\t\t\t\t\tif (childWidth > maxCellWidth) {\n\t\t\t\t\t\tmaxCellWidth = childWidth;\n\t\t\t\t\t}\n\t\t\t\t}\n\t\t\t}\n\t\t});\n\n\t\tminCellWidth = $math.fitToRange(minCellWidth, 1, availableWidth);\n\t\tmaxCellWidth = $math.fitToRange(maxCellWidth, 1, availableWidth);\n\n\t\tlet columnCount = 1;\n\t\tif (this.get(\"fixedWidthGrid\")) {\n\t\t\tcolumnCount = availableWidth / maxCellWidth;\n\t\t}\n\t\telse {\n\t\t\tcolumnCount = availableWidth / minCellWidth;\n\t\t}\n\n\t\tcolumnCount = Math.max(1, Math.floor(columnCount));\n\t\tcolumnCount = Math.min(this.get(\"maxColumns\", Number.MAX_VALUE), columnCount);\n\n\t\tlet columnWidths = this.getColumnWidths(container, columnCount, maxCellWidth, availableWidth);\n\n\t\tlet prevY = paddingTop;\n\n\t\tlet column = 0;\n\t\tlet maxColumnHeight = 0;\n\n\t\tcolumnCount = columnWidths.length;\n\n\t\tlet prevX = paddingLeft;\n\n\t\teachChildren(container, (child) => {\n\t\t\tif (child.get(\"position\") == \"relative\" && child.isVisible()) {\n\t\t\t\tconst marginTop = child.get(\"marginTop\", 0);\n\t\t\t\tconst marginBottom = child.get(\"marginBottom\", 0);\n\n\t\t\t\tlet bounds = child.adjustedLocalBounds();\n\n\t\t\t\tlet marginLeft = child.get(\"marginLeft\", 0);\n\t\t\t\tlet marginRight = child.get(\"marginRight\", 0);\n\t\t\t\tlet x = prevX + marginLeft - bounds.left;\n\t\t\t\tlet y = prevY + marginTop - bounds.top;\n\n\t\t\t\tchild.setPrivate(\"x\", x);\n\t\t\t\tchild.setPrivate(\"y\", y);\n\n\t\t\t\tprevX += columnWidths[column] + marginRight;\n\n\t\t\t\tmaxColumnHeight = Math.max(maxColumnHeight, child.height() + marginTop + marginBottom);\n\n\t\t\t\tcolumn++;\n\n\t\t\t\tif (column >= columnCount) {\n\t\t\t\t\tcolumn = 0;\n\t\t\t\t\tprevX = paddingLeft;\n\t\t\t\t\tprevY += maxColumnHeight;\n\t\t\t\t}\n\t\t\t}\n\t\t});\n\t}\n\n\t/**\n\t * @ignore\n\t */\n\tpublic getColumnWidths(container: Container, columnCount: number, maxCellWidth: number, availableWidth: number): number[] {\n\t\tlet totalWidth = 0;\n\t\tlet columnWidths: Array<number> = [];\n\t\tlet column = 0;\n\n\t\teachChildren(container, (child) => {\n\t\t\tlet bounds = child.adjustedLocalBounds();\n\t\t\tif (child.get(\"position\") != \"absolute\" && child.isVisible()) {\n\t\t\t\tif (this.get(\"fixedWidthGrid\")) {\n\t\t\t\t\tcolumnWidths[column] = maxCellWidth;\n\t\t\t\t}\n\t\t\t\telse {\n\t\t\t\t\tcolumnWidths[column] = Math.max(columnWidths[column] | 0, bounds.right - bounds.left + child.get(\"marginLeft\", 0) + child.get(\"marginRight\", 0));\n\t\t\t\t}\n\n\t\t\t\tif (column < container.children.length - 1) {\n\t\t\t\t\tcolumn++;\n\t\t\t\t\tif (column == columnCount) {\n\t\t\t\t\t\tcolumn = 0;\n\t\t\t\t\t}\n\t\t\t\t}\n\t\t\t}\n\t\t});\n\n\t\t$array.each(columnWidths, (w) => {\n\t\t\ttotalWidth += w;\n\t\t})\n\n\t\tif (totalWidth > availableWidth) {\n\t\t\tif (columnCount > 2) {\n\t\t\t\tcolumnCount -= 1;\n\t\t\t\treturn this.getColumnWidths(container, columnCount, maxCellWidth, availableWidth);\n\t\t\t}\n\t\t\telse {\n\t\t\t\treturn [availableWidth];\n\t\t\t}\n\t\t}\n\n\t\treturn columnWidths;\n\t}\n}\n","/** @ignore */ /** */\r\nimport * as $type from \"./Type\";\r\nimport * as $utils from \"./Utils\";\r\nimport { Sprite } from \"../render/Sprite\";\r\nimport { TextFormatter } from \"./TextFormatter\";\r\n/**\r\n * @ignore\r\n */\r\nexport function populateString(target, string) {\r\n    if (string != null) {\r\n        string = \"\" + string;\r\n        string = TextFormatter.escape(string);\r\n        let tags = string.match(/\\{([^}]+)\\}/g);\r\n        let i;\r\n        if (tags) {\r\n            for (i = 0; i < tags.length; i++) {\r\n                let tag = tags[i].replace(/\\{([^}]+)\\}/, \"$1\");\r\n                let value = getTagValue(target, tag, \"\");\r\n                if (value == null) {\r\n                    value = \"\";\r\n                }\r\n                string = string.split(tags[i]).join(value);\r\n            }\r\n        }\r\n        string = TextFormatter.unescape(string);\r\n    }\r\n    else {\r\n        string = \"\";\r\n    }\r\n    // TODO: apply adapter?\r\n    return string;\r\n}\r\n/**\r\n * @ignore\r\n */\r\nfunction getTagValue(target, tagName, format) {\r\n    let value;\r\n    const dataItem = target.dataItem;\r\n    // Parse parts\r\n    let parts = [];\r\n    let reg = /(format[a-zA-Z]*)\\((.*)\\)|([^.]+)/g;\r\n    let matches;\r\n    while (true) {\r\n        matches = reg.exec(tagName);\r\n        if (matches === null) {\r\n            break;\r\n        }\r\n        if (matches[3]) {\r\n            // Simple property\r\n            parts.push({\r\n                prop: matches[3]\r\n            });\r\n            // Check if maybe we should force a formatter on this value\r\n            const dateFields = target.getDateFormatter().get(\"dateFields\", []);\r\n            const numericFields = target.getNumberFormatter().get(\"numericFields\", []);\r\n            const durationFields = target.getDurationFormatter().get(\"durationFields\", []);\r\n            if (dateFields.indexOf(matches[3]) !== -1) {\r\n                parts.push({\r\n                    method: \"formatDate\",\r\n                    params: []\r\n                });\r\n            }\r\n            else if (numericFields.indexOf(matches[3]) !== -1) {\r\n                parts.push({\r\n                    method: \"formatNumber\",\r\n                    params: []\r\n                });\r\n            }\r\n            else if (durationFields.indexOf(matches[3]) !== -1) {\r\n                parts.push({\r\n                    method: \"formatDuration\",\r\n                    params: []\r\n                });\r\n            }\r\n        }\r\n        else {\r\n            // Method\r\n            // Parse parameters\r\n            let params = [];\r\n            if ($utils.trim(matches[2]) != \"\") {\r\n                let reg2 = /'([^']*)'|\"([^\"]*)\"|([0-9\\-]+)/g;\r\n                let matches2;\r\n                while (true) {\r\n                    matches2 = reg2.exec(matches[2]);\r\n                    if (matches2 === null) {\r\n                        break;\r\n                    }\r\n                    params.push(matches2[1] || matches2[2] || matches2[3]);\r\n                }\r\n            }\r\n            parts.push({\r\n                method: matches[1],\r\n                params: params\r\n            });\r\n        }\r\n    }\r\n    // Check if we can retrieve the value from data item\r\n    if (dataItem) {\r\n        // Check values\r\n        value = getTagValueFromObject(target, parts, dataItem._settings);\r\n        // Check properties\r\n        if (value == null || $type.isObject(value)) { // isObject helps to solve problem with date axis, as for example dateX will get dateX from values object and won't get to the dateX date.\r\n            value = getTagValueFromObject(target, parts, dataItem);\r\n        }\r\n        // Check data context\r\n        let dataContext = dataItem.dataContext;\r\n        if (value == null && dataContext) {\r\n            value = getTagValueFromObject(target, parts, dataContext);\r\n            // Maybe it's a literal dot-separated name of the key in dataContext?\r\n            if (value == null) {\r\n                value = getTagValueFromObject(target, [{\r\n                        prop: tagName\r\n                    }], dataContext);\r\n            }\r\n            // scond data context level sometimes exist (tree map)\r\n            if (value == null && dataContext.dataContext) {\r\n                value = getTagValueFromObject(target, parts, dataContext.dataContext);\r\n            }\r\n        }\r\n        // Check component's data item\r\n        if (value == null && dataItem.component && dataItem.component.dataItem !== dataItem) {\r\n            value = getTagValue(dataItem.component, tagName, format);\r\n        }\r\n    }\r\n    // Check sprite's properties\r\n    if (value == null) {\r\n        value = getTagValueFromObject(target, parts, target);\r\n    }\r\n    // Finally, check the parent\r\n    if (value == null && target.parent) {\r\n        value = getTagValue(target.parent, tagName, format);\r\n    }\r\n    return value;\r\n}\r\n/**\r\n * @ignore\r\n */\r\nfunction getCustomDataValue(target, prop) {\r\n    const customData = target.getPrivate(\"customData\");\r\n    if ($type.isObject(customData)) {\r\n        return customData[prop];\r\n    }\r\n}\r\n/**\r\n * @ignore\r\n */\r\nexport function getTagValueFromObject(target, parts, object, format) {\r\n    let current = object;\r\n    let formatApplied = false;\r\n    for (let i = 0, len = parts.length; i < len; i++) {\r\n        let part = parts[i];\r\n        if (part.prop) {\r\n            // Regular property\r\n            if (current instanceof Sprite) {\r\n                let tmp = current.get(part.prop);\r\n                if (tmp == null)\r\n                    tmp = current.getPrivate(part.prop);\r\n                if (tmp == null)\r\n                    tmp = getCustomDataValue(current, part.prop);\r\n                if (tmp == null)\r\n                    tmp = current[part.prop];\r\n                current = tmp;\r\n            }\r\n            else if (current.get) {\r\n                let tmp = current.get(part.prop);\r\n                if (tmp == null)\r\n                    tmp = current[part.prop];\r\n                current = tmp;\r\n            }\r\n            else {\r\n                current = current[part.prop];\r\n            }\r\n            if (current == null) {\r\n                // Not set, return undefined\r\n                return;\r\n            }\r\n        }\r\n        else {\r\n            // Method\r\n            switch (part.method) {\r\n                case \"formatNumber\":\r\n                    let numberValue = $type.toNumber(current);\r\n                    if (numberValue != null) {\r\n                        current = target.getNumberFormatter().format(numberValue, format || part.params[0] || undefined);\r\n                        formatApplied = true;\r\n                    }\r\n                    break;\r\n                case \"formatDate\":\r\n                    let dateValue = $type.toDate(current);\r\n                    if (!$type.isDate(dateValue) || $type.isNaN(dateValue.getTime())) {\r\n                        // Was not able to get date out of value, quitting and letting\r\n                        // calling method try another value\r\n                        return;\r\n                    }\r\n                    if (dateValue != null) {\r\n                        current = target.getDateFormatter().format(dateValue, format || part.params[0] || undefined);\r\n                        formatApplied = true;\r\n                    }\r\n                    break;\r\n                case \"formatDuration\":\r\n                    let durationValue = $type.toNumber(current);\r\n                    if (durationValue != null) {\r\n                        current = target.getDurationFormatter().format(durationValue, format || part.params[0] || undefined, part.params[1] || undefined);\r\n                        formatApplied = true;\r\n                    }\r\n                    break;\r\n                case \"urlEncode\":\r\n                case \"encodeURIComponent\":\r\n                    current = encodeURIComponent(current);\r\n                    break;\r\n                default:\r\n                    if (current[part.method]) {\r\n                        current[part.method].apply(object, part.params);\r\n                    }\r\n                    break;\r\n            }\r\n        }\r\n    }\r\n    // Apply default format if it wasn't applied explicitly\r\n    if (!formatApplied) {\r\n        let formatParts = [{\r\n                method: \"\",\r\n                params: format\r\n            }];\r\n        if (format == null) {\r\n            // Format is not set\r\n            // Determine from the type of the value\r\n            if ($type.isNumber(current)) {\r\n                formatParts[0].method = \"formatNumber\";\r\n                formatParts[0].params = \"\";\r\n            }\r\n            else if ($type.isDate(current)) {\r\n                formatParts[0].method = \"formatDate\";\r\n                formatParts[0].params = \"\";\r\n            }\r\n        }\r\n        else {\r\n            // Format set\r\n            // Try to determine formatter based on the format\r\n            let formatterType = $utils.getFormat(format);\r\n            // format\r\n            if (formatterType === \"number\") {\r\n                formatParts[0].method = \"formatNumber\";\r\n            }\r\n            else if (formatterType === \"date\") {\r\n                formatParts[0].method = \"formatDate\";\r\n            }\r\n            else if (formatterType === \"duration\") {\r\n                formatParts[0].method = \"formatDuration\";\r\n            }\r\n        }\r\n        // Apply format\r\n        if (formatParts[0].method) {\r\n            current = getTagValueFromObject(target, formatParts, current);\r\n        }\r\n    }\r\n    return current;\r\n}\r\n//# sourceMappingURL=PopulateString.js.map","/** @ignore *//** */\n\nimport * as $type from \"./Type\";\nimport * as $utils from \"./Utils\";\nimport { Sprite } from \"../render/Sprite\";\nimport { TextFormatter } from \"./TextFormatter\";\n\n/**\n * @ignore\n */\nexport function populateString(target: Sprite, string: string): string {\n\tif (string != null) {\n\t\tstring = \"\" + string;\n\t\tstring = TextFormatter.escape(string);\n\t\tlet tags = string.match(/\\{([^}]+)\\}/g);\n\t\tlet i;\n\t\tif (tags) {\n\t\t\tfor (i = 0; i < tags.length; i++) {\n\t\t\t\tlet tag = tags[i].replace(/\\{([^}]+)\\}/, \"$1\");\n\t\t\t\tlet value = getTagValue(target, tag, \"\");\n\n\t\t\t\tif (value == null) {\n\t\t\t\t\tvalue = \"\";\n\t\t\t\t}\n\n\t\t\t\tstring = string.split(tags[i]).join(value);\n\t\t\t}\n\t\t}\n\t\tstring = TextFormatter.unescape(string);\n\t}\n\telse {\n\t\tstring = \"\";\n\t}\n\n\t// TODO: apply adapter?\n\treturn string;\n}\n\n/**\n * @ignore\n */\nfunction getTagValue(target: Sprite, tagName: string, format?: string): string {\n\tlet value: any;\n\tconst dataItem = target.dataItem;\n\n\t// Parse parts\n\tlet parts: any[] = [];\n\tlet reg = /(format[a-zA-Z]*)\\((.*)\\)|([^.]+)/g;\n\tlet matches;\n\n\twhile (true) {\n\t\tmatches = reg.exec(tagName);\n\n\t\tif (matches === null) {\n\t\t\tbreak;\n\t\t}\n\n\t\tif (matches[3]) {\n\t\t\t// Simple property\n\t\t\tparts.push({\n\t\t\t\tprop: matches[3]\n\t\t\t});\n\n\t\t\t// Check if maybe we should force a formatter on this value\n\t\t\tconst dateFields = target.getDateFormatter().get(\"dateFields\", []);\n\t\t\tconst numericFields = target.getNumberFormatter().get(\"numericFields\", []);\n\t\t\tconst durationFields = target.getDurationFormatter().get(\"durationFields\", []);\n\t\t\tif ((<any>dateFields).indexOf(matches[3]) !== -1) {\n\t\t\t\tparts.push({\n\t\t\t\t\tmethod: \"formatDate\",\n\t\t\t\t\tparams: []\n\t\t\t\t});\n\t\t\t}\n\t\t\telse if ((<any>numericFields).indexOf(matches[3]) !== -1) {\n\t\t\t\tparts.push({\n\t\t\t\t\tmethod: \"formatNumber\",\n\t\t\t\t\tparams: []\n\t\t\t\t});\n\t\t\t}\n\t\t\telse if ((<any>durationFields).indexOf(matches[3]) !== -1) {\n\t\t\t\tparts.push({\n\t\t\t\t\tmethod: \"formatDuration\",\n\t\t\t\t\tparams: []\n\t\t\t\t});\n\t\t\t}\n\t\t}\n\t\telse {\n\t\t\t// Method\n\t\t\t// Parse parameters\n\t\t\tlet params: any[] = [];\n\t\t\tif ($utils.trim(matches[2]) != \"\") {\n\t\t\t\tlet reg2 = /'([^']*)'|\"([^\"]*)\"|([0-9\\-]+)/g;\n\t\t\t\tlet matches2;\n\n\t\t\t\twhile (true) {\n\t\t\t\t\tmatches2 = reg2.exec(matches[2]);\n\n\t\t\t\t\tif (matches2 === null) {\n\t\t\t\t\t\tbreak;\n\t\t\t\t\t}\n\n\t\t\t\t\tparams.push(matches2[1] || matches2[2] || matches2[3])\n\t\t\t\t}\n\t\t\t}\n\t\t\tparts.push({\n\t\t\t\tmethod: matches[1],\n\t\t\t\tparams: params\n\t\t\t})\n\t\t}\n\t}\n\n\t// Check if we can retrieve the value from data item\n\tif (dataItem) {\n\n\n\t\t// Check values\n\t\tvalue = getTagValueFromObject(target, parts, dataItem._settings);\n\n\t\t// Check properties\n\t\tif (value == null || $type.isObject(value)) { // isObject helps to solve problem with date axis, as for example dateX will get dateX from values object and won't get to the dateX date.\n\t\t\tvalue = getTagValueFromObject(target, parts, dataItem);\n\t\t}\n\n\t\t// Check data context\n\t\tlet dataContext: any = dataItem.dataContext;\n\n\t\tif (value == null && dataContext) {\n\t\t\tvalue = getTagValueFromObject(target, parts, dataContext);\n\n\t\t\t// Maybe it's a literal dot-separated name of the key in dataContext?\n\t\t\tif (value == null) {\n\t\t\t\tvalue = getTagValueFromObject(target, [{\n\t\t\t\t\tprop: tagName\n\t\t\t\t}], dataContext);\n\t\t\t}\n\n\t\t\t// scond data context level sometimes exist (tree map)\n\t\t\tif (value == null && dataContext.dataContext) {\n\t\t\t\tvalue = getTagValueFromObject(target, parts, dataContext.dataContext);\n\t\t\t}\n\t\t}\n\n\t\t// Check component's data item\n\t\tif (value == null && dataItem.component && dataItem.component.dataItem !== dataItem) {\n\t\t\tvalue = getTagValue(dataItem.component, tagName, format);\n\t\t}\n\t}\n\n\t// Check sprite's properties\n\tif (value == null) {\n\t\tvalue = getTagValueFromObject(target, parts, target);\n\t}\n\n\t// Finally, check the parent\n\tif (value == null && target.parent) {\n\t\tvalue = getTagValue(target.parent, tagName, format);\n\t}\n\n\treturn value;\n}\n\n/**\n * @ignore\n */\nfunction getCustomDataValue(target: Sprite, prop: string): any {\n\tconst customData = target.getPrivate(\"customData\");\n\tif ($type.isObject(customData)) {\n\t\treturn (<any>customData)[prop];\n\t}\n}\n\n/**\n * @ignore\n */\nexport function getTagValueFromObject(target: Sprite, parts: any[], object: any, format?: string): any {\n\tlet current: any = object;\n\tlet formatApplied = false;\n\tfor (let i = 0, len = parts.length; i < len; i++) {\n\t\tlet part = parts[i];\n\t\tif (part.prop) {\n\t\t\t// Regular property\n\t\t\tif (current instanceof Sprite) {\n\t\t\t\tlet tmp = current.get(part.prop);\n\t\t\t\tif (tmp == null) tmp = current.getPrivate(part.prop);\n\t\t\t\tif (tmp == null) tmp = getCustomDataValue(current, part.prop);\n\t\t\t\tif (tmp == null) tmp = (<any>current)[part.prop];\n\t\t\t\tcurrent = tmp;\n\t\t\t}\n\t\t\telse if (current.get) {\n\t\t\t\tlet tmp = current.get(part.prop);\n\t\t\t\tif (tmp == null) tmp = (<any>current)[part.prop];\n\t\t\t\tcurrent = tmp;\n\t\t\t}\n\t\t\telse {\n\t\t\t\tcurrent = current[part.prop];\n\t\t\t}\n\n\t\t\tif (current == null) {\n\t\t\t\t// Not set, return undefined\n\t\t\t\treturn;\n\t\t\t}\n\t\t}\n\t\telse {\n\t\t\t// Method\n\n\t\t\tswitch (part.method) {\n\t\t\t\tcase \"formatNumber\":\n\t\t\t\t\tlet numberValue = $type.toNumber(current);\n\t\t\t\t\tif (numberValue != null) {\n\t\t\t\t\t\tcurrent = target.getNumberFormatter().format(\n\t\t\t\t\t\t\tnumberValue,\n\t\t\t\t\t\t\tformat || part.params[0] || undefined\n\t\t\t\t\t\t);\n\t\t\t\t\t\tformatApplied = true;\n\t\t\t\t\t}\n\t\t\t\t\tbreak;\n\t\t\t\tcase \"formatDate\":\n\t\t\t\t\tlet dateValue = $type.toDate(current);\n\t\t\t\t\tif (!$type.isDate(dateValue) || $type.isNaN(dateValue.getTime())) {\n\t\t\t\t\t\t// Was not able to get date out of value, quitting and letting\n\t\t\t\t\t\t// calling method try another value\n\t\t\t\t\t\treturn;\n\t\t\t\t\t}\n\t\t\t\t\tif (dateValue != null) {\n\t\t\t\t\t\tcurrent = target.getDateFormatter().format(\n\t\t\t\t\t\t\tdateValue,\n\t\t\t\t\t\t\tformat || part.params[0] || undefined\n\t\t\t\t\t\t);\n\t\t\t\t\t\tformatApplied = true;\n\t\t\t\t\t}\n\t\t\t\t\tbreak;\n\t\t\t\tcase \"formatDuration\":\n\t\t\t\t\tlet durationValue = $type.toNumber(current);\n\t\t\t\t\tif (durationValue != null) {\n\t\t\t\t\t\tcurrent = target.getDurationFormatter().format(\n\t\t\t\t\t\t\tdurationValue,\n\t\t\t\t\t\t\tformat || part.params[0] || undefined,\n\t\t\t\t\t\t\tpart.params[1] || undefined\n\t\t\t\t\t\t);\n\t\t\t\t\t\tformatApplied = true;\n\t\t\t\t\t}\n\t\t\t\t\tbreak;\n\t\t\t\tcase \"urlEncode\":\n\t\t\t\tcase \"encodeURIComponent\":\n\t\t\t\t\tcurrent = encodeURIComponent(current);\n\t\t\t\t\tbreak;\n\t\t\t\tdefault:\n\t\t\t\t\tif (current[part.method]) {\n\t\t\t\t\t\tcurrent[part.method].apply(object, part.params);\n\t\t\t\t\t}\n\t\t\t\t\tbreak;\n\t\t\t}\n\t\t}\n\t}\n\n\t// Apply default format if it wasn't applied explicitly\n\tif (!formatApplied) {\n\n\t\tlet formatParts = [{\n\t\t\tmethod: \"\",\n\t\t\tparams: format\n\t\t}];\n\n\t\tif (format == null) {\n\n\t\t\t// Format is not set\n\t\t\t// Determine from the type of the value\n\t\t\tif ($type.isNumber(current)) {\n\t\t\t\tformatParts[0].method = \"formatNumber\";\n\t\t\t\tformatParts[0].params = \"\";\n\t\t\t}\n\t\t\telse if ($type.isDate(current)) {\n\t\t\t\tformatParts[0].method = \"formatDate\";\n\t\t\t\tformatParts[0].params = \"\";\n\t\t\t}\n\n\t\t}\n\t\telse {\n\n\t\t\t// Format set\n\t\t\t// Try to determine formatter based on the format\n\t\t\tlet formatterType: string = $utils.getFormat(format);\n\n\t\t\t// format\n\t\t\tif (formatterType === \"number\") {\n\t\t\t\tformatParts[0].method = \"formatNumber\";\n\t\t\t}\n\t\t\telse if (formatterType === \"date\") {\n\t\t\t\tformatParts[0].method = \"formatDate\";\n\t\t\t}\n\t\t\telse if (formatterType === \"duration\") {\n\t\t\t\tformatParts[0].method = \"formatDuration\";\n\t\t\t}\n\n\t\t}\n\n\t\t// Apply format\n\t\tif (formatParts[0].method) {\n\t\t\tcurrent = getTagValueFromObject(target, formatParts, current);\n\t\t}\n\n\t}\n\n\treturn current;\n}","import { Color } from \"./Color\";\r\nimport * as $type from \"./Type\";\r\nexport class TextFormatter {\r\n    /**\r\n     * Replaces brackets with temporary placeholders.\r\n     *\r\n     * @ignore Exclude from docs\r\n     * @param text  Input text\r\n     * @return Escaped text\r\n     */\r\n    static escape(text) {\r\n        return text.\r\n            replace(/\\[\\[/g, this.prefix + \"1\").\r\n            replace(/([^\\/\\]]{1})\\]\\]/g, \"$1\" + this.prefix + \"2\").\r\n            replace(/\\]\\]/g, this.prefix + \"2\").\r\n            replace(/\\{\\{/g, this.prefix + \"3\").\r\n            replace(/\\}\\}/g, this.prefix + \"4\").\r\n            replace(/\\'\\'/g, this.prefix + \"5\");\r\n    }\r\n    /**\r\n     * Replaces placeholders back to brackets.\r\n     *\r\n     * @ignore Exclude from docs\r\n     * @param text  Escaped text\r\n     * @return Unescaped text\r\n     */\r\n    static unescape(text) {\r\n        return text.\r\n            replace(new RegExp(this.prefix + \"1\", \"g\"), \"[[\").\r\n            replace(new RegExp(this.prefix + \"2\", \"g\"), \"]]\").\r\n            replace(new RegExp(this.prefix + \"3\", \"g\"), \"{{\").\r\n            replace(new RegExp(this.prefix + \"4\", \"g\"), \"}}\").\r\n            replace(new RegExp(this.prefix + \"5\", \"g\"), \"''\");\r\n    }\r\n    /**\r\n     * Cleans up the text text for leftover double square brackets.\r\n     *\r\n     * @ignore Exclude from docs\r\n     * @param text  Input text\r\n     * @return Cleaned up text\r\n     */\r\n    static cleanUp(text) {\r\n        return text.\r\n            replace(/\\[\\[/g, \"[\").\r\n            replace(/\\]\\]/g, \"]\").\r\n            replace(/\\{\\{/g, \"{\").\r\n            replace(/\\}\\}/g, \"}\").\r\n            replace(/\\'\\'/g, \"'\");\r\n    }\r\n    /**\r\n     * Splits string into chunks. (style blocks, quoted blocks, regular blocks)\r\n     *\r\n     * If the second parameter `quotedBlocks` is set to `true` this method will\r\n     * also single out text blocks enclosed within single quotes that no\r\n     * formatting should be applied to, and they should be displayed as is.\r\n     *\r\n     * Default for the above is `false`, so that you can use single quote in text\r\n     * without escaping it.\r\n     *\r\n     * If enabled, single quotes can be escaped by doubling it - adding two\r\n     * single quotes, which will be replaced by a one single quote in the final\r\n     * output.\r\n     *\r\n     * @ignore Exclude from docs\r\n     * @param text          Text to chunk\r\n     * @param quotedBlocks  Use quoted blocks\r\n     * @param noFormatting  Formatting blocks will be treated as regular text\r\n     * @return Array of string chunks\r\n     */\r\n    static chunk(text, quotedBlocks = false, noFormatting = false) {\r\n        // Init result\r\n        let res = [];\r\n        // Replace double (escaped) square spaces and quotes with temporary codes\r\n        text = this.escape(text);\r\n        // Deal with style blocks\r\n        let chunks = quotedBlocks ? text.split(\"'\") : [text];\r\n        for (let i = 0; i < chunks.length; i++) {\r\n            let chunk = chunks[i];\r\n            // Empty?\r\n            if (chunk === \"\") {\r\n                continue;\r\n            }\r\n            if ((i % 2) === 0) {\r\n                // Text outside quotes\r\n                // Parse for style blocks which are \"text\" chunks, the rest chunks are\r\n                // \"value\"\r\n                chunk = chunk.replace(/\\]\\[/g, \"]\" + $type.PLACEHOLDER + \"[\");\r\n                chunk = chunk.replace(/\\[\\]/g, \"[ ]\");\r\n                let chunks2 = chunk.split(/[\\[\\]]+/);\r\n                for (let i2 = 0; i2 < chunks2.length; i2++) {\r\n                    let chunk2 = this.cleanUp(this.unescape(chunks2[i2]));\r\n                    // Placeholder?\r\n                    if (chunk2 === $type.PLACEHOLDER) {\r\n                        continue;\r\n                    }\r\n                    // Empty?\r\n                    if (chunk2 === \"\") {\r\n                        continue;\r\n                    }\r\n                    // Block or value\r\n                    if ((i2 % 2) === 0) {\r\n                        res.push({\r\n                            \"type\": \"value\",\r\n                            \"text\": chunk2\r\n                        });\r\n                    }\r\n                    else {\r\n                        res.push({\r\n                            \"type\": noFormatting ? \"value\" : \"format\",\r\n                            \"text\": \"[\" + chunk2 + \"]\"\r\n                        });\r\n                    }\r\n                }\r\n            }\r\n            else {\r\n                // A text within doublequotes\r\n                // All chunks are \"text\"\r\n                let chunks2 = chunk.split(/[\\[\\]]+/);\r\n                for (let i2 = 0; i2 < chunks2.length; i2++) {\r\n                    let chunk2 = this.cleanUp(this.unescape(chunks2[i2]));\r\n                    // Empty?\r\n                    if (chunk2 === \"\") {\r\n                        continue;\r\n                    }\r\n                    // Block or text\r\n                    if ((i2 % 2) === 0) {\r\n                        res.push({\r\n                            \"type\": \"text\",\r\n                            \"text\": chunk2\r\n                        });\r\n                    }\r\n                    else if (this.isImage(chunk2)) {\r\n                        res.push({\r\n                            \"type\": \"image\",\r\n                            \"text\": \"[\" + chunk2 + \"]\"\r\n                        });\r\n                    }\r\n                    else {\r\n                        res.push({\r\n                            \"type\": \"format\",\r\n                            \"text\": \"[\" + chunk2 + \"]\"\r\n                        });\r\n                    }\r\n                }\r\n            }\r\n        }\r\n        return res;\r\n    }\r\n    /**\r\n     * Checks if supplied format contains image information and should be\r\n     * formatted as such.\r\n     * I.e.: `[img: myImage.png]`\r\n     *\r\n     * @ignore\r\n     * @param  text  Format\r\n     * @return true if it is an image\r\n     */\r\n    static isImage(text) {\r\n        return text.match(/img[ ]?:/) ? true : false;\r\n    }\r\n    static getTextStyle(style) {\r\n        // let textStyle: string[] = [];\r\n        // let textFill: string | undefined;\r\n        let format = {};\r\n        if (style == \"\" || style == \"[ ]\") {\r\n            return {};\r\n        }\r\n        // Pre-process quoted text\r\n        const q = style.match(/('[^']*')|(\"[^\"]*\")/gi);\r\n        if (q) {\r\n            for (let i = 0; i < q.length; i++) {\r\n                style = style.replace(q[i], q[i].replace(/['\"]*/g, \"\").replace(/[ ]+/g, \"+\"));\r\n            }\r\n        }\r\n        // Get style parts\r\n        let b = style.match(/([\\w\\-]*:[\\s]?[^;\\s\\]]*)|(\\#[\\w]{1,6})|([\\w\\-]+)|(\\/)/gi);\r\n        // Empty?\r\n        if (!b) {\r\n            return {};\r\n        }\r\n        // Check each part\r\n        for (let i = 0; i < b.length; i++) {\r\n            if (b[i].match(/^(normal|bold|bolder|lighter|100|200|300|400|500|600|700|800|900)$/i)) {\r\n                format.fontWeight = b[i];\r\n            }\r\n            else if (b[i].match(/^(underline|line-through)$/i)) {\r\n                format.textDecoration = b[i];\r\n            }\r\n            else if (b[i] == \"/\") {\r\n                // Just closing tag\r\n                // Do nothing\r\n            }\r\n            else if (!b[i].match(/:/)) {\r\n                // Color\r\n                format.fill = Color.fromString(b[i]);\r\n            }\r\n            else {\r\n                const p = b[i].replace(\"+\", \" \").split(/:[ ]*/);\r\n                format[p[0]] = p[1];\r\n                //textStyle.push(b[i].replace(/^[a-zA-Z]:[ ]*/, \"\"));\r\n                //b[i] = b[i].replace(/\\+/g, \" \");\r\n            }\r\n        }\r\n        return format;\r\n    }\r\n}\r\nObject.defineProperty(TextFormatter, \"prefix\", {\r\n    enumerable: true,\r\n    configurable: true,\r\n    writable: true,\r\n    value: \"__amcharts__\"\r\n});\r\n//# sourceMappingURL=TextFormatter.js.map","import { Color } from \"./Color\"\nimport type { ITextStyle } from \"../render/backend/Renderer\"\nimport * as $type from \"./Type\";\n\n/**\n * Defines an interface for an object that holds a chunk of text.\n */\nexport interface ITextChunk {\n\n\t/**\n\t * Type of the chunk.\n\t */\n\t\"type\": \"value\" | \"text\" | \"format\" | \"image\",\n\n\t/**\n\t * Text.\n\t */\n\t\"text\": string\n\n}\n\nexport class TextFormatter {\n\n\tpublic static prefix = \"__amcharts__\";\n\n\t/**\n\t * Replaces brackets with temporary placeholders.\n\t *\n\t * @ignore Exclude from docs\n\t * @param text  Input text\n\t * @return Escaped text\n\t */\n\tpublic static escape(text: string): string {\n\t\treturn text.\n\t\t\treplace(/\\[\\[/g, this.prefix + \"1\").\n\t\t\treplace(/([^\\/\\]]{1})\\]\\]/g, \"$1\" + this.prefix + \"2\").\n\t\t\treplace(/\\]\\]/g, this.prefix + \"2\").\n\t\t\treplace(/\\{\\{/g, this.prefix + \"3\").\n\t\t\treplace(/\\}\\}/g, this.prefix + \"4\").\n\t\t\treplace(/\\'\\'/g, this.prefix + \"5\");\n\t}\n\n\t/**\n\t * Replaces placeholders back to brackets.\n\t *\n\t * @ignore Exclude from docs\n\t * @param text  Escaped text\n\t * @return Unescaped text\n\t */\n\tpublic static unescape(text: string): string {\n\t\treturn text.\n\t\t\treplace(new RegExp(this.prefix + \"1\", \"g\"), \"[[\").\n\t\t\treplace(new RegExp(this.prefix + \"2\", \"g\"), \"]]\").\n\t\t\treplace(new RegExp(this.prefix + \"3\", \"g\"), \"{{\").\n\t\t\treplace(new RegExp(this.prefix + \"4\", \"g\"), \"}}\").\n\t\t\treplace(new RegExp(this.prefix + \"5\", \"g\"), \"''\");\n\t}\n\n\t/**\n\t * Cleans up the text text for leftover double square brackets.\n\t *\n\t * @ignore Exclude from docs\n\t * @param text  Input text\n\t * @return Cleaned up text\n\t */\n\tpublic static cleanUp(text: string): string {\n\t\treturn text.\n\t\t\treplace(/\\[\\[/g, \"[\").\n\t\t\treplace(/\\]\\]/g, \"]\").\n\t\t\treplace(/\\{\\{/g, \"{\").\n\t\t\treplace(/\\}\\}/g, \"}\").\n\t\t\treplace(/\\'\\'/g, \"'\");\n\t}\n\n\t/**\n\t * Splits string into chunks. (style blocks, quoted blocks, regular blocks)\n\t *\n\t * If the second parameter `quotedBlocks` is set to `true` this method will\n\t * also single out text blocks enclosed within single quotes that no\n\t * formatting should be applied to, and they should be displayed as is.\n\t *\n\t * Default for the above is `false`, so that you can use single quote in text\n\t * without escaping it.\n\t *\n\t * If enabled, single quotes can be escaped by doubling it - adding two\n\t * single quotes, which will be replaced by a one single quote in the final\n\t * output.\n\t *\n\t * @ignore Exclude from docs\n\t * @param text          Text to chunk\n\t * @param quotedBlocks  Use quoted blocks\n\t * @param noFormatting  Formatting blocks will be treated as regular text\n\t * @return Array of string chunks\n\t */\n\tpublic static chunk(text: string, quotedBlocks: boolean = false, noFormatting: boolean = false): ITextChunk[] {\n\n\t\t// Init result\n\t\tlet res: ITextChunk[] = [];\n\n\t\t// Replace double (escaped) square spaces and quotes with temporary codes\n\t\ttext = this.escape(text);\n\n\t\t// Deal with style blocks\n\t\tlet chunks = quotedBlocks ? text.split(\"'\") : [text];\n\t\tfor (let i: number = 0; i < chunks.length; i++) {\n\t\t\tlet chunk = chunks[i];\n\n\t\t\t// Empty?\n\t\t\tif (chunk === \"\") {\n\t\t\t\tcontinue;\n\t\t\t}\n\n\t\t\tif ((i % 2) === 0) {\n\n\t\t\t\t// Text outside quotes\n\t\t\t\t// Parse for style blocks which are \"text\" chunks, the rest chunks are\n\t\t\t\t// \"value\"\n\n\t\t\t\tchunk = chunk.replace(/\\]\\[/g, \"]\" + $type.PLACEHOLDER + \"[\");\n\t\t\t\tchunk = chunk.replace(/\\[\\]/g, \"[ ]\");\n\t\t\t\tlet chunks2 = chunk.split(/[\\[\\]]+/);\n\t\t\t\tfor (let i2: number = 0; i2 < chunks2.length; i2++) {\n\t\t\t\t\tlet chunk2 = this.cleanUp(this.unescape(chunks2[i2]));\n\n\t\t\t\t\t// Placeholder?\n\t\t\t\t\tif (chunk2 === $type.PLACEHOLDER) {\n\t\t\t\t\t\tcontinue;\n\t\t\t\t\t}\n\n\t\t\t\t\t// Empty?\n\t\t\t\t\tif (chunk2 === \"\") {\n\t\t\t\t\t\tcontinue;\n\t\t\t\t\t}\n\n\t\t\t\t\t// Block or value\n\t\t\t\t\tif ((i2 % 2) === 0) {\n\t\t\t\t\t\tres.push({\n\t\t\t\t\t\t\t\"type\": \"value\",\n\t\t\t\t\t\t\t\"text\": chunk2\n\t\t\t\t\t\t});\n\t\t\t\t\t}\n\t\t\t\t\telse {\n\t\t\t\t\t\tres.push({\n\t\t\t\t\t\t\t\"type\": noFormatting ? \"value\" : \"format\",\n\t\t\t\t\t\t\t\"text\": \"[\" + chunk2 + \"]\"\n\t\t\t\t\t\t});\n\t\t\t\t\t}\n\t\t\t\t}\n\n\t\t\t}\n\t\t\telse {\n\n\t\t\t\t// A text within doublequotes\n\t\t\t\t// All chunks are \"text\"\n\n\t\t\t\tlet chunks2 = chunk.split(/[\\[\\]]+/);\n\t\t\t\tfor (let i2: number = 0; i2 < chunks2.length; i2++) {\n\t\t\t\t\tlet chunk2 = this.cleanUp(this.unescape(chunks2[i2]));\n\n\t\t\t\t\t// Empty?\n\t\t\t\t\tif (chunk2 === \"\") {\n\t\t\t\t\t\tcontinue;\n\t\t\t\t\t}\n\n\t\t\t\t\t// Block or text\n\t\t\t\t\tif ((i2 % 2) === 0) {\n\t\t\t\t\t\tres.push({\n\t\t\t\t\t\t\t\"type\": \"text\",\n\t\t\t\t\t\t\t\"text\": chunk2\n\t\t\t\t\t\t});\n\t\t\t\t\t}\n\t\t\t\t\telse if (this.isImage(chunk2)) {\n\t\t\t\t\t\tres.push({\n\t\t\t\t\t\t\t\"type\": \"image\",\n\t\t\t\t\t\t\t\"text\": \"[\" + chunk2 + \"]\"\n\t\t\t\t\t\t});\n\t\t\t\t\t}\n\t\t\t\t\telse {\n\t\t\t\t\t\tres.push({\n\t\t\t\t\t\t\t\"type\": \"format\",\n\t\t\t\t\t\t\t\"text\": \"[\" + chunk2 + \"]\"\n\t\t\t\t\t\t});\n\t\t\t\t\t}\n\t\t\t\t}\n\n\t\t\t}\n\t\t}\n\n\t\treturn res;\n\t}\n\n\t/**\n\t * Checks if supplied format contains image information and should be\n\t * formatted as such.\n\t * I.e.: `[img: myImage.png]`\n\t *\n\t * @ignore\n\t * @param  text  Format\n\t * @return true if it is an image\n\t */\n\tpublic static isImage(text: string): boolean {\n\t\treturn text.match(/img[ ]?:/) ? true : false;\n\t}\n\n\tpublic static getTextStyle(style: string): ITextStyle {\n\n\t\t// let textStyle: string[] = [];\n\t\t// let textFill: string | undefined;\n\t\tlet format: ITextStyle = {};\n\n\t\tif (style == \"\" || style == \"[ ]\") {\n\t\t\treturn {};\n\t\t}\n\n\t\t// Pre-process quoted text\n\t\tconst q = style.match(/('[^']*')|(\"[^\"]*\")/gi);\n\t\tif (q) {\n\t\t\tfor (let i: number = 0; i < q.length; i++) {\n\t\t\t\tstyle = style.replace(q[i], q[i].replace(/['\"]*/g, \"\").replace(/[ ]+/g, \"+\"));\n\t\t\t}\n\t\t}\n\n\t\t// Get style parts\n\t\tlet b: string[] | null = style.match(/([\\w\\-]*:[\\s]?[^;\\s\\]]*)|(\\#[\\w]{1,6})|([\\w\\-]+)|(\\/)/gi);\n\n\t\t// Empty?\n\t\tif (!b) {\n\t\t\treturn {};\n\t\t}\n\n\t\t// Check each part\n\t\tfor (let i: number = 0; i < b.length; i++) {\n\n\t\t\tif (b[i].match(/^(normal|bold|bolder|lighter|100|200|300|400|500|600|700|800|900)$/i)) {\n\t\t\t\t(<any>format).fontWeight = b[i];\n\t\t\t}\n\t\t\telse if (b[i].match(/^(underline|line-through)$/i)) {\n\t\t\t\t(<any>format).textDecoration = b[i];\n\t\t\t}\n\t\t\telse if (b[i] == \"/\") {\n\t\t\t\t// Just closing tag\n\t\t\t\t// Do nothing\n\t\t\t}\n\t\t\telse if (!b[i].match(/:/)) {\n\t\t\t\t// Color\n\t\t\t\tformat.fill = Color.fromString(b[i]);\n\t\t\t}\n\t\t\telse {\n\t\t\t\tconst p = b[i].replace(\"+\", \" \").split(/:[ ]*/);\n\t\t\t\t(<any>format)[p[0]] = p[1];\n\t\t\t\t//textStyle.push(b[i].replace(/^[a-zA-Z]:[ ]*/, \"\"));\n\t\t\t\t//b[i] = b[i].replace(/\\+/g, \" \");\n\t\t\t}\n\n\t\t}\n\n\t\treturn format;\n\t}\n\n}\n","import { AnimationState } from \"./util/Animation\";\r\nimport { Container } from \"./render/Container\";\r\nimport { Text } from \"./render/Text\";\r\nimport { HorizontalLayout } from \"./render/HorizontalLayout\";\r\nimport { VerticalLayout } from \"./render/VerticalLayout\";\r\nimport { GridLayout } from \"./render/GridLayout\";\r\nimport { Disposer } from \"./util/Disposer\";\r\nimport { ResizeSensor } from \"./util/ResizeSensor\";\r\nimport { InterfaceColors } from \"./util/InterfaceColors\";\r\nimport { Graphics } from \"./render/Graphics\";\r\nimport { Rectangle } from \"./render/Rectangle\";\r\nimport { Tooltip } from \"./render/Tooltip\";\r\nimport { NumberFormatter } from \"./util/NumberFormatter\";\r\nimport { DateFormatter } from \"./util/DateFormatter\";\r\nimport { DurationFormatter } from \"./util/DurationFormatter\";\r\nimport { Language } from \"./util/Language\";\r\nimport { EventDispatcher } from \"./util/EventDispatcher\";\r\nimport { DefaultTheme } from \"../themes/DefaultTheme\";\r\nimport { CanvasRenderer } from \"./render/backend/CanvasRenderer\";\r\nimport { p100, percent, isPercent, Percent } from \"./util/Percent\";\r\nimport { color } from \"./util/Color\";\r\nimport { populateString } from \"./util/PopulateString\";\r\nimport { registry } from \"./Registry\";\r\nimport * as $order from \"./util/Order\";\r\nimport * as $array from \"./util/Array\";\r\nimport * as $object from \"./util/Object\";\r\nimport * as $utils from \"./util/Utils\";\r\nimport * as $type from \"./util/Type\";\r\nimport en from \"../../locales/en\";\r\nfunction rAF(fps, callback) {\r\n    if (fps == null) {\r\n        requestAnimationFrame(callback);\r\n    }\r\n    else {\r\n        setTimeout(() => {\r\n            requestAnimationFrame(callback);\r\n        }, 1000 / fps);\r\n    }\r\n}\r\n// TODO implement Disposer\r\n/**\r\n * Root element of the chart.\r\n *\r\n * @see {@link https://www.amcharts.com/docs/v5/getting-started/#Root_element} for more info\r\n */\r\nexport class Root {\r\n    constructor(id, settings = {}, isReal) {\r\n        /**\r\n         * A reference to original chart container (div element).\r\n         */\r\n        Object.defineProperty(this, \"dom\", {\r\n            enumerable: true,\r\n            configurable: true,\r\n            writable: true,\r\n            value: void 0\r\n        });\r\n        Object.defineProperty(this, \"_inner\", {\r\n            enumerable: true,\r\n            configurable: true,\r\n            writable: true,\r\n            value: void 0\r\n        });\r\n        Object.defineProperty(this, \"_settings\", {\r\n            enumerable: true,\r\n            configurable: true,\r\n            writable: true,\r\n            value: void 0\r\n        });\r\n        Object.defineProperty(this, \"_isDirty\", {\r\n            enumerable: true,\r\n            configurable: true,\r\n            writable: true,\r\n            value: false\r\n        });\r\n        Object.defineProperty(this, \"_isDirtyParents\", {\r\n            enumerable: true,\r\n            configurable: true,\r\n            writable: true,\r\n            value: false\r\n        });\r\n        Object.defineProperty(this, \"_isDirtyAnimation\", {\r\n            enumerable: true,\r\n            configurable: true,\r\n            writable: true,\r\n            value: false\r\n        });\r\n        Object.defineProperty(this, \"_dirty\", {\r\n            enumerable: true,\r\n            configurable: true,\r\n            writable: true,\r\n            value: {}\r\n        });\r\n        Object.defineProperty(this, \"_dirtyParents\", {\r\n            enumerable: true,\r\n            configurable: true,\r\n            writable: true,\r\n            value: {}\r\n        });\r\n        Object.defineProperty(this, \"_dirtyBounds\", {\r\n            enumerable: true,\r\n            configurable: true,\r\n            writable: true,\r\n            value: {}\r\n        });\r\n        Object.defineProperty(this, \"_dirtyPositions\", {\r\n            enumerable: true,\r\n            configurable: true,\r\n            writable: true,\r\n            value: {}\r\n        });\r\n        Object.defineProperty(this, \"_ticker\", {\r\n            enumerable: true,\r\n            configurable: true,\r\n            writable: true,\r\n            value: null\r\n        });\r\n        Object.defineProperty(this, \"_tickers\", {\r\n            enumerable: true,\r\n            configurable: true,\r\n            writable: true,\r\n            value: []\r\n        });\r\n        Object.defineProperty(this, \"_updateTick\", {\r\n            enumerable: true,\r\n            configurable: true,\r\n            writable: true,\r\n            value: true\r\n        });\r\n        /**\r\n         * Root's event dispatcher.\r\n         *\r\n         * @see {@link https://www.amcharts.com/docs/v5/concepts/events/} for more info\r\n         */\r\n        Object.defineProperty(this, \"events\", {\r\n            enumerable: true,\r\n            configurable: true,\r\n            writable: true,\r\n            value: new EventDispatcher()\r\n        });\r\n        /**\r\n         * @ignore\r\n         * @todo needs description\r\n         */\r\n        Object.defineProperty(this, \"animationTime\", {\r\n            enumerable: true,\r\n            configurable: true,\r\n            writable: true,\r\n            value: null\r\n        });\r\n        Object.defineProperty(this, \"_animations\", {\r\n            enumerable: true,\r\n            configurable: true,\r\n            writable: true,\r\n            value: []\r\n        });\r\n        Object.defineProperty(this, \"_renderer\", {\r\n            enumerable: true,\r\n            configurable: true,\r\n            writable: true,\r\n            value: void 0\r\n        });\r\n        Object.defineProperty(this, \"_rootContainer\", {\r\n            enumerable: true,\r\n            configurable: true,\r\n            writable: true,\r\n            value: void 0\r\n        });\r\n        /**\r\n         * Main content container.\r\n         */\r\n        Object.defineProperty(this, \"container\", {\r\n            enumerable: true,\r\n            configurable: true,\r\n            writable: true,\r\n            value: void 0\r\n        });\r\n        /**\r\n         * A [[Container]] used to display tooltips in.\r\n         */\r\n        Object.defineProperty(this, \"tooltipContainer\", {\r\n            enumerable: true,\r\n            configurable: true,\r\n            writable: true,\r\n            value: void 0\r\n        });\r\n        Object.defineProperty(this, \"_tooltipContainerSettings\", {\r\n            enumerable: true,\r\n            configurable: true,\r\n            writable: true,\r\n            value: void 0\r\n        });\r\n        Object.defineProperty(this, \"_tooltip\", {\r\n            enumerable: true,\r\n            configurable: true,\r\n            writable: true,\r\n            value: void 0\r\n        });\r\n        // Locale-related\r\n        /**\r\n         * @ignore\r\n         */\r\n        Object.defineProperty(this, \"language\", {\r\n            enumerable: true,\r\n            configurable: true,\r\n            writable: true,\r\n            value: Language.new(this, {})\r\n        });\r\n        /**\r\n         * Locale used by the chart.\r\n         *\r\n         * @see {@link https://www.amcharts.com/docs/v5/concepts/locales/}\r\n         */\r\n        Object.defineProperty(this, \"locale\", {\r\n            enumerable: true,\r\n            configurable: true,\r\n            writable: true,\r\n            value: en\r\n        });\r\n        // Date-time related\r\n        /**\r\n         * Use UTC when formatting date/time.\r\n         *\r\n         * @see {@link https://www.amcharts.com/docs/v5/concepts/formatters/formatting-dates/#utc-and-time-zones} for more info\r\n         */\r\n        Object.defineProperty(this, \"utc\", {\r\n            enumerable: true,\r\n            configurable: true,\r\n            writable: true,\r\n            value: false\r\n        });\r\n        /**\r\n         * If set, will format date/time in specific time zone.\r\n         *\r\n         * The value should be named time zone, e.g.:\r\n         * `\"America/Vancouver\"`, `\"Australia/Sydney\"`, `\"UTC\"`.\r\n         *\r\n         * NOTE: Using time zone feature may noticeable affect performance of the\r\n         * chart, especially with large data sets, since every single date will need\r\n         * to be recalculated.\r\n         *\r\n         * @see {@link https://www.amcharts.com/docs/v5/getting-started/root-element/#time-zone} for more info\r\n         * @since 5.1.0\r\n         */\r\n        Object.defineProperty(this, \"timezone\", {\r\n            enumerable: true,\r\n            configurable: true,\r\n            writable: true,\r\n            value: void 0\r\n        });\r\n        /**\r\n         * The maximum FPS that the Root will run at.\r\n         *\r\n         * If `undefined` it will run at the highest FPS.\r\n         *\r\n         * @see {@link https://www.amcharts.com/docs/v5/getting-started/root-element/#Performance} for more info\r\n         */\r\n        Object.defineProperty(this, \"fps\", {\r\n            enumerable: true,\r\n            configurable: true,\r\n            writable: true,\r\n            value: void 0\r\n        });\r\n        /**\r\n         * Number formatter.\r\n         *\r\n         * @see {@link https://www.amcharts.com/docs/v5/concepts/formatters/formatting-numbers/} for more info\r\n         */\r\n        Object.defineProperty(this, \"numberFormatter\", {\r\n            enumerable: true,\r\n            configurable: true,\r\n            writable: true,\r\n            value: NumberFormatter.new(this, {})\r\n        });\r\n        /**\r\n         * Date/time formatter.\r\n         *\r\n         * @see {@link https://www.amcharts.com/docs/v5/concepts/formatters/formatting-dates/} for more info\r\n         */\r\n        Object.defineProperty(this, \"dateFormatter\", {\r\n            enumerable: true,\r\n            configurable: true,\r\n            writable: true,\r\n            value: DateFormatter.new(this, {})\r\n        });\r\n        /**\r\n         * Duration formatter.\r\n         *\r\n         * @see {@link https://www.amcharts.com/docs/v5/concepts/formatters/formatting-dates/} for more info\r\n         */\r\n        Object.defineProperty(this, \"durationFormatter\", {\r\n            enumerable: true,\r\n            configurable: true,\r\n            writable: true,\r\n            value: DurationFormatter.new(this, {})\r\n        });\r\n        // Accessibility\r\n        /**\r\n         * Global tab index for using for the whole chart\r\n         *\r\n         * @see {@link https://www.amcharts.com/docs/v5/concepts/accessibility/} for more info\r\n         */\r\n        Object.defineProperty(this, \"tabindex\", {\r\n            enumerable: true,\r\n            configurable: true,\r\n            writable: true,\r\n            value: 0\r\n        });\r\n        //@todo maybe make this better\r\n        Object.defineProperty(this, \"_tabindexes\", {\r\n            enumerable: true,\r\n            configurable: true,\r\n            writable: true,\r\n            value: []\r\n        });\r\n        Object.defineProperty(this, \"_a11yD\", {\r\n            enumerable: true,\r\n            configurable: true,\r\n            writable: true,\r\n            value: false\r\n        });\r\n        Object.defineProperty(this, \"_focusElementDirty\", {\r\n            enumerable: true,\r\n            configurable: true,\r\n            writable: true,\r\n            value: false\r\n        });\r\n        Object.defineProperty(this, \"_focusElementContainer\", {\r\n            enumerable: true,\r\n            configurable: true,\r\n            writable: true,\r\n            value: void 0\r\n        });\r\n        Object.defineProperty(this, \"_focusedSprite\", {\r\n            enumerable: true,\r\n            configurable: true,\r\n            writable: true,\r\n            value: void 0\r\n        });\r\n        Object.defineProperty(this, \"_isShift\", {\r\n            enumerable: true,\r\n            configurable: true,\r\n            writable: true,\r\n            value: void 0\r\n        });\r\n        Object.defineProperty(this, \"_keyboardDragPoint\", {\r\n            enumerable: true,\r\n            configurable: true,\r\n            writable: true,\r\n            value: void 0\r\n        });\r\n        Object.defineProperty(this, \"_tooltipElementContainer\", {\r\n            enumerable: true,\r\n            configurable: true,\r\n            writable: true,\r\n            value: void 0\r\n        });\r\n        Object.defineProperty(this, \"_readerAlertElement\", {\r\n            enumerable: true,\r\n            configurable: true,\r\n            writable: true,\r\n            value: void 0\r\n        });\r\n        Object.defineProperty(this, \"_logo\", {\r\n            enumerable: true,\r\n            configurable: true,\r\n            writable: true,\r\n            value: void 0\r\n        });\r\n        Object.defineProperty(this, \"_tooltipDiv\", {\r\n            enumerable: true,\r\n            configurable: true,\r\n            writable: true,\r\n            value: void 0\r\n        });\r\n        /**\r\n         * Used for dynamically-created CSS and JavaScript with strict source policies.\r\n         */\r\n        Object.defineProperty(this, \"nonce\", {\r\n            enumerable: true,\r\n            configurable: true,\r\n            writable: true,\r\n            value: void 0\r\n        });\r\n        /**\r\n         * Special color set to be used for various controls.\r\n         *\r\n         * @see {@link https://www.amcharts.com/docs/v5/concepts/colors-gradients-and-patterns/#Interface_colors} for more info\r\n         */\r\n        Object.defineProperty(this, \"interfaceColors\", {\r\n            enumerable: true,\r\n            configurable: true,\r\n            writable: true,\r\n            value: void 0\r\n        });\r\n        /**\r\n         * An instance of vertical layout object that can be used to set `layout` setting\r\n         * of a [[Container]].\r\n         *\r\n         * @default VerticalLayout.new()\r\n         */\r\n        Object.defineProperty(this, \"verticalLayout\", {\r\n            enumerable: true,\r\n            configurable: true,\r\n            writable: true,\r\n            value: VerticalLayout.new(this, {})\r\n        });\r\n        /**\r\n         * An instance of horizontal layout object that can be used to set `layout` setting\r\n         * of a [[Container]].\r\n         *\r\n         * @default HorizontalLayout.new()\r\n         */\r\n        Object.defineProperty(this, \"horizontalLayout\", {\r\n            enumerable: true,\r\n            configurable: true,\r\n            writable: true,\r\n            value: HorizontalLayout.new(this, {})\r\n        });\r\n        /**\r\n         * An instance of grid layout object that can be used to set `layout` setting\r\n         * of a [[Container]].\r\n         *\r\n         * @default VerticalLayout.new()\r\n         */\r\n        Object.defineProperty(this, \"gridLayout\", {\r\n            enumerable: true,\r\n            configurable: true,\r\n            writable: true,\r\n            value: GridLayout.new(this, {})\r\n        });\r\n        Object.defineProperty(this, \"_paused\", {\r\n            enumerable: true,\r\n            configurable: true,\r\n            writable: true,\r\n            value: false\r\n        });\r\n        /**\r\n         * Indicates whether chart should resized automatically when parent container\r\n         * width and/or height changes.\r\n         *\r\n         * If disabled (`autoResize = false`) you can make the chart resize manually\r\n         * by calling root element's `resize()` method.\r\n         */\r\n        Object.defineProperty(this, \"autoResize\", {\r\n            enumerable: true,\r\n            configurable: true,\r\n            writable: true,\r\n            value: true\r\n        });\r\n        Object.defineProperty(this, \"_fontHash\", {\r\n            enumerable: true,\r\n            configurable: true,\r\n            writable: true,\r\n            value: \"\"\r\n        });\r\n        Object.defineProperty(this, \"_isDisposed\", {\r\n            enumerable: true,\r\n            configurable: true,\r\n            writable: true,\r\n            value: false\r\n        });\r\n        Object.defineProperty(this, \"_disposers\", {\r\n            enumerable: true,\r\n            configurable: true,\r\n            writable: true,\r\n            value: []\r\n        });\r\n        Object.defineProperty(this, \"_resizeSensorDisposer\", {\r\n            enumerable: true,\r\n            configurable: true,\r\n            writable: true,\r\n            value: void 0\r\n        });\r\n        Object.defineProperty(this, \"_tooltips\", {\r\n            enumerable: true,\r\n            configurable: true,\r\n            writable: true,\r\n            value: []\r\n        });\r\n        Object.defineProperty(this, \"_htmlElementContainer\", {\r\n            enumerable: true,\r\n            configurable: true,\r\n            writable: true,\r\n            value: void 0\r\n        });\r\n        Object.defineProperty(this, \"_htmlEnabledContainers\", {\r\n            enumerable: true,\r\n            configurable: true,\r\n            writable: true,\r\n            value: []\r\n        });\r\n        if (!isReal) {\r\n            throw new Error(\"You cannot use `new Class()`, instead use `Class.new()`\");\r\n        }\r\n        this._settings = settings;\r\n        if (settings.accessible == false) {\r\n            this._a11yD = true;\r\n        }\r\n        if (settings.useSafeResolution == null) {\r\n            settings.useSafeResolution = true;\r\n        }\r\n        let resolution;\r\n        if (settings.useSafeResolution) {\r\n            resolution = $utils.getSafeResolution();\r\n        }\r\n        this._renderer = new CanvasRenderer(resolution);\r\n        let dom;\r\n        if (id instanceof HTMLElement) {\r\n            dom = id;\r\n        }\r\n        else {\r\n            dom = document.getElementById(id);\r\n        }\r\n        $array.each(registry.rootElements, (root) => {\r\n            if (root.dom === dom) {\r\n                throw new Error(\"You cannot have multiple Roots on the same DOM node\");\r\n            }\r\n        });\r\n        this.interfaceColors = InterfaceColors.new(this, {});\r\n        if (dom === null) {\r\n            throw new Error(\"Could not find HTML element with id `\" + id + \"`\");\r\n        }\r\n        this.dom = dom;\r\n        let inner = document.createElement(\"div\");\r\n        inner.style.position = \"relative\";\r\n        inner.style.width = \"100%\";\r\n        inner.style.height = \"100%\";\r\n        dom.appendChild(inner);\r\n        const tooltipContainerBounds = settings.tooltipContainerBounds;\r\n        if (tooltipContainerBounds) {\r\n            this._tooltipContainerSettings = tooltipContainerBounds;\r\n        }\r\n        this._inner = inner;\r\n        this._updateComputedStyles();\r\n        registry.rootElements.push(this);\r\n    }\r\n    static new(id, settings) {\r\n        const root = new Root(id, settings, true);\r\n        root._init();\r\n        return root;\r\n    }\r\n    moveDOM(id) {\r\n        let dom;\r\n        if (id instanceof HTMLElement) {\r\n            dom = id;\r\n        }\r\n        else {\r\n            dom = document.getElementById(id);\r\n        }\r\n        if (dom) {\r\n            while (this.dom.childNodes.length > 0) {\r\n                dom.appendChild(this.dom.childNodes[0]);\r\n            }\r\n            this.dom = dom;\r\n            this._initResizeSensor();\r\n            this.resize();\r\n        }\r\n    }\r\n    _handleLogo() {\r\n        if (this._logo) {\r\n            const w = this.dom.offsetWidth;\r\n            const h = this.dom.offsetHeight;\r\n            if ((w <= 150) || (h <= 60)) {\r\n                this._logo.hide();\r\n            }\r\n            else {\r\n                this._logo.show();\r\n            }\r\n        }\r\n    }\r\n    _showBranding() {\r\n        if (!this._logo) {\r\n            const logo = this.tooltipContainer.children.push(Container.new(this, {\r\n                interactive: true,\r\n                interactiveChildren: false,\r\n                position: \"absolute\",\r\n                setStateOnChildren: true,\r\n                paddingTop: 9,\r\n                paddingRight: 9,\r\n                paddingBottom: 9,\r\n                paddingLeft: 9,\r\n                scale: .6,\r\n                y: percent(100),\r\n                centerY: p100,\r\n                tooltipText: \"Created using amCharts 5\",\r\n                tooltipX: p100,\r\n                cursorOverStyle: \"pointer\",\r\n                background: Rectangle.new(this, {\r\n                    fill: color(0x474758),\r\n                    fillOpacity: 0,\r\n                    tooltipY: 5\r\n                })\r\n            }));\r\n            const tooltip = Tooltip.new(this, {\r\n                pointerOrientation: \"horizontal\",\r\n                paddingTop: 4,\r\n                paddingRight: 7,\r\n                paddingBottom: 4,\r\n                paddingLeft: 7\r\n            });\r\n            tooltip.label.setAll({\r\n                fontSize: 12\r\n            });\r\n            tooltip.get(\"background\").setAll({\r\n                fill: this.interfaceColors.get(\"background\"),\r\n                stroke: this.interfaceColors.get(\"grid\"),\r\n                strokeOpacity: 0.3\r\n            });\r\n            logo.set(\"tooltip\", tooltip);\r\n            logo.events.on(\"click\", () => {\r\n                window.open(\"https://www.amcharts.com/\", \"_blank\");\r\n            });\r\n            logo.states.create(\"hover\", {});\r\n            const m = logo.children.push(Graphics.new(this, {\r\n                stroke: color(0xcccccc),\r\n                strokeWidth: 3,\r\n                svgPath: \"M5 25 L13 25h13.6c3.4 0 6 0 10.3-4.3s5.2-12 8.6-12c3.4 0 4.3 8.6 7.7 8.6M83.4 25H79.8c-3.4 0-6 0-10.3-4.3s-5.2-12-8.6-12-4.3 8.6-7.7 8.6\"\r\n            }));\r\n            m.states.create(\"hover\", { stroke: color(0x3CABFF) });\r\n            const a = logo.children.push(Graphics.new(this, {\r\n                stroke: color(0x888888),\r\n                strokeWidth: 3,\r\n                svgPath: \"M83.4 25h-31C37 25 39.5 4.4 28.4 4.4S18.9 24.2 4.3 25H0\"\r\n            }));\r\n            a.states.create(\"hover\", { stroke: color(0x474758) });\r\n            //logo.set(\"tooltip\", this._tooltip);\r\n            //logo.setPrivate(\"tooltipTarget\", logo.get(\"background\"));\r\n            this._logo = logo;\r\n            this._handleLogo();\r\n        }\r\n    }\r\n    _getRealSize() {\r\n        return this.dom.getBoundingClientRect();\r\n    }\r\n    _getCalculatedSize(rect) {\r\n        if (this._settings.calculateSize) {\r\n            return this._settings.calculateSize(rect);\r\n        }\r\n        else {\r\n            return {\r\n                width: rect.width,\r\n                height: rect.height,\r\n            };\r\n        }\r\n    }\r\n    _init() {\r\n        const settings = this._settings;\r\n        if (settings.accessible !== false) {\r\n            if (settings.focusable) {\r\n                this._inner.setAttribute(\"focusable\", \"true\");\r\n                this._inner.setAttribute(\"tabindex\", this.tabindex + \"\");\r\n            }\r\n            if (settings.ariaLabel) {\r\n                this._inner.setAttribute(\"aria-label\", settings.ariaLabel);\r\n            }\r\n            if (settings.role) {\r\n                this._inner.setAttribute(\"role\", settings.role);\r\n            }\r\n        }\r\n        const renderer = this._renderer;\r\n        const rect = this._getRealSize();\r\n        const size = this._getCalculatedSize(rect);\r\n        const width = Math.floor(size.width);\r\n        const height = Math.floor(size.height);\r\n        const realWidth = Math.floor(rect.width);\r\n        const realHeight = Math.floor(rect.height);\r\n        const rootContainer = Container.new(this, {\r\n            visible: true,\r\n            width: width,\r\n            height: height,\r\n        });\r\n        this._rootContainer = rootContainer;\r\n        this._rootContainer._defaultThemes.push(DefaultTheme.new(this));\r\n        const container = rootContainer.children.push(Container.new(this, { visible: true, width: p100, height: p100 }));\r\n        this.container = container;\r\n        renderer.resize(realWidth, realHeight, width, height);\r\n        //@todo: better appendChild - refer\r\n        this._inner.appendChild(renderer.view);\r\n        // TODO: TMP TMP TMP for testing only, remove\r\n        //renderer.debugGhostView = true;\r\n        this._initResizeSensor();\r\n        // HTML content holder\r\n        const htmlElementContainer = document.createElement(\"div\");\r\n        this._htmlElementContainer = htmlElementContainer;\r\n        htmlElementContainer.className = \"am5-html-container\";\r\n        htmlElementContainer.style.position = \"absolute\";\r\n        htmlElementContainer.style.pointerEvents = \"none\";\r\n        if (!this._tooltipContainerSettings) {\r\n            htmlElementContainer.style.overflow = \"hidden\";\r\n        }\r\n        this._inner.appendChild(htmlElementContainer);\r\n        if (this._a11yD !== true) {\r\n            // Create element which is used to make announcements to screen reader\r\n            const readerAlertElement = document.createElement(\"div\");\r\n            readerAlertElement.className = \"am5-reader-container\";\r\n            readerAlertElement.setAttribute(\"role\", \"alert\");\r\n            // readerAlertElement.style.zIndex = \"-100000\";\r\n            // readerAlertElement.style.opacity = \"0\";\r\n            // readerAlertElement.style.top = \"0\";\r\n            readerAlertElement.style.position = \"absolute\";\r\n            readerAlertElement.style.width = \"1px\";\r\n            readerAlertElement.style.height = \"1px\";\r\n            readerAlertElement.style.overflow = \"hidden\";\r\n            readerAlertElement.style.clip = \"rect(1px, 1px, 1px, 1px)\";\r\n            this._readerAlertElement = readerAlertElement;\r\n            this._inner.appendChild(this._readerAlertElement);\r\n            const focusElementContainer = document.createElement(\"div\");\r\n            focusElementContainer.className = \"am5-focus-container\";\r\n            focusElementContainer.style.position = \"absolute\";\r\n            focusElementContainer.style.pointerEvents = \"none\";\r\n            focusElementContainer.style.top = \"0px\";\r\n            focusElementContainer.style.left = \"0px\";\r\n            focusElementContainer.style.overflow = \"hidden\";\r\n            focusElementContainer.style.width = width + \"px\";\r\n            focusElementContainer.style.height = height + \"px\";\r\n            focusElementContainer.setAttribute(\"role\", \"graphics-document\");\r\n            $utils.setInteractive(focusElementContainer, false);\r\n            this._focusElementContainer = focusElementContainer;\r\n            this._inner.appendChild(this._focusElementContainer);\r\n            const tooltipElementContainer = document.createElement(\"div\");\r\n            this._tooltipElementContainer = tooltipElementContainer;\r\n            tooltipElementContainer.className = \"am5-tooltip-container\";\r\n            this._inner.appendChild(tooltipElementContainer);\r\n            // Add keyboard events for accessibility, e.g. simulating drag with arrow\r\n            // keys and click with ENTER\r\n            if ($utils.supports(\"keyboardevents\")) {\r\n                this._disposers.push($utils.addEventListener(window, \"keydown\", (ev) => {\r\n                    const eventKey = $utils.getEventKey(ev);\r\n                    if (eventKey == \"Shift\") {\r\n                        this._isShift = true;\r\n                    }\r\n                    else if (eventKey == \"Tab\") {\r\n                        this._isShift = ev.shiftKey;\r\n                    }\r\n                }));\r\n                this._disposers.push($utils.addEventListener(window, \"keyup\", (ev) => {\r\n                    const eventKey = $utils.getEventKey(ev);\r\n                    if (eventKey == \"Shift\") {\r\n                        this._isShift = false;\r\n                    }\r\n                }));\r\n                this._disposers.push($utils.addEventListener(focusElementContainer, \"click\", () => {\r\n                    // Some screen readers convert ENTER (and some SPACE) press whil on\r\n                    // focused element to a \"click\" event, preventing actual \"keydown\"\r\n                    // event from firing. We're using this \"click\" event to still\r\n                    // generate internal click events.\r\n                    const focusedSprite = this._focusedSprite;\r\n                    if (focusedSprite) {\r\n                        const announceText = focusedSprite.get(\"clickAnnounceText\", \"\");\r\n                        if (announceText !== \"\") {\r\n                            this.readerAlert(announceText);\r\n                        }\r\n                        const downEvent = renderer.getEvent(new MouseEvent(\"click\"));\r\n                        focusedSprite.events.dispatch(\"click\", {\r\n                            type: \"click\",\r\n                            originalEvent: downEvent.event,\r\n                            point: downEvent.point,\r\n                            simulated: true,\r\n                            target: focusedSprite\r\n                        });\r\n                    }\r\n                }));\r\n                this._disposers.push($utils.addEventListener(focusElementContainer, \"keydown\", (ev) => {\r\n                    const focusedSprite = this._focusedSprite;\r\n                    if (focusedSprite) {\r\n                        if (ev.key == \"Escape\") {\r\n                            // ESC pressed - lose current focus\r\n                            $utils.blur();\r\n                            this._focusedSprite = undefined;\r\n                        }\r\n                        let dragOffsetX = 0;\r\n                        let dragOffsetY = 0;\r\n                        // TODO: figure out if using bogus MouseEvent is fine, or it will\r\n                        // fail on some platforms\r\n                        const eventKey = $utils.getEventKey(ev);\r\n                        switch (eventKey) {\r\n                            case \"Enter\":\r\n                            case \" \":\r\n                                const announceText = focusedSprite.get(\"clickAnnounceText\", \"\");\r\n                                if (announceText !== \"\") {\r\n                                    this.readerAlert(announceText);\r\n                                }\r\n                                if (eventKey == \" \" && focusedSprite.get(\"role\") != \"checkbox\") {\r\n                                    return;\r\n                                }\r\n                                ev.preventDefault();\r\n                                const downEvent = renderer.getEvent(new MouseEvent(\"mouse\"));\r\n                                focusedSprite.events.dispatch(\"click\", {\r\n                                    type: \"click\",\r\n                                    originalEvent: downEvent.event,\r\n                                    point: downEvent.point,\r\n                                    simulated: true,\r\n                                    target: focusedSprite\r\n                                });\r\n                                return;\r\n                            case \"ArrowLeft\":\r\n                                dragOffsetX = -6;\r\n                                break;\r\n                            case \"ArrowRight\":\r\n                                dragOffsetX = 6;\r\n                                break;\r\n                            case \"ArrowUp\":\r\n                                dragOffsetY = -6;\r\n                                break;\r\n                            case \"ArrowDown\":\r\n                                dragOffsetY = 6;\r\n                                break;\r\n                            default:\r\n                                return;\r\n                        }\r\n                        if (dragOffsetX != 0 || dragOffsetY != 0) {\r\n                            ev.preventDefault();\r\n                            if (!focusedSprite.isDragging()) {\r\n                                // Start dragging\r\n                                this._keyboardDragPoint = {\r\n                                    x: 0,\r\n                                    y: 0\r\n                                };\r\n                                const downEvent = renderer.getEvent(new MouseEvent(\"mousedown\", {\r\n                                    clientX: 0,\r\n                                    clientY: 0\r\n                                }));\r\n                                downEvent.point = {\r\n                                    x: 0,\r\n                                    y: 0\r\n                                };\r\n                                if (focusedSprite.events.isEnabled(\"pointerdown\")) {\r\n                                    focusedSprite.events.dispatch(\"pointerdown\", {\r\n                                        type: \"pointerdown\",\r\n                                        originalEvent: downEvent.event,\r\n                                        point: downEvent.point,\r\n                                        simulated: true,\r\n                                        target: focusedSprite\r\n                                    });\r\n                                }\r\n                            }\r\n                            else {\r\n                                // Move focus marker\r\n                                //this._positionFocusElement(focusedSprite);\r\n                            }\r\n                            // Move incrementally\r\n                            const dragPoint = this._keyboardDragPoint;\r\n                            dragPoint.x += dragOffsetX;\r\n                            dragPoint.y += dragOffsetY;\r\n                            const moveEvent = renderer.getEvent(new MouseEvent(\"mousemove\", {\r\n                                clientX: dragPoint.x,\r\n                                clientY: dragPoint.y\r\n                            }), false);\r\n                            if (focusedSprite.events.isEnabled(\"globalpointermove\")) {\r\n                                focusedSprite.events.dispatch(\"globalpointermove\", {\r\n                                    type: \"globalpointermove\",\r\n                                    originalEvent: moveEvent.event,\r\n                                    point: moveEvent.point,\r\n                                    simulated: true,\r\n                                    target: focusedSprite\r\n                                });\r\n                            }\r\n                        }\r\n                    }\r\n                }));\r\n                this._disposers.push($utils.addEventListener(focusElementContainer, \"keyup\", (ev) => {\r\n                    if (this._focusedSprite) {\r\n                        const focusedSprite = this._focusedSprite;\r\n                        const eventKey = $utils.getEventKey(ev);\r\n                        switch (eventKey) {\r\n                            case \"ArrowLeft\":\r\n                            case \"ArrowRight\":\r\n                            case \"ArrowUp\":\r\n                            case \"ArrowDown\":\r\n                                if (focusedSprite.isDragging()) {\r\n                                    // Simulate drag stop\r\n                                    const dragPoint = this._keyboardDragPoint;\r\n                                    const upEvent = renderer.getEvent(new MouseEvent(\"mouseup\", {\r\n                                        clientX: dragPoint.x,\r\n                                        clientY: dragPoint.y\r\n                                    }));\r\n                                    if (focusedSprite.events.isEnabled(\"globalpointerup\")) {\r\n                                        focusedSprite.events.dispatch(\"globalpointerup\", {\r\n                                            type: \"globalpointerup\",\r\n                                            originalEvent: upEvent.event,\r\n                                            point: upEvent.point,\r\n                                            simulated: true,\r\n                                            target: focusedSprite\r\n                                        });\r\n                                    }\r\n                                    //this._positionFocusElement(focusedSprite);\r\n                                    this._keyboardDragPoint = undefined;\r\n                                    // @todo dispatch mouseup event instead of calling dragStop?\r\n                                    // this._dispatchEvent(\"globalpointerup\", target, upEvent);\r\n                                    return;\r\n                                }\r\n                                else if (focusedSprite.get(\"focusableGroup\")) {\r\n                                    // Find next item in focusable group\r\n                                    const group = focusedSprite.get(\"focusableGroup\");\r\n                                    const items = this._tabindexes.filter((item) => {\r\n                                        return item.get(\"focusableGroup\") == group && item.getPrivate(\"focusable\") !== false && item.isVisibleDeep() ? true : false;\r\n                                    });\r\n                                    let index = items.indexOf(focusedSprite);\r\n                                    const lastIndex = items.length - 1;\r\n                                    index += (eventKey == \"ArrowRight\" || eventKey == \"ArrowDown\") ? 1 : -1;\r\n                                    if (index < 0) {\r\n                                        index = lastIndex;\r\n                                    }\r\n                                    else if (index > lastIndex) {\r\n                                        index = 0;\r\n                                    }\r\n                                    $utils.focus(items[index].getPrivate(\"focusElement\").dom);\r\n                                }\r\n                                break;\r\n                            case \"Tab\":\r\n                                const group = focusedSprite.get(\"focusableGroup\");\r\n                                if (group && this._isShift) {\r\n                                    this._focusNext(focusedSprite.getPrivate(\"focusElement\").dom, -1, group);\r\n                                    return;\r\n                                }\r\n                                break;\r\n                        }\r\n                    }\r\n                }));\r\n            }\r\n        }\r\n        this._startTicker();\r\n        this.setThemes([]);\r\n        this._addTooltip();\r\n        if (!this._hasLicense()) {\r\n            this._showBranding();\r\n        }\r\n    }\r\n    _initResizeSensor() {\r\n        if (this._resizeSensorDisposer) {\r\n            this._resizeSensorDisposer.dispose();\r\n        }\r\n        this._resizeSensorDisposer = new ResizeSensor(this.dom, () => {\r\n            if (this.autoResize) {\r\n                this.resize();\r\n            }\r\n        });\r\n        this._disposers.push(this._resizeSensorDisposer);\r\n    }\r\n    /**\r\n     * If automatic resizing of char is disabled (`root.autoResize = false`), it\r\n     * can be resized manually by calling this method.\r\n     */\r\n    resize() {\r\n        const rect = this._getRealSize();\r\n        const size = this._getCalculatedSize(rect);\r\n        const w = Math.floor(size.width);\r\n        const h = Math.floor(size.height);\r\n        if (w > 0 && h > 0) {\r\n            const realWidth = Math.floor(rect.width);\r\n            const realHeight = Math.floor(rect.height);\r\n            const htmlElementContainer = this._htmlElementContainer;\r\n            htmlElementContainer.style.width = w + \"px\";\r\n            htmlElementContainer.style.height = h + \"px\";\r\n            if (this._a11yD !== true) {\r\n                const focusElementContainer = this._focusElementContainer;\r\n                focusElementContainer.style.width = w + \"px\";\r\n                focusElementContainer.style.height = h + \"px\";\r\n            }\r\n            this._renderer.resize(realWidth, realHeight, w, h);\r\n            const rootContainer = this._rootContainer;\r\n            rootContainer.setPrivate(\"width\", w);\r\n            rootContainer.setPrivate(\"height\", h);\r\n            this._render();\r\n            this._handleLogo();\r\n        }\r\n    }\r\n    _render() {\r\n        this._renderer.render(this._rootContainer._display);\r\n        if (this._focusElementDirty) {\r\n            this._updateCurrentFocus();\r\n            this._focusElementDirty = false;\r\n        }\r\n    }\r\n    _runTickers(currentTime) {\r\n        $array.each(this._tickers, (f) => {\r\n            f(currentTime);\r\n        });\r\n    }\r\n    _runAnimations(currentTime) {\r\n        let running = 0;\r\n        $array.keepIf(this._animations, (animation) => {\r\n            const state = animation._runAnimation(currentTime);\r\n            if (state === AnimationState.Stopped) {\r\n                return false;\r\n            }\r\n            else if (state === AnimationState.Playing) {\r\n                ++running;\r\n                return true;\r\n            }\r\n            else {\r\n                return true;\r\n            }\r\n        });\r\n        this._isDirtyAnimation = false;\r\n        return running === 0;\r\n    }\r\n    _runDirties() {\r\n        //console.log(\"tick **************************************************************\");\r\n        let allParents = {};\r\n        while (this._isDirtyParents) {\r\n            // This must be before calling _prepareChildren\r\n            this._isDirtyParents = false;\r\n            $object.keys(this._dirtyParents).forEach((key) => {\r\n                const parent = this._dirtyParents[key];\r\n                delete this._dirtyParents[key];\r\n                if (!parent.isDisposed()) {\r\n                    allParents[parent.uid] = parent;\r\n                    parent._prepareChildren();\r\n                }\r\n            });\r\n        }\r\n        $object.keys(allParents).forEach((key) => {\r\n            allParents[key]._updateChildren();\r\n        });\r\n        const objects = [];\r\n        //\t\tconsole.log(\"_beforeChanged\")\r\n        $object.keys(this._dirty).forEach((key) => {\r\n            const entity = this._dirty[key];\r\n            if (entity.isDisposed()) {\r\n                delete this._dirty[entity.uid];\r\n            }\r\n            else {\r\n                objects.push(entity);\r\n                entity._beforeChanged();\r\n            }\r\n        });\r\n        //\t\tconsole.log(\"_changed\")\r\n        objects.forEach((entity) => {\r\n            entity._changed();\r\n            delete this._dirty[entity.uid];\r\n            entity._clearDirty();\r\n        });\r\n        this._isDirty = false;\r\n        const depths = {};\r\n        const bounds = [];\r\n        $object.keys(this._dirtyBounds).forEach((key) => {\r\n            const entity = this._dirtyBounds[key];\r\n            delete this._dirtyBounds[key];\r\n            if (!entity.isDisposed()) {\r\n                depths[entity.uid] = entity.depth();\r\n                bounds.push(entity);\r\n            }\r\n        });\r\n        this._positionHTMLElements();\r\n        // High depth -> low depth\r\n        bounds.sort((x, y) => {\r\n            return $order.compare(depths[y.uid], depths[x.uid]);\r\n        });\r\n        //\t\tconsole.log(\"_updateBounds\")\r\n        bounds.forEach((entity) => {\r\n            entity._updateBounds();\r\n        });\r\n        //\t\tconsole.log(\"_updatePosition\")\r\n        const dirtyPositions = this._dirtyPositions;\r\n        $object.keys(dirtyPositions).forEach((key) => {\r\n            const sprite = dirtyPositions[key];\r\n            delete dirtyPositions[key];\r\n            if (!sprite.isDisposed()) {\r\n                sprite._updatePosition();\r\n            }\r\n        });\r\n        //\t\tconsole.log(\"_afterChanged\")\r\n        objects.forEach((entity) => {\r\n            entity._afterChanged();\r\n        });\r\n    }\r\n    _renderFrame(currentTime) {\r\n        if (this._updateTick) {\r\n            if (this.events.isEnabled(\"framestarted\")) {\r\n                this.events.dispatch(\"framestarted\", {\r\n                    type: \"framestarted\",\r\n                    target: this,\r\n                    timestamp: currentTime,\r\n                });\r\n            }\r\n            this._checkComputedStyles();\r\n            this._runTickers(currentTime);\r\n            const animationDone = this._runAnimations(currentTime);\r\n            this._runDirties();\r\n            this._render();\r\n            this._renderer.resetImageArray();\r\n            this._positionHTMLElements();\r\n            if (this.events.isEnabled(\"frameended\")) {\r\n                this.events.dispatch(\"frameended\", {\r\n                    type: \"frameended\",\r\n                    target: this,\r\n                    timestamp: currentTime,\r\n                });\r\n            }\r\n            return this._tickers.length === 0 &&\r\n                animationDone &&\r\n                !this._isDirtyAnimation &&\r\n                !this._isDirty;\r\n        }\r\n        else {\r\n            return true;\r\n        }\r\n    }\r\n    _runTicker(currentTime, now) {\r\n        if (!this.isDisposed()) {\r\n            this.animationTime = currentTime;\r\n            const done = this._renderFrame(currentTime);\r\n            // No more work to do\r\n            if (done) {\r\n                this._ticker = null;\r\n                this.animationTime = null;\r\n            }\r\n            else {\r\n                if (!this._paused) {\r\n                    if (now) {\r\n                        this._ticker;\r\n                    }\r\n                    else {\r\n                        rAF(this.fps, this._ticker);\r\n                    }\r\n                }\r\n            }\r\n        }\r\n    }\r\n    _runTickerNow(timeout = 10000) {\r\n        if (!this.isDisposed()) {\r\n            const endTime = performance.now() + timeout;\r\n            for (;;) {\r\n                const currentTime = performance.now();\r\n                if (currentTime >= endTime) {\r\n                    this.animationTime = null;\r\n                    break;\r\n                }\r\n                this.animationTime = currentTime;\r\n                const done = this._renderFrame(currentTime);\r\n                if (done) {\r\n                    this.animationTime = null;\r\n                    break;\r\n                }\r\n            }\r\n        }\r\n    }\r\n    _startTicker() {\r\n        if (this._ticker === null) {\r\n            this.animationTime = null;\r\n            this._ticker = (currentTime) => {\r\n                this._runTicker(currentTime);\r\n            };\r\n            rAF(this.fps, this._ticker);\r\n        }\r\n    }\r\n    /**\r\n     * Returns whether the root is updating or not.\r\n     */\r\n    get updateTick() {\r\n        return this._updateTick;\r\n    }\r\n    /**\r\n     * Enables or disables the root updating.\r\n     */\r\n    set updateTick(value) {\r\n        this._updateTick = value;\r\n        if (value) {\r\n            this._startTicker();\r\n        }\r\n    }\r\n    _addDirtyEntity(entity) {\r\n        this._isDirty = true;\r\n        if (this._dirty[entity.uid] === undefined) {\r\n            this._dirty[entity.uid] = entity;\r\n        }\r\n        this._startTicker();\r\n    }\r\n    _addDirtyParent(parent) {\r\n        this._isDirty = true;\r\n        this._isDirtyParents = true;\r\n        if (this._dirtyParents[parent.uid] === undefined) {\r\n            this._dirtyParents[parent.uid] = parent;\r\n        }\r\n        this._startTicker();\r\n    }\r\n    _addDirtyBounds(entity) {\r\n        this._isDirty = true;\r\n        if (this._dirtyBounds[entity.uid] === undefined) {\r\n            this._dirtyBounds[entity.uid] = entity;\r\n        }\r\n        this._startTicker();\r\n    }\r\n    _addDirtyPosition(sprite) {\r\n        this._isDirty = true;\r\n        if (this._dirtyPositions[sprite.uid] === undefined) {\r\n            this._dirtyPositions[sprite.uid] = sprite;\r\n        }\r\n        this._startTicker();\r\n    }\r\n    _addAnimation(animation) {\r\n        this._isDirtyAnimation = true;\r\n        // TODO use numeric id instead\r\n        if (this._animations.indexOf(animation) === -1) {\r\n            this._animations.push(animation);\r\n        }\r\n        this._startTicker();\r\n    }\r\n    _markDirty() {\r\n        this._isDirty = true;\r\n    }\r\n    _markDirtyRedraw() {\r\n        this.events.once(\"frameended\", () => {\r\n            this._isDirty = true;\r\n            this._startTicker();\r\n        });\r\n    }\r\n    eachFrame(f) {\r\n        this._tickers.push(f);\r\n        this._startTicker();\r\n        return new Disposer(() => {\r\n            $array.removeFirst(this._tickers, f);\r\n        });\r\n    }\r\n    markDirtyGlobal(container) {\r\n        if (!container) {\r\n            container = this.container;\r\n        }\r\n        container.walkChildren((child) => {\r\n            if (child instanceof Container) {\r\n                this.markDirtyGlobal(child);\r\n            }\r\n            child.markDirty();\r\n            child.markDirtyBounds();\r\n        });\r\n    }\r\n    /**\r\n     * Returns width of the target container, in pixels.\r\n     *\r\n     * @return Width\r\n     */\r\n    width() {\r\n        // TODO make this more efficient, maybe just return the renderer's width ?\r\n        return Math.floor(this._getCalculatedSize(this._getRealSize()).width);\r\n    }\r\n    /**\r\n     * Returns height of the target container, in pixels.\r\n     *\r\n     * @return Height\r\n     */\r\n    height() {\r\n        // TODO make this more efficient, maybe just return the renderer's height ?\r\n        return Math.floor(this._getCalculatedSize(this._getRealSize()).height);\r\n    }\r\n    /**\r\n     * Disposes root and all the content in it.\r\n     */\r\n    dispose() {\r\n        if (!this._isDisposed) {\r\n            this._isDisposed = true;\r\n            this._rootContainer.dispose();\r\n            this._renderer.dispose();\r\n            this.horizontalLayout.dispose();\r\n            this.verticalLayout.dispose();\r\n            this.interfaceColors.dispose();\r\n            $array.each(this._disposers, (x) => {\r\n                x.dispose();\r\n            });\r\n            if (this._inner) {\r\n                $utils.removeElement(this._inner);\r\n            }\r\n            $array.remove(registry.rootElements, this);\r\n        }\r\n    }\r\n    /**\r\n     * Returns `true` if root element is disposed.\r\n     *\r\n     * @return Disposed?\r\n     */\r\n    isDisposed() {\r\n        return this._isDisposed;\r\n    }\r\n    /**\r\n     * Triggers screen reader read out a message.\r\n     *\r\n     * @see {@link https://www.amcharts.com/docs/v5/concepts/accessibility/} for more info\r\n     * @param  text  Alert text\r\n     */\r\n    readerAlert(text) {\r\n        if (this._a11yD !== true) {\r\n            this._readerAlertElement.innerHTML = $utils.stripTags(text);\r\n        }\r\n    }\r\n    /**\r\n     * Sets themes to be used for the chart.\r\n     *\r\n     * @see {@link https://www.amcharts.com/docs/v5/concepts/themes/} for more info\r\n     * @param  themes  A list of themes\r\n     */\r\n    setThemes(themes) {\r\n        this._rootContainer.set(\"themes\", themes);\r\n        // otherwise new themes are not applied\r\n        const tooltipContainer = this.tooltipContainer;\r\n        if (tooltipContainer) {\r\n            tooltipContainer._applyThemes();\r\n        }\r\n        // @todo review this\r\n        const interfaceColors = this.interfaceColors;\r\n        if (interfaceColors) {\r\n            interfaceColors._applyThemes();\r\n        }\r\n    }\r\n    _addTooltip() {\r\n        if (!this.tooltipContainer) {\r\n            const tooltipContainerSettings = this._tooltipContainerSettings;\r\n            const tooltipContainer = this._rootContainer.children.push(Container.new(this, {\r\n                position: \"absolute\",\r\n                isMeasured: false,\r\n                width: p100,\r\n                height: p100,\r\n                layer: tooltipContainerSettings ? 35 : 30,\r\n                layerMargin: tooltipContainerSettings ? tooltipContainerSettings : undefined\r\n            }));\r\n            this.tooltipContainer = tooltipContainer;\r\n            const tooltip = Tooltip.new(this, {});\r\n            this.container.set(\"tooltip\", tooltip);\r\n            tooltip.hide(0);\r\n            this._tooltip = tooltip;\r\n        }\r\n    }\r\n    /**\r\n     * Accesibility\r\n     */\r\n    _registerTabindexOrder(target) {\r\n        if (this._a11yD == true) {\r\n            return;\r\n        }\r\n        if (target.get(\"focusable\")) {\r\n            $array.pushOne(this._tabindexes, target);\r\n        }\r\n        else {\r\n            $array.remove(this._tabindexes, target);\r\n        }\r\n        this._invalidateTabindexes();\r\n    }\r\n    _unregisterTabindexOrder(target) {\r\n        if (this._a11yD == true) {\r\n            return;\r\n        }\r\n        $array.remove(this._tabindexes, target);\r\n        this._invalidateTabindexes();\r\n    }\r\n    _invalidateTabindexes() {\r\n        if (this._a11yD == true) {\r\n            return;\r\n        }\r\n        this._tabindexes.sort((a, b) => {\r\n            const aindex = a.get(\"tabindexOrder\", 0);\r\n            const bindex = b.get(\"tabindexOrder\", 0);\r\n            if (aindex == bindex) {\r\n                return 0;\r\n            }\r\n            else if (aindex > bindex) {\r\n                return 1;\r\n            }\r\n            else {\r\n                return -1;\r\n            }\r\n        });\r\n        const groups = [];\r\n        $array.each(this._tabindexes, (item, index) => {\r\n            if (!item.getPrivate(\"focusElement\")) {\r\n                this._makeFocusElement(index, item);\r\n            }\r\n            else {\r\n                this._moveFocusElement(index, item);\r\n            }\r\n            const group = item.get(\"focusableGroup\");\r\n            if (group && item.getPrivate(\"focusable\") !== false) {\r\n                if (groups.indexOf(group) !== -1) {\r\n                    // Non-first element in the group, make it not directly focusable\r\n                    item.getPrivate(\"focusElement\").dom.setAttribute(\"tabindex\", \"-1\");\r\n                }\r\n                else {\r\n                    groups.push(group);\r\n                }\r\n            }\r\n        });\r\n    }\r\n    _updateCurrentFocus() {\r\n        if (this._a11yD == true) {\r\n            return;\r\n        }\r\n        if (this._focusedSprite) {\r\n            this._decorateFocusElement(this._focusedSprite);\r\n            this._positionFocusElement(this._focusedSprite);\r\n        }\r\n    }\r\n    _decorateFocusElement(target, focusElement) {\r\n        if (this._a11yD == true) {\r\n            return;\r\n        }\r\n        // Decorate with proper accessibility attributes\r\n        if (!focusElement) {\r\n            focusElement = target.getPrivate(\"focusElement\").dom;\r\n        }\r\n        if (!focusElement) {\r\n            return;\r\n        }\r\n        const role = target.get(\"role\");\r\n        if (role) {\r\n            focusElement.setAttribute(\"role\", role);\r\n        }\r\n        else {\r\n            focusElement.removeAttribute(\"role\");\r\n        }\r\n        const ariaLabel = target.get(\"ariaLabel\");\r\n        if (ariaLabel) {\r\n            const label = populateString(target, ariaLabel);\r\n            focusElement.setAttribute(\"aria-label\", label);\r\n        }\r\n        else {\r\n            focusElement.removeAttribute(\"aria-label\");\r\n        }\r\n        const ariaLive = target.get(\"ariaLive\");\r\n        if (ariaLive) {\r\n            focusElement.setAttribute(\"aria-live\", ariaLive);\r\n        }\r\n        else {\r\n            focusElement.removeAttribute(\"aria-live\");\r\n        }\r\n        const ariaChecked = target.get(\"ariaChecked\");\r\n        if (ariaChecked != null && role && [\"checkbox\", \"option\", \"radio\", \"menuitemcheckbox\", \"menuitemradio\", \"treeitem\"].indexOf(role) !== -1) {\r\n            focusElement.setAttribute(\"aria-checked\", ariaChecked ? \"true\" : \"false\");\r\n        }\r\n        else {\r\n            focusElement.removeAttribute(\"aria-checked\");\r\n        }\r\n        const ariaCurrent = target.get(\"ariaCurrent\");\r\n        if (ariaCurrent != null) {\r\n            focusElement.setAttribute(\"aria-current\", ariaCurrent);\r\n        }\r\n        else {\r\n            focusElement.removeAttribute(\"aria-current\");\r\n        }\r\n        const ariaSelected = target.get(\"ariaSelected\");\r\n        if (ariaSelected != null && role && [\"gridcell\", \"option\", \"row\", \"tab\", \"columnheader\", \"rowheader\", \"treeitem\"].indexOf(role) !== -1) {\r\n            focusElement.setAttribute(\"aria-selected\", ariaSelected ? \"true\" : \"false\");\r\n        }\r\n        else {\r\n            focusElement.removeAttribute(\"aria-selected\");\r\n        }\r\n        if (target.get(\"ariaHidden\")) {\r\n            focusElement.setAttribute(\"aria-hidden\", \"true\");\r\n        }\r\n        else {\r\n            focusElement.removeAttribute(\"aria-hidden\");\r\n        }\r\n        const ariaOrientation = target.get(\"ariaOrientation\");\r\n        if (ariaOrientation) {\r\n            focusElement.setAttribute(\"aria-orientation\", ariaOrientation);\r\n        }\r\n        else {\r\n            focusElement.removeAttribute(\"aria-orientation\");\r\n        }\r\n        const ariaValueNow = target.get(\"ariaValueNow\");\r\n        if (ariaValueNow) {\r\n            focusElement.setAttribute(\"aria-valuenow\", ariaValueNow);\r\n        }\r\n        else {\r\n            focusElement.removeAttribute(\"aria-valuenow\");\r\n        }\r\n        const ariaValueMin = target.get(\"ariaValueMin\");\r\n        if (ariaValueMin) {\r\n            focusElement.setAttribute(\"aria-valuemin\", ariaValueMin);\r\n        }\r\n        else {\r\n            focusElement.removeAttribute(\"aria-valuemin\");\r\n        }\r\n        const ariaValueMax = target.get(\"ariaValueMax\");\r\n        if (ariaValueMax) {\r\n            focusElement.setAttribute(\"aria-valuemax\", ariaValueMax);\r\n        }\r\n        else {\r\n            focusElement.removeAttribute(\"aria-valuemax\");\r\n        }\r\n        const ariaValueText = target.get(\"ariaValueText\");\r\n        if (ariaValueText) {\r\n            focusElement.setAttribute(\"aria-valuetext\", ariaValueText);\r\n        }\r\n        else {\r\n            focusElement.removeAttribute(\"aria-valuetext\");\r\n        }\r\n        const ariaControls = target.get(\"ariaControls\");\r\n        if (ariaControls) {\r\n            focusElement.setAttribute(\"aria-controls\", ariaControls);\r\n        }\r\n        else {\r\n            focusElement.removeAttribute(\"aria-controls\");\r\n        }\r\n        if (target.get(\"visible\") && target.get(\"opacity\") !== 0 && target.get(\"role\") != \"tooltip\" && !target.isHidden() && target.getPrivate(\"focusable\") !== false) {\r\n            if (focusElement.getAttribute(\"tabindex\") != \"-1\") {\r\n                focusElement.setAttribute(\"tabindex\", \"\" + this.tabindex);\r\n            }\r\n            focusElement.removeAttribute(\"aria-hidden\");\r\n        }\r\n        else {\r\n            focusElement.removeAttribute(\"tabindex\");\r\n            focusElement.setAttribute(\"aria-hidden\", \"true\");\r\n        }\r\n    }\r\n    _makeFocusElement(index, target) {\r\n        if (target.getPrivate(\"focusElement\") || this._a11yD == true) {\r\n            return;\r\n        }\r\n        // Init\r\n        const focusElement = document.createElement(\"div\");\r\n        if (target.get(\"role\") != \"tooltip\") {\r\n            focusElement.tabIndex = this.tabindex;\r\n        }\r\n        focusElement.style.position = \"absolute\";\r\n        $utils.setInteractive(focusElement, false);\r\n        const disposers = [];\r\n        target.setPrivate(\"focusElement\", {\r\n            dom: focusElement,\r\n            disposers,\r\n        });\r\n        this._decorateFocusElement(target);\r\n        disposers.push($utils.addEventListener(focusElement, \"focus\", (ev) => {\r\n            this._handleFocus(ev);\r\n        }));\r\n        disposers.push($utils.addEventListener(focusElement, \"blur\", (ev) => {\r\n            this._handleBlur(ev);\r\n        }));\r\n        this._moveFocusElement(index, target);\r\n    }\r\n    _removeFocusElement(target) {\r\n        if (this._a11yD == true) {\r\n            return;\r\n        }\r\n        $array.remove(this._tabindexes, target);\r\n        const focusElement = target.getPrivate(\"focusElement\");\r\n        if (focusElement) {\r\n            const container = this._focusElementContainer;\r\n            container.removeChild(focusElement.dom);\r\n            $array.each(focusElement.disposers, (x) => {\r\n                x.dispose();\r\n            });\r\n        }\r\n    }\r\n    _hideFocusElement(target) {\r\n        if (this._a11yD == true) {\r\n            return;\r\n        }\r\n        const focusElement = target.getPrivate(\"focusElement\");\r\n        focusElement.dom.style.display = \"none\";\r\n    }\r\n    _moveFocusElement(index, target) {\r\n        if (this._a11yD == true) {\r\n            return;\r\n        }\r\n        // Get container\r\n        const container = this._focusElementContainer;\r\n        const focusElement = target.getPrivate(\"focusElement\").dom;\r\n        if (focusElement === this._focusElementContainer.children[index]) {\r\n            // Nothing to do\r\n            return;\r\n        }\r\n        const next = this._focusElementContainer.children[index + 1];\r\n        if (next) {\r\n            container.insertBefore(focusElement, next);\r\n        }\r\n        else {\r\n            container.append(focusElement);\r\n        }\r\n    }\r\n    _positionFocusElement(target) {\r\n        if (this._a11yD == true || target == undefined) {\r\n            return;\r\n        }\r\n        const bounds = target.globalBounds();\r\n        let width = bounds.right == bounds.left ? target.width() : bounds.right - bounds.left;\r\n        let height = bounds.top == bounds.bottom ? target.height() : bounds.bottom - bounds.top;\r\n        const padding = this._settings.focusPadding !== undefined ? this._settings.focusPadding : 2;\r\n        let x = bounds.left - padding;\r\n        let y = bounds.top - padding;\r\n        if (width < 0) {\r\n            x += width;\r\n            width = Math.abs(width);\r\n        }\r\n        if (height < 0) {\r\n            y += height;\r\n            height = Math.abs(height);\r\n        }\r\n        const focusElement = target.getPrivate(\"focusElement\").dom;\r\n        focusElement.style.top = y + \"px\";\r\n        focusElement.style.left = x + \"px\";\r\n        focusElement.style.width = (width + padding * 2) + \"px\";\r\n        focusElement.style.height = (height + padding * 2) + \"px\";\r\n    }\r\n    _getSpriteByFocusElement(target) {\r\n        let found;\r\n        $array.eachContinue(this._tabindexes, (item, _index) => {\r\n            if (item.getPrivate(\"focusElement\").dom === target) {\r\n                found = item;\r\n                return false;\r\n            }\r\n            return true;\r\n        });\r\n        return found;\r\n    }\r\n    _handleFocus(ev) {\r\n        if (this._a11yD == true) {\r\n            return;\r\n        }\r\n        // Get element\r\n        //const focused = this._tabindexes[index];\r\n        const focused = this._getSpriteByFocusElement(ev.target);\r\n        if (!focused) {\r\n            return;\r\n        }\r\n        // Jump over hidden elements\r\n        if (!focused.isVisibleDeep()) {\r\n            this._focusNext(ev.target, this._isShift ? -1 : 1);\r\n            return;\r\n        }\r\n        // Size and position\r\n        this._positionFocusElement(focused);\r\n        //this._decorateFocusElement(focused);\r\n        this._focusedSprite = focused;\r\n        if (focused.events.isEnabled(\"focus\")) {\r\n            focused.events.dispatch(\"focus\", {\r\n                type: \"focus\",\r\n                originalEvent: ev,\r\n                target: focused\r\n            });\r\n        }\r\n    }\r\n    _focusNext(el, direction, group) {\r\n        if (this._a11yD == true) {\r\n            return;\r\n        }\r\n        const focusableElements = Array.from(document.querySelectorAll([\r\n            'a[href]',\r\n            'area[href]',\r\n            'button:not([disabled])',\r\n            'details',\r\n            'input:not([disabled])',\r\n            'iframe:not([disabled])',\r\n            'select:not([disabled])',\r\n            'textarea:not([disabled])',\r\n            '[contentEditable=\"\"]',\r\n            '[contentEditable=\"true\"]',\r\n            '[contentEditable=\"TRUE\"]',\r\n            '[tabindex]:not([tabindex^=\"-\"])',\r\n            //':not([disabled])'\r\n        ].join(',')));\r\n        let index = focusableElements.indexOf(el) + direction;\r\n        if (index < 0) {\r\n            index = focusableElements.length - 1;\r\n        }\r\n        else if (index >= focusableElements.length) {\r\n            index = 0;\r\n        }\r\n        const targetElement = focusableElements[index];\r\n        if (group && direction == -1) {\r\n            const target = this._getSpriteByFocusElement(targetElement);\r\n            if (target && target.get(\"focusableGroup\") == group) {\r\n                this._focusNext(targetElement, direction);\r\n                return;\r\n            }\r\n        }\r\n        targetElement.focus();\r\n    }\r\n    _handleBlur(ev) {\r\n        if (this._a11yD == true) {\r\n            return;\r\n        }\r\n        const focused = this._focusedSprite;\r\n        if (focused && !focused.isDisposed() && focused.events.isEnabled(\"blur\")) {\r\n            focused.events.dispatch(\"blur\", {\r\n                type: \"blur\",\r\n                originalEvent: ev,\r\n                target: focused\r\n            });\r\n        }\r\n        this._focusedSprite = undefined;\r\n    }\r\n    /**\r\n     * @ignore\r\n     */\r\n    updateTooltip(target) {\r\n        if (this._a11yD == true) {\r\n            return;\r\n        }\r\n        const text = $utils.stripTags(target._getText());\r\n        let tooltipElement = target.getPrivate(\"tooltipElement\");\r\n        if (target.get(\"role\") == \"tooltip\" && text != \"\") {\r\n            if (!tooltipElement) {\r\n                tooltipElement = this._makeTooltipElement(target);\r\n            }\r\n            if (tooltipElement.innerHTML != text) {\r\n                tooltipElement.innerHTML = text;\r\n            }\r\n            tooltipElement.setAttribute(\"aria-hidden\", target.isVisibleDeep() ? \"false\" : \"true\");\r\n        }\r\n        else if (tooltipElement) {\r\n            tooltipElement.remove();\r\n            target.removePrivate(\"tooltipElement\");\r\n        }\r\n    }\r\n    _makeTooltipElement(target) {\r\n        const container = this._tooltipElementContainer;\r\n        const tooltipElement = document.createElement(\"div\");\r\n        tooltipElement.style.position = \"absolute\";\r\n        tooltipElement.style.width = \"1px\";\r\n        tooltipElement.style.height = \"1px\";\r\n        tooltipElement.style.overflow = \"hidden\";\r\n        tooltipElement.style.clip = \"rect(1px, 1px, 1px, 1px)\";\r\n        $utils.setInteractive(tooltipElement, false);\r\n        this._decorateFocusElement(target, tooltipElement);\r\n        container.append(tooltipElement);\r\n        target.setPrivate(\"tooltipElement\", tooltipElement);\r\n        return tooltipElement;\r\n    }\r\n    _removeTooltipElement(target) {\r\n        if (this._a11yD == true) {\r\n            return;\r\n        }\r\n        const tooltipElement = target.getPrivate(\"tooltipElement\");\r\n        if (tooltipElement) {\r\n            const parent = tooltipElement.parentElement;\r\n            if (parent) {\r\n                parent.removeChild(tooltipElement);\r\n            }\r\n        }\r\n    }\r\n    _invalidateAccessibility(target) {\r\n        if (this._a11yD == true) {\r\n            return;\r\n        }\r\n        this._focusElementDirty = true;\r\n        const focusElement = target.getPrivate(\"focusElement\");\r\n        if (target.get(\"focusable\")) {\r\n            if (focusElement) {\r\n                this._decorateFocusElement(target);\r\n                this._positionFocusElement(target);\r\n            }\r\n            // else {\r\n            // \tthis._renderer._makeFocusElement(0, this);\r\n            // }\r\n        }\r\n        else if (focusElement) {\r\n            this._removeFocusElement(target);\r\n        }\r\n        //this.updateCurrentFocus();\r\n    }\r\n    /**\r\n     * Returns `true` if `target` is currently focused.\r\n     *\r\n     * @param   target  Target\r\n     * @return          Focused?\r\n     */\r\n    focused(target) {\r\n        return this._focusedSprite === target;\r\n    }\r\n    /**\r\n     * Converts document coordinates to coordinates withing root element.\r\n     *\r\n     * @param   point  Document point\r\n     * @return         Root point\r\n     */\r\n    documentPointToRoot(point) {\r\n        const rect = this._getRealSize();\r\n        const size = this._getCalculatedSize(rect);\r\n        const scaleWidth = size.width / rect.width;\r\n        const scaleHeight = size.height / rect.height;\r\n        return {\r\n            x: (point.x - rect.left) * scaleWidth,\r\n            y: (point.y - rect.top) * scaleHeight,\r\n        };\r\n    }\r\n    /**\r\n     * Converts root coordinates to document\r\n     *\r\n     * @param   point  Document point\r\n     * @return         Root point\r\n     */\r\n    rootPointToDocument(point) {\r\n        const rect = this._getRealSize();\r\n        const size = this._getCalculatedSize(rect);\r\n        const scaleWidth = size.width / rect.width;\r\n        const scaleHeight = size.height / rect.height;\r\n        return {\r\n            x: (point.x / scaleWidth) + rect.left,\r\n            y: (point.y / scaleHeight) + rect.top\r\n        };\r\n    }\r\n    /**\r\n     * @ignore\r\n     */\r\n    addDisposer(disposer) {\r\n        this._disposers.push(disposer);\r\n        return disposer;\r\n    }\r\n    _updateComputedStyles() {\r\n        const styles = window.getComputedStyle(this.dom);\r\n        let fontHash = \"\";\r\n        $object.each(styles, (key, val) => {\r\n            if ($type.isString(key) && key.match(/^font/)) {\r\n                fontHash += val;\r\n            }\r\n        });\r\n        const changed = fontHash != this._fontHash;\r\n        if (changed) {\r\n            this._fontHash = fontHash;\r\n        }\r\n        return changed;\r\n    }\r\n    _checkComputedStyles() {\r\n        if (this._updateComputedStyles()) {\r\n            this._invalidateLabelBounds(this.container);\r\n        }\r\n    }\r\n    _invalidateLabelBounds(target) {\r\n        if (target instanceof Container) {\r\n            target.children.each((child) => {\r\n                this._invalidateLabelBounds(child);\r\n            });\r\n        }\r\n        else if (target instanceof Text) {\r\n            target.markDirtyBounds();\r\n        }\r\n    }\r\n    /**\r\n     * To all the clever heads out there. Yes, we did not make any attempts to\r\n     * scramble this.\r\n     *\r\n     * This is a part of a tool meant for our users to manage their commercial\r\n     * licenses for removal of amCharts branding from charts.\r\n     *\r\n     * The only legit way to do so is to purchase a commercial license for amCharts:\r\n     * https://www.amcharts.com/online-store/\r\n     *\r\n     * Removing or altering this code, or disabling amCharts branding in any other\r\n     * way is against the license and thus illegal.\r\n     */\r\n    _hasLicense() {\r\n        for (let i = 0; i < registry.licenses.length; i++) {\r\n            if (registry.licenses[i].match(/^AM5C.{5,}/i)) {\r\n                return true;\r\n            }\r\n        }\r\n        return false;\r\n    }\r\n    _licenseApplied() {\r\n        if (this._logo) {\r\n            this._logo.set(\"forceHidden\", true);\r\n        }\r\n    }\r\n    /**\r\n     * @ignore\r\n     */\r\n    get debugGhostView() {\r\n        return this._renderer.debugGhostView;\r\n    }\r\n    /**\r\n     * @ignore\r\n     */\r\n    set debugGhostView(value) {\r\n        this._renderer.debugGhostView = value;\r\n    }\r\n    /**\r\n     * Set this to `true` if you need chart to require first a tap onto it before\r\n     * touch gesture related functionality like zoom/pan is turned on.\r\n     *\r\n     * @see {@link https://www.amcharts.com/docs/v5/getting-started/root-element/#Touch_related_options} for more info\r\n     * @default false\r\n     * @since 5.2.9\r\n     * @param  value  Needs a tap to activate touch functions\r\n     */\r\n    set tapToActivate(value) {\r\n        this._renderer.tapToActivate = value;\r\n    }\r\n    /**\r\n     * @return Needs a tap to activate touch functions\r\n     */\r\n    get tapToActivate() {\r\n        return this._renderer.tapToActivate;\r\n    }\r\n    /**\r\n     * If `tapToActivate` is set to `true`, this setting will determine number\r\n     * of milliseconds the chart will stay \"active\", before releasing the\r\n     * controls back to the page.\r\n     *\r\n     * @see {@link https://www.amcharts.com/docs/v5/getting-started/root-element/#Touch_related_options} for more info\r\n     * @default 3000\r\n     * @since 5.2.9\r\n     * @param  value  Timeout\r\n     */\r\n    set tapToActivateTimeout(value) {\r\n        this._renderer.tapToActivateTimeout = value;\r\n    }\r\n    /**\r\n     * @return Timeout\r\n     */\r\n    get tapToActivateTimeout() {\r\n        return this._renderer.tapToActivateTimeout;\r\n    }\r\n    _makeHTMLElement(target) {\r\n        // Get container\r\n        const container = this._htmlElementContainer;\r\n        // Init\r\n        const htmlElement = document.createElement(\"div\");\r\n        target.setPrivate(\"htmlElement\", htmlElement);\r\n        //htmlElement.tabIndex = this.tabindex;\r\n        htmlElement.style.position = \"absolute\";\r\n        htmlElement.style.overflow = \"auto\";\r\n        htmlElement.style.boxSizing = \"border-box\";\r\n        $utils.setInteractive(htmlElement, target.get(\"interactive\", false));\r\n        // Translate events\r\n        if (target.events.isEnabled(\"click\")) {\r\n            $utils.setInteractive(htmlElement, true);\r\n            this._disposers.push($utils.addEventListener(htmlElement, \"click\", (ev) => {\r\n                const downEvent = this._renderer.getEvent(ev);\r\n                target.events.dispatch(\"click\", {\r\n                    type: \"click\",\r\n                    originalEvent: downEvent.event,\r\n                    point: downEvent.point,\r\n                    simulated: false,\r\n                    target: target\r\n                });\r\n            }));\r\n        }\r\n        this._positionHTMLElement(target);\r\n        container.append(htmlElement);\r\n        $array.pushOne(this._htmlEnabledContainers, target);\r\n        return htmlElement;\r\n    }\r\n    _positionHTMLElements() {\r\n        $array.each(this._htmlEnabledContainers, (target) => {\r\n            this._positionHTMLElement(target);\r\n        });\r\n    }\r\n    _positionHTMLElement(target) {\r\n        const htmlElement = target.getPrivate(\"htmlElement\");\r\n        if (htmlElement) {\r\n            // Translate settings\r\n            const visualSettings = [\"paddingTop\", \"paddingRight\", \"paddingBottom\", \"paddingLeft\", \"minWidth\", \"minHeight\", \"maxWidth\", \"maxHeight\"];\r\n            $array.each(visualSettings, (setting) => {\r\n                const value = target.get(setting);\r\n                if (value) {\r\n                    htmlElement.style[setting] = value + \"px\";\r\n                }\r\n                else {\r\n                    htmlElement.style[setting] = \"\";\r\n                }\r\n            });\r\n            // Init and reset scale / rotation\r\n            const scale = target.compositeScale() || 1;\r\n            const rotation = target.compositeRotation() || 0;\r\n            htmlElement.style.transform = \"\";\r\n            htmlElement.style.transformOrigin = \"\";\r\n            // Deal with opacity\r\n            const opacity = target.compositeOpacity();\r\n            setTimeout(() => {\r\n                htmlElement.style.opacity = opacity + \"\";\r\n            }, 10);\r\n            const visible = target.isVisibleDeep();\r\n            if (visible) {\r\n                htmlElement.style.display = \"block\";\r\n            }\r\n            // Deal with position\r\n            // const bounds = target.globalBounds();\r\n            // htmlElement.style.top = (bounds.top) + \"px\";\r\n            // htmlElement.style.left = (bounds.left) + \"px\";\r\n            let pos = {\r\n                x: target.x() + target.get(\"dx\", 0),\r\n                y: target.y() + target.get(\"dy\", 0)\r\n            };\r\n            if (target.parent) {\r\n                pos = target.parent.toGlobal(pos);\r\n            }\r\n            htmlElement.style.top = pos.y + \"px\";\r\n            htmlElement.style.left = pos.x + \"px\";\r\n            // Use width/height if those are set\r\n            const width = target.get(\"width\");\r\n            const height = target.get(\"height\");\r\n            let w = 0;\r\n            let h = 0;\r\n            if (width) {\r\n                w = target.width();\r\n            }\r\n            if (height) {\r\n                h = target.height();\r\n            }\r\n            if (!width || !height) {\r\n                htmlElement.style.position = \"fixed\";\r\n                htmlElement.style.width = \"\";\r\n                htmlElement.style.height = \"\";\r\n                const bbox = htmlElement.getBoundingClientRect();\r\n                htmlElement.style.position = \"absolute\";\r\n                if (!width)\r\n                    w = bbox.width;\r\n                if (!height)\r\n                    h = bbox.height;\r\n                let lw = w / scale;\r\n                let lh = h / scale;\r\n                let cx = target.get(\"centerX\", 0);\r\n                let cy = target.get(\"centerY\", 0);\r\n                let ll = 0;\r\n                let lr = 0;\r\n                let lt = 0;\r\n                let lb = 0;\r\n                if (cx instanceof Percent) {\r\n                    ll = -cx.value * lw;\r\n                    lr = (1 - cx.value) * lw;\r\n                }\r\n                else {\r\n                    ll = -cx;\r\n                    lr = lw - cx;\r\n                }\r\n                if (cy instanceof Percent) {\r\n                    lt = -cy.value * lh;\r\n                    lb = (1 - cy.value) * lh;\r\n                }\r\n                else {\r\n                    lt = -cy;\r\n                    lb = lh - cy;\r\n                }\r\n                target._localBounds = { left: ll, right: lr, top: lt, bottom: lb };\r\n                let previousBounds = target._adjustedLocalBounds;\r\n                let newBounds = target._display.getAdjustedBounds(target._localBounds);\r\n                target._adjustedLocalBounds = newBounds;\r\n                // compare each value of the bounds\r\n                if (previousBounds.left !== newBounds.left || previousBounds.right !== newBounds.right || previousBounds.top !== newBounds.top || previousBounds.bottom !== newBounds.bottom) {\r\n                    target.markDirtyBounds();\r\n                }\r\n            }\r\n            if (w > 0) {\r\n                htmlElement.style.minWidth = (w) + \"px\";\r\n            }\r\n            if (h > 0) {\r\n                htmlElement.style.minHeight = (h) + \"px\";\r\n            }\r\n            // Hide or show\r\n            if (!visible || opacity == 0) {\r\n                htmlElement.style.display = \"none\";\r\n            }\r\n            // Center position\r\n            const x = target.get(\"centerX\", 0);\r\n            const originX = isPercent(x) ? x.percent + \"%\" : x + \"px\";\r\n            const y = target.get(\"centerY\", 0);\r\n            const originY = isPercent(y) ? y.percent + \"%\" : y + \"px\";\r\n            if (x || y) {\r\n                htmlElement.style.transform = \"translate(-\" + originX + \", -\" + originY + \")\" + htmlElement.style.transform;\r\n            }\r\n            // Deal with scale\r\n            if (scale != 1) {\r\n                htmlElement.style.transform += \"scale(\" + scale + \")\";\r\n            }\r\n            if (rotation != 0) {\r\n                htmlElement.style.transform += \" rotate(\" + rotation + \"deg)\";\r\n            }\r\n            if (htmlElement.style.transform != \"\") {\r\n                htmlElement.style.transformOrigin = originX + \" \" + originY;\r\n                //htmlElement.style.transformOrigin = \"0% 0%\";\r\n            }\r\n        }\r\n    }\r\n    _setHTMLContent(target, html) {\r\n        let htmlElement = target.getPrivate(\"htmlElement\");\r\n        if (!htmlElement) {\r\n            htmlElement = this._makeHTMLElement(target);\r\n        }\r\n        if (htmlElement.innerHTML != html) {\r\n            htmlElement.innerHTML = html;\r\n        }\r\n    }\r\n    _removeHTMLContent(target) {\r\n        let htmlElement = target.getPrivate(\"htmlElement\");\r\n        if (htmlElement) {\r\n            this._htmlElementContainer.removeChild(htmlElement);\r\n            target.removePrivate(\"htmlElement\");\r\n        }\r\n        $array.remove(this._htmlEnabledContainers, target);\r\n    }\r\n}\r\n//# sourceMappingURL=Root.js.map","import type { IAnimation } from \"./util/Animation\";\nimport type { Entity } from \"./util/Entity\";\nimport type { Sprite } from \"./render/Sprite\";\nimport type { Theme } from \"./Theme\";\nimport type { IPoint } from \"./util/IPoint\";\nimport type { IRenderer, IPointerEvent } from \"./render/backend/Renderer\";\nimport type { Timezone } from \"./util/Timezone\";\n\nimport { AnimationState } from \"./util/Animation\";\nimport { Container } from \"./render/Container\";\nimport { Text } from \"./render/Text\";\nimport { HorizontalLayout } from \"./render/HorizontalLayout\";\nimport { VerticalLayout } from \"./render/VerticalLayout\";\nimport { GridLayout } from \"./render/GridLayout\";\nimport { IDisposer, Disposer } from \"./util/Disposer\";\nimport { ResizeSensor } from \"./util/ResizeSensor\";\nimport { InterfaceColors } from \"./util/InterfaceColors\";\nimport { Graphics } from \"./render/Graphics\";\nimport { Rectangle } from \"./render/Rectangle\";\nimport { Tooltip } from \"./render/Tooltip\";\nimport { NumberFormatter } from \"./util/NumberFormatter\";\nimport { DateFormatter } from \"./util/DateFormatter\";\nimport { DurationFormatter } from \"./util/DurationFormatter\";\nimport { ILocale, Language } from \"./util/Language\";\nimport { Events, EventDispatcher } from \"./util/EventDispatcher\";\nimport { DefaultTheme } from \"../themes/DefaultTheme\";\nimport { CanvasRenderer } from \"./render/backend/CanvasRenderer\";\nimport { p100, percent, isPercent, Percent } from \"./util/Percent\";\nimport { color } from \"./util/Color\";\nimport { populateString } from \"./util/PopulateString\";\nimport { registry } from \"./Registry\";\n\nimport * as $order from \"./util/Order\";\nimport * as $array from \"./util/Array\";\nimport * as $object from \"./util/Object\";\nimport * as $utils from \"./util/Utils\";\nimport * as $type from \"./util/Type\";\n\n\nimport en from \"../../locales/en\";\n\n\nfunction rAF(fps: number | undefined, callback: (currentTime: number) => void): void {\n\tif (fps == null) {\n\t\trequestAnimationFrame(callback);\n\n\t} else {\n\t\tsetTimeout(() => {\n\t\t\trequestAnimationFrame(callback);\n\t\t}, 1000 / fps);\n\t}\n}\n\n\n/**\n * @ignore\n */\ninterface IParent extends Entity {\n\t_prepareChildren(): void;\n\t_updateChildren(): void;\n}\n\ninterface IBounds extends Entity {\n\tdepth(): number;\n\t_updateBounds(): void;\n}\n\n\nexport interface ISize {\n\twidth: number,\n\theight: number,\n}\n\n\nexport interface IRootEvents {\n\tframestarted: {\n\t\ttimestamp: number;\n\t};\n\tframeended: {\n\t\ttimestamp: number;\n\t};\n}\n\n\nexport interface IRootSettings {\n\n\t/**\n\t * Indicates whether chart should use \"safe\" resolution on some memory-limiting\n\t * platforms such as Safari.\n\t *\n\t * @default true\n\t */\n\tuseSafeResolution?: boolean;\n\n\t/**\n\t * Allows defining margins around chart area for tooltips to go outside the\n\t * chart itself.\n\t *\n\t * @since 5.2.24\n\t */\n\ttooltipContainerBounds?: { top: number, left: number, right: number, bottom: number };\n\n\t/**\n\t * Set to `false` to disable all accessibility features.\n\t *\n\t * NOTE: once disabled, accessibility cannot be re-enabled on a live `Root` object.\n\t *\n\t * @default true\n\t * @since 5.3.0\n\t */\n\taccessible?: boolean;\n\n\t/**\n\t * If set to `true`, the parent inner `<div>` element will become a focusable\n\t * element.\n\t *\n\t * @since 5.3.17\n\t * @default false\n\t * @see {@link https://www.amcharts.com/docs/v5/concepts/accessibility/#Accessibility_of_Root_element} for more info\n\t */\n\tfocusable?: boolean;\n\n\t/**\n\t * Distance between focused element and its highlight square in pixels.\n\t *\n\t * @since 5.6.0\n\t * @default 2\n\t */\n\tfocusPadding?: number;\n\n\t/**\n\t * If set to some string, it will be used as inner `<div>` ARIA-LABEL.\n\t *\n\t * Should be used in conjuction with `focusable`.\n\t *\n\t * @since 5.3.17\n\t * @see {@link https://www.amcharts.com/docs/v5/concepts/accessibility/#Accessibility_of_Root_element} for more info\n\t */\n\tariaLabel?: string;\n\n\t/**\n\t * Allows setting a \"role\" for the inner `<div>`.\n\t *\n\t * @since 5.3.17\n\t * @see {@link https://www.amcharts.com/docs/v5/concepts/accessibility/#Accessibility_of_Root_element} for more info\n\t */\n\trole?: string;\n\n\t/**\n\t * Allows for specifying a custom width / height for the chart.\n\t *\n\t * This function will be called automatically when the chart is resized.\n\t */\n\tcalculateSize?: (dimensions: DOMRect) => ISize;\n}\n\n\n// TODO implement Disposer\n/**\n * Root element of the chart.\n *\n * @see {@link https://www.amcharts.com/docs/v5/getting-started/#Root_element} for more info\n */\nexport class Root implements IDisposer {\n\n\t/**\n\t * A reference to original chart container (div element).\n\t */\n\tpublic dom: HTMLElement;\n\tpublic _inner: HTMLElement;\n\n\tprotected _settings: IRootSettings;\n\tprotected _isDirty: boolean = false;\n\tprotected _isDirtyParents: boolean = false;\n\tprotected _isDirtyAnimation: boolean = false;\n\tprotected _dirty: { [id: number]: Entity } = {};\n\tprotected _dirtyParents: { [id: number]: IParent } = {};\n\tprotected _dirtyBounds: { [id: number]: IBounds } = {};\n\tprotected _dirtyPositions: { [id: number]: Sprite } = {};\n\n\tprotected _ticker: ((currentTime: number) => void) | null = null;\n\tprotected _tickers: Array<(currentTime: number) => void> = [];\n\n\tprotected _updateTick: boolean = true;\n\n\t/**\n\t * Root's event dispatcher.\n\t *\n\t * @see {@link https://www.amcharts.com/docs/v5/concepts/events/} for more info\n\t */\n\tpublic events: EventDispatcher<Events<this, IRootEvents>> = new EventDispatcher();\n\n\t/**\n\t * @ignore\n\t * @todo needs description\n\t */\n\tpublic animationTime: number | null = null;\n\n\tprivate _animations: Array<IAnimation> = [];\n\n\tpublic _renderer: IRenderer;\n\n\tpublic _rootContainer!: Container;\n\n\t/**\n\t * Main content container.\n\t */\n\tpublic container!: Container;\n\n\t/**\n\t * A [[Container]] used to display tooltips in.\n\t */\n\tpublic tooltipContainer!: Container\n\tprotected _tooltipContainerSettings!: { top: number, left: number, right: number, bottom: number };\n\n\tpublic _tooltip!: Tooltip;\n\n\t// Locale-related\n\n\t/**\n\t * @ignore\n\t */\n\tpublic language: Language = Language.new(this, {});\n\n\t/**\n\t * Locale used by the chart.\n\t *\n\t * @see {@link https://www.amcharts.com/docs/v5/concepts/locales/}\n\t */\n\tpublic locale: ILocale = en;\n\n\t// Date-time related\n\n\t/**\n\t * Use UTC when formatting date/time.\n\t *\n\t * @see {@link https://www.amcharts.com/docs/v5/concepts/formatters/formatting-dates/#utc-and-time-zones} for more info\n\t */\n\tpublic utc: boolean = false;\n\n\t/**\n\t * If set, will format date/time in specific time zone.\n\t *\n\t * The value should be named time zone, e.g.:\n\t * `\"America/Vancouver\"`, `\"Australia/Sydney\"`, `\"UTC\"`.\n\t *\n\t * NOTE: Using time zone feature may noticeable affect performance of the\n\t * chart, especially with large data sets, since every single date will need\n\t * to be recalculated.\n\t *\n\t * @see {@link https://www.amcharts.com/docs/v5/getting-started/root-element/#time-zone} for more info\n\t * @since 5.1.0\n\t */\n\tpublic timezone?: Timezone;\n\n\t/**\n\t * The maximum FPS that the Root will run at.\n\t *\n\t * If `undefined` it will run at the highest FPS.\n\t *\n\t * @see {@link https://www.amcharts.com/docs/v5/getting-started/root-element/#Performance} for more info\n\t */\n\tpublic fps: number | undefined;\n\n\t/**\n\t * Number formatter.\n\t *\n\t * @see {@link https://www.amcharts.com/docs/v5/concepts/formatters/formatting-numbers/} for more info\n\t */\n\tpublic numberFormatter: NumberFormatter = NumberFormatter.new(this, {});\n\n\t/**\n\t * Date/time formatter.\n\t *\n\t * @see {@link https://www.amcharts.com/docs/v5/concepts/formatters/formatting-dates/} for more info\n\t */\n\tpublic dateFormatter: DateFormatter = DateFormatter.new(this, {});\n\n\t/**\n\t * Duration formatter.\n\t *\n\t * @see {@link https://www.amcharts.com/docs/v5/concepts/formatters/formatting-dates/} for more info\n\t */\n\tpublic durationFormatter: DurationFormatter = DurationFormatter.new(this, {});\n\n\n\t// Accessibility\n\n\t/**\n\t * Global tab index for using for the whole chart\n\t *\n\t * @see {@link https://www.amcharts.com/docs/v5/concepts/accessibility/} for more info\n\t */\n\tpublic tabindex: number = 0;\n\n\t//@todo maybe make this better\n\tprotected _tabindexes: Sprite[] = [];\n\n\tprotected _a11yD: boolean = false;\n\tprotected _focusElementDirty: boolean = false;\n\tprotected _focusElementContainer: HTMLDivElement | undefined;\n\tprotected _focusedSprite: Sprite | undefined;\n\tprotected _isShift: boolean | undefined;\n\tprotected _keyboardDragPoint: IPoint | undefined;\n\tprotected _tooltipElementContainer: HTMLDivElement | undefined;\n\tprotected _readerAlertElement: HTMLDivElement | undefined;\n\n\tpublic _logo?: Container;\n\n\tpublic _tooltipDiv: HTMLDivElement | undefined;\n\n\t/**\n\t * Used for dynamically-created CSS and JavaScript with strict source policies.\n\t */\n\tpublic nonce?: string;\n\n\t/**\n\t * Special color set to be used for various controls.\n\t *\n\t * @see {@link https://www.amcharts.com/docs/v5/concepts/colors-gradients-and-patterns/#Interface_colors} for more info\n\t */\n\tpublic interfaceColors: InterfaceColors;\n\n\t/**\n\t * An instance of vertical layout object that can be used to set `layout` setting\n\t * of a [[Container]].\n\t *\n\t * @default VerticalLayout.new()\n\t */\n\tpublic verticalLayout: VerticalLayout = VerticalLayout.new(this, {});\n\n\t/**\n\t * An instance of horizontal layout object that can be used to set `layout` setting\n\t * of a [[Container]].\n\t *\n\t * @default HorizontalLayout.new()\n\t */\n\tpublic horizontalLayout: VerticalLayout = HorizontalLayout.new(this, {});\n\n\t/**\n\t * An instance of grid layout object that can be used to set `layout` setting\n\t * of a [[Container]].\n\t *\n\t * @default VerticalLayout.new()\n\t */\n\tpublic gridLayout: VerticalLayout = GridLayout.new(this, {});\n\n\tpublic _paused: boolean = false;\n\n\t/**\n\t * Indicates whether chart should resized automatically when parent container\n\t * width and/or height changes.\n\t *\n\t * If disabled (`autoResize = false`) you can make the chart resize manually\n\t * by calling root element's `resize()` method.\n\t */\n\tpublic autoResize: boolean = true;\n\n\tprotected _fontHash: string = \"\";\n\n\tprotected _isDisposed: boolean = false;\n\tprotected _disposers: Array<IDisposer> = [];\n\n\tprotected _resizeSensorDisposer?: IDisposer;\n\n\tpublic _tooltips: Array<Tooltip> = [];\n\n\tprotected _htmlElementContainer: HTMLDivElement | undefined;\n\tprotected _htmlEnabledContainers: Container[] = [];\n\n\tprotected constructor(id: string | HTMLElement, settings: IRootSettings = {}, isReal: boolean) {\n\n\t\tif (!isReal) {\n\t\t\tthrow new Error(\"You cannot use `new Class()`, instead use `Class.new()`\");\n\t\t}\n\n\t\tthis._settings = settings;\n\n\t\tif (settings.accessible == false) {\n\t\t\tthis._a11yD = true;\n\t\t}\n\n\t\tif (settings.useSafeResolution == null) {\n\t\t\tsettings.useSafeResolution = true;\n\t\t}\n\n\t\tlet resolution;\n\n\t\tif (settings.useSafeResolution) {\n\t\t\tresolution = $utils.getSafeResolution();\n\t\t}\n\n\t\tthis._renderer = new CanvasRenderer(resolution);\n\n\t\tlet dom: HTMLElement | null;\n\n\t\tif (id instanceof HTMLElement) {\n\t\t\tdom = id;\n\t\t}\n\t\telse {\n\t\t\tdom = document.getElementById(id);\n\t\t}\n\n\t\t$array.each(registry.rootElements, (root) => {\n\t\t\tif (root.dom === dom) {\n\t\t\t\tthrow new Error(\"You cannot have multiple Roots on the same DOM node\");\n\t\t\t}\n\t\t});\n\n\t\tthis.interfaceColors = InterfaceColors.new(this, {});\n\n\t\tif (dom === null) {\n\t\t\tthrow new Error(\"Could not find HTML element with id `\" + id + \"`\");\n\t\t}\n\n\t\tthis.dom = dom;\n\n\t\tlet inner: HTMLDivElement = document.createElement(\"div\");\n\t\tinner.style.position = \"relative\";\n\t\tinner.style.width = \"100%\";\n\t\tinner.style.height = \"100%\";\n\t\tdom.appendChild(inner);\n\n\t\tconst tooltipContainerBounds = settings.tooltipContainerBounds;\n\t\tif (tooltipContainerBounds) {\n\t\t\tthis._tooltipContainerSettings = tooltipContainerBounds;\n\t\t}\n\n\t\tthis._inner = inner;\n\n\t\tthis._updateComputedStyles();\n\n\t\tregistry.rootElements.push(this);\n\t}\n\n\n\tpublic static new(id: string | HTMLElement, settings?: IRootSettings): Root {\n\t\tconst root = new Root(id, settings, true);\n\t\troot._init();\n\t\treturn root;\n\t}\n\n\tpublic moveDOM(id: string | HTMLElement): void {\n\t\tlet dom: HTMLElement | null;\n\n\t\tif (id instanceof HTMLElement) {\n\t\t\tdom = id;\n\t\t}\n\t\telse {\n\t\t\tdom = document.getElementById(id);\n\t\t}\n\n\t\tif (dom) {\n\t\t\twhile (this.dom.childNodes.length > 0) {\n\t\t\t\tdom.appendChild(this.dom.childNodes[0]);\n\t\t\t}\n\t\t\tthis.dom = dom;\n\t\t\tthis._initResizeSensor();\n\t\t\tthis.resize();\n\t\t}\n\n\t}\n\n\n\tprotected _handleLogo(): void {\n\t\tif (this._logo) {\n\t\t\tconst w = this.dom.offsetWidth;\n\t\t\tconst h = this.dom.offsetHeight;\n\t\t\tif ((w <= 150) || (h <= 60)) {\n\t\t\t\tthis._logo.hide();\n\t\t\t}\n\t\t\telse {\n\t\t\t\tthis._logo.show();\n\t\t\t}\n\t\t}\n\t}\n\n\tpublic _showBranding(): void {\n\t\tif (!this._logo) {\n\t\t\tconst logo = this.tooltipContainer.children.push(Container.new(this, {\n\t\t\t\tinteractive: true,\n\t\t\t\tinteractiveChildren: false,\n\t\t\t\tposition: \"absolute\",\n\t\t\t\tsetStateOnChildren: true,\n\t\t\t\tpaddingTop: 9,\n\t\t\t\tpaddingRight: 9,\n\t\t\t\tpaddingBottom: 9,\n\t\t\t\tpaddingLeft: 9,\n\t\t\t\tscale: .6,\n\t\t\t\ty: percent(100),\n\t\t\t\tcenterY: p100,\n\t\t\t\ttooltipText: \"Created using amCharts 5\",\n\t\t\t\ttooltipX: p100,\n\t\t\t\tcursorOverStyle: \"pointer\",\n\t\t\t\tbackground: Rectangle.new(this, {\n\t\t\t\t\tfill: color(0x474758),\n\t\t\t\t\tfillOpacity: 0,\n\t\t\t\t\ttooltipY: 5\n\t\t\t\t})\n\t\t\t}));\n\n\t\t\tconst tooltip = Tooltip.new(this, {\n\t\t\t\tpointerOrientation: \"horizontal\",\n\t\t\t\tpaddingTop: 4,\n\t\t\t\tpaddingRight: 7,\n\t\t\t\tpaddingBottom: 4,\n\t\t\t\tpaddingLeft: 7\n\t\t\t});\n\t\t\ttooltip.label.setAll({\n\t\t\t\tfontSize: 12\n\t\t\t});\n\t\t\ttooltip.get(\"background\")!.setAll({\n\t\t\t\tfill: this.interfaceColors.get(\"background\"),\n\t\t\t\tstroke: this.interfaceColors.get(\"grid\"),\n\t\t\t\tstrokeOpacity: 0.3\n\t\t\t})\n\t\t\tlogo.set(\"tooltip\", tooltip);\n\n\t\t\tlogo.events.on(\"click\", () => {\n\t\t\t\twindow.open(\"https://www.amcharts.com/\", \"_blank\");\n\t\t\t});\n\n\t\t\tlogo.states.create(\"hover\", {});\n\n\t\t\tconst m = logo.children.push(Graphics.new(this, {\n\t\t\t\tstroke: color(0xcccccc),\n\t\t\t\tstrokeWidth: 3,\n\t\t\t\tsvgPath: \"M5 25 L13 25h13.6c3.4 0 6 0 10.3-4.3s5.2-12 8.6-12c3.4 0 4.3 8.6 7.7 8.6M83.4 25H79.8c-3.4 0-6 0-10.3-4.3s-5.2-12-8.6-12-4.3 8.6-7.7 8.6\"\n\t\t\t}));\n\n\t\t\tm.states.create(\"hover\", { stroke: color(0x3CABFF) });\n\n\t\t\tconst a = logo.children.push(Graphics.new(this, {\n\t\t\t\tstroke: color(0x888888),\n\t\t\t\tstrokeWidth: 3,\n\t\t\t\tsvgPath: \"M83.4 25h-31C37 25 39.5 4.4 28.4 4.4S18.9 24.2 4.3 25H0\"\n\t\t\t}));\n\n\t\t\ta.states.create(\"hover\", { stroke: color(0x474758) });\n\n\t\t\t//logo.set(\"tooltip\", this._tooltip);\n\t\t\t//logo.setPrivate(\"tooltipTarget\", logo.get(\"background\"));\n\t\t\tthis._logo = logo;\n\n\t\t\tthis._handleLogo();\n\t\t}\n\t}\n\n\tprotected _getRealSize(): DOMRect {\n\t\treturn this.dom.getBoundingClientRect();\n\t}\n\n\tprotected _getCalculatedSize(rect: DOMRect): ISize {\n\t\tif (this._settings.calculateSize) {\n\t\t\treturn this._settings.calculateSize(rect);\n\n\t\t} else {\n\t\t\treturn {\n\t\t\t\twidth: rect.width,\n\t\t\t\theight: rect.height,\n\t\t\t};\n\t\t}\n\t}\n\n\tprotected _init(): void {\n\n\t\tconst settings = this._settings;\n\t\tif (settings.accessible !== false) {\n\t\t\tif (settings.focusable) {\n\t\t\t\tthis._inner.setAttribute(\"focusable\", \"true\");\n\t\t\t\tthis._inner.setAttribute(\"tabindex\", this.tabindex + \"\");\n\t\t\t}\n\n\t\t\tif (settings.ariaLabel) {\n\t\t\t\tthis._inner.setAttribute(\"aria-label\", settings.ariaLabel);\n\t\t\t}\n\n\t\t\tif (settings.role) {\n\t\t\t\tthis._inner.setAttribute(\"role\", settings.role);\n\t\t\t}\n\t\t}\n\n\t\tconst renderer = this._renderer;\n\n\t\tconst rect = this._getRealSize();\n\t\tconst size = this._getCalculatedSize(rect);\n\n\t\tconst width = Math.floor(size.width);\n\t\tconst height = Math.floor(size.height);\n\n\t\tconst realWidth = Math.floor(rect.width);\n\t\tconst realHeight = Math.floor(rect.height);\n\n\t\tconst rootContainer = Container.new(this, {\n\t\t\tvisible: true,\n\t\t\twidth: width,\n\t\t\theight: height,\n\t\t});\n\t\tthis._rootContainer = rootContainer;\n\t\tthis._rootContainer._defaultThemes.push(DefaultTheme.new(this));\n\n\t\tconst container = rootContainer.children.push(Container.new(this, { visible: true, width: p100, height: p100 }));\n\t\tthis.container = container;\n\n\t\trenderer.resize(realWidth, realHeight, width, height);\n\n\t\t//@todo: better appendChild - refer\n\t\tthis._inner.appendChild(renderer.view);\n\n\t\t// TODO: TMP TMP TMP for testing only, remove\n\t\t//renderer.debugGhostView = true;\n\n\t\tthis._initResizeSensor();\n\n\t\t// HTML content holder\n\t\tconst htmlElementContainer = document.createElement(\"div\");\n\t\tthis._htmlElementContainer = htmlElementContainer;\n\t\thtmlElementContainer.className = \"am5-html-container\";\n\t\thtmlElementContainer.style.position = \"absolute\";\n\t\thtmlElementContainer.style.pointerEvents = \"none\";\n\t\tif (!this._tooltipContainerSettings) {\n\t\t\thtmlElementContainer.style.overflow = \"hidden\";\n\t\t}\n\t\tthis._inner.appendChild(htmlElementContainer);\n\n\t\tif (this._a11yD !== true) {\n\n\t\t\t// Create element which is used to make announcements to screen reader\n\t\t\tconst readerAlertElement = document.createElement(\"div\");\n\t\t\treaderAlertElement.className = \"am5-reader-container\";\n\t\t\treaderAlertElement.setAttribute(\"role\", \"alert\");\n\t\t\t// readerAlertElement.style.zIndex = \"-100000\";\n\t\t\t// readerAlertElement.style.opacity = \"0\";\n\t\t\t// readerAlertElement.style.top = \"0\";\n\t\t\treaderAlertElement.style.position = \"absolute\";\n\t\t\treaderAlertElement.style.width = \"1px\";\n\t\t\treaderAlertElement.style.height = \"1px\";\n\t\t\treaderAlertElement.style.overflow = \"hidden\";\n\t\t\treaderAlertElement.style.clip = \"rect(1px, 1px, 1px, 1px)\";\n\t\t\tthis._readerAlertElement = readerAlertElement;\n\t\t\tthis._inner.appendChild(this._readerAlertElement);\n\n\t\t\tconst focusElementContainer = document.createElement(\"div\");\n\t\t\tfocusElementContainer.className = \"am5-focus-container\";\n\t\t\tfocusElementContainer.style.position = \"absolute\";\n\t\t\tfocusElementContainer.style.pointerEvents = \"none\";\n\t\t\tfocusElementContainer.style.top = \"0px\";\n\t\t\tfocusElementContainer.style.left = \"0px\";\n\t\t\tfocusElementContainer.style.overflow = \"hidden\";\n\t\t\tfocusElementContainer.style.width = width + \"px\";\n\t\t\tfocusElementContainer.style.height = height + \"px\";\n\n\t\t\tfocusElementContainer.setAttribute(\"role\", \"graphics-document\");\n\n\t\t\t$utils.setInteractive(focusElementContainer, false);\n\t\t\tthis._focusElementContainer = focusElementContainer;\n\t\t\tthis._inner.appendChild(this._focusElementContainer);\n\n\t\t\tconst tooltipElementContainer = document.createElement(\"div\");\n\t\t\tthis._tooltipElementContainer = tooltipElementContainer;\n\t\t\ttooltipElementContainer.className = \"am5-tooltip-container\";\n\t\t\tthis._inner.appendChild(tooltipElementContainer);\n\n\t\t\t// Add keyboard events for accessibility, e.g. simulating drag with arrow\n\t\t\t// keys and click with ENTER\n\t\t\tif ($utils.supports(\"keyboardevents\")) {\n\n\t\t\t\tthis._disposers.push($utils.addEventListener(window, \"keydown\", (ev: KeyboardEvent) => {\n\t\t\t\t\tconst eventKey = $utils.getEventKey(ev);\n\t\t\t\t\tif (eventKey == \"Shift\") {\n\t\t\t\t\t\tthis._isShift = true;\n\t\t\t\t\t}\n\t\t\t\t\telse if (eventKey == \"Tab\") {\n\t\t\t\t\t\tthis._isShift = ev.shiftKey;\n\t\t\t\t\t}\n\t\t\t\t}));\n\n\t\t\t\tthis._disposers.push($utils.addEventListener(window, \"keyup\", (ev: KeyboardEvent) => {\n\t\t\t\t\tconst eventKey = $utils.getEventKey(ev);\n\t\t\t\t\tif (eventKey == \"Shift\") {\n\t\t\t\t\t\tthis._isShift = false;\n\t\t\t\t\t}\n\t\t\t\t}));\n\n\t\t\t\tthis._disposers.push($utils.addEventListener(focusElementContainer, \"click\", () => {\n\t\t\t\t\t// Some screen readers convert ENTER (and some SPACE) press whil on\n\t\t\t\t\t// focused element to a \"click\" event, preventing actual \"keydown\"\n\t\t\t\t\t// event from firing. We're using this \"click\" event to still\n\t\t\t\t\t// generate internal click events.\n\t\t\t\t\tconst focusedSprite = this._focusedSprite;\n\t\t\t\t\tif (focusedSprite) {\n\t\t\t\t\t\tconst announceText = focusedSprite.get(\"clickAnnounceText\", \"\");\n\t\t\t\t\t\tif (announceText !== \"\") {\n\t\t\t\t\t\t\tthis.readerAlert(announceText);\n\t\t\t\t\t\t}\n\t\t\t\t\t\tconst downEvent = renderer.getEvent(new MouseEvent(\"click\"));\n\t\t\t\t\t\tfocusedSprite.events.dispatch(\"click\", {\n\t\t\t\t\t\t\ttype: \"click\",\n\t\t\t\t\t\t\toriginalEvent: downEvent.event,\n\t\t\t\t\t\t\tpoint: downEvent.point,\n\t\t\t\t\t\t\tsimulated: true,\n\t\t\t\t\t\t\ttarget: focusedSprite\n\t\t\t\t\t\t});\n\t\t\t\t\t}\n\t\t\t\t}));\n\n\t\t\t\tthis._disposers.push($utils.addEventListener(focusElementContainer, \"keydown\", (ev: KeyboardEvent) => {\n\t\t\t\t\tconst focusedSprite = this._focusedSprite;\n\t\t\t\t\tif (focusedSprite) {\n\t\t\t\t\t\tif (ev.key == \"Escape\") {\n\t\t\t\t\t\t\t// ESC pressed - lose current focus\n\t\t\t\t\t\t\t$utils.blur();\n\t\t\t\t\t\t\tthis._focusedSprite = undefined;\n\t\t\t\t\t\t}\n\t\t\t\t\t\tlet dragOffsetX = 0;\n\t\t\t\t\t\tlet dragOffsetY = 0;\n\t\t\t\t\t\t// TODO: figure out if using bogus MouseEvent is fine, or it will\n\t\t\t\t\t\t// fail on some platforms\n\t\t\t\t\t\tconst eventKey = $utils.getEventKey(ev);\n\t\t\t\t\t\tswitch (eventKey) {\n\t\t\t\t\t\t\tcase \"Enter\":\n\t\t\t\t\t\t\tcase \" \":\n\t\t\t\t\t\t\t\tconst announceText = focusedSprite.get(\"clickAnnounceText\", \"\");\n\t\t\t\t\t\t\t\tif (announceText !== \"\") {\n\t\t\t\t\t\t\t\t\tthis.readerAlert(announceText);\n\t\t\t\t\t\t\t\t}\n\t\t\t\t\t\t\t\tif (eventKey == \" \" && focusedSprite.get(\"role\") != \"checkbox\") {\n\t\t\t\t\t\t\t\t\treturn;\n\t\t\t\t\t\t\t\t}\n\t\t\t\t\t\t\t\tev.preventDefault();\n\t\t\t\t\t\t\t\tconst downEvent = renderer.getEvent(new MouseEvent(\"mouse\"));\n\t\t\t\t\t\t\t\tfocusedSprite.events.dispatch(\"click\", {\n\t\t\t\t\t\t\t\t\ttype: \"click\",\n\t\t\t\t\t\t\t\t\toriginalEvent: downEvent.event,\n\t\t\t\t\t\t\t\t\tpoint: downEvent.point,\n\t\t\t\t\t\t\t\t\tsimulated: true,\n\t\t\t\t\t\t\t\t\ttarget: focusedSprite\n\t\t\t\t\t\t\t\t});\n\t\t\t\t\t\t\t\treturn;\n\t\t\t\t\t\t\tcase \"ArrowLeft\":\n\t\t\t\t\t\t\t\tdragOffsetX = -6;\n\t\t\t\t\t\t\t\tbreak;\n\t\t\t\t\t\t\tcase \"ArrowRight\":\n\t\t\t\t\t\t\t\tdragOffsetX = 6;\n\t\t\t\t\t\t\t\tbreak;\n\t\t\t\t\t\t\tcase \"ArrowUp\":\n\t\t\t\t\t\t\t\tdragOffsetY = -6;\n\t\t\t\t\t\t\t\tbreak;\n\t\t\t\t\t\t\tcase \"ArrowDown\":\n\t\t\t\t\t\t\t\tdragOffsetY = 6;\n\t\t\t\t\t\t\t\tbreak;\n\t\t\t\t\t\t\tdefault:\n\t\t\t\t\t\t\t\treturn;\n\t\t\t\t\t\t}\n\n\t\t\t\t\t\tif (dragOffsetX != 0 || dragOffsetY != 0) {\n\t\t\t\t\t\t\tev.preventDefault();\n\n\t\t\t\t\t\t\tif (!focusedSprite.isDragging()) {\n\t\t\t\t\t\t\t\t// Start dragging\n\t\t\t\t\t\t\t\tthis._keyboardDragPoint = {\n\t\t\t\t\t\t\t\t\tx: 0,\n\t\t\t\t\t\t\t\t\ty: 0\n\t\t\t\t\t\t\t\t}\n\n\t\t\t\t\t\t\t\tconst downEvent = renderer.getEvent(new MouseEvent(\"mousedown\", {\n\t\t\t\t\t\t\t\t\tclientX: 0,\n\t\t\t\t\t\t\t\t\tclientY: 0\n\t\t\t\t\t\t\t\t}));\n\n\t\t\t\t\t\t\t\tdownEvent.point = {\n\t\t\t\t\t\t\t\t\tx: 0,\n\t\t\t\t\t\t\t\t\ty: 0\n\t\t\t\t\t\t\t\t};\n\n\t\t\t\t\t\t\t\tif (focusedSprite.events.isEnabled(\"pointerdown\")) {\n\t\t\t\t\t\t\t\t\tfocusedSprite.events.dispatch(\"pointerdown\", {\n\t\t\t\t\t\t\t\t\t\ttype: \"pointerdown\",\n\t\t\t\t\t\t\t\t\t\toriginalEvent: downEvent.event,\n\t\t\t\t\t\t\t\t\t\tpoint: downEvent.point,\n\t\t\t\t\t\t\t\t\t\tsimulated: true,\n\t\t\t\t\t\t\t\t\t\ttarget: focusedSprite\n\t\t\t\t\t\t\t\t\t});\n\t\t\t\t\t\t\t\t}\n\n\t\t\t\t\t\t\t}\n\t\t\t\t\t\t\telse {\n\t\t\t\t\t\t\t\t// Move focus marker\n\t\t\t\t\t\t\t\t//this._positionFocusElement(focusedSprite);\n\t\t\t\t\t\t\t}\n\n\t\t\t\t\t\t\t// Move incrementally\n\t\t\t\t\t\t\tconst dragPoint = this._keyboardDragPoint!;\n\t\t\t\t\t\t\tdragPoint.x += dragOffsetX;\n\t\t\t\t\t\t\tdragPoint.y += dragOffsetY;\n\t\t\t\t\t\t\tconst moveEvent = renderer.getEvent(new MouseEvent(\"mousemove\", {\n\t\t\t\t\t\t\t\tclientX: dragPoint.x,\n\t\t\t\t\t\t\t\tclientY: dragPoint.y\n\t\t\t\t\t\t\t}), false);\n\n\t\t\t\t\t\t\tif (focusedSprite.events.isEnabled(\"globalpointermove\")) {\n\t\t\t\t\t\t\t\tfocusedSprite.events.dispatch(\"globalpointermove\", {\n\t\t\t\t\t\t\t\t\ttype: \"globalpointermove\",\n\t\t\t\t\t\t\t\t\toriginalEvent: moveEvent.event,\n\t\t\t\t\t\t\t\t\tpoint: moveEvent.point,\n\t\t\t\t\t\t\t\t\tsimulated: true,\n\t\t\t\t\t\t\t\t\ttarget: focusedSprite\n\t\t\t\t\t\t\t\t});\n\t\t\t\t\t\t\t}\n\n\t\t\t\t\t\t}\n\t\t\t\t\t}\n\t\t\t\t}));\n\n\t\t\t\tthis._disposers.push($utils.addEventListener(focusElementContainer, \"keyup\", (ev: KeyboardEvent) => {\n\t\t\t\t\tif (this._focusedSprite) {\n\t\t\t\t\t\tconst focusedSprite = this._focusedSprite;\n\t\t\t\t\t\tconst eventKey = $utils.getEventKey(ev);\n\t\t\t\t\t\tswitch (eventKey) {\n\t\t\t\t\t\t\tcase \"ArrowLeft\":\n\t\t\t\t\t\t\tcase \"ArrowRight\":\n\t\t\t\t\t\t\tcase \"ArrowUp\":\n\t\t\t\t\t\t\tcase \"ArrowDown\":\n\t\t\t\t\t\t\t\tif (focusedSprite.isDragging()) {\n\t\t\t\t\t\t\t\t\t// Simulate drag stop\n\t\t\t\t\t\t\t\t\tconst dragPoint = this._keyboardDragPoint!;\n\t\t\t\t\t\t\t\t\tconst upEvent = renderer.getEvent(new MouseEvent(\"mouseup\", {\n\t\t\t\t\t\t\t\t\t\tclientX: dragPoint.x,\n\t\t\t\t\t\t\t\t\t\tclientY: dragPoint.y\n\t\t\t\t\t\t\t\t\t}));\n\n\t\t\t\t\t\t\t\t\tif (focusedSprite.events.isEnabled(\"globalpointerup\")) {\n\t\t\t\t\t\t\t\t\t\tfocusedSprite.events.dispatch(\"globalpointerup\", {\n\t\t\t\t\t\t\t\t\t\t\ttype: \"globalpointerup\",\n\t\t\t\t\t\t\t\t\t\t\toriginalEvent: upEvent.event,\n\t\t\t\t\t\t\t\t\t\t\tpoint: upEvent.point,\n\t\t\t\t\t\t\t\t\t\t\tsimulated: true,\n\t\t\t\t\t\t\t\t\t\t\ttarget: focusedSprite\n\t\t\t\t\t\t\t\t\t\t});\n\t\t\t\t\t\t\t\t\t}\n\t\t\t\t\t\t\t\t\t//this._positionFocusElement(focusedSprite);\n\t\t\t\t\t\t\t\t\tthis._keyboardDragPoint = undefined;\n\t\t\t\t\t\t\t\t\t// @todo dispatch mouseup event instead of calling dragStop?\n\t\t\t\t\t\t\t\t\t// this._dispatchEvent(\"globalpointerup\", target, upEvent);\n\t\t\t\t\t\t\t\t\treturn;\n\t\t\t\t\t\t\t\t}\n\t\t\t\t\t\t\t\telse if (focusedSprite.get(\"focusableGroup\")) {\n\t\t\t\t\t\t\t\t\t// Find next item in focusable group\n\t\t\t\t\t\t\t\t\tconst group = focusedSprite.get(\"focusableGroup\");\n\t\t\t\t\t\t\t\t\tconst items = this._tabindexes.filter((item) => {\n\t\t\t\t\t\t\t\t\t\treturn item.get(\"focusableGroup\") == group && item.getPrivate(\"focusable\") !== false && item.isVisibleDeep() ? true : false;\n\t\t\t\t\t\t\t\t\t});\n\t\t\t\t\t\t\t\t\tlet index = items.indexOf(focusedSprite);\n\t\t\t\t\t\t\t\t\tconst lastIndex = items.length - 1;\n\t\t\t\t\t\t\t\t\tindex += (eventKey == \"ArrowRight\" || eventKey == \"ArrowDown\") ? 1 : -1;\n\t\t\t\t\t\t\t\t\tif (index < 0) {\n\t\t\t\t\t\t\t\t\t\tindex = lastIndex;\n\t\t\t\t\t\t\t\t\t}\n\t\t\t\t\t\t\t\t\telse if (index > lastIndex) {\n\t\t\t\t\t\t\t\t\t\tindex = 0;\n\t\t\t\t\t\t\t\t\t}\n\t\t\t\t\t\t\t\t\t$utils.focus(items[index].getPrivate(\"focusElement\")!.dom);\n\t\t\t\t\t\t\t\t}\n\t\t\t\t\t\t\t\tbreak;\n\t\t\t\t\t\t\tcase \"Tab\":\n\t\t\t\t\t\t\t\tconst group = focusedSprite.get(\"focusableGroup\");\n\t\t\t\t\t\t\t\tif (group && this._isShift) {\n\t\t\t\t\t\t\t\t\tthis._focusNext(focusedSprite.getPrivate(\"focusElement\")!.dom, -1, group);\n\t\t\t\t\t\t\t\t\treturn;\n\t\t\t\t\t\t\t\t}\n\t\t\t\t\t\t\t\tbreak;\n\t\t\t\t\t\t}\n\t\t\t\t\t}\n\t\t\t\t}));\n\t\t\t}\n\t\t}\n\n\t\tthis._startTicker();\n\t\tthis.setThemes([]);\n\n\t\tthis._addTooltip();\n\n\t\tif (!this._hasLicense()) {\n\t\t\tthis._showBranding();\n\t\t}\n\t}\n\n\tprivate _initResizeSensor(): void {\n\t\tif (this._resizeSensorDisposer) {\n\t\t\tthis._resizeSensorDisposer.dispose();\n\t\t}\n\t\tthis._resizeSensorDisposer = new ResizeSensor(this.dom, () => {\n\t\t\tif (this.autoResize) {\n\t\t\t\tthis.resize();\n\t\t\t}\n\t\t});\n\t\tthis._disposers.push(this._resizeSensorDisposer);\n\t}\n\n\t/**\n\t * If automatic resizing of char is disabled (`root.autoResize = false`), it\n\t * can be resized manually by calling this method.\n\t */\n\tpublic resize(): void {\n\t\tconst rect = this._getRealSize();\n\t\tconst size = this._getCalculatedSize(rect);\n\t\tconst w = Math.floor(size.width);\n\t\tconst h = Math.floor(size.height);\n\n\t\tif (w > 0 && h > 0) {\n\t\t\tconst realWidth = Math.floor(rect.width);\n\t\t\tconst realHeight = Math.floor(rect.height);\n\n\t\t\tconst htmlElementContainer = this._htmlElementContainer!;\n\t\t\thtmlElementContainer.style.width = w + \"px\";\n\t\t\thtmlElementContainer.style.height = h + \"px\";\n\n\t\t\tif (this._a11yD !== true) {\n\t\t\t\tconst focusElementContainer = this._focusElementContainer!;\n\t\t\t\tfocusElementContainer.style.width = w + \"px\";\n\t\t\t\tfocusElementContainer.style.height = h + \"px\";\n\t\t\t}\n\n\t\t\tthis._renderer.resize(realWidth, realHeight, w, h);\n\n\t\t\tconst rootContainer = this._rootContainer;\n\n\t\t\trootContainer.setPrivate(\"width\", w);\n\t\t\trootContainer.setPrivate(\"height\", h);\n\t\t\tthis._render();\n\t\t\tthis._handleLogo();\n\t\t}\n\t}\n\n\tprivate _render() {\n\t\tthis._renderer.render(this._rootContainer._display);\n\n\t\tif (this._focusElementDirty) {\n\t\t\tthis._updateCurrentFocus();\n\t\t\tthis._focusElementDirty = false;\n\t\t}\n\t}\n\n\tprivate _runTickers(currentTime: number) {\n\t\t$array.each(this._tickers, (f) => {\n\t\t\tf(currentTime);\n\t\t});\n\t}\n\n\tprivate _runAnimations(currentTime: number): boolean {\n\t\tlet running = 0;\n\n\t\t$array.keepIf(this._animations, (animation) => {\n\t\t\tconst state = animation._runAnimation(currentTime);\n\n\t\t\tif (state === AnimationState.Stopped) {\n\t\t\t\treturn false;\n\n\t\t\t} else if (state === AnimationState.Playing) {\n\t\t\t\t++running;\n\t\t\t\treturn true;\n\n\t\t\t} else {\n\t\t\t\treturn true;\n\t\t\t}\n\t\t});\n\n\t\tthis._isDirtyAnimation = false;\n\n\t\treturn running === 0;\n\t}\n\n\tprivate _runDirties() {\n\t\t//console.log(\"tick **************************************************************\");\n\t\tlet allParents: { [id: number]: IParent } = {};\n\n\t\twhile (this._isDirtyParents) {\n\t\t\t// This must be before calling _prepareChildren\n\t\t\tthis._isDirtyParents = false;\n\n\t\t\t$object.keys(this._dirtyParents).forEach((key) => {\n\t\t\t\tconst parent = this._dirtyParents[key];\n\n\t\t\t\tdelete this._dirtyParents[key];\n\n\t\t\t\tif (!parent.isDisposed()) {\n\t\t\t\t\tallParents[parent.uid] = parent;\n\t\t\t\t\tparent._prepareChildren();\n\t\t\t\t}\n\t\t\t});\n\t\t}\n\n\t\t$object.keys(allParents).forEach((key) => {\n\t\t\tallParents[key]._updateChildren();\n\t\t});\n\n\n\t\tconst objects: Array<Entity> = [];\n\n\t\t//\t\tconsole.log(\"_beforeChanged\")\n\t\t$object.keys(this._dirty).forEach((key) => {\n\t\t\tconst entity = this._dirty[key];\n\n\t\t\tif (entity.isDisposed()) {\n\t\t\t\tdelete this._dirty[entity.uid];\n\n\t\t\t} else {\n\t\t\t\tobjects.push(entity);\n\t\t\t\tentity._beforeChanged();\n\t\t\t}\n\t\t});\n\n\t\t//\t\tconsole.log(\"_changed\")\n\t\tobjects.forEach((entity) => {\n\t\t\tentity._changed();\n\t\t\tdelete this._dirty[entity.uid];\n\t\t\tentity._clearDirty();\n\t\t});\n\n\t\tthis._isDirty = false;\n\n\t\tconst depths: { [id: number]: number } = {};\n\t\tconst bounds: Array<IBounds> = [];\n\n\t\t$object.keys(this._dirtyBounds).forEach((key) => {\n\t\t\tconst entity = this._dirtyBounds[key];\n\n\t\t\tdelete this._dirtyBounds[key];\n\n\t\t\tif (!entity.isDisposed()) {\n\t\t\t\tdepths[entity.uid] = entity.depth();\n\t\t\t\tbounds.push(entity);\n\t\t\t}\n\t\t});\n\n\t\tthis._positionHTMLElements();\n\n\t\t// High depth -> low depth\n\t\tbounds.sort((x, y) => {\n\t\t\treturn $order.compare(depths[y.uid], depths[x.uid]);\n\t\t});\n\n\t\t//\t\tconsole.log(\"_updateBounds\")\n\t\tbounds.forEach((entity) => {\n\t\t\tentity._updateBounds();\n\t\t});\n\n\t\t//\t\tconsole.log(\"_updatePosition\")\n\t\tconst dirtyPositions = this._dirtyPositions;\n\t\t$object.keys(dirtyPositions).forEach((key) => {\n\t\t\tconst sprite = dirtyPositions[key];\n\n\t\t\tdelete dirtyPositions[key];\n\n\t\t\tif (!sprite.isDisposed()) {\n\t\t\t\tsprite._updatePosition();\n\t\t\t}\n\t\t});\n\n\t\t//\t\tconsole.log(\"_afterChanged\")\n\t\tobjects.forEach((entity) => {\n\t\t\tentity._afterChanged();\n\t\t});\n\t}\n\n\tprivate _renderFrame(currentTime: number): boolean {\n\t\tif (this._updateTick) {\n\t\t\tif (this.events.isEnabled(\"framestarted\")) {\n\t\t\t\tthis.events.dispatch(\"framestarted\", {\n\t\t\t\t\ttype: \"framestarted\",\n\t\t\t\t\ttarget: this,\n\t\t\t\t\ttimestamp: currentTime,\n\t\t\t\t});\n\t\t\t}\n\n\t\t\tthis._checkComputedStyles();\n\t\t\tthis._runTickers(currentTime);\n\n\t\t\tconst animationDone = this._runAnimations(currentTime);\n\n\t\t\tthis._runDirties();\n\t\t\tthis._render();\n\t\t\tthis._renderer.resetImageArray();\n\t\t\tthis._positionHTMLElements();\n\n\t\t\tif (this.events.isEnabled(\"frameended\")) {\n\t\t\t\tthis.events.dispatch(\"frameended\", {\n\t\t\t\t\ttype: \"frameended\",\n\t\t\t\t\ttarget: this,\n\t\t\t\t\ttimestamp: currentTime,\n\t\t\t\t});\n\t\t\t}\n\n\t\t\treturn this._tickers.length === 0 &&\n\t\t\t\tanimationDone &&\n\t\t\t\t!this._isDirtyAnimation &&\n\t\t\t\t!this._isDirty;\n\n\t\t} else {\n\t\t\treturn true;\n\t\t}\n\t}\n\n\tpublic _runTicker(currentTime: number, now?: boolean) {\n\t\tif (!this.isDisposed()) {\n\t\t\tthis.animationTime = currentTime;\n\n\t\t\tconst done = this._renderFrame(currentTime);\n\n\t\t\t// No more work to do\n\t\t\tif (done) {\n\t\t\t\tthis._ticker = null;\n\t\t\t\tthis.animationTime = null;\n\n\t\t\t} else {\n\t\t\t\tif (!this._paused) {\n\t\t\t\t\tif (now) {\n\t\t\t\t\t\tthis._ticker!\n\t\t\t\t\t}\n\t\t\t\t\telse {\n\t\t\t\t\t\trAF(this.fps, this._ticker!);\n\t\t\t\t\t}\n\t\t\t\t}\n\t\t\t}\n\t\t}\n\t}\n\n\tpublic _runTickerNow(timeout: number = 10000) {\n\t\tif (!this.isDisposed()) {\n\t\t\tconst endTime = performance.now() + timeout;\n\n\t\t\tfor (; ;) {\n\t\t\t\tconst currentTime = performance.now();\n\n\t\t\t\tif (currentTime >= endTime) {\n\t\t\t\t\tthis.animationTime = null;\n\t\t\t\t\tbreak;\n\t\t\t\t}\n\n\t\t\t\tthis.animationTime = currentTime;\n\n\t\t\t\tconst done = this._renderFrame(currentTime);\n\n\t\t\t\tif (done) {\n\t\t\t\t\tthis.animationTime = null;\n\t\t\t\t\tbreak;\n\t\t\t\t}\n\t\t\t}\n\t\t}\n\t}\n\n\tprivate _startTicker() {\n\t\tif (this._ticker === null) {\n\t\t\tthis.animationTime = null;\n\n\t\t\tthis._ticker = (currentTime) => {\n\t\t\t\tthis._runTicker(currentTime);\n\t\t\t};\n\n\t\t\trAF(this.fps, this._ticker!);\n\t\t}\n\t}\n\n\t/**\n\t * Returns whether the root is updating or not.\n\t */\n\tpublic get updateTick(): boolean {\n\t\treturn this._updateTick;\n\t}\n\n\t/**\n\t * Enables or disables the root updating.\n\t */\n\tpublic set updateTick(value: boolean) {\n\t\tthis._updateTick = value;\n\n\t\tif (value) {\n\t\t\tthis._startTicker();\n\t\t}\n\t}\n\n\tpublic _addDirtyEntity(entity: Entity) {\n\t\tthis._isDirty = true;\n\n\t\tif (this._dirty[entity.uid] === undefined) {\n\t\t\tthis._dirty[entity.uid] = entity;\n\t\t}\n\n\t\tthis._startTicker();\n\t}\n\n\tpublic _addDirtyParent(parent: IParent) {\n\t\tthis._isDirty = true;\n\t\tthis._isDirtyParents = true;\n\n\t\tif (this._dirtyParents[parent.uid] === undefined) {\n\t\t\tthis._dirtyParents[parent.uid] = parent;\n\t\t}\n\n\t\tthis._startTicker();\n\t}\n\n\tpublic _addDirtyBounds(entity: IBounds) {\n\t\tthis._isDirty = true;\n\n\t\tif (this._dirtyBounds[entity.uid] === undefined) {\n\t\t\tthis._dirtyBounds[entity.uid] = entity;\n\t\t}\n\n\t\tthis._startTicker();\n\t}\n\n\tpublic _addDirtyPosition(sprite: Sprite) {\n\t\tthis._isDirty = true;\n\n\t\tif (this._dirtyPositions[sprite.uid] === undefined) {\n\t\t\tthis._dirtyPositions[sprite.uid] = sprite;\n\t\t}\n\n\t\tthis._startTicker();\n\t}\n\n\tpublic _addAnimation(animation: IAnimation) {\n\t\tthis._isDirtyAnimation = true;\n\n\t\t// TODO use numeric id instead\n\t\tif (this._animations.indexOf(animation) === -1) {\n\t\t\tthis._animations.push(animation);\n\t\t}\n\n\t\tthis._startTicker();\n\t}\n\n\tpublic _markDirty() {\n\t\tthis._isDirty = true;\n\t}\n\n\tpublic _markDirtyRedraw() {\n\t\tthis.events.once(\"frameended\", () => {\n\t\t\tthis._isDirty = true;\n\t\t\tthis._startTicker();\n\t\t})\n\t}\n\n\tpublic eachFrame(f: (currentTime: number) => void): IDisposer {\n\t\tthis._tickers.push(f);\n\t\tthis._startTicker();\n\n\t\treturn new Disposer(() => {\n\t\t\t$array.removeFirst(this._tickers, f);\n\t\t});\n\t}\n\n\tpublic markDirtyGlobal(container?: Container): void {\n\t\tif (!container) {\n\t\t\tcontainer = this.container;\n\t\t}\n\t\tcontainer.walkChildren((child) => {\n\t\t\tif (child instanceof Container) {\n\t\t\t\tthis.markDirtyGlobal(child);\n\t\t\t}\n\t\t\tchild.markDirty();\n\t\t\tchild.markDirtyBounds();\n\t\t});\n\t}\n\n\t/**\n\t * Returns width of the target container, in pixels.\n\t *\n\t * @return Width\n\t */\n\tpublic width(): number {\n\t\t// TODO make this more efficient, maybe just return the renderer's width ?\n\t\treturn Math.floor(this._getCalculatedSize(this._getRealSize()).width);\n\t}\n\n\t/**\n\t * Returns height of the target container, in pixels.\n\t *\n\t * @return Height\n\t */\n\tpublic height(): number {\n\t\t// TODO make this more efficient, maybe just return the renderer's height ?\n\t\treturn Math.floor(this._getCalculatedSize(this._getRealSize()).height);\n\t}\n\n\t/**\n\t * Disposes root and all the content in it.\n\t */\n\tpublic dispose(): void {\n\t\tif (!this._isDisposed) {\n\t\t\tthis._isDisposed = true;\n\n\t\t\tthis._rootContainer.dispose();\n\t\t\tthis._renderer.dispose();\n\t\t\tthis.horizontalLayout.dispose();\n\t\t\tthis.verticalLayout.dispose();\n\t\t\tthis.interfaceColors.dispose();\n\n\t\t\t$array.each(this._disposers, (x) => {\n\t\t\t\tx.dispose();\n\t\t\t});\n\n\t\t\tif (this._inner) {\n\t\t\t\t$utils.removeElement(this._inner);\n\t\t\t}\n\n\t\t\t$array.remove(registry.rootElements, this);\n\t\t}\n\t}\n\n\t/**\n\t * Returns `true` if root element is disposed.\n\t *\n\t * @return Disposed?\n\t */\n\tpublic isDisposed(): boolean {\n\t\treturn this._isDisposed;\n\t}\n\n\t/**\n\t * Triggers screen reader read out a message.\n\t *\n\t * @see {@link https://www.amcharts.com/docs/v5/concepts/accessibility/} for more info\n\t * @param  text  Alert text\n\t */\n\tpublic readerAlert(text: string): void {\n\t\tif (this._a11yD !== true) {\n\t\t\tthis._readerAlertElement!.innerHTML = $utils.stripTags(text);\n\t\t}\n\t}\n\n\t/**\n\t * Sets themes to be used for the chart.\n\t *\n\t * @see {@link https://www.amcharts.com/docs/v5/concepts/themes/} for more info\n\t * @param  themes  A list of themes\n\t */\n\tpublic setThemes(themes: Array<Theme>): void {\n\t\tthis._rootContainer.set(\"themes\", themes);\n\n\t\t// otherwise new themes are not applied\n\t\tconst tooltipContainer = this.tooltipContainer;\n\t\tif (tooltipContainer) {\n\t\t\ttooltipContainer._applyThemes();\n\t\t}\n\n\t\t// @todo review this\n\t\tconst interfaceColors = this.interfaceColors;\n\t\tif (interfaceColors) {\n\t\t\tinterfaceColors._applyThemes();\n\t\t}\n\n\n\t}\n\n\tprotected _addTooltip() {\n\t\tif (!this.tooltipContainer) {\n\t\t\tconst tooltipContainerSettings = this._tooltipContainerSettings;\n\t\t\tconst tooltipContainer = this._rootContainer.children.push(Container.new(this, {\n\t\t\t\tposition: \"absolute\",\n\t\t\t\tisMeasured: false,\n\t\t\t\twidth: p100,\n\t\t\t\theight: p100,\n\t\t\t\tlayer: tooltipContainerSettings ? 35 : 30,\n\t\t\t\tlayerMargin: tooltipContainerSettings ? tooltipContainerSettings : undefined\n\t\t\t}));\n\t\t\tthis.tooltipContainer = tooltipContainer;\n\n\t\t\tconst tooltip = Tooltip.new(this, {});\n\t\t\tthis.container.set(\"tooltip\", tooltip);\n\t\t\ttooltip.hide(0);\n\t\t\tthis._tooltip = tooltip;\n\t\t}\n\t}\n\n\t/**\n\t * Accesibility\n\t */\n\n\tpublic _registerTabindexOrder(target: Sprite): void {\n\t\tif (this._a11yD == true) {\n\t\t\treturn;\n\t\t}\n\n\t\tif (target.get(\"focusable\")) {\n\t\t\t$array.pushOne(this._tabindexes, target);\n\t\t}\n\t\telse {\n\t\t\t$array.remove(this._tabindexes, target);\n\t\t}\n\t\tthis._invalidateTabindexes();\n\t}\n\n\tpublic _unregisterTabindexOrder(target: Sprite): void {\n\t\tif (this._a11yD == true) {\n\t\t\treturn;\n\t\t}\n\n\t\t$array.remove(this._tabindexes, target);\n\t\tthis._invalidateTabindexes();\n\t}\n\n\tpublic _invalidateTabindexes(): void {\n\t\tif (this._a11yD == true) {\n\t\t\treturn;\n\t\t}\n\n\t\tthis._tabindexes.sort((a: Sprite, b: Sprite) => {\n\t\t\tconst aindex = a.get(\"tabindexOrder\", 0);\n\t\t\tconst bindex = b.get(\"tabindexOrder\", 0);\n\t\t\tif (aindex == bindex) {\n\t\t\t\treturn 0;\n\t\t\t}\n\t\t\telse if (aindex > bindex) {\n\t\t\t\treturn 1;\n\t\t\t}\n\t\t\telse {\n\t\t\t\treturn -1;\n\t\t\t}\n\t\t});\n\n\t\tconst groups: Array<string | number> = [];\n\t\t$array.each(this._tabindexes, (item, index) => {\n\t\t\tif (!item.getPrivate(\"focusElement\")) {\n\t\t\t\tthis._makeFocusElement(index, item);\n\t\t\t}\n\t\t\telse {\n\t\t\t\tthis._moveFocusElement(index, item);\n\t\t\t}\n\t\t\tconst group = item.get(\"focusableGroup\");\n\t\t\tif (group && item.getPrivate(\"focusable\") !== false) {\n\t\t\t\tif (groups.indexOf(group) !== -1) {\n\t\t\t\t\t// Non-first element in the group, make it not directly focusable\n\t\t\t\t\titem.getPrivate(\"focusElement\")!.dom.setAttribute(\"tabindex\", \"-1\");\n\t\t\t\t}\n\t\t\t\telse {\n\t\t\t\t\tgroups.push(group);\n\t\t\t\t}\n\t\t\t}\n\n\t\t});\n\n\t}\n\n\tpublic _updateCurrentFocus(): void {\n\t\tif (this._a11yD == true) {\n\t\t\treturn;\n\t\t}\n\n\t\tif (this._focusedSprite) {\n\t\t\tthis._decorateFocusElement(this._focusedSprite);\n\t\t\tthis._positionFocusElement(this._focusedSprite);\n\t\t}\n\t}\n\n\tpublic _decorateFocusElement(target: Sprite, focusElement?: HTMLDivElement): void {\n\n\t\tif (this._a11yD == true) {\n\t\t\treturn;\n\t\t}\n\n\t\t// Decorate with proper accessibility attributes\n\t\tif (!focusElement) {\n\t\t\tfocusElement = target.getPrivate(\"focusElement\")!.dom;\n\t\t}\n\n\t\tif (!focusElement) {\n\t\t\treturn;\n\t\t}\n\n\t\tconst role = target.get(\"role\");\n\t\tif (role) {\n\t\t\tfocusElement.setAttribute(\"role\", role);\n\t\t}\n\t\telse {\n\t\t\tfocusElement.removeAttribute(\"role\");\n\t\t}\n\n\t\tconst ariaLabel = target.get(\"ariaLabel\");\n\t\tif (ariaLabel) {\n\t\t\tconst label = populateString(target, ariaLabel);\n\t\t\tfocusElement.setAttribute(\"aria-label\", label);\n\t\t}\n\t\telse {\n\t\t\tfocusElement.removeAttribute(\"aria-label\");\n\t\t}\n\n\t\tconst ariaLive = target.get(\"ariaLive\");\n\t\tif (ariaLive) {\n\t\t\tfocusElement.setAttribute(\"aria-live\", ariaLive);\n\t\t}\n\t\telse {\n\t\t\tfocusElement.removeAttribute(\"aria-live\");\n\t\t}\n\n\t\tconst ariaChecked = target.get(\"ariaChecked\");\n\t\tif (ariaChecked != null && role && [\"checkbox\", \"option\", \"radio\", \"menuitemcheckbox\", \"menuitemradio\", \"treeitem\"].indexOf(role) !== -1) {\n\t\t\tfocusElement.setAttribute(\"aria-checked\", ariaChecked ? \"true\" : \"false\");\n\t\t}\n\t\telse {\n\t\t\tfocusElement.removeAttribute(\"aria-checked\");\n\t\t}\n\n\t\tconst ariaCurrent = target.get(\"ariaCurrent\");\n\t\tif (ariaCurrent != null) {\n\t\t\tfocusElement.setAttribute(\"aria-current\", ariaCurrent);\n\t\t}\n\t\telse {\n\t\t\tfocusElement.removeAttribute(\"aria-current\");\n\t\t}\n\n\t\tconst ariaSelected = target.get(\"ariaSelected\");\n\t\tif (ariaSelected != null && role && [\"gridcell\", \"option\", \"row\", \"tab\", \"columnheader\", \"rowheader\", \"treeitem\"].indexOf(role) !== -1) {\n\t\t\tfocusElement.setAttribute(\"aria-selected\", ariaSelected ? \"true\" : \"false\");\n\t\t}\n\t\telse {\n\t\t\tfocusElement.removeAttribute(\"aria-selected\");\n\t\t}\n\n\t\tif (target.get(\"ariaHidden\")) {\n\t\t\tfocusElement.setAttribute(\"aria-hidden\", \"true\");\n\t\t}\n\t\telse {\n\t\t\tfocusElement.removeAttribute(\"aria-hidden\");\n\t\t}\n\n\t\tconst ariaOrientation = target.get(\"ariaOrientation\");\n\t\tif (ariaOrientation) {\n\t\t\tfocusElement.setAttribute(\"aria-orientation\", ariaOrientation);\n\t\t}\n\t\telse {\n\t\t\tfocusElement.removeAttribute(\"aria-orientation\");\n\t\t}\n\n\t\tconst ariaValueNow = target.get(\"ariaValueNow\");\n\t\tif (ariaValueNow) {\n\t\t\tfocusElement.setAttribute(\"aria-valuenow\", ariaValueNow);\n\t\t}\n\t\telse {\n\t\t\tfocusElement.removeAttribute(\"aria-valuenow\");\n\t\t}\n\n\t\tconst ariaValueMin = target.get(\"ariaValueMin\");\n\t\tif (ariaValueMin) {\n\t\t\tfocusElement.setAttribute(\"aria-valuemin\", ariaValueMin);\n\t\t}\n\t\telse {\n\t\t\tfocusElement.removeAttribute(\"aria-valuemin\");\n\t\t}\n\n\t\tconst ariaValueMax = target.get(\"ariaValueMax\");\n\t\tif (ariaValueMax) {\n\t\t\tfocusElement.setAttribute(\"aria-valuemax\", ariaValueMax);\n\t\t}\n\t\telse {\n\t\t\tfocusElement.removeAttribute(\"aria-valuemax\");\n\t\t}\n\n\t\tconst ariaValueText = target.get(\"ariaValueText\");\n\t\tif (ariaValueText) {\n\t\t\tfocusElement.setAttribute(\"aria-valuetext\", ariaValueText);\n\t\t}\n\t\telse {\n\t\t\tfocusElement.removeAttribute(\"aria-valuetext\");\n\t\t}\n\n\t\tconst ariaControls = target.get(\"ariaControls\");\n\t\tif (ariaControls) {\n\t\t\tfocusElement.setAttribute(\"aria-controls\", ariaControls);\n\t\t}\n\t\telse {\n\t\t\tfocusElement.removeAttribute(\"aria-controls\");\n\t\t}\n\n\t\tif (target.get(\"visible\") && target.get(\"opacity\") !== 0 && target.get(\"role\") != \"tooltip\" && !target.isHidden() && target.getPrivate(\"focusable\") !== false) {\n\t\t\tif (focusElement.getAttribute(\"tabindex\") != \"-1\") {\n\t\t\t\tfocusElement.setAttribute(\"tabindex\", \"\" + this.tabindex);\n\t\t\t}\n\t\t\tfocusElement.removeAttribute(\"aria-hidden\");\n\t\t}\n\t\telse {\n\t\t\tfocusElement.removeAttribute(\"tabindex\");\n\t\t\tfocusElement.setAttribute(\"aria-hidden\", \"true\");\n\t\t}\n\t}\n\n\tpublic _makeFocusElement(index: number, target: Sprite): void {\n\n\t\tif (target.getPrivate(\"focusElement\") || this._a11yD == true) {\n\t\t\treturn;\n\t\t}\n\n\t\t// Init\n\t\tconst focusElement = document.createElement(\"div\");\n\t\tif (target.get(\"role\") != \"tooltip\") {\n\t\t\tfocusElement.tabIndex = this.tabindex;\n\t\t}\n\t\tfocusElement.style.position = \"absolute\";\n\t\t$utils.setInteractive(focusElement, false);\n\n\t\tconst disposers: Array<IDisposer> = [];\n\n\t\ttarget.setPrivate(\"focusElement\", {\n\t\t\tdom: focusElement,\n\t\t\tdisposers,\n\t\t});\n\n\t\tthis._decorateFocusElement(target);\n\n\t\tdisposers.push($utils.addEventListener(focusElement, \"focus\", (ev: FocusEvent) => {\n\t\t\tthis._handleFocus(ev);\n\t\t}));\n\n\t\tdisposers.push($utils.addEventListener(focusElement, \"blur\", (ev: FocusEvent) => {\n\t\t\tthis._handleBlur(ev);\n\t\t}));\n\n\t\tthis._moveFocusElement(index, target);\n\n\t}\n\n\tpublic _removeFocusElement(target: Sprite): void {\n\t\tif (this._a11yD == true) {\n\t\t\treturn;\n\t\t}\n\n\t\t$array.remove(this._tabindexes, target);\n\t\tconst focusElement = target.getPrivate(\"focusElement\");\n\t\tif (focusElement) {\n\t\t\tconst container = this._focusElementContainer!;\n\t\t\tcontainer.removeChild(focusElement.dom);\n\t\t\t$array.each(focusElement.disposers, (x) => {\n\t\t\t\tx.dispose();\n\t\t\t});\n\t\t}\n\t}\n\n\tpublic _hideFocusElement(target: Sprite): void {\n\t\tif (this._a11yD == true) {\n\t\t\treturn;\n\t\t}\n\n\t\tconst focusElement = target.getPrivate(\"focusElement\")!;\n\t\tfocusElement.dom.style.display = \"none\";\n\t}\n\n\tprotected _moveFocusElement(index: number, target: Sprite): void {\n\t\tif (this._a11yD == true) {\n\t\t\treturn;\n\t\t}\n\n\t\t// Get container\n\t\tconst container = this._focusElementContainer!;\n\t\tconst focusElement = target.getPrivate(\"focusElement\")!.dom;\n\n\t\tif (focusElement === this._focusElementContainer!.children[index]) {\n\t\t\t// Nothing to do\n\t\t\treturn;\n\t\t}\n\n\t\tconst next = this._focusElementContainer!.children[index + 1];\n\t\tif (next) {\n\t\t\tcontainer.insertBefore(focusElement, next);\n\t\t}\n\t\telse {\n\t\t\tcontainer.append(focusElement);\n\t\t}\n\t}\n\n\tprotected _positionFocusElement(target: Sprite): void {\n\t\tif (this._a11yD == true || target == undefined) {\n\t\t\treturn;\n\t\t}\n\n\t\tconst bounds = target.globalBounds();\n\n\t\tlet width = bounds.right == bounds.left ? target.width() : bounds.right - bounds.left;\n\t\tlet height = bounds.top == bounds.bottom ? target.height() : bounds.bottom - bounds.top;\n\n\t\tconst padding = this._settings.focusPadding !== undefined ? this._settings.focusPadding : 2;\n\n\t\tlet x = bounds.left - padding;\n\t\tlet y = bounds.top - padding;\n\n\t\tif (width < 0) {\n\t\t\tx += width;\n\t\t\twidth = Math.abs(width);\n\t\t}\n\n\t\tif (height < 0) {\n\t\t\ty += height;\n\t\t\theight = Math.abs(height);\n\t\t}\n\n\t\tconst focusElement = target.getPrivate(\"focusElement\")!.dom;\n\t\tfocusElement.style.top = y + \"px\";\n\t\tfocusElement.style.left = x + \"px\";\n\t\tfocusElement.style.width = (width + padding * 2) + \"px\";\n\t\tfocusElement.style.height = (height + padding * 2) + \"px\";\n\n\t}\n\n\tprotected _getSpriteByFocusElement(target: any): Sprite | undefined {\n\t\tlet found: Sprite | undefined;\n\t\t$array.eachContinue(this._tabindexes, (item, _index) => {\n\t\t\tif (item.getPrivate(\"focusElement\")!.dom === target) {\n\t\t\t\tfound = item;\n\t\t\t\treturn false;\n\t\t\t}\n\t\t\treturn true;\n\t\t});\n\t\treturn found;\n\t}\n\n\tprotected _handleFocus(ev: FocusEvent): void {\n\t\tif (this._a11yD == true) {\n\t\t\treturn;\n\t\t}\n\n\t\t// Get element\n\t\t//const focused = this._tabindexes[index];\n\t\tconst focused = this._getSpriteByFocusElement(ev.target);\n\n\t\tif (!focused) {\n\t\t\treturn;\n\t\t}\n\n\t\t// Jump over hidden elements\n\t\tif (!focused.isVisibleDeep()) {\n\t\t\tthis._focusNext(<HTMLDivElement>ev.target, this._isShift ? -1 : 1);\n\t\t\treturn;\n\t\t}\n\n\t\t// Size and position\n\t\tthis._positionFocusElement(focused);\n\t\t//this._decorateFocusElement(focused);\n\n\t\tthis._focusedSprite = focused;\n\n\t\tif (focused.events.isEnabled(\"focus\")) {\n\t\t\tfocused.events.dispatch(\"focus\", {\n\t\t\t\ttype: \"focus\",\n\t\t\t\toriginalEvent: ev,\n\t\t\t\ttarget: focused\n\t\t\t});\n\t\t}\n\t}\n\n\tprotected _focusNext(el: HTMLDivElement, direction: 1 | -1, group?: string | number): void {\n\t\tif (this._a11yD == true) {\n\t\t\treturn;\n\t\t}\n\n\t\tconst focusableElements = Array.from(document.querySelectorAll([\n\t\t\t'a[href]',\n\t\t\t'area[href]',\n\t\t\t'button:not([disabled])',\n\t\t\t'details',\n\t\t\t'input:not([disabled])',\n\t\t\t'iframe:not([disabled])',\n\t\t\t'select:not([disabled])',\n\t\t\t'textarea:not([disabled])',\n\t\t\t'[contentEditable=\"\"]',\n\t\t\t'[contentEditable=\"true\"]',\n\t\t\t'[contentEditable=\"TRUE\"]',\n\t\t\t'[tabindex]:not([tabindex^=\"-\"])',\n\t\t\t//':not([disabled])'\n\t\t].join(',')));\n\n\t\tlet index = focusableElements.indexOf(el) + direction;\n\n\t\tif (index < 0) {\n\t\t\tindex = focusableElements.length - 1;\n\t\t}\n\t\telse if (index >= focusableElements.length) {\n\t\t\tindex = 0;\n\t\t}\n\n\t\tconst targetElement = (<HTMLDivElement>focusableElements[index]);\n\n\t\tif (group && direction == -1) {\n\t\t\tconst target = this._getSpriteByFocusElement(targetElement);\n\t\t\tif (target && target.get(\"focusableGroup\") == group) {\n\t\t\t\tthis._focusNext(targetElement, direction);\n\t\t\t\treturn;\n\t\t\t}\n\t\t}\n\n\t\ttargetElement.focus();\n\t}\n\n\tprotected _handleBlur(ev: FocusEvent): void {\n\t\tif (this._a11yD == true) {\n\t\t\treturn;\n\t\t}\n\n\t\tconst focused = this._focusedSprite;\n\t\tif (focused && !focused.isDisposed() && focused.events.isEnabled(\"blur\")) {\n\t\t\tfocused.events.dispatch(\"blur\", {\n\t\t\t\ttype: \"blur\",\n\t\t\t\toriginalEvent: ev,\n\t\t\t\ttarget: focused\n\t\t\t});\n\t\t}\n\t\tthis._focusedSprite = undefined;\n\t}\n\n\t/**\n\t * @ignore\n\t */\n\tpublic updateTooltip(target: Text): void {\n\t\tif (this._a11yD == true) {\n\t\t\treturn;\n\t\t}\n\n\t\tconst text = $utils.stripTags(target._getText());\n\t\tlet tooltipElement = target.getPrivate(\"tooltipElement\");\n\t\tif (target.get(\"role\") == \"tooltip\" && text != \"\") {\n\t\t\tif (!tooltipElement) {\n\t\t\t\ttooltipElement = this._makeTooltipElement(target);\n\t\t\t}\n\t\t\tif (tooltipElement.innerHTML != text) {\n\t\t\t\ttooltipElement.innerHTML = text!;\n\t\t\t}\n\t\t\ttooltipElement.setAttribute(\"aria-hidden\", target.isVisibleDeep() ? \"false\" : \"true\");\n\t\t}\n\t\telse if (tooltipElement) {\n\t\t\ttooltipElement.remove();\n\t\t\ttarget.removePrivate(\"tooltipElement\");\n\t\t}\n\t}\n\n\tpublic _makeTooltipElement(target: Text): HTMLDivElement {\n\t\tconst container = this._tooltipElementContainer!;\n\t\tconst tooltipElement = document.createElement(\"div\");\n\t\ttooltipElement.style.position = \"absolute\";\n\t\ttooltipElement.style.width = \"1px\";\n\t\ttooltipElement.style.height = \"1px\";\n\t\ttooltipElement.style.overflow = \"hidden\";\n\t\ttooltipElement.style.clip = \"rect(1px, 1px, 1px, 1px)\";\n\n\t\t$utils.setInteractive(tooltipElement, false);\n\n\t\tthis._decorateFocusElement(target, tooltipElement);\n\t\tcontainer.append(tooltipElement);\n\t\ttarget.setPrivate(\"tooltipElement\", tooltipElement);\n\n\t\treturn tooltipElement;\n\t}\n\n\tpublic _removeTooltipElement(target: Text): void {\n\t\tif (this._a11yD == true) {\n\t\t\treturn;\n\t\t}\n\t\tconst tooltipElement = target.getPrivate(\"tooltipElement\");\n\t\tif (tooltipElement) {\n\t\t\tconst parent = tooltipElement.parentElement;\n\t\t\tif (parent) {\n\t\t\t\tparent.removeChild(tooltipElement);\n\t\t\t}\n\t\t}\n\t}\n\n\tpublic _invalidateAccessibility(target: Sprite): void {\n\t\tif (this._a11yD == true) {\n\t\t\treturn;\n\t\t}\n\t\tthis._focusElementDirty = true;\n\t\tconst focusElement = target.getPrivate(\"focusElement\");\n\t\tif (target.get(\"focusable\")) {\n\t\t\tif (focusElement) {\n\t\t\t\tthis._decorateFocusElement(target);\n\t\t\t\tthis._positionFocusElement(target);\n\t\t\t}\n\t\t\t// else {\n\t\t\t// \tthis._renderer._makeFocusElement(0, this);\n\t\t\t// }\n\t\t}\n\t\telse if (focusElement) {\n\t\t\tthis._removeFocusElement(target);\n\t\t}\n\t\t//this.updateCurrentFocus();\n\t}\n\n\t/**\n\t * Returns `true` if `target` is currently focused.\n\t *\n\t * @param   target  Target\n\t * @return          Focused?\n\t */\n\tpublic focused(target: Sprite): boolean {\n\t\treturn this._focusedSprite === target;\n\t}\n\n\t/**\n\t * Converts document coordinates to coordinates withing root element.\n\t *\n\t * @param   point  Document point\n\t * @return         Root point\n\t */\n\tpublic documentPointToRoot(point: IPoint): IPoint {\n\t\tconst rect = this._getRealSize();\n\t\tconst size = this._getCalculatedSize(rect);\n\n\t\tconst scaleWidth = size.width / rect.width;\n\t\tconst scaleHeight = size.height / rect.height;\n\n\t\treturn {\n\t\t\tx: (point.x - rect.left) * scaleWidth,\n\t\t\ty: (point.y - rect.top) * scaleHeight,\n\t\t};\n\t}\n\n\t/**\n\t * Converts root coordinates to document\n\t *\n\t * @param   point  Document point\n\t * @return         Root point\n\t */\n\tpublic rootPointToDocument(point: IPoint): IPoint {\n\t\tconst rect = this._getRealSize();\n\t\tconst size = this._getCalculatedSize(rect);\n\n\t\tconst scaleWidth = size.width / rect.width;\n\t\tconst scaleHeight = size.height / rect.height;\n\n\t\treturn {\n\t\t\tx: (point.x / scaleWidth) + rect.left,\n\t\t\ty: (point.y / scaleHeight) + rect.top\n\t\t};\n\t}\n\n\t/**\n\t * @ignore\n\t */\n\tpublic addDisposer<T extends IDisposer>(disposer: T): T {\n\t\tthis._disposers.push(disposer);\n\t\treturn disposer;\n\t}\n\n\tprotected _updateComputedStyles(): boolean {\n\t\tconst styles = window.getComputedStyle(this.dom);\n\t\tlet fontHash = \"\";\n\t\t$object.each(styles, (key, val) => {\n\t\t\tif ($type.isString(key) && key.match(/^font/)) {\n\t\t\t\tfontHash += val;\n\t\t\t}\n\t\t})\n\t\tconst changed = fontHash != this._fontHash;\n\t\tif (changed) {\n\t\t\tthis._fontHash = fontHash;\n\t\t}\n\t\treturn changed;\n\t}\n\n\tprotected _checkComputedStyles(): void {\n\t\tif (this._updateComputedStyles()) {\n\t\t\tthis._invalidateLabelBounds(this.container);\n\t\t}\n\t}\n\n\tprotected _invalidateLabelBounds(target: Sprite): void {\n\t\tif (target instanceof Container) {\n\t\t\ttarget.children.each((child) => {\n\t\t\t\tthis._invalidateLabelBounds(child);\n\t\t\t});\n\t\t}\n\t\telse if (target instanceof Text) {\n\t\t\ttarget.markDirtyBounds();\n\t\t}\n\t}\n\n\t/**\n\t * To all the clever heads out there. Yes, we did not make any attempts to\n\t * scramble this.\n\t *\n\t * This is a part of a tool meant for our users to manage their commercial\n\t * licenses for removal of amCharts branding from charts.\n\t *\n\t * The only legit way to do so is to purchase a commercial license for amCharts:\n\t * https://www.amcharts.com/online-store/\n\t *\n\t * Removing or altering this code, or disabling amCharts branding in any other\n\t * way is against the license and thus illegal.\n\t */\n\tprotected _hasLicense(): boolean {\n\t\tfor (let i = 0; i < registry.licenses.length; i++) {\n\t\t\tif (registry.licenses[i].match(/^AM5C.{5,}/i)) {\n\t\t\t\treturn true;\n\t\t\t}\n\t\t}\n\t\treturn false;\n\t}\n\n\tpublic _licenseApplied(): void {\n\t\tif (this._logo) {\n\t\t\tthis._logo.set(\"forceHidden\", true);\n\t\t}\n\t}\n\n\t/**\n\t * @ignore\n\t */\n\tpublic get debugGhostView(): boolean {\n\t\treturn this._renderer.debugGhostView;\n\t}\n\n\t/**\n\t * @ignore\n\t */\n\tpublic set debugGhostView(value: boolean) {\n\t\tthis._renderer.debugGhostView = value;\n\t}\n\n\t/**\n\t * Set this to `true` if you need chart to require first a tap onto it before\n\t * touch gesture related functionality like zoom/pan is turned on.\n\t *\n\t * @see {@link https://www.amcharts.com/docs/v5/getting-started/root-element/#Touch_related_options} for more info\n\t * @default false\n\t * @since 5.2.9\n\t * @param  value  Needs a tap to activate touch functions\n\t */\n\tpublic set tapToActivate(value: boolean) {\n\t\tthis._renderer.tapToActivate = value;\n\t}\n\n\t/**\n\t * @return Needs a tap to activate touch functions\n\t */\n\tpublic get tapToActivate(): boolean {\n\t\treturn this._renderer.tapToActivate;\n\t}\n\n\t/**\n\t * If `tapToActivate` is set to `true`, this setting will determine number\n\t * of milliseconds the chart will stay \"active\", before releasing the\n\t * controls back to the page.\n\t *\n\t * @see {@link https://www.amcharts.com/docs/v5/getting-started/root-element/#Touch_related_options} for more info\n\t * @default 3000\n\t * @since 5.2.9\n\t * @param  value  Timeout\n\t */\n\tpublic set tapToActivateTimeout(value: number) {\n\t\tthis._renderer.tapToActivateTimeout = value;\n\t}\n\n\t/**\n\t * @return Timeout\n\t */\n\tpublic get tapToActivateTimeout(): number {\n\t\treturn this._renderer.tapToActivateTimeout;\n\t}\n\n\tpublic _makeHTMLElement(target: Container): HTMLDivElement {\n\n\t\t// Get container\n\t\tconst container = this._htmlElementContainer!;\n\n\t\t// Init\n\t\tconst htmlElement = document.createElement(\"div\");\n\t\ttarget.setPrivate(\"htmlElement\", htmlElement);\n\n\t\t//htmlElement.tabIndex = this.tabindex;\n\t\thtmlElement.style.position = \"absolute\";\n\t\thtmlElement.style.overflow = \"auto\";\n\t\thtmlElement.style.boxSizing = \"border-box\";\n\t\t$utils.setInteractive(htmlElement, target.get(\"interactive\", false));\n\n\t\t// Translate events\n\t\tif (target.events.isEnabled(\"click\")) {\n\t\t\t$utils.setInteractive(htmlElement, true);\n\t\t\tthis._disposers.push($utils.addEventListener<PointerEvent | MouseEvent>(htmlElement, \"click\", (ev: IPointerEvent) => {\n\t\t\t\tconst downEvent = this._renderer.getEvent(ev);\n\t\t\t\ttarget.events.dispatch(\"click\", {\n\t\t\t\t\ttype: \"click\",\n\t\t\t\t\toriginalEvent: downEvent.event,\n\t\t\t\t\tpoint: downEvent.point,\n\t\t\t\t\tsimulated: false,\n\t\t\t\t\ttarget: target\n\t\t\t\t});\n\t\t\t}));\n\t\t}\n\n\t\tthis._positionHTMLElement(target);\n\n\t\tcontainer.append(htmlElement);\n\n\t\t$array.pushOne(this._htmlEnabledContainers, target);\n\n\t\treturn htmlElement;\n\t}\n\n\tpublic _positionHTMLElements(): void {\n\t\t$array.each(this._htmlEnabledContainers, (target) => {\n\t\t\tthis._positionHTMLElement(target);\n\t\t});\n\t}\n\n\tpublic _positionHTMLElement(target: Container): void {\n\t\tconst htmlElement = target.getPrivate(\"htmlElement\");\n\t\tif (htmlElement) {\n\n\t\t\t// Translate settings\n\t\t\tconst visualSettings = [\"paddingTop\", \"paddingRight\", \"paddingBottom\", \"paddingLeft\", \"minWidth\", \"minHeight\", \"maxWidth\", \"maxHeight\"];\n\t\t\t$array.each(visualSettings, (setting: any) => {\n\t\t\t\tconst value = target.get(setting);\n\t\t\t\tif (value) {\n\t\t\t\t\thtmlElement.style[setting] = value + \"px\";\n\t\t\t\t}\n\t\t\t\telse {\n\t\t\t\t\thtmlElement.style[setting] = \"\";\n\t\t\t\t}\n\t\t\t});\n\n\t\t\t// Init and reset scale / rotation\n\t\t\tconst scale = target.compositeScale() || 1;\n\t\t\tconst rotation = target.compositeRotation() || 0;\n\t\t\thtmlElement.style.transform = \"\";\n\t\t\thtmlElement.style.transformOrigin = \"\";\n\n\t\t\t// Deal with opacity\n\t\t\tconst opacity = target.compositeOpacity();\n\t\t\tsetTimeout(() => {\n\t\t\t\thtmlElement.style.opacity = opacity + \"\";\n\t\t\t}, 10);\n\n\t\t\tconst visible = target.isVisibleDeep();\n\t\t\tif (visible) {\n\t\t\t\thtmlElement.style.display = \"block\";\n\t\t\t}\n\n\t\t\t// Deal with position\n\t\t\t// const bounds = target.globalBounds();\n\t\t\t// htmlElement.style.top = (bounds.top) + \"px\";\n\t\t\t// htmlElement.style.left = (bounds.left) + \"px\";\n\t\t\tlet pos = {\n\t\t\t\tx: target.x() + target.get(\"dx\", 0),\n\t\t\t\ty: target.y() + target.get(\"dy\", 0)\n\t\t\t}\n\t\t\tif (target.parent) {\n\t\t\t\tpos = target.parent.toGlobal(pos)\n\t\t\t}\n\t\t\thtmlElement.style.top = pos.y + \"px\";\n\t\t\thtmlElement.style.left = pos.x + \"px\";\n\n\t\t\t// Use width/height if those are set\n\t\t\tconst width = target.get(\"width\");\n\t\t\tconst height = target.get(\"height\");\n\n\t\t\tlet w: number = 0;\n\t\t\tlet h: number = 0;\n\n\t\t\tif (width) {\n\t\t\t\tw = target.width();\n\t\t\t}\n\n\t\t\tif (height) {\n\t\t\t\th = target.height();\n\t\t\t}\n\n\n\t\t\tif (!width || !height) {\n\t\t\t\thtmlElement.style.position = \"fixed\";\n\t\t\t\thtmlElement.style.width = \"\";\n\t\t\t\thtmlElement.style.height = \"\";\n\t\t\t\tconst bbox = htmlElement.getBoundingClientRect();\n\t\t\t\thtmlElement.style.position = \"absolute\";\n\t\t\t\tif (!width) w = bbox.width;\n\t\t\t\tif (!height) h = bbox.height;\n\n\t\t\t\tlet lw = w / scale;\n\t\t\t\tlet lh = h / scale;\n\n\t\t\t\tlet cx = target.get(\"centerX\", 0);\n\t\t\t\tlet cy = target.get(\"centerY\", 0);\n\n\t\t\t\tlet ll = 0;\n\t\t\t\tlet lr = 0;\n\t\t\t\tlet lt = 0;\n\t\t\t\tlet lb = 0;\n\n\t\t\t\tif (cx instanceof Percent) {\n\t\t\t\t\tll = -cx.value * lw;\n\t\t\t\t\tlr = (1 - cx.value) * lw;\n\t\t\t\t}\n\t\t\t\telse {\n\t\t\t\t\tll = -cx;\n\t\t\t\t\tlr = lw - cx;\n\t\t\t\t}\n\n\t\t\t\tif (cy instanceof Percent) {\n\t\t\t\t\tlt = -cy.value * lh;\n\t\t\t\t\tlb = (1 - cy.value) * lh;\n\t\t\t\t}\n\t\t\t\telse {\n\t\t\t\t\tlt = -cy;\n\t\t\t\t\tlb = lh - cy;\n\t\t\t\t}\n\n\t\t\t\ttarget._localBounds = { left: ll, right: lr, top: lt, bottom: lb };\n\n\t\t\t\tlet previousBounds = target._adjustedLocalBounds;\n\t\t\t\tlet newBounds = target._display.getAdjustedBounds(target._localBounds);\n\t\t\t\ttarget._adjustedLocalBounds = newBounds;\n\n\t\t\t\t// compare each value of the bounds\n\t\t\t\tif (previousBounds.left !== newBounds.left || previousBounds.right !== newBounds.right || previousBounds.top !== newBounds.top || previousBounds.bottom !== newBounds.bottom) {\n\t\t\t\t\ttarget.markDirtyBounds();\n\t\t\t\t}\n\t\t\t}\n\n\t\t\tif (w > 0) {\n\t\t\t\thtmlElement.style.minWidth = (w) + \"px\";\n\t\t\t}\n\t\t\tif (h > 0) {\n\t\t\t\thtmlElement.style.minHeight = (h) + \"px\";\n\t\t\t}\n\n\t\t\t// Hide or show\n\t\t\tif (!visible || opacity == 0) {\n\t\t\t\thtmlElement.style.display = \"none\";\n\t\t\t}\n\n\t\t\t// Center position\n\t\t\tconst x = target.get(\"centerX\", 0);\n\t\t\tconst originX = isPercent(x) ? (x as Percent).percent + \"%\" : x + \"px\";\n\t\t\tconst y = target.get(\"centerY\", 0);\n\t\t\tconst originY = isPercent(y) ? (y as Percent).percent + \"%\" : y + \"px\";\n\n\t\t\tif (x || y) {\n\t\t\t\thtmlElement.style.transform = \"translate(-\" + originX + \", -\" + originY + \")\" + htmlElement.style.transform;\n\t\t\t}\n\n\t\t\t// Deal with scale\n\t\t\tif (scale != 1) {\n\t\t\t\thtmlElement.style.transform += \"scale(\" + scale + \")\";\n\t\t\t}\n\n\t\t\tif (rotation != 0) {\n\t\t\t\thtmlElement.style.transform += \" rotate(\" + rotation + \"deg)\";\n\t\t\t}\n\n\t\t\tif (htmlElement.style.transform != \"\") {\n\t\t\t\thtmlElement.style.transformOrigin = originX + \" \" + originY;\n\t\t\t\t//htmlElement.style.transformOrigin = \"0% 0%\";\n\t\t\t}\n\n\n\t\t}\n\t}\n\n\tpublic _setHTMLContent(target: Container, html: string): void {\n\t\tlet htmlElement = target.getPrivate(\"htmlElement\");\n\t\tif (!htmlElement) {\n\t\t\thtmlElement = this._makeHTMLElement(target);\n\t\t}\n\t\tif (htmlElement.innerHTML != html) {\n\t\t\thtmlElement.innerHTML = html;\n\t\t}\n\t}\n\n\tpublic _removeHTMLContent(target: Container): void {\n\t\tlet htmlElement = target.getPrivate(\"htmlElement\");\n\t\tif (htmlElement) {\n\t\t\tthis._htmlElementContainer!.removeChild(htmlElement);\n\t\t\ttarget.removePrivate(\"htmlElement\");\n\t\t}\n\t\t$array.remove(this._htmlEnabledContainers, target);\n\t}\n}\n","import { Sprite } from \"./Sprite\";\r\nimport { populateString } from \"../util/PopulateString\";\r\nimport * as $array from \"../util/Array\";\r\nimport * as $utils from \"../util/Utils\";\r\nimport { Disposer } from \"../util/Disposer\";\r\n/**\r\n * @ignore Text is an internal class. Use Label instead.\r\n */\r\nexport class Text extends Sprite {\r\n    constructor() {\r\n        super(...arguments);\r\n        Object.defineProperty(this, \"textStyle\", {\r\n            enumerable: true,\r\n            configurable: true,\r\n            writable: true,\r\n            value: this._root._renderer.makeTextStyle()\r\n        });\r\n        Object.defineProperty(this, \"_display\", {\r\n            enumerable: true,\r\n            configurable: true,\r\n            writable: true,\r\n            value: this._root._renderer.makeText(\"\", this.textStyle)\r\n        });\r\n        Object.defineProperty(this, \"_textStyles\", {\r\n            enumerable: true,\r\n            configurable: true,\r\n            writable: true,\r\n            value: [\r\n                \"textAlign\",\r\n                \"fontFamily\",\r\n                \"fontSize\",\r\n                \"fontStyle\",\r\n                \"fontWeight\",\r\n                \"fontStyle\",\r\n                \"fontVariant\",\r\n                \"textDecoration\",\r\n                \"shadowColor\",\r\n                \"shadowBlur\",\r\n                \"shadowOffsetX\",\r\n                \"shadowOffsetY\",\r\n                \"shadowOpacity\",\r\n                // \"leading\",\r\n                // \"letterSpacing\",\r\n                \"lineHeight\",\r\n                \"baselineRatio\",\r\n                //\"padding\",\r\n                // \"stroke\",\r\n                // \"strokeThickness\",\r\n                // \"trim\",\r\n                // \"wordWrap\",\r\n                \"direction\",\r\n                \"textBaseline\",\r\n                \"oversizedBehavior\",\r\n                \"breakWords\",\r\n                \"ellipsis\",\r\n                \"minScale\",\r\n                \"maxChars\"\r\n            ]\r\n        });\r\n        Object.defineProperty(this, \"_originalScale\", {\r\n            enumerable: true,\r\n            configurable: true,\r\n            writable: true,\r\n            value: void 0\r\n        });\r\n    }\r\n    _updateBounds() {\r\n        if (!this.get(\"text\")) {\r\n            let newBounds = {\r\n                left: 0,\r\n                right: 0,\r\n                top: 0,\r\n                bottom: 0,\r\n            };\r\n            this._adjustedLocalBounds = newBounds;\r\n        }\r\n        else {\r\n            super._updateBounds();\r\n            let fillGradient = this.get(\"fillGradient\");\r\n            if (fillGradient) {\r\n                this._display.style.fill = fillGradient.getFill(this);\r\n            }\r\n        }\r\n    }\r\n    _changed() {\r\n        super._changed();\r\n        this._display.clear();\r\n        let textStyle = this.textStyle;\r\n        if (this.isDirty(\"opacity\")) {\r\n            let opacity = this.get(\"opacity\", 1);\r\n            this._display.alpha = opacity;\r\n        }\r\n        if (this.isDirty(\"text\") || this.isDirty(\"populateText\")) {\r\n            this._display.text = this._getText();\r\n            this.markDirtyBounds();\r\n            if (this.get(\"role\") == \"tooltip\") {\r\n                this._root.updateTooltip(this);\r\n            }\r\n        }\r\n        if (this.isPrivateDirty(\"tooltipElement\")) {\r\n            const tooltipElement = this.getPrivate(\"tooltipElement\");\r\n            if (tooltipElement) {\r\n                this._disposers.push(new Disposer(() => {\r\n                    this._root._removeTooltipElement(this);\r\n                }));\r\n            }\r\n        }\r\n        if (this.isDirty(\"width\")) {\r\n            textStyle.wordWrapWidth = this.width();\r\n            this.markDirtyBounds();\r\n        }\r\n        if (this.isDirty(\"oversizedBehavior\")) {\r\n            textStyle.oversizedBehavior = this.get(\"oversizedBehavior\", \"none\");\r\n            this.markDirtyBounds();\r\n        }\r\n        if (this.isDirty(\"breakWords\")) {\r\n            textStyle.breakWords = this.get(\"breakWords\", false);\r\n            this.markDirtyBounds();\r\n        }\r\n        if (this.isDirty(\"ellipsis\")) {\r\n            textStyle.ellipsis = this.get(\"ellipsis\");\r\n            this.markDirtyBounds();\r\n        }\r\n        if (this.isDirty(\"ignoreFormatting\")) {\r\n            textStyle.ignoreFormatting = this.get(\"ignoreFormatting\", false);\r\n            this.markDirtyBounds();\r\n        }\r\n        if (this.isDirty(\"minScale\")) {\r\n            textStyle.minScale = this.get(\"minScale\", 0);\r\n            this.markDirtyBounds();\r\n        }\r\n        if (this.isDirty(\"fill\") || this.isDirty(\"fillGradient\")) {\r\n            const fill = this.get(\"fill\");\r\n            const fillGradient = this.get(\"fillGradient\");\r\n            const fillOpacity = this.get(\"fillOpacity\");\r\n            if (fillGradient) {\r\n                if (fill) {\r\n                    const stops = fillGradient.get(\"stops\", []);\r\n                    if (stops.length) {\r\n                        $array.each(stops, (stop) => {\r\n                            if ((!stop.color || stop.colorInherited) && fill) {\r\n                                stop.color = fill;\r\n                                stop.colorInherited = true;\r\n                            }\r\n                            if (stop.opacity == null || stop.opacityInherited) {\r\n                                stop.opacity = fillOpacity;\r\n                                stop.opacityInherited = true;\r\n                            }\r\n                        });\r\n                    }\r\n                }\r\n                textStyle.fill = fillGradient.getFill(this);\r\n            }\r\n            else if (fill) {\r\n                textStyle.fill = fill;\r\n            }\r\n        }\r\n        if (this.isDirty(\"fillOpacity\")) {\r\n            let fillOpacity = this.get(\"fillOpacity\", 1);\r\n            if (fillOpacity) {\r\n                textStyle.fillOpacity = fillOpacity;\r\n            }\r\n        }\r\n        if (this.isDirty(\"maxWidth\") || this.isPrivateDirty(\"maxWidth\")) {\r\n            textStyle.maxWidth = this.get(\"maxWidth\", this.getPrivate(\"maxWidth\"));\r\n            this.markDirtyBounds();\r\n        }\r\n        if (this.isDirty(\"maxHeight\") || this.isPrivateDirty(\"maxHeight\")) {\r\n            textStyle.maxHeight = this.get(\"maxHeight\", this.getPrivate(\"maxHeight\"));\r\n            this.markDirtyBounds();\r\n        }\r\n        $array.each(this._textStyles, (styleName) => {\r\n            if (this._dirty[styleName]) {\r\n                textStyle[styleName] = this.get(styleName);\r\n                this.markDirtyBounds();\r\n            }\r\n        });\r\n        textStyle[\"fontSize\"] = this.get(\"fontSize\");\r\n        textStyle[\"fontFamily\"] = this.get(\"fontFamily\");\r\n        this._display.style = textStyle;\r\n        if (this.isDirty(\"role\") && this.get(\"role\") == \"tooltip\") {\r\n            this._root.updateTooltip(this);\r\n        }\r\n    }\r\n    _getText() {\r\n        let text = this.get(\"text\", \"\");\r\n        if (this.get(\"maxChars\")) {\r\n            text = $utils.truncateTextWithEllipsis(text, this.get(\"maxChars\", 100000000), this.get(\"breakWords\"), this.get(\"ellipsis\"));\r\n        }\r\n        return this.get(\"populateText\") ? populateString(this, text) : text;\r\n    }\r\n    _getAccessibleText() {\r\n        const ariaLabel = this.get(\"ariaLabel\");\r\n        if (ariaLabel !== undefined) {\r\n            return this.get(\"populateText\") ? populateString(this, ariaLabel) : ariaLabel;\r\n        }\r\n        return this._getText();\r\n    }\r\n    /**\r\n     * Forces the text to be re-evaluated and re-populated.\r\n     */\r\n    markDirtyText() {\r\n        this._display.text = this._getText();\r\n        if (this.get(\"role\") == \"tooltip\") {\r\n            this._root.updateTooltip(this);\r\n        }\r\n        this.markDirtyBounds();\r\n        this.markDirty();\r\n    }\r\n    _setDataItem(dataItem) {\r\n        super._setDataItem(dataItem);\r\n        if (this.get(\"populateText\")) {\r\n            this.markDirtyText();\r\n        }\r\n    }\r\n    getNumberFormatter() {\r\n        if (this.parent) {\r\n            return this.parent.getNumberFormatter();\r\n        }\r\n        else {\r\n            return super.getNumberFormatter();\r\n        }\r\n    }\r\n    getDateFormatter() {\r\n        if (this.parent) {\r\n            return this.parent.getDateFormatter();\r\n        }\r\n        else {\r\n            return super.getDateFormatter();\r\n        }\r\n    }\r\n    getDurationFormatter() {\r\n        if (this.parent) {\r\n            return this.parent.getDurationFormatter();\r\n        }\r\n        else {\r\n            return super.getDurationFormatter();\r\n        }\r\n    }\r\n}\r\nObject.defineProperty(Text, \"className\", {\r\n    enumerable: true,\r\n    configurable: true,\r\n    writable: true,\r\n    value: \"Text\"\r\n});\r\nObject.defineProperty(Text, \"classNames\", {\r\n    enumerable: true,\r\n    configurable: true,\r\n    writable: true,\r\n    value: Sprite.classNames.concat([Text.className])\r\n});\r\n//# sourceMappingURL=Text.js.map","import type { Color } from \"../util/Color\";\nimport type { Percent } from \"../util/Percent\";\nimport type { IText } from \"./backend/Renderer\";\nimport type { IBounds } from \"../util/IBounds\";\nimport type { DataItem, IComponentDataItem } from \"./Component\";\nimport type { NumberFormatter } from \"../util/NumberFormatter\";\nimport type { DateFormatter } from \"../util/DateFormatter\";\nimport type { DurationFormatter } from \"../util/DurationFormatter\";\nimport type { Gradient } from \"../render/gradients/Gradient\";\n\nimport { Sprite, ISpriteSettings, ISpritePrivate } from \"./Sprite\";\nimport { populateString } from \"../util/PopulateString\";\n\nimport * as $array from \"../util/Array\";\nimport * as $utils from \"../util/Utils\";\nimport { Disposer } from \"../util/Disposer\";\n\n/**\n * @ignore Text is an internal class. Use Label instead.\n */\nexport interface ITextSettings extends ISpriteSettings {\n\ttext?: string;\n\tfill?: Color;\n\n\t/**\n\t * Fill gradient.\n\t *\n\t * @see {@link https://www.amcharts.com/docs/v5/concepts/colors-gradients-and-patterns/gradients/} for more information\n\t * @since 5.10.1\n\t */\n\tfillGradient?: Gradient;\n\n\tfillOpacity?: number;\n\ttextAlign?: \"start\" | \"end\" | \"left\" | \"right\" | \"center\";\n\tfontFamily?: string;\n\tfontSize?: string | number;\n\tfontWeight?: \"normal\" | \"bold\" | \"bolder\" | \"lighter\" | \"100\" | \"200\" | \"300\" | \"400\" | \"500\" | \"600\" | \"700\" | \"800\" | \"900\"\n\tfontStyle?: \"normal\" | \"italic\" | \"oblique\";\n\tfontVariant?: \"normal\" | \"small-caps\";\n\ttextDecoration?: \"underline\" | \"line-through\";\n\tshadowColor?: Color | null;\n\tshadowBlur?: number;\n\tshadowOffsetX?: number;\n\tshadowOffsetY?: number;\n\tshadowOpacity?: number;\n\t// leading?: number;\n\t// letterSpacing?: number;\n\tlineHeight?: Percent | number;\n\tbaselineRatio?: number;\n\t// stroke?: number;\n\t// strokeThickness?: number;\n\t// trim?: number;\n\t// wordWrap?: boolean;\n\topacity?: number;\n\tdirection?: \"ltr\" | \"rtl\";\n\ttextBaseline?: \"top\" | \"hanging\" | \"middle\" | \"alphabetic\" | \"ideographic\" | \"bottom\";\n\toversizedBehavior?: \"none\" | \"hide\" | \"fit\" | \"wrap\" | \"wrap-no-break\" | \"truncate\";\n\tbreakWords?: boolean;\n\tellipsis?: string;\n\tminScale?: number;\n\tpopulateText?: boolean;\n\tignoreFormatting?: boolean;\n\tmaxChars?: number;\n}\n\n/**\n * @ignore\n */\nexport interface ITextPrivate extends ISpritePrivate {\n\n\t/**\n\t * @ignore\n\t */\n\ttooltipElement?: HTMLDivElement;\n\n}\n\n/**\n * @ignore Text is an internal class. Use Label instead.\n */\nexport class Text extends Sprite {\n\n\tdeclare public _settings: ITextSettings;\n\tdeclare public _privateSettings: ITextPrivate;\n\n\tpublic textStyle = this._root._renderer.makeTextStyle();\n\n\tpublic _display: IText = this._root._renderer.makeText(\"\", this.textStyle);\n\n\tprotected _textStyles: Array<keyof ITextSettings> = [\n\t\t\"textAlign\",\n\t\t\"fontFamily\",\n\t\t\"fontSize\",\n\t\t\"fontStyle\",\n\t\t\"fontWeight\",\n\t\t\"fontStyle\",\n\t\t\"fontVariant\",\n\t\t\"textDecoration\",\n\t\t\"shadowColor\",\n\t\t\"shadowBlur\",\n\t\t\"shadowOffsetX\",\n\t\t\"shadowOffsetY\",\n\t\t\"shadowOpacity\",\n\t\t// \"leading\",\n\t\t// \"letterSpacing\",\n\t\t\"lineHeight\",\n\t\t\"baselineRatio\",\n\t\t//\"padding\",\n\t\t// \"stroke\",\n\t\t// \"strokeThickness\",\n\t\t// \"trim\",\n\t\t// \"wordWrap\",\n\t\t\"direction\",\n\t\t\"textBaseline\",\n\t\t\"oversizedBehavior\",\n\t\t\"breakWords\",\n\t\t\"ellipsis\",\n\t\t\"minScale\",\n\t\t\"maxChars\"\n\t];\n\n\tprotected _originalScale: number | undefined;\n\n\tpublic static className: string = \"Text\";\n\tpublic static classNames: Array<string> = Sprite.classNames.concat([Text.className]);\n\n\tpublic _updateBounds(): void {\n\t\tif (!this.get(\"text\")) {\n\n\t\t\tlet newBounds: IBounds = {\n\t\t\t\tleft: 0,\n\t\t\t\tright: 0,\n\t\t\t\ttop: 0,\n\t\t\t\tbottom: 0,\n\t\t\t};\n\t\t\tthis._adjustedLocalBounds = newBounds;\n\t\t}\n\t\telse {\n\t\t\tsuper._updateBounds();\n\t\t\tlet fillGradient = this.get(\"fillGradient\");\n\t\t\tif (fillGradient) {\n\t\t\t\tthis._display.style.fill = fillGradient.getFill(this);\n\t\t\t}\n\t\t}\n\t}\n\n\tpublic _changed() {\n\t\tsuper._changed();\n\n\t\tthis._display.clear();\n\n\t\tlet textStyle = <any>this.textStyle;\n\n\t\tif (this.isDirty(\"opacity\")) {\n\t\t\tlet opacity = this.get(\"opacity\", 1);\n\t\t\tthis._display.alpha = opacity;\n\t\t}\n\n\t\tif (this.isDirty(\"text\") || this.isDirty(\"populateText\")) {\n\t\t\tthis._display.text = this._getText();\n\n\t\t\tthis.markDirtyBounds();\n\t\t\tif (this.get(\"role\") == \"tooltip\") {\n\t\t\t\tthis._root.updateTooltip(this);\n\t\t\t}\n\t\t}\n\n\t\tif (this.isPrivateDirty(\"tooltipElement\")) {\n\t\t\tconst tooltipElement = this.getPrivate(\"tooltipElement\");\n\t\t\tif (tooltipElement) {\n\t\t\t\tthis._disposers.push(new Disposer(() => {\n\t\t\t\t\tthis._root._removeTooltipElement(this);\n\t\t\t\t}));\n\t\t\t}\n\t\t}\n\n\t\tif (this.isDirty(\"width\")) {\n\t\t\ttextStyle.wordWrapWidth = this.width();\n\t\t\tthis.markDirtyBounds();\n\t\t}\n\n\t\tif (this.isDirty(\"oversizedBehavior\")) {\n\t\t\ttextStyle.oversizedBehavior = this.get(\"oversizedBehavior\", \"none\");\n\t\t\tthis.markDirtyBounds();\n\t\t}\n\n\t\tif (this.isDirty(\"breakWords\")) {\n\t\t\ttextStyle.breakWords = this.get(\"breakWords\", false);\n\t\t\tthis.markDirtyBounds();\n\t\t}\n\n\t\tif (this.isDirty(\"ellipsis\")) {\n\t\t\ttextStyle.ellipsis = this.get(\"ellipsis\");\n\t\t\tthis.markDirtyBounds();\n\t\t}\n\n\t\tif (this.isDirty(\"ignoreFormatting\")) {\n\t\t\ttextStyle.ignoreFormatting = this.get(\"ignoreFormatting\", false);\n\t\t\tthis.markDirtyBounds();\n\t\t}\n\n\t\tif (this.isDirty(\"minScale\")) {\n\t\t\ttextStyle.minScale = this.get(\"minScale\", 0);\n\t\t\tthis.markDirtyBounds();\n\t\t}\n\n\t\tif (this.isDirty(\"fill\") || this.isDirty(\"fillGradient\")) {\n\t\t\tconst fill = this.get(\"fill\");\n\t\t\tconst fillGradient = this.get(\"fillGradient\");\n\t\t\tconst fillOpacity = this.get(\"fillOpacity\");\n\t\t\tif (fillGradient) {\n\t\t\t\tif (fill) {\n\t\t\t\t\tconst stops = fillGradient.get(\"stops\", []);\n\t\t\t\t\tif (stops.length) {\n\t\t\t\t\t\t$array.each(stops, (stop: any) => {\n\t\t\t\t\t\t\tif ((!stop.color || stop.colorInherited) && fill) {\n\t\t\t\t\t\t\t\tstop.color = fill;\n\t\t\t\t\t\t\t\tstop.colorInherited = true;\n\t\t\t\t\t\t\t}\n\n\t\t\t\t\t\t\tif (stop.opacity == null || stop.opacityInherited) {\n\t\t\t\t\t\t\t\tstop.opacity = fillOpacity;\n\t\t\t\t\t\t\t\tstop.opacityInherited = true;\n\t\t\t\t\t\t\t}\n\t\t\t\t\t\t})\n\t\t\t\t\t}\n\t\t\t\t}\n\t\t\t\ttextStyle.fill = fillGradient.getFill(this);\n\t\t\t}\n\t\t\telse if (fill) {\n\t\t\t\ttextStyle.fill = fill;\n\t\t\t}\n\t\t}\n\n\t\tif (this.isDirty(\"fillOpacity\")) {\n\t\t\tlet fillOpacity = this.get(\"fillOpacity\", 1);\n\t\t\tif (fillOpacity) {\n\t\t\t\ttextStyle.fillOpacity = fillOpacity;\n\t\t\t}\n\t\t}\n\n\t\tif (this.isDirty(\"maxWidth\") || this.isPrivateDirty(\"maxWidth\")) {\n\t\t\ttextStyle.maxWidth = this.get(\"maxWidth\", this.getPrivate(\"maxWidth\"));\n\t\t\tthis.markDirtyBounds();\n\t\t}\n\n\t\tif (this.isDirty(\"maxHeight\") || this.isPrivateDirty(\"maxHeight\")) {\n\t\t\ttextStyle.maxHeight = this.get(\"maxHeight\", this.getPrivate(\"maxHeight\"));\n\t\t\tthis.markDirtyBounds();\n\t\t}\n\n\t\t$array.each(this._textStyles, (styleName) => {\n\t\t\tif (this._dirty[styleName]) {\n\t\t\t\ttextStyle[styleName] = this.get(styleName);\n\t\t\t\tthis.markDirtyBounds();\n\t\t\t}\n\t\t})\n\n\t\ttextStyle[\"fontSize\"] = this.get(\"fontSize\");\n\t\ttextStyle[\"fontFamily\"] = this.get(\"fontFamily\");\n\t\tthis._display.style = textStyle;\n\n\t\tif (this.isDirty(\"role\") && this.get(\"role\") == \"tooltip\") {\n\t\t\tthis._root.updateTooltip(this);\n\t\t}\n\t}\n\n\tpublic _getText(): string {\n\t\tlet text = this.get(\"text\", \"\");\n\t\tif (this.get(\"maxChars\")) {\n\t\t\ttext = $utils.truncateTextWithEllipsis(text, this.get(\"maxChars\", 100000000), this.get(\"breakWords\"), this.get(\"ellipsis\"));\n\t\t}\n\t\treturn this.get(\"populateText\") ? populateString(this, text) : text;\n\t}\n\n\tpublic _getAccessibleText(): string {\n\t\tconst ariaLabel = this.get(\"ariaLabel\");\n\t\tif (ariaLabel !== undefined) {\n\t\t\treturn this.get(\"populateText\") ? populateString(this, ariaLabel) : ariaLabel;\n\t\t}\n\t\treturn this._getText();\n\t}\n\n\t/**\n\t * Forces the text to be re-evaluated and re-populated.\n\t */\n\tpublic markDirtyText(): void {\n\t\tthis._display.text = this._getText();\n\t\tif (this.get(\"role\") == \"tooltip\") {\n\t\t\tthis._root.updateTooltip(this);\n\t\t}\n\t\tthis.markDirtyBounds();\n\t\tthis.markDirty();\n\t}\n\n\tpublic _setDataItem(dataItem?: DataItem<IComponentDataItem>): void {\n\t\tsuper._setDataItem(dataItem);\n\t\tif (this.get(\"populateText\")) {\n\t\t\tthis.markDirtyText();\n\t\t}\n\t}\n\n\tpublic getNumberFormatter(): NumberFormatter {\n\t\tif (this.parent) {\n\t\t\treturn this.parent.getNumberFormatter();\n\t\t}\n\t\telse {\n\t\t\treturn super.getNumberFormatter();\n\t\t}\n\t}\n\n\tpublic getDateFormatter(): DateFormatter {\n\t\tif (this.parent) {\n\t\t\treturn this.parent.getDateFormatter();\n\t\t}\n\t\telse {\n\t\t\treturn super.getDateFormatter();\n\t\t}\n\t}\n\n\tpublic getDurationFormatter(): DurationFormatter {\n\t\tif (this.parent) {\n\t\t\treturn this.parent.getDurationFormatter();\n\t\t}\n\t\telse {\n\t\t\treturn super.getDurationFormatter();\n\t\t}\n\t}\n}\n","/** @ignore */ /** */\r\nimport * as $array from \"./Array\";\r\nimport * as $utils from \"./Utils\";\r\n/**\r\n * @ignore\r\n */\r\nclass Native {\r\n    constructor() {\r\n        Object.defineProperty(this, \"_observer\", {\r\n            enumerable: true,\r\n            configurable: true,\r\n            writable: true,\r\n            value: void 0\r\n        });\r\n        Object.defineProperty(this, \"_targets\", {\r\n            enumerable: true,\r\n            configurable: true,\r\n            writable: true,\r\n            value: []\r\n        });\r\n        this._observer = new ResizeObserver((entries) => {\r\n            $array.each(entries, (entry) => {\r\n                $array.each(this._targets, (x) => {\r\n                    if (x.target === entry.target) {\r\n                        x.callback();\r\n                    }\r\n                });\r\n            });\r\n        });\r\n    }\r\n    addTarget(target, callback) {\r\n        this._observer.observe(target, { box: \"border-box\" });\r\n        this._targets.push({ target, callback });\r\n    }\r\n    removeTarget(target) {\r\n        this._observer.unobserve(target);\r\n        $array.keepIf(this._targets, (x) => {\r\n            return x.target !== target;\r\n        });\r\n    }\r\n}\r\n/**\r\n * @ignore\r\n */\r\nclass Raf {\r\n    constructor() {\r\n        Object.defineProperty(this, \"_timer\", {\r\n            enumerable: true,\r\n            configurable: true,\r\n            writable: true,\r\n            value: null\r\n        });\r\n        Object.defineProperty(this, \"_targets\", {\r\n            enumerable: true,\r\n            configurable: true,\r\n            writable: true,\r\n            value: []\r\n        });\r\n    }\r\n    addTarget(target, callback) {\r\n        if (this._timer === null) {\r\n            let lastTime = null;\r\n            const loop = () => {\r\n                const currentTime = Date.now();\r\n                if (lastTime === null || currentTime > (lastTime + Raf.delay)) {\r\n                    lastTime = currentTime;\r\n                    $array.each(this._targets, (x) => {\r\n                        let newSize = x.target.getBoundingClientRect();\r\n                        if (newSize.width !== x.size.width || newSize.height !== x.size.height) {\r\n                            x.size = newSize;\r\n                            x.callback();\r\n                        }\r\n                    });\r\n                }\r\n                if (this._targets.length === 0) {\r\n                    this._timer = null;\r\n                }\r\n                else {\r\n                    this._timer = requestAnimationFrame(loop);\r\n                }\r\n            };\r\n            this._timer = requestAnimationFrame(loop);\r\n        }\r\n        // We start off with fake bounds so that sensor always kicks in\r\n        let size = { width: 0, height: 0, left: 0, right: 0, top: 0, bottom: 0, x: 0, y: 0 };\r\n        this._targets.push({ target, callback, size });\r\n    }\r\n    removeTarget(target) {\r\n        $array.keepIf(this._targets, (x) => {\r\n            return x.target !== target;\r\n        });\r\n        if (this._targets.length === 0) {\r\n            if (this._timer !== null) {\r\n                cancelAnimationFrame(this._timer);\r\n                this._timer = null;\r\n            }\r\n        }\r\n    }\r\n}\r\nObject.defineProperty(Raf, \"delay\", {\r\n    enumerable: true,\r\n    configurable: true,\r\n    writable: true,\r\n    value: 200\r\n});\r\n/**\r\n * @ignore\r\n */\r\nlet observer = null;\r\n/**\r\n * @ignore\r\n */\r\nfunction makeSensor() {\r\n    if (observer === null) {\r\n        if (typeof ResizeObserver !== \"undefined\") {\r\n            observer = new Native();\r\n        }\r\n        else {\r\n            observer = new Raf();\r\n        }\r\n    }\r\n    return observer;\r\n}\r\n/**\r\n * @ignore\r\n */\r\nexport class ResizeSensor {\r\n    constructor(element, callback) {\r\n        Object.defineProperty(this, \"_sensor\", {\r\n            enumerable: true,\r\n            configurable: true,\r\n            writable: true,\r\n            value: void 0\r\n        });\r\n        Object.defineProperty(this, \"_element\", {\r\n            enumerable: true,\r\n            configurable: true,\r\n            writable: true,\r\n            value: void 0\r\n        });\r\n        Object.defineProperty(this, \"_listener\", {\r\n            enumerable: true,\r\n            configurable: true,\r\n            writable: true,\r\n            value: void 0\r\n        });\r\n        Object.defineProperty(this, \"_disposed\", {\r\n            enumerable: true,\r\n            configurable: true,\r\n            writable: true,\r\n            value: false\r\n        });\r\n        this._sensor = makeSensor();\r\n        this._element = element;\r\n        // This is needed because we need to know when the window is zoomed\r\n        this._listener = $utils.onZoom(callback);\r\n        this._sensor.addTarget(element, callback);\r\n    }\r\n    isDisposed() {\r\n        return this._disposed;\r\n    }\r\n    dispose() {\r\n        if (!this._disposed) {\r\n            this._disposed = true;\r\n            this._sensor.removeTarget(this._element);\r\n            this._listener.dispose();\r\n        }\r\n    }\r\n    get sensor() {\r\n        return this._sensor;\r\n    }\r\n}\r\n//# sourceMappingURL=ResizeSensor.js.map","/** @ignore *//** */\n\nimport type { IDisposer } from \"./Disposer\";\nimport * as $array from \"./Array\";\nimport * as $utils from \"./Utils\";\n\n/**\n * @ignore\n */\ninterface Sensor {\n\taddTarget(target: Element, callback: () => void): void;\n\tremoveTarget(target: Element): void;\n}\n\n/**\n * @ignore\n */\ndeclare const ResizeObserver: any;\n\n/**\n * @ignore\n */\nclass Native implements Sensor {\n\tprivate _observer: any;\n\tprivate _targets: Array<{ target: Element, callback: () => void }> = [];\n\n\tconstructor() {\n\t\tthis._observer = new ResizeObserver((entries: Array<any>) => {\n\t\t\t$array.each(entries, (entry) => {\n\t\t\t\t$array.each(this._targets, (x) => {\n\t\t\t\t\tif (x.target === entry.target) {\n\t\t\t\t\t\tx.callback();\n\t\t\t\t\t}\n\t\t\t\t});\n\t\t\t});\n\t\t});\n\t}\n\n\taddTarget(target: Element, callback: () => void) {\n\t\tthis._observer.observe(target, { box: \"border-box\" });\n\t\tthis._targets.push({ target, callback });\n\t}\n\n\tremoveTarget(target: Element) {\n\t\tthis._observer.unobserve(target);\n\n\t\t$array.keepIf(this._targets, (x) => {\n\t\t\treturn x.target !== target;\n\t\t});\n\t}\n}\n\n/**\n * @ignore\n */\ninterface ClientBounds {\n\twidth: number,\n\theight: number,\n\tleft: number,\n\tright: number,\n\ttop: number,\n\tbottom: number,\n\tx: number,\n\ty: number\n}\n\n\n/**\n * @ignore\n */\nclass Raf implements Sensor {\n\tpublic static delay: number = 200;\n\n\tprivate _timer: number | null = null;\n\tprivate _targets: Array<{ target: Element, callback: () => void, size: ClientRect | DOMRect | ClientBounds }> = [];\n\n\taddTarget(target: Element, callback: () => void) {\n\t\tif (this._timer === null) {\n\t\t\tlet lastTime: number | null = null;\n\n\t\t\tconst loop = () => {\n\t\t\t\tconst currentTime = Date.now();\n\n\t\t\t\tif (lastTime === null || currentTime > (lastTime + Raf.delay)) {\n\t\t\t\t\tlastTime = currentTime;\n\n\t\t\t\t\t$array.each(this._targets, (x) => {\n\t\t\t\t\t\tlet newSize = x.target.getBoundingClientRect();\n\n\t\t\t\t\t\tif (newSize.width !== x.size.width || newSize.height !== x.size.height) {\n\t\t\t\t\t\t\tx.size = newSize;\n\t\t\t\t\t\t\tx.callback();\n\t\t\t\t\t\t}\n\t\t\t\t\t});\n\t\t\t\t}\n\n\t\t\t\tif (this._targets.length === 0) {\n\t\t\t\t\tthis._timer = null;\n\n\t\t\t\t} else {\n\t\t\t\t\tthis._timer = requestAnimationFrame(loop);\n\t\t\t\t}\n\t\t\t};\n\n\t\t\tthis._timer = requestAnimationFrame(loop);\n\t\t}\n\n\t\t// We start off with fake bounds so that sensor always kicks in\n\t\tlet size = { width: 0, height: 0, left: 0, right: 0, top: 0, bottom: 0, x: 0, y: 0 };\n\t\tthis._targets.push({ target, callback, size });\n\t}\n\n\tremoveTarget(target: Element) {\n\t\t$array.keepIf(this._targets, (x) => {\n\t\t\treturn x.target !== target;\n\t\t});\n\n\t\tif (this._targets.length === 0) {\n\t\t\tif (this._timer !== null) {\n\t\t\t\tcancelAnimationFrame(this._timer);\n\t\t\t\tthis._timer = null;\n\t\t\t}\n\t\t}\n\t}\n}\n\n\n/**\n * @ignore\n */\nlet observer: Sensor | null = null;\n\n/**\n * @ignore\n */\nfunction makeSensor(): Sensor {\n\tif (observer === null) {\n\t\tif (typeof ResizeObserver !== \"undefined\") {\n\t\t\tobserver = new Native();\n\n\t\t} else {\n\t\t\tobserver = new Raf();\n\t\t}\n\t}\n\n\treturn observer;\n}\n\n/**\n * @ignore\n */\nexport class ResizeSensor implements IDisposer {\n\tprivate _sensor: Sensor;\n\tprivate _element: Element;\n\tprivate _listener: IDisposer;\n\tprivate _disposed: boolean = false;\n\n\tconstructor(element: Element, callback: () => void) {\n\t\tthis._sensor = makeSensor();\n\t\tthis._element = element;\n\n\t\t// This is needed because we need to know when the window is zoomed\n\t\tthis._listener = $utils.onZoom(callback);\n\n\t\tthis._sensor.addTarget(element, callback);\n\t}\n\n\tpublic isDisposed() {\n\t\treturn this._disposed;\n\t}\n\n\tpublic dispose() {\n\t\tif (!this._disposed) {\n\t\t\tthis._disposed = true;\n\t\t\tthis._sensor.removeTarget(this._element);\n\t\t\tthis._listener.dispose();\n\t\t}\n\t}\n\n\tpublic get sensor(): Sensor {\n\t\treturn this._sensor;\n\t}\n}\n","import { Entity } from \"./Entity\";\r\n/**\r\n * Presets for common UI elements.\r\n */\r\nexport class InterfaceColors extends Entity {\r\n}\r\nObject.defineProperty(InterfaceColors, \"className\", {\r\n    enumerable: true,\r\n    configurable: true,\r\n    writable: true,\r\n    value: \"InterfaceColors\"\r\n});\r\nObject.defineProperty(InterfaceColors, \"classNames\", {\r\n    enumerable: true,\r\n    configurable: true,\r\n    writable: true,\r\n    value: Entity.classNames.concat([InterfaceColors.className])\r\n});\r\n//# sourceMappingURL=InterfaceColors.js.map","import type { Color } from \"./Color\"\n\nimport { Entity, IEntitySettings } from \"./Entity\"\n\n\nexport interface IInterfaceColorsSettings extends IEntitySettings {\n\n\t/**\n\t * Used for generic outlines.\n\t */\n\tstroke?: Color,\n\n\t/**\n\t * Used for generic fills.\n\t */\n\tfill?: Color,\n\n\t/**\n\t * Primary button fill color.\n\t */\n\tprimaryButton?: Color,\n\n\t/**\n\t * Primary button fill color on hover.\n\t */\n\tprimaryButtonHover?: Color,\n\n\t/**\n\t * Primary button fill color when pressing down on it.\n\t */\n\tprimaryButtonDown?: Color,\n\n\t/**\n\t * Primary button fill color when it is set as active.\n\t */\n\tprimaryButtonActive?: Color,\n\n\t/**\n\t * Primary button fill color when it is set as disabled.\n\t */\n\tprimaryButtonDisabled?: Color,\t\n\n\t/**\n\t * Primary button text color when it is set as disabled.\n\t */\n\tprimaryButtonTextDisabled?: Color,\n\n\t/**\n\t * Primary button text color.\n\t */\n\tprimaryButtonText?: Color,\t\n\n\t/**\n\t * Primary button stroke (outline) color.\n\t */\n\tprimaryButtonStroke?: Color,\n\n\t/**\n\t * Secondary button fill color.\n\t */\n\tsecondaryButton?: Color,\n\n\t/**\n\t * Secondary button fill color on hover.\n\t */\n\tsecondaryButtonHover?: Color,\n\n\t/**\n\t * Secondary button fill color when pressing down on it.\n\t */\n\tsecondaryButtonDown?: Color,\n\n\t/**\n\t * Secondary button fill color when it is set as active.\n\t */\n\tsecondaryButtonActive?: Color,\n\n\t/**\n\t * Secondary button text color.\n\t */\n\tsecondaryButtonText?: Color,\n\n\t/**\n\t * Secondary button stroke (outline) color.\n\t */\n\tsecondaryButtonStroke?: Color,\n\n\t/**\n\t * Grid color.\n\t */\n\tgrid?: Color,\n\n\t/**\n\t * Chart background color.\n\t */\n\tbackground?: Color,\n\n\t/**\n\t * Alternative background, for elements that need to contrast with primary\n\t * background.\n\t */\n\talternativeBackground?: Color,\n\n\t/**\n\t * Label text color.\n\t */\n\ttext?: Color,\n\n\t/**\n\t * Alternative text color, used for inverted (dark) backgrounds.\n\t * @type {[type]}\n\t */\n\talternativeText?: Color,\n\n\t/**\n\t * Color for disabled elements.\n\t */\n\tdisabled?: Color,\n\n\t/**\n\t * Color to indicate positive value.\n\t */\n\tpositive?: Color,\n\n\t/**\n\t * Color to indicate negative value.\n\t */\n\tnegative?: Color\n\n}\n\n\n/**\n * Presets for common UI elements.\n */\nexport class InterfaceColors extends Entity {\n\tpublic static className: string = \"InterfaceColors\";\n\tpublic static classNames: Array<string> = Entity.classNames.concat([InterfaceColors.className]);\n\n\tdeclare public _settings: IInterfaceColorsSettings;\n}\n","import { MultiDisposer } from \"../util/Disposer\";\r\nimport { Label } from \"../render/Label\";\r\nimport { PointedRectangle } from \"../render/PointedRectangle\";\r\nimport { Container } from \"./Container\";\r\nimport { Percent } from \"../util/Percent\";\r\nimport { Color } from \"../util/Color\";\r\nimport * as $math from \"../util/Math\";\r\nimport * as $array from \"../util/Array\";\r\nimport * as $utils from \"../util/Utils\";\r\n/**\r\n * Creates a tooltip.\r\n *\r\n * @see {@link https://www.amcharts.com/docs/v5/concepts/common-elements/tooltips/} for more info\r\n * @important\r\n */\r\nexport class Tooltip extends Container {\r\n    constructor(root, settings, isReal, templates = []) {\r\n        super(root, settings, isReal, templates);\r\n        Object.defineProperty(this, \"_fx\", {\r\n            enumerable: true,\r\n            configurable: true,\r\n            writable: true,\r\n            value: 0\r\n        });\r\n        Object.defineProperty(this, \"_fy\", {\r\n            enumerable: true,\r\n            configurable: true,\r\n            writable: true,\r\n            value: 0\r\n        });\r\n        Object.defineProperty(this, \"_label\", {\r\n            enumerable: true,\r\n            configurable: true,\r\n            writable: true,\r\n            value: void 0\r\n        });\r\n        Object.defineProperty(this, \"_fillDp\", {\r\n            enumerable: true,\r\n            configurable: true,\r\n            writable: true,\r\n            value: void 0\r\n        });\r\n        Object.defineProperty(this, \"_strokeDp\", {\r\n            enumerable: true,\r\n            configurable: true,\r\n            writable: true,\r\n            value: void 0\r\n        });\r\n        Object.defineProperty(this, \"_labelDp\", {\r\n            enumerable: true,\r\n            configurable: true,\r\n            writable: true,\r\n            value: void 0\r\n        });\r\n        Object.defineProperty(this, \"_w\", {\r\n            enumerable: true,\r\n            configurable: true,\r\n            writable: true,\r\n            value: 0\r\n        });\r\n        Object.defineProperty(this, \"_h\", {\r\n            enumerable: true,\r\n            configurable: true,\r\n            writable: true,\r\n            value: 0\r\n        });\r\n        Object.defineProperty(this, \"_keepHoverDp\", {\r\n            enumerable: true,\r\n            configurable: true,\r\n            writable: true,\r\n            value: void 0\r\n        });\r\n        Object.defineProperty(this, \"_htmlContentHovered\", {\r\n            enumerable: true,\r\n            configurable: true,\r\n            writable: true,\r\n            value: false\r\n        });\r\n    }\r\n    _afterNew() {\r\n        this._settings.themeTags = $utils.mergeTags(this._settings.themeTags, [\"tooltip\"]);\r\n        super._afterNew();\r\n        const background = this._setDefaultFn(\"background\", () => {\r\n            return PointedRectangle.new(this._root, {});\r\n        });\r\n        background.set(\"themeTags\", [\"tooltip\", \"background\"]);\r\n        this._label = this.children.push(Label.new(this._root, {}));\r\n        this._disposers.push(this._label.events.on(\"boundschanged\", () => {\r\n            this._updateBackground();\r\n        }));\r\n        this._disposers.push(this.on(\"bounds\", () => {\r\n            this._updateBackground();\r\n        }));\r\n        this._updateTextColor();\r\n        this._root.tooltipContainer.children.push(this);\r\n        this.hide(0);\r\n        this._disposers.push(this.label.onPrivate(\"htmlElement\", (htmlElement) => {\r\n            if (htmlElement) {\r\n                this._disposers.push($utils.addEventListener(htmlElement, \"pointerover\", (_ev) => {\r\n                    this._htmlContentHovered = true;\r\n                }));\r\n                this._disposers.push($utils.addEventListener(htmlElement, \"pointerout\", (_ev) => {\r\n                    this._htmlContentHovered = false;\r\n                }));\r\n            }\r\n        }));\r\n        this.on(\"visible\", (_ev) => {\r\n            this._handleReaderAnnouncement();\r\n        });\r\n        this.label.events.on(\"dataitemchanged\", (_ev) => {\r\n            this._handleReaderAnnouncement();\r\n        });\r\n        this._root._tooltips.push(this);\r\n    }\r\n    _handleReaderAnnouncement() {\r\n        if (this.get(\"readerAnnounce\") && this.isVisibleDeep()) {\r\n            this._root.readerAlert(this.label.getAccessibleText());\r\n        }\r\n    }\r\n    /**\r\n     * A [[Label]] element for the tooltip.\r\n     *\r\n     * @readonly\r\n     * @return Label\r\n     */\r\n    get label() {\r\n        return this._label;\r\n    }\r\n    /**\r\n     * Permanently disposes the tooltip.\r\n     */\r\n    _dispose() {\r\n        super._dispose();\r\n        $array.remove(this._root._tooltips, this);\r\n    }\r\n    _updateChildren() {\r\n        super._updateChildren();\r\n        if (this.isDirty(\"pointerOrientation\") || this.isPrivateDirty(\"minWidth\") || this.isPrivateDirty(\"minHeight\")) {\r\n            this.get(\"background\")._markDirtyKey(\"width\");\r\n        }\r\n        const labelText = this.get(\"labelText\");\r\n        if (labelText != null) {\r\n            this.label.set(\"text\", this.get(\"labelText\"));\r\n        }\r\n        const labelHTML = this.get(\"labelHTML\");\r\n        if (labelHTML != null) {\r\n            this.label.set(\"html\", this.get(\"labelHTML\"));\r\n        }\r\n        const labelAriaLabel = this.get(\"labelAriaLabel\");\r\n        if (labelAriaLabel != null) {\r\n            this.label.set(\"ariaLabel\", this.get(\"labelAriaLabel\"));\r\n        }\r\n    }\r\n    _changed() {\r\n        super._changed();\r\n        if (this.isDirty(\"pointTo\") || this.isDirty(\"pointerOrientation\")) {\r\n            // can't compare to previous, as sometimes pointTo is set twice (when pointer moves, so the position won't be udpated)\r\n            this._updateBackground();\r\n        }\r\n        if (this.isDirty(\"tooltipTarget\")) {\r\n            this.updateBackgroundColor();\r\n        }\r\n        if (this.isDirty(\"keepTargetHover\")) {\r\n            const keephover = this.get(\"keepTargetHover\");\r\n            if (keephover) {\r\n                const bg = this.get(\"background\");\r\n                this._keepHoverDp = new MultiDisposer([\r\n                    bg.events.on(\"pointerover\", (_ev) => {\r\n                        let target = this.get(\"tooltipTarget\");\r\n                        if (target) {\r\n                            if (target.parent && target.parent.getPrivate(\"tooltipTarget\") == target) {\r\n                                target = target.parent;\r\n                            }\r\n                            target.hover();\r\n                        }\r\n                    }),\r\n                    bg.events.on(\"pointerout\", (_ev) => {\r\n                        let target = this.get(\"tooltipTarget\");\r\n                        if (target) {\r\n                            if (target.parent && target.parent.getPrivate(\"tooltipTarget\") == target) {\r\n                                target = target.parent;\r\n                            }\r\n                            if (!this._htmlContentHovered) {\r\n                                target.unhover();\r\n                            }\r\n                        }\r\n                    })\r\n                ]);\r\n                this.label.onPrivate(\"htmlElement\", (htmlElement) => {\r\n                    if (this._keepHoverDp && htmlElement) {\r\n                        this._keepHoverDp.disposers.push($utils.addEventListener(htmlElement, \"pointerleave\", (ev) => {\r\n                            const outEvent = this.root._renderer.getEvent(ev);\r\n                            bg.events.dispatch(\"pointerout\", {\r\n                                type: \"pointerout\",\r\n                                originalEvent: outEvent.event,\r\n                                point: outEvent.point,\r\n                                simulated: false,\r\n                                target: bg\r\n                            });\r\n                        }));\r\n                    }\r\n                });\r\n            }\r\n            else {\r\n                if (this._keepHoverDp) {\r\n                    this._keepHoverDp.dispose();\r\n                    this._keepHoverDp = undefined;\r\n                }\r\n            }\r\n        }\r\n    }\r\n    _onShow() {\r\n        super._onShow();\r\n        this.updateBackgroundColor();\r\n    }\r\n    updateBackgroundColor() {\r\n        let tooltipTarget = this.get(\"tooltipTarget\");\r\n        const background = this.get(\"background\");\r\n        let fill;\r\n        let stroke;\r\n        if (tooltipTarget && background) {\r\n            fill = tooltipTarget.get(\"fill\");\r\n            stroke = tooltipTarget.get(\"stroke\");\r\n            if (fill == null) {\r\n                fill = stroke;\r\n            }\r\n            if (this.get(\"getFillFromSprite\")) {\r\n                if (this._fillDp) {\r\n                    this._fillDp.dispose();\r\n                }\r\n                if (fill != null) {\r\n                    background.set(\"fill\", fill);\r\n                }\r\n                this._fillDp = tooltipTarget.on(\"fill\", (fill) => {\r\n                    if (fill != null) {\r\n                        background.set(\"fill\", fill);\r\n                        this._updateTextColor(fill);\r\n                    }\r\n                });\r\n                this._disposers.push(this._fillDp);\r\n            }\r\n            if (this.get(\"getStrokeFromSprite\")) {\r\n                if (this._strokeDp) {\r\n                    this._strokeDp.dispose();\r\n                }\r\n                if (fill != null) {\r\n                    background.set(\"stroke\", fill);\r\n                }\r\n                this._strokeDp = tooltipTarget.on(\"fill\", (fill) => {\r\n                    if (fill != null) {\r\n                        background.set(\"stroke\", fill);\r\n                    }\r\n                });\r\n                this._disposers.push(this._strokeDp);\r\n            }\r\n            if (this.get(\"getLabelFillFromSprite\")) {\r\n                if (this._labelDp) {\r\n                    this._labelDp.dispose();\r\n                }\r\n                if (fill != null) {\r\n                    this.label.set(\"fill\", fill);\r\n                }\r\n                this._labelDp = tooltipTarget.on(\"fill\", (fill) => {\r\n                    if (fill != null) {\r\n                        this.label.set(\"fill\", fill);\r\n                    }\r\n                });\r\n                this._disposers.push(this._labelDp);\r\n            }\r\n        }\r\n        this._updateTextColor(fill);\r\n    }\r\n    _updateTextColor(fill) {\r\n        if (this.get(\"autoTextColor\")) {\r\n            if (fill == null) {\r\n                fill = this.get(\"background\").get(\"fill\");\r\n            }\r\n            if (fill == null) {\r\n                fill = this._root.interfaceColors.get(\"background\");\r\n            }\r\n            if (fill instanceof Color) {\r\n                this.label.set(\"fill\", Color.alternative(fill, this._root.interfaceColors.get(\"alternativeText\"), this._root.interfaceColors.get(\"text\")));\r\n            }\r\n        }\r\n    }\r\n    _setDataItem(dataItem) {\r\n        super._setDataItem(dataItem);\r\n        this.label._setDataItem(dataItem);\r\n    }\r\n    _updateBackground() {\r\n        super.updateBackground();\r\n        const parent = this._root.container;\r\n        if (parent) {\r\n            let cw = 0.5;\r\n            let ch = 0.5;\r\n            let centerX = this.get(\"centerX\");\r\n            if (centerX instanceof Percent) {\r\n                cw = centerX.value;\r\n            }\r\n            let centerY = this.get(\"centerY\");\r\n            if (centerY instanceof Percent) {\r\n                ch = centerY.value;\r\n            }\r\n            let parentW = parent.width();\r\n            let parentH = parent.height();\r\n            let tooltipContainer = this.parent;\r\n            let xx = 0;\r\n            let yy = 0;\r\n            if (tooltipContainer) {\r\n                xx = tooltipContainer.x();\r\n                yy = tooltipContainer.y();\r\n                const layerMargin = tooltipContainer.get(\"layerMargin\");\r\n                if (layerMargin) {\r\n                    xx += layerMargin.left || 0;\r\n                    yy += layerMargin.top || 0;\r\n                    parentW += (layerMargin.left || 0) + (layerMargin.right || 0);\r\n                    parentH += (layerMargin.top || 0) + (layerMargin.bottom || 0);\r\n                }\r\n            }\r\n            const bounds = this.get(\"bounds\", { left: -xx, top: -yy, right: parentW - xx, bottom: parentH - yy });\r\n            this._updateBounds();\r\n            let w = this.width();\r\n            let h = this.height();\r\n            // use old w and h,as when tooltip is hidden, these are 0 and unneeded animation happens\r\n            if (w === 0) {\r\n                w = this._w;\r\n            }\r\n            if (h === 0) {\r\n                h = this._h;\r\n            }\r\n            let pointTo = this.get(\"pointTo\", { x: parentW / 2, y: parentH / 2 });\r\n            let x = pointTo.x;\r\n            let y = pointTo.y;\r\n            let pointerOrientation = this.get(\"pointerOrientation\");\r\n            let background = this.get(\"background\");\r\n            let pointerLength = 0;\r\n            let bgStrokeSizeY = 0;\r\n            let bgStrokeSizeX = 0;\r\n            if (background instanceof PointedRectangle) {\r\n                pointerLength = background.get(\"pointerLength\", 0);\r\n                bgStrokeSizeY = background.get(\"strokeWidth\", 0) / 2;\r\n                bgStrokeSizeX = bgStrokeSizeY;\r\n                background.set(\"width\", w);\r\n                background.set(\"height\", h);\r\n            }\r\n            let pointerX = 0;\r\n            let pointerY = 0;\r\n            let boundsW = bounds.right - bounds.left;\r\n            let boundsH = bounds.bottom - bounds.top;\r\n            // horizontal\r\n            if (pointerOrientation == \"horizontal\" || pointerOrientation == \"left\" || pointerOrientation == \"right\") {\r\n                bgStrokeSizeY = 0;\r\n                if (pointerOrientation == \"horizontal\") {\r\n                    if (x > bounds.left + boundsW / 2) {\r\n                        x -= (w * (1 - cw) + pointerLength);\r\n                        bgStrokeSizeX *= -1;\r\n                    }\r\n                    else {\r\n                        x += (w * cw + pointerLength);\r\n                    }\r\n                }\r\n                else if (pointerOrientation == \"left\") {\r\n                    x += (w * (1 - cw) + pointerLength);\r\n                }\r\n                else {\r\n                    x -= (w * cw + pointerLength);\r\n                    bgStrokeSizeX *= -1;\r\n                }\r\n            }\r\n            // vertical pointer\r\n            else {\r\n                bgStrokeSizeX = 0;\r\n                if (pointerOrientation == \"vertical\") {\r\n                    if (y > bounds.top + h / 2 + pointerLength) {\r\n                        y -= (h * (1 - ch) + pointerLength);\r\n                    }\r\n                    else {\r\n                        y += (h * ch + pointerLength);\r\n                        bgStrokeSizeY *= -1;\r\n                    }\r\n                }\r\n                else if (pointerOrientation == \"down\") {\r\n                    y -= (h * (1 - ch) + pointerLength);\r\n                }\r\n                else {\r\n                    y += (h * ch + pointerLength);\r\n                    bgStrokeSizeY *= -1;\r\n                }\r\n            }\r\n            x = $math.fitToRange(x, bounds.left + w * cw, bounds.left + boundsW - w * (1 - cw)) + bgStrokeSizeX;\r\n            y = $math.fitToRange(y, bounds.top + h * ch, bounds.top + boundsH - h * (1 - ch)) - bgStrokeSizeY;\r\n            pointerX = pointTo.x - x + w * cw + bgStrokeSizeX;\r\n            pointerY = pointTo.y - y + h * ch - bgStrokeSizeY;\r\n            this._fx = x;\r\n            this._fy = y;\r\n            const animationDuration = this.get(\"animationDuration\", 0);\r\n            if (animationDuration > 0 && this.get(\"visible\") && this.get(\"opacity\") > 0.1) {\r\n                const animationEasing = this.get(\"animationEasing\");\r\n                this.animate({ key: \"x\", to: x, duration: animationDuration, easing: animationEasing });\r\n                this.animate({ key: \"y\", to: y, duration: animationDuration, easing: animationEasing });\r\n            }\r\n            else {\r\n                this.set(\"x\", x);\r\n                this.set(\"y\", y);\r\n            }\r\n            if (background instanceof PointedRectangle) {\r\n                background.set(\"pointerX\", pointerX);\r\n                background.set(\"pointerY\", pointerY);\r\n            }\r\n            if (w > 0) {\r\n                this._w = w;\r\n            }\r\n            if (h > 0) {\r\n                this._h = h;\r\n            }\r\n        }\r\n    }\r\n}\r\nObject.defineProperty(Tooltip, \"className\", {\r\n    enumerable: true,\r\n    configurable: true,\r\n    writable: true,\r\n    value: \"Tooltip\"\r\n});\r\nObject.defineProperty(Tooltip, \"classNames\", {\r\n    enumerable: true,\r\n    configurable: true,\r\n    writable: true,\r\n    value: Container.classNames.concat([Tooltip.className])\r\n});\r\n//# sourceMappingURL=Tooltip.js.map","import type { IBounds } from \"../util/IBounds\";\nimport type { IPoint } from \"../util/IPoint\";\nimport type { Pattern } from \"../render/patterns/Pattern\";\nimport type { Time } from \"../util/Animation\";\nimport type { Sprite } from \"../render/Sprite\";\nimport type { Graphics } from \"../render/Graphics\";\nimport type { IPointerEvent } from \"../render/backend/Renderer\";\nimport type { DataItem, IComponentDataItem } from \"./Component\";\nimport type { Root } from \"../Root\";\nimport type { Template } from \"../util/Template\";\nimport type { Entity } from \"../util/Entity\";\n\nimport { MultiDisposer, IDisposer } from \"../util/Disposer\";\nimport { Label } from \"../render/Label\";\nimport { PointedRectangle } from \"../render/PointedRectangle\";\nimport { Container, IContainerPrivate, IContainerSettings } from \"./Container\";\nimport { Percent } from \"../util/Percent\";\nimport { Color } from \"../util/Color\";\n\nimport * as $math from \"../util/Math\";\nimport * as $array from \"../util/Array\";\nimport * as $utils from \"../util/Utils\";\n\n\nexport interface ITooltipSettings extends IContainerSettings {\n\n\t/**\n\t * Text to use for tooltip's label.\n\t */\n\tlabelText?: string;\n\n\t/**\n\t * HTML content to use for tooltip's label.\n\t *\n\t * @since 5.2.11\n\t */\n\tlabelHTML?: string;\n\n\t/**\n\t * A screen reader content for the label.\n\t *\n\t * Used in conjuction with `readerAnnounce`. If it is set to `true`, and\n\t * `labelAriaLabel` is set, its contents will be read out by a screen reader\n\t * when tooltip is shown or its data item changes.\n\t *\n\t * Otherwise, regular `labelText` (or `text` set directly on tooltip label) will\n\t * be used for scree reader announcement.\n\t *\n\t * @since 5.9.2\n\t */\n\tlabelAriaLabel?: string;\n\n\t/**\n\t * A direction of the tooltip pointer.\n\t *\n\t * https://www.amcharts.com/docs/v5/concepts/common-elements/tooltips/#Orientation\n\t */\n\tpointerOrientation?: \"left\" | \"right\" | \"up\" | \"down\" | \"vertical\" | \"horizontal\";\n\n\t/**\n\t * If set to `true` will use the same `fill` color for its background as\n\t * its `tooltipTarget`.\n\t *\n\t * @see {@link https://www.amcharts.com/docs/v5/concepts/common-elements/tooltips/#Colors} for more info\n\t * @default false\n\t */\n\tgetFillFromSprite?: boolean;\n\n\t/**\n\t * If set to `true` will use the same `fill` color as its `tooltipTarget`.\n\t *\n\t * @see {@link https://www.amcharts.com/docs/v5/concepts/common-elements/tooltips/#Colors} for more info\n\t * @default false\n\t */\n\tgetLabelFillFromSprite?: boolean;\n\n\t/**\n\t * If set to `true` will use the same `stroke` color as its `tooltipTarget`.\n\t *\n\t * @see {@link https://www.amcharts.com/docs/v5/concepts/common-elements/tooltips/#Colors} for more info\n\t * @default false\n\t */\n\tgetStrokeFromSprite?: boolean;\n\n\t/**\n\t * Screen bounds to constrain the tooltip within.\n\t */\n\tbounds?: IBounds;\n\n\t/**\n\t * If set to `true` tooltip will adjust its text color for better visibility\n\t * on its background.\n\t *\n\t * @default true\n\t */\n\tautoTextColor?: boolean;\n\n\t/**\n\t * Screen coordinates the tooltip show point to.\n\t */\n\tpointTo?: IPoint;\n\n\t/**\n\t * Duration in milliseconds for tooltip position change, e.g. when tooltip\n\t * is jumping from one target to another.\n\t */\n\tanimationDuration?: number;\n\n\t/**\n\t * Easing function for tooltip animation.\n\t *\n\t * @see {@link https://www.amcharts.com/docs/v5/concepts/animations/#Easing_functions} for more info\n\t */\n\tanimationEasing?: (t: Time) => Time;\n\n\t/**\n\t * A target element tooltip is shown fow.\n\t */\n\ttooltipTarget?: Sprite;\n\n\t/**\n\t * If set to `true`, tooltip's target element will considered to be hovered\n\t * when mouse pointer is over tooltip itself.\n\t *\n\t * @since 5.2.14\n\t */\n\tkeepTargetHover?: boolean;\n\n\t/**\n\t * If set to `true` the tooltip contents will be read out by a screen reader\n\t * when displayed or changed.\n\t *\n\t * @default false\n\t * @since 5.9.2\n\t */\n\treaderAnnounce?: boolean;\n\n}\n\nexport interface ITooltipPrivate extends IContainerPrivate {\n}\n\n/**\n * Creates a tooltip.\n *\n * @see {@link https://www.amcharts.com/docs/v5/concepts/common-elements/tooltips/} for more info\n * @important\n */\nexport class Tooltip extends Container {\n\n\tpublic _fx: number = 0;\n\tpublic _fy: number = 0;\n\n\tdeclare public _settings: ITooltipSettings;\n\tdeclare public _privateSettings: ITooltipPrivate;\n\n\tprotected _label!: Label;\n\tpublic static className: string = \"Tooltip\";\n\tpublic static classNames: Array<string> = Container.classNames.concat([Tooltip.className]);\n\n\tprotected _fillDp: IDisposer | undefined;\n\tprotected _strokeDp: IDisposer | undefined;\n\tprotected _labelDp: IDisposer | undefined;\n\n\tprotected _w: number = 0;\n\tprotected _h: number = 0;\n\n\tprotected _keepHoverDp: MultiDisposer | undefined;\n\tprotected _htmlContentHovered: boolean = false;\n\n\tconstructor(root: Root, settings: Entity[\"_settings\"], isReal: boolean, templates: Array<Template<Entity>> = []) {\n\t\tsuper(root, settings, isReal, templates);\n\t}\n\n\tprotected _afterNew() {\n\t\tthis._settings.themeTags = $utils.mergeTags(this._settings.themeTags, [\"tooltip\"]);\n\n\t\tsuper._afterNew();\n\n\t\tconst background: Graphics = this._setDefaultFn(\"background\", () => {\n\t\t\treturn PointedRectangle.new(this._root, {});\n\t\t});\n\n\t\tbackground.set(\"themeTags\", [\"tooltip\", \"background\"]);\n\n\t\tthis._label = this.children.push(Label.new(this._root, {}));\n\n\t\tthis._disposers.push(this._label.events.on(\"boundschanged\", () => {\n\t\t\tthis._updateBackground();\n\t\t}))\n\n\t\tthis._disposers.push(this.on(\"bounds\", () => {\n\t\t\tthis._updateBackground();\n\t\t}))\n\n\t\tthis._updateTextColor();\n\n\t\tthis._root.tooltipContainer.children.push(this);\n\t\tthis.hide(0);\n\n\t\tthis._disposers.push(this.label.onPrivate(\"htmlElement\", (htmlElement) => {\n\t\t\tif (htmlElement) {\n\t\t\t\tthis._disposers.push($utils.addEventListener(htmlElement, \"pointerover\", (_ev) => {\n\t\t\t\t\tthis._htmlContentHovered = true;\n\t\t\t\t}));\n\t\t\t\tthis._disposers.push($utils.addEventListener(htmlElement, \"pointerout\", (_ev) => {\n\t\t\t\t\tthis._htmlContentHovered = false;\n\t\t\t\t}));\n\t\t\t}\n\t\t}))\n\n\t\tthis.on(\"visible\", (_ev) => {\n\t\t\tthis._handleReaderAnnouncement();\n\t\t});\n\n\t\tthis.label.events.on(\"dataitemchanged\", (_ev) => {\n\t\t\tthis._handleReaderAnnouncement();\n\t\t});\n\n\t\tthis._root._tooltips.push(this);\n\t}\n\n\tprotected _handleReaderAnnouncement() {\n\t\tif (this.get(\"readerAnnounce\") && this.isVisibleDeep()) {\n\t\t\tthis._root.readerAlert(this.label.getAccessibleText());\n\t\t}\n\t}\n\n\t/**\n\t * A [[Label]] element for the tooltip.\n\t *\n\t * @readonly\n\t * @return Label\n\t */\n\tpublic get label(): Label {\n\t\treturn this._label;\n\t}\n\n\t/**\n\t * Permanently disposes the tooltip.\n\t */\n\tprotected _dispose() {\n\t\tsuper._dispose();\n\t\t$array.remove(this._root._tooltips, this);\n\t}\n\n\tpublic _updateChildren() {\n\t\tsuper._updateChildren();\n\n\t\tif (this.isDirty(\"pointerOrientation\") || this.isPrivateDirty(\"minWidth\") || this.isPrivateDirty(\"minHeight\")) {\n\t\t\tthis.get(\"background\")!._markDirtyKey(\"width\");\n\t\t}\n\n\t\tconst labelText = this.get(\"labelText\");\n\t\tif (labelText != null) {\n\t\t\tthis.label.set(\"text\", this.get(\"labelText\"));\n\t\t}\n\t\tconst labelHTML = this.get(\"labelHTML\");\n\t\tif (labelHTML != null) {\n\t\t\tthis.label.set(\"html\", this.get(\"labelHTML\"));\n\t\t}\n\t\tconst labelAriaLabel = this.get(\"labelAriaLabel\");\n\t\tif (labelAriaLabel != null) {\n\t\t\tthis.label.set(\"ariaLabel\", this.get(\"labelAriaLabel\"));\n\t\t}\n\t}\n\n\tpublic _changed() {\n\t\tsuper._changed();\n\n\t\tif (this.isDirty(\"pointTo\") || this.isDirty(\"pointerOrientation\")) {\n\t\t\t// can't compare to previous, as sometimes pointTo is set twice (when pointer moves, so the position won't be udpated)\n\t\t\tthis._updateBackground();\n\t\t}\n\n\t\tif (this.isDirty(\"tooltipTarget\")) {\n\t\t\tthis.updateBackgroundColor();\n\t\t}\n\n\t\tif (this.isDirty(\"keepTargetHover\")) {\n\t\t\tconst keephover = this.get(\"keepTargetHover\");\n\t\t\tif (keephover) {\n\t\t\t\tconst bg = this.get(\"background\")!;\n\t\t\t\tthis._keepHoverDp = new MultiDisposer([\n\t\t\t\t\tbg.events.on(\"pointerover\", (_ev) => {\n\t\t\t\t\t\tlet target = this.get(\"tooltipTarget\");\n\t\t\t\t\t\tif (target) {\n\t\t\t\t\t\t\tif (target.parent && target.parent.getPrivate(\"tooltipTarget\") == target) {\n\t\t\t\t\t\t\t\ttarget = target.parent;\n\t\t\t\t\t\t\t}\n\t\t\t\t\t\t\ttarget.hover();\n\t\t\t\t\t\t}\n\t\t\t\t\t}),\n\t\t\t\t\tbg.events.on(\"pointerout\", (_ev) => {\n\t\t\t\t\t\tlet target = this.get(\"tooltipTarget\");\n\t\t\t\t\t\tif (target) {\n\t\t\t\t\t\t\tif (target.parent && target.parent.getPrivate(\"tooltipTarget\") == target) {\n\t\t\t\t\t\t\t\ttarget = target.parent;\n\t\t\t\t\t\t\t}\n\t\t\t\t\t\t\tif (!this._htmlContentHovered) {\n\t\t\t\t\t\t\t\ttarget.unhover();\n\t\t\t\t\t\t\t}\n\t\t\t\t\t\t}\n\t\t\t\t\t})\n\t\t\t\t]);\n\n\t\t\t\tthis.label.onPrivate(\"htmlElement\", (htmlElement: any) => {\n\t\t\t\t\tif (this._keepHoverDp && htmlElement) {\n\t\t\t\t\t\tthis._keepHoverDp.disposers.push($utils.addEventListener<PointerEvent | MouseEvent>(htmlElement, \"pointerleave\", (ev: IPointerEvent) => {\n\t\t\t\t\t\t\tconst outEvent = this.root._renderer.getEvent(ev);\n\t\t\t\t\t\t\tbg.events.dispatch(\"pointerout\", {\n\t\t\t\t\t\t\t\ttype: \"pointerout\",\n\t\t\t\t\t\t\t\toriginalEvent: outEvent.event,\n\t\t\t\t\t\t\t\tpoint: outEvent.point,\n\t\t\t\t\t\t\t\tsimulated: false,\n\t\t\t\t\t\t\t\ttarget: bg\n\t\t\t\t\t\t\t});\n\t\t\t\t\t\t}));\n\t\t\t\t\t}\n\t\t\t\t})\n\t\t\t}\n\t\t\telse {\n\t\t\t\tif (this._keepHoverDp) {\n\t\t\t\t\tthis._keepHoverDp.dispose();\n\t\t\t\t\tthis._keepHoverDp = undefined;\n\t\t\t\t}\n\t\t\t}\n\t\t}\n\t}\n\n\tprotected _onShow() {\n\t\tsuper._onShow();\n\t\tthis.updateBackgroundColor();\n\t}\n\n\n\tpublic updateBackgroundColor() {\n\t\tlet tooltipTarget = this.get(\"tooltipTarget\");\n\t\tconst background = this.get(\"background\");\n\t\tlet fill: Color | undefined;\n\t\tlet stroke: Color | undefined;\n\n\n\t\tif (tooltipTarget && background) {\n\n\t\t\tfill = tooltipTarget.get(\"fill\" as any);\n\t\t\tstroke = tooltipTarget.get(\"stroke\" as any);\n\n\t\t\tif (fill == null) {\n\t\t\t\tfill = stroke;\n\t\t\t}\n\n\t\t\tif (this.get(\"getFillFromSprite\")) {\n\n\t\t\t\tif (this._fillDp) {\n\t\t\t\t\tthis._fillDp.dispose();\n\t\t\t\t}\n\n\t\t\t\tif (fill != null) {\n\t\t\t\t\tbackground.set(\"fill\", fill as any);\n\t\t\t\t}\n\n\t\t\t\tthis._fillDp = tooltipTarget.on(\"fill\" as any, (fill) => {\n\t\t\t\t\tif (fill != null) {\n\t\t\t\t\t\tbackground.set(\"fill\", fill as any);\n\t\t\t\t\t\tthis._updateTextColor(fill);\n\t\t\t\t\t}\n\t\t\t\t})\n\t\t\t\tthis._disposers.push(this._fillDp);\n\t\t\t}\n\n\t\t\tif (this.get(\"getStrokeFromSprite\")) {\n\n\t\t\t\tif (this._strokeDp) {\n\t\t\t\t\tthis._strokeDp.dispose();\n\t\t\t\t}\n\n\t\t\t\tif (fill != null) {\n\t\t\t\t\tbackground.set(\"stroke\", fill as any);\n\t\t\t\t}\n\n\t\t\t\tthis._strokeDp = tooltipTarget.on(\"fill\" as any, (fill) => {\n\t\t\t\t\tif (fill != null) {\n\t\t\t\t\t\tbackground.set(\"stroke\", fill as any);\n\t\t\t\t\t}\n\t\t\t\t})\n\n\t\t\t\tthis._disposers.push(this._strokeDp);\n\t\t\t}\n\n\t\t\tif (this.get(\"getLabelFillFromSprite\")) {\n\n\t\t\t\tif (this._labelDp) {\n\t\t\t\t\tthis._labelDp.dispose();\n\t\t\t\t}\n\n\t\t\t\tif (fill != null) {\n\t\t\t\t\tthis.label.set(\"fill\", fill as any);\n\t\t\t\t}\n\n\t\t\t\tthis._labelDp = tooltipTarget.on(\"fill\" as any, (fill) => {\n\t\t\t\t\tif (fill != null) {\n\t\t\t\t\t\tthis.label.set(\"fill\", fill as any);\n\t\t\t\t\t}\n\t\t\t\t})\n\n\t\t\t\tthis._disposers.push(this._labelDp);\n\t\t\t}\n\t\t}\n\n\t\tthis._updateTextColor(fill);\n\t}\n\n\n\tprotected _updateTextColor(fill?: Color | Pattern) {\n\t\tif (this.get(\"autoTextColor\")) {\n\t\t\tif (fill == null) {\n\t\t\t\tfill = this.get(\"background\")!.get(\"fill\") as Color;\n\t\t\t}\n\n\t\t\tif (fill == null) {\n\t\t\t\tfill = this._root.interfaceColors.get(\"background\");\n\t\t\t}\n\n\t\t\tif (fill instanceof Color) {\n\t\t\t\tthis.label.set(\"fill\", Color.alternative(fill, this._root.interfaceColors.get(\"alternativeText\"), this._root.interfaceColors.get(\"text\")));\n\t\t\t}\n\t\t}\n\t}\n\n\tpublic _setDataItem(dataItem?: DataItem<IComponentDataItem>): void {\n\t\tsuper._setDataItem(dataItem);\n\t\tthis.label._setDataItem(dataItem);\n\t}\n\n\n\tprotected _updateBackground() {\n\t\tsuper.updateBackground();\n\t\tconst parent = this._root.container;\n\n\t\tif (parent) {\n\n\t\t\tlet cw = 0.5;\n\t\t\tlet ch = 0.5;\n\n\t\t\tlet centerX = this.get(\"centerX\");\n\t\t\tif (centerX instanceof Percent) {\n\t\t\t\tcw = centerX.value;\n\t\t\t}\n\n\t\t\tlet centerY = this.get(\"centerY\");\n\t\t\tif (centerY instanceof Percent) {\n\t\t\t\tch = centerY.value;\n\t\t\t}\n\n\t\t\tlet parentW = parent.width();\n\t\t\tlet parentH = parent.height();\n\n\t\t\tlet tooltipContainer = this.parent;\n\t\t\tlet xx = 0;\n\t\t\tlet yy = 0;\n\t\t\tif (tooltipContainer) {\n\t\t\t\txx = tooltipContainer.x();\n\t\t\t\tyy = tooltipContainer.y();\n\n\t\t\t\tconst layerMargin = tooltipContainer.get(\"layerMargin\");\n\t\t\t\tif (layerMargin) {\n\t\t\t\t\txx += layerMargin.left || 0;\n\t\t\t\t\tyy += layerMargin.top || 0;\n\t\t\t\t\tparentW += (layerMargin.left || 0) + (layerMargin.right || 0);\n\t\t\t\t\tparentH += (layerMargin.top || 0) + (layerMargin.bottom || 0);\n\t\t\t\t}\n\t\t\t}\n\n\t\t\tconst bounds = this.get(\"bounds\", { left: -xx, top: -yy, right: parentW - xx, bottom: parentH - yy });\n\n\t\t\tthis._updateBounds();\n\n\t\t\tlet w = this.width();\n\t\t\tlet h = this.height();\n\n\t\t\t// use old w and h,as when tooltip is hidden, these are 0 and unneeded animation happens\n\t\t\tif (w === 0) {\n\t\t\t\tw = this._w;\n\t\t\t}\n\n\t\t\tif (h === 0) {\n\t\t\t\th = this._h;\n\t\t\t}\n\n\t\t\tlet pointTo = this.get(\"pointTo\", { x: parentW / 2, y: parentH / 2 });\n\t\t\tlet x = pointTo.x;\n\t\t\tlet y = pointTo.y;\n\n\t\t\tlet pointerOrientation = this.get(\"pointerOrientation\");\n\n\t\t\tlet background = this.get(\"background\");\n\t\t\tlet pointerLength = 0;\n\t\t\tlet bgStrokeSizeY = 0;\n\t\t\tlet bgStrokeSizeX = 0;\n\n\t\t\tif (background instanceof PointedRectangle) {\n\t\t\t\tpointerLength = background.get(\"pointerLength\", 0);\n\t\t\t\tbgStrokeSizeY = background.get(\"strokeWidth\", 0) / 2;\n\t\t\t\tbgStrokeSizeX = bgStrokeSizeY;\n\t\t\t\tbackground.set(\"width\", w);\n\t\t\t\tbackground.set(\"height\", h);\n\t\t\t}\n\n\t\t\tlet pointerX = 0;\n\t\t\tlet pointerY = 0;\n\n\t\t\tlet boundsW = bounds.right - bounds.left;\n\t\t\tlet boundsH = bounds.bottom - bounds.top;\n\n\n\t\t\t// horizontal\n\t\t\tif (pointerOrientation == \"horizontal\" || pointerOrientation == \"left\" || pointerOrientation == \"right\") {\n\t\t\t\tbgStrokeSizeY = 0;\n\t\t\t\tif (pointerOrientation == \"horizontal\") {\n\t\t\t\t\tif (x > bounds.left + boundsW / 2) {\n\t\t\t\t\t\tx -= (w * (1 - cw) + pointerLength);\n\t\t\t\t\t\tbgStrokeSizeX *= -1;\n\t\t\t\t\t}\n\t\t\t\t\telse {\n\t\t\t\t\t\tx += (w * cw + pointerLength);\n\t\t\t\t\t}\n\t\t\t\t}\n\t\t\t\telse if (pointerOrientation == \"left\") {\n\t\t\t\t\tx += (w * (1 - cw) + pointerLength);\n\t\t\t\t}\n\t\t\t\telse {\n\t\t\t\t\tx -= (w * cw + pointerLength);\n\t\t\t\t\tbgStrokeSizeX *= -1;\n\t\t\t\t}\n\t\t\t}\n\t\t\t// vertical pointer\n\t\t\telse {\n\t\t\t\tbgStrokeSizeX = 0;\n\t\t\t\tif (pointerOrientation == \"vertical\") {\n\t\t\t\t\tif (y > bounds.top + h / 2 + pointerLength) {\n\t\t\t\t\t\ty -= (h * (1 - ch) + pointerLength);\n\t\t\t\t\t}\n\t\t\t\t\telse {\n\t\t\t\t\t\ty += (h * ch + pointerLength);\n\t\t\t\t\t\tbgStrokeSizeY *= -1;\n\t\t\t\t\t}\n\t\t\t\t}\n\t\t\t\telse if (pointerOrientation == \"down\") {\n\t\t\t\t\ty -= (h * (1 - ch) + pointerLength);\n\t\t\t\t}\n\t\t\t\telse {\n\t\t\t\t\ty += (h * ch + pointerLength);\n\t\t\t\t\tbgStrokeSizeY *= -1;\n\t\t\t\t}\n\t\t\t}\n\n\t\t\tx = $math.fitToRange(x, bounds.left + w * cw, bounds.left + boundsW - w * (1 - cw)) + bgStrokeSizeX;\n\t\t\ty = $math.fitToRange(y, bounds.top + h * ch, bounds.top + boundsH - h * (1 - ch)) - bgStrokeSizeY;\n\n\t\t\tpointerX = pointTo.x - x + w * cw + bgStrokeSizeX;\n\t\t\tpointerY = pointTo.y - y + h * ch - bgStrokeSizeY;\n\n\t\t\tthis._fx = x;\n\t\t\tthis._fy = y;\n\n\t\t\tconst animationDuration = this.get(\"animationDuration\", 0);\n\n\t\t\tif (animationDuration > 0 && this.get(\"visible\") && this.get(\"opacity\") > 0.1) {\n\t\t\t\tconst animationEasing = this.get(\"animationEasing\");\n\t\t\t\tthis.animate({ key: \"x\", to: x, duration: animationDuration, easing: animationEasing });\n\t\t\t\tthis.animate({ key: \"y\", to: y, duration: animationDuration, easing: animationEasing });\n\t\t\t}\n\t\t\telse {\n\t\t\t\tthis.set(\"x\", x);\n\t\t\t\tthis.set(\"y\", y);\n\t\t\t}\n\n\t\t\tif (background instanceof PointedRectangle) {\n\t\t\t\tbackground.set(\"pointerX\", pointerX);\n\t\t\t\tbackground.set(\"pointerY\", pointerY);\n\t\t\t}\n\n\t\t\tif (w > 0) {\n\t\t\t\tthis._w = w;\n\t\t\t}\n\t\t\tif (h > 0) {\n\t\t\t\tthis._h = h;\n\t\t\t}\n\t\t}\n\t}\n}\n","import { Text } from \"../render/Text\";\r\nimport { p50, p100 } from \"../util/Percent\";\r\nimport { Container } from \"./Container\";\r\nimport * as $array from \"../../core/util/Array\";\r\nimport * as $type from \"../../core/util/Type\";\r\n/**\r\n * Creates a label with support for in-line styling and data bindings.\r\n *\r\n * @see {@link https://www.amcharts.com/docs/v5/concepts/common-elements/labels/} for more info\r\n */\r\nexport class Label extends Container {\r\n    constructor() {\r\n        super(...arguments);\r\n        Object.defineProperty(this, \"_text\", {\r\n            enumerable: true,\r\n            configurable: true,\r\n            writable: true,\r\n            value: void 0\r\n        });\r\n        Object.defineProperty(this, \"_textKeys\", {\r\n            enumerable: true,\r\n            configurable: true,\r\n            writable: true,\r\n            value: [\r\n                \"text\",\r\n                \"fill\",\r\n                \"fillGradient\",\r\n                \"fillOpacity\",\r\n                \"textAlign\",\r\n                \"fontFamily\",\r\n                \"fontSize\",\r\n                \"fontStyle\",\r\n                \"fontWeight\",\r\n                \"fontStyle\",\r\n                \"fontVariant\",\r\n                \"textDecoration\",\r\n                \"shadowColor\",\r\n                \"shadowBlur\",\r\n                \"shadowOffsetX\",\r\n                \"shadowOffsetY\",\r\n                \"shadowOpacity\",\r\n                // \"leading\",\r\n                // \"letterSpacing\",\r\n                \"lineHeight\",\r\n                \"baselineRatio\",\r\n                //\"padding\",\r\n                // \"stroke\",\r\n                // \"strokeThickness\",\r\n                // \"trim\",\r\n                // \"wordWrap\",\r\n                \"direction\",\r\n                \"textBaseline\",\r\n                \"oversizedBehavior\",\r\n                \"breakWords\",\r\n                \"ellipsis\",\r\n                \"minScale\",\r\n                \"populateText\",\r\n                \"role\",\r\n                \"ignoreFormatting\",\r\n                \"maxChars\",\r\n                \"ariaLabel\"\r\n            ]\r\n        });\r\n    }\r\n    /**\r\n     * @ignore Text is not to be used directly\r\n     */\r\n    get text() {\r\n        return this._text;\r\n    }\r\n    _afterNew() {\r\n        super._afterNew();\r\n        this._makeText();\r\n        $array.each(this._textKeys, (property) => {\r\n            const propValue = this.get(property);\r\n            if (propValue != undefined) {\r\n                this._text.set(property, propValue);\r\n            }\r\n        });\r\n        if (this.get(\"html\", \"\") !== \"\") {\r\n            this._text.set(\"text\", \"\");\r\n        }\r\n        this.onPrivate(\"maxWidth\", () => {\r\n            this._setMaxDimentions();\r\n        });\r\n        this.onPrivate(\"maxHeight\", () => {\r\n            this._setMaxDimentions();\r\n        });\r\n    }\r\n    _makeText() {\r\n        this._text = this.children.push(Text.new(this._root, {}));\r\n    }\r\n    _updateChildren() {\r\n        super._updateChildren();\r\n        const text = this._text;\r\n        $array.each(this._textKeys, (property) => {\r\n            this._text.set(property, this.get(property));\r\n        });\r\n        if (this.isDirty(\"maxWidth\") || this.isDirty(\"maxHeight\") || this.isDirty(\"rotation\")) {\r\n            this._setMaxDimentions();\r\n        }\r\n        // Do not show regular text if HTML is used\r\n        if (this.get(\"html\", \"\") !== \"\") {\r\n            text.set(\"text\", \"\");\r\n        }\r\n        else {\r\n            text.set(\"text\", this.get(\"text\"));\r\n            this._maybeUpdateHTMLColor();\r\n        }\r\n        if (this.isDirty(\"fill\") || this.isDirty(\"fillGradient\")) {\r\n            this._maybeUpdateHTMLColor();\r\n        }\r\n        if (this.isDirty(\"textAlign\") || this.isDirty(\"width\")) {\r\n            const textAlign = this.get(\"textAlign\");\r\n            let x;\r\n            if (this.get(\"width\") != null) {\r\n                if (textAlign == \"right\") {\r\n                    x = p100;\r\n                }\r\n                else if (textAlign == \"center\") {\r\n                    x = p50;\r\n                }\r\n                else {\r\n                    x = 0;\r\n                }\r\n            }\r\n            else {\r\n                if (textAlign == \"left\" || textAlign == \"start\") {\r\n                    x = this.get(\"paddingLeft\", 0);\r\n                }\r\n                else if (textAlign == \"right\" || textAlign == \"end\") {\r\n                    x = -this.get(\"paddingRight\", 0);\r\n                }\r\n            }\r\n            text.set(\"x\", x);\r\n        }\r\n        const background = this.get(\"background\");\r\n        if (background) {\r\n            background.setPrivate(\"visible\", text._display.textVisible);\r\n        }\r\n    }\r\n    _maybeUpdateHTMLColor() {\r\n        const htmlElement = this.getPrivate(\"htmlElement\");\r\n        if (htmlElement && this.get(\"fill\")) {\r\n            htmlElement.style.color = this.get(\"fill\").toCSSHex();\r\n            //@todo support gradient\r\n        }\r\n    }\r\n    _setMaxDimentions() {\r\n        const rotation = this.get(\"rotation\");\r\n        const vertical = rotation == 90 || rotation == 270 || rotation == -90;\r\n        const text = this._text;\r\n        const maxWidth = this.get(\"maxWidth\", this.getPrivate(\"maxWidth\", Infinity));\r\n        if ($type.isNumber(maxWidth)) {\r\n            text.set(vertical ? \"maxHeight\" : \"maxWidth\", maxWidth - this.get(\"paddingTop\", 0) - this.get(\"paddingBottom\", 0));\r\n        }\r\n        else {\r\n            text.set(vertical ? \"maxHeight\" : \"maxWidth\", undefined);\r\n        }\r\n        const maxHeight = this.get(\"maxHeight\", this.getPrivate(\"maxHeight\", Infinity));\r\n        if ($type.isNumber(maxHeight)) {\r\n            text.set(vertical ? \"maxWidth\" : \"maxHeight\", maxHeight - this.get(\"paddingLeft\", 0) - this.get(\"paddingRight\", 0));\r\n        }\r\n        else {\r\n            text.set(vertical ? \"maxWidth\" : \"maxHeight\", undefined);\r\n        }\r\n        this.root.events.once(\"frameended\", () => {\r\n            text.markDirtyBounds();\r\n        });\r\n    }\r\n    _setDataItem(dataItem) {\r\n        super._setDataItem(dataItem);\r\n        this._markDirtyKey(\"text\");\r\n        const text = this._text;\r\n        if (text.get(\"populateText\")) {\r\n            text.markDirtyText();\r\n        }\r\n        const html = this.get(\"html\");\r\n        if (html && html !== \"\") {\r\n            this._updateHTMLContent();\r\n        }\r\n    }\r\n    /**\r\n     * Returns text with populated placeholders and formatting if `populateText` is\r\n     * set to `true`.\r\n     *\r\n     * @return Populated text\r\n     */\r\n    getText() {\r\n        return this._text._getText();\r\n    }\r\n    /**\r\n     * Returns \"aria-label\" text with populated placeholders and formatting\r\n     * if `populateText` is set to `true`.\r\n     *\r\n     * @return Populated text\r\n     */\r\n    getAccessibleText() {\r\n        return this._text._getAccessibleText();\r\n    }\r\n}\r\nObject.defineProperty(Label, \"className\", {\r\n    enumerable: true,\r\n    configurable: true,\r\n    writable: true,\r\n    value: \"Label\"\r\n});\r\nObject.defineProperty(Label, \"classNames\", {\r\n    enumerable: true,\r\n    configurable: true,\r\n    writable: true,\r\n    value: Container.classNames.concat([Label.className])\r\n});\r\n//# sourceMappingURL=Label.js.map","import type { Color } from \"../util/Color\";\nimport type { Percent } from \"../util/Percent\";\nimport type { DataItem, IComponentDataItem } from \"./Component\";\nimport type { Gradient } from \"../render/gradients/Gradient\";\n\nimport { Text } from \"../render/Text\";\nimport { p50, p100 } from \"../util/Percent\";\nimport { Container, IContainerPrivate, IContainerSettings, IContainerEvents } from \"./Container\";\n\nimport * as  $array from \"../../core/util/Array\";\nimport * as  $type from \"../../core/util/Type\";\n\n\nexport interface ILabelSettings extends IContainerSettings {\n\n\t/**\n\t * Labels' text.\n\t * @see {@link https://www.amcharts.com/docs/v5/concepts/formatters/text-styling/} for text styling info\n\t * \n\t */\n\ttext?: string;\n\n\t/**\n\t * Text color.\n\t */\n\tfill?: Color;\n\n\t/**\n\t * Text opacity.\n\t *\n\t * @default 1\n\t * @ince 5.2.39\n\t */\n\tfillOpacity?: number;\n\n\t/**\n\t * Fill gradient.\n\t *\n\t * @see {@link https://www.amcharts.com/docs/v5/concepts/colors-gradients-and-patterns/gradients/} for more information\n\t * @since 5.10.1\n\t */\n\tfillGradient?: Gradient;\n\n\t/**\n\t * Alignment.\n\t */\n\ttextAlign?: \"start\" | \"end\" | \"left\" | \"right\" | \"center\";\n\n\t/**\n\t * Font family to use for the label.\n\t *\n\t * Multiple fonts can be separated by commas.\n\t */\n\tfontFamily?: string;\n\n\t/**\n\t * Font size in misc any supported CSS format (pixel, point, em, etc.).\n\t */\n\tfontSize?: string | number;\n\n\t/**\n\t * Font weight.\n\t */\n\tfontWeight?: \"normal\" | \"bold\" | \"bolder\" | \"lighter\" | \"100\" | \"200\" | \"300\" | \"400\" | \"500\" | \"600\" | \"700\" | \"800\" | \"900\";\n\n\t/**\n\t * Font style.\n\t */\n\tfontStyle?: \"normal\" | \"italic\" | \"oblique\";\n\n\t/**\n\t * Font variant.\n\t */\n\tfontVariant?: \"normal\" | \"small-caps\";\n\n\t/**\n\t * Text decoration.\n\t *\n\t * Supported options `\"underline\"`, `\"line-through\"`.\n\t *\n\t * @since 5.0.15\n\t */\n\ttextDecoration?: \"underline\" | \"line-through\";\n\n\t/**\n\t * Line height in percent or absolute pixels.\n\t */\n\tlineHeight?: Percent | number;\n\n\t/**\n\t * How mouch of the height should be considered to go below baseline.\n\t *\n\t * @default 0.19\n\t */\n\tbaselineRatio?: number;\n\n\t/**\n\t * Opacity of the label.\n\t *\n\t * 0 - fully transparent; 1 - fully opaque.\n\t */\n\topacity?: number;\n\n\t/**\n\t * Text direction.\n\t *\n\t * @default \"ltr\"\n\t */\n\tdirection?: \"ltr\" | \"rtl\";\n\n\t/**\n\t * A base line to use when aligning text chunks vertically.\n\t */\n\ttextBaseline?: \"top\" | \"hanging\" | \"middle\" | \"alphabetic\" | \"ideographic\" | \"bottom\";\n\n\t/**\n\t * How to handle labels that do not fit into its designated space.\n\t *\n\t * LIMITATIONS: on circular labels, the only values supported are `\"hide\"` and\n\t * `\"truncate\"`. The latter will ignore `breakWords` setting.\n\t *\n\t * @see {@link https://www.amcharts.com/docs/v5/concepts/common-elements/labels/#Oversized_text} for more info\n\t */\n\toversizedBehavior?: \"none\" | \"hide\" | \"fit\" | \"wrap\" | \"wrap-no-break\" | \"truncate\";\n\n\t/**\n\t * Whether words can be broken when truncating or wrapping text.\n\t *\n\t * @default false\n\t */\n\tbreakWords?: boolean;\n\n\t/**\n\t * Ellipsis characters to use when truncating text.\n\t *\n\t * Will use Unicode ellipsis symbol (`\"…\"`) by default, which might not be\n\t * available in all fonts. If ellipsis looks broken, use different\n\t * characters. E.g.:\n\t *\n\t * ```TypeScript\n\t * label.set(\"ellipsis\", \"...\");\n\t * ```\n\t * ```JavaScript\n\t * label.set(\"ellipsis\", \"...\");\n\t * ```\n\t *\n\t *\n\t * @default \"…\"\n\t */\n\tellipsis?: string;\n\n\t/**\n\t * Minimum relative scale allowed for label when scaling down\n\t * when `oversizedBehavior` is set to `\"fit\"`.\n\t *\n\t * If fitting the label would require it to scale beyond `minScale` it would\n\t * be hidden instead.\n\t */\n\tminScale?: number;\n\n\t/**\n\t * If set to `true` the label will parse `text` for data placeholders and\n\t * will try to populate them with actual data.\n\t *\n\t * @see {@link https://www.amcharts.com/docs/v5/concepts/common-elements/labels/#Data_placeholders} for more info\n\t */\n\tpopulateText?: boolean;\n\n\t/**\n\t * If set to `true`, will ignore in-line formatting blocks and will display\n\t * text exactly as it is.\n\t *\n\t * @default false\n\t */\n\tignoreFormatting?: boolean;\n\n\t/**\n\t * Color of the element's shadow.\n\t *\n\t * For this to work at least one of the following needs to be set as well:\n\t * `shadowBlur`, `shadowOffsetX`, `shadowOffsetY`.\n\t *\n\t * @see {@link https://www.amcharts.com/docs/v5/concepts/colors-gradients-and-patterns/shadows/} for more info\n\t */\n\tshadowColor?: Color | null;\n\n\t/**\n\t * Blurriness of the the shadow.\n\t *\n\t * The bigger the number, the more blurry shadow will be.\n\t *\n\t * @see {@link https://www.amcharts.com/docs/v5/concepts/colors-gradients-and-patterns/shadows/} for more info\n\t */\n\tshadowBlur?: number;\n\n\t/**\n\t * Horizontal shadow offset in pixels.\n\t *\n\t * @see {@link https://www.amcharts.com/docs/v5/concepts/colors-gradients-and-patterns/shadows/} for more info\n\t */\n\tshadowOffsetX?: number;\n\n\t/**\n\t * Vertical shadow offset in pixels.\n\t *\n\t * @see {@link https://www.amcharts.com/docs/v5/concepts/colors-gradients-and-patterns/shadows/} for more info\n\t */\n\tshadowOffsetY?: number;\n\n\t/**\n\t * Opacity of the shadow (0-1).\n\t *\n\t * If not set, will use the same as `fillOpacity` of the element.\n\t *\n\t * @see {@link https://www.amcharts.com/docs/v5/concepts/colors-gradients-and-patterns/shadows/} for more info\n\t */\n\tshadowOpacity?: number;\n\n\t/**\n\t * Maximum number of characters to allow in label.\n\t *\n\t * If the `text` is longer than `maxChars`, the text will be truncated\n\t * using the `breakWords` and `ellipsis` settings.\n\t * \n\t * @since 5.7.2\n\t */\n\tmaxChars?: number;\n\n\t// The following migh be supported some day:\n\t// padding?: number;\n\t// stroke?: number;\n\t// strokeThickness?: number;\n\t// trim?: number;\n\t// wordWrap?: boolean;\n\t// leading?: number;\n\t// letterSpacing?: number;\n}\n\nexport interface ILabelPrivate extends IContainerPrivate {\n}\n\nexport interface ILabelEvents extends IContainerEvents {\n}\n\n/**\n * Creates a label with support for in-line styling and data bindings.\n *\n * @see {@link https://www.amcharts.com/docs/v5/concepts/common-elements/labels/} for more info\n */\nexport class Label extends Container {\n\n\tdeclare public _settings: ILabelSettings;\n\tdeclare public _privateSettings: ILabelPrivate;\n\tdeclare public _events: ILabelEvents;\n\n\tprotected _text!: Text;\n\n\tprotected _textKeys: Array<string> = [\n\t\t\"text\",\n\t\t\"fill\",\n\t\t\"fillGradient\",\n\t\t\"fillOpacity\",\n\t\t\"textAlign\",\n\t\t\"fontFamily\",\n\t\t\"fontSize\",\n\t\t\"fontStyle\",\n\t\t\"fontWeight\",\n\t\t\"fontStyle\",\n\t\t\"fontVariant\",\n\t\t\"textDecoration\",\n\t\t\"shadowColor\",\n\t\t\"shadowBlur\",\n\t\t\"shadowOffsetX\",\n\t\t\"shadowOffsetY\",\n\t\t\"shadowOpacity\",\n\t\t// \"leading\",\n\t\t// \"letterSpacing\",\n\t\t\"lineHeight\",\n\t\t\"baselineRatio\",\n\t\t//\"padding\",\n\t\t// \"stroke\",\n\t\t// \"strokeThickness\",\n\t\t// \"trim\",\n\t\t// \"wordWrap\",\n\t\t\"direction\",\n\t\t\"textBaseline\",\n\t\t\"oversizedBehavior\",\n\t\t\"breakWords\",\n\t\t\"ellipsis\",\n\t\t\"minScale\",\n\t\t\"populateText\",\n\t\t\"role\",\n\t\t\"ignoreFormatting\",\n\t\t\"maxChars\",\n\t\t\"ariaLabel\"\n\t];\n\n\tpublic static className: string = \"Label\";\n\tpublic static classNames: Array<string> = Container.classNames.concat([Label.className]);\n\n\t/**\n\t * @ignore Text is not to be used directly\n\t */\n\tpublic get text(): Text {\n\t\treturn this._text;\n\t}\n\n\tprotected _afterNew() {\n\t\tsuper._afterNew();\n\n\t\tthis._makeText();\n\n\t\t$array.each(this._textKeys, (property) => {\n\t\t\tconst propValue = this.get(property as any);\n\t\t\tif (propValue != undefined) {\n\t\t\t\tthis._text.set(property as any, propValue);\n\t\t\t}\n\t\t});\n\n\t\tif (this.get(\"html\", \"\") !== \"\") {\n\t\t\tthis._text.set(\"text\", \"\");\n\t\t}\n\n\t\tthis.onPrivate(\"maxWidth\", () => {\n\t\t\tthis._setMaxDimentions();\n\t\t});\n\n\t\tthis.onPrivate(\"maxHeight\", () => {\n\t\t\tthis._setMaxDimentions();\n\t\t});\n\t}\n\n\tpublic _makeText() {\n\t\tthis._text = this.children.push(Text.new(this._root, {}));\n\t}\n\n\tpublic _updateChildren() {\n\t\tsuper._updateChildren();\n\n\t\tconst text = this._text;\n\n\t\t$array.each(this._textKeys, (property) => {\n\t\t\tthis._text.set(property as any, this.get(property as any));\n\t\t})\n\n\t\tif (this.isDirty(\"maxWidth\") || this.isDirty(\"maxHeight\") || this.isDirty(\"rotation\")) {\n\t\t\tthis._setMaxDimentions();\n\t\t}\n\n\t\t// Do not show regular text if HTML is used\n\t\tif (this.get(\"html\", \"\") !== \"\") {\n\t\t\ttext.set(\"text\", \"\");\n\t\t}\n\t\telse {\n\t\t\ttext.set(\"text\", this.get(\"text\"));\n\t\t\tthis._maybeUpdateHTMLColor();\n\t\t}\n\n\t\tif (this.isDirty(\"fill\") || this.isDirty(\"fillGradient\")) {\n\t\t\tthis._maybeUpdateHTMLColor();\n\t\t}\n\n\t\tif (this.isDirty(\"textAlign\") || this.isDirty(\"width\")) {\n\t\t\tconst textAlign = this.get(\"textAlign\");\n\t\t\tlet x: number | Percent | undefined;\n\t\t\tif (this.get(\"width\") != null) {\n\t\t\t\tif (textAlign == \"right\") {\n\t\t\t\t\tx = p100;\n\t\t\t\t}\n\t\t\t\telse if (textAlign == \"center\") {\n\t\t\t\t\tx = p50;\n\t\t\t\t}\n\t\t\t\telse {\n\t\t\t\t\tx = 0;\n\t\t\t\t}\n\t\t\t}\n\t\t\telse {\n\t\t\t\tif (textAlign == \"left\" || textAlign == \"start\") {\n\t\t\t\t\tx = this.get(\"paddingLeft\", 0);\n\t\t\t\t}\n\t\t\t\telse if (textAlign == \"right\" || textAlign == \"end\") {\n\t\t\t\t\tx = -this.get(\"paddingRight\", 0);\n\t\t\t\t}\n\t\t\t}\n\n\t\t\ttext.set(\"x\", x);\n\t\t}\n\n\t\tconst background = this.get(\"background\");\n\t\tif (background) {\n\t\t\tbackground.setPrivate(\"visible\", text._display.textVisible);\n\t\t}\n\t}\n\n\tprotected _maybeUpdateHTMLColor() {\n\t\tconst htmlElement = this.getPrivate(\"htmlElement\");\n\t\tif (htmlElement && this.get(\"fill\")) {\n\t\t\thtmlElement.style.color = this.get(\"fill\")!.toCSSHex();\n\t\t\t//@todo support gradient\n\t\t}\n\t}\n\n\tprotected _setMaxDimentions() {\n\t\tconst rotation = this.get(\"rotation\");\n\t\tconst vertical = rotation == 90 || rotation == 270 || rotation == -90;\n\t\tconst text = this._text;\n\n\t\tconst maxWidth = this.get(\"maxWidth\", this.getPrivate(\"maxWidth\", Infinity));\n\t\tif ($type.isNumber(maxWidth)) {\n\t\t\ttext.set(vertical ? \"maxHeight\" : \"maxWidth\", maxWidth - this.get(\"paddingTop\", 0) - this.get(\"paddingBottom\", 0));\n\t\t}\n\t\telse {\n\t\t\ttext.set(vertical ? \"maxHeight\" : \"maxWidth\", undefined);\n\t\t}\n\n\t\tconst maxHeight = this.get(\"maxHeight\", this.getPrivate(\"maxHeight\", Infinity));\n\t\tif ($type.isNumber(maxHeight)) {\n\t\t\ttext.set(vertical ? \"maxWidth\" : \"maxHeight\", maxHeight - this.get(\"paddingLeft\", 0) - this.get(\"paddingRight\", 0));\n\t\t}\n\t\telse {\n\t\t\ttext.set(vertical ? \"maxWidth\" : \"maxHeight\", undefined);\n\t\t}\n\n\t\tthis.root.events.once(\"frameended\", () => {\n\t\t\ttext.markDirtyBounds();\n\t\t});\n\t}\n\n\tpublic _setDataItem(dataItem?: DataItem<IComponentDataItem>): void {\n\t\tsuper._setDataItem(dataItem);\n\t\tthis._markDirtyKey(\"text\")\n\t\tconst text = this._text;\n\t\tif (text.get(\"populateText\")) {\n\t\t\ttext.markDirtyText();\n\t\t}\n\t\tconst html = this.get(\"html\");\n\t\tif (html && html !== \"\") {\n\t\t\tthis._updateHTMLContent();\n\t\t}\n\t}\n\n\t/**\n\t * Returns text with populated placeholders and formatting if `populateText` is\n\t * set to `true`.\n\t *\n\t * @return Populated text\n\t */\n\tpublic getText(): string {\n\t\treturn this._text._getText();\n\t}\n\n\t/**\n\t * Returns \"aria-label\" text with populated placeholders and formatting\n\t * if `populateText` is set to `true`.\n\t *\n\t * @return Populated text\n\t */\n\tpublic getAccessibleText(): string {\n\t\treturn this._text._getAccessibleText();\n\t}\n}\n","import { Graphics } from \"./Graphics\";\r\nimport * as $math from \"../util/Math\";\r\n/**\r\n * Draws a rectangle with a pointer.\r\n *\r\n * @see {@link https://www.amcharts.com/docs/v5/concepts/common-elements/graphics/} for more info\r\n * @important\r\n */\r\nexport class PointedRectangle extends Graphics {\r\n    _beforeChanged() {\r\n        super._beforeChanged();\r\n        if (this.isDirty(\"pointerBaseWidth\") || this.isDirty(\"cornerRadius\") || this.isDirty(\"pointerLength\") || this.isDirty(\"pointerX\") || this.isDirty(\"pointerY\") || this.isDirty(\"width\") || this.isDirty(\"height\")) {\r\n            this._clear = true;\r\n        }\r\n    }\r\n    _changed() {\r\n        super._changed();\r\n        if (this._clear) {\r\n            this.markDirtyBounds();\r\n            let w = this.width();\r\n            let h = this.height();\r\n            if (w > 0 && h > 0) {\r\n                let cr = this.get(\"cornerRadius\", 8);\r\n                cr = $math.fitToRange(cr, 0, Math.min(w / 2, h / 2));\r\n                let x = this.get(\"pointerX\", 0);\r\n                let y = this.get(\"pointerY\", 0);\r\n                let bwh = this.get(\"pointerBaseWidth\", 15) / 2;\r\n                // corner coordinates\r\n                // top left\r\n                let xtl = 0;\r\n                let ytl = 0;\r\n                // top right\r\n                let xtr = w;\r\n                let ytr = 0;\r\n                // bottom right\r\n                let xbr = w;\r\n                let ybr = h;\r\n                // bottom left\r\n                let xbl = 0;\r\n                let ybl = h;\r\n                // find stem base side: http://$math.stackexchange.com/questions/274712/calculate-on-which-side-of-straign-line-is-dot-located\r\n                // d=(x−x1)(y2−y1)−(y−y1)(x2−x1)\r\n                let d1 = (x - xtl) * (ybr - ytl) - (y - ytl) * (xbr - xtl);\r\n                let d2 = (x - xbl) * (ytr - ybl) - (y - ybl) * (xtr - xbl);\r\n                const display = this._display;\r\n                // top\r\n                display.moveTo(cr, 0);\r\n                if (d1 > 0 && d2 > 0) {\r\n                    let stemX = Math.round($math.fitToRange(x, cr + bwh, w - bwh - cr));\r\n                    y = $math.fitToRange(y, -Infinity, 0);\r\n                    display.lineTo(stemX - bwh, 0);\r\n                    display.lineTo(x, y);\r\n                    display.lineTo(stemX + bwh, 0);\r\n                }\r\n                display.lineTo(w - cr, 0);\r\n                display.arcTo(w, 0, w, cr, cr);\r\n                // right\r\n                if (d1 > 0 && d2 < 0) {\r\n                    let stemY = Math.round($math.fitToRange(y, cr + bwh, h - bwh - cr));\r\n                    x = $math.fitToRange(x, w, Infinity);\r\n                    display.lineTo(w, cr);\r\n                    display.lineTo(w, Math.max(stemY - bwh, cr));\r\n                    display.lineTo(x, y);\r\n                    display.lineTo(w, stemY + bwh);\r\n                }\r\n                display.lineTo(w, h - cr);\r\n                display.arcTo(w, h, w - cr, h, cr);\r\n                // bottom\r\n                if (d1 < 0 && d2 < 0) {\r\n                    let stemX = Math.round($math.fitToRange(x, cr + bwh, w - bwh - cr));\r\n                    y = $math.fitToRange(y, h, Infinity);\r\n                    display.lineTo(w - cr, h);\r\n                    display.lineTo(stemX + bwh, h);\r\n                    display.lineTo(x, y);\r\n                    display.lineTo(stemX - bwh, h);\r\n                }\r\n                display.lineTo(cr, h);\r\n                display.arcTo(0, h, 0, h - cr, cr);\r\n                // left\r\n                if (d1 < 0 && d2 > 0) {\r\n                    let stemY = Math.round($math.fitToRange(y, cr + bwh, h - cr - bwh));\r\n                    x = $math.fitToRange(x, -Infinity, 0);\r\n                    display.lineTo(0, h - cr);\r\n                    display.lineTo(0, stemY + bwh);\r\n                    display.lineTo(x, y);\r\n                    display.lineTo(0, Math.max(stemY - bwh, cr));\r\n                }\r\n                display.lineTo(0, cr);\r\n                display.arcTo(0, 0, cr, 0, cr);\r\n                display.closePath();\r\n            }\r\n        }\r\n    }\r\n}\r\nObject.defineProperty(PointedRectangle, \"className\", {\r\n    enumerable: true,\r\n    configurable: true,\r\n    writable: true,\r\n    value: \"PointedRectangle\"\r\n});\r\nObject.defineProperty(PointedRectangle, \"classNames\", {\r\n    enumerable: true,\r\n    configurable: true,\r\n    writable: true,\r\n    value: Graphics.classNames.concat([PointedRectangle.className])\r\n});\r\n//# sourceMappingURL=PointedRectangle.js.map","import { Graphics, IGraphicsSettings, IGraphicsPrivate } from \"./Graphics\";\nimport * as $math from \"../util/Math\";\n\nexport interface IPointedRectangleSettings extends IGraphicsSettings {\n\n\t/**\n\t * A width of the pinter's (stem's) thick end (base) in pixels.\n\t */\n\tpointerBaseWidth?: number;\n\n\t/**\n\t * A length of the pinter (stem) in pixels.\n\t */\n\tpointerLength?: number;\n\n\t/**\n\t * X coordinate the shape is pointing to.\n\t */\n\tpointerX?: number;\n\n\t/**\n\t * Y coordinate the shape is pointing to.\n\t */\n\tpointerY?: number;\n\n\t/**\n\t * Corner radius in pixels.\n\t */\n\tcornerRadius?: number;\n}\n\nexport interface IPointedRectanglePrivate extends IGraphicsPrivate {\n}\n\n/**\n * Draws a rectangle with a pointer.\n *\n * @see {@link https://www.amcharts.com/docs/v5/concepts/common-elements/graphics/} for more info\n * @important\n */\nexport class PointedRectangle extends Graphics {\n\n\tdeclare public _settings: IPointedRectangleSettings;\n\tdeclare public _privateSettings: IPointedRectanglePrivate;\n\n\tpublic static className: string = \"PointedRectangle\";\n\tpublic static classNames: Array<string> = Graphics.classNames.concat([PointedRectangle.className]);\n\n\tpublic _beforeChanged() {\n\t\tsuper._beforeChanged();\n\n\t\tif (this.isDirty(\"pointerBaseWidth\") || this.isDirty(\"cornerRadius\") || this.isDirty(\"pointerLength\") || this.isDirty(\"pointerX\") || this.isDirty(\"pointerY\") || this.isDirty(\"width\") || this.isDirty(\"height\")) {\n\t\t\tthis._clear = true;\n\t\t}\n\t}\n\n\tpublic _changed() {\n\t\tsuper._changed();\n\n\t\tif (this._clear) {\n\n\t\t\tthis.markDirtyBounds();\n\n\t\t\tlet w = this.width();\n\t\t\tlet h = this.height();\n\n\t\t\tif (w > 0 && h > 0) {\n\t\t\t\tlet cr = this.get(\"cornerRadius\", 8);\n\t\t\t\tcr = $math.fitToRange(cr, 0, Math.min(w / 2, h / 2));\n\n\t\t\t\tlet x = this.get(\"pointerX\", 0);\n\t\t\t\tlet y = this.get(\"pointerY\", 0);\n\t\t\t\tlet bwh = this.get(\"pointerBaseWidth\", 15) / 2;\n\n\t\t\t\t// corner coordinates\n\t\t\t\t// top left\n\t\t\t\tlet xtl = 0;\n\t\t\t\tlet ytl = 0;\n\t\t\t\t// top right\n\t\t\t\tlet xtr = w;\n\t\t\t\tlet ytr = 0;\n\t\t\t\t// bottom right\n\t\t\t\tlet xbr = w;\n\t\t\t\tlet ybr = h;\n\t\t\t\t// bottom left\n\t\t\t\tlet xbl = 0;\n\t\t\t\tlet ybl = h;\n\n\t\t\t\t// find stem base side: http://$math.stackexchange.com/questions/274712/calculate-on-which-side-of-straign-line-is-dot-located\n\t\t\t\t// d=(x−x1)(y2−y1)−(y−y1)(x2−x1)\n\t\t\t\tlet d1 = (x - xtl) * (ybr - ytl) - (y - ytl) * (xbr - xtl);\n\t\t\t\tlet d2 = (x - xbl) * (ytr - ybl) - (y - ybl) * (xtr - xbl);\n\n\t\t\t\tconst display = this._display;\n\t\t\t\t// top\n\t\t\t\tdisplay.moveTo(cr, 0);\n\n\t\t\t\tif (d1 > 0 && d2 > 0) {\n\t\t\t\t\tlet stemX = Math.round($math.fitToRange(x, cr + bwh, w - bwh - cr));\n\t\t\t\t\ty = $math.fitToRange(y, -Infinity, 0);\n\n\t\t\t\t\tdisplay.lineTo(stemX - bwh, 0);\n\t\t\t\t\tdisplay.lineTo(x, y);\n\t\t\t\t\tdisplay.lineTo(stemX + bwh, 0);\n\t\t\t\t}\n\n\t\t\t\tdisplay.lineTo(w - cr, 0);\n\t\t\t\tdisplay.arcTo(w, 0, w, cr, cr);\n\n\t\t\t\t// right\n\t\t\t\tif (d1 > 0 && d2 < 0) {\n\t\t\t\t\tlet stemY = Math.round($math.fitToRange(y, cr + bwh, h - bwh - cr));\n\t\t\t\t\tx = $math.fitToRange(x, w, Infinity);\n\t\t\t\t\tdisplay.lineTo(w, cr);\n\t\t\t\t\tdisplay.lineTo(w, Math.max(stemY - bwh, cr));\n\t\t\t\t\tdisplay.lineTo(x, y);\n\t\t\t\t\tdisplay.lineTo(w, stemY + bwh);\n\t\t\t\t}\n\t\t\t\tdisplay.lineTo(w, h - cr);\n\t\t\t\tdisplay.arcTo(w, h, w - cr, h, cr);\n\n\t\t\t\t// bottom\n\t\t\t\tif (d1 < 0 && d2 < 0) {\n\t\t\t\t\tlet stemX = Math.round($math.fitToRange(x, cr + bwh, w - bwh - cr));\n\t\t\t\t\ty = $math.fitToRange(y, h, Infinity);\n\n\t\t\t\t\tdisplay.lineTo(w - cr, h);\n\t\t\t\t\tdisplay.lineTo(stemX + bwh, h);\n\t\t\t\t\tdisplay.lineTo(x, y);\n\t\t\t\t\tdisplay.lineTo(stemX - bwh, h);\n\t\t\t\t}\n\t\t\t\tdisplay.lineTo(cr, h)\n\t\t\t\tdisplay.arcTo(0, h, 0, h - cr, cr);\n\n\n\t\t\t\t// left\n\t\t\t\tif (d1 < 0 && d2 > 0) {\n\t\t\t\t\tlet stemY = Math.round($math.fitToRange(y, cr + bwh, h - cr - bwh));\n\t\t\t\t\tx = $math.fitToRange(x, -Infinity, 0);\n\t\t\t\t\tdisplay.lineTo(0, h - cr);\n\t\t\t\t\tdisplay.lineTo(0, stemY + bwh);\n\t\t\t\t\tdisplay.lineTo(x, y);\n\t\t\t\t\tdisplay.lineTo(0, Math.max(stemY - bwh, cr));\n\t\t\t\t}\n\t\t\t\tdisplay.lineTo(0, cr);\n\t\t\t\tdisplay.arcTo(0, 0, cr, 0, cr);\n\t\t\t\tdisplay.closePath();\n\t\t\t}\n\t\t}\n\t}\n}\n","import { Entity } from \"./Entity\";\r\nimport { TextFormatter } from \"./TextFormatter\";\r\nimport * as $object from \"./Object\";\r\nimport * as $utils from \"./Utils\";\r\nimport * as $type from \"./Type\";\r\n/**\r\n * Number formatter\r\n *\r\n * @see {@link https://www.amcharts.com/docs/v5/concepts/formatters/formatting-numbers/} for more info\r\n * @important\r\n */\r\nexport class NumberFormatter extends Entity {\r\n    _setDefaults() {\r\n        // Defaults\r\n        this._setDefault(\"negativeBase\", 0);\r\n        this._setDefault(\"numberFormat\", \"#,###.#####\");\r\n        this._setDefault(\"smallNumberThreshold\", 1.00);\r\n        const bns = \"_big_number_suffix_\";\r\n        const sns = \"_small_number_suffix_\";\r\n        const bs = \"_byte_suffix_\";\r\n        this._setDefault(\"bigNumberPrefixes\", [\r\n            { \"number\": 1e+3, \"suffix\": this._t(bns + \"3\") },\r\n            { \"number\": 1e+6, \"suffix\": this._t(bns + \"6\") },\r\n            { \"number\": 1e+9, \"suffix\": this._t(bns + \"9\") },\r\n            { \"number\": 1e+12, \"suffix\": this._t(bns + \"12\") },\r\n            { \"number\": 1e+15, \"suffix\": this._t(bns + \"15\") },\r\n            { \"number\": 1e+18, \"suffix\": this._t(bns + \"18\") },\r\n            { \"number\": 1e+21, \"suffix\": this._t(bns + \"21\") },\r\n            { \"number\": 1e+24, \"suffix\": this._t(bns + \"24\") }\r\n        ]);\r\n        this._setDefault(\"smallNumberPrefixes\", [\r\n            { \"number\": 1e-24, \"suffix\": this._t(sns + \"24\") },\r\n            { \"number\": 1e-21, \"suffix\": this._t(sns + \"21\") },\r\n            { \"number\": 1e-18, \"suffix\": this._t(sns + \"18\") },\r\n            { \"number\": 1e-15, \"suffix\": this._t(sns + \"15\") },\r\n            { \"number\": 1e-12, \"suffix\": this._t(sns + \"12\") },\r\n            { \"number\": 1e-9, \"suffix\": this._t(sns + \"9\") },\r\n            { \"number\": 1e-6, \"suffix\": this._t(sns + \"6\") },\r\n            { \"number\": 1e-3, \"suffix\": this._t(sns + \"3\") }\r\n        ]);\r\n        this._setDefault(\"bytePrefixes\", [\r\n            { \"number\": 1, suffix: this._t(bs + \"B\") },\r\n            { \"number\": 1024, suffix: this._t(bs + \"KB\") },\r\n            { \"number\": 1048576, suffix: this._t(bs + \"MB\") },\r\n            { \"number\": 1073741824, suffix: this._t(bs + \"GB\") },\r\n            { \"number\": 1099511627776, suffix: this._t(bs + \"TB\") },\r\n            { \"number\": 1125899906842624, suffix: this._t(bs + \"PB\") }\r\n        ]);\r\n        super._setDefaults();\r\n    }\r\n    _beforeChanged() {\r\n        super._beforeChanged();\r\n    }\r\n    /**\r\n     * Formats the number according to specific format.\r\n     *\r\n     * @param value   Value to format\r\n     * @param format  Format to apply\r\n     * @return Formatted number\r\n     */\r\n    format(value, format, precision) {\r\n        // no format passed in or \"Number\"\r\n        if (format == null || ($type.isString(format) && format.toLowerCase() === \"number\")) {\r\n            format = this.get(\"numberFormat\", \"\");\r\n        }\r\n        // Init return value\r\n        let formatted;\r\n        // Cast to number just in case\r\n        // TODO: maybe use better casting\r\n        let source = Number(value);\r\n        // Is it a built-in format or Intl.NumberFormatOptions\r\n        if ($type.isObject(format)) {\r\n            try {\r\n                if (this.get(\"intlLocales\")) {\r\n                    return new Intl.NumberFormat(this.get(\"intlLocales\"), format).format(source);\r\n                }\r\n                else {\r\n                    return new Intl.NumberFormat(undefined, format).format(source);\r\n                }\r\n            }\r\n            catch (e) {\r\n                return \"Invalid\";\r\n            }\r\n        }\r\n        else {\r\n            // Clean format\r\n            format = $utils.cleanFormat(format);\r\n            // Get format info (it will also deal with parser caching)\r\n            let info = this.parseFormat(format, this._root.language);\r\n            // format and replace the number\r\n            let details;\r\n            if (source > this.get(\"negativeBase\")) {\r\n                details = info.positive;\r\n            }\r\n            else if (source < this.get(\"negativeBase\")) {\r\n                details = info.negative;\r\n            }\r\n            else {\r\n                details = info.zero;\r\n            }\r\n            // Adjust precision\r\n            if (precision != null && !details.mod) {\r\n                details = $object.copy(details);\r\n                details.decimals.active = source == 0 ? 0 : precision;\r\n            }\r\n            // Format\r\n            formatted = details.template.split($type.PLACEHOLDER).join(this.applyFormat(source, details));\r\n        }\r\n        if (this.get(\"forceLTR\") === true) {\r\n            formatted = \"‎\" + formatted;\r\n        }\r\n        return formatted;\r\n    }\r\n    /**\r\n     * Parses supplied format into structured object which can be used to format\r\n     * the number.\r\n     *\r\n     * @param format Format string, i.e. \"#,###.00\"\r\n     * @param language Language\r\n     * @ignore\r\n     */\r\n    parseFormat(format, language) {\r\n        // Check cache\r\n        // TODO\r\n        // let cached = this.getCache(format);\r\n        // if (cached != null) {\r\n        // \treturn cached;\r\n        // }\r\n        const thousandSeparator = language.translateEmpty(\"_thousandSeparator\");\r\n        const decimalSeparator = language.translateEmpty(\"_decimalSeparator\");\r\n        // init format parse info holder\r\n        let info = {\r\n            \"positive\": {\r\n                \"thousands\": {\r\n                    \"active\": -1,\r\n                    \"passive\": -1,\r\n                    \"interval\": -1,\r\n                    \"separator\": thousandSeparator\r\n                },\r\n                \"decimals\": {\r\n                    \"active\": -1,\r\n                    \"passive\": -1,\r\n                    \"separator\": decimalSeparator\r\n                },\r\n                \"template\": \"\",\r\n                \"source\": \"\",\r\n                \"parsed\": false\r\n            },\r\n            \"negative\": {\r\n                \"thousands\": {\r\n                    \"active\": -1,\r\n                    \"passive\": -1,\r\n                    \"interval\": -1,\r\n                    \"separator\": thousandSeparator\r\n                },\r\n                \"decimals\": {\r\n                    \"active\": -1,\r\n                    \"passive\": -1,\r\n                    \"separator\": decimalSeparator\r\n                },\r\n                \"template\": \"\",\r\n                \"source\": \"\",\r\n                \"parsed\": false\r\n            },\r\n            \"zero\": {\r\n                \"thousands\": {\r\n                    \"active\": -1,\r\n                    \"passive\": -1,\r\n                    \"interval\": -1,\r\n                    \"separator\": thousandSeparator\r\n                },\r\n                \"decimals\": {\r\n                    \"active\": -1,\r\n                    \"passive\": -1,\r\n                    \"separator\": decimalSeparator\r\n                },\r\n                \"template\": \"\",\r\n                \"source\": \"\",\r\n                \"parsed\": false\r\n            }\r\n        };\r\n        // Escape double vertical bars (that mean display one vertical bar)\r\n        format = format.replace(\"||\", $type.PLACEHOLDER2);\r\n        // Split it up and deal with different formats\r\n        let parts = format.split(\"|\");\r\n        info.positive.source = parts[0];\r\n        if (typeof parts[2] === \"undefined\") {\r\n            info.zero = info.positive;\r\n        }\r\n        else {\r\n            info.zero.source = parts[2];\r\n        }\r\n        if (typeof parts[1] === \"undefined\") {\r\n            info.negative = info.positive;\r\n        }\r\n        else {\r\n            info.negative.source = parts[1];\r\n        }\r\n        // Parse each\r\n        $object.each(info, (_part, item) => {\r\n            // Already parsed\r\n            if (item.parsed) {\r\n                return;\r\n            }\r\n            // Check cached\r\n            // TODO\r\n            // if (typeof this.getCache(item.source) !== \"undefined\") {\r\n            // \tinfo[part] = this.getCache(item.source);\r\n            // \treturn;\r\n            // }\r\n            // Begin parsing\r\n            let partFormat = item.source;\r\n            // Just \"Number\"?\r\n            if (partFormat.toLowerCase() === \"number\") {\r\n                partFormat = this.get(\"numberFormat\", \"#,###.#####\");\r\n            }\r\n            // Let TextFormatter split into chunks\r\n            let chunks = TextFormatter.chunk(partFormat, true);\r\n            for (let i = 0; i < chunks.length; i++) {\r\n                let chunk = chunks[i];\r\n                // replace back double vertical bar\r\n                chunk.text = chunk.text.replace($type.PLACEHOLDER2, \"|\");\r\n                if (chunk.type === \"value\") {\r\n                    // Parse format\r\n                    // Look for codes\r\n                    let matches = chunk.text.match(/[#0.,]+[ ]?[abespABESP%!]?[abespABESP‰!]?/);\r\n                    if (matches) {\r\n                        if (matches === null || matches[0] === \"\") {\r\n                            // no codes here - assume string\r\n                            // nothing to do here\r\n                            item.template += chunk.text;\r\n                        }\r\n                        else {\r\n                            // look for the format modifiers at the end\r\n                            let mods = matches[0].match(/[abespABESP%‰!]{2}|[abespABESP%‰]{1}$/);\r\n                            if (mods) {\r\n                                item.mod = mods[0].toLowerCase();\r\n                                item.modSpacing = matches[0].match(/[ ]{1}[abespABESP%‰!]{1}$/) ? true : false;\r\n                            }\r\n                            // break the format up\r\n                            let a = matches[0].split(\".\");\r\n                            // Deal with thousands\r\n                            if (a[0] === \"\") {\r\n                                // No directives for thousands\r\n                                // Leave default settings (no formatting)\r\n                            }\r\n                            else {\r\n                                // Counts\r\n                                item.thousands.active = (a[0].match(/0/g) || []).length;\r\n                                item.thousands.passive = (a[0].match(/\\#/g) || []).length + item.thousands.active;\r\n                                // Separator interval\r\n                                let b = a[0].split(\",\");\r\n                                if (b.length === 1) {\r\n                                    // No thousands separators\r\n                                    // Do nothing\r\n                                }\r\n                                else {\r\n                                    // Use length fo the last chunk as thousands length\r\n                                    item.thousands.interval = (b.pop() || \"\").length;\r\n                                    if (item.thousands.interval === 0) {\r\n                                        item.thousands.interval = -1;\r\n                                    }\r\n                                }\r\n                            }\r\n                            // Deal with decimals\r\n                            if (typeof (a[1]) === \"undefined\") {\r\n                                // No directives for decimals\r\n                                // Leave at defaults (no formatting)\r\n                            }\r\n                            else {\r\n                                // Counts\r\n                                item.decimals.active = (a[1].match(/0/g) || []).length;\r\n                                item.decimals.passive = (a[1].match(/\\#/g) || []).length + item.decimals.active;\r\n                            }\r\n                            // Add special code to template\r\n                            item.template += chunk.text.split(matches[0]).join($type.PLACEHOLDER);\r\n                        }\r\n                    }\r\n                }\r\n                else {\r\n                    // Quoted string - take it as it is\r\n                    item.template += chunk.text;\r\n                }\r\n            }\r\n            // Apply style formatting\r\n            //item.template = getTextFormatter().format(item.template, this.outputFormat);\r\n            // Save cache\r\n            // TODO\r\n            //this.setCache(item.source, item);\r\n            // Mark this as parsed\r\n            item.parsed = true;\r\n        });\r\n        // Save cache (the whole thing)\r\n        // TODO\r\n        //this.setCache(format, info);\r\n        return info;\r\n    }\r\n    /**\r\n     * Applies parsed format to a numeric value.\r\n     *\r\n     * @param value    Value\r\n     * @param details  Parsed format as returned by parseFormat()\r\n     * @return Formatted number\r\n     * @ignore\r\n     */\r\n    applyFormat(value, details) {\r\n        // Use absolute values\r\n        let negative = value < 0;\r\n        value = Math.abs(value);\r\n        // Recalculate according to modifier\r\n        let prefix = \"\", suffix = \"\";\r\n        let mods = details.mod ? details.mod.split(\"\") : [];\r\n        if (mods.indexOf(\"b\") !== -1) {\r\n            let a = this.applyPrefix(value, this.get(\"bytePrefixes\"), mods.indexOf(\"!\") !== -1);\r\n            value = a[0];\r\n            prefix = a[1];\r\n            suffix = a[2];\r\n            if (details.modSpacing) {\r\n                suffix = \" \" + suffix;\r\n            }\r\n        }\r\n        else if (mods.indexOf(\"a\") !== -1) {\r\n            let a = this.applyPrefix(value, value < this.get(\"smallNumberThreshold\") ? this.get(\"smallNumberPrefixes\") : this.get(\"bigNumberPrefixes\"), mods.indexOf(\"!\") !== -1);\r\n            value = a[0];\r\n            prefix = a[1];\r\n            suffix = a[2];\r\n            if (details.modSpacing) {\r\n                suffix = \" \" + suffix;\r\n            }\r\n        }\r\n        else if (mods.indexOf(\"p\") !== -1) {\r\n            let ol = Math.min(value.toString().length + 2, 21);\r\n            //value *= 100;\r\n            value = parseFloat(value.toPrecision(ol));\r\n            prefix = this._root.language.translate(\"_percentPrefix\");\r\n            suffix = this._root.language.translate(\"_percentSuffix\");\r\n            if (prefix == \"\" && suffix == \"\") {\r\n                suffix = \"%\";\r\n            }\r\n        }\r\n        else if (mods.indexOf(\"%\") !== -1) {\r\n            let ol = Math.min(value.toString().length + 2, 21);\r\n            value *= 100;\r\n            value = parseFloat(value.toPrecision(ol));\r\n            suffix = \"%\";\r\n        }\r\n        else if (mods.indexOf(\"‰\") !== -1) {\r\n            let ol = Math.min(value.toString().length + 3, 21);\r\n            value *= 1000;\r\n            value = parseFloat(value.toPrecision(ol));\r\n            suffix = \"‰\";\r\n        }\r\n        // Round to passive\r\n        if (mods.indexOf(\"e\") !== -1) {\r\n            // convert the value to exponential\r\n            let exp;\r\n            if (details.decimals.passive >= 0) {\r\n                exp = value.toExponential(details.decimals.passive).split(\"e\");\r\n            }\r\n            else {\r\n                exp = value.toExponential().split(\"e\");\r\n            }\r\n            value = Number(exp[0]);\r\n            suffix = \"e\" + exp[1];\r\n            if (details.modSpacing) {\r\n                suffix = \" \" + suffix;\r\n            }\r\n        }\r\n        else if (details.decimals.passive === 0) {\r\n            value = Math.round(value);\r\n        }\r\n        else if (details.decimals.passive > 0) {\r\n            const decimals = $utils.decimalPlaces(value);\r\n            if (decimals > 0) {\r\n                const d = Math.pow(10, details.decimals.passive);\r\n                value = Math.round(parseFloat((value * d).toFixed(decimals))) / d;\r\n            }\r\n        }\r\n        // Init return value\r\n        let res = \"\";\r\n        // Calc integer and decimal parts\r\n        let a = $type.numberToString(value).split(\".\");\r\n        // Format integers\r\n        let ints = a[0];\r\n        // Pad integers to active length\r\n        if (ints.length < details.thousands.active) {\r\n            ints = Array(details.thousands.active - ints.length + 1).join(\"0\") + ints;\r\n        }\r\n        // Insert thousands separators\r\n        if (details.thousands.interval > 0) {\r\n            let ip = [];\r\n            let intsr = ints.split(\"\").reverse().join(\"\");\r\n            for (let i = 0, len = ints.length; i <= len; i += details.thousands.interval) {\r\n                let c = intsr.substr(i, details.thousands.interval).split(\"\").reverse().join(\"\");\r\n                if (c !== \"\") {\r\n                    ip.unshift(c);\r\n                }\r\n            }\r\n            ints = ip.join(details.thousands.separator);\r\n        }\r\n        // Add integers\r\n        res += ints;\r\n        // Add decimals\r\n        if (a.length === 1) {\r\n            a.push(\"\");\r\n        }\r\n        let decs = a[1];\r\n        // Fill zeros?\r\n        if (decs.length < details.decimals.active) {\r\n            decs += Array(details.decimals.active - decs.length + 1).join(\"0\");\r\n        }\r\n        if (decs !== \"\") {\r\n            res += details.decimals.separator + decs;\r\n        }\r\n        // Can't have empty return value\r\n        if (res === \"\") {\r\n            res = \"0\";\r\n        }\r\n        // Add minus sign back\r\n        if (value !== 0 && negative && (mods.indexOf(\"s\") === -1)) {\r\n            res = \"-\" + res;\r\n        }\r\n        // Add suffixes/prefixes\r\n        if (prefix) {\r\n            res = prefix + res;\r\n        }\r\n        if (suffix) {\r\n            res += suffix;\r\n        }\r\n        return res;\r\n    }\r\n    applyPrefix(value, prefixes, force = false) {\r\n        let newvalue = value;\r\n        let prefix = \"\";\r\n        let suffix = \"\";\r\n        let applied = false;\r\n        let k = 1;\r\n        for (let i = 0, len = prefixes.length; i < len; i++) {\r\n            if (prefixes[i].number <= value) {\r\n                if (prefixes[i].number === 0) {\r\n                    newvalue = 0;\r\n                }\r\n                else {\r\n                    newvalue = value / prefixes[i].number;\r\n                    k = prefixes[i].number;\r\n                }\r\n                prefix = prefixes[i].prefix;\r\n                suffix = prefixes[i].suffix;\r\n                applied = true;\r\n            }\r\n        }\r\n        if (!applied && force && prefixes.length && value != 0) {\r\n            // Prefix was not applied. Use the first prefix.\r\n            newvalue = value / prefixes[0].number;\r\n            prefix = prefixes[0].prefix;\r\n            suffix = prefixes[0].suffix;\r\n            applied = true;\r\n        }\r\n        if (applied) {\r\n            newvalue = parseFloat(newvalue.toPrecision(Math.min(k.toString().length + Math.floor(newvalue).toString().replace(/[^0-9]*/g, \"\").length, 21)));\r\n        }\r\n        return [newvalue, prefix, suffix];\r\n    }\r\n    /**\r\n     * Replaces brackets with temporary placeholders.\r\n     *\r\n     * @ignore Exclude from docs\r\n     * @param text  Input text\r\n     * @return Escaped text\r\n     */\r\n    escape(text) {\r\n        return text.replace(\"||\", $type.PLACEHOLDER2);\r\n    }\r\n    /**\r\n     * Replaces placeholders back to brackets.\r\n     *\r\n     * @ignore Exclude from docs\r\n     * @param text  Escaped text\r\n     * @return Unescaped text\r\n     */\r\n    unescape(text) {\r\n        return text.replace($type.PLACEHOLDER2, \"|\");\r\n    }\r\n}\r\n//# sourceMappingURL=NumberFormatter.js.map","import type { Language } from \"./Language\";\n\nimport { Entity, IEntitySettings, IEntityPrivate } from \"./Entity\"\nimport { TextFormatter } from \"./TextFormatter\";\n\nimport * as $object from \"./Object\";\nimport * as $utils from \"./Utils\";\nimport * as $type from \"./Type\";\n\n/**\n * @ignore\n */\nexport interface INumberSuffix {\n\tnumber: number;\n\tsuffix: string;\n}\n\nexport interface INumberFormatterSettings extends IEntitySettings {\n\n\t/**\n\t * Number format to be used when formatting numbers.\n\t *\n\t * @default \"#,###.#####\"\n\t */\n\tnumberFormat?: string | Intl.NumberFormatOptions;\n\n\t/**\n\t * A threshold value for negative numbers.\n\t *\n\t * @default 0\n\t */\n\tnegativeBase?: number;\n\n\t/**\n\t * Prefixes and thresholds to group big numbers into, e.g. 1M.\n\t *\n\t * Used in conjunction with `a` modifier of the number format.\n\t */\n\tbigNumberPrefixes?: INumberSuffix[];\n\n\t/**\n\t * Prefixes and thresholds to group small numbers into, e.g. 1m.\n\t *\n\t * Used in conjunction with `a` modifier of the number format.\n\t */\n\tsmallNumberPrefixes?: INumberSuffix[];\n\n\t/**\n\t * All numbers below this value are considered small.\n\t *\n\t * @default 1\n\t */\n\tsmallNumberThreshold?: number;\n\n\t/**\n\t * Prefixes to and thresholds to use when grouping data size numbers, e.g. 1MB.\n\t *\n\t * Used in conjunction with `b` modifier of the number format.\n\t */\n\tbytePrefixes?: INumberSuffix[];\n\n\t/**\n\t * Indicates which fields in data should be considered numeric.\n\t *\n\t * It is used when formatting data placeholder values.\n\t */\n\tnumericFields?: string[];\n\n\t/**\n\t * Locales if you are using date formats in `Intl.NumberFormatOptions` syntax.\n\t *\n\t * @see (@link https://developer.mozilla.org/en-US/docs/Web/JavaScript/Reference/Global_Objects/NumberFormat) about using Intl for number formatting\n\t * @param value Locales\n\t */\n\tintlLocales?: string;\n\n\t/**\n\t * If set to `true` will force the number string to be LTR, even if RTL is\n\t * enabled.\n\t * \n\t * @default false\n\t * @since 5.3.13\n\t */\n\tforceLTR?: boolean;\n\n}\n\nexport interface INumberFormatterPrivate extends IEntityPrivate {\n}\n\n/**\n * Number formatter\n *\n * @see {@link https://www.amcharts.com/docs/v5/concepts/formatters/formatting-numbers/} for more info\n * @important\n */\nexport class NumberFormatter extends Entity {\n\tdeclare public _settings: INumberFormatterSettings;\n\tdeclare public _privateSettings: INumberFormatterPrivate;\n\n\tprotected _setDefaults() {\n\t\t// Defaults\n\t\tthis._setDefault(\"negativeBase\", 0);\n\t\tthis._setDefault(\"numberFormat\", \"#,###.#####\");\n\t\tthis._setDefault(\"smallNumberThreshold\", 1.00);\n\n\t\tconst bns = \"_big_number_suffix_\";\n\t\tconst sns = \"_small_number_suffix_\";\n\t\tconst bs = \"_byte_suffix_\";\n\n\t\tthis._setDefault(\"bigNumberPrefixes\", [\n\t\t\t{ \"number\": 1e+3, \"suffix\": this._t(bns + \"3\") },\n\t\t\t{ \"number\": 1e+6, \"suffix\": this._t(bns + \"6\") },\n\t\t\t{ \"number\": 1e+9, \"suffix\": this._t(bns + \"9\") },\n\t\t\t{ \"number\": 1e+12, \"suffix\": this._t(bns + \"12\") },\n\t\t\t{ \"number\": 1e+15, \"suffix\": this._t(bns + \"15\") },\n\t\t\t{ \"number\": 1e+18, \"suffix\": this._t(bns + \"18\") },\n\t\t\t{ \"number\": 1e+21, \"suffix\": this._t(bns + \"21\") },\n\t\t\t{ \"number\": 1e+24, \"suffix\": this._t(bns + \"24\") }\n\t\t]);\n\n\t\tthis._setDefault(\"smallNumberPrefixes\", [\n\t\t\t{ \"number\": 1e-24, \"suffix\": this._t(sns + \"24\") },\n\t\t\t{ \"number\": 1e-21, \"suffix\": this._t(sns + \"21\") },\n\t\t\t{ \"number\": 1e-18, \"suffix\": this._t(sns + \"18\") },\n\t\t\t{ \"number\": 1e-15, \"suffix\": this._t(sns + \"15\") },\n\t\t\t{ \"number\": 1e-12, \"suffix\": this._t(sns + \"12\") },\n\t\t\t{ \"number\": 1e-9, \"suffix\": this._t(sns + \"9\") },\n\t\t\t{ \"number\": 1e-6, \"suffix\": this._t(sns + \"6\") },\n\t\t\t{ \"number\": 1e-3, \"suffix\": this._t(sns + \"3\") }\n\t\t]);\n\n\t\tthis._setDefault(\"bytePrefixes\", [\n\t\t\t{ \"number\": 1, suffix: this._t(bs + \"B\") },\n\t\t\t{ \"number\": 1024, suffix: this._t(bs + \"KB\") },\n\t\t\t{ \"number\": 1048576, suffix: this._t(bs + \"MB\") },\n\t\t\t{ \"number\": 1073741824, suffix: this._t(bs + \"GB\") },\n\t\t\t{ \"number\": 1099511627776, suffix: this._t(bs + \"TB\") },\n\t\t\t{ \"number\": 1125899906842624, suffix: this._t(bs + \"PB\") }\n\t\t]);\n\n\t\tsuper._setDefaults();\n\t}\n\n\tpublic _beforeChanged() {\n\t\tsuper._beforeChanged();\n\t}\n\n\t/**\n\t * Formats the number according to specific format.\n\t *\n\t * @param value   Value to format\n\t * @param format  Format to apply\n\t * @return Formatted number\n\t */\n\tpublic format(value: number | string, format?: string | Intl.NumberFormatOptions, precision?: number): string {\n\n\t\t// no format passed in or \"Number\"\n\t\tif (format == null || ($type.isString(format) && format.toLowerCase() === \"number\")) {\n\t\t\tformat = this.get(\"numberFormat\", \"\");\n\t\t}\n\n\t\t// Init return value\n\t\tlet formatted;\n\n\t\t// Cast to number just in case\n\t\t// TODO: maybe use better casting\n\t\tlet source: number = Number(value);\n\n\t\t// Is it a built-in format or Intl.NumberFormatOptions\n\t\tif ($type.isObject(format)) {\n\t\t\ttry {\n\t\t\t\tif (this.get(\"intlLocales\")) {\n\t\t\t\t\treturn new Intl.NumberFormat(this.get(\"intlLocales\"), <Intl.NumberFormatOptions>format).format(source);\n\t\t\t\t}\n\t\t\t\telse {\n\t\t\t\t\treturn new Intl.NumberFormat(undefined, <Intl.NumberFormatOptions>format).format(source);\n\t\t\t\t}\n\t\t\t}\n\t\t\tcatch (e) {\n\t\t\t\treturn \"Invalid\";\n\t\t\t}\n\n\t\t}\n\t\telse {\n\n\t\t\t// Clean format\n\t\t\tformat = $utils.cleanFormat(format!);\n\n\t\t\t// Get format info (it will also deal with parser caching)\n\t\t\tlet info = this.parseFormat(format, this._root.language);\n\n\n\t\t\t// format and replace the number\n\t\t\tlet details;\n\t\t\tif (source > this.get(\"negativeBase\")) {\n\t\t\t\tdetails = info.positive;\n\t\t\t}\n\t\t\telse if (source < this.get(\"negativeBase\")) {\n\t\t\t\tdetails = info.negative;\n\t\t\t}\n\t\t\telse {\n\t\t\t\tdetails = info.zero;\n\t\t\t}\n\n\t\t\t// Adjust precision\n\t\t\tif (precision != null && !details.mod) {\n\t\t\t\tdetails = $object.copy(details);\n\t\t\t\tdetails.decimals.active = source == 0 ? 0 : precision;\n\t\t\t}\n\n\t\t\t// Format\n\t\t\tformatted = details.template.split($type.PLACEHOLDER).join(this.applyFormat(source, details));\n\n\t\t}\n\n\t\tif (this.get(\"forceLTR\") === true) {\n\t\t\tformatted = \"‎\" + formatted;\n\t\t}\n\n\t\treturn formatted;\n\t}\n\n\t/**\n\t * Parses supplied format into structured object which can be used to format\n\t * the number.\n\t *\n\t * @param format Format string, i.e. \"#,###.00\"\n\t * @param language Language\n\t * @ignore\n\t */\n\tprotected parseFormat(format: string, language: Language): any {\n\n\t\t// Check cache\n\t\t// TODO\n\t\t// let cached = this.getCache(format);\n\t\t// if (cached != null) {\n\t\t// \treturn cached;\n\t\t// }\n\n\t\tconst thousandSeparator = language.translateEmpty(\"_thousandSeparator\");\n\t\tconst decimalSeparator = language.translateEmpty(\"_decimalSeparator\")\n\n\t\t// init format parse info holder\n\t\tlet info: any = {\n\t\t\t\"positive\": {\n\t\t\t\t\"thousands\": {\n\t\t\t\t\t\"active\": -1,\n\t\t\t\t\t\"passive\": -1,\n\t\t\t\t\t\"interval\": -1,\n\t\t\t\t\t\"separator\": thousandSeparator\n\t\t\t\t},\n\t\t\t\t\"decimals\": {\n\t\t\t\t\t\"active\": -1,\n\t\t\t\t\t\"passive\": -1,\n\t\t\t\t\t\"separator\": decimalSeparator\n\t\t\t\t},\n\t\t\t\t\"template\": \"\",\n\t\t\t\t\"source\": \"\",\n\t\t\t\t\"parsed\": false\n\t\t\t},\n\t\t\t\"negative\": {\n\t\t\t\t\"thousands\": {\n\t\t\t\t\t\"active\": -1,\n\t\t\t\t\t\"passive\": -1,\n\t\t\t\t\t\"interval\": -1,\n\t\t\t\t\t\"separator\": thousandSeparator\n\t\t\t\t},\n\t\t\t\t\"decimals\": {\n\t\t\t\t\t\"active\": -1,\n\t\t\t\t\t\"passive\": -1,\n\t\t\t\t\t\"separator\": decimalSeparator\n\t\t\t\t},\n\t\t\t\t\"template\": \"\",\n\t\t\t\t\"source\": \"\",\n\t\t\t\t\"parsed\": false\n\t\t\t},\n\t\t\t\"zero\": {\n\t\t\t\t\"thousands\": {\n\t\t\t\t\t\"active\": -1,\n\t\t\t\t\t\"passive\": -1,\n\t\t\t\t\t\"interval\": -1,\n\t\t\t\t\t\"separator\": thousandSeparator\n\t\t\t\t},\n\t\t\t\t\"decimals\": {\n\t\t\t\t\t\"active\": -1,\n\t\t\t\t\t\"passive\": -1,\n\t\t\t\t\t\"separator\": decimalSeparator\n\t\t\t\t},\n\t\t\t\t\"template\": \"\",\n\t\t\t\t\"source\": \"\",\n\t\t\t\t\"parsed\": false\n\t\t\t}\n\t\t};\n\n\t\t// Escape double vertical bars (that mean display one vertical bar)\n\t\tformat = format.replace(\"||\", $type.PLACEHOLDER2);\n\n\t\t// Split it up and deal with different formats\n\t\tlet parts = format.split(\"|\");\n\t\tinfo.positive.source = parts[0];\n\n\t\tif (typeof parts[2] === \"undefined\") {\n\t\t\tinfo.zero = info.positive;\n\t\t}\n\t\telse {\n\t\t\tinfo.zero.source = parts[2];\n\t\t}\n\n\t\tif (typeof parts[1] === \"undefined\") {\n\t\t\tinfo.negative = info.positive;\n\t\t}\n\t\telse {\n\t\t\tinfo.negative.source = parts[1];\n\t\t}\n\n\t\t// Parse each\n\t\t$object.each(info, (_part, item) => {\n\t\t\t// Already parsed\n\t\t\tif (item.parsed) {\n\t\t\t\treturn;\n\t\t\t}\n\n\t\t\t// Check cached\n\t\t\t// TODO\n\t\t\t// if (typeof this.getCache(item.source) !== \"undefined\") {\n\t\t\t// \tinfo[part] = this.getCache(item.source);\n\t\t\t// \treturn;\n\t\t\t// }\n\n\t\t\t// Begin parsing\n\t\t\tlet partFormat = item.source;\n\n\t\t\t// Just \"Number\"?\n\t\t\tif (partFormat.toLowerCase() === \"number\") {\n\t\t\t\tpartFormat = this.get(\"numberFormat\", \"#,###.#####\");\n\t\t\t}\n\n\t\t\t// Let TextFormatter split into chunks\n\t\t\tlet chunks = TextFormatter.chunk(partFormat, true);\n\t\t\tfor (let i: number = 0; i < chunks.length; i++) {\n\t\t\t\tlet chunk = chunks[i];\n\n\t\t\t\t// replace back double vertical bar\n\t\t\t\tchunk.text = chunk.text.replace($type.PLACEHOLDER2, \"|\");\n\n\t\t\t\tif (chunk.type === \"value\") {\n\t\t\t\t\t// Parse format\n\n\t\t\t\t\t// Look for codes\n\t\t\t\t\tlet matches: string[] | null = chunk.text.match(/[#0.,]+[ ]?[abespABESP%!]?[abespABESP‰!]?/);\n\n\t\t\t\t\tif (matches) {\n\t\t\t\t\t\tif (matches === null || matches[0] === \"\") {\n\t\t\t\t\t\t\t// no codes here - assume string\n\t\t\t\t\t\t\t// nothing to do here\n\t\t\t\t\t\t\titem.template += chunk.text;\n\t\t\t\t\t\t}\n\t\t\t\t\t\telse {\n\n\t\t\t\t\t\t\t// look for the format modifiers at the end\n\t\t\t\t\t\t\tlet mods: string[] | null = matches[0].match(/[abespABESP%‰!]{2}|[abespABESP%‰]{1}$/);\n\n\t\t\t\t\t\t\tif (mods) {\n\t\t\t\t\t\t\t\titem.mod = mods[0].toLowerCase();\n\t\t\t\t\t\t\t\titem.modSpacing = matches[0].match(/[ ]{1}[abespABESP%‰!]{1}$/) ? true : false;\n\t\t\t\t\t\t\t}\n\n\t\t\t\t\t\t\t// break the format up\n\t\t\t\t\t\t\tlet a = matches[0].split(\".\");\n\n\t\t\t\t\t\t\t// Deal with thousands\n\t\t\t\t\t\t\tif (a[0] === \"\") {\n\t\t\t\t\t\t\t\t// No directives for thousands\n\t\t\t\t\t\t\t\t// Leave default settings (no formatting)\n\t\t\t\t\t\t\t}\n\t\t\t\t\t\t\telse {\n\t\t\t\t\t\t\t\t// Counts\n\t\t\t\t\t\t\t\titem.thousands.active = (a[0].match(/0/g) || []).length;\n\t\t\t\t\t\t\t\titem.thousands.passive = (a[0].match(/\\#/g) || []).length + item.thousands.active;\n\n\t\t\t\t\t\t\t\t// Separator interval\n\t\t\t\t\t\t\t\tlet b = a[0].split(\",\");\n\t\t\t\t\t\t\t\tif (b.length === 1) {\n\t\t\t\t\t\t\t\t\t// No thousands separators\n\t\t\t\t\t\t\t\t\t// Do nothing\n\t\t\t\t\t\t\t\t}\n\t\t\t\t\t\t\t\telse {\n\t\t\t\t\t\t\t\t\t// Use length fo the last chunk as thousands length\n\t\t\t\t\t\t\t\t\titem.thousands.interval = (b.pop() || \"\").length;\n\n\t\t\t\t\t\t\t\t\tif (item.thousands.interval === 0) {\n\t\t\t\t\t\t\t\t\t\titem.thousands.interval = -1;\n\t\t\t\t\t\t\t\t\t}\n\t\t\t\t\t\t\t\t}\n\t\t\t\t\t\t\t}\n\n\t\t\t\t\t\t\t// Deal with decimals\n\t\t\t\t\t\t\tif (typeof (a[1]) === \"undefined\") {\n\t\t\t\t\t\t\t\t// No directives for decimals\n\t\t\t\t\t\t\t\t// Leave at defaults (no formatting)\n\t\t\t\t\t\t\t}\n\t\t\t\t\t\t\telse {\n\t\t\t\t\t\t\t\t// Counts\n\t\t\t\t\t\t\t\titem.decimals.active = (a[1].match(/0/g) || []).length;\n\t\t\t\t\t\t\t\titem.decimals.passive = (a[1].match(/\\#/g) || []).length + item.decimals.active;\n\t\t\t\t\t\t\t}\n\n\t\t\t\t\t\t\t// Add special code to template\n\t\t\t\t\t\t\titem.template += chunk.text.split(matches[0]).join($type.PLACEHOLDER);\n\n\t\t\t\t\t\t}\n\t\t\t\t\t}\n\t\t\t\t}\n\t\t\t\telse {\n\t\t\t\t\t// Quoted string - take it as it is\n\t\t\t\t\titem.template += chunk.text;\n\t\t\t\t}\n\t\t\t}\n\n\t\t\t// Apply style formatting\n\t\t\t//item.template = getTextFormatter().format(item.template, this.outputFormat);\n\n\t\t\t// Save cache\n\t\t\t// TODO\n\t\t\t//this.setCache(item.source, item);\n\n\t\t\t// Mark this as parsed\n\t\t\titem.parsed = true;\n\n\t\t});\n\n\t\t// Save cache (the whole thing)\n\t\t// TODO\n\t\t//this.setCache(format, info);\n\n\t\treturn info;\n\t}\n\n\t/**\n\t * Applies parsed format to a numeric value.\n\t *\n\t * @param value    Value\n\t * @param details  Parsed format as returned by parseFormat()\n\t * @return Formatted number\n\t * @ignore\n\t */\n\tprotected applyFormat(value: number, details: any): string {\n\n\t\t// Use absolute values\n\t\tlet negative: boolean = value < 0;\n\t\tvalue = Math.abs(value);\n\n\t\t// Recalculate according to modifier\n\t\tlet prefix: string = \"\", suffix: string = \"\";\n\t\tlet mods: string[] = details.mod ? details.mod.split(\"\") : [];\n\t\tif (mods.indexOf(\"b\") !== -1) {\n\t\t\tlet a = this.applyPrefix(value, this.get(\"bytePrefixes\")!, mods.indexOf(\"!\") !== -1);\n\t\t\tvalue = a[0];\n\t\t\tprefix = a[1];\n\t\t\tsuffix = a[2];\n\t\t\tif (details.modSpacing) {\n\t\t\t\tsuffix = \" \" + suffix;\n\t\t\t}\n\t\t}\n\t\telse if (mods.indexOf(\"a\") !== -1) {\n\t\t\tlet a = this.applyPrefix(value, value < this.get(\"smallNumberThreshold\")! ? this.get(\"smallNumberPrefixes\")! : this.get(\"bigNumberPrefixes\")!, mods.indexOf(\"!\") !== -1);\n\t\t\tvalue = a[0];\n\t\t\tprefix = a[1];\n\t\t\tsuffix = a[2];\n\t\t\tif (details.modSpacing) {\n\t\t\t\tsuffix = \" \" + suffix;\n\t\t\t}\n\t\t}\n\t\telse if (mods.indexOf(\"p\") !== -1) {\n\t\t\tlet ol = Math.min(value.toString().length + 2, 21);\n\t\t\t//value *= 100;\n\t\t\tvalue = parseFloat(value.toPrecision(ol));\n\t\t\tprefix = this._root.language.translate(\"_percentPrefix\");\n\t\t\tsuffix = this._root.language.translate(\"_percentSuffix\");\n\t\t\tif (prefix == \"\" && suffix == \"\") {\n\t\t\t\tsuffix = \"%\";\n\t\t\t}\n\t\t}\n\t\telse if (mods.indexOf(\"%\") !== -1) {\n\t\t\tlet ol = Math.min(value.toString().length + 2, 21);\n\t\t\tvalue *= 100;\n\t\t\tvalue = parseFloat(value.toPrecision(ol));\n\t\t\tsuffix = \"%\";\n\t\t}\n\t\telse if (mods.indexOf(\"‰\") !== -1) {\n\t\t\tlet ol = Math.min(value.toString().length + 3, 21);\n\t\t\tvalue *= 1000;\n\t\t\tvalue = parseFloat(value.toPrecision(ol));\n\t\t\tsuffix = \"‰\";\n\t\t}\n\n\t\t// Round to passive\n\t\tif (mods.indexOf(\"e\") !== -1) {\n\t\t\t// convert the value to exponential\n\t\t\tlet exp: string[];\n\t\t\tif (details.decimals.passive >= 0) {\n\t\t\t\texp = value.toExponential(details.decimals.passive).split(\"e\");\n\t\t\t}\n\t\t\telse {\n\t\t\t\texp = value.toExponential().split(\"e\");\n\t\t\t}\n\t\t\tvalue = Number(exp[0]);\n\t\t\tsuffix = \"e\" + exp[1];\n\t\t\tif (details.modSpacing) {\n\t\t\t\tsuffix = \" \" + suffix;\n\t\t\t}\n\t\t}\n\t\telse if (details.decimals.passive === 0) {\n\t\t\tvalue = Math.round(value);\n\t\t}\n\t\telse if (details.decimals.passive > 0) {\n\t\t\tconst decimals = $utils.decimalPlaces(value);\n\t\t\tif (decimals > 0) {\n\t\t\t\tconst d = Math.pow(10, details.decimals.passive);\n\t\t\t\tvalue = Math.round(parseFloat((value * d).toFixed(decimals))) / d;\n\t\t\t}\n\t\t}\n\n\t\t// Init return value\n\t\tlet res: string = \"\";\n\n\t\t// Calc integer and decimal parts\n\t\tlet a = $type.numberToString(value).split(\".\");\n\n\t\t// Format integers\n\t\tlet ints = a[0];\n\n\t\t// Pad integers to active length\n\t\tif (ints.length < details.thousands.active) {\n\t\t\tints = Array(details.thousands.active - ints.length + 1).join(\"0\") + ints;\n\t\t}\n\n\t\t// Insert thousands separators\n\t\tif (details.thousands.interval > 0) {\n\t\t\tlet ip: string[] = [];\n\t\t\tlet intsr: string = ints.split(\"\").reverse().join(\"\");\n\t\t\tfor (let i = 0, len = ints.length; i <= len; i += details.thousands.interval) {\n\t\t\t\tlet c: string = intsr.substr(i, details.thousands.interval).split(\"\").reverse().join(\"\");\n\t\t\t\tif (c !== \"\") {\n\t\t\t\t\tip.unshift(c);\n\t\t\t\t}\n\t\t\t}\n\t\t\tints = ip.join(details.thousands.separator);\n\t\t}\n\n\t\t// Add integers\n\t\tres += ints;\n\n\t\t// Add decimals\n\t\tif (a.length === 1) {\n\t\t\ta.push(\"\");\n\t\t}\n\t\tlet decs: string = a[1];\n\n\t\t// Fill zeros?\n\t\tif (decs.length < details.decimals.active) {\n\t\t\tdecs += Array(details.decimals.active - decs.length + 1).join(\"0\");\n\t\t}\n\n\t\tif (decs !== \"\") {\n\t\t\tres += details.decimals.separator + decs;\n\t\t}\n\n\t\t// Can't have empty return value\n\t\tif (res === \"\") {\n\t\t\tres = \"0\";\n\t\t}\n\n\t\t// Add minus sign back\n\t\tif (value !== 0 && negative && (mods.indexOf(\"s\") === -1)) {\n\t\t\tres = \"-\" + res;\n\t\t}\n\n\t\t// Add suffixes/prefixes\n\t\tif (prefix) {\n\t\t\tres = prefix + res;\n\t\t}\n\t\tif (suffix) {\n\t\t\tres += suffix;\n\t\t}\n\n\t\treturn res;\n\t}\n\n\n\tprotected applyPrefix(value: number, prefixes: any[], force: boolean = false): any[] {\n\t\tlet newvalue = value;\n\t\tlet prefix = \"\";\n\t\tlet suffix = \"\";\n\t\tlet applied = false;\n\t\tlet k = 1;\n\n\t\tfor (let i = 0, len = prefixes.length; i < len; i++) {\n\t\t\tif (prefixes[i].number <= value) {\n\t\t\t\tif (prefixes[i].number === 0) {\n\t\t\t\t\tnewvalue = 0;\n\t\t\t\t}\n\t\t\t\telse {\n\t\t\t\t\tnewvalue = value / prefixes[i].number;\n\t\t\t\t\tk = prefixes[i].number;\n\t\t\t\t}\n\t\t\t\tprefix = prefixes[i].prefix;\n\t\t\t\tsuffix = prefixes[i].suffix;\n\t\t\t\tapplied = true;\n\t\t\t}\n\t\t}\n\n\n\t\tif (!applied && force && prefixes.length && value != 0) {\n\t\t\t// Prefix was not applied. Use the first prefix.\n\t\t\tnewvalue = value / prefixes[0].number;\n\t\t\tprefix = prefixes[0].prefix;\n\t\t\tsuffix = prefixes[0].suffix;\n\t\t\tapplied = true;\n\t\t}\n\n\t\tif (applied) {\n\t\t\tnewvalue = parseFloat(\n\t\t\t\tnewvalue.toPrecision(\n\t\t\t\t\tMath.min(k.toString().length + Math.floor(newvalue).toString().replace(/[^0-9]*/g, \"\").length, 21)\n\t\t\t\t)\n\t\t\t);\n\t\t}\n\n\t\treturn [newvalue, prefix, suffix];\n\t}\n\n\t/**\n\t * Replaces brackets with temporary placeholders.\n\t *\n\t * @ignore Exclude from docs\n\t * @param text  Input text\n\t * @return Escaped text\n\t */\n\tpublic escape(text: string): string {\n\t\treturn text.replace(\"||\", $type.PLACEHOLDER2);\n\t}\n\n\t/**\n\t * Replaces placeholders back to brackets.\n\t *\n\t * @ignore Exclude from docs\n\t * @param text  Escaped text\n\t * @return Unescaped text\n\t */\n\tpublic unescape(text: string): string {\n\t\treturn text.replace($type.PLACEHOLDER2, \"|\");\n\t}\n\n}\n","import { Entity } from \"./Entity\";\r\nimport { TextFormatter } from \"./TextFormatter\";\r\nimport { Timezone } from \"./Timezone\";\r\nimport * as $type from \"./Type\";\r\nimport * as $utils from \"./Utils\";\r\n/**\r\n * Date formatter class.\r\n *\r\n * @see {@link https://www.amcharts.com/docs/v5/concepts/formatters/formatting-dates/} for more info\r\n * @important\r\n */\r\nexport class DateFormatter extends Entity {\r\n    _setDefaults() {\r\n        // Defaults\r\n        this._setDefault(\"capitalize\", true);\r\n        this._setDefault(\"dateFormat\", \"yyyy-MM-dd\");\r\n        super._setDefaults();\r\n    }\r\n    _beforeChanged() {\r\n        super._beforeChanged();\r\n    }\r\n    /**\r\n     * Formats a source `Date` object into string format\r\n     * @param   source          inpout date\r\n     * @param   format          Output format\r\n     * @param   ignoreTimezone  Ignore timezone?\r\n     * @return                  Formatted date\r\n     */\r\n    format(source, format, ignoreTimezone = false) {\r\n        // Locale?\r\n        // TODO\r\n        // No format passed in or it's empty\r\n        if (typeof format === \"undefined\" || format === \"\") {\r\n            format = this.get(\"dateFormat\", \"yyyy-MM-dd\");\r\n        }\r\n        // Init return value\r\n        let formatted;\r\n        // Cast?\r\n        // TODO: decide if we need to cast\r\n        let date = source;\r\n        // Is it a built-in format or Intl.DateTimeFormat\r\n        if ($type.isObject(format)) {\r\n            try {\r\n                const locales = this.get(\"intlLocales\");\r\n                if (locales) {\r\n                    return new Intl.DateTimeFormat(locales, format).format(date);\r\n                }\r\n                else {\r\n                    return new Intl.DateTimeFormat(undefined, format).format(date);\r\n                }\r\n            }\r\n            catch (e) {\r\n                return \"Invalid\";\r\n            }\r\n        }\r\n        // get format info (it will also deal with parser caching)\r\n        let info = this.parseFormat(format);\r\n        // Should we apply custom time zone?\r\n        const timezone = this._root.timezone;\r\n        if (timezone && !this._root.utc && !ignoreTimezone) {\r\n            date = timezone.convertLocal(date);\r\n        }\r\n        // Check if it's a valid date\r\n        if (!$type.isNumber(date.getTime())) {\r\n            // TODO translation\r\n            //return this._t(\"Invalid date\");\r\n            return \"Invalid date\";\r\n        }\r\n        // Apply format\r\n        formatted = this.applyFormat(date, info, ignoreTimezone);\r\n        // Capitalize\r\n        if (this.get(\"capitalize\")) {\r\n            formatted = formatted.replace(/^.{1}/, formatted.substr(0, 1).toUpperCase());\r\n        }\r\n        // We're done\r\n        return formatted;\r\n    }\r\n    /**\r\n     * Applies format to Date.\r\n     *\r\n     * @param date      Date object\r\n     * @param info      Parsed format information\r\n     * @return Formatted date string\r\n     */\r\n    applyFormat(date, info, ignoreTimezone = false) {\r\n        // Init return value\r\n        let res = info.template;\r\n        // Get values\r\n        let fullYear, month, weekday, day, hours, minutes, seconds, milliseconds, timestamp = date.getTime();\r\n        if (this._root.utc && !ignoreTimezone) {\r\n            fullYear = date.getUTCFullYear();\r\n            month = date.getUTCMonth();\r\n            weekday = date.getUTCDay();\r\n            day = date.getUTCDate();\r\n            hours = date.getUTCHours();\r\n            minutes = date.getUTCMinutes();\r\n            seconds = date.getUTCSeconds();\r\n            milliseconds = date.getUTCMilliseconds();\r\n        }\r\n        else {\r\n            fullYear = date.getFullYear();\r\n            month = date.getMonth();\r\n            weekday = date.getDay();\r\n            day = date.getDate();\r\n            hours = date.getHours();\r\n            minutes = date.getMinutes();\r\n            seconds = date.getSeconds();\r\n            milliseconds = date.getMilliseconds();\r\n        }\r\n        // Go through each part and format/replace it in template\r\n        for (let i = 0, len = info.parts.length; i < len; i++) {\r\n            let value = \"\";\r\n            switch (info.parts[i]) {\r\n                case \"G\":\r\n                    value = this._t(fullYear < 0\r\n                        ? \"_era_bc\"\r\n                        : \"_era_ad\");\r\n                    break;\r\n                case \"yyyy\":\r\n                    value = Math.abs(fullYear).toString();\r\n                    if (fullYear < 0) {\r\n                        value += this._t(\"_era_bc\");\r\n                    }\r\n                    break;\r\n                case \"yyy\":\r\n                case \"yy\":\r\n                case \"y\":\r\n                    value = Math.abs(fullYear).toString().substr(-info.parts[i].length);\r\n                    if (fullYear < 0) {\r\n                        value += this._t(\"_era_bc\");\r\n                    }\r\n                    break;\r\n                case \"YYYY\":\r\n                case \"YYY\":\r\n                case \"YY\":\r\n                case \"Y\":\r\n                    let year = $utils.getWeekYear(date, this._root.utc);\r\n                    if (info.parts[i] == \"YYYY\") {\r\n                        value = Math.abs(year).toString();\r\n                    }\r\n                    else {\r\n                        value = Math.abs(year).toString().substr(-info.parts[i].length);\r\n                    }\r\n                    if (year < 0) {\r\n                        value += this._t(\"_era_bc\");\r\n                    }\r\n                    break;\r\n                case \"u\":\r\n                    // @todo\r\n                    break;\r\n                case \"q\":\r\n                    value = \"\" + Math.ceil((date.getMonth() + 1) / 3);\r\n                    break;\r\n                case \"MMMMM\":\r\n                    value = this._t(this._getMonth(month)).substr(0, 1);\r\n                    break;\r\n                case \"MMMM\":\r\n                    value = this._t(this._getMonth(month));\r\n                    break;\r\n                case \"MMM\":\r\n                    value = this._t(this._getShortMonth(month));\r\n                    break;\r\n                case \"MM\":\r\n                    value = $utils.padString(month + 1, 2, \"0\");\r\n                    break;\r\n                case \"M\":\r\n                    value = (month + 1).toString();\r\n                    break;\r\n                case \"ww\":\r\n                    value = $utils.padString($utils.getWeek(date, this._root.utc), 2, \"0\");\r\n                    break;\r\n                case \"w\":\r\n                    value = $utils.getWeek(date, this._root.utc).toString();\r\n                    break;\r\n                case \"W\":\r\n                    value = $utils.getMonthWeek(date, this._root.utc).toString();\r\n                    break;\r\n                case \"dd\":\r\n                    value = $utils.padString(day, 2, \"0\");\r\n                    break;\r\n                case \"d\":\r\n                    value = day.toString();\r\n                    break;\r\n                case \"DD\":\r\n                case \"DDD\":\r\n                    value = $utils.padString($utils.getYearDay(date, this._root.utc).toString(), info.parts[i].length, \"0\");\r\n                    break;\r\n                case \"D\":\r\n                    value = $utils.getYearDay(date, this._root.utc).toString();\r\n                    break;\r\n                case \"F\":\r\n                    // @todo\r\n                    break;\r\n                case \"g\":\r\n                    // @todo\r\n                    break;\r\n                case \"t\":\r\n                    value = this._root.language.translateFunc(\"_dateOrd\").call(this, day);\r\n                    break;\r\n                case \"E\":\r\n                    value = (weekday || 7).toString();\r\n                    break;\r\n                case \"EE\":\r\n                    value = $utils.padString((weekday || 7).toString(), 2, \"0\");\r\n                    break;\r\n                case \"EEE\":\r\n                case \"eee\":\r\n                    value = this._t(this._getShortWeekday(weekday));\r\n                    break;\r\n                case \"EEEE\":\r\n                case \"eeee\":\r\n                    value = this._t(this._getWeekday(weekday));\r\n                    break;\r\n                case \"EEEEE\":\r\n                case \"eeeee\":\r\n                    value = this._t(this._getShortWeekday(weekday)).substr(0, 1);\r\n                    break;\r\n                case \"e\":\r\n                case \"ee\":\r\n                    value = (weekday - (this._root.locale.firstDayOfWeek || 1) + 1).toString();\r\n                    if (info.parts[i] == \"ee\") {\r\n                        value = $utils.padString(value, 2, \"0\");\r\n                    }\r\n                    break;\r\n                case \"a\":\r\n                    if (hours >= 12) {\r\n                        value = this._t(\"PM\");\r\n                    }\r\n                    else {\r\n                        value = this._t(\"AM\");\r\n                    }\r\n                    break;\r\n                case \"aa\":\r\n                    if (hours >= 12) {\r\n                        value = this._t(\"P.M.\");\r\n                    }\r\n                    else {\r\n                        value = this._t(\"A.M.\");\r\n                    }\r\n                    break;\r\n                case \"aaa\":\r\n                    if (hours >= 12) {\r\n                        value = this._t(\"P\");\r\n                    }\r\n                    else {\r\n                        value = this._t(\"A\");\r\n                    }\r\n                    break;\r\n                case \"h\":\r\n                    value = $utils.get12Hours(hours).toString();\r\n                    break;\r\n                case \"hh\":\r\n                    value = $utils.padString($utils.get12Hours(hours), 2, \"0\");\r\n                    break;\r\n                case \"H\":\r\n                    value = hours.toString();\r\n                    break;\r\n                case \"HH\":\r\n                    value = $utils.padString(hours, 2, \"0\");\r\n                    break;\r\n                case \"K\":\r\n                    value = $utils.get12Hours(hours, 0).toString();\r\n                    break;\r\n                case \"KK\":\r\n                    value = $utils.padString($utils.get12Hours(hours, 0), 2, \"0\");\r\n                    break;\r\n                case \"k\":\r\n                    value = (hours + 1).toString();\r\n                    break;\r\n                case \"kk\":\r\n                    value = $utils.padString(hours + 1, 2, \"0\");\r\n                    break;\r\n                case \"m\":\r\n                    value = minutes.toString();\r\n                    break;\r\n                case \"mm\":\r\n                    value = $utils.padString(minutes, 2, \"0\");\r\n                    break;\r\n                case \"s\":\r\n                    value = seconds.toString();\r\n                    break;\r\n                case \"ss\":\r\n                    value = $utils.padString(seconds, 2, \"0\");\r\n                    break;\r\n                case \"S\":\r\n                case \"SS\":\r\n                case \"SSS\":\r\n                    value = Math.round((milliseconds / 1000) * Math.pow(10, info.parts[i].length)).toString();\r\n                    break;\r\n                case \"x\":\r\n                    value = timestamp.toString();\r\n                    break;\r\n                case \"n\":\r\n                case \"nn\":\r\n                case \"nnn\":\r\n                    value = $utils.padString(milliseconds, info.parts[i].length, \"0\");\r\n                    break;\r\n                case \"z\":\r\n                    value = $utils.getTimeZone(date, false, false, this._root.utc, this._root.timezone ? this._root.timezone.name : undefined).replace(/[+-]+[0-9]+$/, \"\");\r\n                    break;\r\n                case \"zz\":\r\n                    value = $utils.getTimeZone(date, true, false, this._root.utc, this._root.timezone ? this._root.timezone.name : undefined);\r\n                    break;\r\n                case \"zzz\":\r\n                    value = $utils.getTimeZone(date, false, true, this._root.utc, this._root.timezone ? this._root.timezone.name : undefined).replace(/[+-]+[0-9]+$/, \"\");\r\n                    break;\r\n                case \"zzzz\":\r\n                    value = $utils.getTimeZone(date, true, true, this._root.utc, this._root.timezone ? this._root.timezone.name : undefined);\r\n                    break;\r\n                case \"Z\":\r\n                case \"ZZ\":\r\n                    let timezone = this._root.utc ? \"UTC\" : this._root.timezone;\r\n                    if (timezone instanceof Timezone) {\r\n                        timezone = timezone.name;\r\n                    }\r\n                    const offset = timezone ? $utils.getTimezoneOffset(timezone) : date.getTimezoneOffset();\r\n                    let tz = Math.abs(offset) / 60;\r\n                    let tzh = Math.floor(tz);\r\n                    let tzm = tz * 60 - tzh * 60;\r\n                    if (this._root.utc) {\r\n                        tzh = 0;\r\n                        tzm = 0;\r\n                    }\r\n                    if (info.parts[i] == \"Z\") {\r\n                        value = \"GMT\";\r\n                        value += offset > 0 ? \"-\" : \"+\";\r\n                        value += $utils.padString(tzh, 2) + \":\" + $utils.padString(tzm, 2);\r\n                    }\r\n                    else {\r\n                        value = offset > 0 ? \"-\" : \"+\";\r\n                        value += $utils.padString(tzh, 2) + $utils.padString(tzm, 2);\r\n                    }\r\n                    break;\r\n                case \"i\":\r\n                    value = date.toISOString();\r\n                    break;\r\n                case \"I\":\r\n                    value = date.toUTCString();\r\n                    break;\r\n            }\r\n            res = res.replace($type.PLACEHOLDER, value);\r\n        }\r\n        return res;\r\n    }\r\n    /**\r\n     * Parses format into structured infromation.\r\n     *\r\n     * @param format Format template\r\n     */\r\n    parseFormat(format) {\r\n        // Check cache\r\n        // TODO: implement caching of the parsed format\r\n        // Init format parse info holder\r\n        let info = {\r\n            \"template\": \"\",\r\n            \"parts\": []\r\n        };\r\n        // Let TextFormatter split into chunks\r\n        let chunks = TextFormatter.chunk(format, true);\r\n        for (let i = 0; i < chunks.length; i++) {\r\n            let chunk = chunks[i];\r\n            if (chunk.type === \"value\") {\r\n                // Just \"Date\"?\r\n                if (chunk.text.match(/^date$/i)) {\r\n                    let dateFormat = this.get(\"dateFormat\", \"yyyy-MM-dd\");\r\n                    if (!$type.isString(dateFormat)) {\r\n                        dateFormat = \"yyyy-MM-dd\";\r\n                    }\r\n                    chunk.text = dateFormat;\r\n                }\r\n                // Find all possible parts\r\n                let matches = chunk.text.match(/G|yyyy|yyy|yy|y|YYYY|YYY|YY|Y|u|q|MMMMM|MMMM|MMM|MM|M|ww|w|W|dd|d|DDD|DD|D|F|g|EEEEE|EEEE|EEE|EE|E|eeeee|eeee|eee|ee|e|aaa|aa|a|hh|h|HH|H|KK|K|kk|k|mm|m|ss|s|SSS|SS|S|A|zzzz|zzz|zz|z|ZZ|Z|t|x|nnn|nn|n|i|I/g);\r\n                // Found?\r\n                if (matches) {\r\n                    // Populate template\r\n                    for (let x = 0; x < matches.length; x++) {\r\n                        info.parts.push(matches[x]);\r\n                        chunk.text = chunk.text.replace(matches[x], $type.PLACEHOLDER);\r\n                    }\r\n                }\r\n            }\r\n            // Apply to template\r\n            info.template += chunk.text;\r\n        }\r\n        // Save cache\r\n        // TODO\r\n        return info;\r\n    }\r\n    _months() {\r\n        return [\"January\", \"February\", \"March\", \"April\", \"May\", \"June\", \"July\", \"August\", \"September\", \"October\", \"November\", \"December\"];\r\n    }\r\n    _getMonth(index) {\r\n        return this._months()[index];\r\n    }\r\n    _shortMonths() {\r\n        return [\"Jan\", \"Feb\", \"Mar\", \"Apr\", \"May(short)\", \"Jun\", \"Jul\", \"Aug\", \"Sep\", \"Oct\", \"Nov\", \"Dec\"];\r\n    }\r\n    _getShortMonth(index) {\r\n        return this._shortMonths()[index];\r\n    }\r\n    _weekdays() {\r\n        return [\"Sunday\", \"Monday\", \"Tuesday\", \"Wednesday\", \"Thursday\", \"Friday\", \"Saturday\"];\r\n    }\r\n    _getWeekday(index) {\r\n        return this._weekdays()[index];\r\n    }\r\n    _shortWeekdays() {\r\n        return [\"Sun\", \"Mon\", \"Tue\", \"Wed\", \"Thu\", \"Fri\", \"Sat\"];\r\n    }\r\n    _getShortWeekday(index) {\r\n        return this._shortWeekdays()[index];\r\n    }\r\n    parse(source, format) {\r\n        // Is it already a Date\r\n        if (source instanceof Date) {\r\n            return source;\r\n        }\r\n        // Is it a numeric timestamp\r\n        if ($type.isNumber(source)) {\r\n            return new Date(source);\r\n        }\r\n        // Are we parsing a timestamp?\r\n        if (format == \"x\") {\r\n            return new Date(parseInt(source));\r\n        }\r\n        // No? Let's check if it's string, and try converting to it if nec\r\n        if (!$type.isString(source)) {\r\n            source = source.toString();\r\n        }\r\n        // Init return value\r\n        let res;\r\n        // Init RegEx for parsing\r\n        let reg = \"\";\r\n        // Clean format\r\n        format = $utils.cleanFormat(format);\r\n        // Clip format to length of the source string\r\n        format = format.substr(0, source.length);\r\n        // Parse format\r\n        let info = this.parseFormat(format);\r\n        // Init parsed items holder\r\n        let parsedIndexes = {\r\n            \"year\": -1,\r\n            \"year3\": -1,\r\n            \"year2\": -1,\r\n            \"year1\": -1,\r\n            \"month\": -1,\r\n            \"monthShort\": -1,\r\n            \"monthLong\": -1,\r\n            \"weekdayShort\": -1,\r\n            \"weekdayLong\": -1,\r\n            \"day\": -1,\r\n            \"yearDay\": -1,\r\n            \"week\": -1,\r\n            \"hourBase0\": -1,\r\n            \"hour12Base0\": -1,\r\n            \"hourBase1\": -1,\r\n            \"hour12Base1\": -1,\r\n            \"minute\": -1,\r\n            \"second\": -1,\r\n            \"millisecond\": -1,\r\n            \"millisecondDigits\": -1,\r\n            \"am\": -1,\r\n            \"zone\": -1,\r\n            \"timestamp\": -1,\r\n            \"iso\": -1\r\n        };\r\n        // Init values\r\n        let resValues = {\r\n            \"year\": 1970,\r\n            \"month\": 0,\r\n            \"day\": 1,\r\n            \"hour\": 0,\r\n            \"minute\": 0,\r\n            \"second\": 0,\r\n            \"millisecond\": 0,\r\n            \"timestamp\": null,\r\n            \"offset\": 0,\r\n            \"utc\": this._root.utc\r\n        };\r\n        // Index adjuster\r\n        let indexAdjust = 0;\r\n        let index = 0;\r\n        // Iterate through all of the parts\r\n        for (let i = 0; i < info.parts.length; i++) {\r\n            // Set current match index\r\n            index = i + indexAdjust + 1;\r\n            switch (info.parts[i]) {\r\n                case \"yyyy\":\r\n                case \"YYYY\":\r\n                    reg += \"([0-9]{4})\";\r\n                    parsedIndexes.year = index;\r\n                    break;\r\n                case \"yyy\":\r\n                case \"YYY\":\r\n                    reg += \"([0-9]{3})\";\r\n                    parsedIndexes.year3 = index;\r\n                    break;\r\n                case \"yy\":\r\n                case \"YY\":\r\n                    reg += \"([0-9]{2})\";\r\n                    parsedIndexes.year2 = index;\r\n                    break;\r\n                case \"y\":\r\n                case \"Y\":\r\n                    reg += \"([0-9]{1})\";\r\n                    parsedIndexes.year1 = index;\r\n                    break;\r\n                case \"MMMM\":\r\n                    reg += \"(\" + this.getStringList(this._months()).join(\"|\") + \")\";\r\n                    parsedIndexes.monthLong = index;\r\n                    break;\r\n                case \"MMM\":\r\n                    reg += \"(\" + this.getStringList(this._shortMonths()).join(\"|\") + \")\";\r\n                    parsedIndexes.monthShort = index;\r\n                    break;\r\n                case \"MM\":\r\n                case \"M\":\r\n                    reg += \"([0-9]{2}|[0-9]{1})\";\r\n                    parsedIndexes.month = index;\r\n                    break;\r\n                case \"ww\":\r\n                case \"w\":\r\n                    reg += \"([0-9]{2}|[0-9]{1})\";\r\n                    parsedIndexes.week = index;\r\n                    break;\r\n                case \"dd\":\r\n                case \"d\":\r\n                    reg += \"([0-9]{2}|[0-9]{1})\";\r\n                    parsedIndexes.day = index;\r\n                    break;\r\n                case \"DDD\":\r\n                case \"DD\":\r\n                case \"D\":\r\n                    reg += \"([0-9]{3}|[0-9]{2}|[0-9]{1})\";\r\n                    parsedIndexes.yearDay = index;\r\n                    break;\r\n                case \"dddd\":\r\n                    reg += \"(\" + this.getStringList(this._weekdays()).join(\"|\") + \")\";\r\n                    parsedIndexes.weekdayLong = index;\r\n                    break;\r\n                case \"ddd\":\r\n                    reg += \"(\" + this.getStringList(this._shortWeekdays()).join(\"|\") + \")\";\r\n                    parsedIndexes.weekdayShort = index;\r\n                    break;\r\n                case \"aaa\":\r\n                case \"aa\":\r\n                case \"a\":\r\n                    // TODO: fix (escape regex)\r\n                    reg += \"(\" + this.getStringList([\"AM\", \"PM\", \"A\\.M\\.\", \"P\\.M\\.\", \"A\", \"P\"]).join(\"|\") + \")\";\r\n                    parsedIndexes.am = index;\r\n                    break;\r\n                case \"hh\":\r\n                case \"h\":\r\n                    reg += \"([0-9]{2}|[0-9]{1})\";\r\n                    parsedIndexes.hour12Base1 = index;\r\n                    break;\r\n                case \"HH\":\r\n                case \"H\":\r\n                    reg += \"([0-9]{2}|[0-9]{1})\";\r\n                    parsedIndexes.hourBase0 = index;\r\n                    break;\r\n                case \"KK\":\r\n                case \"K\":\r\n                    reg += \"([0-9]{2}|[0-9]{1})\";\r\n                    parsedIndexes.hour12Base0 = index;\r\n                    break;\r\n                case \"kk\":\r\n                case \"k\":\r\n                    reg += \"([0-9]{2}|[0-9]{1})\";\r\n                    parsedIndexes.hourBase1 = index;\r\n                    break;\r\n                case \"mm\":\r\n                case \"m\":\r\n                    reg += \"([0-9]{2}|[0-9]{1})\";\r\n                    parsedIndexes.minute = index;\r\n                    break;\r\n                case \"ss\":\r\n                case \"s\":\r\n                    reg += \"([0-9]{2}|[0-9]{1})\";\r\n                    parsedIndexes.second = index;\r\n                    break;\r\n                case \"SSS\":\r\n                case \"SS\":\r\n                case \"S\":\r\n                    reg += \"([0-9]{3}|[0-9]{2}|[0-9]{1})\";\r\n                    parsedIndexes.millisecond = index;\r\n                    parsedIndexes.millisecondDigits = info.parts[i].length;\r\n                    break;\r\n                case \"nnn\":\r\n                case \"nn\":\r\n                case \"n\":\r\n                    reg += \"([0-9]{3}|[0-9]{2}|[0-9]{1})\";\r\n                    parsedIndexes.millisecond = index;\r\n                    break;\r\n                case \"x\":\r\n                    reg += \"([0-9]{1,})\";\r\n                    parsedIndexes.timestamp = index;\r\n                    break;\r\n                case \"Z\":\r\n                    reg += \"GMT([-+]+[0-9]{2}:[0-9]{2})\";\r\n                    parsedIndexes.zone = index;\r\n                    break;\r\n                case \"ZZ\":\r\n                    reg += \"([\\\\-+]+[0-9]{2}[0-9]{2})\";\r\n                    parsedIndexes.zone = index;\r\n                    break;\r\n                case \"i\":\r\n                    reg += \"([0-9]{4})-?([0-9]{2})-?([0-9]{2})T?([0-9]{2}):?([0-9]{2}):?([0-9]{2})\\\\.?([0-9]{0,3})([zZ]|[+\\\\-][0-9]{2}:?[0-9]{2}|$)\";\r\n                    parsedIndexes.iso = index;\r\n                    indexAdjust += 7;\r\n                    break;\r\n                case \"G\":\r\n                case \"YYYY\":\r\n                case \"YYY\":\r\n                case \"YY\":\r\n                case \"Y\":\r\n                case \"MMMMM\":\r\n                case \"W\":\r\n                case \"EEEEE\":\r\n                case \"EEEE\":\r\n                case \"EEE\":\r\n                case \"EE\":\r\n                case \"E\":\r\n                case \"eeeee\":\r\n                case \"eeee\":\r\n                case \"eee\":\r\n                case \"ee\":\r\n                case \"e\":\r\n                case \"zzzz\":\r\n                case \"zzz\":\r\n                case \"zz\":\r\n                case \"z\":\r\n                case \"t\":\r\n                    // Ignore\r\n                    indexAdjust--;\r\n                    break;\r\n            }\r\n            reg += \"[^0-9]*\";\r\n        }\r\n        // Try matching\r\n        let regex = new RegExp(reg);\r\n        let matches = source.match(regex);\r\n        if (matches) {\r\n            // Populate the date object\r\n            // Full year\r\n            if (parsedIndexes.year > -1) {\r\n                resValues.year = parseInt(matches[parsedIndexes.year]);\r\n            }\r\n            // 3-digit year\r\n            if (parsedIndexes.year3 > -1) {\r\n                let val = parseInt(matches[parsedIndexes.year3]);\r\n                val += 1000;\r\n                resValues.year = val;\r\n            }\r\n            // 2-digit year\r\n            if (parsedIndexes.year2 > -1) {\r\n                let val = parseInt(matches[parsedIndexes.year2]);\r\n                if (val > 50) {\r\n                    val += 1000;\r\n                }\r\n                else {\r\n                    val += 2000;\r\n                }\r\n                resValues.year = val;\r\n            }\r\n            // 1-digit year\r\n            if (parsedIndexes.year1 > -1) {\r\n                let val = parseInt(matches[parsedIndexes.year1]);\r\n                val = Math.floor((new Date().getFullYear()) / 10) * 10 + val;\r\n                resValues.year = val;\r\n            }\r\n            // Full month\r\n            if (parsedIndexes.monthLong > -1) {\r\n                resValues.month = this.resolveMonth(matches[parsedIndexes.monthLong]);\r\n            }\r\n            // Short month\r\n            if (parsedIndexes.monthShort > -1) {\r\n                resValues.month = this.resolveShortMonth(matches[parsedIndexes.monthShort]);\r\n            }\r\n            // Numeric month\r\n            if (parsedIndexes.month > -1) {\r\n                resValues.month = parseInt(matches[parsedIndexes.month]) - 1;\r\n            }\r\n            // Weekday\r\n            // @todo\r\n            // Week\r\n            if ((parsedIndexes.week > -1) && (parsedIndexes.day === -1)) {\r\n                // We parse weeks ONLY if day is not explicitly set\r\n                // TODO: this needs work\r\n                // (but maybe later - I can hardly imagine anyone passing their dates in weeks)\r\n                resValues.month = 0;\r\n                resValues.day = $utils.getDayFromWeek(parseInt(matches[parsedIndexes.week]), resValues.year, 1, this._root.utc);\r\n            }\r\n            // Day\r\n            if (parsedIndexes.day > -1) {\r\n                resValues.day = parseInt(matches[parsedIndexes.day]);\r\n            }\r\n            // Year day\r\n            if (parsedIndexes.yearDay > -1) {\r\n                resValues.month = 0;\r\n                resValues.day = parseInt(matches[parsedIndexes.yearDay]);\r\n            }\r\n            // 24 Hour (0-23)\r\n            if (parsedIndexes.hourBase0 > -1) {\r\n                resValues.hour = parseInt(matches[parsedIndexes.hourBase0]);\r\n            }\r\n            // 24 Hour (1-24)\r\n            if (parsedIndexes.hourBase1 > -1) {\r\n                resValues.hour = parseInt(matches[parsedIndexes.hourBase1]) - 1;\r\n            }\r\n            // 12 Hour (0-11)\r\n            if (parsedIndexes.hour12Base0 > -1) {\r\n                let val = parseInt(matches[parsedIndexes.hour12Base0]);\r\n                if (val == 11) {\r\n                    val = 0;\r\n                }\r\n                if ((parsedIndexes.am > -1) && !this.isAm(matches[parsedIndexes.am])) {\r\n                    val += 12;\r\n                }\r\n                resValues.hour = val;\r\n            }\r\n            // 12 Hour (1-12)\r\n            if (parsedIndexes.hour12Base1 > -1) {\r\n                let val = parseInt(matches[parsedIndexes.hour12Base1]);\r\n                if (val == 12) {\r\n                    val = 0;\r\n                }\r\n                if ((parsedIndexes.am > -1) && !this.isAm(matches[parsedIndexes.am])) {\r\n                    val += 12;\r\n                }\r\n                resValues.hour = val;\r\n            }\r\n            // Minute\r\n            if (parsedIndexes.minute > -1) {\r\n                resValues.minute = parseInt(matches[parsedIndexes.minute]);\r\n            }\r\n            // Second\r\n            if (parsedIndexes.second > -1) {\r\n                resValues.second = parseInt(matches[parsedIndexes.second]);\r\n            }\r\n            // Millisecond\r\n            if (parsedIndexes.millisecond > -1) {\r\n                let val = parseInt(matches[parsedIndexes.millisecond]);\r\n                if (parsedIndexes.millisecondDigits == 2) {\r\n                    val *= 10;\r\n                }\r\n                else if (parsedIndexes.millisecondDigits == 1) {\r\n                    val *= 100;\r\n                }\r\n                resValues.millisecond = val;\r\n            }\r\n            // Timestamp\r\n            if (parsedIndexes.timestamp > -1) {\r\n                resValues.timestamp = parseInt(matches[parsedIndexes.timestamp]);\r\n                const ts = new Date(resValues.timestamp);\r\n                resValues.year = ts.getUTCFullYear();\r\n                resValues.month = ts.getUTCMonth();\r\n                resValues.day = ts.getUTCDate();\r\n                resValues.hour = ts.getUTCHours();\r\n                resValues.minute = ts.getUTCMinutes();\r\n                resValues.second = ts.getUTCSeconds();\r\n                resValues.millisecond = ts.getUTCMilliseconds();\r\n            }\r\n            // Adjust time zone\r\n            if (parsedIndexes.zone > -1) {\r\n                resValues.offset = this.resolveTimezoneOffset(new Date(resValues.year, resValues.month, resValues.day), matches[parsedIndexes.zone]);\r\n            }\r\n            // ISO\r\n            if (parsedIndexes.iso > -1) {\r\n                resValues.year = $type.toNumber(matches[parsedIndexes.iso + 0]);\r\n                resValues.month = $type.toNumber(matches[parsedIndexes.iso + 1]) - 1;\r\n                resValues.day = $type.toNumber(matches[parsedIndexes.iso + 2]);\r\n                resValues.hour = $type.toNumber(matches[parsedIndexes.iso + 3]);\r\n                resValues.minute = $type.toNumber(matches[parsedIndexes.iso + 4]);\r\n                resValues.second = $type.toNumber(matches[parsedIndexes.iso + 5]);\r\n                resValues.millisecond = $type.toNumber(matches[parsedIndexes.iso + 6]);\r\n                if (matches[parsedIndexes.iso + 7] == \"Z\" || matches[parsedIndexes.iso + 7] == \"z\") {\r\n                    resValues.utc = true;\r\n                }\r\n                else if (matches[parsedIndexes.iso + 7] != \"\") {\r\n                    resValues.offset = this.resolveTimezoneOffset(new Date(resValues.year, resValues.month, resValues.day), matches[parsedIndexes.iso + 7]);\r\n                }\r\n            }\r\n            // Create Date object\r\n            if (resValues.utc) {\r\n                res = new Date(Date.UTC(resValues.year, resValues.month, resValues.day, resValues.hour, resValues.minute, resValues.second, resValues.millisecond));\r\n            }\r\n            else {\r\n                res = new Date(resValues.year, resValues.month, resValues.day, resValues.hour, resValues.minute + resValues.offset, resValues.second, resValues.millisecond);\r\n            }\r\n        }\r\n        else {\r\n            // Didn't match anything\r\n            // Let's try dropping it into Date constructor and hope for the best\r\n            res = new Date(source);\r\n        }\r\n        return res;\r\n    }\r\n    resolveTimezoneOffset(date, zone) {\r\n        let value = zone.match(/([+\\-]?)([0-9]{2}):?([0-9]{2})/);\r\n        if (value) {\r\n            let match = zone.match(/([+\\-]?)([0-9]{2}):?([0-9]{2})/);\r\n            let dir = match[1];\r\n            let hour = match[2];\r\n            let minute = match[3];\r\n            let offset = parseInt(hour) * 60 + parseInt(minute);\r\n            // Adjust offset\r\n            // Making it negative does not seem to make sense, but it's right\r\n            // because of how JavaScript calculates GMT offsets\r\n            if (dir == \"+\") {\r\n                offset *= -1;\r\n            }\r\n            // Check the difference in offset\r\n            let originalOffset = (date || new Date()).getTimezoneOffset();\r\n            let diff = offset - originalOffset;\r\n            return diff;\r\n        }\r\n        return 0;\r\n    }\r\n    /**\r\n     * Resolves month name (i.e. \"December\") into a month number (11).\r\n     *\r\n     * @param value  Month name\r\n     * @return Month number\r\n     */\r\n    resolveMonth(value) {\r\n        // Let's try English first\r\n        let month = this._months().indexOf(value);\r\n        if (month > -1) {\r\n            return month;\r\n        }\r\n        // Try the translation\r\n        if (!this._root.language.isDefault()) {\r\n            month = this._root.language.translateAll(this._months()).indexOf(value);\r\n            if (month > -1) {\r\n                return month;\r\n            }\r\n        }\r\n        return 0;\r\n    }\r\n    /**\r\n     * Resolves short month name (i.e. \"Dec\") into a month number.\r\n     *\r\n     * @param value  Short month name\r\n     * @return Month number\r\n     */\r\n    resolveShortMonth(value) {\r\n        // Let's try English first\r\n        let month = this._shortMonths().indexOf(value);\r\n        if (month > -1) {\r\n            return month;\r\n        }\r\n        // Maybe long month (workaround for May)\r\n        month = this._months().indexOf(value);\r\n        if (month > -1) {\r\n            return month;\r\n        }\r\n        // Try the translation\r\n        if (this._root.language && !this._root.language.isDefault()) {\r\n            month = this._root.language.translateAll(this._shortMonths()).indexOf(value);\r\n            if (month > -1) {\r\n                return month;\r\n            }\r\n        }\r\n        return 0;\r\n    }\r\n    /**\r\n     * Checks if passed in string represents AM/PM notation in many of its\r\n     * versions.\r\n     *\r\n     * @param value  Source string\r\n     * @return Is it AM/PM?\r\n     */\r\n    isAm(value) {\r\n        let list = this.getStringList([\"AM\", \"A.M.\", \"A\"]);\r\n        return list.indexOf(value.toUpperCase()) > -1;\r\n    }\r\n    /**\r\n     * Translates list of strings.\r\n     *\r\n     * @param list  Source strings\r\n     * @return Translated strings\r\n     */\r\n    getStringList(list) {\r\n        let res = [];\r\n        for (let i = 0; i < list.length; i++) {\r\n            // translate?\r\n            if (this._root.language) {\r\n                res.push($utils.escapeForRgex(this._t(list[i])));\r\n            }\r\n            else {\r\n                res.push($utils.escapeForRgex(list[i]));\r\n            }\r\n        }\r\n        return res;\r\n    }\r\n}\r\n//# sourceMappingURL=DateFormatter.js.map","import type { ILocaleSettings } from \"./Language\"\n\nimport { Entity, IEntitySettings, IEntityPrivate } from \"./Entity\"\nimport { TextFormatter } from \"./TextFormatter\"\nimport { Timezone } from \"./Timezone\"\n\nimport * as $type from \"./Type\"\nimport * as $utils from \"./Utils\";\n\n/**\n * Interface describing parsed date format definition.\n *\n * @ignore\n */\nexport interface DateFormatInfo {\n\t\"template\": string;\n\t\"parts\": any[];\n}\n\nexport interface IDateFormatterSettings extends IEntitySettings {\n\n\t/**\n\t * Should the first letter of the formatted date be capitalized?\n\t *\n\t * @default true\n\t */\n\tcapitalize?: boolean;\n\n\t/**\n\t * A date format to be used when formatting dates.\n\t *\n\t * @see {@link https://www.amcharts.com/docs/v5/concepts/formatters/formatting-dates/} for more info\n\t */\n\tdateFormat?: string | Intl.DateTimeFormatOptions;\n\n\t/**\n\t * An array of data fields that hold date values and should be formatted\n\t * with a [[DateFormatter]].\n\t *\n\t * @see {@link https://www.amcharts.com/docs/v5/concepts/formatters/data-placeholders/#Formatting_placeholders} for more info\n\t */\n\tdateFields?: string[];\n\n\t/**\n\t * Locales to use when formatting using `Intl.DateFormatter`.\n\t */\n\tintlLocales?: string;\n\n}\n\nexport interface IDateFormatterPrivate extends IEntityPrivate {\n}\n\ntype Months = \"January\" | \"February\" | \"March\" | \"April\" | \"May\" | \"June\" | \"July\" | \"August\" | \"September\" | \"October\" | \"November\" | \"December\";\ntype ShortMonths = \"Jan\" | \"Feb\" | \"Mar\" | \"Apr\" | \"May(short)\" | \"Jun\" | \"Jul\" | \"Aug\" | \"Sep\" | \"Oct\" | \"Nov\" | \"Dec\";\ntype Weekdays = \"Sunday\" | \"Monday\" | \"Tuesday\" | \"Wednesday\" | \"Thursday\" | \"Friday\" | \"Saturday\";\ntype ShortWeekdays = \"Sun\" | \"Mon\" | \"Tue\" | \"Wed\" | \"Thu\" | \"Fri\" | \"Sat\";\n\n\n/**\n * Date formatter class.\n *\n * @see {@link https://www.amcharts.com/docs/v5/concepts/formatters/formatting-dates/} for more info\n * @important\n */\nexport class DateFormatter extends Entity {\n\tdeclare public _settings: IDateFormatterSettings;\n\tdeclare public _privateSettings: IDateFormatterPrivate;\n\n\tprotected _setDefaults() {\n\t\t// Defaults\n\t\tthis._setDefault(\"capitalize\", true);\n\t\tthis._setDefault(\"dateFormat\", \"yyyy-MM-dd\");\n\n\t\tsuper._setDefaults();\n\t}\n\n\tpublic _beforeChanged() {\n\t\tsuper._beforeChanged();\n\t}\n\n\t/**\n\t * Formats a source `Date` object into string format\n\t * @param   source          inpout date\n\t * @param   format          Output format\n\t * @param   ignoreTimezone  Ignore timezone?\n\t * @return                  Formatted date\n\t */\n\tpublic format(source: any, format?: string | Intl.DateTimeFormatOptions, ignoreTimezone: boolean = false): string {\n\n\t\t// Locale?\n\t\t// TODO\n\n\t\t// No format passed in or it's empty\n\t\tif (typeof format === \"undefined\" || format === \"\") {\n\t\t\tformat = this.get(\"dateFormat\", \"yyyy-MM-dd\");\n\t\t}\n\n\t\t// Init return value\n\t\tlet formatted;\n\n\t\t// Cast?\n\t\t// TODO: decide if we need to cast\n\t\tlet date: Date = source;\n\n\t\t// Is it a built-in format or Intl.DateTimeFormat\n\t\tif ($type.isObject(format)) {\n\n\t\t\ttry {\n\t\t\t\tconst locales = this.get(\"intlLocales\");\n\t\t\t\tif (locales) {\n\t\t\t\t\treturn new Intl.DateTimeFormat(locales, <Intl.DateTimeFormatOptions>format).format(date);\n\t\t\t\t}\n\t\t\t\telse {\n\t\t\t\t\treturn new Intl.DateTimeFormat(undefined, <Intl.DateTimeFormatOptions>format).format(date);\n\t\t\t\t}\n\t\t\t}\n\t\t\tcatch (e) {\n\t\t\t\treturn \"Invalid\";\n\t\t\t}\n\n\t\t}\n\n\t\t// get format info (it will also deal with parser caching)\n\t\tlet info = this.parseFormat(format);\n\n\t\t// Should we apply custom time zone?\n\t\tconst timezone = this._root.timezone;\n\t\tif (timezone && !this._root.utc && !ignoreTimezone) {\n\t\t\tdate = timezone.convertLocal(date);\n\t\t}\n\n\t\t// Check if it's a valid date\n\t\tif (!$type.isNumber(date.getTime())) {\n\t\t\t// TODO translation\n\t\t\t//return this._t(\"Invalid date\");\n\t\t\treturn \"Invalid date\";\n\t\t}\n\n\t\t// Apply format\n\t\tformatted = this.applyFormat(date, info, ignoreTimezone);\n\n\t\t// Capitalize\n\t\tif (this.get(\"capitalize\")) {\n\t\t\tformatted = formatted.replace(\n\t\t\t\t/^.{1}/, formatted.substr(0, 1).toUpperCase()\n\t\t\t);\n\t\t}\n\n\t\t// We're done\n\t\treturn formatted;\n\t}\n\n\t/**\n\t * Applies format to Date.\n\t *\n\t * @param date      Date object\n\t * @param info      Parsed format information\n\t * @return Formatted date string\n\t */\n\tprotected applyFormat(date: Date, info: DateFormatInfo, ignoreTimezone: boolean = false): string {\n\n\t\t// Init return value\n\t\tlet res = info.template;\n\n\t\t// Get values\n\t\tlet fullYear: number,\n\t\t\tmonth: number,\n\t\t\tweekday: number,\n\t\t\tday: number,\n\t\t\thours: number,\n\t\t\tminutes: number,\n\t\t\tseconds: number,\n\t\t\tmilliseconds: number,\n\t\t\ttimestamp: number = date.getTime();\n\t\tif (this._root.utc && !ignoreTimezone) {\n\t\t\tfullYear = date.getUTCFullYear();\n\t\t\tmonth = date.getUTCMonth();\n\t\t\tweekday = date.getUTCDay();\n\t\t\tday = date.getUTCDate();\n\t\t\thours = date.getUTCHours();\n\t\t\tminutes = date.getUTCMinutes();\n\t\t\tseconds = date.getUTCSeconds();\n\t\t\tmilliseconds = date.getUTCMilliseconds();\n\t\t}\n\t\telse {\n\t\t\tfullYear = date.getFullYear();\n\t\t\tmonth = date.getMonth();\n\t\t\tweekday = date.getDay();\n\t\t\tday = date.getDate();\n\t\t\thours = date.getHours();\n\t\t\tminutes = date.getMinutes();\n\t\t\tseconds = date.getSeconds();\n\t\t\tmilliseconds = date.getMilliseconds();\n\t\t}\n\n\t\t// Go through each part and format/replace it in template\n\t\tfor (let i = 0, len = info.parts.length; i < len; i++) {\n\t\t\tlet value: string = \"\";\n\t\t\tswitch (info.parts[i]) {\n\n\t\t\t\tcase \"G\":\n\t\t\t\t\tvalue = this._t(\n\t\t\t\t\t\tfullYear < 0\n\t\t\t\t\t\t\t? \"_era_bc\"\n\t\t\t\t\t\t\t: \"_era_ad\"\n\t\t\t\t\t);\n\t\t\t\t\tbreak;\n\n\t\t\t\tcase \"yyyy\":\n\t\t\t\t\tvalue = Math.abs(fullYear).toString();\n\t\t\t\t\tif (fullYear < 0) {\n\t\t\t\t\t\tvalue += this._t(\"_era_bc\");\n\t\t\t\t\t}\n\t\t\t\t\tbreak;\n\n\t\t\t\tcase \"yyy\":\n\t\t\t\tcase \"yy\":\n\t\t\t\tcase \"y\":\n\t\t\t\t\tvalue = Math.abs(fullYear).toString().substr(-info.parts[i].length);\n\t\t\t\t\tif (fullYear < 0) {\n\t\t\t\t\t\tvalue += this._t(\"_era_bc\");\n\t\t\t\t\t}\n\t\t\t\t\tbreak;\n\n\t\t\t\tcase \"YYYY\":\n\t\t\t\tcase \"YYY\":\n\t\t\t\tcase \"YY\":\n\t\t\t\tcase \"Y\":\n\t\t\t\t\tlet year = $utils.getWeekYear(date, this._root.utc);\n\t\t\t\t\tif (info.parts[i] == \"YYYY\") {\n\t\t\t\t\t\tvalue = Math.abs(year).toString();\n\t\t\t\t\t}\n\t\t\t\t\telse {\n\t\t\t\t\t\tvalue = Math.abs(year).toString().substr(-info.parts[i].length);\n\t\t\t\t\t}\n\t\t\t\t\tif (year < 0) {\n\t\t\t\t\t\tvalue += this._t(\"_era_bc\");\n\t\t\t\t\t}\n\t\t\t\t\tbreak;\n\n\t\t\t\tcase \"u\":\n\t\t\t\t\t// @todo\n\t\t\t\t\tbreak;\n\n\t\t\t\tcase \"q\":\n\t\t\t\t\tvalue = \"\" + Math.ceil((date.getMonth() + 1) / 3);\n\t\t\t\t\tbreak;\n\n\t\t\t\tcase \"MMMMM\":\n\t\t\t\t\tvalue = this._t(this._getMonth(month)).substr(0, 1);\n\t\t\t\t\tbreak;\n\n\t\t\t\tcase \"MMMM\":\n\t\t\t\t\tvalue = this._t(this._getMonth(month));\n\t\t\t\t\tbreak;\n\n\t\t\t\tcase \"MMM\":\n\t\t\t\t\tvalue = this._t(this._getShortMonth(month));\n\t\t\t\t\tbreak;\n\n\t\t\t\tcase \"MM\":\n\t\t\t\t\tvalue = $utils.padString(month + 1, 2, \"0\");\n\t\t\t\t\tbreak;\n\n\t\t\t\tcase \"M\":\n\t\t\t\t\tvalue = (month + 1).toString();\n\t\t\t\t\tbreak;\n\n\t\t\t\tcase \"ww\":\n\t\t\t\t\tvalue = $utils.padString($utils.getWeek(date, this._root.utc), 2, \"0\");\n\t\t\t\t\tbreak;\n\n\t\t\t\tcase \"w\":\n\t\t\t\t\tvalue = $utils.getWeek(date, this._root.utc).toString();\n\t\t\t\t\tbreak;\n\n\t\t\t\tcase \"W\":\n\t\t\t\t\tvalue = $utils.getMonthWeek(date, this._root.utc).toString();\n\t\t\t\t\tbreak;\n\n\t\t\t\tcase \"dd\":\n\t\t\t\t\tvalue = $utils.padString(day, 2, \"0\");\n\t\t\t\t\tbreak;\n\n\t\t\t\tcase \"d\":\n\t\t\t\t\tvalue = day.toString();\n\t\t\t\t\tbreak;\n\n\t\t\t\tcase \"DD\":\n\t\t\t\tcase \"DDD\":\n\t\t\t\t\tvalue = $utils.padString($utils.getYearDay(date, this._root.utc).toString(), info.parts[i].length, \"0\");\n\t\t\t\t\tbreak;\n\n\t\t\t\tcase \"D\":\n\t\t\t\t\tvalue = $utils.getYearDay(date, this._root.utc).toString();\n\t\t\t\t\tbreak;\n\n\t\t\t\tcase \"F\":\n\t\t\t\t\t// @todo\n\t\t\t\t\tbreak;\n\n\t\t\t\tcase \"g\":\n\t\t\t\t\t// @todo\n\t\t\t\t\tbreak;\n\n\t\t\t\tcase \"t\":\n\t\t\t\t\tvalue = this._root.language.translateFunc(\"_dateOrd\").call(this, day);\n\t\t\t\t\tbreak;\n\n\t\t\t\tcase \"E\":\n\t\t\t\t\tvalue = (weekday || 7).toString();\n\t\t\t\t\tbreak;\n\n\t\t\t\tcase \"EE\":\n\t\t\t\t\tvalue = $utils.padString((weekday || 7).toString(), 2, \"0\");\n\t\t\t\t\tbreak;\n\n\t\t\t\tcase \"EEE\":\n\t\t\t\tcase \"eee\":\n\t\t\t\t\tvalue = this._t(this._getShortWeekday(weekday));\n\t\t\t\t\tbreak;\n\n\t\t\t\tcase \"EEEE\":\n\t\t\t\tcase \"eeee\":\n\t\t\t\t\tvalue = this._t(this._getWeekday(weekday));\n\t\t\t\t\tbreak;\n\n\t\t\t\tcase \"EEEEE\":\n\t\t\t\tcase \"eeeee\":\n\t\t\t\t\tvalue = this._t(this._getShortWeekday(weekday)).substr(0, 1);\n\t\t\t\t\tbreak;\n\n\t\t\t\tcase \"e\":\n\t\t\t\tcase \"ee\":\n\t\t\t\t\tvalue = (weekday - (this._root.locale.firstDayOfWeek || 1) + 1).toString();\n\t\t\t\t\tif (info.parts[i] == \"ee\") {\n\t\t\t\t\t\tvalue = $utils.padString(value, 2, \"0\");\n\t\t\t\t\t}\n\t\t\t\t\tbreak;\n\n\t\t\t\tcase \"a\":\n\t\t\t\t\tif (hours >= 12) {\n\t\t\t\t\t\tvalue = this._t(\"PM\");\n\t\t\t\t\t}\n\t\t\t\t\telse {\n\t\t\t\t\t\tvalue = this._t(\"AM\");\n\t\t\t\t\t}\n\t\t\t\t\tbreak;\n\n\t\t\t\tcase \"aa\":\n\t\t\t\t\tif (hours >= 12) {\n\t\t\t\t\t\tvalue = this._t(\"P.M.\");\n\t\t\t\t\t}\n\t\t\t\t\telse {\n\t\t\t\t\t\tvalue = this._t(\"A.M.\");\n\t\t\t\t\t}\n\t\t\t\t\tbreak;\n\n\t\t\t\tcase \"aaa\":\n\t\t\t\t\tif (hours >= 12) {\n\t\t\t\t\t\tvalue = this._t(\"P\");\n\t\t\t\t\t}\n\t\t\t\t\telse {\n\t\t\t\t\t\tvalue = this._t(\"A\");\n\t\t\t\t\t}\n\t\t\t\t\tbreak;\n\n\t\t\t\tcase \"h\":\n\t\t\t\t\tvalue = $utils.get12Hours(hours).toString();\n\t\t\t\t\tbreak;\n\n\t\t\t\tcase \"hh\":\n\t\t\t\t\tvalue = $utils.padString($utils.get12Hours(hours), 2, \"0\");\n\t\t\t\t\tbreak;\n\n\t\t\t\tcase \"H\":\n\t\t\t\t\tvalue = hours.toString();\n\t\t\t\t\tbreak;\n\n\t\t\t\tcase \"HH\":\n\t\t\t\t\tvalue = $utils.padString(hours, 2, \"0\");\n\t\t\t\t\tbreak;\n\n\t\t\t\tcase \"K\":\n\t\t\t\t\tvalue = $utils.get12Hours(hours, 0).toString();\n\t\t\t\t\tbreak;\n\n\t\t\t\tcase \"KK\":\n\t\t\t\t\tvalue = $utils.padString($utils.get12Hours(hours, 0), 2, \"0\");\n\t\t\t\t\tbreak;\n\n\t\t\t\tcase \"k\":\n\t\t\t\t\tvalue = (hours + 1).toString();\n\t\t\t\t\tbreak;\n\n\t\t\t\tcase \"kk\":\n\t\t\t\t\tvalue = $utils.padString(hours + 1, 2, \"0\");\n\t\t\t\t\tbreak;\n\n\t\t\t\tcase \"m\":\n\t\t\t\t\tvalue = minutes.toString();\n\t\t\t\t\tbreak;\n\n\t\t\t\tcase \"mm\":\n\t\t\t\t\tvalue = $utils.padString(minutes, 2, \"0\");\n\t\t\t\t\tbreak;\n\n\t\t\t\tcase \"s\":\n\t\t\t\t\tvalue = seconds.toString();\n\t\t\t\t\tbreak;\n\n\t\t\t\tcase \"ss\":\n\t\t\t\t\tvalue = $utils.padString(seconds, 2, \"0\");\n\t\t\t\t\tbreak;\n\n\t\t\t\tcase \"S\":\n\t\t\t\tcase \"SS\":\n\t\t\t\tcase \"SSS\":\n\t\t\t\t\tvalue = Math.round((milliseconds / 1000) * Math.pow(10, info.parts[i].length)).toString();\n\t\t\t\t\tbreak;\n\n\t\t\t\tcase \"x\":\n\t\t\t\t\tvalue = timestamp.toString();\n\t\t\t\t\tbreak;\n\n\t\t\t\tcase \"n\":\n\t\t\t\tcase \"nn\":\n\t\t\t\tcase \"nnn\":\n\t\t\t\t\tvalue = $utils.padString(milliseconds, info.parts[i].length, \"0\");\n\t\t\t\t\tbreak;\n\n\t\t\t\tcase \"z\":\n\t\t\t\t\tvalue = $utils.getTimeZone(date, false, false, this._root.utc, this._root.timezone ? this._root.timezone.name : undefined).replace(/[+-]+[0-9]+$/, \"\");\n\t\t\t\t\tbreak;\n\n\t\t\t\tcase \"zz\":\n\t\t\t\t\tvalue = $utils.getTimeZone(date, true, false, this._root.utc, this._root.timezone ? this._root.timezone.name : undefined);\n\t\t\t\t\tbreak;\n\n\t\t\t\tcase \"zzz\":\n\t\t\t\t\tvalue = $utils.getTimeZone(date, false, true, this._root.utc, this._root.timezone ? this._root.timezone.name : undefined).replace(/[+-]+[0-9]+$/, \"\");\n\t\t\t\t\tbreak;\n\n\t\t\t\tcase \"zzzz\":\n\t\t\t\t\tvalue = $utils.getTimeZone(date, true, true, this._root.utc, this._root.timezone ? this._root.timezone.name : undefined);\n\t\t\t\t\tbreak;\n\n\t\t\t\tcase \"Z\":\n\t\t\t\tcase \"ZZ\":\n\t\t\t\t\tlet timezone = this._root.utc ? \"UTC\" : this._root.timezone;\n\t\t\t\t\tif (timezone instanceof Timezone) {\n\t\t\t\t\t\ttimezone = timezone.name;\n\t\t\t\t\t}\n\t\t\t\t\tconst offset = timezone ? $utils.getTimezoneOffset(timezone) : date.getTimezoneOffset();\n\n\t\t\t\t\tlet tz = Math.abs(offset) / 60;\n\t\t\t\t\tlet tzh = Math.floor(tz);\n\t\t\t\t\tlet tzm = tz * 60 - tzh * 60;\n\n\t\t\t\t\tif (this._root.utc) {\n\t\t\t\t\t\ttzh = 0;\n\t\t\t\t\t\ttzm = 0;\n\t\t\t\t\t}\n\n\t\t\t\t\tif (info.parts[i] == \"Z\") {\n\t\t\t\t\t\tvalue = \"GMT\";\n\t\t\t\t\t\tvalue += offset > 0 ? \"-\" : \"+\";\n\t\t\t\t\t\tvalue += $utils.padString(tzh, 2) + \":\" + $utils.padString(tzm, 2);\n\t\t\t\t\t}\n\t\t\t\t\telse {\n\t\t\t\t\t\tvalue = offset > 0 ? \"-\" : \"+\";\n\t\t\t\t\t\tvalue += $utils.padString(tzh, 2) + $utils.padString(tzm, 2);\n\t\t\t\t\t}\n\t\t\t\t\tbreak;\n\n\t\t\t\tcase \"i\":\n\t\t\t\t\tvalue = date.toISOString();\n\t\t\t\t\tbreak;\n\n\t\t\t\tcase \"I\":\n\t\t\t\t\tvalue = date.toUTCString();\n\t\t\t\t\tbreak;\n\n\t\t\t}\n\t\t\tres = res.replace($type.PLACEHOLDER, value);\n\t\t}\n\n\t\treturn res;\n\t}\n\n\t/**\n\t * Parses format into structured infromation.\n\t *\n\t * @param format Format template\n\t */\n\tprotected parseFormat(format: string): DateFormatInfo {\n\n\t\t// Check cache\n\t\t// TODO: implement caching of the parsed format\n\n\t\t// Init format parse info holder\n\t\tlet info: DateFormatInfo = {\n\t\t\t\"template\": \"\",\n\t\t\t\"parts\": <any>[]\n\t\t};\n\n\t\t// Let TextFormatter split into chunks\n\t\tlet chunks = TextFormatter.chunk(format, true);\n\t\tfor (let i: number = 0; i < chunks.length; i++) {\n\t\t\tlet chunk = chunks[i];\n\n\t\t\tif (chunk.type === \"value\") {\n\n\t\t\t\t// Just \"Date\"?\n\t\t\t\tif (chunk.text.match(/^date$/i)) {\n\t\t\t\t\tlet dateFormat = this.get(\"dateFormat\", \"yyyy-MM-dd\");\n\t\t\t\t\tif (!$type.isString(dateFormat)) {\n\t\t\t\t\t\tdateFormat = \"yyyy-MM-dd\";\n\t\t\t\t\t}\n\t\t\t\t\tchunk.text = dateFormat;\n\t\t\t\t}\n\n\t\t\t\t// Find all possible parts\n\t\t\t\tlet matches = chunk.text.match(/G|yyyy|yyy|yy|y|YYYY|YYY|YY|Y|u|q|MMMMM|MMMM|MMM|MM|M|ww|w|W|dd|d|DDD|DD|D|F|g|EEEEE|EEEE|EEE|EE|E|eeeee|eeee|eee|ee|e|aaa|aa|a|hh|h|HH|H|KK|K|kk|k|mm|m|ss|s|SSS|SS|S|A|zzzz|zzz|zz|z|ZZ|Z|t|x|nnn|nn|n|i|I/g);\n\n\t\t\t\t// Found?\n\t\t\t\tif (matches) {\n\n\t\t\t\t\t// Populate template\n\t\t\t\t\tfor (let x = 0; x < matches.length; x++) {\n\t\t\t\t\t\tinfo.parts.push(matches[x]);\n\t\t\t\t\t\tchunk.text = chunk.text.replace(matches[x], $type.PLACEHOLDER);\n\t\t\t\t\t}\n\n\t\t\t\t}\n\n\t\t\t}\n\n\t\t\t// Apply to template\n\t\t\tinfo.template += chunk.text;\n\t\t}\n\n\t\t// Save cache\n\t\t// TODO\n\n\t\treturn info;\n\t}\n\n\tprotected _months(): Months[] {\n\t\treturn [\"January\", \"February\", \"March\", \"April\", \"May\", \"June\", \"July\", \"August\", \"September\", \"October\", \"November\", \"December\"];\n\t}\n\n\tprotected _getMonth(index: number): Months {\n\t\treturn this._months()[index];\n\t}\n\n\tprotected _shortMonths(): ShortMonths[] {\n\t\treturn [\"Jan\", \"Feb\", \"Mar\", \"Apr\", \"May(short)\", \"Jun\", \"Jul\", \"Aug\", \"Sep\", \"Oct\", \"Nov\", \"Dec\"];\n\t}\n\n\tprotected _getShortMonth(index: number): ShortMonths {\n\t\treturn this._shortMonths()[index];\n\t}\n\n\tprotected _weekdays(): Weekdays[] {\n\t\treturn [\"Sunday\", \"Monday\", \"Tuesday\", \"Wednesday\", \"Thursday\", \"Friday\", \"Saturday\"];\n\t}\n\n\tprotected _getWeekday(index: number): Weekdays {\n\t\treturn this._weekdays()[index];\n\t}\n\n\tprotected _shortWeekdays(): ShortWeekdays[] {\n\t\treturn [\"Sun\", \"Mon\", \"Tue\", \"Wed\", \"Thu\", \"Fri\", \"Sat\"];\n\t}\n\n\tprotected _getShortWeekday(index: number): ShortWeekdays {\n\t\treturn this._shortWeekdays()[index];\n\t}\n\n\tpublic parse(source: any, format: string): Date {\n\n\t\t// Is it already a Date\n\t\tif (source instanceof Date) {\n\t\t\treturn source;\n\t\t}\n\n\t\t// Is it a numeric timestamp\n\t\tif ($type.isNumber(source)) {\n\t\t\treturn new Date(source);\n\t\t}\n\n\t\t// Are we parsing a timestamp?\n\t\tif (format == \"x\") {\n\t\t\treturn new Date(parseInt(source));\n\t\t}\n\n\t\t// No? Let's check if it's string, and try converting to it if nec\n\t\tif (!$type.isString(source)) {\n\t\t\tsource = source.toString();\n\t\t}\n\n\t\t// Init return value\n\t\tlet res: Date;\n\n\t\t// Init RegEx for parsing\n\t\tlet reg: string = \"\";\n\n\t\t// Clean format\n\t\tformat = $utils.cleanFormat(format);\n\n\t\t// Clip format to length of the source string\n\t\tformat = format.substr(0, source.length);\n\n\t\t// Parse format\n\t\tlet info = this.parseFormat(format);\n\n\t\t// Init parsed items holder\n\t\tlet parsedIndexes = {\n\t\t\t\"year\": -1,\n\t\t\t\"year3\": -1,\n\t\t\t\"year2\": -1,\n\t\t\t\"year1\": -1,\n\t\t\t\"month\": -1,\n\t\t\t\"monthShort\": -1,\n\t\t\t\"monthLong\": -1,\n\t\t\t\"weekdayShort\": -1,\n\t\t\t\"weekdayLong\": -1,\n\t\t\t\"day\": -1,\n\t\t\t\"yearDay\": -1,\n\t\t\t\"week\": -1,\n\t\t\t\"hourBase0\": -1,\n\t\t\t\"hour12Base0\": -1,\n\t\t\t\"hourBase1\": -1,\n\t\t\t\"hour12Base1\": -1,\n\t\t\t\"minute\": -1,\n\t\t\t\"second\": -1,\n\t\t\t\"millisecond\": -1,\n\t\t\t\"millisecondDigits\": -1,\n\t\t\t\"am\": -1,\n\t\t\t\"zone\": -1,\n\t\t\t\"timestamp\": -1,\n\t\t\t\"iso\": -1\n\t\t};\n\n\t\t// Init values\n\t\tlet resValues = {\n\t\t\t\"year\": 1970,\n\t\t\t\"month\": 0,\n\t\t\t\"day\": 1,\n\t\t\t\"hour\": 0,\n\t\t\t\"minute\": 0,\n\t\t\t\"second\": 0,\n\t\t\t\"millisecond\": 0,\n\t\t\t\"timestamp\": <any>null,\n\t\t\t\"offset\": 0,\n\t\t\t\"utc\": this._root.utc\n\t\t}\n\n\t\t// Index adjuster\n\t\tlet indexAdjust: number = 0;\n\t\tlet index: number = 0;\n\n\t\t// Iterate through all of the parts\n\t\tfor (let i: number = 0; i < info.parts.length; i++) {\n\n\t\t\t// Set current match index\n\t\t\tindex = i + indexAdjust + 1;\n\n\t\t\tswitch (info.parts[i]) {\n\n\t\t\t\tcase \"yyyy\":\n\t\t\t\tcase \"YYYY\":\n\t\t\t\t\treg += \"([0-9]{4})\";\n\t\t\t\t\tparsedIndexes.year = index;\n\t\t\t\t\tbreak;\n\n\t\t\t\tcase \"yyy\":\n\t\t\t\tcase \"YYY\":\n\t\t\t\t\treg += \"([0-9]{3})\";\n\t\t\t\t\tparsedIndexes.year3 = index;\n\t\t\t\t\tbreak;\n\n\t\t\t\tcase \"yy\":\n\t\t\t\tcase \"YY\":\n\t\t\t\t\treg += \"([0-9]{2})\";\n\t\t\t\t\tparsedIndexes.year2 = index;\n\t\t\t\t\tbreak;\n\n\t\t\t\tcase \"y\":\n\t\t\t\tcase \"Y\":\n\t\t\t\t\treg += \"([0-9]{1})\";\n\t\t\t\t\tparsedIndexes.year1 = index;\n\t\t\t\t\tbreak;\n\n\t\t\t\tcase \"MMMM\":\n\t\t\t\t\treg += \"(\" + this.getStringList(this._months()).join(\"|\") + \")\";\n\t\t\t\t\tparsedIndexes.monthLong = index;\n\t\t\t\t\tbreak;\n\n\t\t\t\tcase \"MMM\":\n\t\t\t\t\treg += \"(\" + this.getStringList(this._shortMonths()).join(\"|\") + \")\";\n\t\t\t\t\tparsedIndexes.monthShort = index;\n\t\t\t\t\tbreak;\n\n\t\t\t\tcase \"MM\":\n\t\t\t\tcase \"M\":\n\t\t\t\t\treg += \"([0-9]{2}|[0-9]{1})\";\n\t\t\t\t\tparsedIndexes.month = index;\n\t\t\t\t\tbreak;\n\n\t\t\t\tcase \"ww\":\n\t\t\t\tcase \"w\":\n\t\t\t\t\treg += \"([0-9]{2}|[0-9]{1})\";\n\t\t\t\t\tparsedIndexes.week = index;\n\t\t\t\t\tbreak;\n\n\t\t\t\tcase \"dd\":\n\t\t\t\tcase \"d\":\n\t\t\t\t\treg += \"([0-9]{2}|[0-9]{1})\";\n\t\t\t\t\tparsedIndexes.day = index;\n\t\t\t\t\tbreak;\n\n\t\t\t\tcase \"DDD\":\n\t\t\t\tcase \"DD\":\n\t\t\t\tcase \"D\":\n\t\t\t\t\treg += \"([0-9]{3}|[0-9]{2}|[0-9]{1})\";\n\t\t\t\t\tparsedIndexes.yearDay = index;\n\t\t\t\t\tbreak;\n\n\n\t\t\t\tcase \"dddd\":\n\t\t\t\t\treg += \"(\" + this.getStringList(this._weekdays()).join(\"|\") + \")\";\n\t\t\t\t\tparsedIndexes.weekdayLong = index;\n\t\t\t\t\tbreak;\n\n\t\t\t\tcase \"ddd\":\n\t\t\t\t\treg += \"(\" + this.getStringList(this._shortWeekdays()).join(\"|\") + \")\";\n\t\t\t\t\tparsedIndexes.weekdayShort = index;\n\t\t\t\t\tbreak;\n\n\t\t\t\tcase \"aaa\":\n\t\t\t\tcase \"aa\":\n\t\t\t\tcase \"a\":\n\t\t\t\t\t// TODO: fix (escape regex)\n\t\t\t\t\treg += \"(\" + this.getStringList([\"AM\", \"PM\", \"A\\.M\\.\", \"P\\.M\\.\", \"A\", \"P\"]).join(\"|\") + \")\";\n\t\t\t\t\tparsedIndexes.am = index;\n\t\t\t\t\tbreak;\n\n\t\t\t\tcase \"hh\":\n\t\t\t\tcase \"h\":\n\t\t\t\t\treg += \"([0-9]{2}|[0-9]{1})\";\n\t\t\t\t\tparsedIndexes.hour12Base1 = index;\n\t\t\t\t\tbreak;\n\n\t\t\t\tcase \"HH\":\n\t\t\t\tcase \"H\":\n\t\t\t\t\treg += \"([0-9]{2}|[0-9]{1})\";\n\t\t\t\t\tparsedIndexes.hourBase0 = index;\n\t\t\t\t\tbreak;\n\n\t\t\t\tcase \"KK\":\n\t\t\t\tcase \"K\":\n\t\t\t\t\treg += \"([0-9]{2}|[0-9]{1})\";\n\t\t\t\t\tparsedIndexes.hour12Base0 = index;\n\t\t\t\t\tbreak;\n\n\t\t\t\tcase \"kk\":\n\t\t\t\tcase \"k\":\n\t\t\t\t\treg += \"([0-9]{2}|[0-9]{1})\";\n\t\t\t\t\tparsedIndexes.hourBase1 = index;\n\t\t\t\t\tbreak;\n\n\t\t\t\tcase \"mm\":\n\t\t\t\tcase \"m\":\n\t\t\t\t\treg += \"([0-9]{2}|[0-9]{1})\";\n\t\t\t\t\tparsedIndexes.minute = index;\n\t\t\t\t\tbreak;\n\n\t\t\t\tcase \"ss\":\n\t\t\t\tcase \"s\":\n\t\t\t\t\treg += \"([0-9]{2}|[0-9]{1})\";\n\t\t\t\t\tparsedIndexes.second = index;\n\t\t\t\t\tbreak;\n\n\t\t\t\tcase \"SSS\":\n\t\t\t\tcase \"SS\":\n\t\t\t\tcase \"S\":\n\t\t\t\t\treg += \"([0-9]{3}|[0-9]{2}|[0-9]{1})\";\n\t\t\t\t\tparsedIndexes.millisecond = index;\n\t\t\t\t\tparsedIndexes.millisecondDigits = info.parts[i].length;\n\t\t\t\t\tbreak;\n\n\t\t\t\tcase \"nnn\":\n\t\t\t\tcase \"nn\":\n\t\t\t\tcase \"n\":\n\t\t\t\t\treg += \"([0-9]{3}|[0-9]{2}|[0-9]{1})\";\n\t\t\t\t\tparsedIndexes.millisecond = index;\n\t\t\t\t\tbreak;\n\n\t\t\t\tcase \"x\":\n\t\t\t\t\treg += \"([0-9]{1,})\";\n\t\t\t\t\tparsedIndexes.timestamp = index;\n\t\t\t\t\tbreak;\n\n\t\t\t\tcase \"Z\":\n\t\t\t\t\treg += \"GMT([-+]+[0-9]{2}:[0-9]{2})\";\n\t\t\t\t\tparsedIndexes.zone = index;\n\t\t\t\t\tbreak;\n\n\t\t\t\tcase \"ZZ\":\n\t\t\t\t\treg += \"([\\\\-+]+[0-9]{2}[0-9]{2})\";\n\t\t\t\t\tparsedIndexes.zone = index;\n\t\t\t\t\tbreak;\n\n\t\t\t\tcase \"i\":\n\t\t\t\t\treg += \"([0-9]{4})-?([0-9]{2})-?([0-9]{2})T?([0-9]{2}):?([0-9]{2}):?([0-9]{2})\\\\.?([0-9]{0,3})([zZ]|[+\\\\-][0-9]{2}:?[0-9]{2}|$)\";\n\t\t\t\t\tparsedIndexes.iso = index;\n\t\t\t\t\tindexAdjust += 7;\n\t\t\t\t\tbreak;\n\n\t\t\t\tcase \"G\":\n\t\t\t\tcase \"YYYY\":\n\t\t\t\tcase \"YYY\":\n\t\t\t\tcase \"YY\":\n\t\t\t\tcase \"Y\":\n\t\t\t\tcase \"MMMMM\":\n\t\t\t\tcase \"W\":\n\t\t\t\tcase \"EEEEE\":\n\t\t\t\tcase \"EEEE\":\n\t\t\t\tcase \"EEE\":\n\t\t\t\tcase \"EE\":\n\t\t\t\tcase \"E\":\n\t\t\t\tcase \"eeeee\":\n\t\t\t\tcase \"eeee\":\n\t\t\t\tcase \"eee\":\n\t\t\t\tcase \"ee\":\n\t\t\t\tcase \"e\":\n\t\t\t\tcase \"zzzz\":\n\t\t\t\tcase \"zzz\":\n\t\t\t\tcase \"zz\":\n\t\t\t\tcase \"z\":\n\t\t\t\tcase \"t\":\n\t\t\t\t\t// Ignore\n\t\t\t\t\tindexAdjust--;\n\t\t\t\t\tbreak;\n\t\t\t}\n\n\t\t\treg += \"[^0-9]*\";\n\t\t}\n\n\t\t// Try matching\n\t\tlet regex = new RegExp(reg);\n\t\tlet matches: RegExpMatchArray = source.match(regex);\n\n\t\tif (matches) {\n\t\t\t// Populate the date object\n\n\t\t\t// Full year\n\t\t\tif (parsedIndexes.year > -1) {\n\t\t\t\tresValues.year = parseInt(matches[parsedIndexes.year]);\n\t\t\t}\n\n\t\t\t// 3-digit year\n\t\t\tif (parsedIndexes.year3 > -1) {\n\t\t\t\tlet val = parseInt(matches[parsedIndexes.year3]);\n\t\t\t\tval += 1000;\n\t\t\t\tresValues.year = val;\n\t\t\t}\n\n\t\t\t// 2-digit year\n\t\t\tif (parsedIndexes.year2 > -1) {\n\t\t\t\tlet val = parseInt(matches[parsedIndexes.year2]);\n\t\t\t\tif (val > 50) {\n\t\t\t\t\tval += 1000;\n\t\t\t\t}\n\t\t\t\telse {\n\t\t\t\t\tval += 2000;\n\t\t\t\t}\n\t\t\t\tresValues.year = val;\n\t\t\t}\n\n\t\t\t// 1-digit year\n\t\t\tif (parsedIndexes.year1 > -1) {\n\t\t\t\tlet val = parseInt(matches[parsedIndexes.year1]);\n\t\t\t\tval = Math.floor((new Date().getFullYear()) / 10) * 10 + val;\n\t\t\t\tresValues.year = val;\n\t\t\t}\n\n\t\t\t// Full month\n\t\t\tif (parsedIndexes.monthLong > -1) {\n\t\t\t\tresValues.month = this.resolveMonth(<any>matches[parsedIndexes.monthLong]);\n\t\t\t}\n\n\t\t\t// Short month\n\t\t\tif (parsedIndexes.monthShort > -1) {\n\t\t\t\tresValues.month = this.resolveShortMonth(<any>matches[parsedIndexes.monthShort]);\n\t\t\t}\n\n\t\t\t// Numeric month\n\t\t\tif (parsedIndexes.month > -1) {\n\t\t\t\tresValues.month = parseInt(matches[parsedIndexes.month]) - 1;\n\t\t\t}\n\n\t\t\t// Weekday\n\t\t\t// @todo\n\n\t\t\t// Week\n\t\t\tif ((parsedIndexes.week > -1) && (parsedIndexes.day === -1)) {\n\t\t\t\t// We parse weeks ONLY if day is not explicitly set\n\t\t\t\t// TODO: this needs work\n\t\t\t\t// (but maybe later - I can hardly imagine anyone passing their dates in weeks)\n\t\t\t\tresValues.month = 0;\n\t\t\t\tresValues.day = $utils.getDayFromWeek(\n\t\t\t\t\tparseInt(matches[parsedIndexes.week]),\n\t\t\t\t\tresValues.year,\n\t\t\t\t\t1,\n\t\t\t\t\tthis._root.utc\n\t\t\t\t);\n\t\t\t}\n\n\t\t\t// Day\n\t\t\tif (parsedIndexes.day > -1) {\n\t\t\t\tresValues.day = parseInt(matches[parsedIndexes.day]);\n\t\t\t}\n\n\t\t\t// Year day\n\t\t\tif (parsedIndexes.yearDay > -1) {\n\t\t\t\tresValues.month = 0;\n\t\t\t\tresValues.day = parseInt(matches[parsedIndexes.yearDay]);\n\t\t\t}\n\n\t\t\t// 24 Hour (0-23)\n\t\t\tif (parsedIndexes.hourBase0 > -1) {\n\t\t\t\tresValues.hour = parseInt(matches[parsedIndexes.hourBase0]);\n\t\t\t}\n\n\t\t\t// 24 Hour (1-24)\n\t\t\tif (parsedIndexes.hourBase1 > -1) {\n\t\t\t\tresValues.hour = parseInt(matches[parsedIndexes.hourBase1]) - 1;\n\t\t\t}\n\n\t\t\t// 12 Hour (0-11)\n\t\t\tif (parsedIndexes.hour12Base0 > -1) {\n\t\t\t\tlet val = parseInt(matches[parsedIndexes.hour12Base0]);\n\t\t\t\tif (val == 11) {\n\t\t\t\t\tval = 0;\n\t\t\t\t}\n\t\t\t\tif ((parsedIndexes.am > -1) && !this.isAm(matches[parsedIndexes.am])) {\n\t\t\t\t\tval += 12;\n\t\t\t\t}\n\t\t\t\tresValues.hour = val;\n\t\t\t}\n\n\t\t\t// 12 Hour (1-12)\n\t\t\tif (parsedIndexes.hour12Base1 > -1) {\n\t\t\t\tlet val = parseInt(matches[parsedIndexes.hour12Base1]);\n\t\t\t\tif (val == 12) {\n\t\t\t\t\tval = 0;\n\t\t\t\t}\n\t\t\t\tif ((parsedIndexes.am > -1) && !this.isAm(matches[parsedIndexes.am])) {\n\t\t\t\t\tval += 12;\n\t\t\t\t}\n\t\t\t\tresValues.hour = val;\n\t\t\t}\n\n\t\t\t// Minute\n\t\t\tif (parsedIndexes.minute > -1) {\n\t\t\t\tresValues.minute = parseInt(matches[parsedIndexes.minute]);\n\t\t\t}\n\n\t\t\t// Second\n\t\t\tif (parsedIndexes.second > -1) {\n\t\t\t\tresValues.second = parseInt(matches[parsedIndexes.second]);\n\t\t\t}\n\n\t\t\t// Millisecond\n\t\t\tif (parsedIndexes.millisecond > -1) {\n\t\t\t\tlet val = parseInt(matches[parsedIndexes.millisecond]);\n\t\t\t\tif (parsedIndexes.millisecondDigits == 2) {\n\t\t\t\t\tval *= 10;\n\t\t\t\t}\n\t\t\t\telse if (parsedIndexes.millisecondDigits == 1) {\n\t\t\t\t\tval *= 100;\n\t\t\t\t}\n\t\t\t\tresValues.millisecond = val;\n\t\t\t}\n\n\t\t\t// Timestamp\n\t\t\tif (parsedIndexes.timestamp > -1) {\n\t\t\t\tresValues.timestamp = parseInt(matches[parsedIndexes.timestamp]);\n\n\t\t\t\tconst ts = new Date(resValues.timestamp);\n\t\t\t\tresValues.year = ts.getUTCFullYear();\n\t\t\t\tresValues.month = ts.getUTCMonth();\n\t\t\t\tresValues.day = ts.getUTCDate();\n\t\t\t\tresValues.hour = ts.getUTCHours();\n\t\t\t\tresValues.minute = ts.getUTCMinutes();\n\t\t\t\tresValues.second = ts.getUTCSeconds();\n\t\t\t\tresValues.millisecond = ts.getUTCMilliseconds();\n\t\t\t}\n\n\t\t\t// Adjust time zone\n\t\t\tif (parsedIndexes.zone > -1) {\n\t\t\t\tresValues.offset = this.resolveTimezoneOffset(new Date(resValues.year, resValues.month, resValues.day), matches[parsedIndexes.zone]);\n\t\t\t}\n\n\t\t\t// ISO\n\t\t\tif (parsedIndexes.iso > -1) {\n\n\t\t\t\tresValues.year = $type.toNumber(matches[parsedIndexes.iso + 0]);\n\t\t\t\tresValues.month = $type.toNumber(matches[parsedIndexes.iso + 1]) - 1;\n\t\t\t\tresValues.day = $type.toNumber(matches[parsedIndexes.iso + 2]);\n\t\t\t\tresValues.hour = $type.toNumber(matches[parsedIndexes.iso + 3]);\n\t\t\t\tresValues.minute = $type.toNumber(matches[parsedIndexes.iso + 4]);\n\t\t\t\tresValues.second = $type.toNumber(matches[parsedIndexes.iso + 5]);\n\t\t\t\tresValues.millisecond = $type.toNumber(matches[parsedIndexes.iso + 6]);\n\n\t\t\t\tif (matches[parsedIndexes.iso + 7] == \"Z\" || matches[parsedIndexes.iso + 7] == \"z\") {\n\t\t\t\t\tresValues.utc = true;\n\t\t\t\t}\n\t\t\t\telse if (matches[parsedIndexes.iso + 7] != \"\") {\n\t\t\t\t\tresValues.offset = this.resolveTimezoneOffset(new Date(resValues.year, resValues.month, resValues.day), matches[parsedIndexes.iso + 7]);\n\t\t\t\t}\n\t\t\t}\n\n\t\t\t// Create Date object\n\t\t\tif (resValues.utc) {\n\t\t\t\tres = new Date(Date.UTC(\n\t\t\t\t\tresValues.year,\n\t\t\t\t\tresValues.month,\n\t\t\t\t\tresValues.day,\n\t\t\t\t\tresValues.hour,\n\t\t\t\t\tresValues.minute,\n\t\t\t\t\tresValues.second,\n\t\t\t\t\tresValues.millisecond\n\t\t\t\t));\n\t\t\t}\n\t\t\telse {\n\t\t\t\tres = new Date(\n\t\t\t\t\tresValues.year,\n\t\t\t\t\tresValues.month,\n\t\t\t\t\tresValues.day,\n\t\t\t\t\tresValues.hour,\n\t\t\t\t\tresValues.minute + resValues.offset,\n\t\t\t\t\tresValues.second,\n\t\t\t\t\tresValues.millisecond\n\t\t\t\t);\n\t\t\t}\n\n\t\t}\n\t\telse {\n\t\t\t// Didn't match anything\n\t\t\t// Let's try dropping it into Date constructor and hope for the best\n\t\t\tres = new Date(source);\n\t\t}\n\n\t\treturn res;\n\t}\n\n\tprotected resolveTimezoneOffset(date: Date, zone: string): number {\n\t\tlet value = zone.match(/([+\\-]?)([0-9]{2}):?([0-9]{2})/);\n\t\tif (value) {\n\t\t\tlet match = zone.match(/([+\\-]?)([0-9]{2}):?([0-9]{2})/)!;\n\t\t\tlet dir = match[1];\n\t\t\tlet hour = match[2];\n\t\t\tlet minute = match[3];\n\t\t\tlet offset = parseInt(hour) * 60 + parseInt(minute);\n\n\t\t\t// Adjust offset\n\t\t\t// Making it negative does not seem to make sense, but it's right\n\t\t\t// because of how JavaScript calculates GMT offsets\n\t\t\tif (dir == \"+\") {\n\t\t\t\toffset *= -1;\n\t\t\t}\n\n\t\t\t// Check the difference in offset\n\t\t\tlet originalOffset = (date || new Date()).getTimezoneOffset();\n\t\t\tlet diff = offset - originalOffset;\n\t\t\treturn diff;\n\t\t}\n\t\treturn 0;\n\t}\n\n\t/**\n\t * Resolves month name (i.e. \"December\") into a month number (11).\n\t *\n\t * @param value  Month name\n\t * @return Month number\n\t */\n\tprotected resolveMonth(value: Months): number {\n\n\t\t// Let's try English first\n\t\tlet month: number = this._months().indexOf(value);\n\t\tif (month > -1) {\n\t\t\treturn month;\n\t\t}\n\n\t\t// Try the translation\n\t\tif (!this._root.language.isDefault()) {\n\t\t\tmonth = this._root.language.translateAll(this._months()).indexOf(value);\n\t\t\tif (month > -1) {\n\t\t\t\treturn month\n\t\t\t}\n\t\t}\n\n\t\treturn 0;\n\t}\n\n\t/**\n\t * Resolves short month name (i.e. \"Dec\") into a month number.\n\t *\n\t * @param value  Short month name\n\t * @return Month number\n\t */\n\tprotected resolveShortMonth(value: ShortMonths): number {\n\n\t\t// Let's try English first\n\t\tlet month: number = this._shortMonths().indexOf(value);\n\t\tif (month > -1) {\n\t\t\treturn month;\n\t\t}\n\n\t\t// Maybe long month (workaround for May)\n\t\tmonth = this._months().indexOf(<any>value);\n\t\tif (month > -1) {\n\t\t\treturn month;\n\t\t}\n\n\t\t// Try the translation\n\t\tif (this._root.language && !this._root.language.isDefault()) {\n\t\t\tmonth = this._root.language.translateAll(this._shortMonths()).indexOf(value);\n\t\t\tif (month > -1) {\n\t\t\t\treturn month\n\t\t\t}\n\t\t}\n\n\t\treturn 0;\n\t}\n\n\t/**\n\t * Checks if passed in string represents AM/PM notation in many of its\n\t * versions.\n\t *\n\t * @param value  Source string\n\t * @return Is it AM/PM?\n\t */\n\tprotected isAm(value: string): boolean {\n\t\tlet list = this.getStringList([\"AM\", \"A.M.\", \"A\"]);\n\t\treturn list.indexOf(value.toUpperCase()) > -1;\n\t}\n\n\t/**\n\t * Translates list of strings.\n\t *\n\t * @param list  Source strings\n\t * @return Translated strings\n\t */\n\tprotected getStringList(list: Array<keyof ILocaleSettings>): Array<string> {\n\t\tlet res: string[] = [];\n\t\tfor (let i: number = 0; i < list.length; i++) {\n\t\t\t// translate?\n\t\t\tif (this._root.language) {\n\t\t\t\tres.push($utils.escapeForRgex(this._t(list[i])));\n\t\t\t}\n\t\t\telse {\n\t\t\t\tres.push($utils.escapeForRgex(list[i]));\n\t\t\t}\n\t\t}\n\t\treturn res;\n\t}\n\n}\n","function parseDate(timezone, date) {\r\n    let year = 0;\r\n    let month = 0;\r\n    let day = 1;\r\n    let hour = 0;\r\n    let minute = 0;\r\n    let second = 0;\r\n    let millisecond = 0;\r\n    let weekday = 0;\r\n    timezone.formatToParts(date).forEach((x) => {\r\n        switch (x.type) {\r\n            case \"year\":\r\n                year = +x.value;\r\n                break;\r\n            case \"month\":\r\n                month = (+x.value) - 1;\r\n                break;\r\n            case \"day\":\r\n                day = +x.value;\r\n                break;\r\n            case \"hour\":\r\n                hour = +x.value;\r\n                break;\r\n            case \"minute\":\r\n                minute = +x.value;\r\n                break;\r\n            case \"second\":\r\n                second = +x.value;\r\n                break;\r\n            case \"fractionalSecond\":\r\n                millisecond = +x.value;\r\n                break;\r\n            case \"weekday\":\r\n                switch (x.value) {\r\n                    case \"Sun\":\r\n                        weekday = 0;\r\n                        break;\r\n                    case \"Mon\":\r\n                        weekday = 1;\r\n                        break;\r\n                    case \"Tue\":\r\n                        weekday = 2;\r\n                        break;\r\n                    case \"Wed\":\r\n                        weekday = 3;\r\n                        break;\r\n                    case \"Thu\":\r\n                        weekday = 4;\r\n                        break;\r\n                    case \"Fri\":\r\n                        weekday = 5;\r\n                        break;\r\n                    case \"Sat\":\r\n                        weekday = 6;\r\n                        break;\r\n                }\r\n        }\r\n    });\r\n    if (hour === 24) {\r\n        hour = 0;\r\n    }\r\n    return { year, month, day, hour, minute, second, millisecond, weekday };\r\n}\r\nfunction toUTCDate(timezone, date) {\r\n    const { year, month, day, hour, minute, second, millisecond } = parseDate(timezone, date);\r\n    return Date.UTC(year, month, day, hour, minute, second, millisecond);\r\n}\r\nexport class Timezone {\r\n    constructor(timezone, isReal) {\r\n        Object.defineProperty(this, \"_utc\", {\r\n            enumerable: true,\r\n            configurable: true,\r\n            writable: true,\r\n            value: void 0\r\n        });\r\n        Object.defineProperty(this, \"_dtf\", {\r\n            enumerable: true,\r\n            configurable: true,\r\n            writable: true,\r\n            value: void 0\r\n        });\r\n        Object.defineProperty(this, \"name\", {\r\n            enumerable: true,\r\n            configurable: true,\r\n            writable: true,\r\n            value: void 0\r\n        });\r\n        if (!isReal) {\r\n            throw new Error(\"You cannot use `new Class()`, instead use `Class.new()`\");\r\n        }\r\n        this.name = timezone;\r\n        this._utc = new Intl.DateTimeFormat(\"UTC\", {\r\n            hour12: false,\r\n            timeZone: \"UTC\",\r\n            year: \"numeric\",\r\n            month: \"2-digit\",\r\n            day: \"2-digit\",\r\n            hour: \"2-digit\",\r\n            minute: \"2-digit\",\r\n            second: \"2-digit\",\r\n            weekday: \"short\",\r\n            fractionalSecondDigits: 3,\r\n        });\r\n        this._dtf = new Intl.DateTimeFormat(\"UTC\", {\r\n            hour12: false,\r\n            timeZone: timezone,\r\n            year: \"numeric\",\r\n            month: \"2-digit\",\r\n            day: \"2-digit\",\r\n            hour: \"2-digit\",\r\n            minute: \"2-digit\",\r\n            second: \"2-digit\",\r\n            weekday: \"short\",\r\n            fractionalSecondDigits: 3,\r\n        });\r\n    }\r\n    /**\r\n     * Use this method to create an instance of this class.\r\n     *\r\n     * @see {@link https://www.amcharts.com/docs/v5/getting-started/#New_element_syntax} for more info\r\n     * @param   timezone  IANA timezone\r\n     * @return            Instantiated object\r\n     */\r\n    static new(timezone) {\r\n        return (new this(timezone, true));\r\n    }\r\n    convertLocal(date) {\r\n        const offset = this.offsetUTC(date);\r\n        const userOffset = date.getTimezoneOffset();\r\n        const output = new Date(date);\r\n        output.setUTCMinutes(output.getUTCMinutes() - (offset - userOffset));\r\n        const newUserOffset = output.getTimezoneOffset();\r\n        if (userOffset != newUserOffset) {\r\n            output.setUTCMinutes(output.getUTCMinutes() + newUserOffset - userOffset);\r\n        }\r\n        return output;\r\n    }\r\n    offsetUTC(date) {\r\n        const utc = toUTCDate(this._utc, date);\r\n        const dtf = toUTCDate(this._dtf, date);\r\n        return (utc - dtf) / 60000;\r\n    }\r\n    parseDate(date) {\r\n        return parseDate(this._dtf, date);\r\n    }\r\n}\r\n//# sourceMappingURL=Timezone.js.map","interface ParsedDate {\n\tyear: number,\n\tmonth: number,\n\tday: number,\n\thour: number,\n\tminute: number,\n\tsecond: number,\n\tmillisecond: number,\n\tweekday: number\n}\n\nfunction parseDate(timezone: Intl.DateTimeFormat, date: Date): ParsedDate {\n\tlet year = 0;\n\tlet month = 0;\n\tlet day = 1;\n\tlet hour = 0;\n\tlet minute = 0;\n\tlet second = 0;\n\tlet millisecond = 0;\n\tlet weekday = 0;\n\n\ttimezone.formatToParts(date).forEach((x) => {\n\t\tswitch (x.type) {\n\t\t\tcase \"year\":\n\t\t\t\tyear = +x.value;\n\t\t\t\tbreak;\n\t\t\tcase \"month\":\n\t\t\t\tmonth = (+x.value) - 1;\n\t\t\t\tbreak;\n\t\t\tcase \"day\":\n\t\t\t\tday = +x.value;\n\t\t\t\tbreak;\n\t\t\tcase \"hour\":\n\t\t\t\thour = +x.value;\n\t\t\t\tbreak;\n\t\t\tcase \"minute\":\n\t\t\t\tminute = +x.value;\n\t\t\t\tbreak;\n\t\t\tcase \"second\":\n\t\t\t\tsecond = +x.value;\n\t\t\t\tbreak;\n\t\t\tcase \"fractionalSecond\" as any:\n\t\t\t\tmillisecond = +x.value;\n\t\t\t\tbreak;\n\t\t\tcase \"weekday\":\n\t\t\t\tswitch (x.value) {\n\t\t\t\t\tcase \"Sun\":\n\t\t\t\t\t\tweekday = 0;\n\t\t\t\t\t\tbreak;\n\t\t\t\t\tcase \"Mon\":\n\t\t\t\t\t\tweekday = 1;\n\t\t\t\t\t\tbreak;\n\t\t\t\t\tcase \"Tue\":\n\t\t\t\t\t\tweekday = 2;\n\t\t\t\t\t\tbreak;\n\t\t\t\t\tcase \"Wed\":\n\t\t\t\t\t\tweekday = 3;\n\t\t\t\t\t\tbreak;\n\t\t\t\t\tcase \"Thu\":\n\t\t\t\t\t\tweekday = 4;\n\t\t\t\t\t\tbreak;\n\t\t\t\t\tcase \"Fri\":\n\t\t\t\t\t\tweekday = 5;\n\t\t\t\t\t\tbreak;\n\t\t\t\t\tcase \"Sat\":\n\t\t\t\t\t\tweekday = 6;\n\t\t\t\t\t\tbreak;\n\t\t\t\t}\n\t\t}\n\t});\n\n\tif (hour === 24) {\n\t\thour = 0;\n\t}\n\n\treturn { year, month, day, hour, minute, second, millisecond, weekday };\n}\n\n\nfunction toUTCDate(timezone: Intl.DateTimeFormat, date: Date): number {\n\tconst { year, month, day, hour, minute, second, millisecond } = parseDate(timezone, date);\n\treturn Date.UTC(year, month, day, hour, minute, second, millisecond);\n}\n\n\nexport class Timezone {\n\tprivate _utc: Intl.DateTimeFormat;\n\tprivate _dtf: Intl.DateTimeFormat;\n\n\tpublic readonly name: string | undefined;\n\n\t/**\n\t * Use this method to create an instance of this class.\n\t *\n\t * @see {@link https://www.amcharts.com/docs/v5/getting-started/#New_element_syntax} for more info\n\t * @param   timezone  IANA timezone\n\t * @return            Instantiated object\n\t */\n\tstatic new<C extends typeof Timezone, T extends InstanceType<C>>(this: C, timezone: string | undefined): T {\n\t\treturn (new this(timezone, true)) as T;\n\t}\n\n\tconstructor(timezone: string | undefined, isReal: boolean) {\n\t\tif (!isReal) {\n\t\t\tthrow new Error(\"You cannot use `new Class()`, instead use `Class.new()`\");\n\t\t}\n\n\t\tthis.name = timezone;\n\n\t\tthis._utc = new Intl.DateTimeFormat(\"UTC\", {\n\t\t\thour12: false,\n\t\t\ttimeZone: \"UTC\",\n\t\t\tyear: \"numeric\",\n\t\t\tmonth: \"2-digit\",\n\t\t\tday: \"2-digit\",\n\t\t\thour: \"2-digit\",\n\t\t\tminute: \"2-digit\",\n\t\t\tsecond: \"2-digit\",\n\t\t\tweekday: \"short\",\n\t\t\tfractionalSecondDigits: 3,\n\t\t} as any);\n\n\t\tthis._dtf = new Intl.DateTimeFormat(\"UTC\", {\n\t\t\thour12: false,\n\t\t\ttimeZone: timezone,\n\t\t\tyear: \"numeric\",\n\t\t\tmonth: \"2-digit\",\n\t\t\tday: \"2-digit\",\n\t\t\thour: \"2-digit\",\n\t\t\tminute: \"2-digit\",\n\t\t\tsecond: \"2-digit\",\n\t\t\tweekday: \"short\",\n\t\t\tfractionalSecondDigits: 3,\n\t\t} as any);\n\t}\n\n\tconvertLocal(date: Date): Date {\n\t\tconst offset = this.offsetUTC(date);\n\t\tconst userOffset = date.getTimezoneOffset();\n\t\tconst output = new Date(date);\n\t\toutput.setUTCMinutes(output.getUTCMinutes() - (offset - userOffset));\n\n\t\tconst newUserOffset = output.getTimezoneOffset();\n\n\t\tif (userOffset != newUserOffset) {\n\t\t\toutput.setUTCMinutes(output.getUTCMinutes() + newUserOffset - userOffset)\n\t\t}\n\n\t\treturn output;\n\t}\n\n\toffsetUTC(date: Date): number {\n\t\tconst utc = toUTCDate(this._utc, date);\n\t\tconst dtf = toUTCDate(this._dtf, date);\n\t\treturn (utc - dtf) / 60000;\n\t}\n\n\tparseDate(date: Date): ParsedDate {\n\t\treturn parseDate(this._dtf, date)\n\t}\n}\n","import { Entity } from \"./Entity\";\r\nimport { TextFormatter } from \"./TextFormatter\";\r\nimport * as $object from \"./Object\";\r\nimport * as $utils from \"./Utils\";\r\nimport * as $type from \"./Type\";\r\n/**\r\n * A class used to format numberic values as time duration.\r\n *\r\n * @see {@link https://www.amcharts.com/docs/v5/concepts/formatters/formatting-durations/} for more info\r\n */\r\nexport class DurationFormatter extends Entity {\r\n    constructor() {\r\n        super(...arguments);\r\n        /**\r\n         * Collection of aliases for units.\r\n         */\r\n        Object.defineProperty(this, \"_unitAliases\", {\r\n            enumerable: true,\r\n            configurable: true,\r\n            writable: true,\r\n            value: {\r\n                \"Y\": \"y\",\r\n                \"D\": \"d\",\r\n                \"H\": \"h\",\r\n                \"K\": \"h\",\r\n                \"k\": \"h\",\r\n                \"n\": \"S\"\r\n            }\r\n        });\r\n    }\r\n    _setDefaults() {\r\n        const dmillisecond = \"_duration_millisecond\";\r\n        const dsecond = \"_duration_second\";\r\n        const dminute = \"_duration_minute\";\r\n        const dhour = \"_duration_hour\";\r\n        const dday = \"_duration_day\";\r\n        const dweek = \"_duration_week\";\r\n        const dmonth = \"_duration_month\";\r\n        const dyear = \"_duration_year\";\r\n        const asecond = \"_second\";\r\n        const aminute = \"_minute\";\r\n        const ahour = \"_hour\";\r\n        const aday = \"_day\";\r\n        const aweek = \"_week\";\r\n        const amonth = \"_week\";\r\n        const ayear = \"_year\";\r\n        // Defaults\r\n        this._setDefault(\"negativeBase\", 0);\r\n        this._setDefault(\"baseUnit\", \"second\");\r\n        this._setDefault(\"durationFormats\", {\r\n            \"millisecond\": {\r\n                \"millisecond\": this._t(dmillisecond),\r\n                \"second\": this._t((dmillisecond + asecond)),\r\n                \"minute\": this._t((dmillisecond + aminute)),\r\n                \"hour\": this._t((dmillisecond + ahour)),\r\n                \"day\": this._t((dmillisecond + aday)),\r\n                \"week\": this._t((dmillisecond + aweek)),\r\n                \"month\": this._t((dmillisecond + amonth)),\r\n                \"year\": this._t((dmillisecond + ayear))\r\n            },\r\n            \"second\": {\r\n                \"second\": this._t((dsecond)),\r\n                \"minute\": this._t((dsecond + aminute)),\r\n                \"hour\": this._t((dsecond + ahour)),\r\n                \"day\": this._t((dsecond + aday)),\r\n                \"week\": this._t((dsecond + aweek)),\r\n                \"month\": this._t((dsecond + amonth)),\r\n                \"year\": this._t((dsecond + ayear))\r\n            },\r\n            \"minute\": {\r\n                \"minute\": this._t((dminute)),\r\n                \"hour\": this._t((dminute + ahour)),\r\n                \"day\": this._t((dminute + aday)),\r\n                \"week\": this._t((dminute + aweek)),\r\n                \"month\": this._t((dminute + amonth)),\r\n                \"year\": this._t((dminute + ayear))\r\n            },\r\n            \"hour\": {\r\n                \"hour\": this._t((dhour)),\r\n                \"day\": this._t((dhour + aday)),\r\n                \"week\": this._t((dhour + aweek)),\r\n                \"month\": this._t((dhour + amonth)),\r\n                \"year\": this._t((dhour + ayear))\r\n            },\r\n            \"day\": {\r\n                \"day\": this._t((dday)),\r\n                \"week\": this._t((dday + aweek)),\r\n                \"month\": this._t((dday + amonth)),\r\n                \"year\": this._t((dday + ayear))\r\n            },\r\n            \"week\": {\r\n                \"week\": this._t((dweek)),\r\n                \"month\": this._t((dweek + amonth)),\r\n                \"year\": this._t((dweek + ayear))\r\n            },\r\n            \"month\": {\r\n                \"month\": this._t((dmonth)),\r\n                \"year\": this._t((dmonth + ayear))\r\n            },\r\n            \"year\": {\r\n                \"year\": this._t(dyear)\r\n            }\r\n        });\r\n        super._setDefaults();\r\n    }\r\n    _beforeChanged() {\r\n        super._beforeChanged();\r\n    }\r\n    /**\r\n     * Formats the number as duration.\r\n     *\r\n     * For example `1000` (base unit seconds) would be converted to `16:40` as in\r\n     * 16 minutes and 40 seconds.\r\n     *\r\n     * @param value   Value to format\r\n     * @param format  Format to apply\r\n     * @param base    Override base unit\r\n     * @return Formatted number\r\n     */\r\n    format(value, format, base) {\r\n        // no base unit?\r\n        let baseUnit = base || this.get(\"baseUnit\");\r\n        // no format passed in or empty\r\n        if (typeof format === \"undefined\" || format === \"\") {\r\n            if (this.get(\"durationFormat\") != null) {\r\n                format = this.get(\"durationFormat\");\r\n            }\r\n            else {\r\n                format = this.getFormat($type.toNumber(value), undefined, baseUnit);\r\n            }\r\n        }\r\n        // Clean format\r\n        format = $utils.cleanFormat(format);\r\n        // get format info (it will also deal with parser caching)\r\n        let info = this.parseFormat(format, baseUnit);\r\n        // cast to number just in case\r\n        // TODO: maybe use better casting\r\n        let source = Number(value);\r\n        // format and replace the number\r\n        let details;\r\n        if (source > this.get(\"negativeBase\")) {\r\n            details = info.positive;\r\n        }\r\n        else if (source < this.get(\"negativeBase\")) {\r\n            details = info.negative;\r\n        }\r\n        else {\r\n            details = info.zero;\r\n        }\r\n        // Format\r\n        let formatted = this.applyFormat(source, details);\r\n        // Apply color?\r\n        if (details.color !== \"\") {\r\n            formatted = \"[\" + details.color + \"]\" + formatted + \"[/]\";\r\n        }\r\n        return formatted;\r\n    }\r\n    /**\r\n     * Parses supplied format into structured object which can be used to format\r\n     * the number.\r\n     *\r\n     * @param format  Format string, i.e. \"#,###.00\"\r\n     * @param base    Override base unit\r\n     * @return Parsed information\r\n     */\r\n    parseFormat(format, base) {\r\n        // Check cache\r\n        // TODO\r\n        // let cached = this.getCache(format);\r\n        // if (cached != null) {\r\n        // \treturn cached;\r\n        // }\r\n        // no base unit?\r\n        let baseUnit = base || this.get(\"baseUnit\");\r\n        // Initialize duration parsing info\r\n        let info = {\r\n            \"positive\": {\r\n                \"color\": \"\",\r\n                \"template\": \"\",\r\n                \"parts\": [],\r\n                \"source\": \"\",\r\n                \"baseUnit\": baseUnit,\r\n                \"parsed\": false,\r\n                \"absolute\": false\r\n            },\r\n            \"negative\": {\r\n                \"color\": \"\",\r\n                \"template\": \"\",\r\n                \"parts\": [],\r\n                \"source\": \"\",\r\n                \"baseUnit\": baseUnit,\r\n                \"parsed\": false,\r\n                \"absolute\": false\r\n            },\r\n            \"zero\": {\r\n                \"color\": \"\",\r\n                \"template\": \"\",\r\n                \"parts\": [],\r\n                \"source\": \"\",\r\n                \"baseUnit\": baseUnit,\r\n                \"parsed\": false,\r\n                \"absolute\": false\r\n            }\r\n        };\r\n        // Escape double vertical bars (that mean display one vertical bar)\r\n        format = format.replace(\"||\", $type.PLACEHOLDER2);\r\n        // Split it up and deal with different formats\r\n        let parts = format.split(\"|\");\r\n        info.positive.source = parts[0];\r\n        if (typeof parts[2] === \"undefined\") {\r\n            info.zero = info.positive;\r\n        }\r\n        else {\r\n            info.zero.source = parts[2];\r\n        }\r\n        if (typeof parts[1] === \"undefined\") {\r\n            info.negative = info.positive;\r\n        }\r\n        else {\r\n            info.negative.source = parts[1];\r\n        }\r\n        // Parse each\r\n        $object.each(info, (_part, item) => {\r\n            // Already parsed\r\n            if (item.parsed) {\r\n                return;\r\n            }\r\n            // Check cached\r\n            // TODO\r\n            // if (typeof this.getCache(item.source) !== \"undefined\") {\r\n            // \tinfo[part] = this.getCache(item.source);\r\n            // \treturn;\r\n            // }\r\n            // Begin parsing\r\n            let partFormat = item.source;\r\n            // Check for [] directives\r\n            let dirs = [];\r\n            dirs = item.source.match(/^\\[([^\\]]*)\\]/);\r\n            if (dirs && dirs.length && dirs[0] !== \"\") {\r\n                partFormat = item.source.substr(dirs[0].length);\r\n                item.color = dirs[1];\r\n            }\r\n            // Let TextFormatter split into chunks\r\n            let chunks = TextFormatter.chunk(partFormat, true);\r\n            for (let i = 0; i < chunks.length; i++) {\r\n                let chunk = chunks[i];\r\n                // replace back double vertical bar\r\n                chunk.text = chunk.text.replace($type.PLACEHOLDER2, \"|\");\r\n                if (chunk.type === \"value\") {\r\n                    // Just \"Duration\"?\r\n                    // if (chunk.text.toLowerCase() === \"duration\") {\r\n                    // \tchunk.text = durationFormat;\r\n                    // }\r\n                    // Check for \"a\" (absolute) modifier\r\n                    if (chunk.text.match(/[yYMdDwhHKkmsSn]+a/)) {\r\n                        item.absolute = true;\r\n                        chunk.text = chunk.text.replace(/([yYMdDwhHKkmsSn]+)a/, \"$1\");\r\n                    }\r\n                    // Find all possible parts\r\n                    let matches = chunk.text.match(/y+|Y+|M+|d+|D+|w+|h+|H+|K+|k+|m+|s+|S+|n+/g);\r\n                    if (matches) {\r\n                        // Populate template\r\n                        for (let x = 0; x < matches.length; x++) {\r\n                            // Is it an alias?\r\n                            if (matches[x] == null) {\r\n                                matches[x] = this._unitAliases[matches[x]];\r\n                            }\r\n                            item.parts.push(matches[x]);\r\n                            chunk.text = chunk.text.replace(matches[x], $type.PLACEHOLDER);\r\n                        }\r\n                    }\r\n                }\r\n                // Apply to template\r\n                item.template += chunk.text;\r\n            }\r\n            // Apply style formatting\r\n            //item.template = TextFormatter.format(item.template, this.outputFormat);\r\n            // Save cache\r\n            // TODO\r\n            //this.setCache(item.source, item);\r\n            // Mark this as parsed\r\n            item.parsed = true;\r\n        });\r\n        // Save cache (the whole thing)\r\n        // TODO\r\n        //this.setCache(format, info);\r\n        return info;\r\n    }\r\n    /**\r\n     * Applies parsed format to a numeric value.\r\n     *\r\n     * @param value    Value\r\n     * @param details  Parsed format as returned by {parseFormat}\r\n     * @return Formatted duration\r\n     */\r\n    applyFormat(value, details) {\r\n        // Use absolute values\r\n        let negative = !details.absolute && (value < this.get(\"negativeBase\"));\r\n        value = Math.abs(value);\r\n        // Recalculate to milliseconds\r\n        let tstamp = this.toTimeStamp(value, details.baseUnit);\r\n        // Init return value\r\n        let res = details.template;\r\n        // Iterate through duration parts\r\n        for (let i = 0, len = details.parts.length; i < len; i++) {\r\n            // Gather the part\r\n            let part = details.parts[i];\r\n            let unit = this._toTimeUnit(part.substr(0, 1));\r\n            let digits = part.length;\r\n            // Calculate current unit value\r\n            let ints;\r\n            const unitValue = this._getUnitValue(unit);\r\n            if (i < (len - 1)) {\r\n                ints = Math.floor(tstamp / unitValue);\r\n            }\r\n            else {\r\n                ints = Math.round(tstamp / unitValue);\r\n            }\r\n            res = res.replace($type.PLACEHOLDER, $utils.padString(ints, digits, \"0\"));\r\n            // Reduce timestamp\r\n            tstamp -= ints * unitValue;\r\n        }\r\n        // Reapply negative sign\r\n        if (negative) {\r\n            res = \"-\" + res;\r\n        }\r\n        return res;\r\n    }\r\n    /**\r\n     * Converts numeric value to timestamp in milliseconds.\r\n     *\r\n     * @param value     A source value\r\n     * @param baseUnit  Base unit the source value is in: \"q\", \"s\", \"i\", \"h\", \"d\", \"w\", \"m\", \"y\"\r\n     * @return Value representation as a timestamp in milliseconds\r\n     */\r\n    toTimeStamp(value, baseUnit) {\r\n        return value * this._getUnitValue(baseUnit);\r\n    }\r\n    _toTimeUnit(code) {\r\n        switch (code) {\r\n            case \"S\":\r\n                return \"millisecond\";\r\n            case \"s\":\r\n                return \"second\";\r\n            case \"m\":\r\n                return \"minute\";\r\n            case \"h\":\r\n                return \"hour\";\r\n            case \"d\":\r\n                return \"day\";\r\n            case \"w\":\r\n                return \"week\";\r\n            case \"M\":\r\n                return \"month\";\r\n            case \"y\":\r\n                return \"year\";\r\n        }\r\n        ;\r\n    }\r\n    /**\r\n     * Returns appropriate default format for the value.\r\n     *\r\n     * If `maxValue` is sepcified, it will use that value to determine the time\r\n     * unit for the format.\r\n     *\r\n     * For example if your `baseUnit` is `\"second\"` and you pass in `10`, you\r\n     * will get `\"10\"`.\r\n     *\r\n     * However, you might want it to be formatted in the context of bigger scale,\r\n     * say 10 minutes (600 seconds). If you pass in `600` as `maxValue`, all\r\n     * values, including small ones will use format with minutes, e.g.:\r\n     * `00:10`, `00:50`, `12: 30`, etc.\r\n     *\r\n     * @param value     Value to format\r\n     * @param maxValue  Maximum value to be used to determine format\r\n     * @param baseUnit  Base unit of the value\r\n     * @return Format\r\n     */\r\n    getFormat(value, maxValue, baseUnit) {\r\n        // Is format override set?\r\n        if (this.get(\"durationFormat\") != null) {\r\n            return this.get(\"durationFormat\");\r\n        }\r\n        // Get base unit\r\n        if (!baseUnit) {\r\n            baseUnit = this.get(\"baseUnit\");\r\n        }\r\n        if (maxValue != null && value != maxValue) {\r\n            value = Math.abs(value);\r\n            maxValue = Math.abs(maxValue);\r\n            let maxUnit = this.getValueUnit(Math.max(value, maxValue), baseUnit);\r\n            return this.get(\"durationFormats\")[baseUnit][maxUnit];\r\n        }\r\n        else {\r\n            let unit = this.getValueUnit(value, baseUnit);\r\n            return this.get(\"durationFormats\")[baseUnit][unit];\r\n        }\r\n    }\r\n    /**\r\n     * Returns value's closest denominator time unit, e.g 100 seconds is\r\n     * `\"minute\"`, while 59 seconds would still be `second`.\r\n     *\r\n     * @param value     Source duration value\r\n     * @param baseUnit  Base unit\r\n     * @return Denominator\r\n     */\r\n    getValueUnit(value, baseUnit) {\r\n        // Get base unit\r\n        if (!baseUnit) {\r\n            baseUnit = this.get(\"baseUnit\");\r\n        }\r\n        // Convert to milliseconds\r\n        let currentUnit;\r\n        let ms = this.getMilliseconds(value, baseUnit);\r\n        $object.eachContinue(this._getUnitValues(), (key, val) => {\r\n            if (key == baseUnit || currentUnit) {\r\n                let num = ms / val;\r\n                if (num <= 1) {\r\n                    if (!currentUnit) {\r\n                        currentUnit = key;\r\n                    }\r\n                    return false;\r\n                }\r\n                currentUnit = key;\r\n            }\r\n            return true;\r\n        });\r\n        return currentUnit;\r\n    }\r\n    /**\r\n     * Converts value to milliseconds according to `baseUnit`.\r\n     *\r\n     * @param value     Source duration value\r\n     * @param baseUnit  Base unit\r\n     * @return Value in milliseconds\r\n     */\r\n    getMilliseconds(value, baseUnit) {\r\n        // Get base unit\r\n        if (!baseUnit) {\r\n            baseUnit = this.get(\"baseUnit\");\r\n        }\r\n        return value * this._getUnitValue(baseUnit);\r\n    }\r\n    _getUnitValue(timeUnit) {\r\n        return this._getUnitValues()[timeUnit];\r\n    }\r\n    _getUnitValues() {\r\n        return {\r\n            \"millisecond\": 1,\r\n            \"second\": 1000,\r\n            \"minute\": 60000,\r\n            \"hour\": 3600000,\r\n            \"day\": 86400000,\r\n            \"week\": 604800000,\r\n            \"month\": 2592000000,\r\n            \"year\": 31536000000,\r\n        };\r\n    }\r\n}\r\n//# sourceMappingURL=DurationFormatter.js.map","import type { TimeUnit } from \"./Time\";\r\n\r\nimport { Entity, IEntitySettings, IEntityPrivate } from \"./Entity\"\r\nimport { TextFormatter } from \"./TextFormatter\";\r\n\r\nimport * as $object from \"./Object\";\r\nimport * as $utils from \"./Utils\";\r\nimport * as $type from \"./Type\";\r\n\r\n\r\nexport interface IDurationFormatterSettings extends IEntitySettings {\r\n\r\n\t/**\r\n\t * A universal duration format to use wherever number needs to be formatted\r\n\t * as a duration.\r\n\t */\r\n\tdurationFormat?: string;\r\n\r\n\t/**\r\n\t * A base value. Any number below it will be considered \"negative\".\r\n\t *\r\n\t * @default 0\r\n\t */\r\n\tnegativeBase?: number;\r\n\r\n\t/**\r\n\t * Identifies what values are used in duration.\r\n\t *\r\n\t * Available options: `\"millisecond\"`, `\"second\"` (default), `\"minute\"`, `\"hour\"`, `\"day\"`, `\"week\"`, `\"month\"`, and `\"year\"`.\r\n\t *\r\n\t * @see {@link https://www.amcharts.com/docs/v5/concepts/formatters/formatting-durations/#Base_unit} for more info\r\n\t * @default \"second\"\r\n\t */\r\n\tbaseUnit?: TimeUnit;\r\n\r\n\t/**\r\n\t * Time unit dependent duration formats.\r\n\t *\r\n\t * Used be [[DurationAxis]].\r\n\t */\r\n\tdurationFormats?: Partial<Record<TimeUnit, Partial<Record<TimeUnit, string>>>>;\r\n\r\n\t/**\r\n\t * An array of data fields that hold duration values and should be formatted\r\n\t * with a [[DurationFormatter]].\r\n\t *\r\n\t * @see {@link https://www.amcharts.com/docs/v5/concepts/formatters/data-placeholders/#Formatting_placeholders} for more info\r\n\t */\r\n\tdurationFields?: string[];\r\n\r\n}\r\n\r\nexport interface IDurationFormatterPrivate extends IEntityPrivate {\r\n}\r\n\r\n/**\r\n * A class used to format numberic values as time duration.\r\n *\r\n * @see {@link https://www.amcharts.com/docs/v5/concepts/formatters/formatting-durations/} for more info\r\n */\r\nexport class DurationFormatter extends Entity {\r\n\tdeclare public _settings: IDurationFormatterSettings;\r\n\tdeclare public _privateSettings: IDurationFormatterPrivate;\r\n\r\n\tprotected _setDefaults() {\r\n\t\tconst dmillisecond = \"_duration_millisecond\";\r\n\t\tconst dsecond = \"_duration_second\";\r\n\t\tconst dminute = \"_duration_minute\";\r\n\t\tconst dhour = \"_duration_hour\";\r\n\t\tconst dday = \"_duration_day\";\r\n\t\tconst dweek = \"_duration_week\";\r\n\t\tconst dmonth = \"_duration_month\";\r\n\t\tconst dyear = \"_duration_year\";\r\n\r\n\t\tconst asecond = \"_second\";\r\n\t\tconst aminute = \"_minute\";\r\n\t\tconst ahour = \"_hour\";\r\n\t\tconst aday = \"_day\";\r\n\t\tconst aweek = \"_week\";\r\n\t\tconst amonth = \"_week\";\r\n\t\tconst ayear = \"_year\";\r\n\r\n\t\t// Defaults\r\n\t\tthis._setDefault(\"negativeBase\", 0);\r\n\t\tthis._setDefault(\"baseUnit\", \"second\");\r\n\t\tthis._setDefault(\"durationFormats\", {\r\n\t\t\t\"millisecond\": {\r\n\t\t\t\t\"millisecond\": this._t(dmillisecond),\r\n\t\t\t\t\"second\": this._t((dmillisecond + asecond) as any),\r\n\t\t\t\t\"minute\": this._t((dmillisecond + aminute) as any),\r\n\t\t\t\t\"hour\": this._t((dmillisecond + ahour) as any),\r\n\t\t\t\t\"day\": this._t((dmillisecond + aday) as any),\r\n\t\t\t\t\"week\": this._t((dmillisecond + aweek) as any),\r\n\t\t\t\t\"month\": this._t((dmillisecond + amonth) as any),\r\n\t\t\t\t\"year\": this._t((dmillisecond + ayear) as any)\r\n\t\t\t},\r\n\t\t\t\"second\": {\r\n\t\t\t\t\"second\": this._t((dsecond) as any),\r\n\t\t\t\t\"minute\": this._t((dsecond + aminute) as any),\r\n\t\t\t\t\"hour\": this._t((dsecond + ahour) as any),\r\n\t\t\t\t\"day\": this._t((dsecond + aday) as any),\r\n\t\t\t\t\"week\": this._t((dsecond + aweek) as any),\r\n\t\t\t\t\"month\": this._t((dsecond + amonth) as any),\r\n\t\t\t\t\"year\": this._t((dsecond + ayear) as any)\r\n\t\t\t},\r\n\t\t\t\"minute\": {\r\n\t\t\t\t\"minute\": this._t((dminute) as any),\r\n\t\t\t\t\"hour\": this._t((dminute + ahour) as any),\r\n\t\t\t\t\"day\": this._t((dminute + aday) as any),\r\n\t\t\t\t\"week\": this._t((dminute + aweek) as any),\r\n\t\t\t\t\"month\": this._t((dminute + amonth) as any),\r\n\t\t\t\t\"year\": this._t((dminute + ayear) as any)\r\n\t\t\t},\r\n\t\t\t\"hour\": {\r\n\t\t\t\t\"hour\": this._t((dhour) as any),\r\n\t\t\t\t\"day\": this._t((dhour + aday) as any),\r\n\t\t\t\t\"week\": this._t((dhour + aweek) as any),\r\n\t\t\t\t\"month\": this._t((dhour + amonth) as any),\r\n\t\t\t\t\"year\": this._t((dhour + ayear) as any)\r\n\t\t\t},\r\n\t\t\t\"day\": {\r\n\t\t\t\t\"day\": this._t((dday) as any),\r\n\t\t\t\t\"week\": this._t((dday + aweek) as any),\r\n\t\t\t\t\"month\": this._t((dday + amonth) as any),\r\n\t\t\t\t\"year\": this._t((dday + ayear) as any)\r\n\t\t\t},\r\n\t\t\t\"week\": {\r\n\t\t\t\t\"week\": this._t((dweek) as any),\r\n\t\t\t\t\"month\": this._t((dweek + amonth) as any),\r\n\t\t\t\t\"year\": this._t((dweek + ayear) as any)\r\n\t\t\t},\r\n\t\t\t\"month\": {\r\n\t\t\t\t\"month\": this._t((dmonth) as any),\r\n\t\t\t\t\"year\": this._t((dmonth + ayear) as any)\r\n\t\t\t},\r\n\t\t\t\"year\": {\r\n\t\t\t\t\"year\": this._t(dyear)\r\n\t\t\t}\r\n\t\t});\r\n\r\n\t\tsuper._setDefaults();\r\n\t}\r\n\r\n\r\n\t/**\r\n\t * Collection of aliases for units.\r\n\t */\r\n\tprotected _unitAliases: { [index: string]: string } = {\r\n\t\t\"Y\": \"y\",\r\n\t\t\"D\": \"d\",\r\n\t\t\"H\": \"h\",\r\n\t\t\"K\": \"h\",\r\n\t\t\"k\": \"h\",\r\n\t\t\"n\": \"S\"\r\n\t};\r\n\r\n\tpublic _beforeChanged() {\r\n\t\tsuper._beforeChanged();\r\n\t}\r\n\r\n\t/**\r\n\t * Formats the number as duration.\r\n\t *\r\n\t * For example `1000` (base unit seconds) would be converted to `16:40` as in\r\n\t * 16 minutes and 40 seconds.\r\n\t *\r\n\t * @param value   Value to format\r\n\t * @param format  Format to apply\r\n\t * @param base    Override base unit\r\n\t * @return Formatted number\r\n\t */\r\n\tpublic format(value: number | string, format?: string, base?: TimeUnit): string {\r\n\r\n\t\t// no base unit?\r\n\t\tlet baseUnit = base || this.get(\"baseUnit\");\r\n\r\n\t\t// no format passed in or empty\r\n\t\tif (typeof format === \"undefined\" || format === \"\") {\r\n\t\t\tif (this.get(\"durationFormat\") != null) {\r\n\t\t\t\tformat = this.get(\"durationFormat\");\r\n\t\t\t}\r\n\t\t\telse {\r\n\t\t\t\tformat = this.getFormat($type.toNumber(value), undefined, baseUnit);\r\n\t\t\t}\r\n\t\t}\r\n\r\n\t\t// Clean format\r\n\t\tformat = $utils.cleanFormat(format!);\r\n\r\n\t\t// get format info (it will also deal with parser caching)\r\n\t\tlet info = this.parseFormat(format, baseUnit);\r\n\r\n\t\t// cast to number just in case\r\n\t\t// TODO: maybe use better casting\r\n\t\tlet source: number = Number(value);\r\n\r\n\t\t// format and replace the number\r\n\t\tlet details;\r\n\t\tif (source > this.get(\"negativeBase\")) {\r\n\t\t\tdetails = info.positive;\r\n\t\t}\r\n\t\telse if (source < this.get(\"negativeBase\")) {\r\n\t\t\tdetails = info.negative;\r\n\t\t}\r\n\t\telse {\r\n\t\t\tdetails = info.zero;\r\n\t\t}\r\n\r\n\t\t// Format\r\n\t\tlet formatted = this.applyFormat(source, details);\r\n\r\n\t\t// Apply color?\r\n\t\tif (details.color !== \"\") {\r\n\t\t\tformatted = \"[\" + details.color + \"]\" + formatted + \"[/]\";\r\n\t\t}\r\n\r\n\t\treturn formatted;\r\n\t}\r\n\r\n\t/**\r\n\t * Parses supplied format into structured object which can be used to format\r\n\t * the number.\r\n\t *\r\n\t * @param format  Format string, i.e. \"#,###.00\"\r\n\t * @param base    Override base unit\r\n\t * @return Parsed information\r\n\t */\r\n\tprotected parseFormat(format: string, base?: TimeUnit): any {\r\n\r\n\t\t// Check cache\r\n\t\t// TODO\r\n\t\t// let cached = this.getCache(format);\r\n\t\t// if (cached != null) {\r\n\t\t// \treturn cached;\r\n\t\t// }\r\n\r\n\t\t// no base unit?\r\n\t\tlet baseUnit = base || this.get(\"baseUnit\");\r\n\r\n\t\t// Initialize duration parsing info\r\n\t\tlet info = {\r\n\t\t\t\"positive\": {\r\n\t\t\t\t\"color\": \"\",\r\n\t\t\t\t\"template\": \"\",\r\n\t\t\t\t\"parts\": <any>[],\r\n\t\t\t\t\"source\": \"\",\r\n\t\t\t\t\"baseUnit\": baseUnit,\r\n\t\t\t\t\"parsed\": false,\r\n\t\t\t\t\"absolute\": false\r\n\t\t\t},\r\n\t\t\t\"negative\": {\r\n\t\t\t\t\"color\": \"\",\r\n\t\t\t\t\"template\": \"\",\r\n\t\t\t\t\"parts\": <any>[],\r\n\t\t\t\t\"source\": \"\",\r\n\t\t\t\t\"baseUnit\": baseUnit,\r\n\t\t\t\t\"parsed\": false,\r\n\t\t\t\t\"absolute\": false\r\n\t\t\t},\r\n\t\t\t\"zero\": {\r\n\t\t\t\t\"color\": \"\",\r\n\t\t\t\t\"template\": \"\",\r\n\t\t\t\t\"parts\": <any>[],\r\n\t\t\t\t\"source\": \"\",\r\n\t\t\t\t\"baseUnit\": baseUnit,\r\n\t\t\t\t\"parsed\": false,\r\n\t\t\t\t\"absolute\": false\r\n\t\t\t}\r\n\t\t};\r\n\r\n\t\t// Escape double vertical bars (that mean display one vertical bar)\r\n\t\tformat = format.replace(\"||\", $type.PLACEHOLDER2);\r\n\r\n\t\t// Split it up and deal with different formats\r\n\t\tlet parts = format.split(\"|\");\r\n\t\tinfo.positive.source = parts[0];\r\n\r\n\t\tif (typeof parts[2] === \"undefined\") {\r\n\t\t\tinfo.zero = info.positive;\r\n\t\t}\r\n\t\telse {\r\n\t\t\tinfo.zero.source = parts[2];\r\n\t\t}\r\n\r\n\t\tif (typeof parts[1] === \"undefined\") {\r\n\t\t\tinfo.negative = info.positive;\r\n\t\t}\r\n\t\telse {\r\n\t\t\tinfo.negative.source = parts[1];\r\n\t\t}\r\n\r\n\t\t// Parse each\r\n\t\t$object.each(info, (_part, item) => {\r\n\t\t\t// Already parsed\r\n\t\t\tif (item.parsed) {\r\n\t\t\t\treturn;\r\n\t\t\t}\r\n\r\n\t\t\t// Check cached\r\n\t\t\t// TODO\r\n\t\t\t// if (typeof this.getCache(item.source) !== \"undefined\") {\r\n\t\t\t// \tinfo[part] = this.getCache(item.source);\r\n\t\t\t// \treturn;\r\n\t\t\t// }\r\n\r\n\t\t\t// Begin parsing\r\n\t\t\tlet partFormat: string = item.source;\r\n\r\n\t\t\t// Check for [] directives\r\n\t\t\tlet dirs: string[] | null = [];\r\n\t\t\tdirs = item.source.match(/^\\[([^\\]]*)\\]/);\r\n\t\t\tif (dirs && dirs.length && dirs[0] !== \"\") {\r\n\t\t\t\tpartFormat = item.source.substr(dirs[0].length);\r\n\t\t\t\titem.color = dirs[1];\r\n\t\t\t}\r\n\r\n\r\n\t\t\t// Let TextFormatter split into chunks\r\n\t\t\tlet chunks = TextFormatter.chunk(partFormat, true);\r\n\t\t\tfor (let i: number = 0; i < chunks.length; i++) {\r\n\t\t\t\tlet chunk = chunks[i];\r\n\r\n\t\t\t\t// replace back double vertical bar\r\n\t\t\t\tchunk.text = chunk.text.replace($type.PLACEHOLDER2, \"|\");\r\n\r\n\t\t\t\tif (chunk.type === \"value\") {\r\n\r\n\t\t\t\t\t// Just \"Duration\"?\r\n\t\t\t\t\t// if (chunk.text.toLowerCase() === \"duration\") {\r\n\t\t\t\t\t// \tchunk.text = durationFormat;\r\n\t\t\t\t\t// }\r\n\r\n\t\t\t\t\t// Check for \"a\" (absolute) modifier\r\n\t\t\t\t\tif (chunk.text.match(/[yYMdDwhHKkmsSn]+a/)) {\r\n\t\t\t\t\t\titem.absolute = true;\r\n\t\t\t\t\t\tchunk.text = chunk.text.replace(/([yYMdDwhHKkmsSn]+)a/, \"$1\");\r\n\t\t\t\t\t}\r\n\r\n\t\t\t\t\t// Find all possible parts\r\n\t\t\t\t\tlet matches = chunk.text.match(/y+|Y+|M+|d+|D+|w+|h+|H+|K+|k+|m+|s+|S+|n+/g);\r\n\r\n\t\t\t\t\tif (matches) {\r\n\t\t\t\t\t\t// Populate template\r\n\t\t\t\t\t\tfor (let x = 0; x < matches.length; x++) {\r\n\t\t\t\t\t\t\t// Is it an alias?\r\n\t\t\t\t\t\t\tif (matches[x] == null) {\r\n\t\t\t\t\t\t\t\tmatches[x] = this._unitAliases[matches[x]];\r\n\t\t\t\t\t\t\t}\r\n\t\t\t\t\t\t\titem.parts.push(matches[x]);\r\n\t\t\t\t\t\t\tchunk.text = chunk.text.replace(matches[x], $type.PLACEHOLDER);\r\n\t\t\t\t\t\t}\r\n\t\t\t\t\t}\r\n\t\t\t\t}\r\n\r\n\t\t\t\t// Apply to template\r\n\t\t\t\titem.template += chunk.text;\r\n\t\t\t}\r\n\r\n\t\t\t// Apply style formatting\r\n\t\t\t//item.template = TextFormatter.format(item.template, this.outputFormat);\r\n\r\n\t\t\t// Save cache\r\n\t\t\t// TODO\r\n\t\t\t//this.setCache(item.source, item);\r\n\r\n\t\t\t// Mark this as parsed\r\n\t\t\titem.parsed = true;\r\n\t\t});\r\n\r\n\t\t// Save cache (the whole thing)\r\n\t\t// TODO\r\n\t\t//this.setCache(format, info);\r\n\r\n\t\treturn info;\r\n\t}\r\n\r\n\t/**\r\n\t * Applies parsed format to a numeric value.\r\n\t *\r\n\t * @param value    Value\r\n\t * @param details  Parsed format as returned by {parseFormat}\r\n\t * @return Formatted duration\r\n\t */\r\n\tprotected applyFormat(value: number, details: any): string {\r\n\r\n\t\t// Use absolute values\r\n\t\tlet negative = !details.absolute && (value < this.get(\"negativeBase\"));\r\n\t\tvalue = Math.abs(value);\r\n\r\n\t\t// Recalculate to milliseconds\r\n\t\tlet tstamp = this.toTimeStamp(value, details.baseUnit);\r\n\r\n\t\t// Init return value\r\n\t\tlet res = details.template;\r\n\r\n\t\t// Iterate through duration parts\r\n\t\tfor (let i = 0, len = details.parts.length; i < len; i++) {\r\n\r\n\t\t\t// Gather the part\r\n\t\t\tlet part = details.parts[i];\r\n\t\t\tlet unit = this._toTimeUnit(part.substr(0, 1));\r\n\t\t\tlet digits = part.length;\r\n\r\n\t\t\t// Calculate current unit value\r\n\t\t\tlet ints: number;\r\n\t\t\tconst unitValue = this._getUnitValue(unit!);\r\n\t\t\tif (i < (len -1)) {\r\n\t\t\t\tints = Math.floor(tstamp / unitValue);\r\n\t\t\t}\r\n\t\t\telse {\r\n\t\t\t\tints = Math.round(tstamp / unitValue);\r\n\t\t\t}\r\n\t\t\tres = res.replace($type.PLACEHOLDER, $utils.padString(ints, digits, \"0\"));\r\n\r\n\t\t\t// Reduce timestamp\r\n\t\t\ttstamp -= ints * unitValue;\r\n\t\t}\r\n\r\n\t\t// Reapply negative sign\r\n\t\tif (negative) {\r\n\t\t\tres = \"-\" + res;\r\n\t\t}\r\n\r\n\t\treturn res;\r\n\t}\r\n\r\n\t/**\r\n\t * Converts numeric value to timestamp in milliseconds.\r\n\t *\r\n\t * @param value     A source value\r\n\t * @param baseUnit  Base unit the source value is in: \"q\", \"s\", \"i\", \"h\", \"d\", \"w\", \"m\", \"y\"\r\n\t * @return Value representation as a timestamp in milliseconds\r\n\t */\r\n\tpublic toTimeStamp(value: number, baseUnit: TimeUnit): number {\r\n\t\treturn value * this._getUnitValue(baseUnit);\r\n\t}\r\n\r\n\tprotected _toTimeUnit(code: string): TimeUnit | undefined {\r\n\t\tswitch (code) {\r\n\t\t\tcase \"S\":\r\n\t\t\t\treturn \"millisecond\";\r\n\t\t\tcase \"s\":\r\n\t\t\t\treturn \"second\";\r\n\t\t\tcase \"m\":\r\n\t\t\t\treturn \"minute\";\r\n\t\t\tcase \"h\":\r\n\t\t\t\treturn \"hour\";\r\n\t\t\tcase \"d\":\r\n\t\t\t\treturn \"day\";\r\n\t\t\tcase \"w\":\r\n\t\t\t\treturn \"week\";\r\n\t\t\tcase \"M\":\r\n\t\t\t\treturn \"month\";\r\n\t\t\tcase \"y\":\r\n\t\t\t\treturn \"year\";\r\n\t\t};\r\n\t}\r\n\r\n\t/**\r\n\t * Returns appropriate default format for the value.\r\n\t *\r\n\t * If `maxValue` is sepcified, it will use that value to determine the time\r\n\t * unit for the format.\r\n\t *\r\n\t * For example if your `baseUnit` is `\"second\"` and you pass in `10`, you\r\n\t * will get `\"10\"`.\r\n\t *\r\n\t * However, you might want it to be formatted in the context of bigger scale,\r\n\t * say 10 minutes (600 seconds). If you pass in `600` as `maxValue`, all\r\n\t * values, including small ones will use format with minutes, e.g.:\r\n\t * `00:10`, `00:50`, `12: 30`, etc.\r\n\t *\r\n\t * @param value     Value to format\r\n\t * @param maxValue  Maximum value to be used to determine format\r\n\t * @param baseUnit  Base unit of the value\r\n\t * @return Format\r\n\t */\r\n\tpublic getFormat(value: number, maxValue?: number, baseUnit?: TimeUnit): string {\r\n\r\n\t\t// Is format override set?\r\n\t\tif (this.get(\"durationFormat\") != null) {\r\n\t\t\treturn this.get(\"durationFormat\")!;\r\n\t\t}\r\n\r\n\t\t// Get base unit\r\n\t\tif (!baseUnit) {\r\n\t\t\tbaseUnit = this.get(\"baseUnit\");\r\n\t\t}\r\n\r\n\t\tif (maxValue != null && value != maxValue) {\r\n\t\t\tvalue = Math.abs(value);\r\n\t\t\tmaxValue = Math.abs(maxValue);\r\n\t\t\tlet maxUnit = this.getValueUnit(Math.max(value, maxValue), baseUnit);\r\n\t\t\treturn (<any>this.get(\"durationFormats\"))[baseUnit!][maxUnit!];\r\n\t\t}\r\n\t\telse {\r\n\t\t\tlet unit = this.getValueUnit(value, baseUnit);\r\n\t\t\treturn (<any>this.get(\"durationFormats\"))[baseUnit!][unit!];\r\n\t\t}\r\n\r\n\t}\r\n\r\n\t/**\r\n\t * Returns value's closest denominator time unit, e.g 100 seconds is\r\n\t * `\"minute\"`, while 59 seconds would still be `second`.\r\n\t *\r\n\t * @param value     Source duration value\r\n\t * @param baseUnit  Base unit\r\n\t * @return Denominator\r\n\t */\r\n\tpublic getValueUnit(value: number, baseUnit?: TimeUnit): TimeUnit | undefined {\r\n\r\n\t\t// Get base unit\r\n\t\tif (!baseUnit) {\r\n\t\t\tbaseUnit = this.get(\"baseUnit\");\r\n\t\t}\r\n\r\n\t\t// Convert to milliseconds\r\n\t\tlet currentUnit: any;\r\n\t\tlet ms = this.getMilliseconds(value, baseUnit);\r\n\t\t$object.eachContinue(this._getUnitValues(), (key, val) => {\r\n\t\t\tif (key == baseUnit || currentUnit) {\r\n\t\t\t\tlet num = ms / val;\r\n\t\t\t\tif (num <= 1) {\r\n\t\t\t\t\tif (!currentUnit) {\r\n\t\t\t\t\t\tcurrentUnit = key;\r\n\t\t\t\t\t}\r\n\t\t\t\t\treturn false;\r\n\t\t\t\t}\r\n\t\t\t\tcurrentUnit = key;\r\n\t\t\t}\r\n\t\t\treturn true;\r\n\t\t});\r\n\r\n\t\treturn currentUnit;\r\n\t}\r\n\r\n\t/**\r\n\t * Converts value to milliseconds according to `baseUnit`.\r\n\t *\r\n\t * @param value     Source duration value\r\n\t * @param baseUnit  Base unit\r\n\t * @return Value in milliseconds\r\n\t */\r\n\tpublic getMilliseconds(value: number, baseUnit?: TimeUnit): number {\r\n\r\n\t\t// Get base unit\r\n\t\tif (!baseUnit) {\r\n\t\t\tbaseUnit = this.get(\"baseUnit\");\r\n\t\t}\r\n\r\n\t\treturn value * this._getUnitValue(baseUnit!);\r\n\t}\r\n\r\n\tprotected _getUnitValue(timeUnit: TimeUnit): number {\r\n\t\treturn this._getUnitValues()[timeUnit];\r\n\t}\r\n\r\n\tprotected _getUnitValues(): any {\r\n\t\treturn {\r\n\t\t\t\"millisecond\": 1,\r\n\t\t\t\"second\": 1000,\r\n\t\t\t\"minute\": 60000,\r\n\t\t\t\"hour\": 3600000,\r\n\t\t\t\"day\": 86400000,\r\n\t\t\t\"week\": 604800000,\r\n\t\t\t\"month\": 2592000000,\r\n\t\t\t\"year\": 31536000000,\r\n\t\t};\r\n\t}\r\n\r\n}\r\n","import { Entity } from \"./Entity\";\r\nimport * as $array from \"./Array\";\r\nimport * as $object from \"./Object\";\r\nimport en from \"../../../locales/en\";\r\n;\r\n/**\r\n * Add localization functionality.\r\n */\r\nexport class Language extends Entity {\r\n    _setDefaults() {\r\n        this.setPrivate(\"defaultLocale\", en);\r\n        super._setDefaults();\r\n    }\r\n    /**\r\n     * Returns a prompt translation.\r\n     *\r\n     * @param   prompt   Prompt to translate\r\n     * @param   locale   Target locale\r\n     * @param   ...rest  Parameters\r\n     * @return           Translation\r\n     */\r\n    translate(prompt, locale, ...rest) {\r\n        // Get langauge\r\n        if (!locale) {\r\n            locale = this._root.locale || this.getPrivate(\"defaultLocale\");\r\n        }\r\n        // Init translation\r\n        let translation = prompt;\r\n        let value = locale[prompt];\r\n        // Try to look for the translation\r\n        if (value === null) {\r\n            translation = \"\";\r\n        }\r\n        else if (value != null) {\r\n            // It might be an empty string\r\n            if (value) {\r\n                translation = value;\r\n            }\r\n        }\r\n        else if (locale !== this.getPrivate(\"defaultLocale\")) {\r\n            // Try to look in default language\r\n            return this.translate(prompt, this.getPrivate(\"defaultLocale\"), ...rest);\r\n        }\r\n        // Replace %1, %2, etc params\r\n        if (rest.length) {\r\n            for (let len = rest.length, i = 0; i < len; ++i) {\r\n                translation = translation.split(\"%\" + (i + 1)).join(rest[i]);\r\n            }\r\n        }\r\n        // Return the translation\r\n        return translation;\r\n    }\r\n    /**\r\n     * Returns a prompt translation, including custom prompts.\r\n     *\r\n     * @param   prompt   Prompt to translate\r\n     * @param   locale   Target locale\r\n     * @param   ...rest  Parameters\r\n     * @return           Translation\r\n     */\r\n    translateAny(prompt, locale, ...rest) {\r\n        return this.translate(prompt, locale, ...rest);\r\n    }\r\n    /**\r\n     * Add a custom prompt to locale.\r\n     *\r\n     * @see {@link https://www.amcharts.com/docs/v5/concepts/locales/creating-translations/#Extending_locale_with_custom_prompts}\r\n     * @param  prompt       Source prompt\r\n     * @param  translation  Tanslation\r\n     * @param  locale       Target locale\r\n     */\r\n    setTranslationAny(prompt, translation, locale) {\r\n        const localeTarget = locale || this._root.locale;\r\n        localeTarget[prompt] = translation;\r\n    }\r\n    /**\r\n     * Add a batch of custom prompts.\r\n     *\r\n     * @since 5.3.3\r\n     * @see {@link https://www.amcharts.com/docs/v5/concepts/locales/creating-translations/#Extending_locale_with_custom_prompts}\r\n     * @param  translations  Translations\r\n     * @param  locale        Target locale\r\n     */\r\n    setTranslationsAny(translations, locale) {\r\n        $object.each(translations, (key, val) => {\r\n            this.setTranslationAny(key, val, locale);\r\n        });\r\n    }\r\n    translateEmpty(prompt, locale, ...rest) {\r\n        let translation = this.translate(prompt, locale, ...rest);\r\n        return translation == prompt ? \"\" : translation;\r\n    }\r\n    translateFunc(prompt, locale) {\r\n        if (this._root.locale[prompt]) {\r\n            return this._root.locale[prompt];\r\n        }\r\n        // Try to look in default language\r\n        if (locale !== this.getPrivate(\"defaultLocale\")) {\r\n            return this.translateFunc(prompt, this.getPrivate(\"defaultLocale\"));\r\n        }\r\n        // Fail - return empty function\r\n        return () => {\r\n            return \"\";\r\n        };\r\n    }\r\n    /**\r\n     * Translates a btach of prompts.\r\n     *\r\n     * @param  list    Array of prompts to translate\r\n     * @param  locale  Target locale\r\n     * @return         Array of translations\r\n     */\r\n    translateAll(list, locale) {\r\n        // Translate all items in the list\r\n        if (!this.isDefault()) {\r\n            return $array.map(list, (x) => this.translate(x, locale));\r\n        }\r\n        else {\r\n            return list;\r\n        }\r\n    }\r\n    /**\r\n     * Returns `true` if the currently selected locale is a default locale.\r\n     *\r\n     * @return `true` if locale is default; `false` if it is not.\r\n     */\r\n    isDefault() {\r\n        return this.getPrivate(\"defaultLocale\") === this._root.locale;\r\n    }\r\n}\r\n//# sourceMappingURL=Language.js.map","import { Entity, IEntitySettings, IEntityPrivate } from \"./Entity\"\nimport * as $array from \"./Array\"\nimport * as $object from \"./Object\"\nimport en from \"../../../locales/en\";\n\n/**\n * Defines properties that exist for the locale.\n *\n * @ignore\n */\nexport interface ILocaleSettings {\n\t\"firstDayOfWeek\"?: number,\n\n\t// number formatter related\n\t\"_decimalSeparator\"?: string;\n\t\"_thousandSeparator\"?: string;\n\n\t\"_percentPrefix\"?: string | null;\n\t\"_percentSuffix\"?: string | null;\n\n\t\"_big_number_suffix_3\"?: string;\n\t\"_big_number_suffix_6\"?: string;\n\t\"_big_number_suffix_9\"?: string;\n\t\"_big_number_suffix_12\"?: string;\n\t\"_big_number_suffix_15\"?: string;\n\t\"_big_number_suffix_18\"?: string;\n\t\"_big_number_suffix_21\"?: string;\n\t\"_big_number_suffix_24\"?: string;\n\n\t\"_small_number_suffix_24\"?: string;\n\t\"_small_number_suffix_21\"?: string;\n\t\"_small_number_suffix_18\"?: string;\n\t\"_small_number_suffix_15\"?: string;\n\t\"_small_number_suffix_12\"?: string;\n\t\"_small_number_suffix_9\"?: string;\n\t\"_small_number_suffix_6\"?: string;\n\t\"_small_number_suffix_3\"?: string;\n\n\t\"_byte_suffix_B\"?: string;\n\t\"_byte_suffix_KB\"?: string;\n\t\"_byte_suffix_MB\"?: string;\n\t\"_byte_suffix_GB\"?: string;\n\t\"_byte_suffix_TB\"?: string;\n\t\"_byte_suffix_PB\"?: string;\n\n\t// Default date formats for various periods\n\t\"_date\"?: string;\n\t\"_date_millisecond\"?: string;\n\t\"_date_millisecond_full\"?: string;\n\t\"_date_second\"?: string;\n\t\"_date_second_full\"?: string;\n\t\"_date_minute\"?: string;\n\t\"_date_minute_full\"?: string;\n\t\"_date_hour\"?: string;\n\t\"_date_hour_full\"?: string;\n\t\"_date_day\"?: string;\n\t\"_date_day_full\"?: string;\n\t\"_date_week\"?: string;\n\t\"_date_week_full\"?: string;\n\t\"_date_month\"?: string;\n\t\"_date_month_full\"?: string;\n\t\"_date_year\"?: string;\n\n\t// Default duration formats for various base units\n\t\"_duration_millisecond\"?: string;\n\t\"_duration_millisecond_second\"?: string;\n\t\"_duration_millisecond_minute\"?: string;\n\t\"_duration_millisecond_hour\"?: string;\n\t\"_duration_millisecond_day\"?: string;\n\t\"_duration_millisecond_week\"?: string;\n\t\"_duration_millisecond_month\"?: string;\n\t\"_duration_millisecond_year\"?: string;\n\n\t\"_duration_second\"?: string;\n\t\"_duration_second_minute\"?: string;\n\t\"_duration_second_hour\"?: string;\n\t\"_duration_second_day\"?: string;\n\t\"_duration_second_week\"?: string;\n\t\"_duration_second_month\"?: string;\n\t\"_duration_second_year\"?: string;\n\n\t\"_duration_minute\"?: string;\n\t\"_duration_minute_hour\"?: string;\n\t\"_duration_minute_day\"?: string;\n\t\"_duration_minute_week\"?: string;\n\t\"_duration_minute_month\"?: string;\n\t\"_duration_minute_year\"?: string;\n\n\t\"_duration_hour\"?: string;\n\t\"_duration_hour_day\"?: string;\n\t\"_duration_hour_week\"?: string;\n\t\"_duration_hour_month\"?: string;\n\t\"_duration_hour_year\"?: string;\n\n\t\"_duration_day\"?: string;\n\t\"_duration_day_week\"?: string;\n\t\"_duration_day_month\"?: string;\n\t\"_duration_day_year\"?: string;\n\n\t\"_duration_week\"?: string;\n\t\"_duration_week_month\"?: string;\n\t\"_duration_week_year\"?: string;\n\n\t\"_duration_month\"?: string;\n\t\"_duration_month_year\"?: string;\n\n\t\"_duration_year\"?: string;\n\n\t// Era\n\t\"_era_ad\"?: string;\n\t\"_era_bc\"?: string;\n\n\t// Period\n\t\"A\"?: string;\n\t\"P\"?: string;\n\t\"AM\"?: string;\n\t\"PM\"?: string;\n\t\"A.M.\"?: string;\n\t\"P.M.\"?: string;\n\n\t// Dates\n\t\"January\"?: string;\n\t\"February\"?: string;\n\t\"March\"?: string;\n\t\"April\"?: string;\n\t\"May\"?: string;\n\t\"June\"?: string;\n\t\"July\"?: string;\n\t\"August\"?: string;\n\t\"September\"?: string;\n\t\"October\"?: string;\n\t\"November\"?: string;\n\t\"December\"?: string;\n\t\"Jan\"?: string;\n\t\"Feb\"?: string;\n\t\"Mar\"?: string;\n\t\"Apr\"?: string;\n\t\"May(short)\"?: string;\n\t\"Jun\"?: string;\n\t\"Jul\"?: string;\n\t\"Aug\"?: string;\n\t\"Sep\"?: string;\n\t\"Oct\"?: string;\n\t\"Nov\"?: string;\n\t\"Dec\"?: string;\n\t\"Sunday\"?: string;\n\t\"Monday\"?: string;\n\t\"Tuesday\"?: string;\n\t\"Wednesday\"?: string;\n\t\"Thursday\"?: string;\n\t\"Friday\"?: string;\n\t\"Saturday\"?: string;\n\t\"Sun\"?: string;\n\t\"Mon\"?: string;\n\t\"Tue\"?: string;\n\t\"Wed\"?: string;\n\t\"Thu\"?: string;\n\t\"Fri\"?: string;\n\t\"Sat\"?: string;\n\n\t// Chart elements\n\t\"Zoom Out\"?: string;\n\t\"Play\"?: string;\n\t\"Stop\"?: string;\n\t\"Legend\"?: string;\n\t\"Press ENTER to toggle\"?: string;\n\t\"Loading\"?: string;\n\t\"%1 shown\"?: string;\n\t\"%1 hidden\"?: string;\n\n\t// Chart types\n\t\"Chart\"?: string;\n\t\"Serial chart\"?: string;\n\t\"X/Y chart\"?: string;\n\t\"Pie chart\"?: string;\n\t\"Sunburst chart\"?: string;\n\t\"Gauge chart\"?: string;\n\t\"Radar chart\"?: string;\n\t\"Sankey diagram\"?: string;\n\t\"Flow diagram\"?: string;\n\t\"Chord diagram\"?: string;\n\t\"TreeMap chart\"?: string;\n\t\"Force directed tree\"?: string;\n\t\"Sliced chart\"?: string;\n\n\t// Series types\n\t\"Series\"?: string;\n\t\"Candlestick Series\"?: string;\n\t\"OHLC Series\"?: string;\n\t\"Column Series\"?: string;\n\t\"Line Series\"?: string;\n\t\"Pie Slice Series\"?: string;\n\t\"Funnel Series\"?: string;\n\t\"Pyramid Series\"?: string;\n\t\"X/Y Series\"?: string;\n\n\t// Map-related\n\t\"Map\"?: string;\n\t\"Press ENTER to zoom in\"?: string;\n\t\"Press ENTER to zoom out\"?: string;\n\t\"Use arrow keys to zoom in and out\"?: string;\n\t\"Use plus and minus keys on your keyboard to zoom in and out\"?: string;\n\t\"Home\"?: string;\n\t\"Zoom level changed to %1\"?: string;\n\n\t// Export-related\n\t\"Export\"?: string;\n\t\"Image\"?: string;\n\t\"Data\"?: string;\n\t\"Print\"?: string;\n\t\"Press ENTER or use arrow keys to navigate\"?: string;\n\t\"Press ENTER to open\"?: string;\n\t\"Press ENTER to print.\"?: string;\n\t\"Press ENTER to export as %1.\"?: string;\n\t\"(Press ESC to close this message)\"?: string;\n\t\"Image Export Complete\"?: string;\n\t\"Export operation took longer than expected. Something might have gone wrong.\"?: string;\n\t\"Saved from\"?: string;\n\t\"PNG\"?: string;\n\t\"JPG\"?: string;\n\t\"GIF\"?: string;\n\t\"SVG\"?: string;\n\t\"PDF\"?: string;\n\t\"JSON\"?: string;\n\t\"CSV\"?: string;\n\t\"XLSX\"?: string;\n\t\"HTML\"?: string;\n\n\t// Scrollbar-related\n\t\"Use TAB to select grip buttons or left and right arrows to change selection\"?: string;\n\t\"Use left and right arrows to move selection\"?: string;\n\t\"Use left and right arrows to move left selection\"?: string;\n\t\"Use left and right arrows to move right selection\"?: string;\n\t\"Use TAB select grip buttons or up and down arrows to change selection\"?: string;\n\t\"Use up and down arrows to move selection\"?: string;\n\t\"Use up and down arrows to move lower selection\"?: string;\n\t\"Use up and down arrows to move upper selection\"?: string;\n\t\"From %1 to %2\"?: string;\n\t\"From %1\"?: string;\n\t\"To %1\"?: string;\n\n\t// Data loader-related\n\t\"No parser available for file: %1\"?: string;\n\t\"Error parsing file: %1\"?: string;\n\t\"Unable to load file: %1\"?: string;\n\t\"Invalid date\"?: string;\n\n\t// Common actions\n\t\"Close\"?: string;\n\t\"Minimize\"?: string;\n\n\t\"Venn Series\"?: string;\n\t\"Venn Diagram\"?: string;\n}\n\n/**\n * Defines functions that exist for the locale.\n *\n * @ignore\n */\nexport interface ILocaleFunctions {\n\t// ordinal function\n\t\"_dateOrd\": (day: number) => string;\n}\n\n/**\n * Defines all of the defaults for locale properties.\n * @ignore\n */\nexport interface ILocaleDefault extends ILocaleSettings, ILocaleFunctions { }\n\n/**\n * Defines locale interface.\n *\n * @ignore\n */\nexport interface ILocale extends Partial<ILocaleDefault> { };\n\nexport interface ILanguageSettings extends IEntitySettings {\n}\n\nexport interface ILanguagePrivate extends IEntityPrivate {\n\n\t/**\n\t * A locale for International English (default).\n\t */\n\tdefaultLocale: ILocale;\n\n}\n\n/**\n * Add localization functionality.\n */\nexport class Language extends Entity {\n\tdeclare public _settings: ILanguageSettings;\n\tdeclare public _privateSettings: ILanguagePrivate;\n\n\tprotected _setDefaults() {\n\t\tthis.setPrivate(\"defaultLocale\", en);\n\t\tsuper._setDefaults();\n\t}\n\n\t/**\n\t * Returns a prompt translation.\n\t * \n\t * @param   prompt   Prompt to translate\n\t * @param   locale   Target locale\n\t * @param   ...rest  Parameters\n\t * @return           Translation\n\t */\n\tpublic translate<Key extends keyof ILocaleSettings>(prompt: Key, locale?: ILocale, ...rest: Array<string>): string {\n\n\t\t// Get langauge\n\t\tif (!locale) {\n\t\t\tlocale = this._root.locale || this.getPrivate(\"defaultLocale\");\n\t\t}\n\n\t\t// Init translation\n\t\tlet translation: string = prompt;\n\t\tlet value = locale[prompt];\n\n\t\t// Try to look for the translation\n\t\tif (value === null) {\n\t\t\ttranslation = \"\";\n\t\t}\n\t\telse if (value != null) {\n\t\t\t// It might be an empty string\n\t\t\tif (value) {\n\t\t\t\ttranslation = <string>value!;\n\t\t\t}\n\t\t}\n\t\telse if (locale !== this.getPrivate(\"defaultLocale\")) {\n\t\t\t// Try to look in default language\n\t\t\treturn this.translate(prompt, this.getPrivate(\"defaultLocale\"), ...rest);\n\t\t}\n\n\t\t// Replace %1, %2, etc params\n\t\tif (rest.length) {\n\t\t\tfor (let len = rest.length, i = 0; i < len; ++i) {\n\t\t\t\ttranslation = translation.split(\"%\" + (i + 1)).join(rest[i]);\n\t\t\t}\n\t\t}\n\n\t\t// Return the translation\n\t\treturn translation;\n\t}\n\n\t/**\n\t * Returns a prompt translation, including custom prompts.\n\t * \n\t * @param   prompt   Prompt to translate\n\t * @param   locale   Target locale\n\t * @param   ...rest  Parameters\n\t * @return           Translation\n\t */\n\tpublic translateAny(prompt: string, locale?: ILocale, ...rest: Array<string>): string {\n\t\treturn this.translate(<any>prompt, locale, ...rest);\n\t}\n\n\t/**\n\t * Add a custom prompt to locale.\n\t *\n\t * @see {@link https://www.amcharts.com/docs/v5/concepts/locales/creating-translations/#Extending_locale_with_custom_prompts}\n\t * @param  prompt       Source prompt\n\t * @param  translation  Tanslation\n\t * @param  locale       Target locale\n\t */\n\tpublic setTranslationAny(prompt: string, translation: string, locale?: ILocale): void {\n\t\tconst localeTarget = locale || this._root.locale;\n\t\t(<any>localeTarget)[prompt] = translation;\n\t}\n\n\t/**\n\t * Add a batch of custom prompts.\n\t *\n\t * @since 5.3.3\n\t * @see {@link https://www.amcharts.com/docs/v5/concepts/locales/creating-translations/#Extending_locale_with_custom_prompts}\n\t * @param  translations  Translations\n\t * @param  locale        Target locale\n\t */\n\tpublic setTranslationsAny(translations: { [index: string]: any }, locale?: ILocale): void {\n\t\t$object.each(translations, (key, val) => {\n\t\t\tthis.setTranslationAny(key as string, val, locale);\n\t\t});\n\t}\n\n\tpublic translateEmpty<Key extends keyof ILocaleSettings>(prompt: Key, locale?: ILocale, ...rest: Array<string>): string {\n\t\tlet translation = this.translate(prompt, locale, ...rest);\n\t\treturn translation == prompt ? \"\" : translation;\n\t}\n\n\tpublic translateFunc<Key extends keyof ILocaleFunctions>(prompt: Key, locale?: ILocale): ILocaleFunctions[Key] {\n\n\t\tif ((<any>this._root.locale)[prompt]) {\n\t\t\treturn (<any>this._root.locale)[prompt];\n\t\t}\n\n\t\t// Try to look in default language\n\t\tif (locale !== this.getPrivate(\"defaultLocale\")) {\n\t\t\treturn this.translateFunc(prompt, this.getPrivate(\"defaultLocale\"));\n\t\t}\n\n\t\t// Fail - return empty function\n\t\treturn (): string => {\n\t\t\treturn \"\";\n\t\t};\n\t}\n\n\t/**\n\t * Translates a btach of prompts.\n\t * \n\t * @param  list    Array of prompts to translate\n\t * @param  locale  Target locale\n\t * @return         Array of translations\n\t */\n\tpublic translateAll<Key extends keyof ILocaleSettings>(list: Array<Key>, locale?: ILocale): Array<string> {\n\t\t// Translate all items in the list\n\t\tif (!this.isDefault()) {\n\t\t\treturn $array.map(list, (x) => this.translate(x, locale));\n\n\t\t} else {\n\t\t\treturn list;\n\t\t}\n\t}\n\n\t/**\n\t * Returns `true` if the currently selected locale is a default locale.\n\t *\n\t * @return `true` if locale is default; `false` if it is not.\n\t */\n\tpublic isDefault(): boolean {\n\t\treturn this.getPrivate(\"defaultLocale\") === this._root.locale;\n\t}\n\n}\n","/**\r\n * amCharts 5 locale\r\n *\r\n * Locale: en\r\n * Language: International English\r\n * Author: Martynas Majeris\r\n *\r\n * Follow instructions in [on this page](https://www.amcharts.com/docs/v5/tutorials/creating-translations/) to make corrections or add new translations.\r\n *\r\n * ---\r\n * Edit but leave the header section above this line. You can remove any\r\n * subsequent comment sections.\r\n * ---\r\n *\r\n * Use this file as a template to create translations. Leave the key part in\r\n * English intact. Fill the value with a translation.\r\n *\r\n * Empty string means no translation, so default \"International English\"\r\n * will be used.\r\n *\r\n * If you need the translation to literally be an empty string, use `null`\r\n * instead.\r\n *\r\n * IMPORTANT:\r\n * When translating make good effort to keep the translation length\r\n * at least the same chartcount as the English, especially for short prompts.\r\n *\r\n * Having significantly longer prompts may distort the actual charts.\r\n *\r\n * NOTE:\r\n * Some prompts - like months or weekdays - come in two versions: full and\r\n * shortened.\r\n *\r\n * If there's no official shortened version of these in your language, and it\r\n * would not be possible to invent such short versions that don't seem weird\r\n * to native speakers of that language, fill those with the same as full\r\n * version.\r\n *\r\n * PLACEHOLDERS:\r\n * Some prompts have placeholders like \"%1\". Those will be replaced by actual\r\n * values during translation and should be retained in the translated prompts.\r\n *\r\n * Placeholder positions may be changed to better suit structure of the\r\n * sentence.\r\n *\r\n * For example \"From %1 to %2\", when actually used will replace \"%1\" with an\r\n * actual value representing range start, and \"%2\" will be replaced by end\r\n * value.\r\n *\r\n * E.g. in a Scrollbar for Value axis \"From %1 to %2\" will become\r\n * \"From 100 to 200\". You may translate \"From\" and \"to\", as well as re-arrange\r\n * the order of the prompt itself, but make sure the \"%1\" and \"%2\" remain, in\r\n * places where they will make sense.\r\n *\r\n * Save the file as language_LOCALE, i.e. `en_GB.ts`, `fr_FR.ts`, etc.\r\n */\r\nexport default {\r\n    \"firstDayOfWeek\": 1,\r\n    // Number formatting options.\r\n    // \r\n    // Please check with the local standards which separator is accepted to be\r\n    // used for separating decimals, and which for thousands.\r\n    \"_decimalSeparator\": \".\",\r\n    \"_thousandSeparator\": \",\",\r\n    // Position of the percent sign in numbers\r\n    \"_percentPrefix\": null,\r\n    \"_percentSuffix\": \"%\",\r\n    // Suffixes for numbers\r\n    // When formatting numbers, big or small numers might be reformatted to\r\n    // shorter version, by applying a suffix.\r\n    // \r\n    // For example, 1000000 might become \"1m\".\r\n    // Or 1024 might become \"1KB\" if we're formatting byte numbers.\r\n    // \r\n    // This section defines such suffixes for all such cases.\r\n    \"_big_number_suffix_3\": \"k\",\r\n    \"_big_number_suffix_6\": \"M\",\r\n    \"_big_number_suffix_9\": \"G\",\r\n    \"_big_number_suffix_12\": \"T\",\r\n    \"_big_number_suffix_15\": \"P\",\r\n    \"_big_number_suffix_18\": \"E\",\r\n    \"_big_number_suffix_21\": \"Z\",\r\n    \"_big_number_suffix_24\": \"Y\",\r\n    \"_small_number_suffix_3\": \"m\",\r\n    \"_small_number_suffix_6\": \"μ\",\r\n    \"_small_number_suffix_9\": \"n\",\r\n    \"_small_number_suffix_12\": \"p\",\r\n    \"_small_number_suffix_15\": \"f\",\r\n    \"_small_number_suffix_18\": \"a\",\r\n    \"_small_number_suffix_21\": \"z\",\r\n    \"_small_number_suffix_24\": \"y\",\r\n    \"_byte_suffix_B\": \"B\",\r\n    \"_byte_suffix_KB\": \"KB\",\r\n    \"_byte_suffix_MB\": \"MB\",\r\n    \"_byte_suffix_GB\": \"GB\",\r\n    \"_byte_suffix_TB\": \"TB\",\r\n    \"_byte_suffix_PB\": \"PB\",\r\n    // Default date formats for various periods.\r\n    // \r\n    // This should reflect official or de facto formatting universally accepted\r\n    // in the country translation is being made for\r\n    // Available format codes here:\r\n    // https://www.amcharts.com/docs/v5/concepts/formatters/formatting-dates/#Format_codes\r\n    // \r\n    // This will be used when formatting date/time for particular granularity,\r\n    // e.g. \"_date_hour\" will be shown whenever we need to show time as hours.\r\n    // \r\n    // \"date\" is used as in default date format when showing standalone dates.\r\n    \"_date\": \"yyyy-MM-dd\",\r\n    \"_date_millisecond\": \"mm:ss SSS\",\r\n    \"_date_millisecond_full\": \"HH:mm:ss SSS\",\r\n    \"_date_second\": \"HH:mm:ss\",\r\n    \"_date_second_full\": \"HH:mm:ss\",\r\n    \"_date_minute\": \"HH:mm\",\r\n    \"_date_minute_full\": \"HH:mm - MMM dd, yyyy\",\r\n    \"_date_hour\": \"HH:mm\",\r\n    \"_date_hour_full\": \"HH:mm - MMM dd, yyyy\",\r\n    \"_date_day\": \"MMM dd\",\r\n    \"_date_day_full\": \"MMM dd, yyyy\",\r\n    \"_date_week\": \"ww\",\r\n    \"_date_week_full\": \"MMM dd, yyyy\",\r\n    \"_date_month\": \"MMM\",\r\n    \"_date_month_full\": \"MMM, yyyy\",\r\n    \"_date_year\": \"yyyy\",\r\n    // Default duration formats for various base units.\r\n    // \r\n    // This will be used by DurationFormatter to format numeric values into\r\n    // duration.\r\n    // \r\n    // Notice how each duration unit comes in several versions. This is to ensure\r\n    // that each base unit is shown correctly.\r\n    // \r\n    // For example, if we have baseUnit set to \"second\", meaning our duration is\r\n    // in seconds.\r\n    // \r\n    // If we pass in `50` to formatter, it will know that we have just 50 seconds\r\n    // (less than a minute) so it will use format in `\"_duration_second\"` (\"ss\"),\r\n    // and the formatted result will be in like `\"50\"`.\r\n    // \r\n    // If we pass in `70`, which is more than a minute, the formatter will switch\r\n    // to `\"_duration_second_minute\"` (\"mm:ss\"), resulting in \"01:10\" formatted\r\n    // text.\r\n    // \r\n    // Available codes here:\r\n    // https://www.amcharts.com/docs/v4/concepts/formatters/formatting-duration/#Available_Codes\r\n    \"_duration_millisecond\": \"SSS\",\r\n    \"_duration_millisecond_second\": \"ss.SSS\",\r\n    \"_duration_millisecond_minute\": \"mm:ss SSS\",\r\n    \"_duration_millisecond_hour\": \"hh:mm:ss SSS\",\r\n    \"_duration_millisecond_day\": \"d'd' mm:ss SSS\",\r\n    \"_duration_millisecond_week\": \"d'd' mm:ss SSS\",\r\n    \"_duration_millisecond_month\": \"M'm' dd'd' mm:ss SSS\",\r\n    \"_duration_millisecond_year\": \"y'y' MM'm' dd'd' mm:ss SSS\",\r\n    \"_duration_second\": \"ss\",\r\n    \"_duration_second_minute\": \"mm:ss\",\r\n    \"_duration_second_hour\": \"hh:mm:ss\",\r\n    \"_duration_second_day\": \"d'd' hh:mm:ss\",\r\n    \"_duration_second_week\": \"d'd' hh:mm:ss\",\r\n    \"_duration_second_month\": \"M'm' dd'd' hh:mm:ss\",\r\n    \"_duration_second_year\": \"y'y' MM'm' dd'd' hh:mm:ss\",\r\n    \"_duration_minute\": \"mm\",\r\n    \"_duration_minute_hour\": \"hh:mm\",\r\n    \"_duration_minute_day\": \"d'd' hh:mm\",\r\n    \"_duration_minute_week\": \"d'd' hh:mm\",\r\n    \"_duration_minute_month\": \"M'm' dd'd' hh:mm\",\r\n    \"_duration_minute_year\": \"y'y' MM'm' dd'd' hh:mm\",\r\n    \"_duration_hour\": \"hh'h'\",\r\n    \"_duration_hour_day\": \"d'd' hh'h'\",\r\n    \"_duration_hour_week\": \"d'd' hh'h'\",\r\n    \"_duration_hour_month\": \"M'm' dd'd' hh'h'\",\r\n    \"_duration_hour_year\": \"y'y' MM'm' dd'd' hh'h'\",\r\n    \"_duration_day\": \"d'd'\",\r\n    \"_duration_day_week\": \"d'd'\",\r\n    \"_duration_day_month\": \"M'm' dd'd'\",\r\n    \"_duration_day_year\": \"y'y' MM'm' dd'd'\",\r\n    \"_duration_week\": \"w'w'\",\r\n    \"_duration_week_month\": \"w'w'\",\r\n    \"_duration_week_year\": \"w'w'\",\r\n    \"_duration_month\": \"M'm'\",\r\n    \"_duration_month_year\": \"y'y' MM'm'\",\r\n    \"_duration_year\": \"y'y'\",\r\n    // Era translations\r\n    \"_era_ad\": \"AD\",\r\n    \"_era_bc\": \"BC\",\r\n    // Day part, used in 12-hour formats, e.g. 5 P.M.\r\n    // Please note that these come in 3 variants:\r\n    // * one letter (e.g. \"A\")\r\n    // * two letters (e.g. \"AM\")\r\n    // * two letters with dots (e.g. \"A.M.\")\r\n    // \r\n    // All three need to to be translated even if they are all the same. Some\r\n    // users might use one, some the other.\r\n    \"A\": \"\",\r\n    \"P\": \"\",\r\n    \"AM\": \"\",\r\n    \"PM\": \"\",\r\n    \"A.M.\": \"\",\r\n    \"P.M.\": \"\",\r\n    // Date-related stuff.\r\n    // \r\n    // When translating months, if there's a difference, use the form which is\r\n    // best for a full date, e.g. as you would use it in \"2018 January 1\".\r\n    // \r\n    // Note that May is listed twice. This is because in English May is the same\r\n    // in both long and short forms, while in other languages it may not be the\r\n    // case. Translate \"May\" to full word, while \"May(short)\" to shortened\r\n    // version.\r\n    // \r\n    // Should month names and weekdays be capitalized or not?\r\n    // \r\n    // Rule of thumb is this: if the names should always be capitalized,\r\n    // regardless of name position within date (\"January\", \"21st January 2018\",\r\n    // etc.) use capitalized names. Otherwise enter all lowercase.\r\n    // \r\n    // The date formatter will automatically capitalize names if they are the\r\n    // first (or only) word in resulting date.\r\n    \"January\": \"\",\r\n    \"February\": \"\",\r\n    \"March\": \"\",\r\n    \"April\": \"\",\r\n    \"May\": \"\",\r\n    \"June\": \"\",\r\n    \"July\": \"\",\r\n    \"August\": \"\",\r\n    \"September\": \"\",\r\n    \"October\": \"\",\r\n    \"November\": \"\",\r\n    \"December\": \"\",\r\n    \"Jan\": \"\",\r\n    \"Feb\": \"\",\r\n    \"Mar\": \"\",\r\n    \"Apr\": \"\",\r\n    \"May(short)\": \"May\",\r\n    \"Jun\": \"\",\r\n    \"Jul\": \"\",\r\n    \"Aug\": \"\",\r\n    \"Sep\": \"\",\r\n    \"Oct\": \"\",\r\n    \"Nov\": \"\",\r\n    \"Dec\": \"\",\r\n    // Weekdays.\r\n    \"Sunday\": \"\",\r\n    \"Monday\": \"\",\r\n    \"Tuesday\": \"\",\r\n    \"Wednesday\": \"\",\r\n    \"Thursday\": \"\",\r\n    \"Friday\": \"\",\r\n    \"Saturday\": \"\",\r\n    \"Sun\": \"\",\r\n    \"Mon\": \"\",\r\n    \"Tue\": \"\",\r\n    \"Wed\": \"\",\r\n    \"Thu\": \"\",\r\n    \"Fri\": \"\",\r\n    \"Sat\": \"\",\r\n    // Date ordinal function.\r\n    // \r\n    // This is used when adding number ordinal when formatting days in dates.\r\n    // \r\n    // E.g. \"January 1st\", \"February 2nd\".\r\n    // \r\n    // The function accepts day number, and returns a string to be added to the\r\n    // day, like in default English translation, if we pass in 2, we will receive\r\n    // \"nd\" back.\r\n    \"_dateOrd\": function (day) {\r\n        let res = \"th\";\r\n        if ((day < 11) || (day > 13)) {\r\n            switch (day % 10) {\r\n                case 1:\r\n                    res = \"st\";\r\n                    break;\r\n                case 2:\r\n                    res = \"nd\";\r\n                    break;\r\n                case 3:\r\n                    res = \"rd\";\r\n                    break;\r\n            }\r\n        }\r\n        return res;\r\n    },\r\n    // Various chart controls.\r\n    // Shown as a tooltip on zoom out button.\r\n    \"Zoom Out\": \"\",\r\n    // Timeline buttons\r\n    \"Play\": \"\",\r\n    \"Stop\": \"\",\r\n    // Chart's Legend screen reader title.\r\n    \"Legend\": \"\",\r\n    // Legend's item screen reader indicator.\r\n    \"Press ENTER to toggle\": \"\",\r\n    // Shown when the chart is busy loading something.\r\n    \"Loading\": \"\",\r\n    // Shown as the first button in the breadcrumb navigation, e.g.:\r\n    // Home > First level > ...\r\n    \"Home\": \"\",\r\n    // Chart types.\r\n    // Those are used as default screen reader titles for the main chart element\r\n    // unless developer has set some more descriptive title.\r\n    \"Chart\": \"\",\r\n    \"Serial chart\": \"\",\r\n    \"X/Y chart\": \"\",\r\n    \"Pie chart\": \"\",\r\n    \"Gauge chart\": \"\",\r\n    \"Radar chart\": \"\",\r\n    \"Sankey diagram\": \"\",\r\n    \"Flow diagram\": \"\",\r\n    \"Chord diagram\": \"\",\r\n    \"TreeMap chart\": \"\",\r\n    \"Force directed tree\": \"\",\r\n    \"Sliced chart\": \"\",\r\n    // Series types.\r\n    // Used to name series by type for screen readers if they do not have their\r\n    // name set.\r\n    \"Series\": \"\",\r\n    \"Candlestick Series\": \"\",\r\n    \"OHLC Series\": \"\",\r\n    \"Column Series\": \"\",\r\n    \"Line Series\": \"\",\r\n    \"Pie Slice Series\": \"\",\r\n    \"Funnel Series\": \"\",\r\n    \"Pyramid Series\": \"\",\r\n    \"X/Y Series\": \"\",\r\n    // Map-related stuff.\r\n    \"Map\": \"\",\r\n    \"Press ENTER to zoom in\": \"\",\r\n    \"Press ENTER to zoom out\": \"\",\r\n    \"Use arrow keys to zoom in and out\": \"\",\r\n    \"Use plus and minus keys on your keyboard to zoom in and out\": \"\",\r\n    // Export-related stuff.\r\n    // These prompts are used in Export menu labels.\r\n    // \r\n    // \"Export\" is the top-level menu item.\r\n    // \r\n    // \"Image\", \"Data\", \"Print\" as second-level indicating type of export\r\n    // operation.\r\n    // \r\n    // Leave actual format untranslated, unless you absolutely know that they\r\n    // would convey more meaning in some other way.\r\n    \"Export\": \"\",\r\n    \"Image\": \"\",\r\n    \"Data\": \"\",\r\n    \"Print\": \"\",\r\n    \"Press ENTER or use arrow keys to navigate\": \"\",\r\n    \"Press ENTER to open\": \"\",\r\n    \"Press ENTER to print.\": \"\",\r\n    \"Press ENTER to export as %1.\": \"\",\r\n    \"(Press ESC to close this message)\": \"\",\r\n    \"Image Export Complete\": \"\",\r\n    \"Export operation took longer than expected. Something might have gone wrong.\": \"\",\r\n    \"Saved from\": \"\",\r\n    \"PNG\": \"\",\r\n    \"JPG\": \"\",\r\n    \"GIF\": \"\",\r\n    \"SVG\": \"\",\r\n    \"PDF\": \"\",\r\n    \"JSON\": \"\",\r\n    \"CSV\": \"\",\r\n    \"XLSX\": \"\",\r\n    \"HTML\": \"\",\r\n    // Scrollbar-related stuff.\r\n    // \r\n    // Scrollbar is a control which can zoom and pan the axes on the chart.\r\n    // \r\n    // Each scrollbar has two grips: left or right (for horizontal scrollbar) or\r\n    // upper and lower (for vertical one).\r\n    // \r\n    // Prompts change in relation to whether Scrollbar is vertical or horizontal.\r\n    // \r\n    // The final section is used to indicate the current range of selection.\r\n    \"Use TAB to select grip buttons or left and right arrows to change selection\": \"\",\r\n    \"Use left and right arrows to move selection\": \"\",\r\n    \"Use left and right arrows to move left selection\": \"\",\r\n    \"Use left and right arrows to move right selection\": \"\",\r\n    \"Use TAB select grip buttons or up and down arrows to change selection\": \"\",\r\n    \"Use up and down arrows to move selection\": \"\",\r\n    \"Use up and down arrows to move lower selection\": \"\",\r\n    \"Use up and down arrows to move upper selection\": \"\",\r\n    \"From %1 to %2\": \"\",\r\n    \"From %1\": \"\",\r\n    \"To %1\": \"\",\r\n    // Data loader-related.\r\n    \"No parser available for file: %1\": \"\",\r\n    \"Error parsing file: %1\": \"\",\r\n    \"Unable to load file: %1\": \"\",\r\n    \"Invalid date\": \"\",\r\n    // Common actions\r\n    \"Close\": \"\",\r\n    \"Minimize\": \"\"\r\n};\r\n//# sourceMappingURL=en.js.map","/**\n * amCharts 5 locale\n * \n * Locale: en\n * Language: International English\n * Author: Martynas Majeris\n *\n * Follow instructions in [on this page](https://www.amcharts.com/docs/v5/tutorials/creating-translations/) to make corrections or add new translations.\n *\n * ---\n * Edit but leave the header section above this line. You can remove any\n * subsequent comment sections.\n * ---\n *\n * Use this file as a template to create translations. Leave the key part in\n * English intact. Fill the value with a translation.\n *\n * Empty string means no translation, so default \"International English\"\n * will be used.\n *\n * If you need the translation to literally be an empty string, use `null`\n * instead.\n *\n * IMPORTANT:\n * When translating make good effort to keep the translation length\n * at least the same chartcount as the English, especially for short prompts.\n *\n * Having significantly longer prompts may distort the actual charts.\n *\n * NOTE:\n * Some prompts - like months or weekdays - come in two versions: full and\n * shortened.\n *\n * If there's no official shortened version of these in your language, and it\n * would not be possible to invent such short versions that don't seem weird\n * to native speakers of that language, fill those with the same as full\n * version.\n *\n * PLACEHOLDERS:\n * Some prompts have placeholders like \"%1\". Those will be replaced by actual\n * values during translation and should be retained in the translated prompts.\n *\n * Placeholder positions may be changed to better suit structure of the\n * sentence.\n *\n * For example \"From %1 to %2\", when actually used will replace \"%1\" with an\n * actual value representing range start, and \"%2\" will be replaced by end\n * value.\n *\n * E.g. in a Scrollbar for Value axis \"From %1 to %2\" will become\n * \"From 100 to 200\". You may translate \"From\" and \"to\", as well as re-arrange\n * the order of the prompt itself, but make sure the \"%1\" and \"%2\" remain, in\n * places where they will make sense.\n *\n * Save the file as language_LOCALE, i.e. `en_GB.ts`, `fr_FR.ts`, etc.\n */\nexport default {\n\t\"firstDayOfWeek\": 1,\n\t\n\t// Number formatting options.\n\t// \n\t// Please check with the local standards which separator is accepted to be\n\t// used for separating decimals, and which for thousands.\n\t\"_decimalSeparator\": \".\",\n\t\"_thousandSeparator\": \",\",\n\n\t// Position of the percent sign in numbers\n\t\"_percentPrefix\": null,\n\t\"_percentSuffix\": \"%\",\n\n\t// Suffixes for numbers\n\t// When formatting numbers, big or small numers might be reformatted to\n\t// shorter version, by applying a suffix.\n\t// \n\t// For example, 1000000 might become \"1m\".\n\t// Or 1024 might become \"1KB\" if we're formatting byte numbers.\n\t// \n\t// This section defines such suffixes for all such cases.\n\t\"_big_number_suffix_3\": \"k\",\n\t\"_big_number_suffix_6\": \"M\",\n\t\"_big_number_suffix_9\": \"G\",\n\t\"_big_number_suffix_12\": \"T\",\n\t\"_big_number_suffix_15\": \"P\",\n\t\"_big_number_suffix_18\": \"E\",\n\t\"_big_number_suffix_21\": \"Z\",\n\t\"_big_number_suffix_24\": \"Y\",\n\n\t\"_small_number_suffix_3\": \"m\",\n\t\"_small_number_suffix_6\": \"μ\",\n\t\"_small_number_suffix_9\": \"n\",\n\t\"_small_number_suffix_12\": \"p\",\n\t\"_small_number_suffix_15\": \"f\",\n\t\"_small_number_suffix_18\": \"a\",\n\t\"_small_number_suffix_21\": \"z\",\n\t\"_small_number_suffix_24\": \"y\",\n\n\t\"_byte_suffix_B\": \"B\",\n\t\"_byte_suffix_KB\": \"KB\",\n\t\"_byte_suffix_MB\": \"MB\",\n\t\"_byte_suffix_GB\": \"GB\",\n\t\"_byte_suffix_TB\": \"TB\",\n\t\"_byte_suffix_PB\": \"PB\",\n\n\t// Default date formats for various periods.\n\t// \n\t// This should reflect official or de facto formatting universally accepted\n\t// in the country translation is being made for\n\t// Available format codes here:\n\t// https://www.amcharts.com/docs/v5/concepts/formatters/formatting-dates/#Format_codes\n\t// \n\t// This will be used when formatting date/time for particular granularity,\n\t// e.g. \"_date_hour\" will be shown whenever we need to show time as hours.\n\t// \n\t// \"date\" is used as in default date format when showing standalone dates.\n\t\"_date\": \"yyyy-MM-dd\",\n\t\"_date_millisecond\": \"mm:ss SSS\",\n\t\"_date_millisecond_full\": \"HH:mm:ss SSS\",\n\t\"_date_second\": \"HH:mm:ss\",\n\t\"_date_second_full\": \"HH:mm:ss\",\n\t\"_date_minute\": \"HH:mm\",\n\t\"_date_minute_full\": \"HH:mm - MMM dd, yyyy\",\n\t\"_date_hour\": \"HH:mm\",\n\t\"_date_hour_full\": \"HH:mm - MMM dd, yyyy\",\n\t\"_date_day\": \"MMM dd\",\n\t\"_date_day_full\": \"MMM dd, yyyy\",\n\t\"_date_week\": \"ww\",\n\t\"_date_week_full\": \"MMM dd, yyyy\",\n\t\"_date_month\": \"MMM\",\n\t\"_date_month_full\": \"MMM, yyyy\",\n\t\"_date_year\": \"yyyy\",\n\n\t// Default duration formats for various base units.\n\t// \n\t// This will be used by DurationFormatter to format numeric values into\n\t// duration.\n\t// \n\t// Notice how each duration unit comes in several versions. This is to ensure\n\t// that each base unit is shown correctly.\n\t// \n\t// For example, if we have baseUnit set to \"second\", meaning our duration is\n\t// in seconds.\n\t// \n\t// If we pass in `50` to formatter, it will know that we have just 50 seconds\n\t// (less than a minute) so it will use format in `\"_duration_second\"` (\"ss\"),\n\t// and the formatted result will be in like `\"50\"`.\n\t// \n\t// If we pass in `70`, which is more than a minute, the formatter will switch\n\t// to `\"_duration_second_minute\"` (\"mm:ss\"), resulting in \"01:10\" formatted\n\t// text.\n\t// \n\t// Available codes here:\n\t// https://www.amcharts.com/docs/v4/concepts/formatters/formatting-duration/#Available_Codes\n\t\"_duration_millisecond\": \"SSS\",\n\t\"_duration_millisecond_second\": \"ss.SSS\",\n\t\"_duration_millisecond_minute\": \"mm:ss SSS\",\n\t\"_duration_millisecond_hour\": \"hh:mm:ss SSS\",\n\t\"_duration_millisecond_day\": \"d'd' mm:ss SSS\",\n\t\"_duration_millisecond_week\": \"d'd' mm:ss SSS\",\n\t\"_duration_millisecond_month\": \"M'm' dd'd' mm:ss SSS\",\n\t\"_duration_millisecond_year\": \"y'y' MM'm' dd'd' mm:ss SSS\",\n\n\t\"_duration_second\": \"ss\",\n\t\"_duration_second_minute\": \"mm:ss\",\n\t\"_duration_second_hour\": \"hh:mm:ss\",\n\t\"_duration_second_day\": \"d'd' hh:mm:ss\",\n\t\"_duration_second_week\": \"d'd' hh:mm:ss\",\n\t\"_duration_second_month\": \"M'm' dd'd' hh:mm:ss\",\n\t\"_duration_second_year\": \"y'y' MM'm' dd'd' hh:mm:ss\",\n\n\t\"_duration_minute\": \"mm\",\n\t\"_duration_minute_hour\": \"hh:mm\",\n\t\"_duration_minute_day\": \"d'd' hh:mm\",\n\t\"_duration_minute_week\": \"d'd' hh:mm\",\n\t\"_duration_minute_month\": \"M'm' dd'd' hh:mm\",\n\t\"_duration_minute_year\": \"y'y' MM'm' dd'd' hh:mm\",\n\n\t\"_duration_hour\": \"hh'h'\",\n\t\"_duration_hour_day\": \"d'd' hh'h'\",\n\t\"_duration_hour_week\": \"d'd' hh'h'\",\n\t\"_duration_hour_month\": \"M'm' dd'd' hh'h'\",\n\t\"_duration_hour_year\": \"y'y' MM'm' dd'd' hh'h'\",\n\n\t\"_duration_day\": \"d'd'\",\n\t\"_duration_day_week\": \"d'd'\",\n\t\"_duration_day_month\": \"M'm' dd'd'\",\n\t\"_duration_day_year\": \"y'y' MM'm' dd'd'\",\n\n\t\"_duration_week\": \"w'w'\",\n\t\"_duration_week_month\": \"w'w'\",\n\t\"_duration_week_year\": \"w'w'\",\n\n\t\"_duration_month\": \"M'm'\",\n\t\"_duration_month_year\": \"y'y' MM'm'\",\n\n\t\"_duration_year\": \"y'y'\",\n\n\t// Era translations\n\t\"_era_ad\": \"AD\",\n\t\"_era_bc\": \"BC\",\n\n\t// Day part, used in 12-hour formats, e.g. 5 P.M.\n\t// Please note that these come in 3 variants:\n\t// * one letter (e.g. \"A\")\n\t// * two letters (e.g. \"AM\")\n\t// * two letters with dots (e.g. \"A.M.\")\n\t// \n\t// All three need to to be translated even if they are all the same. Some\n\t// users might use one, some the other.\n\t\"A\": \"\",\n\t\"P\": \"\",\n\t\"AM\": \"\",\n\t\"PM\": \"\",\n\t\"A.M.\": \"\",\n\t\"P.M.\": \"\",\n\n\t// Date-related stuff.\n\t// \n\t// When translating months, if there's a difference, use the form which is\n\t// best for a full date, e.g. as you would use it in \"2018 January 1\".\n\t// \n\t// Note that May is listed twice. This is because in English May is the same\n\t// in both long and short forms, while in other languages it may not be the\n\t// case. Translate \"May\" to full word, while \"May(short)\" to shortened\n\t// version.\n\t// \n\t// Should month names and weekdays be capitalized or not?\n\t// \n\t// Rule of thumb is this: if the names should always be capitalized,\n\t// regardless of name position within date (\"January\", \"21st January 2018\",\n\t// etc.) use capitalized names. Otherwise enter all lowercase.\n\t// \n\t// The date formatter will automatically capitalize names if they are the\n\t// first (or only) word in resulting date.\n\t\"January\": \"\",\n\t\"February\": \"\",\n\t\"March\": \"\",\n\t\"April\": \"\",\n\t\"May\": \"\",\n\t\"June\": \"\",\n\t\"July\": \"\",\n\t\"August\": \"\",\n\t\"September\": \"\",\n\t\"October\": \"\",\n\t\"November\": \"\",\n\t\"December\": \"\",\n\t\"Jan\": \"\",\n\t\"Feb\": \"\",\n\t\"Mar\": \"\",\n\t\"Apr\": \"\",\n\t\"May(short)\": \"May\",\n\t\"Jun\": \"\",\n\t\"Jul\": \"\",\n\t\"Aug\": \"\",\n\t\"Sep\": \"\",\n\t\"Oct\": \"\",\n\t\"Nov\": \"\",\n\t\"Dec\": \"\",\n\n\t// Weekdays.\n\t\"Sunday\": \"\",\n\t\"Monday\": \"\",\n\t\"Tuesday\": \"\",\n\t\"Wednesday\": \"\",\n\t\"Thursday\": \"\",\n\t\"Friday\": \"\",\n\t\"Saturday\": \"\",\n\t\"Sun\": \"\",\n\t\"Mon\": \"\",\n\t\"Tue\": \"\",\n\t\"Wed\": \"\",\n\t\"Thu\": \"\",\n\t\"Fri\": \"\",\n\t\"Sat\": \"\",\n\n\t// Date ordinal function.\n\t// \n\t// This is used when adding number ordinal when formatting days in dates.\n\t// \n\t// E.g. \"January 1st\", \"February 2nd\".\n\t// \n\t// The function accepts day number, and returns a string to be added to the\n\t// day, like in default English translation, if we pass in 2, we will receive\n\t// \"nd\" back.\n\t\"_dateOrd\": function(day: number): string {\n\t\tlet res = \"th\";\n\t\tif ((day < 11) || (day > 13)) {\n\t\t\tswitch (day % 10) {\n\t\t\t\tcase 1:\n\t\t\t\t\tres = \"st\";\n\t\t\t\t\tbreak;\n\t\t\t\tcase 2:\n\t\t\t\t\tres = \"nd\";\n\t\t\t\t\tbreak;\n\t\t\t\tcase 3:\n\t\t\t\t\tres = \"rd\"\n\t\t\t\t\tbreak;\n\t\t\t}\n\t\t}\n\t\treturn res;\n\t},\n\n\t// Various chart controls.\n\t// Shown as a tooltip on zoom out button.\n\t\"Zoom Out\": \"\",\n\n\t// Timeline buttons\n\t\"Play\": \"\",\n\t\"Stop\": \"\",\n\n\t// Chart's Legend screen reader title.\n\t\"Legend\": \"\",\n\n\t// Legend's item screen reader indicator.\n\t\"Press ENTER to toggle\": \"\",\n\n\t// Shown when the chart is busy loading something.\n\t\"Loading\": \"\",\n\n\t// Shown as the first button in the breadcrumb navigation, e.g.:\n\t// Home > First level > ...\n\t\"Home\": \"\",\n\n\t// Chart types.\n\t// Those are used as default screen reader titles for the main chart element\n\t// unless developer has set some more descriptive title.\n\t\"Chart\": \"\",\n\t\"Serial chart\": \"\",\n\t\"X/Y chart\": \"\",\n\t\"Pie chart\": \"\",\n\t\"Gauge chart\": \"\",\n\t\"Radar chart\": \"\",\n\t\"Sankey diagram\": \"\",\n\t\"Flow diagram\": \"\",\n\t\"Chord diagram\": \"\",\n\t\"TreeMap chart\": \"\",\n\t\"Force directed tree\": \"\",\n\t\"Sliced chart\": \"\",\n\n\t// Series types.\n\t// Used to name series by type for screen readers if they do not have their\n\t// name set.\n\t\"Series\": \"\",\n\t\"Candlestick Series\": \"\",\n\t\"OHLC Series\": \"\",\n\t\"Column Series\": \"\",\n\t\"Line Series\": \"\",\n\t\"Pie Slice Series\": \"\",\n\t\"Funnel Series\": \"\",\n\t\"Pyramid Series\": \"\",\n\t\"X/Y Series\": \"\",\n\n\t// Map-related stuff.\n\t\"Map\": \"\",\n\t\"Press ENTER to zoom in\": \"\",\n\t\"Press ENTER to zoom out\": \"\",\n\t\"Use arrow keys to zoom in and out\": \"\",\n\t\"Use plus and minus keys on your keyboard to zoom in and out\": \"\",\n\n\t// Export-related stuff.\n\t// These prompts are used in Export menu labels.\n\t// \n\t// \"Export\" is the top-level menu item.\n\t// \n\t// \"Image\", \"Data\", \"Print\" as second-level indicating type of export\n\t// operation.\n\t// \n\t// Leave actual format untranslated, unless you absolutely know that they\n\t// would convey more meaning in some other way.\n\t\"Export\": \"\",\n\t\"Image\": \"\",\n\t\"Data\": \"\",\n\t\"Print\": \"\",\n\t\"Press ENTER or use arrow keys to navigate\": \"\",\n\t\"Press ENTER to open\": \"\",\n\t\"Press ENTER to print.\": \"\",\n\t\"Press ENTER to export as %1.\": \"\",\n\t\"(Press ESC to close this message)\": \"\",\n\t\"Image Export Complete\": \"\",\n\t\"Export operation took longer than expected. Something might have gone wrong.\": \"\",\n\t\"Saved from\": \"\",\n\t\"PNG\": \"\",\n\t\"JPG\": \"\",\n\t\"GIF\": \"\",\n\t\"SVG\": \"\",\n\t\"PDF\": \"\",\n\t\"JSON\": \"\",\n\t\"CSV\": \"\",\n\t\"XLSX\": \"\",\n\t\"HTML\": \"\",\n\n\t// Scrollbar-related stuff.\n\t// \n\t// Scrollbar is a control which can zoom and pan the axes on the chart.\n\t// \n\t// Each scrollbar has two grips: left or right (for horizontal scrollbar) or\n\t// upper and lower (for vertical one).\n\t// \n\t// Prompts change in relation to whether Scrollbar is vertical or horizontal.\n\t// \n\t// The final section is used to indicate the current range of selection.\n\t\"Use TAB to select grip buttons or left and right arrows to change selection\": \"\",\n\t\"Use left and right arrows to move selection\": \"\",\n\t\"Use left and right arrows to move left selection\": \"\",\n\t\"Use left and right arrows to move right selection\": \"\",\n\t\"Use TAB select grip buttons or up and down arrows to change selection\": \"\",\n\t\"Use up and down arrows to move selection\": \"\",\n\t\"Use up and down arrows to move lower selection\": \"\",\n\t\"Use up and down arrows to move upper selection\": \"\",\n\t\"From %1 to %2\": \"\",\n\t\"From %1\": \"\",\n\t\"To %1\": \"\",\n\n\t// Data loader-related.\n\t\"No parser available for file: %1\": \"\",\n\t\"Error parsing file: %1\": \"\",\n\t\"Unable to load file: %1\": \"\",\n\t\"Invalid date\": \"\",\n\n\t// Common actions\n\t\"Close\": \"\",\n\t\"Minimize\": \"\"\n\n};","import { Theme } from \"../core/Theme\";\r\nimport { p100, p50 } from \"../core/util/Percent\";\r\nimport { Color } from \"../core/util/Color\";\r\nimport { GridLayout } from \"../core/render/GridLayout\";\r\nimport * as $ease from \"../core/util/Ease\";\r\n/**\r\n * @ignore\r\n */\r\nexport function setColor(rule, key, ic, name) {\r\n    // TODO this shouldn't use get, figure out a better way\r\n    rule.set(key, ic.get(name));\r\n    ic.on(name, (value) => {\r\n        rule.set(key, value);\r\n    });\r\n}\r\n/**\r\n * @ignore\r\n */\r\nexport class DefaultTheme extends Theme {\r\n    setupDefaultRules() {\r\n        super.setupDefaultRules();\r\n        const language = this._root.language;\r\n        const ic = this._root.interfaceColors;\r\n        const horizontalLayout = this._root.horizontalLayout;\r\n        const verticalLayout = this._root.verticalLayout;\r\n        const r = this.rule.bind(this);\r\n        /**\r\n         * ========================================================================\r\n         * core\r\n         * ========================================================================\r\n         */\r\n        r(\"InterfaceColors\").setAll({\r\n            stroke: Color.fromHex(0xe5e5e5),\r\n            fill: Color.fromHex(0xf3f3f3),\r\n            primaryButton: Color.fromHex(0x6794dc),\r\n            primaryButtonHover: Color.fromHex(0x6771dc),\r\n            primaryButtonDown: Color.fromHex(0x68dc76),\r\n            primaryButtonActive: Color.fromHex(0x68dc76),\r\n            primaryButtonDisabled: Color.fromHex(0xdadada),\r\n            primaryButtonTextDisabled: Color.fromHex(0xffffff),\r\n            primaryButtonText: Color.fromHex(0xffffff),\r\n            primaryButtonStroke: Color.fromHex(0xffffff),\r\n            secondaryButton: Color.fromHex(0xd9d9d9),\r\n            secondaryButtonHover: Color.fromHex(0xa3a3a3),\r\n            secondaryButtonDown: Color.fromHex(0x8d8d8d),\r\n            secondaryButtonActive: Color.fromHex(0xe6e6e6),\r\n            secondaryButtonText: Color.fromHex(0x000000),\r\n            secondaryButtonStroke: Color.fromHex(0xffffff),\r\n            grid: Color.fromHex(0x000000),\r\n            background: Color.fromHex(0xffffff),\r\n            alternativeBackground: Color.fromHex(0x000000),\r\n            text: Color.fromHex(0x000000),\r\n            alternativeText: Color.fromHex(0xffffff),\r\n            disabled: Color.fromHex(0xadadad),\r\n            positive: Color.fromHex(0x50b300),\r\n            negative: Color.fromHex(0xb30000)\r\n        });\r\n        {\r\n            const rule = r(\"ColorSet\");\r\n            rule.setAll({\r\n                passOptions: {\r\n                    hue: 0.05,\r\n                    saturation: 0,\r\n                    lightness: 0\r\n                },\r\n                colors: [\r\n                    Color.fromHex(0x67b7dc)\r\n                ],\r\n                step: 1,\r\n                //baseColor: Color.fromRGB(103, 183, 220),\r\n                //count: 20,\r\n                reuse: false,\r\n                startIndex: 0\r\n            });\r\n            rule.setPrivate(\"currentStep\", 0);\r\n            rule.setPrivate(\"currentPass\", 0);\r\n        }\r\n        r(\"Entity\").setAll({\r\n            stateAnimationDuration: 0,\r\n            stateAnimationEasing: $ease.out($ease.cubic)\r\n        });\r\n        r(\"Component\").setAll({\r\n            interpolationDuration: 0,\r\n            interpolationEasing: $ease.out($ease.cubic)\r\n        });\r\n        r(\"Sprite\").setAll({\r\n            visible: true,\r\n            scale: 1,\r\n            opacity: 1,\r\n            rotation: 0,\r\n            position: \"relative\",\r\n            tooltipX: p50,\r\n            tooltipY: p50,\r\n            tooltipPosition: \"fixed\",\r\n            isMeasured: true\r\n        });\r\n        r(\"Sprite\").states.create(\"default\", { \"visible\": true, opacity: 1 });\r\n        r(\"Container\").setAll({\r\n            interactiveChildren: true,\r\n            setStateOnChildren: false\r\n        });\r\n        r(\"Graphics\").setAll({\r\n            strokeWidth: 1\r\n        });\r\n        r(\"Chart\").setAll({\r\n            width: p100,\r\n            height: p100,\r\n            interactiveChildren: false\r\n        });\r\n        r(\"ZoomableContainer\").setAll({\r\n            width: p100,\r\n            height: p100,\r\n            wheelable: true,\r\n            pinchZoom: true,\r\n            maxZoomLevel: 32,\r\n            minZoomLevel: 1,\r\n            zoomStep: 2,\r\n            animationEasing: $ease.out($ease.cubic),\r\n            animationDuration: 600,\r\n            maxPanOut: 0.4\r\n        });\r\n        /**\r\n         * ------------------------------------------------------------------------\r\n         * core: alignment\r\n         * ------------------------------------------------------------------------\r\n         */\r\n        r(\"Sprite\", [\"horizontal\", \"center\"]).setAll({\r\n            centerX: p50,\r\n            x: p50\r\n        });\r\n        r(\"Sprite\", [\"vertical\", \"center\"]).setAll({\r\n            centerY: p50,\r\n            y: p50\r\n        });\r\n        r(\"Container\", [\"horizontal\", \"layout\"]).setAll({\r\n            layout: horizontalLayout\r\n        });\r\n        r(\"Container\", [\"vertical\", \"layout\"]).setAll({\r\n            layout: verticalLayout\r\n        });\r\n        /**\r\n         * ------------------------------------------------------------------------\r\n         * core: patterns\r\n         * ------------------------------------------------------------------------\r\n         */\r\n        r(\"Pattern\").setAll({\r\n            repetition: \"repeat\",\r\n            width: 50,\r\n            height: 50,\r\n            rotation: 0,\r\n            fillOpacity: 1\r\n        });\r\n        r(\"LinePattern\").setAll({\r\n            gap: 6,\r\n            colorOpacity: 1,\r\n            width: 49,\r\n            height: 49\r\n        });\r\n        r(\"RectanglePattern\").setAll({\r\n            gap: 6,\r\n            checkered: false,\r\n            centered: true,\r\n            maxWidth: 5,\r\n            maxHeight: 5,\r\n            width: 48,\r\n            height: 48,\r\n            strokeWidth: 0\r\n        });\r\n        r(\"CirclePattern\").setAll({\r\n            gap: 5,\r\n            checkered: false,\r\n            centered: false,\r\n            radius: 3,\r\n            strokeWidth: 0,\r\n            width: 45,\r\n            height: 45\r\n        });\r\n        r(\"GrainPattern\").setAll({\r\n            width: 200,\r\n            height: 200,\r\n            colors: [Color.fromHex(0x000000)],\r\n            size: 1,\r\n            horizontalGap: 0,\r\n            verticalGap: 0,\r\n            density: 1,\r\n            minOpacity: 0,\r\n            maxOpacity: 0.2\r\n        });\r\n        {\r\n            const rule = r(\"PatternSet\");\r\n            rule.setAll({\r\n                step: 1\r\n            });\r\n            setColor(rule, \"color\", ic, \"stroke\");\r\n        }\r\n        /**\r\n         * ------------------------------------------------------------------------\r\n         * core: gradients\r\n         * ------------------------------------------------------------------------\r\n         */\r\n        r(\"LinearGradient\").setAll({\r\n            rotation: 90\r\n        });\r\n        /**\r\n         * ------------------------------------------------------------------------\r\n         * core: Legend\r\n         * ------------------------------------------------------------------------\r\n         */\r\n        r(\"Legend\").setAll({\r\n            fillField: \"fill\",\r\n            strokeField: \"stroke\",\r\n            nameField: \"name\",\r\n            layout: GridLayout.new(this._root, {}),\r\n            layer: 30,\r\n            clickTarget: \"itemContainer\"\r\n        });\r\n        // Class: Container\r\n        r(\"Container\", [\"legend\", \"item\", \"itemcontainer\"]).setAll({\r\n            paddingLeft: 5,\r\n            paddingRight: 5,\r\n            paddingBottom: 5,\r\n            paddingTop: 5,\r\n            layout: horizontalLayout,\r\n            setStateOnChildren: true,\r\n            interactiveChildren: false,\r\n            ariaChecked: true,\r\n            focusable: true,\r\n            ariaLabel: language.translate(\"Press ENTER to toggle\"),\r\n            role: \"checkbox\"\r\n        });\r\n        {\r\n            const rule = r(\"Rectangle\", [\"legend\", \"item\", \"background\"]);\r\n            rule.setAll({\r\n                fillOpacity: 0,\r\n            });\r\n            setColor(rule, \"fill\", ic, \"background\");\r\n        }\r\n        r(\"Container\", [\"legend\", \"marker\"]).setAll({\r\n            setStateOnChildren: true,\r\n            centerY: p50,\r\n            paddingLeft: 0,\r\n            paddingRight: 0,\r\n            paddingBottom: 0,\r\n            paddingTop: 0,\r\n            width: 18,\r\n            height: 18\r\n        });\r\n        r(\"RoundedRectangle\", [\"legend\", \"marker\", \"rectangle\"]).setAll({\r\n            width: p100,\r\n            height: p100,\r\n            cornerRadiusBL: 3,\r\n            cornerRadiusTL: 3,\r\n            cornerRadiusBR: 3,\r\n            cornerRadiusTR: 3\r\n        });\r\n        {\r\n            const rule = r(\"RoundedRectangle\", [\"legend\", \"marker\", \"rectangle\"]).states.create(\"disabled\", {});\r\n            setColor(rule, \"fill\", ic, \"disabled\");\r\n            setColor(rule, \"stroke\", ic, \"disabled\");\r\n        }\r\n        r(\"Label\", [\"legend\", \"label\"]).setAll({\r\n            centerY: p50,\r\n            marginLeft: 5,\r\n            paddingRight: 0,\r\n            paddingLeft: 0,\r\n            paddingTop: 0,\r\n            paddingBottom: 0,\r\n            populateText: true\r\n        });\r\n        {\r\n            const rule = r(\"Label\", [\"legend\", \"label\"]).states.create(\"disabled\", {});\r\n            setColor(rule, \"fill\", ic, \"disabled\");\r\n        }\r\n        r(\"Label\", [\"legend\", \"value\", \"label\"]).setAll({\r\n            centerY: p50,\r\n            marginLeft: 5,\r\n            paddingRight: 0,\r\n            paddingLeft: 0,\r\n            paddingTop: 0,\r\n            paddingBottom: 0,\r\n            width: 50,\r\n            centerX: p100,\r\n            populateText: true\r\n        });\r\n        {\r\n            const rule = r(\"Label\", [\"legend\", \"value\", \"label\"]).states.create(\"disabled\", {});\r\n            setColor(rule, \"fill\", ic, \"disabled\");\r\n        }\r\n        /**\r\n         * ------------------------------------------------------------------------\r\n         * core: HeatLegend\r\n         * ------------------------------------------------------------------------\r\n         */\r\n        r(\"HeatLegend\").setAll({\r\n            stepCount: 1\r\n        });\r\n        r(\"RoundedRectangle\", [\"heatlegend\", \"marker\"]).setAll({\r\n            cornerRadiusTR: 0,\r\n            cornerRadiusBR: 0,\r\n            cornerRadiusTL: 0,\r\n            cornerRadiusBL: 0\r\n        });\r\n        r(\"RoundedRectangle\", [\"vertical\", \"heatlegend\", \"marker\"]).setAll({\r\n            height: p100,\r\n            width: 15\r\n        });\r\n        r(\"RoundedRectangle\", [\"horizontal\", \"heatlegend\", \"marker\"]).setAll({\r\n            width: p100,\r\n            height: 15\r\n        });\r\n        r(\"HeatLegend\", [\"vertical\"]).setAll({\r\n            height: p100\r\n        });\r\n        r(\"HeatLegend\", [\"horizontal\"]).setAll({\r\n            width: p100\r\n        });\r\n        r(\"Label\", [\"heatlegend\", \"start\"]).setAll({\r\n            paddingLeft: 5,\r\n            paddingRight: 5,\r\n            paddingTop: 5,\r\n            paddingBottom: 5\r\n        });\r\n        r(\"Label\", [\"heatlegend\", \"end\"]).setAll({\r\n            paddingLeft: 5,\r\n            paddingRight: 5,\r\n            paddingTop: 5,\r\n            paddingBottom: 5\r\n        });\r\n        /**\r\n         * ------------------------------------------------------------------------\r\n         * core: Labels\r\n         * ------------------------------------------------------------------------\r\n         */\r\n        {\r\n            const rule = r(\"Label\");\r\n            rule.setAll({\r\n                paddingTop: 8,\r\n                paddingBottom: 8,\r\n                paddingLeft: 10,\r\n                paddingRight: 10,\r\n                fontFamily: \"-apple-system, BlinkMacSystemFont, \\\"Segoe UI\\\", Roboto, Helvetica, Arial, sans-serif, \\\"Apple Color Emoji\\\", \\\"Segoe UI Emoji\\\", \\\"Segoe UI Symbol\\\"\",\r\n                fontSize: \"1em\",\r\n                populateText: false\r\n            });\r\n            setColor(rule, \"fill\", ic, \"text\");\r\n        }\r\n        r(\"RadialLabel\").setAll({\r\n            textType: \"regular\",\r\n            centerY: p50,\r\n            centerX: p50,\r\n            inside: false,\r\n            radius: 0,\r\n            baseRadius: p100,\r\n            orientation: \"auto\",\r\n            textAlign: \"center\"\r\n        });\r\n        r(\"EditableLabel\").setAll({\r\n            editOn: \"click\",\r\n            //setStateOnChildren: true,\r\n            themeTags: [\"editablelabel\"],\r\n            multiLine: true\r\n        });\r\n        r(\"RoundedRectangle\", [\"editablelabel\", \"background\"]).setAll({\r\n            fillOpacity: 0,\r\n            fill: Color.fromHex(0x000000),\r\n            cornerRadiusBL: 3,\r\n            cornerRadiusBR: 3,\r\n            cornerRadiusTL: 3,\r\n            cornerRadiusTR: 3,\r\n            strokeOpacity: 0,\r\n            stroke: Color.fromHex(0x000000)\r\n        });\r\n        {\r\n            r(\"RoundedRectangle\", [\"editablelabel\", \"background\"]).states.create(\"active\", {\r\n                strokeOpacity: 0.2,\r\n            });\r\n        }\r\n        /**\r\n         * ------------------------------------------------------------------------\r\n         * core: Elements and shapes\r\n         * ------------------------------------------------------------------------\r\n         */\r\n        r(\"RoundedRectangle\").setAll({\r\n            cornerRadiusTL: 8,\r\n            cornerRadiusBL: 8,\r\n            cornerRadiusTR: 8,\r\n            cornerRadiusBR: 8\r\n        });\r\n        r(\"PointedRectangle\").setAll({\r\n            pointerBaseWidth: 15,\r\n            pointerLength: 10,\r\n            cornerRadius: 8\r\n        });\r\n        r(\"Slice\").setAll({\r\n            shiftRadius: 0,\r\n            dRadius: 0,\r\n            dInnerRadius: 0\r\n        });\r\n        {\r\n            const rule = r(\"Tick\");\r\n            rule.setAll({\r\n                strokeOpacity: .15,\r\n                isMeasured: false,\r\n                length: 4.5,\r\n                position: \"absolute\",\r\n                crisp: true\r\n            });\r\n            setColor(rule, \"stroke\", ic, \"grid\");\r\n        }\r\n        r(\"Bullet\").setAll({\r\n            locationX: 0.5,\r\n            locationY: 0.5\r\n        });\r\n        /**\r\n         * ------------------------------------------------------------------------\r\n         * core: Tooltip\r\n         * ------------------------------------------------------------------------\r\n         */\r\n        r(\"Tooltip\").setAll({\r\n            position: \"absolute\",\r\n            getFillFromSprite: true,\r\n            getStrokeFromSprite: false,\r\n            autoTextColor: true,\r\n            paddingTop: 9,\r\n            paddingBottom: 8,\r\n            paddingLeft: 10,\r\n            paddingRight: 10,\r\n            marginBottom: 5,\r\n            pointerOrientation: \"vertical\",\r\n            centerX: p50,\r\n            centerY: p50,\r\n            animationEasing: $ease.out($ease.cubic),\r\n            exportable: false\r\n            //layer: 100\r\n        });\r\n        r(\"Polygon\").setAll({\r\n            animationEasing: $ease.out($ease.cubic),\r\n        });\r\n        {\r\n            const rule = r(\"PointedRectangle\", [\"tooltip\", \"background\"]);\r\n            rule.setAll({\r\n                strokeOpacity: 0.9,\r\n                cornerRadius: 4,\r\n                pointerLength: 4,\r\n                pointerBaseWidth: 8,\r\n                fillOpacity: 0.9,\r\n                stroke: Color.fromHex(0xffffff)\r\n            });\r\n        }\r\n        {\r\n            const rule = r(\"Label\", [\"tooltip\"]);\r\n            rule.setAll({\r\n                role: \"tooltip\",\r\n                populateText: true,\r\n                paddingRight: 0,\r\n                paddingTop: 0,\r\n                paddingLeft: 0,\r\n                paddingBottom: 0\r\n            });\r\n            setColor(rule, \"fill\", ic, \"alternativeText\");\r\n        }\r\n        /**\r\n         * ------------------------------------------------------------------------\r\n         * core: Button\r\n         * ------------------------------------------------------------------------\r\n         */\r\n        r(\"Button\").setAll({\r\n            paddingTop: 8,\r\n            paddingBottom: 8,\r\n            paddingLeft: 10,\r\n            paddingRight: 10,\r\n            interactive: true,\r\n            layout: horizontalLayout,\r\n            interactiveChildren: false,\r\n            setStateOnChildren: true,\r\n            focusable: true\r\n        });\r\n        r(\"Button\").states.create(\"hover\", {});\r\n        r(\"Button\").states.create(\"down\", { stateAnimationDuration: 0 });\r\n        r(\"Button\").states.create(\"active\", {});\r\n        r(\"Button\").states.create(\"disabled\", {\r\n            forceInactive: true\r\n        });\r\n        {\r\n            const rule = r(\"RoundedRectangle\", [\"button\", \"background\"]);\r\n            setColor(rule, \"fill\", ic, \"primaryButton\");\r\n            setColor(rule, \"stroke\", ic, \"primaryButtonStroke\");\r\n        }\r\n        {\r\n            const rule = r(\"RoundedRectangle\", [\"button\", \"background\"]).states.create(\"hover\", {});\r\n            setColor(rule, \"fill\", ic, \"primaryButtonHover\");\r\n        }\r\n        {\r\n            const rule = r(\"RoundedRectangle\", [\"button\", \"background\"]).states.create(\"down\", { stateAnimationDuration: 0 });\r\n            setColor(rule, \"fill\", ic, \"primaryButtonDown\");\r\n        }\r\n        {\r\n            const rule = r(\"RoundedRectangle\", [\"button\", \"background\"]).states.create(\"active\", {});\r\n            setColor(rule, \"fill\", ic, \"primaryButtonActive\");\r\n        }\r\n        {\r\n            const rule = r(\"RoundedRectangle\", [\"button\", \"background\"]).states.create(\"disabled\", {});\r\n            setColor(rule, \"fill\", ic, \"primaryButtonDisabled\");\r\n        }\r\n        {\r\n            const rule = r(\"Graphics\", [\"button\", \"icon\"]).states.create(\"disabled\", {});\r\n            setColor(rule, \"fill\", ic, \"primaryButtonTextDisabled\");\r\n        }\r\n        {\r\n            const rule = r(\"Label\", [\"button\"]).states.create(\"disabled\", {});\r\n            setColor(rule, \"fill\", ic, \"primaryButtonTextDisabled\");\r\n        }\r\n        {\r\n            const rule = r(\"Graphics\", [\"button\", \"icon\"]);\r\n            rule.setAll({\r\n                forceInactive: true\r\n            });\r\n            setColor(rule, \"stroke\", ic, \"primaryButtonText\");\r\n        }\r\n        {\r\n            const rule = r(\"Label\", [\"button\"]);\r\n            setColor(rule, \"fill\", ic, \"primaryButtonText\");\r\n        }\r\n        /**\r\n         * ------------------------------------------------------------------------\r\n         * charts/xy: ZoomOutButton\r\n         * ------------------------------------------------------------------------\r\n         */\r\n        r(\"Button\", [\"zoom\"]).setAll({\r\n            paddingTop: 18,\r\n            paddingBottom: 18,\r\n            paddingLeft: 12,\r\n            paddingRight: 12,\r\n            centerX: 46,\r\n            centerY: -10,\r\n            y: 0,\r\n            x: p100,\r\n            role: \"button\",\r\n            ariaLabel: language.translate(\"Zoom Out\"),\r\n            layer: 30\r\n        });\r\n        {\r\n            const rule = r(\"RoundedRectangle\", [\"background\", \"button\", \"zoom\"]);\r\n            rule.setAll({\r\n                cornerRadiusBL: 40,\r\n                cornerRadiusBR: 40,\r\n                cornerRadiusTL: 40,\r\n                cornerRadiusTR: 40\r\n            });\r\n            setColor(rule, \"fill\", ic, \"primaryButton\");\r\n        }\r\n        {\r\n            const rule = r(\"RoundedRectangle\", [\"background\", \"button\", \"zoom\"]).states.create(\"hover\", {});\r\n            setColor(rule, \"fill\", ic, \"primaryButtonHover\");\r\n        }\r\n        {\r\n            const rule = r(\"RoundedRectangle\", [\"background\", \"button\", \"zoom\"]).states.create(\"down\", { stateAnimationDuration: 0 });\r\n            setColor(rule, \"fill\", ic, \"primaryButtonDown\");\r\n        }\r\n        {\r\n            const rule = r(\"Graphics\", [\"icon\", \"button\", \"zoom\"]);\r\n            rule.setAll({\r\n                crisp: true,\r\n                strokeOpacity: 0.7,\r\n                draw: (display) => {\r\n                    display.moveTo(0, 0);\r\n                    display.lineTo(12, 0);\r\n                }\r\n            });\r\n            setColor(rule, \"stroke\", ic, \"primaryButtonText\");\r\n        }\r\n        /**\r\n         * ------------------------------------------------------------------------\r\n         * core: ResizeButton\r\n         * ------------------------------------------------------------------------\r\n         */\r\n        r(\"Button\", [\"resize\"]).setAll({\r\n            paddingTop: 9,\r\n            paddingBottom: 9,\r\n            paddingLeft: 13,\r\n            paddingRight: 13,\r\n            draggable: true,\r\n            centerX: p50,\r\n            centerY: p50,\r\n            position: \"absolute\",\r\n            role: \"slider\",\r\n            ariaValueMin: \"0\",\r\n            ariaValueMax: \"100\",\r\n            ariaLabel: language.translate(\"Use up and down arrows to move selection\")\r\n        });\r\n        {\r\n            const rule = r(\"RoundedRectangle\", [\"background\", \"resize\", \"button\"]);\r\n            rule.setAll({\r\n                cornerRadiusBL: 40,\r\n                cornerRadiusBR: 40,\r\n                cornerRadiusTL: 40,\r\n                cornerRadiusTR: 40\r\n            });\r\n            setColor(rule, \"fill\", ic, \"secondaryButton\");\r\n            setColor(rule, \"stroke\", ic, \"secondaryButtonStroke\");\r\n        }\r\n        {\r\n            const rule = r(\"RoundedRectangle\", [\"background\", \"resize\", \"button\"]).states.create(\"hover\", {});\r\n            setColor(rule, \"fill\", ic, \"secondaryButtonHover\");\r\n        }\r\n        {\r\n            const rule = r(\"RoundedRectangle\", [\"background\", \"resize\", \"button\"]).states.create(\"down\", { stateAnimationDuration: 0 });\r\n            setColor(rule, \"fill\", ic, \"secondaryButtonDown\");\r\n        }\r\n        {\r\n            const rule = r(\"Graphics\", [\"resize\", \"button\", \"icon\"]);\r\n            rule.setAll({\r\n                interactive: false,\r\n                crisp: true,\r\n                strokeOpacity: 0.5,\r\n                draw: (display) => {\r\n                    display.moveTo(0, 0.5);\r\n                    display.lineTo(0, 12.5);\r\n                    display.moveTo(4, 0.5);\r\n                    display.lineTo(4, 12.5);\r\n                }\r\n            });\r\n            setColor(rule, \"stroke\", ic, \"secondaryButtonText\");\r\n        }\r\n        r(\"Button\", [\"resize\", \"vertical\"]).setAll({\r\n            rotation: 90,\r\n            cursorOverStyle: \"ns-resize\"\r\n        });\r\n        r(\"Button\", [\"resize\", \"horizontal\"]).setAll({\r\n            cursorOverStyle: \"ew-resize\"\r\n        });\r\n        /**\r\n         * ------------------------------------------------------------------------\r\n         * core: PlayButton\r\n         * ------------------------------------------------------------------------\r\n         */\r\n        r(\"Button\", [\"play\"]).setAll({\r\n            paddingTop: 13,\r\n            paddingBottom: 13,\r\n            paddingLeft: 14,\r\n            paddingRight: 14,\r\n            ariaLabel: language.translate(\"Play\"),\r\n            toggleKey: \"active\"\r\n        });\r\n        {\r\n            const rule = r(\"RoundedRectangle\", [\"play\", \"background\"]);\r\n            rule.setAll({\r\n                strokeOpacity: 0.5,\r\n                cornerRadiusBL: 100,\r\n                cornerRadiusBR: 100,\r\n                cornerRadiusTL: 100,\r\n                cornerRadiusTR: 100\r\n            });\r\n            setColor(rule, \"fill\", ic, \"primaryButton\");\r\n        }\r\n        {\r\n            const rule = r(\"Graphics\", [\"play\", \"icon\"]);\r\n            rule.setAll({\r\n                stateAnimationDuration: 0,\r\n                dx: 1,\r\n                draw: (display) => {\r\n                    display.moveTo(0, -5);\r\n                    display.lineTo(8, 0);\r\n                    display.lineTo(0, 5);\r\n                    display.lineTo(0, -5);\r\n                }\r\n            });\r\n            setColor(rule, \"fill\", ic, \"primaryButtonText\");\r\n        }\r\n        r(\"Graphics\", [\"play\", \"icon\"]).states.create(\"default\", {\r\n            stateAnimationDuration: 0\r\n        });\r\n        r(\"Graphics\", [\"play\", \"icon\"]).states.create(\"active\", {\r\n            stateAnimationDuration: 0,\r\n            draw: (display) => {\r\n                display.moveTo(-4, -5);\r\n                display.lineTo(-1, -5);\r\n                display.lineTo(-1, 5);\r\n                display.lineTo(-4, 5);\r\n                display.lineTo(-4, -5);\r\n                display.moveTo(4, -5);\r\n                display.lineTo(1, -5);\r\n                display.lineTo(1, 5);\r\n                display.lineTo(4, 5);\r\n                display.lineTo(4, -5);\r\n            }\r\n        });\r\n        /**\r\n         * ------------------------------------------------------------------------\r\n         * core: SwitchButton\r\n         * ------------------------------------------------------------------------\r\n         */\r\n        r(\"Button\", [\"switch\"]).setAll({\r\n            paddingTop: 4,\r\n            paddingBottom: 4,\r\n            paddingLeft: 4,\r\n            paddingRight: 4,\r\n            ariaLabel: language.translate(\"Press ENTER to toggle\"),\r\n            toggleKey: \"active\",\r\n            width: 40,\r\n            height: 24,\r\n            layout: null\r\n        });\r\n        {\r\n            const rule = r(\"RoundedRectangle\", [\"switch\", \"background\"]);\r\n            rule.setAll({\r\n                strokeOpacity: 0.5,\r\n                cornerRadiusBL: 100,\r\n                cornerRadiusBR: 100,\r\n                cornerRadiusTL: 100,\r\n                cornerRadiusTR: 100\r\n            });\r\n            setColor(rule, \"fill\", ic, \"primaryButton\");\r\n        }\r\n        {\r\n            const rule = r(\"Circle\", [\"switch\", \"icon\"]);\r\n            rule.setAll({\r\n                radius: 8,\r\n                centerY: 0,\r\n                centerX: 0,\r\n                dx: 0\r\n            });\r\n            setColor(rule, \"fill\", ic, \"primaryButtonText\");\r\n        }\r\n        r(\"Graphics\", [\"switch\", \"icon\"]).states.create(\"active\", {\r\n            dx: 16\r\n        });\r\n        /**\r\n         * ------------------------------------------------------------------------\r\n         * core: Scrollbar\r\n         * ------------------------------------------------------------------------\r\n         */\r\n        r(\"Scrollbar\").setAll({\r\n            start: 0,\r\n            end: 1,\r\n            layer: 30,\r\n            animationEasing: $ease.out($ease.cubic)\r\n        });\r\n        r(\"Scrollbar\", [\"vertical\"]).setAll({\r\n            marginRight: 13,\r\n            marginLeft: 13,\r\n            minWidth: 12,\r\n            height: p100\r\n        });\r\n        r(\"Scrollbar\", [\"horizontal\"]).setAll({\r\n            marginTop: 13,\r\n            marginBottom: 13,\r\n            minHeight: 12,\r\n            width: p100\r\n        });\r\n        this.rule(\"Button\", [\"scrollbar\"]).setAll({\r\n            exportable: false\r\n        });\r\n        {\r\n            const rule = r(\"RoundedRectangle\", [\"scrollbar\", \"main\", \"background\"]);\r\n            rule.setAll({\r\n                cornerRadiusTL: 8,\r\n                cornerRadiusBL: 8,\r\n                cornerRadiusTR: 8,\r\n                cornerRadiusBR: 8,\r\n                fillOpacity: 0.8,\r\n            });\r\n            setColor(rule, \"fill\", ic, \"fill\");\r\n        }\r\n        {\r\n            const rule = r(\"RoundedRectangle\", [\"scrollbar\", \"thumb\"]);\r\n            rule.setAll({\r\n                role: \"slider\",\r\n                ariaLive: \"polite\",\r\n                position: \"absolute\",\r\n                draggable: true\r\n            });\r\n            setColor(rule, \"fill\", ic, \"secondaryButton\");\r\n        }\r\n        {\r\n            const rule = r(\"RoundedRectangle\", [\"scrollbar\", \"thumb\"]).states.create(\"hover\", {});\r\n            setColor(rule, \"fill\", ic, \"secondaryButtonHover\");\r\n        }\r\n        {\r\n            const rule = r(\"RoundedRectangle\", [\"scrollbar\", \"thumb\"]).states.create(\"down\", { stateAnimationDuration: 0 });\r\n            setColor(rule, \"fill\", ic, \"secondaryButtonDown\");\r\n        }\r\n        r(\"RoundedRectangle\", [\"scrollbar\", \"thumb\", \"vertical\"]).setAll({\r\n            x: p50,\r\n            width: p100,\r\n            centerX: p50,\r\n            ariaLabel: language.translate(\"Use up and down arrows to move selection\")\r\n        });\r\n        r(\"RoundedRectangle\", [\"scrollbar\", \"thumb\", \"horizontal\"]).setAll({\r\n            y: p50,\r\n            centerY: p50,\r\n            height: p100,\r\n            ariaLabel: language.translate(\"Use left and right arrows to move selection\")\r\n        });\r\n        // @todo: is this needed? used to be \"ContentScrollbar\"\r\n        // r(\"Scrollbar\", [\"content?\"]).setAll({\r\n        // \tmarginRight: 0,\r\n        // \tmarginLeft: 5,\r\n        // \tlayer: 5\r\n        // });\r\n        /**\r\n         * ========================================================================\r\n         * charts/xy\r\n         * ========================================================================\r\n         *\r\n         * This needs to be in DefaultTheme because it's the only theme that is\r\n         * automatically applied to Root, and tooltips different ancestors\r\n         * than actual charts using them.\r\n         */\r\n        {\r\n            const rule = r(\"PointedRectangle\", [\"axis\", \"tooltip\", \"background\"]);\r\n            rule.setAll({\r\n                cornerRadius: 0\r\n            });\r\n            setColor(rule, \"fill\", ic, \"alternativeBackground\");\r\n        }\r\n        r(\"Label\", [\"axis\", \"tooltip\"]).setAll({\r\n            role: undefined\r\n        });\r\n        r(\"Label\", [\"axis\", \"tooltip\", \"y\"]).setAll({\r\n            textAlign: \"right\"\r\n        });\r\n        r(\"Label\", [\"axis\", \"tooltip\", \"y\", \"opposite\"]).setAll({\r\n            textAlign: \"left\"\r\n        });\r\n        r(\"Label\", [\"axis\", \"tooltip\", \"x\"]).setAll({\r\n            textAlign: \"center\"\r\n        });\r\n        r(\"Tooltip\", [\"categoryaxis\"]).setAll({\r\n            labelText: \"{category}\"\r\n        });\r\n        /**\r\n         * ------------------------------------------------------------------------\r\n         * Shapes\r\n         * ------------------------------------------------------------------------\r\n         */\r\n        // Class: Graphics\r\n        r(\"Star\").setAll({\r\n            spikes: 5,\r\n            innerRadius: 5,\r\n            radius: 10\r\n        });\r\n        // STOCK\r\n        r(\"Tooltip\", [\"stock\"]).setAll({\r\n            paddingTop: 6,\r\n            paddingBottom: 5,\r\n            paddingLeft: 7,\r\n            paddingRight: 7\r\n        });\r\n        r(\"PointedRectangle\", [\"tooltip\", \"stock\", \"axis\"]).setAll({\r\n            pointerLength: 0,\r\n            pointerBaseWidth: 0,\r\n            cornerRadius: 3\r\n        });\r\n        r(\"Label\", [\"tooltip\", \"stock\"]).setAll({\r\n            fontSize: \"0.8em\"\r\n        });\r\n        // resizer\r\n        r(\"SpriteResizer\").setAll({\r\n            rotationStep: 10,\r\n            isMeasured: false\r\n        });\r\n        {\r\n            const rule = r(\"Container\", [\"resizer\", \"grip\"]);\r\n            rule.states.create(\"hover\", {});\r\n        }\r\n        {\r\n            const rule = r(\"RoundedRectangle\", [\"resizer\", \"grip\"]);\r\n            rule.setAll({\r\n                strokeOpacity: 0.7,\r\n                strokeWidth: 1,\r\n                fillOpacity: 1,\r\n                width: 12,\r\n                height: 12\r\n            });\r\n            setColor(rule, \"fill\", ic, \"background\");\r\n            setColor(rule, \"stroke\", ic, \"alternativeBackground\");\r\n        }\r\n        {\r\n            const rule = r(\"RoundedRectangle\", [\"resizer\", \"grip\", \"outline\"]);\r\n            rule.setAll({\r\n                strokeOpacity: 0,\r\n                fillOpacity: 0,\r\n                width: 20,\r\n                height: 20\r\n            });\r\n            rule.states.create(\"hover\", {\r\n                fillOpacity: 0.3\r\n            });\r\n            setColor(rule, \"fill\", ic, \"alternativeBackground\");\r\n        }\r\n        r(\"RoundedRectangle\", [\"resizer\", \"grip\", \"left\"]).setAll({\r\n            cornerRadiusBL: 0,\r\n            cornerRadiusBR: 0,\r\n            cornerRadiusTL: 0,\r\n            cornerRadiusTR: 0\r\n        });\r\n        r(\"RoundedRectangle\", [\"resizer\", \"grip\", \"right\"]).setAll({\r\n            cornerRadiusBL: 0,\r\n            cornerRadiusBR: 0,\r\n            cornerRadiusTL: 0,\r\n            cornerRadiusTR: 0\r\n        });\r\n        {\r\n            const rule = r(\"Rectangle\", [\"resizer\", \"rectangle\"]);\r\n            rule.setAll({\r\n                strokeDasharray: [2, 2],\r\n                strokeOpacity: 0.5,\r\n                strokeWidth: 1\r\n            });\r\n            setColor(rule, \"stroke\", ic, \"alternativeBackground\");\r\n        }\r\n        r(\"Graphics\", [\"button\", \"plus\", \"icon\"]).setAll({\r\n            x: p50,\r\n            y: p50,\r\n            draw: (display) => {\r\n                display.moveTo(-4, 0);\r\n                display.lineTo(4, 0);\r\n                display.moveTo(0, -4);\r\n                display.lineTo(0, 4);\r\n            }\r\n        });\r\n        r(\"Graphics\", [\"button\", \"minus\", \"icon\"]).setAll({\r\n            x: p50,\r\n            y: p50,\r\n            draw: (display) => {\r\n                display.moveTo(-4, 0);\r\n                display.lineTo(4, 0);\r\n            }\r\n        });\r\n        r(\"Graphics\", [\"button\", \"home\", \"icon\"]).setAll({\r\n            x: p50,\r\n            y: p50,\r\n            svgPath: \"M 8 -1 L 6 -1 L 6 7 L 2 7 L 2 1 L -2 1 L -2 7 L -6 7 L -6 -1 L -8 -1 L 0 -9 L 8 -1 Z M 8 -1\"\r\n        });\r\n        r(\"Button\", [\"zoomtools\"]).setAll({\r\n            marginTop: 1,\r\n            marginBottom: 2\r\n        });\r\n        r(\"ZoomTools\").setAll({\r\n            x: p100,\r\n            centerX: p100,\r\n            y: p100,\r\n            centerY: p100,\r\n            paddingRight: 10,\r\n            paddingBottom: 10\r\n        });\r\n    }\r\n}\r\n//# sourceMappingURL=DefaultTheme.js.map","import type { InterfaceColors, IInterfaceColorsSettings } from \"../core/util/InterfaceColors\";\n\nimport { Theme } from \"../core/Theme\";\nimport { p100, p50 } from \"../core/util/Percent\";\nimport { Color } from \"../core/util/Color\";\nimport { GridLayout } from \"../core/render/GridLayout\";\n\nimport * as $ease from \"../core/util/Ease\";\n\n\ninterface Settable<A> {\n\t_settings: A;\n\tset<K extends keyof A>(key: K, value: A[K]): void;\n}\n\n/**\n * @ignore\n */\nexport function setColor<A, K extends keyof A>(rule: Settable<A>, key: K, ic: InterfaceColors, name: keyof IInterfaceColorsSettings) {\n\t// TODO this shouldn't use get, figure out a better way\n\trule.set(key, ic.get(name) as any);\n\n\tic.on(name, (value) => {\n\t\trule.set(key, value as any);\n\t});\n}\n\n/**\n * @ignore\n */\nexport class DefaultTheme extends Theme {\n\tprotected setupDefaultRules() {\n\t\tsuper.setupDefaultRules();\n\n\t\tconst language = this._root.language;\n\n\t\tconst ic = this._root.interfaceColors;\n\n\t\tconst horizontalLayout = this._root.horizontalLayout;\n\t\tconst verticalLayout = this._root.verticalLayout;\n\n\t\tconst r = this.rule.bind(this);\n\n\n\t\t/**\n\t\t * ========================================================================\n\t\t * core\n\t\t * ========================================================================\n\t\t */\n\n\t\tr(\"InterfaceColors\").setAll({\n\t\t\tstroke: Color.fromHex(0xe5e5e5),\n\t\t\tfill: Color.fromHex(0xf3f3f3),\n\t\t\tprimaryButton: Color.fromHex(0x6794dc),\n\t\t\tprimaryButtonHover: Color.fromHex(0x6771dc),\n\t\t\tprimaryButtonDown: Color.fromHex(0x68dc76),\n\t\t\tprimaryButtonActive: Color.fromHex(0x68dc76),\n\t\t\tprimaryButtonDisabled: Color.fromHex(0xdadada),\n\t\t\tprimaryButtonTextDisabled: Color.fromHex(0xffffff),\n\t\t\tprimaryButtonText: Color.fromHex(0xffffff),\n\t\t\tprimaryButtonStroke: Color.fromHex(0xffffff),\n\t\t\tsecondaryButton: Color.fromHex(0xd9d9d9),\n\t\t\tsecondaryButtonHover: Color.fromHex(0xa3a3a3),\n\t\t\tsecondaryButtonDown: Color.fromHex(0x8d8d8d),\n\t\t\tsecondaryButtonActive: Color.fromHex(0xe6e6e6),\n\t\t\tsecondaryButtonText: Color.fromHex(0x000000),\n\t\t\tsecondaryButtonStroke: Color.fromHex(0xffffff),\n\t\t\tgrid: Color.fromHex(0x000000),\n\t\t\tbackground: Color.fromHex(0xffffff),\n\t\t\talternativeBackground: Color.fromHex(0x000000),\n\t\t\ttext: Color.fromHex(0x000000),\n\t\t\talternativeText: Color.fromHex(0xffffff),\n\t\t\tdisabled: Color.fromHex(0xadadad),\n\t\t\tpositive: Color.fromHex(0x50b300),\n\t\t\tnegative: Color.fromHex(0xb30000)\n\t\t});\n\n\t\t{\n\t\t\tconst rule = r(\"ColorSet\");\n\n\t\t\trule.setAll({\n\t\t\t\tpassOptions: {\n\t\t\t\t\thue: 0.05,\n\t\t\t\t\tsaturation: 0,\n\t\t\t\t\tlightness: 0\n\t\t\t\t},\n\t\t\t\tcolors: [\n\t\t\t\t\tColor.fromHex(0x67b7dc)\n\t\t\t\t],\n\t\t\t\tstep: 1,\n\t\t\t\t//baseColor: Color.fromRGB(103, 183, 220),\n\t\t\t\t//count: 20,\n\t\t\t\treuse: false,\n\t\t\t\tstartIndex: 0\n\t\t\t});\n\n\t\t\trule.setPrivate(\"currentStep\", 0);\n\t\t\trule.setPrivate(\"currentPass\", 0);\n\t\t}\n\n\t\tr(\"Entity\").setAll({\n\t\t\tstateAnimationDuration: 0,\n\t\t\tstateAnimationEasing: $ease.out($ease.cubic)\n\t\t});\n\n\t\tr(\"Component\").setAll({\n\t\t\tinterpolationDuration: 0,\n\t\t\tinterpolationEasing: $ease.out($ease.cubic)\n\t\t});\n\n\t\tr(\"Sprite\").setAll({\n\t\t\tvisible: true,\n\t\t\tscale: 1,\n\t\t\topacity: 1,\n\t\t\trotation: 0,\n\t\t\tposition: \"relative\",\n\t\t\ttooltipX: p50,\n\t\t\ttooltipY: p50,\n\t\t\ttooltipPosition: \"fixed\",\n\t\t\tisMeasured: true\n\t\t});\n\n\t\tr(\"Sprite\").states.create(\"default\", { \"visible\": true, opacity: 1 });\n\n\t\tr(\"Container\").setAll({\n\t\t\tinteractiveChildren: true,\n\t\t\tsetStateOnChildren: false\n\t\t});\n\n\t\tr(\"Graphics\").setAll({\n\t\t\tstrokeWidth: 1\n\t\t});\n\n\n\t\tr(\"Chart\").setAll({\n\t\t\twidth: p100,\n\t\t\theight: p100,\n\t\t\tinteractiveChildren: false\n\t\t});\n\n\t\tr(\"ZoomableContainer\").setAll({\n\t\t\twidth: p100,\n\t\t\theight: p100,\n\t\t\twheelable: true,\n\t\t\tpinchZoom: true,\n\t\t\tmaxZoomLevel: 32,\n\t\t\tminZoomLevel: 1,\n\t\t\tzoomStep: 2,\n\t\t\tanimationEasing: $ease.out($ease.cubic),\n\t\t\tanimationDuration: 600,\n\t\t\tmaxPanOut: 0.4\n\t\t});\n\n\n\t\t/**\n\t\t * ------------------------------------------------------------------------\n\t\t * core: alignment\n\t\t * ------------------------------------------------------------------------\n\t\t */\n\n\t\tr(\"Sprite\", [\"horizontal\", \"center\"]).setAll({\n\t\t\tcenterX: p50,\n\t\t\tx: p50\n\t\t});\n\n\t\tr(\"Sprite\", [\"vertical\", \"center\"]).setAll({\n\t\t\tcenterY: p50,\n\t\t\ty: p50\n\t\t});\n\n\t\tr(\"Container\", [\"horizontal\", \"layout\"]).setAll({\n\t\t\tlayout: horizontalLayout\n\t\t});\n\n\t\tr(\"Container\", [\"vertical\", \"layout\"]).setAll({\n\t\t\tlayout: verticalLayout\n\t\t});\n\n\t\t/**\n\t\t * ------------------------------------------------------------------------\n\t\t * core: patterns\n\t\t * ------------------------------------------------------------------------\n\t\t */\n\n\t\tr(\"Pattern\").setAll({\n\t\t\trepetition: \"repeat\",\n\t\t\twidth: 50,\n\t\t\theight: 50,\n\t\t\trotation: 0,\n\t\t\tfillOpacity: 1\n\t\t});\n\n\t\tr(\"LinePattern\").setAll({\n\t\t\tgap: 6,\n\t\t\tcolorOpacity: 1,\n\t\t\twidth: 49,\n\t\t\theight: 49\n\t\t});\n\n\t\tr(\"RectanglePattern\").setAll({\n\t\t\tgap: 6,\n\t\t\tcheckered: false,\n\t\t\tcentered: true,\n\t\t\tmaxWidth: 5,\n\t\t\tmaxHeight: 5,\n\t\t\twidth: 48,\n\t\t\theight: 48,\n\t\t\tstrokeWidth: 0\n\t\t});\n\n\t\tr(\"CirclePattern\").setAll({\n\t\t\tgap: 5,\n\t\t\tcheckered: false,\n\t\t\tcentered: false,\n\t\t\tradius: 3,\n\t\t\tstrokeWidth: 0,\n\t\t\twidth: 45,\n\t\t\theight: 45\n\t\t});\n\n\t\tr(\"GrainPattern\").setAll({\n\t\t\twidth: 200,\n\t\t\theight: 200,\n\t\t\tcolors: [Color.fromHex(0x000000)],\n\t\t\tsize: 1,\n\t\t\thorizontalGap: 0,\n\t\t\tverticalGap: 0,\n\t\t\tdensity: 1,\n\t\t\tminOpacity: 0,\n\t\t\tmaxOpacity: 0.2\n\t\t});\n\n\t\t{\n\t\t\tconst rule = r(\"PatternSet\");\n\n\t\t\trule.setAll({\n\t\t\t\tstep: 1\n\t\t\t});\n\n\t\t\tsetColor(rule, \"color\", ic, \"stroke\");\n\t\t}\n\n\n\t\t/**\n\t\t * ------------------------------------------------------------------------\n\t\t * core: gradients\n\t\t * ------------------------------------------------------------------------\n\t\t */\n\n\t\tr(\"LinearGradient\").setAll({\n\t\t\trotation: 90\n\t\t});\n\n\n\t\t/**\n\t\t * ------------------------------------------------------------------------\n\t\t * core: Legend\n\t\t * ------------------------------------------------------------------------\n\t\t */\n\n\t\tr(\"Legend\").setAll({\n\t\t\tfillField: \"fill\",\n\t\t\tstrokeField: \"stroke\",\n\t\t\tnameField: \"name\",\n\t\t\tlayout: GridLayout.new(this._root, {}),\n\t\t\tlayer: 30,\n\t\t\tclickTarget: \"itemContainer\"\n\t\t});\n\n\t\t// Class: Container\n\t\tr(\"Container\", [\"legend\", \"item\", \"itemcontainer\"]).setAll({\n\t\t\tpaddingLeft: 5,\n\t\t\tpaddingRight: 5,\n\t\t\tpaddingBottom: 5,\n\t\t\tpaddingTop: 5,\n\t\t\tlayout: horizontalLayout,\n\t\t\tsetStateOnChildren: true,\n\t\t\tinteractiveChildren: false,\n\t\t\tariaChecked: true,\n\t\t\tfocusable: true,\n\t\t\tariaLabel: language.translate(\"Press ENTER to toggle\"),\n\t\t\trole: \"checkbox\"\n\t\t});\n\n\t\t{\n\t\t\tconst rule = r(\"Rectangle\", [\"legend\", \"item\", \"background\"]);\n\n\t\t\trule.setAll({\n\t\t\t\tfillOpacity: 0,\n\t\t\t});\n\n\t\t\tsetColor(rule, \"fill\", ic, \"background\");\n\t\t}\n\n\t\tr(\"Container\", [\"legend\", \"marker\"]).setAll({\n\t\t\tsetStateOnChildren: true,\n\t\t\tcenterY: p50,\n\t\t\tpaddingLeft: 0,\n\t\t\tpaddingRight: 0,\n\t\t\tpaddingBottom: 0,\n\t\t\tpaddingTop: 0,\n\t\t\twidth: 18,\n\t\t\theight: 18\n\t\t});\n\n\t\tr(\"RoundedRectangle\", [\"legend\", \"marker\", \"rectangle\"]).setAll({\n\t\t\twidth: p100,\n\t\t\theight: p100,\n\t\t\tcornerRadiusBL: 3,\n\t\t\tcornerRadiusTL: 3,\n\t\t\tcornerRadiusBR: 3,\n\t\t\tcornerRadiusTR: 3\n\t\t});\n\n\t\t{\n\t\t\tconst rule = r(\"RoundedRectangle\", [\"legend\", \"marker\", \"rectangle\"]).states.create(\"disabled\", {});\n\t\t\tsetColor(rule, \"fill\", ic, \"disabled\");\n\t\t\tsetColor(rule, \"stroke\", ic, \"disabled\");\n\t\t}\n\n\t\tr(\"Label\", [\"legend\", \"label\"]).setAll({\n\t\t\tcenterY: p50,\n\t\t\tmarginLeft: 5,\n\t\t\tpaddingRight: 0,\n\t\t\tpaddingLeft: 0,\n\t\t\tpaddingTop: 0,\n\t\t\tpaddingBottom: 0,\n\t\t\tpopulateText: true\n\t\t});\n\n\t\t{\n\t\t\tconst rule = r(\"Label\", [\"legend\", \"label\"]).states.create(\"disabled\", {});\n\t\t\tsetColor(rule, \"fill\", ic, \"disabled\");\n\t\t}\n\n\t\tr(\"Label\", [\"legend\", \"value\", \"label\"]).setAll({\n\t\t\tcenterY: p50,\n\t\t\tmarginLeft: 5,\n\t\t\tpaddingRight: 0,\n\t\t\tpaddingLeft: 0,\n\t\t\tpaddingTop: 0,\n\t\t\tpaddingBottom: 0,\n\t\t\twidth: 50,\n\t\t\tcenterX: p100,\n\t\t\tpopulateText: true\n\t\t});\n\n\t\t{\n\t\t\tconst rule = r(\"Label\", [\"legend\", \"value\", \"label\"]).states.create(\"disabled\", {});\n\t\t\tsetColor(rule, \"fill\", ic, \"disabled\");\n\t\t}\n\n\n\n\t\t/**\n\t\t * ------------------------------------------------------------------------\n\t\t * core: HeatLegend\n\t\t * ------------------------------------------------------------------------\n\t\t */\n\n\t\tr(\"HeatLegend\").setAll({\n\t\t\tstepCount: 1\n\t\t});\n\n\t\tr(\"RoundedRectangle\", [\"heatlegend\", \"marker\"]).setAll({\n\t\t\tcornerRadiusTR: 0,\n\t\t\tcornerRadiusBR: 0,\n\t\t\tcornerRadiusTL: 0,\n\t\t\tcornerRadiusBL: 0\n\t\t});\n\n\t\tr(\"RoundedRectangle\", [\"vertical\", \"heatlegend\", \"marker\"]).setAll({\n\t\t\theight: p100,\n\t\t\twidth: 15\n\t\t});\n\n\t\tr(\"RoundedRectangle\", [\"horizontal\", \"heatlegend\", \"marker\"]).setAll({\n\t\t\twidth: p100,\n\t\t\theight: 15\n\t\t});\n\n\t\tr(\"HeatLegend\", [\"vertical\"]).setAll({\n\t\t\theight: p100\n\t\t});\n\n\t\tr(\"HeatLegend\", [\"horizontal\"]).setAll({\n\t\t\twidth: p100\n\t\t});\n\n\t\tr(\"Label\", [\"heatlegend\", \"start\"]).setAll({\n\t\t\tpaddingLeft: 5,\n\t\t\tpaddingRight: 5,\n\t\t\tpaddingTop: 5,\n\t\t\tpaddingBottom: 5\n\t\t});\n\n\t\tr(\"Label\", [\"heatlegend\", \"end\"]).setAll({\n\t\t\tpaddingLeft: 5,\n\t\t\tpaddingRight: 5,\n\t\t\tpaddingTop: 5,\n\t\t\tpaddingBottom: 5\n\t\t});\n\n\n\t\t/**\n\t\t * ------------------------------------------------------------------------\n\t\t * core: Labels\n\t\t * ------------------------------------------------------------------------\n\t\t */\n\n\t\t{\n\t\t\tconst rule = r(\"Label\");\n\n\t\t\trule.setAll({\n\t\t\t\tpaddingTop: 8,\n\t\t\t\tpaddingBottom: 8,\n\t\t\t\tpaddingLeft: 10,\n\t\t\t\tpaddingRight: 10,\n\t\t\t\tfontFamily: \"-apple-system, BlinkMacSystemFont, \\\"Segoe UI\\\", Roboto, Helvetica, Arial, sans-serif, \\\"Apple Color Emoji\\\", \\\"Segoe UI Emoji\\\", \\\"Segoe UI Symbol\\\"\",\n\t\t\t\tfontSize: \"1em\",\n\t\t\t\tpopulateText: false\n\t\t\t});\n\n\t\t\tsetColor(rule, \"fill\", ic, \"text\");\n\t\t}\n\n\t\tr(\"RadialLabel\").setAll({\n\t\t\ttextType: \"regular\",\n\t\t\tcenterY: p50,\n\t\t\tcenterX: p50,\n\t\t\tinside: false,\n\t\t\tradius: 0,\n\t\t\tbaseRadius: p100,\n\t\t\torientation: \"auto\",\n\t\t\ttextAlign: \"center\"\n\t\t});\n\n\t\tr(\"EditableLabel\").setAll({\n\t\t\teditOn: \"click\",\n\t\t\t//setStateOnChildren: true,\n\t\t\tthemeTags: [\"editablelabel\"],\n\t\t\tmultiLine: true\n\t\t});\n\n\t\tr(\"RoundedRectangle\", [\"editablelabel\", \"background\"]).setAll({\n\t\t\tfillOpacity: 0,\n\t\t\tfill: Color.fromHex(0x000000),\n\t\t\tcornerRadiusBL: 3,\n\t\t\tcornerRadiusBR: 3,\n\t\t\tcornerRadiusTL: 3,\n\t\t\tcornerRadiusTR: 3,\n\t\t\tstrokeOpacity: 0,\n\t\t\tstroke: Color.fromHex(0x000000)\n\t\t});\n\n\t\t{\n\t\t\tr(\"RoundedRectangle\", [\"editablelabel\", \"background\"]).states.create(\"active\", {\n\t\t\t\tstrokeOpacity: 0.2,\n\t\t\t});\n\t\t}\n\n\n\n\n\t\t/**\n\t\t * ------------------------------------------------------------------------\n\t\t * core: Elements and shapes\n\t\t * ------------------------------------------------------------------------\n\t\t */\n\n\t\tr(\"RoundedRectangle\").setAll({\n\t\t\tcornerRadiusTL: 8,\n\t\t\tcornerRadiusBL: 8,\n\t\t\tcornerRadiusTR: 8,\n\t\t\tcornerRadiusBR: 8\n\t\t});\n\n\t\tr(\"PointedRectangle\").setAll({\n\t\t\tpointerBaseWidth: 15,\n\t\t\tpointerLength: 10,\n\t\t\tcornerRadius: 8\n\t\t});\n\n\t\tr(\"Slice\").setAll({\n\t\t\tshiftRadius: 0,\n\t\t\tdRadius: 0,\n\t\t\tdInnerRadius: 0\n\t\t});\n\n\t\t{\n\t\t\tconst rule = r(\"Tick\");\n\n\t\t\trule.setAll({\n\t\t\t\tstrokeOpacity: .15,\n\t\t\t\tisMeasured: false,\n\t\t\t\tlength: 4.5,\n\t\t\t\tposition: \"absolute\",\n\t\t\t\tcrisp: true\n\t\t\t});\n\n\t\t\tsetColor(rule, \"stroke\", ic, \"grid\");\n\t\t}\n\n\t\tr(\"Bullet\").setAll({\n\t\t\tlocationX: 0.5,\n\t\t\tlocationY: 0.5\n\t\t});\n\n\n\t\t/**\n\t\t * ------------------------------------------------------------------------\n\t\t * core: Tooltip\n\t\t * ------------------------------------------------------------------------\n\t\t */\n\n\t\tr(\"Tooltip\").setAll({\n\t\t\tposition: \"absolute\",\n\t\t\tgetFillFromSprite: true,\n\t\t\tgetStrokeFromSprite: false,\n\t\t\tautoTextColor: true,\n\t\t\tpaddingTop: 9,\n\t\t\tpaddingBottom: 8,\n\t\t\tpaddingLeft: 10,\n\t\t\tpaddingRight: 10,\n\t\t\tmarginBottom: 5,\n\t\t\tpointerOrientation: \"vertical\",\n\t\t\tcenterX: p50,\n\t\t\tcenterY: p50,\n\t\t\tanimationEasing: $ease.out($ease.cubic),\n\t\t\texportable: false\n\t\t\t//layer: 100\n\t\t});\n\n\t\tr(\"Polygon\").setAll({\n\t\t\tanimationEasing: $ease.out($ease.cubic),\n\t\t});\n\n\t\t{\n\t\t\tconst rule = r(\"PointedRectangle\", [\"tooltip\", \"background\"]);\n\n\t\t\trule.setAll({\n\t\t\t\tstrokeOpacity: 0.9,\n\t\t\t\tcornerRadius: 4,\n\t\t\t\tpointerLength: 4,\n\t\t\t\tpointerBaseWidth: 8,\n\t\t\t\tfillOpacity: 0.9,\n\t\t\t\tstroke: Color.fromHex(0xffffff)\n\t\t\t});\n\t\t}\n\n\t\t{\n\t\t\tconst rule = r(\"Label\", [\"tooltip\"]);\n\n\t\t\trule.setAll({\n\t\t\t\trole: \"tooltip\",\n\t\t\t\tpopulateText: true,\n\t\t\t\tpaddingRight: 0,\n\t\t\t\tpaddingTop: 0,\n\t\t\t\tpaddingLeft: 0,\n\t\t\t\tpaddingBottom: 0\n\t\t\t});\n\n\t\t\tsetColor(rule, \"fill\", ic, \"alternativeText\");\n\t\t}\n\n\n\t\t/**\n\t\t * ------------------------------------------------------------------------\n\t\t * core: Button\n\t\t * ------------------------------------------------------------------------\n\t\t */\n\n\t\tr(\"Button\").setAll({\n\t\t\tpaddingTop: 8,\n\t\t\tpaddingBottom: 8,\n\t\t\tpaddingLeft: 10,\n\t\t\tpaddingRight: 10,\n\t\t\tinteractive: true,\n\t\t\tlayout: horizontalLayout,\n\t\t\tinteractiveChildren: false,\n\t\t\tsetStateOnChildren: true,\n\t\t\tfocusable: true\n\t\t});\n\n\t\tr(\"Button\").states.create(\"hover\", {});\n\t\tr(\"Button\").states.create(\"down\", { stateAnimationDuration: 0 });\n\t\tr(\"Button\").states.create(\"active\", {});\n\t\tr(\"Button\").states.create(\"disabled\", {\n\t\t\tforceInactive: true\n\t\t});\n\n\t\t{\n\t\t\tconst rule = r(\"RoundedRectangle\", [\"button\", \"background\"]);\n\t\t\tsetColor(rule, \"fill\", ic, \"primaryButton\");\n\t\t\tsetColor(rule, \"stroke\", ic, \"primaryButtonStroke\");\n\t\t}\n\n\t\t{\n\t\t\tconst rule = r(\"RoundedRectangle\", [\"button\", \"background\"]).states.create(\"hover\", {});\n\t\t\tsetColor(rule, \"fill\", ic, \"primaryButtonHover\");\n\t\t}\n\n\t\t{\n\t\t\tconst rule = r(\"RoundedRectangle\", [\"button\", \"background\"]).states.create(\"down\", { stateAnimationDuration: 0 });\n\t\t\tsetColor(rule, \"fill\", ic, \"primaryButtonDown\");\n\t\t}\n\n\t\t{\n\t\t\tconst rule = r(\"RoundedRectangle\", [\"button\", \"background\"]).states.create(\"active\", {});\n\t\t\tsetColor(rule, \"fill\", ic, \"primaryButtonActive\");\n\t\t}\n\n\t\t{\n\t\t\tconst rule = r(\"RoundedRectangle\", [\"button\", \"background\"]).states.create(\"disabled\", {});\n\t\t\tsetColor(rule, \"fill\", ic, \"primaryButtonDisabled\");\n\t\t}\n\n\t\t{\n\t\t\tconst rule = r(\"Graphics\", [\"button\", \"icon\"]).states.create(\"disabled\", {});\n\t\t\tsetColor(rule, \"fill\", ic, \"primaryButtonTextDisabled\");\n\t\t}\n\n\t\t{\n\t\t\tconst rule = r(\"Label\", [\"button\"]).states.create(\"disabled\", {});\n\t\t\tsetColor(rule, \"fill\", ic, \"primaryButtonTextDisabled\");\n\t\t}\n\n\t\t{\n\t\t\tconst rule = r(\"Graphics\", [\"button\", \"icon\"]);\n\t\t\trule.setAll({\n\t\t\t\tforceInactive: true\n\t\t\t})\n\t\t\tsetColor(rule, \"stroke\", ic, \"primaryButtonText\");\n\t\t}\n\n\t\t{\n\t\t\tconst rule = r(\"Label\", [\"button\"]);\n\t\t\tsetColor(rule, \"fill\", ic, \"primaryButtonText\");\n\t\t}\n\n\t\t/**\n\t\t * ------------------------------------------------------------------------\n\t\t * charts/xy: ZoomOutButton\n\t\t * ------------------------------------------------------------------------\n\t\t */\n\n\t\tr(\"Button\", [\"zoom\"]).setAll({\n\t\t\tpaddingTop: 18,\n\t\t\tpaddingBottom: 18,\n\t\t\tpaddingLeft: 12,\n\t\t\tpaddingRight: 12,\n\t\t\tcenterX: 46,\n\t\t\tcenterY: -10,\n\t\t\ty: 0,\n\t\t\tx: p100,\n\t\t\trole: \"button\",\n\t\t\tariaLabel: language.translate(\"Zoom Out\"),\n\t\t\tlayer: 30\n\t\t});\n\n\t\t{\n\t\t\tconst rule = r(\"RoundedRectangle\", [\"background\", \"button\", \"zoom\"]);\n\n\t\t\trule.setAll({\n\t\t\t\tcornerRadiusBL: 40,\n\t\t\t\tcornerRadiusBR: 40,\n\t\t\t\tcornerRadiusTL: 40,\n\t\t\t\tcornerRadiusTR: 40\n\t\t\t});\n\n\t\t\tsetColor(rule, \"fill\", ic, \"primaryButton\");\n\t\t}\n\n\t\t{\n\t\t\tconst rule = r(\"RoundedRectangle\", [\"background\", \"button\", \"zoom\"]).states.create(\"hover\", {});\n\t\t\tsetColor(rule, \"fill\", ic, \"primaryButtonHover\");\n\t\t}\n\n\t\t{\n\t\t\tconst rule = r(\"RoundedRectangle\", [\"background\", \"button\", \"zoom\"]).states.create(\"down\", { stateAnimationDuration: 0 });\n\t\t\tsetColor(rule, \"fill\", ic, \"primaryButtonDown\");\n\t\t}\n\n\t\t{\n\t\t\tconst rule = r(\"Graphics\", [\"icon\", \"button\", \"zoom\"]);\n\n\t\t\trule.setAll({\n\t\t\t\tcrisp: true,\n\t\t\t\tstrokeOpacity: 0.7,\n\t\t\t\tdraw: (display: any) => {\n\t\t\t\t\tdisplay.moveTo(0, 0);\n\t\t\t\t\tdisplay.lineTo(12, 0);\n\t\t\t\t}\n\t\t\t});\n\n\t\t\tsetColor(rule, \"stroke\", ic, \"primaryButtonText\");\n\t\t}\n\n\n\t\t/**\n\t\t * ------------------------------------------------------------------------\n\t\t * core: ResizeButton\n\t\t * ------------------------------------------------------------------------\n\t\t */\n\n\t\tr(\"Button\", [\"resize\"]).setAll({\n\t\t\tpaddingTop: 9,\n\t\t\tpaddingBottom: 9,\n\t\t\tpaddingLeft: 13,\n\t\t\tpaddingRight: 13,\n\t\t\tdraggable: true,\n\t\t\tcenterX: p50,\n\t\t\tcenterY: p50,\n\t\t\tposition: \"absolute\",\n\t\t\trole: \"slider\",\n\t\t\tariaValueMin: \"0\",\n\t\t\tariaValueMax: \"100\",\n\t\t\tariaLabel: language.translate(\"Use up and down arrows to move selection\")\n\t\t});\n\n\t\t{\n\t\t\tconst rule = r(\"RoundedRectangle\", [\"background\", \"resize\", \"button\"]);\n\n\t\t\trule.setAll({\n\t\t\t\tcornerRadiusBL: 40,\n\t\t\t\tcornerRadiusBR: 40,\n\t\t\t\tcornerRadiusTL: 40,\n\t\t\t\tcornerRadiusTR: 40\n\t\t\t});\n\n\t\t\tsetColor(rule, \"fill\", ic, \"secondaryButton\");\n\t\t\tsetColor(rule, \"stroke\", ic, \"secondaryButtonStroke\");\n\t\t}\n\n\t\t{\n\t\t\tconst rule = r(\"RoundedRectangle\", [\"background\", \"resize\", \"button\"]).states.create(\"hover\", {});\n\t\t\tsetColor(rule, \"fill\", ic, \"secondaryButtonHover\");\n\t\t}\n\n\t\t{\n\t\t\tconst rule = r(\"RoundedRectangle\", [\"background\", \"resize\", \"button\"]).states.create(\"down\", { stateAnimationDuration: 0 });\n\t\t\tsetColor(rule, \"fill\", ic, \"secondaryButtonDown\");\n\t\t}\n\n\t\t{\n\t\t\tconst rule = r(\"Graphics\", [\"resize\", \"button\", \"icon\"]);\n\n\t\t\trule.setAll({\n\t\t\t\tinteractive: false,\n\t\t\t\tcrisp: true,\n\t\t\t\tstrokeOpacity: 0.5,\n\t\t\t\tdraw: (display: any) => {\n\t\t\t\t\tdisplay.moveTo(0, 0.5);\n\t\t\t\t\tdisplay.lineTo(0, 12.5);\n\t\t\t\t\tdisplay.moveTo(4, 0.5);\n\t\t\t\t\tdisplay.lineTo(4, 12.5);\n\t\t\t\t}\n\t\t\t});\n\n\t\t\tsetColor(rule, \"stroke\", ic, \"secondaryButtonText\");\n\t\t}\n\n\t\tr(\"Button\", [\"resize\", \"vertical\"]).setAll({\n\t\t\trotation: 90,\n\t\t\tcursorOverStyle: \"ns-resize\"\n\t\t});\n\n\t\tr(\"Button\", [\"resize\", \"horizontal\"]).setAll({\n\t\t\tcursorOverStyle: \"ew-resize\"\n\t\t});\n\n\n\n\t\t/**\n\t\t * ------------------------------------------------------------------------\n\t\t * core: PlayButton\n\t\t * ------------------------------------------------------------------------\n\t\t */\n\n\t\tr(\"Button\", [\"play\"]).setAll({\n\t\t\tpaddingTop: 13,\n\t\t\tpaddingBottom: 13,\n\t\t\tpaddingLeft: 14,\n\t\t\tpaddingRight: 14,\n\t\t\tariaLabel: language.translate(\"Play\"),\n\t\t\ttoggleKey: \"active\"\n\t\t});\n\n\t\t{\n\t\t\tconst rule = r(\"RoundedRectangle\", [\"play\", \"background\"]);\n\n\t\t\trule.setAll({\n\t\t\t\tstrokeOpacity: 0.5,\n\t\t\t\tcornerRadiusBL: 100,\n\t\t\t\tcornerRadiusBR: 100,\n\t\t\t\tcornerRadiusTL: 100,\n\t\t\t\tcornerRadiusTR: 100\n\t\t\t});\n\n\t\t\tsetColor(rule, \"fill\", ic, \"primaryButton\");\n\t\t}\n\n\t\t{\n\t\t\tconst rule = r(\"Graphics\", [\"play\", \"icon\"]);\n\n\t\t\trule.setAll({\n\t\t\t\tstateAnimationDuration: 0,\n\t\t\t\tdx: 1,\n\t\t\t\tdraw: (display: any) => {\n\t\t\t\t\tdisplay.moveTo(0, -5);\n\t\t\t\t\tdisplay.lineTo(8, 0);\n\t\t\t\t\tdisplay.lineTo(0, 5);\n\t\t\t\t\tdisplay.lineTo(0, -5);\n\t\t\t\t}\n\t\t\t});\n\n\t\t\tsetColor(rule, \"fill\", ic, \"primaryButtonText\");\n\t\t}\n\n\t\tr(\"Graphics\", [\"play\", \"icon\"]).states.create(\"default\", {\n\t\t\tstateAnimationDuration: 0\n\t\t})\n\n\t\tr(\"Graphics\", [\"play\", \"icon\"]).states.create(\"active\", {\n\t\t\tstateAnimationDuration: 0,\n\t\t\tdraw: (display: any) => {\n\t\t\t\tdisplay.moveTo(-4, -5);\n\t\t\t\tdisplay.lineTo(-1, -5);\n\t\t\t\tdisplay.lineTo(-1, 5);\n\t\t\t\tdisplay.lineTo(-4, 5);\n\t\t\t\tdisplay.lineTo(-4, -5);\n\n\t\t\t\tdisplay.moveTo(4, -5);\n\t\t\t\tdisplay.lineTo(1, -5);\n\t\t\t\tdisplay.lineTo(1, 5);\n\t\t\t\tdisplay.lineTo(4, 5);\n\t\t\t\tdisplay.lineTo(4, -5);\n\t\t\t}\n\t\t})\n\n\n\t\t/**\n\t\t * ------------------------------------------------------------------------\n\t\t * core: SwitchButton\n\t\t * ------------------------------------------------------------------------\n\t\t */\n\n\t\tr(\"Button\", [\"switch\"]).setAll({\n\t\t\tpaddingTop: 4,\n\t\t\tpaddingBottom: 4,\n\t\t\tpaddingLeft: 4,\n\t\t\tpaddingRight: 4,\n\t\t\tariaLabel: language.translate(\"Press ENTER to toggle\"),\n\t\t\ttoggleKey: \"active\",\n\t\t\twidth: 40,\n\t\t\theight: 24,\n\t\t\tlayout: null\n\t\t});\n\n\t\t{\n\t\t\tconst rule = r(\"RoundedRectangle\", [\"switch\", \"background\"]);\n\n\t\t\trule.setAll({\n\t\t\t\tstrokeOpacity: 0.5,\n\t\t\t\tcornerRadiusBL: 100,\n\t\t\t\tcornerRadiusBR: 100,\n\t\t\t\tcornerRadiusTL: 100,\n\t\t\t\tcornerRadiusTR: 100\n\t\t\t});\n\n\t\t\tsetColor(rule, \"fill\", ic, \"primaryButton\");\n\t\t}\n\n\t\t{\n\t\t\tconst rule = r(\"Circle\", [\"switch\", \"icon\"]);\n\n\t\t\trule.setAll({\n\t\t\t\tradius: 8,\n\t\t\t\tcenterY: 0,\n\t\t\t\tcenterX: 0,\n\t\t\t\tdx: 0\n\t\t\t});\n\n\t\t\tsetColor(rule, \"fill\", ic, \"primaryButtonText\");\n\t\t}\n\n\t\tr(\"Graphics\", [\"switch\", \"icon\"]).states.create(\"active\", {\n\t\t\tdx: 16\n\t\t});\n\n\n\t\t/**\n\t\t * ------------------------------------------------------------------------\n\t\t * core: Scrollbar\n\t\t * ------------------------------------------------------------------------\n\t\t */\n\n\t\tr(\"Scrollbar\").setAll({\n\t\t\tstart: 0,\n\t\t\tend: 1,\n\t\t\tlayer: 30,\n\t\t\tanimationEasing: $ease.out($ease.cubic)\n\t\t});\n\n\t\tr(\"Scrollbar\", [\"vertical\"]).setAll({\n\t\t\tmarginRight: 13,\n\t\t\tmarginLeft: 13,\n\t\t\tminWidth: 12,\n\t\t\theight: p100\n\t\t});\n\n\t\tr(\"Scrollbar\", [\"horizontal\"]).setAll({\n\t\t\tmarginTop: 13,\n\t\t\tmarginBottom: 13,\n\t\t\tminHeight: 12,\n\t\t\twidth: p100\n\t\t});\n\n\t\tthis.rule(\"Button\", [\"scrollbar\"]).setAll({\n\t\t\texportable: false\n\t\t});\n\n\t\t{\n\t\t\tconst rule = r(\"RoundedRectangle\", [\"scrollbar\", \"main\", \"background\"]);\n\n\t\t\trule.setAll({\n\t\t\t\tcornerRadiusTL: 8,\n\t\t\t\tcornerRadiusBL: 8,\n\t\t\t\tcornerRadiusTR: 8,\n\t\t\t\tcornerRadiusBR: 8,\n\t\t\t\tfillOpacity: 0.8,\n\t\t\t});\n\n\t\t\tsetColor(rule, \"fill\", ic, \"fill\");\n\t\t}\n\n\t\t{\n\t\t\tconst rule = r(\"RoundedRectangle\", [\"scrollbar\", \"thumb\"]);\n\n\t\t\trule.setAll({\n\t\t\t\trole: \"slider\",\n\t\t\t\tariaLive: \"polite\",\n\t\t\t\tposition: \"absolute\",\n\t\t\t\tdraggable: true\n\t\t\t});\n\n\t\t\tsetColor(rule, \"fill\", ic, \"secondaryButton\");\n\t\t}\n\n\t\t{\n\t\t\tconst rule = r(\"RoundedRectangle\", [\"scrollbar\", \"thumb\"]).states.create(\"hover\", {});\n\t\t\tsetColor(rule, \"fill\", ic, \"secondaryButtonHover\");\n\t\t}\n\n\t\t{\n\t\t\tconst rule = r(\"RoundedRectangle\", [\"scrollbar\", \"thumb\"]).states.create(\"down\", { stateAnimationDuration: 0 });\n\t\t\tsetColor(rule, \"fill\", ic, \"secondaryButtonDown\");\n\t\t}\n\n\t\tr(\"RoundedRectangle\", [\"scrollbar\", \"thumb\", \"vertical\"]).setAll({\n\t\t\tx: p50,\n\t\t\twidth: p100,\n\t\t\tcenterX: p50,\n\t\t\tariaLabel: language.translate(\"Use up and down arrows to move selection\")\n\t\t});\n\n\t\tr(\"RoundedRectangle\", [\"scrollbar\", \"thumb\", \"horizontal\"]).setAll({\n\t\t\ty: p50,\n\t\t\tcenterY: p50,\n\t\t\theight: p100,\n\t\t\tariaLabel: language.translate(\"Use left and right arrows to move selection\")\n\t\t});\n\n\t\t// @todo: is this needed? used to be \"ContentScrollbar\"\n\t\t// r(\"Scrollbar\", [\"content?\"]).setAll({\n\t\t// \tmarginRight: 0,\n\t\t// \tmarginLeft: 5,\n\t\t// \tlayer: 5\n\t\t// });\n\n\t\t/**\n\t\t * ========================================================================\n\t\t * charts/xy\n\t\t * ========================================================================\n\t\t *\n\t\t * This needs to be in DefaultTheme because it's the only theme that is\n\t\t * automatically applied to Root, and tooltips different ancestors\n\t\t * than actual charts using them.\n\t\t */\n\n\t\t{\n\t\t\tconst rule = r(\"PointedRectangle\", [\"axis\", \"tooltip\", \"background\"]);\n\n\t\t\trule.setAll({\n\t\t\t\tcornerRadius: 0\n\t\t\t});\n\n\t\t\tsetColor(rule, \"fill\", ic, \"alternativeBackground\");\n\t\t}\n\n\t\tr(\"Label\", [\"axis\", \"tooltip\"]).setAll({\n\t\t\trole: undefined\n\t\t});\n\n\t\tr(\"Label\", [\"axis\", \"tooltip\", \"y\"]).setAll({\n\t\t\ttextAlign: \"right\"\n\t\t});\n\n\t\tr(\"Label\", [\"axis\", \"tooltip\", \"y\", \"opposite\"]).setAll({\n\t\t\ttextAlign: \"left\"\n\t\t});\n\n\t\tr(\"Label\", [\"axis\", \"tooltip\", \"x\"]).setAll({\n\t\t\ttextAlign: \"center\"\n\t\t});\n\n\t\tr(\"Tooltip\", [\"categoryaxis\"]).setAll({\n\t\t\tlabelText: \"{category}\"\n\t\t})\n\n\t\t/**\n\t\t * ------------------------------------------------------------------------\n\t\t * Shapes\n\t\t * ------------------------------------------------------------------------\n\t\t */\n\n\t\t// Class: Graphics\n\t\tr(\"Star\").setAll({\n\t\t\tspikes: 5,\n\t\t\tinnerRadius: 5,\n\t\t\tradius: 10\n\t\t})\n\n\t\t// STOCK\n\t\tr(\"Tooltip\", [\"stock\"]).setAll({\n\t\t\tpaddingTop: 6,\n\t\t\tpaddingBottom: 5,\n\t\t\tpaddingLeft: 7,\n\t\t\tpaddingRight: 7\n\t\t});\n\n\t\tr(\"PointedRectangle\", [\"tooltip\", \"stock\", \"axis\"]).setAll({\n\t\t\tpointerLength: 0,\n\t\t\tpointerBaseWidth: 0,\n\t\t\tcornerRadius: 3\n\t\t});\n\n\t\tr(\"Label\", [\"tooltip\", \"stock\"]).setAll({\n\t\t\tfontSize: \"0.8em\"\n\t\t});\n\n\t\t// resizer\n\n\t\tr(\"SpriteResizer\").setAll({\n\t\t\trotationStep: 10,\n\t\t\tisMeasured: false\n\t\t})\n\n\t\t{\n\t\t\tconst rule = r(\"Container\", [\"resizer\", \"grip\"]);\n\t\t\trule.states.create(\"hover\", {});\n\t\t}\n\n\t\t{\n\t\t\tconst rule = r(\"RoundedRectangle\", [\"resizer\", \"grip\"]);\n\n\t\t\trule.setAll({\n\t\t\t\tstrokeOpacity: 0.7,\n\t\t\t\tstrokeWidth: 1,\n\t\t\t\tfillOpacity: 1,\n\t\t\t\twidth: 12,\n\t\t\t\theight: 12\n\t\t\t});\n\n\t\t\tsetColor(rule, \"fill\", ic, \"background\");\n\t\t\tsetColor(rule, \"stroke\", ic, \"alternativeBackground\");\n\t\t}\n\n\t\t{\n\t\t\tconst rule = r(\"RoundedRectangle\", [\"resizer\", \"grip\", \"outline\"]);\n\n\t\t\trule.setAll({\n\t\t\t\tstrokeOpacity: 0,\n\t\t\t\tfillOpacity: 0,\n\t\t\t\twidth: 20,\n\t\t\t\theight: 20\n\t\t\t});\n\n\t\t\trule.states.create(\"hover\", {\n\t\t\t\tfillOpacity: 0.3\n\t\t\t});\n\n\t\t\tsetColor(rule, \"fill\", ic, \"alternativeBackground\");\n\t\t}\n\n\t\tr(\"RoundedRectangle\", [\"resizer\", \"grip\", \"left\"]).setAll({\n\t\t\tcornerRadiusBL: 0,\n\t\t\tcornerRadiusBR: 0,\n\t\t\tcornerRadiusTL: 0,\n\t\t\tcornerRadiusTR: 0\n\t\t});\n\n\t\tr(\"RoundedRectangle\", [\"resizer\", \"grip\", \"right\"]).setAll({\n\t\t\tcornerRadiusBL: 0,\n\t\t\tcornerRadiusBR: 0,\n\t\t\tcornerRadiusTL: 0,\n\t\t\tcornerRadiusTR: 0\n\t\t});\n\n\t\t{\n\t\t\tconst rule = r(\"Rectangle\", [\"resizer\", \"rectangle\"]);\n\t\t\trule.setAll({\n\t\t\t\tstrokeDasharray: [2, 2],\n\t\t\t\tstrokeOpacity: 0.5,\n\t\t\t\tstrokeWidth: 1\n\t\t\t});\n\n\t\t\tsetColor(rule, \"stroke\", ic, \"alternativeBackground\");\n\t\t}\n\n\t\tr(\"Graphics\", [\"button\", \"plus\", \"icon\"]).setAll({\n\t\t\tx: p50,\n\t\t\ty: p50,\n\t\t\tdraw: (display) => {\n\t\t\t\tdisplay.moveTo(-4, 0);\n\t\t\t\tdisplay.lineTo(4, 0);\n\t\t\t\tdisplay.moveTo(0, -4);\n\t\t\t\tdisplay.lineTo(0, 4);\n\t\t\t}\n\t\t});\n\n\t\tr(\"Graphics\", [\"button\", \"minus\", \"icon\"]).setAll({\n\t\t\tx: p50,\n\t\t\ty: p50,\n\t\t\tdraw: (display) => {\n\t\t\t\tdisplay.moveTo(-4, 0);\n\t\t\t\tdisplay.lineTo(4, 0);\n\t\t\t}\n\t\t});\n\n\t\tr(\"Graphics\", [\"button\", \"home\", \"icon\"]).setAll({\n\t\t\tx: p50,\n\t\t\ty: p50,\n\t\t\tsvgPath: \"M 8 -1 L 6 -1 L 6 7 L 2 7 L 2 1 L -2 1 L -2 7 L -6 7 L -6 -1 L -8 -1 L 0 -9 L 8 -1 Z M 8 -1\"\n\t\t});\n\n\t\tr(\"Button\", [\"zoomtools\"]).setAll({\n\t\t\tmarginTop: 1,\n\t\t\tmarginBottom: 2\n\t\t})\n\n\t\tr(\"ZoomTools\").setAll({\n\t\t\tx: p100,\n\t\t\tcenterX: p100,\n\t\t\ty: p100,\n\t\t\tcenterY: p100,\n\t\t\tpaddingRight: 10,\n\t\t\tpaddingBottom: 10\n\t\t})\n\t}\n}\n","import { Template } from \"./util/Template\";\r\nimport * as $order from \"./util/Order\";\r\nimport * as $array from \"./util/Array\";\r\n/**\r\n * A base class for an amCharts theme.\r\n *\r\n * @see {@link https://www.amcharts.com/docs/v5/concepts/themes/} for more info\r\n * @important\r\n */\r\nexport class Theme {\r\n    constructor(root, isReal) {\r\n        Object.defineProperty(this, \"_root\", {\r\n            enumerable: true,\r\n            configurable: true,\r\n            writable: true,\r\n            value: void 0\r\n        });\r\n        Object.defineProperty(this, \"_rules\", {\r\n            enumerable: true,\r\n            configurable: true,\r\n            writable: true,\r\n            value: {}\r\n        });\r\n        this._root = root;\r\n        if (!isReal) {\r\n            throw new Error(\"You cannot use `new Class()`, instead use `Class.new()`\");\r\n        }\r\n    }\r\n    /**\r\n     * Use this method to create an instance of this class.\r\n     *\r\n     * @see {@link https://www.amcharts.com/docs/v5/getting-started/#New_element_syntax} for more info\r\n     * @param   root      Root element\r\n     * @param   settings  Settings\r\n     * @param   template  Template\r\n     * @return            Instantiated object\r\n     */\r\n    static new(root) {\r\n        const x = (new this(root, true));\r\n        x.setupDefaultRules();\r\n        return x;\r\n    }\r\n    setupDefaultRules() { }\r\n    /**\r\n     * Looks up the rules for a specific theme class.\r\n     *\r\n     * @see {@link https://www.amcharts.com/docs/v5/themes/} for more info\r\n     * @param   themeClass Theme class\r\n     * @return             Array<IRule<A>>\r\n     */\r\n    _lookupRules(themeClass) {\r\n        return this._rules[themeClass];\r\n    }\r\n    /**\r\n     * Creates a [[Template]] for specific theme class and tags.\r\n     *\r\n     * NOTE: the difference from `rule()` is that `ruleRaw()` does not do any\r\n     * type checks.\r\n     *\r\n     * @see {@link https://www.amcharts.com/docs/v5/themes/} for more info\r\n     * @param   themeClass Theme class\r\n     * @param   themeTags  Theme tags\r\n     * @return             Template\r\n     */\r\n    ruleRaw(themeClass, themeTags = []) {\r\n        let rules = this._rules[themeClass];\r\n        if (!rules) {\r\n            rules = this._rules[themeClass] = [];\r\n        }\r\n        themeTags.sort($order.compare);\r\n        const { index, found } = $array.getSortedIndex(rules, (x) => {\r\n            const order = $order.compare(x.tags.length, themeTags.length);\r\n            if (order === 0) {\r\n                return $order.compareArray(x.tags, themeTags, $order.compare);\r\n            }\r\n            else {\r\n                return order;\r\n            }\r\n        });\r\n        if (found) {\r\n            return rules[index].template;\r\n        }\r\n        else {\r\n            const template = Template.new({});\r\n            rules.splice(index, 0, {\r\n                tags: themeTags,\r\n                template,\r\n            });\r\n            return template;\r\n        }\r\n    }\r\n    /**\r\n     * Creates a [[Template]] for specific theme class and tags.\r\n     *\r\n     * @see {@link https://www.amcharts.com/docs/v5/themes/} for more info\r\n     * @param   themeClass Theme class\r\n     * @param   themeTags  Theme tags\r\n     * @return             Template\r\n     */\r\n    rule(themeClass, themeTags = []) {\r\n        return this.ruleRaw(themeClass, themeTags);\r\n    }\r\n}\r\n//# sourceMappingURL=Theme.js.map","import type { Entity } from \"./util/Entity\";\nimport { Template } from \"./util/Template\";\nimport type { Root } from \"./Root\";\nimport type { IClasses } from \"./Classes\";\nimport * as $order from \"./util/Order\";\nimport * as $array from \"./util/Array\";\n\nexport interface IRule<A extends Entity> {\n\ttags: Array<string>;\n\ttemplate: Template<A>;\n}\n\n/**\n * A base class for an amCharts theme.\n *\n * @see {@link https://www.amcharts.com/docs/v5/concepts/themes/} for more info\n * @important\n */\nexport class Theme {\n\n\tprotected _root!: Root;\n\n\t/**\n\t * Use this method to create an instance of this class.\n\t *\n\t * @see {@link https://www.amcharts.com/docs/v5/getting-started/#New_element_syntax} for more info\n\t * @param   root      Root element\n\t * @param   settings  Settings\n\t * @param   template  Template\n\t * @return            Instantiated object\n\t */\n\tstatic new<T extends typeof Theme>(this: T, root: Root): InstanceType<T> {\n\t\tconst x = (new this(root, true)) as InstanceType<T>;\n\t\tx.setupDefaultRules();\n\t\treturn x;\n\t}\n\n\tconstructor(root: Root, isReal:boolean) {\n\t\tthis._root = root;\n\t\tif (!isReal) {\n\t\t\tthrow new Error(\"You cannot use `new Class()`, instead use `Class.new()`\");\n\t\t}\n\t}\n\n\tprotected setupDefaultRules(): void {}\n\n\tprotected _rules: { [type: string]: Array<IRule<Entity>>; } = {};\n\n\t/**\n\t * Looks up the rules for a specific theme class.\n\t *\n\t * @see {@link https://www.amcharts.com/docs/v5/themes/} for more info\n\t * @param   themeClass Theme class\n\t * @return             Array<IRule<A>>\n\t */\n\tpublic _lookupRules<A extends Entity>(themeClass: string): Array<IRule<A>> | undefined {\n\t\treturn this._rules[themeClass] as unknown as Array<IRule<A>> | undefined;\n\t}\n\n\t/**\n\t * Creates a [[Template]] for specific theme class and tags.\n\t *\n\t * NOTE: the difference from `rule()` is that `ruleRaw()` does not do any\n\t * type checks.\n\t *\n\t * @see {@link https://www.amcharts.com/docs/v5/themes/} for more info\n\t * @param   themeClass Theme class\n\t * @param   themeTags  Theme tags\n\t * @return             Template\n\t */\n\tpublic ruleRaw<A extends Entity>(themeClass: string, themeTags: Array<string> = []): Template<A> {\n\t\tlet rules = this._rules[themeClass];\n\n\t\tif (!rules) {\n\t\t\trules = this._rules[themeClass] = [];\n\t\t}\n\n\t\tthemeTags.sort($order.compare);\n\n\t\tconst { index, found } = $array.getSortedIndex(rules, (x) => {\n\t\t\tconst order = $order.compare(x.tags.length, themeTags.length);\n\n\t\t\tif (order === 0) {\n\t\t\t\treturn $order.compareArray(x.tags, themeTags, $order.compare);\n\n\t\t\t} else {\n\t\t\t\treturn order;\n\t\t\t}\n\t\t});\n\n\t\tif (found) {\n\t\t\treturn rules[index].template as Template<A>;\n\n\t\t} else {\n\t\t\tconst template = Template.new<A>({});\n\n\t\t\trules.splice(index, 0, {\n\t\t\t\ttags: themeTags,\n\t\t\t\ttemplate,\n\t\t\t});\n\n\t\t\treturn template;\n\t\t}\n\t}\n\n\t/**\n\t * Creates a [[Template]] for specific theme class and tags.\n\t *\n\t * @see {@link https://www.amcharts.com/docs/v5/themes/} for more info\n\t * @param   themeClass Theme class\n\t * @param   themeTags  Theme tags\n\t * @return             Template\n\t */\n\tpublic rule<K extends keyof IClasses>(themeClass: K, themeTags: Array<string> = []): Template<IClasses[K]> {\n\t\treturn this.ruleRaw(themeClass, themeTags) as Template<IClasses[K]>;\n\t}\n}\n","/** @ignore */ /** */\r\nimport { BlendMode } from \"./Renderer\";\r\nimport { Color } from \"../../util/Color\";\r\nimport { Matrix } from \"../../util/Matrix\";\r\nimport { Percent, percent } from \"../../util/Percent\";\r\n//import { Throttler } from \"../../util/Throttler\";\r\nimport { ArrayDisposer, Disposer, DisposerClass, CounterDisposer, MultiDisposer } from \"../../util/Disposer\";\r\nimport { TextFormatter } from \"../../util/TextFormatter\";\r\nimport * as $utils from \"../../util/Utils\";\r\nimport * as $array from \"../../util/Array\";\r\nimport * as $object from \"../../util/Object\";\r\nimport * as $type from \"../../util/Type\";\r\nimport * as $math from \"../../util/Math\";\r\nimport arcToBezier from 'svg-arc-to-cubic-bezier';\r\n/**\r\n * @ignore\r\n */\r\nfunction checkArgs(name, actual, expected) {\r\n    if (actual !== expected) {\r\n        throw new Error(\"Required \" + expected + \" arguments for \" + name + \" but got \" + actual);\r\n    }\r\n}\r\n/**\r\n * @ignore\r\n */\r\nfunction checkMinArgs(name, actual, expected) {\r\n    if (actual < expected) {\r\n        throw new Error(\"Required at least \" + expected + \" arguments for \" + name + \" but got \" + actual);\r\n    }\r\n}\r\n/**\r\n * @ignore\r\n */\r\nfunction checkEvenArgs(name, actual, expected) {\r\n    checkMinArgs(name, actual, expected);\r\n    if ((actual % expected) !== 0) {\r\n        throw new Error(\"Arguments for \" + name + \" must be in pairs of \" + expected);\r\n    }\r\n}\r\n/**\r\n * @ignore\r\n * This splits the flag so that way 0017 will be processed as 0 0 17\r\n *\r\n * This is important for weird paths like `M17 5A1 1 0 0017 30 1 1 0 0017 5`\r\n */\r\nfunction splitArcFlags(args) {\r\n    for (let i = 0; i < args.length; i += 7) {\r\n        let index = i + 3;\r\n        let flag = args[index];\r\n        if (flag.length > 1) {\r\n            const a = /^([01])([01])(.*)$/.exec(flag);\r\n            if (a !== null) {\r\n                args.splice(index, 0, a[1]);\r\n                ++index;\r\n                args.splice(index, 0, a[2]);\r\n                ++index;\r\n                if (a[3].length > 0) {\r\n                    args[index] = a[3];\r\n                }\r\n                else {\r\n                    args.splice(index, 1);\r\n                }\r\n            }\r\n        }\r\n        ++index;\r\n        flag = args[index];\r\n        if (flag.length > 1) {\r\n            const a = /^([01])(.+)$/.exec(flag);\r\n            if (a !== null) {\r\n                args.splice(index, 0, a[1]);\r\n                ++index;\r\n                args[index] = a[2];\r\n            }\r\n        }\r\n    }\r\n}\r\n/**\r\n * @ignore\r\n */\r\nfunction assertBinary(value) {\r\n    if (value === 0 || value === 1) {\r\n        return value;\r\n    }\r\n    else {\r\n        throw new Error(\"Flag must be 0 or 1\");\r\n    }\r\n}\r\n//  1 -> 0xffffff * (2 / 2)\r\n//  2 -> 0xffffff * (1 / 2)\r\n//\r\n//  3 -> 0xffffff * (3 / 4)\r\n//  4 -> 0xffffff * (1 / 4)\r\n//\r\n//  5 -> 0xffffff * (7 / 8)\r\n//  6 -> 0xffffff * (5 / 8)\r\n//  7 -> 0xffffff * (3 / 8)\r\n//  8 -> 0xffffff * (1 / 8)\r\n//\r\n//  9 -> 0xffffff * (15 / 16)\r\n// 10 -> 0xffffff * (13 / 16)\r\n// 11 -> 0xffffff * (11 / 16)\r\n// 12 -> 0xffffff *  (9 / 16)\r\n// 13 -> 0xffffff *  (7 / 16)\r\n// 14 -> 0xffffff *  (5 / 16)\r\n// 15 -> 0xffffff *  (3 / 16)\r\n// 16 -> 0xffffff *  (1 / 16)\r\n// @todo remove this old color distribution algo if the new one pans out\r\n/*function distributeId(id: number): number {\r\n    if (id === 1) {\r\n        return 0x000001;\r\n\r\n    } else {\r\n        // Finds the closest power of 2\r\n        const base = Math.pow(2, Math.ceil(Math.log(id) / Math.log(2)));\r\n\r\n        // Translates the id into an odd fraction index\r\n        const index = ((base - id) * 2) + 1;\r\n\r\n        // TODO is Math.round correct ?\r\n        return Math.round(0xffffff * (index / base));\r\n    }\r\n}*/\r\n/**\r\n * Function by smeans:\r\n * https://lowcode.life/generating-unique-contrasting-colors-in-javascript/\r\n * @ignore\r\n */\r\nfunction distributeId(id) {\r\n    const rgb = [0, 0, 0];\r\n    for (let i = 0; i < 24; i++) {\r\n        rgb[i % 3] <<= 1;\r\n        rgb[i % 3] |= id & 0x01;\r\n        id >>= 1;\r\n    }\r\n    return (rgb[0] | 0) + (rgb[1] << 8) + (rgb[2] << 16);\r\n}\r\n/**\r\n * @ignore\r\n */\r\nfunction eachTargets(hitTarget, f) {\r\n    for (;;) {\r\n        if (hitTarget.interactive) {\r\n            if (!f(hitTarget)) {\r\n                break;\r\n            }\r\n        }\r\n        if (hitTarget._parent) {\r\n            hitTarget = hitTarget._parent;\r\n        }\r\n        else {\r\n            break;\r\n        }\r\n    }\r\n}\r\n// TODO feature detection for mouse/touch/pointer\r\n/**\r\n * @ignore\r\n */\r\nfunction onPointerEvent(element, name, f) {\r\n    return $utils.addEventListener(element, $utils.getRendererEvent(name), (event) => {\r\n        const target = $utils.getEventTarget(event);\r\n        let touches = event.touches;\r\n        if (touches) {\r\n            if (touches.length == 0) {\r\n                touches = event.changedTouches;\r\n            }\r\n            f($array.copy(touches), target);\r\n        }\r\n        else {\r\n            f([event], target);\r\n        }\r\n    });\r\n}\r\n/**\r\n * @ignore\r\n */\r\nfunction isTainted(image) {\r\n    const canvas = document.createElement(\"canvas\");\r\n    canvas.width = 1;\r\n    canvas.height = 1;\r\n    const context = canvas.getContext(\"2d\", { willReadFrequently: true });\r\n    context.drawImage(image, 0, 0, 1, 1);\r\n    try {\r\n        context.getImageData(0, 0, 1, 1);\r\n        return false;\r\n    }\r\n    catch (err) {\r\n        console.warn(\"Image \\\"\" + image.src + \"\\\" is loaded from different host and is not covered by CORS policy. For more information about the implications read here: https://www.amcharts.com/docs/v5/concepts/cors\");\r\n        return true;\r\n    }\r\n}\r\n/**\r\n * This is needed to workaround a bug in iOS which causes it to not GC canvas elements.\r\n *\r\n * @ignore\r\n */\r\nfunction clearCanvas(view) {\r\n    view.width = 0;\r\n    view.height = 0;\r\n    view.style.width = \"0px\";\r\n    view.style.height = \"0px\";\r\n}\r\n/**\r\n * Aligns the coordinate to the pixel, so it renders crisp\r\n *\r\n * @ignore\r\n */\r\nfunction crisp(x) {\r\n    return Math.floor(x) + .5;\r\n}\r\n/**\r\n * @ignore\r\n */\r\nexport class CanvasPivot {\r\n    constructor() {\r\n        Object.defineProperty(this, \"_x\", {\r\n            enumerable: true,\r\n            configurable: true,\r\n            writable: true,\r\n            value: 0\r\n        });\r\n        Object.defineProperty(this, \"_y\", {\r\n            enumerable: true,\r\n            configurable: true,\r\n            writable: true,\r\n            value: 0\r\n        });\r\n    }\r\n    get x() {\r\n        return this._x;\r\n    }\r\n    get y() {\r\n        return this._y;\r\n    }\r\n    set x(value) {\r\n        this._x = value;\r\n    }\r\n    set y(value) {\r\n        this._y = value;\r\n    }\r\n}\r\n/**\r\n * @ignore\r\n */\r\nexport class CanvasDisplayObject extends DisposerClass {\r\n    constructor(renderer) {\r\n        super();\r\n        Object.defineProperty(this, \"_layer\", {\r\n            enumerable: true,\r\n            configurable: true,\r\n            writable: true,\r\n            value: void 0\r\n        });\r\n        Object.defineProperty(this, \"mask\", {\r\n            enumerable: true,\r\n            configurable: true,\r\n            writable: true,\r\n            value: null\r\n        });\r\n        Object.defineProperty(this, \"visible\", {\r\n            enumerable: true,\r\n            configurable: true,\r\n            writable: true,\r\n            value: true\r\n        });\r\n        Object.defineProperty(this, \"exportable\", {\r\n            enumerable: true,\r\n            configurable: true,\r\n            writable: true,\r\n            value: true\r\n        });\r\n        Object.defineProperty(this, \"interactive\", {\r\n            enumerable: true,\r\n            configurable: true,\r\n            writable: true,\r\n            value: false\r\n        });\r\n        Object.defineProperty(this, \"inactive\", {\r\n            enumerable: true,\r\n            configurable: true,\r\n            writable: true,\r\n            value: null\r\n        });\r\n        Object.defineProperty(this, \"wheelable\", {\r\n            enumerable: true,\r\n            configurable: true,\r\n            writable: true,\r\n            value: false\r\n        });\r\n        Object.defineProperty(this, \"cancelTouch\", {\r\n            enumerable: true,\r\n            configurable: true,\r\n            writable: true,\r\n            value: false\r\n        });\r\n        Object.defineProperty(this, \"isMeasured\", {\r\n            enumerable: true,\r\n            configurable: true,\r\n            writable: true,\r\n            value: false\r\n        });\r\n        Object.defineProperty(this, \"buttonMode\", {\r\n            enumerable: true,\r\n            configurable: true,\r\n            writable: true,\r\n            value: false\r\n        });\r\n        Object.defineProperty(this, \"alpha\", {\r\n            enumerable: true,\r\n            configurable: true,\r\n            writable: true,\r\n            value: 1\r\n        });\r\n        Object.defineProperty(this, \"compoundAlpha\", {\r\n            enumerable: true,\r\n            configurable: true,\r\n            writable: true,\r\n            value: 1\r\n        });\r\n        Object.defineProperty(this, \"angle\", {\r\n            enumerable: true,\r\n            configurable: true,\r\n            writable: true,\r\n            value: 0\r\n        });\r\n        Object.defineProperty(this, \"scale\", {\r\n            enumerable: true,\r\n            configurable: true,\r\n            writable: true,\r\n            value: 1\r\n        });\r\n        Object.defineProperty(this, \"x\", {\r\n            enumerable: true,\r\n            configurable: true,\r\n            writable: true,\r\n            value: 0\r\n        });\r\n        Object.defineProperty(this, \"y\", {\r\n            enumerable: true,\r\n            configurable: true,\r\n            writable: true,\r\n            value: 0\r\n        });\r\n        Object.defineProperty(this, \"crisp\", {\r\n            enumerable: true,\r\n            configurable: true,\r\n            writable: true,\r\n            value: false\r\n        });\r\n        Object.defineProperty(this, \"pivot\", {\r\n            enumerable: true,\r\n            configurable: true,\r\n            writable: true,\r\n            value: new CanvasPivot()\r\n        });\r\n        Object.defineProperty(this, \"filter\", {\r\n            enumerable: true,\r\n            configurable: true,\r\n            writable: true,\r\n            value: void 0\r\n        });\r\n        Object.defineProperty(this, \"cursorOverStyle\", {\r\n            enumerable: true,\r\n            configurable: true,\r\n            writable: true,\r\n            value: void 0\r\n        });\r\n        Object.defineProperty(this, \"_replacedCursorStyle\", {\r\n            enumerable: true,\r\n            configurable: true,\r\n            writable: true,\r\n            value: void 0\r\n        });\r\n        Object.defineProperty(this, \"_localMatrix\", {\r\n            enumerable: true,\r\n            configurable: true,\r\n            writable: true,\r\n            value: new Matrix()\r\n        });\r\n        Object.defineProperty(this, \"_matrix\", {\r\n            enumerable: true,\r\n            configurable: true,\r\n            writable: true,\r\n            value: new Matrix()\r\n        });\r\n        // TODO can this be replaced with _localMatrix ?\r\n        Object.defineProperty(this, \"_uMatrix\", {\r\n            enumerable: true,\r\n            configurable: true,\r\n            writable: true,\r\n            value: new Matrix()\r\n        });\r\n        Object.defineProperty(this, \"_renderer\", {\r\n            enumerable: true,\r\n            configurable: true,\r\n            writable: true,\r\n            value: void 0\r\n        });\r\n        Object.defineProperty(this, \"_parent\", {\r\n            enumerable: true,\r\n            configurable: true,\r\n            writable: true,\r\n            value: void 0\r\n        });\r\n        Object.defineProperty(this, \"_localBounds\", {\r\n            enumerable: true,\r\n            configurable: true,\r\n            writable: true,\r\n            value: void 0\r\n        });\r\n        Object.defineProperty(this, \"_bounds\", {\r\n            enumerable: true,\r\n            configurable: true,\r\n            writable: true,\r\n            value: void 0\r\n        });\r\n        Object.defineProperty(this, \"_colorId\", {\r\n            enumerable: true,\r\n            configurable: true,\r\n            writable: true,\r\n            value: void 0\r\n        });\r\n        this._renderer = renderer;\r\n    }\r\n    subStatus(status) {\r\n        return {\r\n            inactive: (this.inactive == null ? status.inactive : this.inactive),\r\n            layer: this._layer || status.layer,\r\n        };\r\n    }\r\n    _dispose() {\r\n        this._renderer._removeObject(this);\r\n        this.getLayer().dirty = true;\r\n    }\r\n    getCanvas() {\r\n        return this.getLayer().view;\r\n    }\r\n    getLayer() {\r\n        let self = this;\r\n        for (;;) {\r\n            if (self._layer) {\r\n                return self._layer;\r\n            }\r\n            else if (self._parent) {\r\n                self = self._parent;\r\n            }\r\n            else {\r\n                return this._renderer.defaultLayer;\r\n            }\r\n        }\r\n    }\r\n    setLayer(order, margin) {\r\n        if (order == null) {\r\n            this._layer = undefined;\r\n        }\r\n        else {\r\n            const visible = true;\r\n            this._layer = this._renderer.getLayer(order, visible);\r\n            this._layer.visible = visible;\r\n            this._layer.margin = margin;\r\n            if (margin) {\r\n                $utils.setInteractive(this._layer.view, false);\r\n            }\r\n            this._renderer._ghostLayer.setMargin(this._renderer.layers);\r\n            if (this._parent) {\r\n                this._parent.registerChildLayer(this._layer);\r\n            }\r\n            this._layer.dirty = true;\r\n            this._renderer.resizeLayer(this._layer);\r\n            this._renderer.resizeGhost();\r\n        }\r\n    }\r\n    markDirtyLayer() {\r\n        this.getLayer().dirty = true;\r\n    }\r\n    clear() {\r\n        this.invalidateBounds();\r\n    }\r\n    invalidateBounds() {\r\n        this._localBounds = undefined;\r\n    }\r\n    _addBounds(_bounds) { }\r\n    _getColorId() {\r\n        if (this._colorId === undefined) {\r\n            this._colorId = this._renderer.paintId(this);\r\n        }\r\n        return this._colorId;\r\n    }\r\n    _isInteractive(status) {\r\n        return !status.inactive && (this.interactive || this._renderer._forceInteractive > 0);\r\n    }\r\n    _isInteractiveMask(status) {\r\n        return this._isInteractive(status);\r\n    }\r\n    contains(child) {\r\n        for (;;) {\r\n            if (child === this) {\r\n                return true;\r\n            }\r\n            else if (child._parent) {\r\n                child = child._parent;\r\n            }\r\n            else {\r\n                return false;\r\n            }\r\n        }\r\n    }\r\n    toGlobal(point) {\r\n        return this._matrix.apply(point);\r\n    }\r\n    toLocal(point) {\r\n        return this._matrix.applyInverse(point);\r\n    }\r\n    getLocalMatrix() {\r\n        this._uMatrix.setTransform(0, 0, this.pivot.x, this.pivot.y, this.angle * Math.PI / 180, this.scale);\r\n        return this._uMatrix;\r\n    }\r\n    getLocalBounds() {\r\n        if (!this._localBounds) {\r\n            const bn = 10000000;\r\n            this._localBounds = {\r\n                left: bn,\r\n                top: bn,\r\n                right: -bn,\r\n                bottom: -bn\r\n            };\r\n            this._addBounds(this._localBounds);\r\n        }\r\n        return this._localBounds;\r\n    }\r\n    getAdjustedBounds(bounds) {\r\n        this._setMatrix();\r\n        const matrix = this.getLocalMatrix();\r\n        const p0 = matrix.apply({ x: bounds.left, y: bounds.top });\r\n        const p1 = matrix.apply({ x: bounds.right, y: bounds.top });\r\n        const p2 = matrix.apply({ x: bounds.right, y: bounds.bottom });\r\n        const p3 = matrix.apply({ x: bounds.left, y: bounds.bottom });\r\n        return {\r\n            left: Math.min(p0.x, p1.x, p2.x, p3.x),\r\n            top: Math.min(p0.y, p1.y, p2.y, p3.y),\r\n            right: Math.max(p0.x, p1.x, p2.x, p3.x),\r\n            bottom: Math.max(p0.y, p1.y, p2.y, p3.y)\r\n        };\r\n    }\r\n    on(key, callback, context) {\r\n        if (this.interactive) {\r\n            return this._renderer._addEvent(this, key, callback, context);\r\n        }\r\n        else {\r\n            return new Disposer(() => { });\r\n        }\r\n    }\r\n    _setMatrix() {\r\n        // TODO only calculate this if it has actually changed\r\n        this._localMatrix.setTransform(this.x, this.y, this.pivot.x, this.pivot.y, \r\n        // Converts degrees to radians\r\n        this.angle * Math.PI / 180, this.scale);\r\n        this._matrix.copyFrom(this._localMatrix);\r\n        if (this._parent) {\r\n            // TODO only calculate this if it has actually changed\r\n            this._matrix.prepend(this._parent._matrix);\r\n        }\r\n    }\r\n    _transform(context, resolution) {\r\n        const m = this._matrix;\r\n        let tx = m.tx * resolution;\r\n        let ty = m.ty * resolution;\r\n        if (this.crisp) {\r\n            tx = crisp(tx);\r\n            ty = crisp(ty);\r\n        }\r\n        context.setTransform(m.a * resolution, m.b * resolution, m.c * resolution, m.d * resolution, tx, ty);\r\n    }\r\n    _transformMargin(context, resolution, margin) {\r\n        const m = this._matrix;\r\n        context.setTransform(m.a * resolution, m.b * resolution, m.c * resolution, m.d * resolution, (m.tx + margin.left) * resolution, (m.ty + margin.top) * resolution);\r\n    }\r\n    _transformLayer(context, resolution, layer) {\r\n        if (layer.margin) {\r\n            this._transformMargin(context, layer.scale || resolution, layer.margin);\r\n        }\r\n        else {\r\n            this._transform(context, layer.scale || resolution);\r\n        }\r\n    }\r\n    render(status) {\r\n        if (this.visible && (this.exportable !== false || !this._renderer._omitTainted)) {\r\n            this._setMatrix();\r\n            const subStatus = this.subStatus(status);\r\n            const resolution = this._renderer.resolution;\r\n            const layers = this._renderer.layers;\r\n            const ghostLayer = this._renderer._ghostLayer;\r\n            const ghostContext = ghostLayer.context;\r\n            const mask = this.mask;\r\n            if (mask) {\r\n                mask._setMatrix();\r\n            }\r\n            // TODO improve this\r\n            $array.each(layers, (layer) => {\r\n                if (layer) {\r\n                    const context = layer.context;\r\n                    context.save();\r\n                    // We must apply the mask before we transform the element\r\n                    if (mask) {\r\n                        mask._transformLayer(context, resolution, layer);\r\n                        mask._runPath(context);\r\n                        context.clip();\r\n                    }\r\n                    context.globalAlpha = this.compoundAlpha * this.alpha;\r\n                    this._transformLayer(context, resolution, layer);\r\n                    if (this.filter) {\r\n                        context.filter = this.filter;\r\n                    }\r\n                }\r\n            });\r\n            ghostContext.save();\r\n            // We must apply the mask before we transform the element\r\n            if (mask && this._isInteractiveMask(subStatus)) {\r\n                mask._transformMargin(ghostContext, resolution, ghostLayer.margin);\r\n                mask._runPath(ghostContext);\r\n                ghostContext.clip();\r\n            }\r\n            this._transformMargin(ghostContext, resolution, ghostLayer.margin);\r\n            this._render(subStatus);\r\n            ghostContext.restore();\r\n            $array.each(layers, (layer) => {\r\n                if (layer) {\r\n                    layer.context.restore();\r\n                }\r\n            });\r\n        }\r\n    }\r\n    _render(status) {\r\n        if (this.exportable === false) {\r\n            status.layer.tainted = true;\r\n        }\r\n    }\r\n    hovering() {\r\n        return this._renderer._hovering.has(this);\r\n    }\r\n    dragging() {\r\n        return this._renderer._dragging.some((x) => x.value === this);\r\n    }\r\n    shouldCancelTouch() {\r\n        const renderer = this._renderer;\r\n        if (renderer.tapToActivate && !renderer._touchActive) {\r\n            return false;\r\n        }\r\n        if (this.cancelTouch) {\r\n            return true;\r\n        }\r\n        else if (this._parent) {\r\n            return this._parent.shouldCancelTouch();\r\n        }\r\n        return false;\r\n    }\r\n}\r\n/**\r\n * @ignore\r\n */\r\nexport class CanvasContainer extends CanvasDisplayObject {\r\n    constructor() {\r\n        super(...arguments);\r\n        Object.defineProperty(this, \"interactiveChildren\", {\r\n            enumerable: true,\r\n            configurable: true,\r\n            writable: true,\r\n            value: true\r\n        });\r\n        Object.defineProperty(this, \"_childLayers\", {\r\n            enumerable: true,\r\n            configurable: true,\r\n            writable: true,\r\n            value: void 0\r\n        });\r\n        Object.defineProperty(this, \"_children\", {\r\n            enumerable: true,\r\n            configurable: true,\r\n            writable: true,\r\n            value: []\r\n        });\r\n    }\r\n    _isInteractiveMask(status) {\r\n        return this.interactiveChildren || super._isInteractiveMask(status);\r\n    }\r\n    addChild(child) {\r\n        child._parent = this;\r\n        this._children.push(child);\r\n        if (child._layer) {\r\n            this.registerChildLayer(child._layer);\r\n        }\r\n    }\r\n    addChildAt(child, index) {\r\n        child._parent = this;\r\n        this._children.splice(index, 0, child);\r\n        if (child._layer) {\r\n            this.registerChildLayer(child._layer);\r\n        }\r\n    }\r\n    removeChild(child) {\r\n        child._parent = undefined;\r\n        $array.removeFirst(this._children, child);\r\n    }\r\n    _render(status) {\r\n        super._render(status);\r\n        const renderer = this._renderer;\r\n        if (this.interactive && this.interactiveChildren) {\r\n            ++renderer._forceInteractive;\r\n        }\r\n        $array.each(this._children, (child) => {\r\n            child.compoundAlpha = this.compoundAlpha * this.alpha;\r\n            child.render(status);\r\n        });\r\n        if (this.interactive && this.interactiveChildren) {\r\n            --renderer._forceInteractive;\r\n        }\r\n    }\r\n    registerChildLayer(layer) {\r\n        if (!this._childLayers) {\r\n            this._childLayers = [];\r\n        }\r\n        $array.pushOne(this._childLayers, layer);\r\n        if (this._parent) {\r\n            this._parent.registerChildLayer(layer);\r\n        }\r\n    }\r\n    markDirtyLayer(deep = false) {\r\n        super.markDirtyLayer();\r\n        if (deep && this._childLayers) {\r\n            $array.each(this._childLayers, (layer) => layer.dirty = true);\r\n        }\r\n    }\r\n    _dispose() {\r\n        super._dispose();\r\n        if (this._childLayers) {\r\n            $array.each(this._childLayers, (layer) => {\r\n                layer.dirty = true;\r\n            });\r\n        }\r\n    }\r\n}\r\n/**\r\n * @ignore\r\n */\r\nfunction setPoint(bounds, point) {\r\n    bounds.left = Math.min(bounds.left, point.x);\r\n    bounds.top = Math.min(bounds.top, point.y);\r\n    bounds.right = Math.max(bounds.right, point.x);\r\n    bounds.bottom = Math.max(bounds.bottom, point.y);\r\n}\r\n/**\r\n * @ignore\r\n */\r\nclass Op {\r\n    colorize(_context, _forceColor) { }\r\n    colorizeGhost(context, forceColor) {\r\n        this.colorize(context, forceColor);\r\n    }\r\n    path(_context) { }\r\n    pathGhost(context) {\r\n        this.path(context);\r\n    }\r\n    addBounds(_bounds) { }\r\n}\r\n/**\r\n * @ignore\r\n */\r\nclass BeginPath extends Op {\r\n    colorize(context, _forceColor) {\r\n        context.beginPath();\r\n    }\r\n}\r\n/**\r\n * @ignore\r\n */\r\nclass BeginFill extends Op {\r\n    constructor(color) {\r\n        super();\r\n        Object.defineProperty(this, \"color\", {\r\n            enumerable: true,\r\n            configurable: true,\r\n            writable: true,\r\n            value: color\r\n        });\r\n    }\r\n    colorize(context, forceColor) {\r\n        if (forceColor !== undefined) {\r\n            context.fillStyle = forceColor;\r\n        }\r\n        else {\r\n            context.fillStyle = this.color;\r\n        }\r\n    }\r\n}\r\n/**\r\n * @ignore\r\n */\r\nclass EndFill extends Op {\r\n    constructor(clearShadow) {\r\n        super();\r\n        Object.defineProperty(this, \"clearShadow\", {\r\n            enumerable: true,\r\n            configurable: true,\r\n            writable: true,\r\n            value: clearShadow\r\n        });\r\n    }\r\n    colorize(context, _forceColor) {\r\n        context.fill();\r\n        if (this.clearShadow) {\r\n            context.shadowColor = \"\";\r\n            context.shadowBlur = 0;\r\n            context.shadowOffsetX = 0;\r\n            context.shadowOffsetY = 0;\r\n        }\r\n    }\r\n}\r\n/**\r\n * @ignore\r\n */\r\nclass EndStroke extends Op {\r\n    colorize(context, _forceColor) {\r\n        context.stroke();\r\n    }\r\n}\r\n/**\r\n * @ignore\r\n */\r\nclass LineStyle extends Op {\r\n    constructor(width, color, lineJoin, lineCap) {\r\n        super();\r\n        Object.defineProperty(this, \"width\", {\r\n            enumerable: true,\r\n            configurable: true,\r\n            writable: true,\r\n            value: width\r\n        });\r\n        Object.defineProperty(this, \"color\", {\r\n            enumerable: true,\r\n            configurable: true,\r\n            writable: true,\r\n            value: color\r\n        });\r\n        Object.defineProperty(this, \"lineJoin\", {\r\n            enumerable: true,\r\n            configurable: true,\r\n            writable: true,\r\n            value: lineJoin\r\n        });\r\n        Object.defineProperty(this, \"lineCap\", {\r\n            enumerable: true,\r\n            configurable: true,\r\n            writable: true,\r\n            value: lineCap\r\n        });\r\n    }\r\n    colorize(context, forceColor) {\r\n        if (forceColor !== undefined) {\r\n            context.strokeStyle = forceColor;\r\n        }\r\n        else {\r\n            context.strokeStyle = this.color;\r\n        }\r\n        context.lineWidth = this.width;\r\n        if (this.lineJoin) {\r\n            context.lineJoin = this.lineJoin;\r\n        }\r\n        if (this.lineCap) {\r\n            context.lineCap = this.lineCap;\r\n        }\r\n    }\r\n}\r\n/**\r\n * @ignore\r\n */\r\nclass LineDash extends Op {\r\n    constructor(dash) {\r\n        super();\r\n        Object.defineProperty(this, \"dash\", {\r\n            enumerable: true,\r\n            configurable: true,\r\n            writable: true,\r\n            value: dash\r\n        });\r\n    }\r\n    colorize(context, _forceColor) {\r\n        context.setLineDash(this.dash);\r\n    }\r\n}\r\n/**\r\n * @ignore\r\n */\r\nclass LineDashOffset extends Op {\r\n    constructor(dashOffset) {\r\n        super();\r\n        Object.defineProperty(this, \"dashOffset\", {\r\n            enumerable: true,\r\n            configurable: true,\r\n            writable: true,\r\n            value: dashOffset\r\n        });\r\n    }\r\n    colorize(context, _forceColor) {\r\n        context.lineDashOffset = this.dashOffset;\r\n    }\r\n}\r\n/**\r\n * @ignore\r\n */\r\nclass DrawRect extends Op {\r\n    constructor(x, y, width, height) {\r\n        super();\r\n        Object.defineProperty(this, \"x\", {\r\n            enumerable: true,\r\n            configurable: true,\r\n            writable: true,\r\n            value: x\r\n        });\r\n        Object.defineProperty(this, \"y\", {\r\n            enumerable: true,\r\n            configurable: true,\r\n            writable: true,\r\n            value: y\r\n        });\r\n        Object.defineProperty(this, \"width\", {\r\n            enumerable: true,\r\n            configurable: true,\r\n            writable: true,\r\n            value: width\r\n        });\r\n        Object.defineProperty(this, \"height\", {\r\n            enumerable: true,\r\n            configurable: true,\r\n            writable: true,\r\n            value: height\r\n        });\r\n    }\r\n    path(context) {\r\n        context.rect(this.x, this.y, this.width, this.height);\r\n    }\r\n    addBounds(bounds) {\r\n        const l = this.x;\r\n        const t = this.y;\r\n        const r = l + this.width;\r\n        const b = t + this.height;\r\n        setPoint(bounds, { x: l, y: t });\r\n        setPoint(bounds, { x: r, y: t });\r\n        setPoint(bounds, { x: l, y: b });\r\n        setPoint(bounds, { x: r, y: b });\r\n    }\r\n}\r\n/**\r\n * @ignore\r\n */\r\nclass DrawCircle extends Op {\r\n    constructor(x, y, radius) {\r\n        super();\r\n        Object.defineProperty(this, \"x\", {\r\n            enumerable: true,\r\n            configurable: true,\r\n            writable: true,\r\n            value: x\r\n        });\r\n        Object.defineProperty(this, \"y\", {\r\n            enumerable: true,\r\n            configurable: true,\r\n            writable: true,\r\n            value: y\r\n        });\r\n        Object.defineProperty(this, \"radius\", {\r\n            enumerable: true,\r\n            configurable: true,\r\n            writable: true,\r\n            value: radius\r\n        });\r\n    }\r\n    path(context) {\r\n        context.moveTo(this.x + this.radius, this.y);\r\n        context.arc(this.x, this.y, this.radius, 0, 2 * Math.PI);\r\n    }\r\n    // TODO handle skewing and rotation\r\n    addBounds(bounds) {\r\n        setPoint(bounds, { x: this.x - this.radius, y: this.y - this.radius });\r\n        setPoint(bounds, { x: this.x + this.radius, y: this.y + this.radius });\r\n    }\r\n}\r\n/**\r\n * @ignore\r\n */\r\nclass DrawEllipse extends Op {\r\n    constructor(x, y, radiusX, radiusY) {\r\n        super();\r\n        Object.defineProperty(this, \"x\", {\r\n            enumerable: true,\r\n            configurable: true,\r\n            writable: true,\r\n            value: x\r\n        });\r\n        Object.defineProperty(this, \"y\", {\r\n            enumerable: true,\r\n            configurable: true,\r\n            writable: true,\r\n            value: y\r\n        });\r\n        Object.defineProperty(this, \"radiusX\", {\r\n            enumerable: true,\r\n            configurable: true,\r\n            writable: true,\r\n            value: radiusX\r\n        });\r\n        Object.defineProperty(this, \"radiusY\", {\r\n            enumerable: true,\r\n            configurable: true,\r\n            writable: true,\r\n            value: radiusY\r\n        });\r\n    }\r\n    path(context) {\r\n        context.ellipse(0, 0, this.radiusX, this.radiusY, 0, 0, Math.PI * 2);\r\n    }\r\n    // TODO handle skewing and rotation\r\n    addBounds(bounds) {\r\n        setPoint(bounds, { x: this.x - this.radiusX, y: this.y - this.radiusY });\r\n        setPoint(bounds, { x: this.x + this.radiusX, y: this.y + this.radiusY });\r\n    }\r\n}\r\n/**\r\n * @ignore\r\n */\r\nclass Arc extends Op {\r\n    constructor(cx, cy, radius, startAngle, endAngle, anticlockwise) {\r\n        super();\r\n        Object.defineProperty(this, \"cx\", {\r\n            enumerable: true,\r\n            configurable: true,\r\n            writable: true,\r\n            value: cx\r\n        });\r\n        Object.defineProperty(this, \"cy\", {\r\n            enumerable: true,\r\n            configurable: true,\r\n            writable: true,\r\n            value: cy\r\n        });\r\n        Object.defineProperty(this, \"radius\", {\r\n            enumerable: true,\r\n            configurable: true,\r\n            writable: true,\r\n            value: radius\r\n        });\r\n        Object.defineProperty(this, \"startAngle\", {\r\n            enumerable: true,\r\n            configurable: true,\r\n            writable: true,\r\n            value: startAngle\r\n        });\r\n        Object.defineProperty(this, \"endAngle\", {\r\n            enumerable: true,\r\n            configurable: true,\r\n            writable: true,\r\n            value: endAngle\r\n        });\r\n        Object.defineProperty(this, \"anticlockwise\", {\r\n            enumerable: true,\r\n            configurable: true,\r\n            writable: true,\r\n            value: anticlockwise\r\n        });\r\n    }\r\n    path(context) {\r\n        if (this.radius > 0) {\r\n            context.arc(this.cx, this.cy, this.radius, this.startAngle, this.endAngle, this.anticlockwise);\r\n        }\r\n    }\r\n    addBounds(bounds) {\r\n        let arcBounds = $math.getArcBounds(this.cx, this.cy, this.startAngle * $math.DEGREES, this.endAngle * $math.DEGREES, this.radius);\r\n        setPoint(bounds, { x: arcBounds.left, y: arcBounds.top });\r\n        setPoint(bounds, { x: arcBounds.right, y: arcBounds.bottom });\r\n    }\r\n}\r\n/**\r\n * @ignore\r\n */\r\nclass ArcTo extends Op {\r\n    constructor(x1, y1, x2, y2, radius) {\r\n        super();\r\n        Object.defineProperty(this, \"x1\", {\r\n            enumerable: true,\r\n            configurable: true,\r\n            writable: true,\r\n            value: x1\r\n        });\r\n        Object.defineProperty(this, \"y1\", {\r\n            enumerable: true,\r\n            configurable: true,\r\n            writable: true,\r\n            value: y1\r\n        });\r\n        Object.defineProperty(this, \"x2\", {\r\n            enumerable: true,\r\n            configurable: true,\r\n            writable: true,\r\n            value: x2\r\n        });\r\n        Object.defineProperty(this, \"y2\", {\r\n            enumerable: true,\r\n            configurable: true,\r\n            writable: true,\r\n            value: y2\r\n        });\r\n        Object.defineProperty(this, \"radius\", {\r\n            enumerable: true,\r\n            configurable: true,\r\n            writable: true,\r\n            value: radius\r\n        });\r\n    }\r\n    path(context) {\r\n        if (this.radius > 0) {\r\n            context.arcTo(this.x1, this.y1, this.x2, this.y2, this.radius);\r\n        }\r\n    }\r\n    // TODO: add points\r\n    addBounds(_bounds) {\r\n        /*\r\n        // not finished\r\n        https://math.stackexchange.com/questions/1781438/finding-the-center-of-a-circle-given-two-points-and-a-radius-algebraically\r\n\r\n        if (prevPoint) {\r\n            let x1 = prevPoint.x;\r\n            let y1 = prevPoint.y;\r\n            let x2 = this.x2;\r\n            let y2 = this.y2;\r\n            let r = this.radius;\r\n\r\n            let xa = (x2 - x1) / 2;\r\n            let ya = (y2 - y1) / 2;\r\n\r\n            let x0 = x1 + xa;\r\n            let y0 = y1 + ya;\r\n\r\n            let a = Math.hypot(xa, ya);\r\n            let b = Math.sqrt(r * r - a * a);\r\n\r\n            let cx = x0 + b * ya / a;\r\n            let cy = y0 - b * xa / a;\r\n\r\n            console.log(cx, cy);\r\n        }*/\r\n    }\r\n}\r\n/**\r\n * @ignore\r\n */\r\nclass LineTo extends Op {\r\n    constructor(x, y) {\r\n        super();\r\n        Object.defineProperty(this, \"x\", {\r\n            enumerable: true,\r\n            configurable: true,\r\n            writable: true,\r\n            value: x\r\n        });\r\n        Object.defineProperty(this, \"y\", {\r\n            enumerable: true,\r\n            configurable: true,\r\n            writable: true,\r\n            value: y\r\n        });\r\n    }\r\n    path(context) {\r\n        context.lineTo(this.x, this.y);\r\n    }\r\n    addBounds(bounds) {\r\n        setPoint(bounds, { x: this.x, y: this.y });\r\n    }\r\n}\r\n/**\r\n * @ignore\r\n */\r\nclass MoveTo extends Op {\r\n    constructor(x, y) {\r\n        super();\r\n        Object.defineProperty(this, \"x\", {\r\n            enumerable: true,\r\n            configurable: true,\r\n            writable: true,\r\n            value: x\r\n        });\r\n        Object.defineProperty(this, \"y\", {\r\n            enumerable: true,\r\n            configurable: true,\r\n            writable: true,\r\n            value: y\r\n        });\r\n    }\r\n    path(context) {\r\n        context.moveTo(this.x, this.y);\r\n    }\r\n    addBounds(bounds) {\r\n        setPoint(bounds, { x: this.x, y: this.y });\r\n    }\r\n}\r\n/**\r\n * @ignore\r\n */\r\nclass ClosePath extends Op {\r\n    path(context) {\r\n        context.closePath();\r\n    }\r\n}\r\n/**\r\n * @ignore\r\n */\r\nclass BezierCurveTo extends Op {\r\n    constructor(cpX, cpY, cpX2, cpY2, toX, toY) {\r\n        super();\r\n        Object.defineProperty(this, \"cpX\", {\r\n            enumerable: true,\r\n            configurable: true,\r\n            writable: true,\r\n            value: cpX\r\n        });\r\n        Object.defineProperty(this, \"cpY\", {\r\n            enumerable: true,\r\n            configurable: true,\r\n            writable: true,\r\n            value: cpY\r\n        });\r\n        Object.defineProperty(this, \"cpX2\", {\r\n            enumerable: true,\r\n            configurable: true,\r\n            writable: true,\r\n            value: cpX2\r\n        });\r\n        Object.defineProperty(this, \"cpY2\", {\r\n            enumerable: true,\r\n            configurable: true,\r\n            writable: true,\r\n            value: cpY2\r\n        });\r\n        Object.defineProperty(this, \"toX\", {\r\n            enumerable: true,\r\n            configurable: true,\r\n            writable: true,\r\n            value: toX\r\n        });\r\n        Object.defineProperty(this, \"toY\", {\r\n            enumerable: true,\r\n            configurable: true,\r\n            writable: true,\r\n            value: toY\r\n        });\r\n    }\r\n    path(context) {\r\n        context.bezierCurveTo(this.cpX, this.cpY, this.cpX2, this.cpY2, this.toX, this.toY);\r\n    }\r\n    // TODO: OK?\r\n    addBounds(bounds) {\r\n        setPoint(bounds, { x: this.cpX, y: this.cpY });\r\n        setPoint(bounds, { x: this.cpX2, y: this.cpY2 });\r\n        setPoint(bounds, { x: this.toX, y: this.toY });\r\n    }\r\n}\r\n/**\r\n * @ignore\r\n */\r\nclass QuadraticCurveTo extends Op {\r\n    constructor(cpX, cpY, toX, toY) {\r\n        super();\r\n        Object.defineProperty(this, \"cpX\", {\r\n            enumerable: true,\r\n            configurable: true,\r\n            writable: true,\r\n            value: cpX\r\n        });\r\n        Object.defineProperty(this, \"cpY\", {\r\n            enumerable: true,\r\n            configurable: true,\r\n            writable: true,\r\n            value: cpY\r\n        });\r\n        Object.defineProperty(this, \"toX\", {\r\n            enumerable: true,\r\n            configurable: true,\r\n            writable: true,\r\n            value: toX\r\n        });\r\n        Object.defineProperty(this, \"toY\", {\r\n            enumerable: true,\r\n            configurable: true,\r\n            writable: true,\r\n            value: toY\r\n        });\r\n    }\r\n    path(context) {\r\n        context.quadraticCurveTo(this.cpX, this.cpY, this.toX, this.toY);\r\n    }\r\n    // TODO: OK?\r\n    addBounds(bounds) {\r\n        setPoint(bounds, { x: this.cpX, y: this.cpY });\r\n        setPoint(bounds, { x: this.toX, y: this.toY });\r\n    }\r\n}\r\n/**\r\n * @ignore\r\n */\r\nclass Shadow extends Op {\r\n    constructor(color, blur, offsetX, offsetY, opacity) {\r\n        super();\r\n        Object.defineProperty(this, \"color\", {\r\n            enumerable: true,\r\n            configurable: true,\r\n            writable: true,\r\n            value: color\r\n        });\r\n        Object.defineProperty(this, \"blur\", {\r\n            enumerable: true,\r\n            configurable: true,\r\n            writable: true,\r\n            value: blur\r\n        });\r\n        Object.defineProperty(this, \"offsetX\", {\r\n            enumerable: true,\r\n            configurable: true,\r\n            writable: true,\r\n            value: offsetX\r\n        });\r\n        Object.defineProperty(this, \"offsetY\", {\r\n            enumerable: true,\r\n            configurable: true,\r\n            writable: true,\r\n            value: offsetY\r\n        });\r\n        Object.defineProperty(this, \"opacity\", {\r\n            enumerable: true,\r\n            configurable: true,\r\n            writable: true,\r\n            value: opacity\r\n        });\r\n    }\r\n    colorize(context, _forceColor) {\r\n        if (this.opacity) {\r\n            context.fillStyle = this.color;\r\n        }\r\n        context.shadowColor = this.color;\r\n        context.shadowBlur = this.blur;\r\n        context.shadowOffsetX = this.offsetX;\r\n        context.shadowOffsetY = this.offsetY;\r\n    }\r\n    colorizeGhost(_context, _forceColor) { }\r\n}\r\n/**\r\n * @ignore\r\n */\r\nclass GraphicsImage extends Op {\r\n    constructor(image, width, height, x, y) {\r\n        super();\r\n        Object.defineProperty(this, \"image\", {\r\n            enumerable: true,\r\n            configurable: true,\r\n            writable: true,\r\n            value: image\r\n        });\r\n        Object.defineProperty(this, \"width\", {\r\n            enumerable: true,\r\n            configurable: true,\r\n            writable: true,\r\n            value: width\r\n        });\r\n        Object.defineProperty(this, \"height\", {\r\n            enumerable: true,\r\n            configurable: true,\r\n            writable: true,\r\n            value: height\r\n        });\r\n        Object.defineProperty(this, \"x\", {\r\n            enumerable: true,\r\n            configurable: true,\r\n            writable: true,\r\n            value: x\r\n        });\r\n        Object.defineProperty(this, \"y\", {\r\n            enumerable: true,\r\n            configurable: true,\r\n            writable: true,\r\n            value: y\r\n        });\r\n    }\r\n    path(context) {\r\n        context.drawImage(this.image, this.x, this.y, this.width, this.height);\r\n    }\r\n    // TODO: OK?\r\n    addBounds(bounds) {\r\n        setPoint(bounds, { x: this.x, y: this.y });\r\n        setPoint(bounds, { x: this.width, y: this.height });\r\n    }\r\n}\r\n/**\r\n * @ignore\r\n */\r\nexport class CanvasGraphics extends CanvasDisplayObject {\r\n    constructor() {\r\n        super(...arguments);\r\n        Object.defineProperty(this, \"_operations\", {\r\n            enumerable: true,\r\n            configurable: true,\r\n            writable: true,\r\n            value: []\r\n        });\r\n        Object.defineProperty(this, \"blendMode\", {\r\n            enumerable: true,\r\n            configurable: true,\r\n            writable: true,\r\n            value: BlendMode.NORMAL\r\n        });\r\n        Object.defineProperty(this, \"_hasShadows\", {\r\n            enumerable: true,\r\n            configurable: true,\r\n            writable: true,\r\n            value: false\r\n        });\r\n        Object.defineProperty(this, \"_fillAlpha\", {\r\n            enumerable: true,\r\n            configurable: true,\r\n            writable: true,\r\n            value: void 0\r\n        });\r\n        Object.defineProperty(this, \"_strokeAlpha\", {\r\n            enumerable: true,\r\n            configurable: true,\r\n            writable: true,\r\n            value: void 0\r\n        });\r\n    }\r\n    clear() {\r\n        super.clear();\r\n        this._operations.length = 0;\r\n    }\r\n    _pushOp(op) {\r\n        this._operations.push(op);\r\n    }\r\n    beginFill(color, alpha = 1) {\r\n        this._fillAlpha = alpha;\r\n        if (color) {\r\n            if (color instanceof Color) {\r\n                this._pushOp(new BeginFill(color.toCSS(alpha)));\r\n            }\r\n            else {\r\n                this.isMeasured = true;\r\n                this._pushOp(new BeginFill(color));\r\n            }\r\n        }\r\n        else {\r\n            this._pushOp(new BeginFill(\"rgba(0, 0, 0, \" + alpha + \")\"));\r\n        }\r\n    }\r\n    endFill() {\r\n        this._pushOp(new EndFill(this._hasShadows));\r\n    }\r\n    endStroke() {\r\n        this._pushOp(new EndStroke());\r\n    }\r\n    beginPath() {\r\n        this._pushOp(new BeginPath());\r\n    }\r\n    lineStyle(width = 0, color, alpha = 1, lineJoin, lineCap) {\r\n        this._strokeAlpha = alpha;\r\n        if (color) {\r\n            if (color instanceof Color) {\r\n                this._pushOp(new LineStyle(width, color.toCSS(alpha), lineJoin, lineCap));\r\n            }\r\n            else {\r\n                this._pushOp(new LineStyle(width, color, lineJoin, lineCap));\r\n            }\r\n        }\r\n        else {\r\n            this._pushOp(new LineStyle(width, \"rgba(0, 0, 0, \" + alpha + \")\", lineJoin, lineCap));\r\n        }\r\n    }\r\n    setLineDash(dash) {\r\n        this._pushOp(new LineDash(dash ? dash : []));\r\n    }\r\n    setLineDashOffset(dashOffset = 0) {\r\n        this._pushOp(new LineDashOffset(dashOffset));\r\n    }\r\n    drawRect(x, y, width, height) {\r\n        this._pushOp(new DrawRect(x, y, width, height));\r\n    }\r\n    drawCircle(x, y, radius) {\r\n        this._pushOp(new DrawCircle(x, y, radius));\r\n    }\r\n    drawEllipse(x, y, radiusX, radiusY) {\r\n        this._pushOp(new DrawEllipse(x, y, radiusX, radiusY));\r\n    }\r\n    arc(cx, cy, radius, startAngle, endAngle, anticlockwise = false) {\r\n        this._pushOp(new Arc(cx, cy, radius, startAngle, endAngle, anticlockwise));\r\n    }\r\n    arcTo(x1, y1, x2, y2, radius) {\r\n        this._pushOp(new ArcTo(x1, y1, x2, y2, radius));\r\n    }\r\n    lineTo(x, y) {\r\n        this._pushOp(new LineTo(x, y));\r\n    }\r\n    moveTo(x, y) {\r\n        this._pushOp(new MoveTo(x, y));\r\n    }\r\n    bezierCurveTo(cpX, cpY, cpX2, cpY2, toX, toY) {\r\n        this._pushOp(new BezierCurveTo(cpX, cpY, cpX2, cpY2, toX, toY));\r\n    }\r\n    quadraticCurveTo(cpX, cpY, toX, toY) {\r\n        this._pushOp(new QuadraticCurveTo(cpX, cpY, toX, toY));\r\n    }\r\n    closePath() {\r\n        this._pushOp(new ClosePath());\r\n    }\r\n    shadow(color, blur = 0, offsetX = 0, offsetY = 0, opacity) {\r\n        this._hasShadows = true;\r\n        this._pushOp(new Shadow(opacity ? color.toCSS(opacity) : color.toCSS(this._fillAlpha || this._strokeAlpha), blur, offsetX, offsetY));\r\n    }\r\n    image(image, width, height, x, y) {\r\n        this._pushOp(new GraphicsImage(image, width, height, x, y));\r\n    }\r\n    // https://svgwg.org/svg2-draft/paths.html#DProperty\r\n    // TODO better error checking\r\n    svgPath(path) {\r\n        let x = 0;\r\n        let y = 0;\r\n        let cpx = null;\r\n        let cpy = null;\r\n        let qcpx = null;\r\n        let qcpy = null;\r\n        const SEGMENTS_REGEXP = /([MmZzLlHhVvCcSsQqTtAa])([^MmZzLlHhVvCcSsQqTtAa]*)/g;\r\n        const ARGS_REGEXP = /[\\u0009\\u0020\\u000A\\u000C\\u000D]*([\\+\\-]?[0-9]*\\.?[0-9]+(?:[eE][\\+\\-]?[0-9]+)?)[\\u0009\\u0020\\u000A\\u000C\\u000D]*,?/g;\r\n        let match;\r\n        while ((match = SEGMENTS_REGEXP.exec(path)) !== null) {\r\n            const name = match[1];\r\n            const rest = match[2];\r\n            const args = [];\r\n            while ((match = ARGS_REGEXP.exec(rest)) !== null) {\r\n                args.push(match[1]);\r\n            }\r\n            // Reset control point\r\n            if (name !== \"S\" && name !== \"s\" && name !== \"C\" && name !== \"c\") {\r\n                cpx = null;\r\n                cpy = null;\r\n            }\r\n            // Reset control point\r\n            if (name !== \"Q\" && name !== \"q\" && name !== \"T\" && name !== \"t\") {\r\n                qcpx = null;\r\n                qcpy = null;\r\n            }\r\n            switch (name) {\r\n                case \"M\":\r\n                    checkEvenArgs(name, args.length, 2);\r\n                    x = +args[0];\r\n                    y = +args[1];\r\n                    this.moveTo(x, y);\r\n                    for (let i = 2; i < args.length; i += 2) {\r\n                        x = +args[i];\r\n                        y = +args[i + 1];\r\n                        this.lineTo(x, y);\r\n                    }\r\n                    break;\r\n                case \"m\":\r\n                    checkEvenArgs(name, args.length, 2);\r\n                    x += +args[0];\r\n                    y += +args[1];\r\n                    this.moveTo(x, y);\r\n                    for (let i = 2; i < args.length; i += 2) {\r\n                        x += +args[i];\r\n                        y += +args[i + 1];\r\n                        this.lineTo(x, y);\r\n                    }\r\n                    break;\r\n                case \"L\":\r\n                    checkEvenArgs(name, args.length, 2);\r\n                    for (let i = 0; i < args.length; i += 2) {\r\n                        x = +args[i];\r\n                        y = +args[i + 1];\r\n                        this.lineTo(x, y);\r\n                    }\r\n                    break;\r\n                case \"l\":\r\n                    checkEvenArgs(name, args.length, 2);\r\n                    for (let i = 0; i < args.length; i += 2) {\r\n                        x += +args[i];\r\n                        y += +args[i + 1];\r\n                        this.lineTo(x, y);\r\n                    }\r\n                    break;\r\n                case \"H\":\r\n                    checkMinArgs(name, args.length, 1);\r\n                    for (let i = 0; i < args.length; ++i) {\r\n                        x = +args[i];\r\n                        this.lineTo(x, y);\r\n                    }\r\n                    break;\r\n                case \"h\":\r\n                    checkMinArgs(name, args.length, 1);\r\n                    for (let i = 0; i < args.length; ++i) {\r\n                        x += +args[i];\r\n                        this.lineTo(x, y);\r\n                    }\r\n                    break;\r\n                case \"V\":\r\n                    checkMinArgs(name, args.length, 1);\r\n                    for (let i = 0; i < args.length; ++i) {\r\n                        y = +args[i];\r\n                        this.lineTo(x, y);\r\n                    }\r\n                    break;\r\n                case \"v\":\r\n                    checkMinArgs(name, args.length, 1);\r\n                    for (let i = 0; i < args.length; ++i) {\r\n                        y += +args[i];\r\n                        this.lineTo(x, y);\r\n                    }\r\n                    break;\r\n                case \"C\":\r\n                    checkEvenArgs(name, args.length, 6);\r\n                    for (let i = 0; i < args.length; i += 6) {\r\n                        const x1 = +args[i];\r\n                        const y1 = +args[i + 1];\r\n                        cpx = +args[i + 2];\r\n                        cpy = +args[i + 3];\r\n                        x = +args[i + 4];\r\n                        y = +args[i + 5];\r\n                        this.bezierCurveTo(x1, y1, cpx, cpy, x, y);\r\n                    }\r\n                    break;\r\n                case \"c\":\r\n                    checkEvenArgs(name, args.length, 6);\r\n                    for (let i = 0; i < args.length; i += 6) {\r\n                        const x1 = +args[i] + x;\r\n                        const y1 = +args[i + 1] + y;\r\n                        cpx = +args[i + 2] + x;\r\n                        cpy = +args[i + 3] + y;\r\n                        x += +args[i + 4];\r\n                        y += +args[i + 5];\r\n                        this.bezierCurveTo(x1, y1, cpx, cpy, x, y);\r\n                    }\r\n                    break;\r\n                case \"S\":\r\n                    checkEvenArgs(name, args.length, 4);\r\n                    if (cpx === null || cpy === null) {\r\n                        cpx = x;\r\n                        cpy = y;\r\n                    }\r\n                    for (let i = 0; i < args.length; i += 4) {\r\n                        const x1 = 2 * x - cpx;\r\n                        const y1 = 2 * y - cpy;\r\n                        cpx = +args[i];\r\n                        cpy = +args[i + 1];\r\n                        x = +args[i + 2];\r\n                        y = +args[i + 3];\r\n                        this.bezierCurveTo(x1, y1, cpx, cpy, x, y);\r\n                    }\r\n                    break;\r\n                case \"s\":\r\n                    checkEvenArgs(name, args.length, 4);\r\n                    if (cpx === null || cpy === null) {\r\n                        cpx = x;\r\n                        cpy = y;\r\n                    }\r\n                    for (let i = 0; i < args.length; i += 4) {\r\n                        const x1 = 2 * x - cpx;\r\n                        const y1 = 2 * y - cpy;\r\n                        cpx = +args[i] + x;\r\n                        cpy = +args[i + 1] + y;\r\n                        x += +args[i + 2];\r\n                        y += +args[i + 3];\r\n                        this.bezierCurveTo(x1, y1, cpx, cpy, x, y);\r\n                    }\r\n                    break;\r\n                case \"Q\":\r\n                    checkEvenArgs(name, args.length, 4);\r\n                    for (let i = 0; i < args.length; i += 4) {\r\n                        qcpx = +args[i];\r\n                        qcpy = +args[i + 1];\r\n                        x = +args[i + 2];\r\n                        y = +args[i + 3];\r\n                        this.quadraticCurveTo(qcpx, qcpy, x, y);\r\n                    }\r\n                    break;\r\n                case \"q\":\r\n                    checkEvenArgs(name, args.length, 4);\r\n                    for (let i = 0; i < args.length; i += 4) {\r\n                        qcpx = +args[i] + x;\r\n                        qcpy = +args[i + 1] + y;\r\n                        x += +args[i + 2];\r\n                        y += +args[i + 3];\r\n                        this.quadraticCurveTo(qcpx, qcpy, x, y);\r\n                    }\r\n                    break;\r\n                case \"T\":\r\n                    checkEvenArgs(name, args.length, 2);\r\n                    if (qcpx === null || qcpy === null) {\r\n                        qcpx = x;\r\n                        qcpy = y;\r\n                    }\r\n                    for (let i = 0; i < args.length; i += 2) {\r\n                        qcpx = 2 * x - qcpx;\r\n                        qcpy = 2 * y - qcpy;\r\n                        x = +args[i];\r\n                        y = +args[i + 1];\r\n                        this.quadraticCurveTo(qcpx, qcpy, x, y);\r\n                    }\r\n                    break;\r\n                case \"t\":\r\n                    checkEvenArgs(name, args.length, 2);\r\n                    if (qcpx === null || qcpy === null) {\r\n                        qcpx = x;\r\n                        qcpy = y;\r\n                    }\r\n                    for (let i = 0; i < args.length; i += 2) {\r\n                        qcpx = 2 * x - qcpx;\r\n                        qcpy = 2 * y - qcpy;\r\n                        x += +args[i];\r\n                        y += +args[i + 1];\r\n                        this.quadraticCurveTo(qcpx, qcpy, x, y);\r\n                    }\r\n                    break;\r\n                case \"A\":\r\n                case \"a\":\r\n                    const relative = (name === \"a\");\r\n                    splitArcFlags(args);\r\n                    checkEvenArgs(name, args.length, 7);\r\n                    for (let i = 0; i < args.length; i += 7) {\r\n                        let cx = +args[i + 5];\r\n                        let cy = +args[i + 6];\r\n                        if (relative) {\r\n                            cx += x;\r\n                            cy += y;\r\n                        }\r\n                        const bs = arcToBezier({\r\n                            px: x,\r\n                            py: y,\r\n                            rx: +args[i],\r\n                            ry: +args[i + 1],\r\n                            xAxisRotation: +args[i + 2],\r\n                            largeArcFlag: assertBinary(+args[i + 3]),\r\n                            sweepFlag: assertBinary(+args[i + 4]),\r\n                            cx,\r\n                            cy,\r\n                        });\r\n                        $array.each(bs, (b) => {\r\n                            this.bezierCurveTo(b.x1, b.y1, b.x2, b.y2, b.x, b.y);\r\n                            x = b.x;\r\n                            y = b.y;\r\n                        });\r\n                    }\r\n                    break;\r\n                case \"Z\":\r\n                case \"z\":\r\n                    checkArgs(name, args.length, 0);\r\n                    this.closePath();\r\n                    break;\r\n            }\r\n        }\r\n    }\r\n    _runPath(context) {\r\n        context.beginPath();\r\n        $array.each(this._operations, (op) => {\r\n            op.path(context);\r\n        });\r\n    }\r\n    _render(status) {\r\n        super._render(status);\r\n        const layerDirty = status.layer.dirty;\r\n        const interactive = this._isInteractive(status);\r\n        if (layerDirty || interactive) {\r\n            const context = status.layer.context;\r\n            const ghostContext = this._renderer._ghostLayer.context;\r\n            if (layerDirty) {\r\n                context.globalCompositeOperation = this.blendMode;\r\n                context.beginPath();\r\n            }\r\n            let color;\r\n            if (interactive) {\r\n                ghostContext.beginPath();\r\n                color = this._getColorId();\r\n            }\r\n            $array.each(this._operations, (op) => {\r\n                if (layerDirty) {\r\n                    op.path(context);\r\n                    op.colorize(context, undefined);\r\n                }\r\n                if (interactive) {\r\n                    op.pathGhost(ghostContext);\r\n                    op.colorizeGhost(ghostContext, color);\r\n                }\r\n            });\r\n        }\r\n    }\r\n    renderDetached(context) {\r\n        if (this.visible) {\r\n            this._setMatrix();\r\n            context.save();\r\n            // We must apply the mask before we transform the element\r\n            const mask = this.mask;\r\n            if (mask) {\r\n                mask._setMatrix();\r\n                mask._transform(context, 1);\r\n                mask._runPath(context);\r\n                context.clip();\r\n            }\r\n            // TODO handle compoundAlpha somehow ?\r\n            context.globalAlpha = this.compoundAlpha * this.alpha;\r\n            this._transform(context, 1);\r\n            if (this.filter) {\r\n                context.filter = this.filter;\r\n            }\r\n            context.globalCompositeOperation = this.blendMode;\r\n            context.beginPath();\r\n            $array.each(this._operations, (op) => {\r\n                op.path(context);\r\n                op.colorize(context, undefined);\r\n            });\r\n            context.restore();\r\n        }\r\n    }\r\n    _addBounds(bounds) {\r\n        if (this.visible && this.isMeasured) {\r\n            $array.each(this._operations, (op) => {\r\n                op.addBounds(bounds);\r\n            });\r\n        }\r\n    }\r\n}\r\n/**\r\n * @ignore\r\n */\r\nexport class CanvasText extends CanvasDisplayObject {\r\n    constructor(renderer, text, style) {\r\n        super(renderer);\r\n        Object.defineProperty(this, \"text\", {\r\n            enumerable: true,\r\n            configurable: true,\r\n            writable: true,\r\n            value: void 0\r\n        });\r\n        Object.defineProperty(this, \"style\", {\r\n            enumerable: true,\r\n            configurable: true,\r\n            writable: true,\r\n            value: void 0\r\n        });\r\n        Object.defineProperty(this, \"resolution\", {\r\n            enumerable: true,\r\n            configurable: true,\r\n            writable: true,\r\n            value: 1\r\n        });\r\n        Object.defineProperty(this, \"textVisible\", {\r\n            enumerable: true,\r\n            configurable: true,\r\n            writable: true,\r\n            value: true\r\n        });\r\n        Object.defineProperty(this, \"_textInfo\", {\r\n            enumerable: true,\r\n            configurable: true,\r\n            writable: true,\r\n            value: void 0\r\n        });\r\n        Object.defineProperty(this, \"_originalScale\", {\r\n            enumerable: true,\r\n            configurable: true,\r\n            writable: true,\r\n            value: 1\r\n        });\r\n        this.text = text;\r\n        this.style = style;\r\n    }\r\n    invalidateBounds() {\r\n        super.invalidateBounds();\r\n        this._textInfo = undefined;\r\n    }\r\n    _shared(context) {\r\n        if (this.style.textAlign) {\r\n            context.textAlign = this.style.textAlign;\r\n        }\r\n        if (this.style.direction) {\r\n            context.direction = this.style.direction;\r\n        }\r\n        if (this.style.textBaseline) {\r\n            context.textBaseline = this.style.textBaseline;\r\n        }\r\n    }\r\n    _prerender(status, ignoreGhost = false, ignoreFontWeight = false) {\r\n        super._render(status);\r\n        const context = status.layer.context;\r\n        const ghostContext = this._renderer._ghostLayer.context;\r\n        // Font style\r\n        const style = this.style;\r\n        let fontStyle = this._getFontStyle(undefined, ignoreFontWeight);\r\n        context.font = fontStyle;\r\n        if (this._isInteractive(status) && !ignoreGhost) {\r\n            ghostContext.font = fontStyle;\r\n        }\r\n        // Other parameters\r\n        if (style.fill) {\r\n            if (style.fill instanceof Color) {\r\n                context.fillStyle = style.fill.toCSS(style.fillOpacity != undefined ? style.fillOpacity : 1);\r\n            }\r\n            else {\r\n                context.fillStyle = style.fill;\r\n            }\r\n        }\r\n        if (style.shadowColor) {\r\n            status.layer.context.shadowColor = style.shadowColor.toCSS(style.shadowOpacity || 1);\r\n        }\r\n        if (style.shadowBlur) {\r\n            status.layer.context.shadowBlur = style.shadowBlur;\r\n        }\r\n        if (style.shadowOffsetX) {\r\n            status.layer.context.shadowOffsetX = style.shadowOffsetX;\r\n        }\r\n        if (style.shadowOffsetY) {\r\n            status.layer.context.shadowOffsetY = style.shadowOffsetY;\r\n        }\r\n        this._shared(context);\r\n        if (this._isInteractive(status) && !ignoreGhost) {\r\n            ghostContext.fillStyle = this._getColorId();\r\n            this._shared(ghostContext);\r\n        }\r\n    }\r\n    _getFontStyle(style2, ignoreFontWeight = false) {\r\n        // Process defaults\r\n        const style = this.style;\r\n        let fontStyle = [];\r\n        if (style2 && style2.fontVariant) {\r\n            fontStyle.push(style2.fontVariant);\r\n        }\r\n        else if (style.fontVariant) {\r\n            fontStyle.push(style.fontVariant);\r\n        }\r\n        if (!ignoreFontWeight) {\r\n            if (style2 && style2.fontWeight) {\r\n                fontStyle.push(style2.fontWeight);\r\n            }\r\n            else if (style.fontWeight) {\r\n                fontStyle.push(style.fontWeight);\r\n            }\r\n        }\r\n        if (style2 && style2.fontStyle) {\r\n            fontStyle.push(style2.fontStyle);\r\n        }\r\n        else if (style.fontStyle) {\r\n            fontStyle.push(style.fontStyle);\r\n        }\r\n        if (style2 && style2.fontSize) {\r\n            if ($type.isNumber(style2.fontSize)) {\r\n                style2.fontSize = style2.fontSize + \"px\";\r\n            }\r\n            fontStyle.push(style2.fontSize);\r\n        }\r\n        else if (style.fontSize) {\r\n            if ($type.isNumber(style.fontSize)) {\r\n                style.fontSize = style.fontSize + \"px\";\r\n            }\r\n            fontStyle.push(style.fontSize);\r\n        }\r\n        if (style2 && style2.fontFamily) {\r\n            fontStyle.push(style2.fontFamily);\r\n        }\r\n        else if (style.fontFamily) {\r\n            fontStyle.push(style.fontFamily);\r\n        }\r\n        else if (fontStyle.length) {\r\n            fontStyle.push(\"Arial\");\r\n        }\r\n        return fontStyle.join(\" \");\r\n    }\r\n    _render(status) {\r\n        // We need measurements in order to properly position text for alignment\r\n        if (!this._textInfo) {\r\n            this._measure(status);\r\n        }\r\n        if (this.textVisible) {\r\n            const interactive = this._isInteractive(status);\r\n            const context = status.layer.context;\r\n            const layerDirty = status.layer.dirty;\r\n            const ghostContext = this._renderer._ghostLayer.context;\r\n            context.save();\r\n            ghostContext.save();\r\n            this._prerender(status);\r\n            // const lines = this.text.toString().replace(/\\r/g, \"\").split(/\\n/);\r\n            // const x = this._localBounds && (this._localBounds.left < 0) ? Math.abs(this._localBounds.left) : 0;\r\n            // Process text info produced by _measure()\r\n            $array.each(this._textInfo, (line, _index) => {\r\n                $array.each(line.textChunks, (chunk, _index) => {\r\n                    // Set style\r\n                    if (chunk.style) {\r\n                        context.save();\r\n                        ghostContext.save();\r\n                        context.font = chunk.style;\r\n                        if (this._isInteractive(status)) {\r\n                            ghostContext.font = chunk.style;\r\n                        }\r\n                    }\r\n                    if (chunk.fill) {\r\n                        context.save();\r\n                        context.fillStyle = chunk.fill.toCSS();\r\n                        // Color does not affect ghostContext so we not set it\r\n                    }\r\n                    // Draw text\r\n                    if (layerDirty) {\r\n                        context.fillText(chunk.text, chunk.offsetX, line.offsetY + chunk.offsetY);\r\n                    }\r\n                    // Draw underline\r\n                    if (chunk.textDecoration == \"underline\" || chunk.textDecoration == \"line-through\") {\r\n                        let thickness = 1;\r\n                        let offset = 1;\r\n                        let fontSize = chunk.height;\r\n                        const oversizedBehavior = this.style.oversizedBehavior || \"\";\r\n                        if ([\"truncate\", \"wrap\", \"wrap-no-break\"].indexOf(oversizedBehavior) > -1) {\r\n                            // Measure actual width of the text so the line fits\r\n                            const metrics = this._measureText(chunk.text, context);\r\n                            chunk.width = metrics.actualBoundingBoxLeft + metrics.actualBoundingBoxRight;\r\n                        }\r\n                        let offsetX = chunk.offsetX;\r\n                        switch (this.style.textAlign) {\r\n                            case \"right\":\r\n                            case \"end\":\r\n                                offsetX -= chunk.width;\r\n                                break;\r\n                            case \"center\":\r\n                                offsetX -= chunk.width / 2;\r\n                                break;\r\n                        }\r\n                        if (chunk.style) {\r\n                            const format = TextFormatter.getTextStyle(chunk.style);\r\n                            switch (format.fontWeight) {\r\n                                case \"bolder\":\r\n                                case \"bold\":\r\n                                case \"700\":\r\n                                case \"800\":\r\n                                case \"900\":\r\n                                    thickness = 2;\r\n                                    break;\r\n                            }\r\n                        }\r\n                        if (fontSize) {\r\n                            offset = fontSize / 20;\r\n                        }\r\n                        let y;\r\n                        if (chunk.textDecoration == \"line-through\") {\r\n                            y = thickness + line.offsetY + chunk.offsetY - chunk.height / 2;\r\n                        }\r\n                        else {\r\n                            y = thickness + offset * 1.5 + line.offsetY + chunk.offsetY;\r\n                        }\r\n                        context.save();\r\n                        context.beginPath();\r\n                        if (chunk.fill) {\r\n                            context.strokeStyle = chunk.fill.toCSS();\r\n                        }\r\n                        else if (this.style.fill && this.style.fill instanceof Color) {\r\n                            context.strokeStyle = this.style.fill.toCSS();\r\n                        }\r\n                        context.lineWidth = thickness * offset;\r\n                        context.moveTo(offsetX, y);\r\n                        context.lineTo(offsetX + chunk.width, y);\r\n                        context.stroke();\r\n                        context.restore();\r\n                    }\r\n                    if (interactive && this.interactive) {\r\n                        // Draw text in ghost canvas ONLY if it is set as interactive\r\n                        // explicitly. This way we avoid hit test anomalies caused by anti\r\n                        // aliasing of text.\r\n                        ghostContext.fillText(chunk.text, chunk.offsetX, line.offsetY + chunk.offsetY);\r\n                    }\r\n                    if (chunk.fill) {\r\n                        context.restore();\r\n                        // Color does not affect ghostContext so we not set it\r\n                    }\r\n                    // Reset style\r\n                    if (chunk.style) {\r\n                        context.restore();\r\n                        ghostContext.restore();\r\n                    }\r\n                });\r\n            });\r\n            context.restore();\r\n            ghostContext.restore();\r\n        }\r\n    }\r\n    _addBounds(bounds) {\r\n        if (this.visible && this.isMeasured) {\r\n            //if (this._textVisible) {\r\n            const x = this._measure({\r\n                inactive: this.inactive,\r\n                layer: this.getLayer(),\r\n            });\r\n            setPoint(bounds, { x: x.left, y: x.top });\r\n            setPoint(bounds, { x: x.right, y: x.bottom });\r\n            //}\r\n        }\r\n    }\r\n    _ignoreFontWeight() {\r\n        return /apple/i.test(navigator.vendor);\r\n    }\r\n    _measure(status) {\r\n        const context = status.layer.context;\r\n        const ghostContext = this._renderer._ghostLayer.context;\r\n        const rtl = this.style.direction == \"rtl\";\r\n        // Reset text info\r\n        this._textInfo = [];\r\n        // Init\r\n        const oversizedBehavior = this.style.oversizedBehavior;\r\n        const maxWidth = this.style.maxWidth;\r\n        const truncate = $type.isNumber(maxWidth) && oversizedBehavior == \"truncate\";\r\n        const wrap = $type.isNumber(maxWidth) && (oversizedBehavior == \"wrap\" || oversizedBehavior == \"wrap-no-break\");\r\n        // Pre-render\r\n        context.save();\r\n        ghostContext.save();\r\n        this._prerender(status, true, this._ignoreFontWeight());\r\n        // Get default font metrix\r\n        const refText = \"abcdefghijklmnopqrstuvwxyzABCDEFGHIJKLMNOPQRSTUVWXYZ0123456789 \";\r\n        // Split up text into lines\r\n        const lines = this.text.toString().replace(/\\r/g, \"\").split(/\\n/);\r\n        let styleRestored = true;\r\n        let minX = 0;\r\n        let maxX = 0;\r\n        // Iterate through the lines\r\n        let offsetY = 0;\r\n        let currentStyle;\r\n        $array.each(lines, (line, _index) => {\r\n            // Split up line into format/value chunks\r\n            let chunks;\r\n            if (line == \"\") {\r\n                chunks = [{\r\n                        type: \"value\",\r\n                        text: \"\"\r\n                    }];\r\n            }\r\n            else {\r\n                chunks = TextFormatter.chunk(line, false, this.style.ignoreFormatting);\r\n            }\r\n            while (chunks.length > 0) {\r\n                // Init line object\r\n                let lineInfo = {\r\n                    offsetY: offsetY,\r\n                    ascent: 0,\r\n                    width: 0,\r\n                    height: 0,\r\n                    left: 0,\r\n                    right: 0,\r\n                    textChunks: []\r\n                };\r\n                // Measure reference text\r\n                const metrics = this._measureText(refText, context);\r\n                const height = metrics.actualBoundingBoxAscent + metrics.actualBoundingBoxDescent;\r\n                lineInfo.height = height;\r\n                lineInfo.ascent = metrics.actualBoundingBoxAscent;\r\n                let currentFormat;\r\n                let currentDecoration = this.style.textDecoration;\r\n                let currentFill;\r\n                let currentChunkWidth;\r\n                let skipFurtherText = false;\r\n                let firstTextChunk = true;\r\n                let leftoverChunks = [];\r\n                let currentVerticalAlign;\r\n                //let offsetX = 0;\r\n                //let chunk;\r\n                //while(chunk = chunks.shift()) {\r\n                $array.eachContinue(chunks, (chunk, index) => {\r\n                    // Format chunk\r\n                    if (chunk.type == \"format\") {\r\n                        if (chunk.text == \"[/]\") {\r\n                            if (!styleRestored) {\r\n                                context.restore();\r\n                                ghostContext.restore();\r\n                                styleRestored = true;\r\n                            }\r\n                            currentFill = undefined;\r\n                            currentStyle = undefined;\r\n                            currentChunkWidth = undefined;\r\n                            currentDecoration = this.style.textDecoration;\r\n                            currentVerticalAlign = undefined;\r\n                            currentFormat = chunk.text;\r\n                        }\r\n                        else {\r\n                            if (!styleRestored) {\r\n                                context.restore();\r\n                                ghostContext.restore();\r\n                            }\r\n                            let format = TextFormatter.getTextStyle(chunk.text);\r\n                            const fontStyle = this._getFontStyle(format);\r\n                            context.save();\r\n                            ghostContext.save();\r\n                            context.font = fontStyle;\r\n                            currentStyle = fontStyle;\r\n                            currentFormat = chunk.text;\r\n                            if (format.textDecoration) {\r\n                                currentDecoration = format.textDecoration;\r\n                            }\r\n                            if (format.fill) {\r\n                                currentFill = format.fill;\r\n                            }\r\n                            if (format.width) {\r\n                                currentChunkWidth = $type.toNumber(format.width);\r\n                            }\r\n                            if (format.verticalAlign) {\r\n                                currentVerticalAlign = format.verticalAlign;\r\n                            }\r\n                            styleRestored = false;\r\n                            // Measure reference text after change of format\r\n                            const metrics = this._measureText(refText, context);\r\n                            const height = metrics.actualBoundingBoxAscent + metrics.actualBoundingBoxDescent;\r\n                            if (height > lineInfo.height) {\r\n                                lineInfo.height = height;\r\n                            }\r\n                            if (metrics.actualBoundingBoxAscent > lineInfo.ascent) {\r\n                                lineInfo.ascent = metrics.actualBoundingBoxAscent;\r\n                            }\r\n                        }\r\n                    }\r\n                    // Text chunk\r\n                    else if (chunk.type == \"value\" && !skipFurtherText) {\r\n                        // Measure\r\n                        const metrics = this._measureText(chunk.text, context);\r\n                        let chunkWidth = metrics.actualBoundingBoxLeft + metrics.actualBoundingBoxRight;\r\n                        // Check for fit\r\n                        if (truncate) {\r\n                            // Break words?\r\n                            let breakWords = firstTextChunk || this.style.breakWords || false;\r\n                            // Measure ellipsis and check if it fits\r\n                            const ellipsis = this.style.ellipsis || \"\";\r\n                            const ellipsisMetrics = this._measureText(ellipsis, context);\r\n                            const ellipsisWidth = ellipsisMetrics.actualBoundingBoxLeft + ellipsisMetrics.actualBoundingBoxRight;\r\n                            // Check fit\r\n                            if ((lineInfo.width + chunkWidth) > maxWidth) {\r\n                                const excessWidth = maxWidth - lineInfo.width - ellipsisWidth;\r\n                                chunk.text = this._truncateText(context, chunk.text, excessWidth, breakWords);\r\n                                chunk.text += ellipsis;\r\n                                skipFurtherText = true;\r\n                            }\r\n                        }\r\n                        else if (wrap) {\r\n                            // Check fit\r\n                            if ((lineInfo.width + chunkWidth) > maxWidth) {\r\n                                const excessWidth = maxWidth - lineInfo.width;\r\n                                const tmpText = this._truncateText(context, chunk.text, excessWidth, false, (firstTextChunk && this.style.oversizedBehavior != \"wrap-no-break\"));\r\n                                if (tmpText == \"\") {\r\n                                    // Unable to fit a single letter - hide the whole label\r\n                                    this.textVisible = true;\r\n                                    return false;\r\n                                }\r\n                                //skipFurtherText = true;\r\n                                //Add remaining chunks for the next line\r\n                                leftoverChunks = chunks.slice(index + 1);\r\n                                //Add remaining text of current chunk if it was forced-cut\r\n                                if ($utils.trim(tmpText) != $utils.trim(chunk.text)) {\r\n                                    leftoverChunks.unshift({\r\n                                        type: \"value\",\r\n                                        text: chunk.text.substr(tmpText.length)\r\n                                    });\r\n                                    if (currentFormat) {\r\n                                        leftoverChunks.unshift({\r\n                                            type: \"format\",\r\n                                            text: currentFormat\r\n                                        });\r\n                                    }\r\n                                }\r\n                                // Set current chunk (truncated)\r\n                                chunk.text = $utils.trim(tmpText);\r\n                                chunks = [];\r\n                                skipFurtherText = true;\r\n                            }\r\n                        }\r\n                        // Chunk width?\r\n                        let leftBoundMod = 1;\r\n                        let rightBoundMod = 1;\r\n                        if (currentStyle && currentChunkWidth && (currentChunkWidth > chunkWidth)) {\r\n                            // increase horizontal bounding boxes accordingly\r\n                            const boundsMod = chunkWidth / currentChunkWidth;\r\n                            switch (this.style.textAlign) {\r\n                                case \"right\":\r\n                                case \"end\":\r\n                                    leftBoundMod = boundsMod;\r\n                                    break;\r\n                                case \"center\":\r\n                                    leftBoundMod = boundsMod;\r\n                                    rightBoundMod = boundsMod;\r\n                                    break;\r\n                                default:\r\n                                    rightBoundMod = boundsMod;\r\n                            }\r\n                            chunkWidth = currentChunkWidth;\r\n                        }\r\n                        const chunkHeight = metrics.actualBoundingBoxAscent + metrics.actualBoundingBoxDescent;\r\n                        if (chunkHeight > lineInfo.height) {\r\n                            lineInfo.height = chunkHeight;\r\n                        }\r\n                        if (metrics.actualBoundingBoxAscent > lineInfo.ascent) {\r\n                            lineInfo.ascent = metrics.actualBoundingBoxAscent;\r\n                        }\r\n                        lineInfo.width += chunkWidth;\r\n                        lineInfo.left += metrics.actualBoundingBoxLeft / leftBoundMod;\r\n                        lineInfo.right += metrics.actualBoundingBoxRight / rightBoundMod;\r\n                        lineInfo.textChunks.push({\r\n                            style: currentStyle,\r\n                            fill: currentFill,\r\n                            text: chunk.text,\r\n                            width: chunkWidth,\r\n                            height: chunkHeight,\r\n                            left: metrics.actualBoundingBoxLeft,\r\n                            right: metrics.actualBoundingBoxRight,\r\n                            ascent: metrics.actualBoundingBoxAscent,\r\n                            offsetX: 0,\r\n                            offsetY: 0,\r\n                            textDecoration: currentDecoration,\r\n                            verticalAlign: currentVerticalAlign\r\n                        });\r\n                        //offsetX += chunkWidth;\r\n                        firstTextChunk = false;\r\n                    }\r\n                    if (leftoverChunks) {\r\n                        //return false;\r\n                    }\r\n                    return true;\r\n                    //}\r\n                });\r\n                if (this.style.lineHeight instanceof Percent) {\r\n                    lineInfo.height *= this.style.lineHeight.value;\r\n                    lineInfo.ascent *= this.style.lineHeight.value;\r\n                }\r\n                else {\r\n                    lineInfo.height *= this.style.lineHeight || 1.2;\r\n                    lineInfo.ascent *= this.style.lineHeight || 1.2;\r\n                }\r\n                if (minX < lineInfo.left) {\r\n                    minX = lineInfo.left;\r\n                }\r\n                if (maxX < lineInfo.right) {\r\n                    maxX = lineInfo.right;\r\n                }\r\n                this._textInfo.push(lineInfo);\r\n                //lineInfo.offsetY += lineInfo.ascent;\r\n                offsetY += lineInfo.height;\r\n                // Reset chunks so that it can proceed to the next line\r\n                chunks = leftoverChunks || [];\r\n            }\r\n        });\r\n        if (!styleRestored) {\r\n            context.restore();\r\n            ghostContext.restore();\r\n        }\r\n        // Adjust chunk internal offsets\r\n        $array.each(this._textInfo, (lineInfo, _index) => {\r\n            let currentChunkOffset = 0;\r\n            $array.each(lineInfo.textChunks, (chunk) => {\r\n                chunk.offsetX = currentChunkOffset + chunk.left - lineInfo.left;\r\n                chunk.offsetY += lineInfo.height - lineInfo.height * (this.style.baselineRatio || 0.19);\r\n                currentChunkOffset += chunk.width;\r\n                if (chunk.verticalAlign) {\r\n                    switch (chunk.verticalAlign) {\r\n                        case \"super\":\r\n                            chunk.offsetY -= lineInfo.height / 2 - chunk.height / 2;\r\n                            break;\r\n                        case \"sub\":\r\n                            chunk.offsetY += chunk.height / 2;\r\n                            break;\r\n                    }\r\n                }\r\n            });\r\n        });\r\n        const bounds = {\r\n            left: rtl ? -maxX : -minX,\r\n            top: 0,\r\n            right: rtl ? minX : maxX,\r\n            bottom: offsetY,\r\n        };\r\n        // We need to fit?\r\n        if (oversizedBehavior !== \"none\") {\r\n            const ratio = this._fitRatio(bounds);\r\n            if (ratio < 1) {\r\n                if (oversizedBehavior == \"fit\") {\r\n                    if ($type.isNumber(this.style.minScale) && (ratio < this.style.minScale)) {\r\n                        this.textVisible = false;\r\n                        bounds.left = 0;\r\n                        bounds.top = 0;\r\n                        bounds.right = 0;\r\n                        bounds.bottom = 0;\r\n                    }\r\n                    else {\r\n                        if (!this._originalScale || this._originalScale == 1) {\r\n                            this._originalScale = this.scale;\r\n                        }\r\n                        this.scale = ratio;\r\n                        this.textVisible = true;\r\n                    }\r\n                }\r\n                else if (oversizedBehavior == \"hide\") {\r\n                    this.textVisible = false;\r\n                    bounds.left = 0;\r\n                    bounds.top = 0;\r\n                    bounds.right = 0;\r\n                    bounds.bottom = 0;\r\n                }\r\n                else {\r\n                    switch (this.style.textAlign) {\r\n                        case \"right\":\r\n                        case \"end\":\r\n                            bounds.left = rtl ? maxWidth : -maxWidth;\r\n                            bounds.right = 0;\r\n                            break;\r\n                        case \"center\":\r\n                            bounds.left = -maxWidth / 2;\r\n                            bounds.right = maxWidth / 2;\r\n                            break;\r\n                        default:\r\n                            bounds.left = 0;\r\n                            bounds.right = rtl ? -maxWidth : maxWidth;\r\n                    }\r\n                    this.scale = this._originalScale || 1;\r\n                    this._originalScale = undefined;\r\n                    this.textVisible = true;\r\n                }\r\n            }\r\n            else {\r\n                this.scale = this._originalScale || 1;\r\n                this._originalScale = undefined;\r\n                this.textVisible = true;\r\n            }\r\n        }\r\n        context.restore();\r\n        ghostContext.restore();\r\n        return bounds;\r\n    }\r\n    _fitRatio(bounds) {\r\n        const maxW = this.style.maxWidth;\r\n        const maxH = this.style.maxHeight;\r\n        if (!$type.isNumber(maxW) && !$type.isNumber(maxH)) {\r\n            return 1;\r\n        }\r\n        const w = bounds.right - bounds.left;\r\n        const h = bounds.bottom - bounds.top;\r\n        return Math.min(maxW / w || 1, maxH / h || 1);\r\n    }\r\n    _truncateText(context, text, maxWidth, breakWords = false, fallbackBreakWords = true) {\r\n        let width;\r\n        do {\r\n            if (breakWords) {\r\n                text = text.slice(0, -1);\r\n            }\r\n            else {\r\n                let tmp = text.replace(/[^,;:!?\\\\\\/\\s​]+[,;:!?\\\\\\/\\s​]*$/g, \"\");\r\n                if ((tmp == \"\" || tmp === text) && fallbackBreakWords) {\r\n                    breakWords = true;\r\n                }\r\n                else if (tmp == \"\") {\r\n                    return text;\r\n                }\r\n                else {\r\n                    text = tmp;\r\n                }\r\n            }\r\n            const metrics = this._measureText(text, context);\r\n            width = metrics.actualBoundingBoxLeft + metrics.actualBoundingBoxRight;\r\n        } while ((width > maxWidth) && text != \"\");\r\n        return text;\r\n    }\r\n    _measureText(text, context) {\r\n        let metrics = context.measureText(text);\r\n        let fakeMetrics = {};\r\n        if (metrics.actualBoundingBoxAscent == null) {\r\n            const div = document.createElement(\"div\");\r\n            div.innerText = text;\r\n            div.style.visibility = \"hidden\";\r\n            div.style.position = \"absolute\";\r\n            div.style.top = \"-1000000px;\";\r\n            div.style.fontFamily = this.style.fontFamily || \"\";\r\n            div.style.fontSize = this.style.fontSize + \"\";\r\n            document.body.appendChild(div);\r\n            const bbox = div.getBoundingClientRect();\r\n            document.body.removeChild(div);\r\n            const h = bbox.height;\r\n            const w = metrics.width;\r\n            let left = 0;\r\n            let right = w;\r\n            fakeMetrics = {\r\n                actualBoundingBoxAscent: h,\r\n                actualBoundingBoxDescent: 0,\r\n                actualBoundingBoxLeft: left,\r\n                actualBoundingBoxRight: right,\r\n                fontBoundingBoxAscent: h,\r\n                fontBoundingBoxDescent: 0,\r\n                width: w\r\n            };\r\n            //return fake;\r\n        }\r\n        else {\r\n            fakeMetrics = {\r\n                actualBoundingBoxAscent: metrics.actualBoundingBoxAscent,\r\n                actualBoundingBoxDescent: metrics.actualBoundingBoxDescent,\r\n                actualBoundingBoxLeft: metrics.actualBoundingBoxLeft,\r\n                actualBoundingBoxRight: metrics.actualBoundingBoxRight,\r\n                fontBoundingBoxAscent: metrics.actualBoundingBoxAscent,\r\n                fontBoundingBoxDescent: metrics.actualBoundingBoxDescent,\r\n                width: metrics.width\r\n            };\r\n        }\r\n        const w = metrics.width;\r\n        switch (this.style.textAlign) {\r\n            case \"right\":\r\n            case \"end\":\r\n                fakeMetrics.actualBoundingBoxLeft = w;\r\n                fakeMetrics.actualBoundingBoxRight = 0;\r\n                break;\r\n            case \"center\":\r\n                fakeMetrics.actualBoundingBoxLeft = w / 2;\r\n                fakeMetrics.actualBoundingBoxRight = w / 2;\r\n                break;\r\n            default:\r\n                fakeMetrics.actualBoundingBoxLeft = 0;\r\n                fakeMetrics.actualBoundingBoxRight = w;\r\n        }\r\n        return fakeMetrics;\r\n    }\r\n}\r\n/**\r\n * @ignore\r\n */\r\nexport class CanvasTextStyle {\r\n    constructor() {\r\n        //public wordWrapWidth: number = 100;\r\n        Object.defineProperty(this, \"fill\", {\r\n            enumerable: true,\r\n            configurable: true,\r\n            writable: true,\r\n            value: void 0\r\n        });\r\n        Object.defineProperty(this, \"fillOpacity\", {\r\n            enumerable: true,\r\n            configurable: true,\r\n            writable: true,\r\n            value: void 0\r\n        });\r\n        Object.defineProperty(this, \"textAlign\", {\r\n            enumerable: true,\r\n            configurable: true,\r\n            writable: true,\r\n            value: void 0\r\n        });\r\n        Object.defineProperty(this, \"fontFamily\", {\r\n            enumerable: true,\r\n            configurable: true,\r\n            writable: true,\r\n            value: void 0\r\n        });\r\n        Object.defineProperty(this, \"fontSize\", {\r\n            enumerable: true,\r\n            configurable: true,\r\n            writable: true,\r\n            value: void 0\r\n        });\r\n        Object.defineProperty(this, \"fontWeight\", {\r\n            enumerable: true,\r\n            configurable: true,\r\n            writable: true,\r\n            value: void 0\r\n        });\r\n        Object.defineProperty(this, \"fontStyle\", {\r\n            enumerable: true,\r\n            configurable: true,\r\n            writable: true,\r\n            value: void 0\r\n        });\r\n        Object.defineProperty(this, \"fontVariant\", {\r\n            enumerable: true,\r\n            configurable: true,\r\n            writable: true,\r\n            value: void 0\r\n        });\r\n        Object.defineProperty(this, \"textDecoration\", {\r\n            enumerable: true,\r\n            configurable: true,\r\n            writable: true,\r\n            value: void 0\r\n        });\r\n        Object.defineProperty(this, \"shadowColor\", {\r\n            enumerable: true,\r\n            configurable: true,\r\n            writable: true,\r\n            value: void 0\r\n        });\r\n        Object.defineProperty(this, \"shadowBlur\", {\r\n            enumerable: true,\r\n            configurable: true,\r\n            writable: true,\r\n            value: void 0\r\n        });\r\n        Object.defineProperty(this, \"shadowOffsetX\", {\r\n            enumerable: true,\r\n            configurable: true,\r\n            writable: true,\r\n            value: void 0\r\n        });\r\n        Object.defineProperty(this, \"shadowOffsetY\", {\r\n            enumerable: true,\r\n            configurable: true,\r\n            writable: true,\r\n            value: void 0\r\n        });\r\n        Object.defineProperty(this, \"shadowOpacity\", {\r\n            enumerable: true,\r\n            configurable: true,\r\n            writable: true,\r\n            value: void 0\r\n        });\r\n        // leading?: number;\r\n        // letterSpacing?: number;\r\n        Object.defineProperty(this, \"lineHeight\", {\r\n            enumerable: true,\r\n            configurable: true,\r\n            writable: true,\r\n            value: percent(120)\r\n        });\r\n        Object.defineProperty(this, \"baselineRatio\", {\r\n            enumerable: true,\r\n            configurable: true,\r\n            writable: true,\r\n            value: 0.19\r\n        });\r\n        // padding?: number;\r\n        // stroke?: number;\r\n        // strokeThickness?: number;\r\n        // trim?: number;\r\n        // wordWrap?: boolean;\r\n        Object.defineProperty(this, \"direction\", {\r\n            enumerable: true,\r\n            configurable: true,\r\n            writable: true,\r\n            value: void 0\r\n        });\r\n        Object.defineProperty(this, \"textBaseline\", {\r\n            enumerable: true,\r\n            configurable: true,\r\n            writable: true,\r\n            value: void 0\r\n        });\r\n        Object.defineProperty(this, \"oversizedBehavior\", {\r\n            enumerable: true,\r\n            configurable: true,\r\n            writable: true,\r\n            value: \"none\"\r\n        });\r\n        Object.defineProperty(this, \"breakWords\", {\r\n            enumerable: true,\r\n            configurable: true,\r\n            writable: true,\r\n            value: false\r\n        });\r\n        Object.defineProperty(this, \"ellipsis\", {\r\n            enumerable: true,\r\n            configurable: true,\r\n            writable: true,\r\n            value: \"…\"\r\n        });\r\n        Object.defineProperty(this, \"maxWidth\", {\r\n            enumerable: true,\r\n            configurable: true,\r\n            writable: true,\r\n            value: void 0\r\n        });\r\n        Object.defineProperty(this, \"maxHeight\", {\r\n            enumerable: true,\r\n            configurable: true,\r\n            writable: true,\r\n            value: void 0\r\n        });\r\n        Object.defineProperty(this, \"minScale\", {\r\n            enumerable: true,\r\n            configurable: true,\r\n            writable: true,\r\n            value: void 0\r\n        });\r\n        Object.defineProperty(this, \"ignoreFormatting\", {\r\n            enumerable: true,\r\n            configurable: true,\r\n            writable: true,\r\n            value: false\r\n        });\r\n    }\r\n}\r\n/**\r\n * @ignore\r\n */\r\nexport class CanvasRadialText extends CanvasText {\r\n    constructor() {\r\n        super(...arguments);\r\n        Object.defineProperty(this, \"textType\", {\r\n            enumerable: true,\r\n            configurable: true,\r\n            writable: true,\r\n            value: \"circular\"\r\n        });\r\n        Object.defineProperty(this, \"radius\", {\r\n            enumerable: true,\r\n            configurable: true,\r\n            writable: true,\r\n            value: void 0\r\n        });\r\n        Object.defineProperty(this, \"startAngle\", {\r\n            enumerable: true,\r\n            configurable: true,\r\n            writable: true,\r\n            value: void 0\r\n        });\r\n        Object.defineProperty(this, \"inside\", {\r\n            enumerable: true,\r\n            configurable: true,\r\n            writable: true,\r\n            value: false\r\n        });\r\n        Object.defineProperty(this, \"orientation\", {\r\n            enumerable: true,\r\n            configurable: true,\r\n            writable: true,\r\n            value: \"auto\"\r\n        });\r\n        Object.defineProperty(this, \"kerning\", {\r\n            enumerable: true,\r\n            configurable: true,\r\n            writable: true,\r\n            value: 0\r\n        });\r\n        Object.defineProperty(this, \"_textReversed\", {\r\n            enumerable: true,\r\n            configurable: true,\r\n            writable: true,\r\n            value: false\r\n        });\r\n    }\r\n    _render(status) {\r\n        switch (this.textType) {\r\n            case \"circular\":\r\n                this._renderCircular(status);\r\n                break;\r\n            default:\r\n                super._render(status);\r\n                break;\r\n        }\r\n    }\r\n    _renderCircular(status) {\r\n        if (this.textVisible) {\r\n            this._prerender(status);\r\n            const interactive = this._isInteractive(status);\r\n            const context = status.layer.context;\r\n            const layerDirty = status.layer.dirty;\r\n            const ghostContext = this._renderer._ghostLayer.context;\r\n            // Savepoint\r\n            context.save();\r\n            if (interactive) {\r\n                ghostContext.save();\r\n            }\r\n            // We need measurements in order to properly position text for alignment\r\n            if (!this._textInfo) {\r\n                this._measure(status);\r\n            }\r\n            // Init\r\n            let radius = (this.radius || 0);\r\n            let startAngle = (this.startAngle || 0);\r\n            let deltaAngle = 0;\r\n            let orientation = this.orientation;\r\n            let inward = orientation == \"auto\" ? \"auto\" : orientation == \"inward\";\r\n            const inside = this.inside;\r\n            const align = this.style.textAlign || \"left\";\r\n            const kerning = this.kerning || 0;\r\n            let clockwise = align == \"left\" ? 1 : -1;\r\n            const shouldReverse = !this._textReversed;\r\n            // Check if we need to invert the whole stuff\r\n            if (inward == \"auto\") {\r\n                // Calc max angle so we know whether we need to flip it\r\n                let maxAngle = 0;\r\n                let midAngle = 0;\r\n                $array.each(this._textInfo, (line, _index) => {\r\n                    const deltaAngle = startAngle + (line.width / (radius - line.height)) / 2 * -clockwise;\r\n                    if (deltaAngle > maxAngle) {\r\n                        maxAngle = deltaAngle;\r\n                    }\r\n                });\r\n                if (align == \"left\") {\r\n                    midAngle = (maxAngle + deltaAngle / 2) * $math.DEGREES;\r\n                }\r\n                else if (align == \"right\") {\r\n                    midAngle = (maxAngle - deltaAngle / 2) * $math.DEGREES;\r\n                }\r\n                else {\r\n                    midAngle = startAngle * $math.DEGREES;\r\n                }\r\n                midAngle = $math.normalizeAngle(midAngle);\r\n                inward = (midAngle >= 270) || (midAngle <= 90);\r\n            }\r\n            if (inward == true && shouldReverse) {\r\n                this._textInfo.reverse();\r\n                this._textReversed = true;\r\n            }\r\n            // if ((inward == false && align == \"left\") || (inward == true && align == \"right\")) {\r\n            // \tclockwise *= -1;\r\n            // }\r\n            // Process text info produced by _measure()\r\n            $array.each(this._textInfo, (line, _index) => {\r\n                const textHeight = line.height;\r\n                // Adjust radius (for `inside = false`)\r\n                // Radius adjustment for `inside = false` is below the line calculation\r\n                if (!inside) {\r\n                    radius += textHeight;\r\n                }\r\n                // Reverse letters if we're painting them counter-clockwise\r\n                if (((clockwise == -1 && inward) || (clockwise == 1 && !inward)) && shouldReverse) {\r\n                    line.textChunks.reverse();\r\n                }\r\n                // Init angles\r\n                let lineStartAngle = startAngle;\r\n                deltaAngle = 0;\r\n                // Adjust for center-align\r\n                if (align == \"center\") {\r\n                    lineStartAngle += (line.width / (radius - textHeight)) / 2 * -clockwise;\r\n                    deltaAngle = lineStartAngle - startAngle;\r\n                }\r\n                // if (inward == \"auto\") {\r\n                // \tlet midAngle;\r\n                // \tif (align == \"left\") {\r\n                // \t\tmidAngle = (lineStartAngle + deltaAngle / 2) * $math.DEGREES;\r\n                // \t}\r\n                // \telse if () {\r\n                // \t\tmidAngle = (lineStartAngle - deltaAngle / 2) * $math.DEGREES;\r\n                // \t}\r\n                // \tinward = (midAngle >= 270) || (midAngle <= 90);\r\n                // }\r\n                // Rotate letters if they are facing outward\r\n                lineStartAngle += (Math.PI * (inward ? 0 : 1)); // Rotate 180 if outward\r\n                // Savepoint\r\n                context.save();\r\n                if (interactive) {\r\n                    ghostContext.save();\r\n                }\r\n                // Assume starting angle\r\n                context.rotate(lineStartAngle);\r\n                if (interactive) {\r\n                    ghostContext.rotate(lineStartAngle);\r\n                }\r\n                let angleShift = 0;\r\n                $array.each(line.textChunks, (chunk, _index) => {\r\n                    // Draw the letter\r\n                    const char = chunk.text;\r\n                    const charWidth = chunk.width;\r\n                    // Rotate half a letter\r\n                    angleShift = (charWidth / 2) / (radius - textHeight) * clockwise;\r\n                    context.rotate(angleShift);\r\n                    if (interactive) {\r\n                        ghostContext.rotate(angleShift);\r\n                    }\r\n                    // Set style\r\n                    if (chunk.style) {\r\n                        context.save();\r\n                        ghostContext.save();\r\n                        context.font = chunk.style;\r\n                        if (interactive) {\r\n                            ghostContext.font = chunk.style;\r\n                        }\r\n                    }\r\n                    if (chunk.fill) {\r\n                        context.save();\r\n                        context.fillStyle = chunk.fill.toCSS();\r\n                        // Color does not affect ghostContext so we not set it\r\n                    }\r\n                    // Center letters\r\n                    context.textBaseline = \"middle\";\r\n                    context.textAlign = \"center\";\r\n                    if (interactive) {\r\n                        ghostContext.textBaseline = \"middle\";\r\n                        ghostContext.textAlign = \"center\";\r\n                    }\r\n                    // Plop the letter\r\n                    if (layerDirty) {\r\n                        context.fillText(char, 0, (inward ? 1 : -1) * (0 - radius + textHeight / 2));\r\n                    }\r\n                    if (interactive) {\r\n                        ghostContext.fillText(char, 0, (inward ? 1 : -1) * (0 - radius + textHeight / 2));\r\n                    }\r\n                    if (chunk.fill) {\r\n                        context.restore();\r\n                        // Color does not affect ghostContext so we not set it\r\n                    }\r\n                    // Reset style\r\n                    if (chunk.style) {\r\n                        context.restore();\r\n                        ghostContext.restore();\r\n                    }\r\n                    // Rotate half a letter and add spacing\r\n                    angleShift = (charWidth / 2 + kerning) / (radius - textHeight) * clockwise;\r\n                    context.rotate(angleShift);\r\n                    if (interactive) {\r\n                        ghostContext.rotate(angleShift);\r\n                    }\r\n                });\r\n                // Restore angle\r\n                context.restore();\r\n                if (interactive) {\r\n                    ghostContext.restore();\r\n                }\r\n                // Adjust radius (for `inside = true`)\r\n                if (inside) {\r\n                    radius -= textHeight;\r\n                }\r\n            });\r\n            // Restore\r\n            context.restore();\r\n            if (interactive) {\r\n                ghostContext.restore();\r\n            }\r\n        }\r\n    }\r\n    _measure(status) {\r\n        switch (this.textType) {\r\n            case \"circular\":\r\n                return this._measureCircular(status);\r\n            default:\r\n                return super._measure(status);\r\n        }\r\n    }\r\n    _measureCircular(status) {\r\n        const context = status.layer.context;\r\n        const ghostContext = this._renderer._ghostLayer.context;\r\n        const rtl = this.style.direction == \"rtl\";\r\n        const oversizedBehavior = this.style.oversizedBehavior;\r\n        const maxWidth = this.style.maxWidth;\r\n        const truncate = $type.isNumber(maxWidth) && oversizedBehavior == \"truncate\";\r\n        const ellipsis = this.style.ellipsis || \"\";\r\n        let ellipsisMetrics;\r\n        //const wrap = $type.isNumber(maxWidth) && (oversizedBehavior == \"wrap\" || oversizedBehavior == \"wrap-no-break\");\r\n        // Reset text info\r\n        this.textVisible = true;\r\n        this._textInfo = [];\r\n        this._textReversed = false;\r\n        // Pre-render\r\n        context.save();\r\n        ghostContext.save();\r\n        this._prerender(status, true);\r\n        // Split up text into lines\r\n        const lines = this.text.toString().replace(/\\r/g, \"\").split(/\\n/);\r\n        let styleRestored = true;\r\n        let totalWidth = 0;\r\n        // Iterate through the lines\r\n        let offsetY = 0;\r\n        $array.each(lines, (line, _index) => {\r\n            // Split up line into format/value chunks\r\n            let chunks = TextFormatter.chunk(line, false, this.style.ignoreFormatting);\r\n            // Init line object\r\n            let lineInfo = {\r\n                offsetY: offsetY,\r\n                ascent: 0,\r\n                width: 0,\r\n                height: 0,\r\n                left: 0,\r\n                right: 0,\r\n                textChunks: []\r\n            };\r\n            let currentStyle;\r\n            let currentFill;\r\n            let currentChunkWidth;\r\n            //while(chunk = chunks.shift()) {\r\n            $array.each(chunks, (chunk, _index) => {\r\n                // Format chunk\r\n                if (chunk.type == \"format\") {\r\n                    if (chunk.text == \"[/]\") {\r\n                        if (!styleRestored) {\r\n                            context.restore();\r\n                            ghostContext.restore();\r\n                            styleRestored = true;\r\n                        }\r\n                        currentFill = undefined;\r\n                        currentStyle = undefined;\r\n                        currentChunkWidth = undefined;\r\n                    }\r\n                    else {\r\n                        let format = TextFormatter.getTextStyle(chunk.text);\r\n                        const fontStyle = this._getFontStyle(format);\r\n                        context.save();\r\n                        ghostContext.save();\r\n                        context.font = fontStyle;\r\n                        currentStyle = fontStyle;\r\n                        if (format.fill) {\r\n                            currentFill = format.fill;\r\n                        }\r\n                        if (format.width) {\r\n                            currentChunkWidth = $type.toNumber(format.width);\r\n                        }\r\n                        styleRestored = false;\r\n                    }\r\n                    if (truncate) {\r\n                        ellipsisMetrics = this._measureText(ellipsis, context);\r\n                    }\r\n                }\r\n                // Text format\r\n                else if (chunk.type == \"value\") {\r\n                    // Measure each letter\r\n                    let chars = chunk.text.match(/./ug) || [];\r\n                    if (rtl) {\r\n                        chars = $utils.splitString(chunk.text);\r\n                        chars.reverse();\r\n                    }\r\n                    for (let i = 0; i < chars.length; i++) {\r\n                        const char = chars[i];\r\n                        // Measure\r\n                        const metrics = this._measureText(char, context);\r\n                        let chunkWidth = metrics.width;\r\n                        // Chunk width?\r\n                        if (currentStyle && currentChunkWidth && (currentChunkWidth > chunkWidth)) {\r\n                            chunkWidth = currentChunkWidth;\r\n                        }\r\n                        const chunkHeight = metrics.actualBoundingBoxAscent + metrics.actualBoundingBoxDescent;\r\n                        if (chunkHeight > lineInfo.height) {\r\n                            lineInfo.height = chunkHeight;\r\n                        }\r\n                        if (metrics.actualBoundingBoxAscent > lineInfo.ascent) {\r\n                            lineInfo.ascent = metrics.actualBoundingBoxAscent;\r\n                        }\r\n                        totalWidth += chunkWidth;\r\n                        // Handle oversized behavior\r\n                        if (truncate) {\r\n                            // Measure ellipsis and check if it fits\r\n                            if (!ellipsisMetrics) {\r\n                                ellipsisMetrics = this._measureText(ellipsis, context);\r\n                            }\r\n                            const ellipsisWidth = ellipsisMetrics.actualBoundingBoxLeft + ellipsisMetrics.actualBoundingBoxRight;\r\n                            //totalWidth += ellipsisWidth;\r\n                            if ((totalWidth + ellipsisWidth) > maxWidth) {\r\n                                if (lineInfo.textChunks.length == 1) {\r\n                                    this.textVisible = false;\r\n                                }\r\n                                else {\r\n                                    lineInfo.width += ellipsisWidth;\r\n                                    lineInfo.left += ellipsisMetrics.actualBoundingBoxLeft;\r\n                                    lineInfo.right += ellipsisMetrics.actualBoundingBoxRight;\r\n                                    lineInfo.textChunks.push({\r\n                                        style: currentStyle,\r\n                                        fill: currentFill,\r\n                                        text: ellipsis,\r\n                                        width: ellipsisWidth,\r\n                                        height: chunkHeight + ellipsisMetrics.actualBoundingBoxDescent,\r\n                                        left: ellipsisMetrics.actualBoundingBoxLeft,\r\n                                        right: ellipsisMetrics.actualBoundingBoxRight,\r\n                                        ascent: ellipsisMetrics.actualBoundingBoxAscent,\r\n                                        offsetX: 0,\r\n                                        offsetY: chunkHeight,\r\n                                        textDecoration: undefined\r\n                                    });\r\n                                }\r\n                                break;\r\n                            }\r\n                        }\r\n                        lineInfo.width += chunkWidth;\r\n                        lineInfo.left += metrics.actualBoundingBoxLeft;\r\n                        lineInfo.right += metrics.actualBoundingBoxRight;\r\n                        lineInfo.textChunks.push({\r\n                            style: currentStyle,\r\n                            fill: currentFill,\r\n                            text: char,\r\n                            width: chunkWidth,\r\n                            height: chunkHeight + metrics.actualBoundingBoxDescent,\r\n                            left: metrics.actualBoundingBoxLeft,\r\n                            right: metrics.actualBoundingBoxRight,\r\n                            ascent: metrics.actualBoundingBoxAscent,\r\n                            offsetX: 0,\r\n                            offsetY: chunkHeight,\r\n                            textDecoration: undefined\r\n                        });\r\n                        if (rtl) {\r\n                            // @todo still needed?\r\n                            //break;\r\n                        }\r\n                    }\r\n                }\r\n            });\r\n            if (this.style.lineHeight instanceof Percent) {\r\n                lineInfo.height *= this.style.lineHeight.value;\r\n            }\r\n            else {\r\n                lineInfo.height *= this.style.lineHeight || 1.2;\r\n            }\r\n            this._textInfo.push(lineInfo);\r\n            //lineInfo.offsetY += lineInfo.ascent;\r\n            offsetY += lineInfo.height;\r\n        });\r\n        if (!styleRestored) {\r\n            context.restore();\r\n            ghostContext.restore();\r\n        }\r\n        if (oversizedBehavior == \"hide\" && (totalWidth > maxWidth)) {\r\n            this.textVisible = false;\r\n        }\r\n        // Adjust chunk internal offsets\r\n        $array.each(this._textInfo, (lineInfo) => {\r\n            $array.each(lineInfo.textChunks, (chunk) => {\r\n                chunk.offsetY += Math.round((lineInfo.height - chunk.height + (lineInfo.ascent - chunk.ascent)) / 2);\r\n            });\r\n        });\r\n        context.restore();\r\n        ghostContext.restore();\r\n        return {\r\n            left: 0,\r\n            top: 0,\r\n            right: 0,\r\n            bottom: 0,\r\n        };\r\n    }\r\n}\r\n/**\r\n * @ignore\r\n */\r\nexport class CanvasImage extends CanvasDisplayObject {\r\n    constructor(renderer, image) {\r\n        super(renderer);\r\n        Object.defineProperty(this, \"width\", {\r\n            enumerable: true,\r\n            configurable: true,\r\n            writable: true,\r\n            value: void 0\r\n        });\r\n        Object.defineProperty(this, \"height\", {\r\n            enumerable: true,\r\n            configurable: true,\r\n            writable: true,\r\n            value: void 0\r\n        });\r\n        Object.defineProperty(this, \"image\", {\r\n            enumerable: true,\r\n            configurable: true,\r\n            writable: true,\r\n            value: void 0\r\n        });\r\n        Object.defineProperty(this, \"tainted\", {\r\n            enumerable: true,\r\n            configurable: true,\r\n            writable: true,\r\n            value: void 0\r\n        });\r\n        Object.defineProperty(this, \"shadowColor\", {\r\n            enumerable: true,\r\n            configurable: true,\r\n            writable: true,\r\n            value: void 0\r\n        });\r\n        Object.defineProperty(this, \"shadowBlur\", {\r\n            enumerable: true,\r\n            configurable: true,\r\n            writable: true,\r\n            value: void 0\r\n        });\r\n        Object.defineProperty(this, \"shadowOffsetX\", {\r\n            enumerable: true,\r\n            configurable: true,\r\n            writable: true,\r\n            value: void 0\r\n        });\r\n        Object.defineProperty(this, \"shadowOffsetY\", {\r\n            enumerable: true,\r\n            configurable: true,\r\n            writable: true,\r\n            value: void 0\r\n        });\r\n        Object.defineProperty(this, \"shadowOpacity\", {\r\n            enumerable: true,\r\n            configurable: true,\r\n            writable: true,\r\n            value: void 0\r\n        });\r\n        Object.defineProperty(this, \"_imageMask\", {\r\n            enumerable: true,\r\n            configurable: true,\r\n            writable: true,\r\n            value: void 0\r\n        });\r\n        this.image = image;\r\n    }\r\n    _dispose() {\r\n        super._dispose();\r\n        if (this._imageMask) {\r\n            clearCanvas(this._imageMask);\r\n        }\r\n    }\r\n    getLocalBounds() {\r\n        if (!this._localBounds) {\r\n            let w = 0;\r\n            let h = 0;\r\n            if (this.width) {\r\n                w = this.width;\r\n            }\r\n            if (this.height) {\r\n                h = this.height;\r\n            }\r\n            this._localBounds = {\r\n                left: 0,\r\n                top: 0,\r\n                right: w,\r\n                bottom: h\r\n            };\r\n            this._addBounds(this._localBounds);\r\n        }\r\n        return this._localBounds;\r\n    }\r\n    _render(status) {\r\n        super._render(status);\r\n        if (this.image) {\r\n            if (this.tainted === undefined) {\r\n                this.tainted = isTainted(this.image);\r\n                status.layer.tainted = true;\r\n            }\r\n            if (this.tainted && this._renderer._omitTainted) {\r\n                return;\r\n            }\r\n            if (status.layer.dirty) {\r\n                if (this.shadowColor) {\r\n                    status.layer.context.shadowColor = this.shadowColor.toCSS(this.shadowOpacity || 1);\r\n                }\r\n                if (this.shadowBlur) {\r\n                    status.layer.context.shadowBlur = this.shadowBlur;\r\n                }\r\n                if (this.shadowOffsetX) {\r\n                    status.layer.context.shadowOffsetX = this.shadowOffsetX;\r\n                }\r\n                if (this.shadowOffsetY) {\r\n                    status.layer.context.shadowOffsetY = this.shadowOffsetY;\r\n                }\r\n                // TODO should this round ?\r\n                const width = this.width || this.image.naturalWidth;\r\n                const height = this.height || this.image.naturalHeight;\r\n                status.layer.context.drawImage(this.image, 0, 0, width, height);\r\n            }\r\n            if (this.interactive && this._isInteractive(status)) {\r\n                const mask = this._getMask(this.image);\r\n                this._renderer._ghostLayer.context.drawImage(mask, 0, 0);\r\n            }\r\n        }\r\n    }\r\n    clear() {\r\n        super.clear();\r\n        this.image = undefined;\r\n        this._imageMask = undefined;\r\n    }\r\n    _getMask(image) {\r\n        if (this._imageMask === undefined) {\r\n            // TODO should this round ?\r\n            const width = this.width || image.naturalWidth;\r\n            const height = this.height || image.naturalHeight;\r\n            // We need to create a second canvas because destination-in clears out the entire canvas\r\n            const canvas = document.createElement(\"canvas\");\r\n            canvas.width = width;\r\n            canvas.height = height;\r\n            const context = canvas.getContext(\"2d\");\r\n            context.imageSmoothingEnabled = false;\r\n            context.fillStyle = this._getColorId();\r\n            context.fillRect(0, 0, width, height);\r\n            if (!isTainted(image)) {\r\n                context.globalCompositeOperation = \"destination-in\";\r\n                context.drawImage(image, 0, 0, width, height);\r\n            }\r\n            this._imageMask = canvas;\r\n        }\r\n        return this._imageMask;\r\n    }\r\n}\r\n/**\r\n * @ignore\r\n */\r\nexport class CanvasRendererEvent {\r\n    constructor(event, originalPoint, point, bbox) {\r\n        Object.defineProperty(this, \"event\", {\r\n            enumerable: true,\r\n            configurable: true,\r\n            writable: true,\r\n            value: event\r\n        });\r\n        Object.defineProperty(this, \"originalPoint\", {\r\n            enumerable: true,\r\n            configurable: true,\r\n            writable: true,\r\n            value: originalPoint\r\n        });\r\n        Object.defineProperty(this, \"point\", {\r\n            enumerable: true,\r\n            configurable: true,\r\n            writable: true,\r\n            value: point\r\n        });\r\n        Object.defineProperty(this, \"bbox\", {\r\n            enumerable: true,\r\n            configurable: true,\r\n            writable: true,\r\n            value: bbox\r\n        });\r\n        Object.defineProperty(this, \"id\", {\r\n            enumerable: true,\r\n            configurable: true,\r\n            writable: true,\r\n            value: void 0\r\n        });\r\n        Object.defineProperty(this, \"simulated\", {\r\n            enumerable: true,\r\n            configurable: true,\r\n            writable: true,\r\n            value: false\r\n        });\r\n        Object.defineProperty(this, \"native\", {\r\n            enumerable: true,\r\n            configurable: true,\r\n            writable: true,\r\n            value: true\r\n        });\r\n        if ($utils.supports(\"touchevents\") && event instanceof Touch) {\r\n            this.id = event.identifier;\r\n        }\r\n        else {\r\n            this.id = null;\r\n        }\r\n    }\r\n}\r\n/**\r\n * @ignore\r\n */\r\nexport class CanvasRenderer extends ArrayDisposer {\r\n    constructor(resolution) {\r\n        super();\r\n        Object.defineProperty(this, \"view\", {\r\n            enumerable: true,\r\n            configurable: true,\r\n            writable: true,\r\n            value: document.createElement(\"div\")\r\n        });\r\n        Object.defineProperty(this, \"_layerDom\", {\r\n            enumerable: true,\r\n            configurable: true,\r\n            writable: true,\r\n            value: document.createElement(\"div\")\r\n        });\r\n        Object.defineProperty(this, \"layers\", {\r\n            enumerable: true,\r\n            configurable: true,\r\n            writable: true,\r\n            value: []\r\n        });\r\n        Object.defineProperty(this, \"_dirtyLayers\", {\r\n            enumerable: true,\r\n            configurable: true,\r\n            writable: true,\r\n            value: []\r\n        });\r\n        Object.defineProperty(this, \"defaultLayer\", {\r\n            enumerable: true,\r\n            configurable: true,\r\n            writable: true,\r\n            value: this.getLayer(0)\r\n        });\r\n        Object.defineProperty(this, \"_ghostLayer\", {\r\n            enumerable: true,\r\n            configurable: true,\r\n            writable: true,\r\n            value: new GhostLayer()\r\n        });\r\n        Object.defineProperty(this, \"_patternCanvas\", {\r\n            enumerable: true,\r\n            configurable: true,\r\n            writable: true,\r\n            value: document.createElement(\"canvas\")\r\n        });\r\n        Object.defineProperty(this, \"_patternContext\", {\r\n            enumerable: true,\r\n            configurable: true,\r\n            writable: true,\r\n            value: this._patternCanvas.getContext(\"2d\")\r\n        });\r\n        Object.defineProperty(this, \"_realWidth\", {\r\n            enumerable: true,\r\n            configurable: true,\r\n            writable: true,\r\n            value: 0\r\n        });\r\n        Object.defineProperty(this, \"_realHeight\", {\r\n            enumerable: true,\r\n            configurable: true,\r\n            writable: true,\r\n            value: 0\r\n        });\r\n        Object.defineProperty(this, \"_calculatedWidth\", {\r\n            enumerable: true,\r\n            configurable: true,\r\n            writable: true,\r\n            value: 0\r\n        });\r\n        Object.defineProperty(this, \"_calculatedHeight\", {\r\n            enumerable: true,\r\n            configurable: true,\r\n            writable: true,\r\n            value: 0\r\n        });\r\n        Object.defineProperty(this, \"resolution\", {\r\n            enumerable: true,\r\n            configurable: true,\r\n            writable: true,\r\n            value: void 0\r\n        });\r\n        Object.defineProperty(this, \"interactionsEnabled\", {\r\n            enumerable: true,\r\n            configurable: true,\r\n            writable: true,\r\n            value: true\r\n        });\r\n        Object.defineProperty(this, \"_listeners\", {\r\n            enumerable: true,\r\n            configurable: true,\r\n            writable: true,\r\n            value: {}\r\n        });\r\n        Object.defineProperty(this, \"_events\", {\r\n            enumerable: true,\r\n            configurable: true,\r\n            writable: true,\r\n            value: {}\r\n        });\r\n        Object.defineProperty(this, \"_colorId\", {\r\n            enumerable: true,\r\n            configurable: true,\r\n            writable: true,\r\n            value: 0\r\n        });\r\n        Object.defineProperty(this, \"_colorMap\", {\r\n            enumerable: true,\r\n            configurable: true,\r\n            writable: true,\r\n            value: {}\r\n        });\r\n        Object.defineProperty(this, \"_forceInteractive\", {\r\n            enumerable: true,\r\n            configurable: true,\r\n            writable: true,\r\n            value: 0\r\n        });\r\n        Object.defineProperty(this, \"_omitTainted\", {\r\n            enumerable: true,\r\n            configurable: true,\r\n            writable: true,\r\n            value: false\r\n        });\r\n        // TODO this should store the Id as well\r\n        Object.defineProperty(this, \"_hovering\", {\r\n            enumerable: true,\r\n            configurable: true,\r\n            writable: true,\r\n            value: new Set()\r\n        });\r\n        Object.defineProperty(this, \"_dragging\", {\r\n            enumerable: true,\r\n            configurable: true,\r\n            writable: true,\r\n            value: []\r\n        });\r\n        Object.defineProperty(this, \"_mousedown\", {\r\n            enumerable: true,\r\n            configurable: true,\r\n            writable: true,\r\n            value: []\r\n        });\r\n        Object.defineProperty(this, \"_lastPointerMoveEvent\", {\r\n            enumerable: true,\r\n            configurable: true,\r\n            writable: true,\r\n            value: void 0\r\n        });\r\n        Object.defineProperty(this, \"tapToActivate\", {\r\n            enumerable: true,\r\n            configurable: true,\r\n            writable: true,\r\n            value: false\r\n        });\r\n        Object.defineProperty(this, \"tapToActivateTimeout\", {\r\n            enumerable: true,\r\n            configurable: true,\r\n            writable: true,\r\n            value: 3000\r\n        });\r\n        Object.defineProperty(this, \"_touchActive\", {\r\n            enumerable: true,\r\n            configurable: true,\r\n            writable: true,\r\n            value: false\r\n        });\r\n        Object.defineProperty(this, \"_touchActiveTimeout\", {\r\n            enumerable: true,\r\n            configurable: true,\r\n            writable: true,\r\n            value: void 0\r\n        });\r\n        if (resolution == null) {\r\n            this.resolution = window.devicePixelRatio;\r\n        }\r\n        else {\r\n            this.resolution = resolution;\r\n        }\r\n        this.view.style.position = \"absolute\";\r\n        this.view.setAttribute(\"aria-hidden\", \"true\");\r\n        this.view.appendChild(this._layerDom);\r\n        this._disposers.push(new Disposer(() => {\r\n            $object.each(this._events, (_key, events) => {\r\n                events.disposer.dispose();\r\n            });\r\n            $array.each(this.layers, (layer) => {\r\n                clearCanvas(layer.view);\r\n                if (layer.exportableView) {\r\n                    clearCanvas(layer.exportableView);\r\n                }\r\n            });\r\n            clearCanvas(this._ghostLayer.view);\r\n            clearCanvas(this._patternCanvas);\r\n        }));\r\n        /*\r\n        this._disposers.push($utils.addEventListener(this._ghostLayer.view, \"click\", (originalEvent: MouseEvent) => {\r\n            const event = this.getEvent(originalEvent);\r\n            const target = this._getHitTarget(event.originalPoint, event.bbox);\r\n            console.debug(target);\r\n        }));\r\n        */\r\n        // Monitor for possible pixel ratio changes (when page is zoomed)\r\n        this._disposers.push($utils.onZoom(() => {\r\n            if (resolution == null) {\r\n                this.resolution = window.devicePixelRatio;\r\n            }\r\n        }));\r\n        // We need this in order top prevent default touch gestures when dragging\r\n        // draggable elements\r\n        if ($utils.supports(\"touchevents\")) {\r\n            const listener = (ev) => {\r\n                if (this._dragging.length !== 0) {\r\n                    $array.eachContinue(this._dragging, (item) => {\r\n                        if (item.value.shouldCancelTouch()) {\r\n                            ev.preventDefault();\r\n                            return false;\r\n                        }\r\n                        return true;\r\n                    });\r\n                }\r\n                // If touch down happends, delay touch out\r\n                if (this._touchActiveTimeout) {\r\n                    this._delayTouchDeactivate();\r\n                }\r\n            };\r\n            this._disposers.push($utils.addEventListener(window, \"touchstart\", listener, { passive: false }));\r\n            this._disposers.push($utils.addEventListener(this.view, \"touchstart\", listener, { passive: false }));\r\n            this._disposers.push($utils.addEventListener(this.view, \"touchmove\", () => {\r\n                // If touch is moving, delay touch out\r\n                if (this._touchActiveTimeout) {\r\n                    this._delayTouchDeactivate();\r\n                }\r\n            }, { passive: true }));\r\n            this._disposers.push($utils.addEventListener(window, \"click\", (_ev) => {\r\n                this._touchActive = false;\r\n            }, { passive: true }));\r\n            this._disposers.push($utils.addEventListener(this.view, \"click\", (_ev) => {\r\n                window.setTimeout(() => {\r\n                    this._touchActive = true;\r\n                    this._delayTouchDeactivate();\r\n                }, 100);\r\n            }, { passive: true }));\r\n        }\r\n        // Prevent scrolling of the window when hovering on \"wheelable\" object\r\n        if ($utils.supports(\"wheelevents\")) {\r\n            this._disposers.push($utils.addEventListener(this.view, \"wheel\", (ev) => {\r\n                let prevent = false;\r\n                this._hovering.forEach((obj) => {\r\n                    if (obj.wheelable) {\r\n                        prevent = true;\r\n                        return false;\r\n                    }\r\n                });\r\n                if (prevent) {\r\n                    ev.preventDefault();\r\n                }\r\n            }, { passive: false }));\r\n        }\r\n    }\r\n    /*protected _mouseMoveThrottler: Throttler = new Throttler(() => {\r\n        this._dispatchGlobalMousemove(this._lastPointerMoveEvent.event, this._lastPointerMoveEvent.native);\r\n    });\r\n    */\r\n    resetImageArray() {\r\n        this._ghostLayer.imageArray = undefined;\r\n    }\r\n    _delayTouchDeactivate() {\r\n        if (this._touchActiveTimeout) {\r\n            clearTimeout(this._touchActiveTimeout);\r\n        }\r\n        if (this.tapToActivateTimeout > 0) {\r\n            this._touchActiveTimeout = window.setTimeout(() => {\r\n                this._touchActive = false;\r\n            }, this.tapToActivateTimeout);\r\n        }\r\n    }\r\n    get debugGhostView() {\r\n        return !!this._ghostLayer.view.parentNode;\r\n    }\r\n    set debugGhostView(value) {\r\n        if (value) {\r\n            if (!this._ghostLayer.view.parentNode) {\r\n                this.view.appendChild(this._ghostLayer.view);\r\n            }\r\n        }\r\n        else {\r\n            if (this._ghostLayer.view.parentNode) {\r\n                this._ghostLayer.view.parentNode.removeChild(this._ghostLayer.view);\r\n            }\r\n        }\r\n    }\r\n    createLinearGradient(x1, y1, x2, y2) {\r\n        return this.defaultLayer.context.createLinearGradient(x1, y1, x2, y2);\r\n    }\r\n    createRadialGradient(x1, y1, radius1, x2, y2, radius2) {\r\n        return this.defaultLayer.context.createRadialGradient(x1, y1, radius1, x2, y2, radius2);\r\n    }\r\n    createPattern(graphics, background, repetition, width, height) {\r\n        // const patternCanvas = document.createElement(\"canvas\");\r\n        // const patternContext = patternCanvas.getContext(\"2d\")!;\r\n        // patternCanvas.width = width;\r\n        // patternCanvas.height = height;\r\n        // if (fill) {\r\n        // \tpatternContext.fillStyle = fill.toCSS();\r\n        // \tpatternContext.fillRect(0, 0, patternCanvas.width, patternCanvas.height);\r\n        // }\r\n        // const layer = {\r\n        // \tview: patternCanvas,\r\n        // \tcontext: patternContext,\r\n        // \tvisible: true,\r\n        // \torder: 0,\r\n        // \twidth: width,\r\n        // \theight: height,\r\n        // \tdirty: true\r\n        // };\r\n        // // patternContext.arc(0, 0, 50, 0, .5 * Math.PI);\r\n        // // patternContext.stroke();\r\n        // image.targetLayer = layer;\r\n        // image.render(layer);\r\n        //this._layerDom.appendChild(patternCanvas);\r\n        this._patternCanvas.width = width;\r\n        this._patternCanvas.height = height;\r\n        this._patternContext.clearRect(0, 0, width, height);\r\n        // patternCanvas.style.width = width * this.resolution + \"px\";\r\n        // patternCanvas.style.height = height * this.resolution + \"px\";\r\n        background.renderDetached(this._patternContext);\r\n        graphics.renderDetached(this._patternContext);\r\n        return this._patternContext.createPattern(this._patternCanvas, repetition);\r\n    }\r\n    makeContainer() {\r\n        return new CanvasContainer(this);\r\n    }\r\n    makeGraphics() {\r\n        return new CanvasGraphics(this);\r\n    }\r\n    makeText(text, style) {\r\n        return new CanvasText(this, text, style);\r\n    }\r\n    makeTextStyle() {\r\n        return new CanvasTextStyle();\r\n    }\r\n    makeRadialText(text, style) {\r\n        return new CanvasRadialText(this, text, style);\r\n    }\r\n    makePicture(image) {\r\n        return new CanvasImage(this, image);\r\n    }\r\n    resizeLayer(layer) {\r\n        layer.resize(this._calculatedWidth, this._calculatedHeight, this._calculatedWidth, this._calculatedHeight, this.resolution);\r\n    }\r\n    resizeGhost() {\r\n        this._ghostLayer.resize(this._calculatedWidth, this._calculatedHeight, this._calculatedWidth, this._calculatedHeight, this.resolution);\r\n    }\r\n    resize(realWidth, realHeight, calculatedWidth, calculatedHeight) {\r\n        this._realWidth = realWidth;\r\n        this._realHeight = realHeight;\r\n        this._calculatedWidth = calculatedWidth;\r\n        this._calculatedHeight = calculatedHeight;\r\n        $array.each(this.layers, (layer) => {\r\n            if (layer) {\r\n                layer.dirty = true;\r\n                this.resizeLayer(layer);\r\n            }\r\n        });\r\n        this.resizeGhost();\r\n        this.view.style.width = calculatedWidth + \"px\";\r\n        this.view.style.height = calculatedHeight + \"px\";\r\n    }\r\n    createDetachedLayer(willReadFrequently = false) {\r\n        const view = document.createElement(\"canvas\");\r\n        const context = view.getContext(\"2d\", { willReadFrequently: willReadFrequently });\r\n        const layer = new CanvasLayer(view, context);\r\n        view.style.position = \"absolute\";\r\n        view.style.top = \"0px\";\r\n        view.style.left = \"0px\";\r\n        return layer;\r\n    }\r\n    getLayerByOrder(order) {\r\n        const layers = this.layers;\r\n        const length = layers.length;\r\n        for (let i = 0; i < length; i++) {\r\n            const layer = layers[i];\r\n            if (layer.order == order) {\r\n                return layer;\r\n            }\r\n        }\r\n    }\r\n    getLayer(order, visible = true) {\r\n        let existingLayer = this.getLayerByOrder(order);\r\n        if (existingLayer) {\r\n            return existingLayer;\r\n        }\r\n        const layer = this.createDetachedLayer(order == 99);\r\n        layer.order = order;\r\n        layer.visible = visible;\r\n        layer.view.className = \"am5-layer-\" + order;\r\n        if (layer.visible) {\r\n            this.resizeLayer(layer);\r\n        }\r\n        const layers = this.layers;\r\n        layers.push(layer);\r\n        layers.sort((a, b) => {\r\n            if (a.order > b.order) {\r\n                return 1;\r\n            }\r\n            else if (a.order < b.order) {\r\n                return -1;\r\n            }\r\n            else {\r\n                return 0;\r\n            }\r\n        });\r\n        const length = layers.length;\r\n        const layerIndex = $array.indexOf(layers, layer);\r\n        let next;\r\n        for (let i = layerIndex + 1; i < length; i++) {\r\n            if (layers[i].visible) {\r\n                next = layers[i];\r\n                break;\r\n            }\r\n        }\r\n        if (layer.visible) {\r\n            if (next === undefined) {\r\n                this._layerDom.appendChild(layer.view);\r\n            }\r\n            else {\r\n                this._layerDom.insertBefore(layer.view, next.view);\r\n            }\r\n        }\r\n        return layer;\r\n    }\r\n    render(root) {\r\n        this._dirtyLayers.length = 0;\r\n        $array.each(this.layers, (layer) => {\r\n            if (layer) {\r\n                if (layer.dirty && layer.visible) {\r\n                    this._dirtyLayers.push(layer);\r\n                    layer.clear();\r\n                }\r\n            }\r\n        });\r\n        this._ghostLayer.clear();\r\n        root.render({\r\n            inactive: null,\r\n            layer: this.defaultLayer,\r\n        });\r\n        this._ghostLayer.context.restore();\r\n        //setTimeout(() => {\r\n        // Remove this after the Chrome bug is fixed:\r\n        // https://bugs.chromium.org/p/chromium/issues/detail?id=1279394\r\n        $array.each(this.layers, (layer) => {\r\n            if (layer) {\r\n                const context = layer.context;\r\n                context.beginPath();\r\n                context.moveTo(0, 0);\r\n                context.stroke();\r\n            }\r\n        });\r\n        $array.each(this._dirtyLayers, (layer) => {\r\n            layer.context.restore();\r\n            layer.dirty = false;\r\n        });\r\n        //}, 100)\r\n        if (this._hovering.size && this._lastPointerMoveEvent) {\r\n            const { events, target, native } = this._lastPointerMoveEvent;\r\n            //this._mouseMoveThrottler.run();\r\n            $array.each(events, (event) => {\r\n                this._dispatchGlobalMousemove(event, target, native);\r\n            });\r\n        }\r\n    }\r\n    paintId(obj) {\r\n        const id = distributeId(++this._colorId);\r\n        const color = Color.fromHex(id).toCSS();\r\n        this._colorMap[color] = obj;\r\n        return color;\r\n    }\r\n    _removeObject(obj) {\r\n        if (obj._colorId !== undefined) {\r\n            delete this._colorMap[obj._colorId];\r\n        }\r\n    }\r\n    // protected _identifyObjectByColor(colorId: number): CanvasDisplayObject | undefined {\r\n    // \treturn this._colorMap[colorId];\r\n    // }\r\n    _adjustBoundingBox(bbox) {\r\n        const margin = this._ghostLayer.margin;\r\n        return new DOMRect(-margin.left, -margin.top, bbox.width + margin.left + margin.right, bbox.height + margin.top + margin.bottom);\r\n    }\r\n    getEvent(originalEvent, adjustPoint = true) {\r\n        const bbox = this.view.getBoundingClientRect();\r\n        const x = originalEvent.clientX || 0;\r\n        const y = originalEvent.clientY || 0;\r\n        const widthScale = this._calculatedWidth / this._realWidth;\r\n        const heightScale = this._calculatedHeight / this._realHeight;\r\n        const originalPoint = {\r\n            x: x - bbox.left,\r\n            y: y - bbox.top,\r\n        };\r\n        const point = {\r\n            x: (x - (adjustPoint ? bbox.left : 0)) * widthScale,\r\n            y: (y - (adjustPoint ? bbox.top : 0)) * heightScale,\r\n        };\r\n        return new CanvasRendererEvent(originalEvent, originalPoint, point, this._adjustBoundingBox(bbox));\r\n    }\r\n    _getHitTarget(point, bbox, target) {\r\n        if (bbox.width === 0 || bbox.height === 0 || point.x < bbox.left || point.x > bbox.right || point.y < bbox.top || point.y > bbox.bottom) {\r\n            return;\r\n        }\r\n        if (!target || !this._layerDom.contains(target)) {\r\n            return;\r\n        }\r\n        const pixel = this._ghostLayer.getImageData(point, bbox);\r\n        if (pixel.data[0] === 0 && pixel.data[1] === 0 && pixel.data[2] === 0) {\r\n            return false;\r\n        }\r\n        const colorId = Color.fromRGB(pixel.data[0], pixel.data[1], pixel.data[2]).toCSS();\r\n        const hit = this._colorMap[colorId];\r\n        return hit;\r\n    }\r\n    getObjectAtPoint(point) {\r\n        const data = this._ghostLayer.getImageArray(point);\r\n        if (data[0] === 0 && data[1] === 0 && data[2] === 0) {\r\n            return undefined;\r\n        }\r\n        const colorId = Color.fromRGB(data[0], data[1], data[2]).toCSS();\r\n        const hit = this._colorMap[colorId];\r\n        return hit;\r\n    }\r\n    _withEvents(key, f) {\r\n        const events = this._events[key];\r\n        if (events !== undefined) {\r\n            events.dispatching = true;\r\n            try {\r\n                f(events);\r\n            }\r\n            finally {\r\n                events.dispatching = false;\r\n                if (events.cleanup) {\r\n                    events.cleanup = false;\r\n                    $array.keepIf(events.callbacks, (callback) => {\r\n                        return !callback.disposed;\r\n                    });\r\n                    if (events.callbacks.length === 0) {\r\n                        events.disposer.dispose();\r\n                        delete this._events[key];\r\n                    }\r\n                }\r\n            }\r\n        }\r\n    }\r\n    _dispatchEventAll(key, event) {\r\n        if (!this.interactionsEnabled) {\r\n            return;\r\n        }\r\n        this._withEvents(key, (events) => {\r\n            $array.each(events.callbacks, (callback) => {\r\n                if (!callback.disposed) {\r\n                    callback.callback.call(callback.context, event);\r\n                }\r\n            });\r\n        });\r\n    }\r\n    _dispatchEvent(key, target, event) {\r\n        if (!this.interactionsEnabled) {\r\n            return false;\r\n        }\r\n        let dispatched = false;\r\n        this._withEvents(key, (events) => {\r\n            $array.each(events.callbacks, (callback) => {\r\n                if (!callback.disposed && callback.object === target) {\r\n                    callback.callback.call(callback.context, event);\r\n                    dispatched = true;\r\n                }\r\n            });\r\n        });\r\n        return dispatched;\r\n    }\r\n    _dispatchMousedown(originalEvent, originalTarget) {\r\n        const button = originalEvent.button;\r\n        if (button != 0 && button != 2 && button != 1 && button !== undefined) {\r\n            // Ignore non-primary mouse buttons\r\n            return;\r\n        }\r\n        const event = this.getEvent(originalEvent);\r\n        const target = this._getHitTarget(event.originalPoint, event.bbox, originalTarget);\r\n        if (target) {\r\n            const id = event.id;\r\n            let dragged = false;\r\n            eachTargets(target, (obj) => {\r\n                const info = { id: id, value: obj };\r\n                this._mousedown.push(info);\r\n                if (!dragged && this._dispatchEvent(\"pointerdown\", obj, event)) {\r\n                    // Only dispatch the first element which matches\r\n                    dragged = true;\r\n                    const has = this._dragging.some((x) => {\r\n                        return x.value === obj && x.id === id;\r\n                    });\r\n                    if (!has) {\r\n                        this._dragging.push(info);\r\n                    }\r\n                }\r\n                return true;\r\n            });\r\n        }\r\n    }\r\n    _dispatchGlobalMousemove(originalEvent, originalTarget, native) {\r\n        const event = this.getEvent(originalEvent);\r\n        const target = this._getHitTarget(event.originalPoint, event.bbox, originalTarget);\r\n        event.native = native;\r\n        if (target) {\r\n            this._hovering.forEach((obj) => {\r\n                if (!obj.contains(target)) {\r\n                    this._hovering.delete(obj);\r\n                    if (obj.cursorOverStyle) {\r\n                        $utils.setStyle(document.body, \"cursor\", obj._replacedCursorStyle);\r\n                    }\r\n                    this._dispatchEvent(\"pointerout\", obj, event);\r\n                }\r\n            });\r\n            if (event.native) {\r\n                eachTargets(target, (obj) => {\r\n                    if (!this._hovering.has(obj)) {\r\n                        this._hovering.add(obj);\r\n                        if (obj.cursorOverStyle) {\r\n                            obj._replacedCursorStyle = $utils.getStyle(document.body, \"cursor\");\r\n                            $utils.setStyle(document.body, \"cursor\", obj.cursorOverStyle);\r\n                        }\r\n                        this._dispatchEvent(\"pointerover\", obj, event);\r\n                    }\r\n                    return true;\r\n                });\r\n            }\r\n            //} else if (target === false) {\r\n        }\r\n        else {\r\n            this._hovering.forEach((obj) => {\r\n                if (obj.cursorOverStyle) {\r\n                    $utils.setStyle(document.body, \"cursor\", obj._replacedCursorStyle);\r\n                }\r\n                this._dispatchEvent(\"pointerout\", obj, event);\r\n            });\r\n            this._hovering.clear();\r\n        }\r\n        this._dispatchEventAll(\"globalpointermove\", event);\r\n    }\r\n    removeHovering(graphics) {\r\n        this._hovering.delete(graphics);\r\n        if (graphics.cursorOverStyle) {\r\n            $utils.setStyle(document.body, \"cursor\", graphics._replacedCursorStyle);\r\n        }\r\n    }\r\n    _dispatchGlobalMouseup(originalEvent, native) {\r\n        const event = this.getEvent(originalEvent);\r\n        event.native = native;\r\n        //const target = this._getHitTarget(event.originalPoint);\r\n        this._dispatchEventAll(\"globalpointerup\", event);\r\n    }\r\n    _dispatchDragMove(originalEvent) {\r\n        if (this._dragging.length !== 0) {\r\n            const event = this.getEvent(originalEvent);\r\n            const id = event.id;\r\n            this._dragging.forEach((obj) => {\r\n                if (obj.id === id) {\r\n                    this._dispatchEvent(\"pointermove\", obj.value, event);\r\n                }\r\n            });\r\n        }\r\n    }\r\n    _dispatchDragEnd(originalEvent, originalTarget) {\r\n        const button = originalEvent.button;\r\n        let clickevent;\r\n        if (button == 0 || button === undefined) {\r\n            clickevent = \"click\";\r\n        }\r\n        else if (button == 2) {\r\n            clickevent = \"rightclick\";\r\n        }\r\n        else if (button == 1) {\r\n            clickevent = \"middleclick\";\r\n        }\r\n        else {\r\n            // Ignore non-primary mouse buttons\r\n            return;\r\n        }\r\n        const event = this.getEvent(originalEvent);\r\n        const id = event.id;\r\n        if (this._mousedown.length !== 0) {\r\n            const target = this._getHitTarget(event.originalPoint, event.bbox, originalTarget);\r\n            if (target) {\r\n                this._mousedown.forEach((obj) => {\r\n                    if (obj.id === id && obj.value.contains(target)) {\r\n                        this._dispatchEvent(clickevent, obj.value, event);\r\n                    }\r\n                });\r\n            }\r\n            this._mousedown.length = 0;\r\n        }\r\n        if (this._dragging.length !== 0) {\r\n            this._dragging.forEach((obj) => {\r\n                if (obj.id === id) {\r\n                    this._dispatchEvent(\"pointerup\", obj.value, event);\r\n                }\r\n            });\r\n            this._dragging.length = 0;\r\n        }\r\n    }\r\n    _dispatchDoubleClick(originalEvent, originalTarget) {\r\n        const event = this.getEvent(originalEvent);\r\n        const target = this._getHitTarget(event.originalPoint, event.bbox, originalTarget);\r\n        if (target) {\r\n            eachTargets(target, (obj) => {\r\n                if (this._dispatchEvent(\"dblclick\", obj, event)) {\r\n                    return false;\r\n                }\r\n                else {\r\n                    return true;\r\n                }\r\n            });\r\n        }\r\n    }\r\n    _dispatchWheel(originalEvent, originalTarget) {\r\n        const event = this.getEvent(originalEvent);\r\n        const target = this._getHitTarget(event.originalPoint, event.bbox, originalTarget);\r\n        if (target) {\r\n            eachTargets(target, (obj) => {\r\n                if (this._dispatchEvent(\"wheel\", obj, event)) {\r\n                    return false;\r\n                }\r\n                else {\r\n                    return true;\r\n                }\r\n            });\r\n        }\r\n    }\r\n    _makeSharedEvent(key, f) {\r\n        if (this._listeners[key] === undefined) {\r\n            const listener = f();\r\n            this._listeners[key] = new CounterDisposer(() => {\r\n                delete this._listeners[key];\r\n                listener.dispose();\r\n            });\r\n        }\r\n        return this._listeners[key].increment();\r\n    }\r\n    _onPointerEvent(name, f) {\r\n        let native = false;\r\n        let timer = null;\r\n        function clear() {\r\n            timer = null;\r\n            native = false;\r\n        }\r\n        return new MultiDisposer([\r\n            new Disposer(() => {\r\n                if (timer !== null) {\r\n                    clearTimeout(timer);\r\n                }\r\n                clear();\r\n            }),\r\n            $utils.addEventListener(this.view, $utils.getRendererEvent(name), (_) => {\r\n                native = true;\r\n                if (timer !== null) {\r\n                    clearTimeout(timer);\r\n                }\r\n                timer = window.setTimeout(clear, 0);\r\n            }),\r\n            onPointerEvent(window, name, (ev, target) => {\r\n                if (timer !== null) {\r\n                    clearTimeout(timer);\r\n                    timer = null;\r\n                }\r\n                f(ev, target, native);\r\n                native = false;\r\n            }),\r\n        ]);\r\n    }\r\n    // This ensures that only a single DOM event is added (e.g. only a single mousemove event listener)\r\n    _initEvent(key) {\r\n        switch (key) {\r\n            case \"globalpointermove\":\r\n            case \"pointerover\":\r\n            case \"pointerout\":\r\n                return this._makeSharedEvent(\"pointermove\", () => {\r\n                    const listener = (events, target, native) => {\r\n                        this._lastPointerMoveEvent = { events, target, native };\r\n                        $array.each(events, (event) => {\r\n                            this._dispatchGlobalMousemove(event, target, native);\r\n                        });\r\n                    };\r\n                    return new MultiDisposer([\r\n                        this._onPointerEvent(\"pointerdown\", listener),\r\n                        this._onPointerEvent(\"pointermove\", listener),\r\n                    ]);\r\n                });\r\n            case \"globalpointerup\":\r\n                return this._makeSharedEvent(\"pointerup\", () => {\r\n                    const mouseup = this._onPointerEvent(\"pointerup\", (events, target, native) => {\r\n                        $array.each(events, (event) => {\r\n                            this._dispatchGlobalMouseup(event, native);\r\n                        });\r\n                        this._lastPointerMoveEvent = { events, target, native };\r\n                    });\r\n                    const pointercancel = this._onPointerEvent(\"pointercancel\", (events, target, native) => {\r\n                        $array.each(events, (event) => {\r\n                            this._dispatchGlobalMouseup(event, native);\r\n                        });\r\n                        this._lastPointerMoveEvent = { events, target, native };\r\n                    });\r\n                    return new Disposer(() => {\r\n                        mouseup.dispose();\r\n                        pointercancel.dispose();\r\n                    });\r\n                });\r\n            case \"click\":\r\n            case \"rightclick\":\r\n            case \"middleclick\":\r\n            case \"pointerdown\":\r\n            /*\r\n                return this._makeSharedEvent(\"pointerdown\", () => {\r\n                    return this._onPointerEvent(\"pointerdown\", (event, target, native) => {\r\n                        this._lastPointerMoveEvent = { event, target, native };\r\n                        this._dispatchMousedown(event)\r\n                    });\r\n                });\r\n            */\r\n            case \"pointermove\":\r\n            case \"pointerup\":\r\n                return this._makeSharedEvent(\"pointerdown\", () => {\r\n                    //const throttler = new Throttler();\r\n                    const mousedown = this._onPointerEvent(\"pointerdown\", (events, target) => {\r\n                        $array.each(events, (ev) => {\r\n                            this._dispatchMousedown(ev, target);\r\n                        });\r\n                    });\r\n                    // TODO handle throttling properly for multitouch\r\n                    const mousemove = this._onPointerEvent(\"pointermove\", (ev) => {\r\n                        //throttler.throttle(() => {\r\n                        $array.each(ev, (ev) => {\r\n                            this._dispatchDragMove(ev);\r\n                        });\r\n                        //});\r\n                    });\r\n                    const mouseup = this._onPointerEvent(\"pointerup\", (ev, target) => {\r\n                        $array.each(ev, (ev) => {\r\n                            this._dispatchDragEnd(ev, target);\r\n                        });\r\n                    });\r\n                    const pointercancel = this._onPointerEvent(\"pointercancel\", (ev, target) => {\r\n                        $array.each(ev, (ev) => {\r\n                            this._dispatchDragEnd(ev, target);\r\n                        });\r\n                    });\r\n                    return new Disposer(() => {\r\n                        mousedown.dispose();\r\n                        mousemove.dispose();\r\n                        mouseup.dispose();\r\n                        pointercancel.dispose();\r\n                    });\r\n                });\r\n            case \"dblclick\":\r\n                return this._makeSharedEvent(\"dblclick\", () => {\r\n                    return this._onPointerEvent(\"dblclick\", (ev, target) => {\r\n                        $array.each(ev, (ev) => {\r\n                            this._dispatchDoubleClick(ev, target);\r\n                        });\r\n                    });\r\n                });\r\n            case \"wheel\":\r\n                return this._makeSharedEvent(\"wheel\", () => {\r\n                    return $utils.addEventListener(this.view, $utils.getRendererEvent(\"wheel\"), (event) => {\r\n                        this._dispatchWheel(event, $utils.getEventTarget(event));\r\n                    }, { passive: false });\r\n                });\r\n        }\r\n    }\r\n    _addEvent(object, key, callback, context) {\r\n        let events = this._events[key];\r\n        if (events === undefined) {\r\n            events = this._events[key] = {\r\n                disposer: this._initEvent(key),\r\n                callbacks: [],\r\n                dispatching: false,\r\n                cleanup: false,\r\n            };\r\n        }\r\n        const listener = { object, context, callback, disposed: false };\r\n        events.callbacks.push(listener);\r\n        return new Disposer(() => {\r\n            listener.disposed = true;\r\n            if (events.dispatching) {\r\n                events.cleanup = true;\r\n            }\r\n            else {\r\n                $array.removeFirst(events.callbacks, listener);\r\n                if (events.callbacks.length === 0) {\r\n                    events.disposer.dispose();\r\n                    delete this._events[key];\r\n                }\r\n            }\r\n        });\r\n    }\r\n    getCanvas(root, options) {\r\n        // Make sure everything is rendered\r\n        this.render(root);\r\n        if (!options) {\r\n            options = {};\r\n        }\r\n        let scale = this.resolution;\r\n        let canvasWidth = Math.floor(this._calculatedWidth * this.resolution);\r\n        let canvasHeight = Math.floor(this._calculatedHeight * this.resolution);\r\n        // Check if we need to scale\r\n        if (options.minWidth && (options.minWidth > canvasWidth)) {\r\n            let minScale = options.minWidth / canvasWidth;\r\n            if (minScale > scale) {\r\n                scale = minScale * this.resolution;\r\n            }\r\n        }\r\n        if (options.minHeight && (options.minHeight > canvasHeight)) {\r\n            let minScale = options.minHeight / canvasHeight;\r\n            if (minScale > scale) {\r\n                scale = minScale * this.resolution;\r\n            }\r\n        }\r\n        if (options.maxWidth && (options.maxWidth < canvasWidth)) {\r\n            let maxScale = options.maxWidth / canvasWidth;\r\n            if (maxScale < scale) {\r\n                scale = maxScale * this.resolution;\r\n            }\r\n        }\r\n        if (options.maxHeight && (options.maxHeight > canvasHeight)) {\r\n            let maxScale = options.maxHeight / canvasHeight;\r\n            if (maxScale < scale) {\r\n                scale = maxScale * this.resolution;\r\n            }\r\n        }\r\n        // Check if we need to compensate for pixel ratio\r\n        if (options.maintainPixelRatio) {\r\n            scale /= this.resolution;\r\n        }\r\n        // Init list canvases to remove from DOM after export\r\n        const canvases = [];\r\n        // Set up new canvas for export\r\n        let forceRender = false;\r\n        const canvas = document.createElement(\"canvas\");\r\n        if (scale != this.resolution) {\r\n            forceRender = true;\r\n            canvasWidth = canvasWidth * scale / this.resolution;\r\n            canvasHeight = canvasHeight * scale / this.resolution;\r\n        }\r\n        canvas.width = canvasWidth;\r\n        canvas.height = canvasHeight;\r\n        // Add to DOM so it inherits CSS\r\n        canvas.style.position = \"fixed\";\r\n        canvas.style.top = \"-10000px\";\r\n        this.view.appendChild(canvas);\r\n        canvases.push(canvas);\r\n        // Context\r\n        const context = canvas.getContext(\"2d\");\r\n        let width = 0;\r\n        let height = 0;\r\n        let needRerender = false;\r\n        $array.each(this.layers, (layer) => {\r\n            if (layer && layer.visible) {\r\n                if (layer.tainted || forceRender) {\r\n                    needRerender = true;\r\n                    layer.exportableView = layer.view;\r\n                    layer.exportableContext = layer.context;\r\n                    layer.view = document.createElement(\"canvas\");\r\n                    // Add to DOM so it inherits CSS\r\n                    layer.view.style.position = \"fixed\";\r\n                    layer.view.style.top = \"-10000px\";\r\n                    this.view.appendChild(layer.view);\r\n                    canvases.push(layer.view);\r\n                    let extraX = 0;\r\n                    let extraY = 0;\r\n                    if (layer.margin) {\r\n                        extraX += layer.margin.left || 0 + layer.margin.right || 0;\r\n                        extraY += layer.margin.top || 0 + layer.margin.bottom || 0;\r\n                    }\r\n                    layer.view.width = canvasWidth + extraX;\r\n                    layer.view.height = canvasHeight + extraY;\r\n                    layer.context = layer.view.getContext(\"2d\");\r\n                    layer.dirty = true;\r\n                    layer.scale = scale;\r\n                }\r\n            }\r\n        });\r\n        if (needRerender) {\r\n            this._omitTainted = true;\r\n            this.render(root);\r\n            this._omitTainted = false;\r\n        }\r\n        $array.each(this.layers, (layer) => {\r\n            if (layer && layer.visible) {\r\n                // Layer is fine. Just plop it into our target canvas\r\n                let x = 0;\r\n                let y = 0;\r\n                if (layer.margin) {\r\n                    x = -(layer.margin.left || 0) * this.resolution;\r\n                    y = -(layer.margin.top || 0) * this.resolution;\r\n                }\r\n                context.drawImage(layer.view, x, y);\r\n                // Restore layer original canvas\r\n                if (layer.exportableView) {\r\n                    layer.view = layer.exportableView;\r\n                    layer.exportableView = undefined;\r\n                }\r\n                if (layer.exportableContext) {\r\n                    layer.context = layer.exportableContext;\r\n                    layer.exportableContext = undefined;\r\n                }\r\n                if (width < layer.view.clientWidth) {\r\n                    width = layer.view.clientWidth;\r\n                }\r\n                if (height < layer.view.clientHeight) {\r\n                    height = layer.view.clientHeight;\r\n                }\r\n                layer.scale = undefined;\r\n            }\r\n        });\r\n        canvas.style.width = width + \"px\";\r\n        canvas.style.height = height + \"px\";\r\n        $array.each(canvases, (canvas) => {\r\n            canvas.style.position = \"\";\r\n            canvas.style.top = \"\";\r\n            this.view.removeChild(canvas);\r\n        });\r\n        return canvas;\r\n    }\r\n}\r\nclass GhostLayer {\r\n    constructor() {\r\n        Object.defineProperty(this, \"view\", {\r\n            enumerable: true,\r\n            configurable: true,\r\n            writable: true,\r\n            value: void 0\r\n        });\r\n        Object.defineProperty(this, \"context\", {\r\n            enumerable: true,\r\n            configurable: true,\r\n            writable: true,\r\n            value: void 0\r\n        });\r\n        Object.defineProperty(this, \"margin\", {\r\n            enumerable: true,\r\n            configurable: true,\r\n            writable: true,\r\n            value: {\r\n                left: 0,\r\n                right: 0,\r\n                top: 0,\r\n                bottom: 0,\r\n            }\r\n        });\r\n        Object.defineProperty(this, \"_resolution\", {\r\n            enumerable: true,\r\n            configurable: true,\r\n            writable: true,\r\n            value: 1\r\n        });\r\n        Object.defineProperty(this, \"_width\", {\r\n            enumerable: true,\r\n            configurable: true,\r\n            writable: true,\r\n            value: 0\r\n        });\r\n        Object.defineProperty(this, \"_height\", {\r\n            enumerable: true,\r\n            configurable: true,\r\n            writable: true,\r\n            value: 0\r\n        });\r\n        Object.defineProperty(this, \"imageArray\", {\r\n            enumerable: true,\r\n            configurable: true,\r\n            writable: true,\r\n            value: void 0\r\n        });\r\n        this.view = document.createElement(\"canvas\");\r\n        this.context = this.view.getContext(\"2d\", { alpha: false, willReadFrequently: true });\r\n        this.context.imageSmoothingEnabled = false;\r\n        this.view.style.position = \"absolute\";\r\n        this.view.style.top = \"0px\";\r\n        this.view.style.left = \"0px\";\r\n    }\r\n    resize(canvasWidth, canvasHeight, domWidth, domHeight, resolution) {\r\n        this._resolution = resolution;\r\n        canvasWidth += (this.margin.left + this.margin.right);\r\n        canvasHeight += (this.margin.top + this.margin.bottom);\r\n        // TODO this should take into account calculateSize\r\n        domWidth += (this.margin.left + this.margin.right);\r\n        domHeight += (this.margin.top + this.margin.bottom);\r\n        this.view.style.left = -this.margin.left + \"px\";\r\n        this.view.style.top = -this.margin.top + \"px\";\r\n        this._width = Math.floor(canvasWidth * resolution);\r\n        this._height = Math.floor(canvasHeight * resolution);\r\n        this.view.width = this._width;\r\n        this.view.style.width = domWidth + \"px\";\r\n        this.view.height = this._height;\r\n        this.view.style.height = domHeight + \"px\";\r\n    }\r\n    getImageData(point, bbox) {\r\n        return this.context.getImageData(\r\n        // TODO should this round ?\r\n        Math.round(((point.x - bbox.left) / bbox.width) * this._width), Math.round(((point.y - bbox.top) / bbox.height) * this._height), 1, 1);\r\n    }\r\n    getImageArray(point) {\r\n        if (!this.imageArray) {\r\n            this.imageArray = this.context.getImageData(0, 0, this._width, this._height).data;\r\n        }\r\n        const data = this.imageArray;\r\n        const x = Math.round(point.x * this._resolution);\r\n        const y = Math.round(point.y * this._resolution);\r\n        const i = (y * this._width + x) * 4;\r\n        return [data[i], data[i + 1], data[i + 2], data[i + 3]];\r\n    }\r\n    setMargin(layers) {\r\n        this.margin.left = 0;\r\n        this.margin.right = 0;\r\n        this.margin.top = 0;\r\n        this.margin.bottom = 0;\r\n        $array.each(layers, (layer) => {\r\n            if (layer.margin) {\r\n                this.margin.left = Math.max(this.margin.left, layer.margin.left);\r\n                this.margin.right = Math.max(this.margin.right, layer.margin.right);\r\n                this.margin.top = Math.max(this.margin.top, layer.margin.top);\r\n                this.margin.bottom = Math.max(this.margin.bottom, layer.margin.bottom);\r\n            }\r\n        });\r\n    }\r\n    clear() {\r\n        this.context.save();\r\n        this.context.fillStyle = '#000';\r\n        this.context.fillRect(0, 0, this._width, this._height);\r\n    }\r\n}\r\n/**\r\n * @ignore\r\n */\r\nexport class CanvasLayer {\r\n    constructor(view, context) {\r\n        Object.defineProperty(this, \"view\", {\r\n            enumerable: true,\r\n            configurable: true,\r\n            writable: true,\r\n            value: void 0\r\n        });\r\n        Object.defineProperty(this, \"context\", {\r\n            enumerable: true,\r\n            configurable: true,\r\n            writable: true,\r\n            value: void 0\r\n        });\r\n        Object.defineProperty(this, \"tainted\", {\r\n            enumerable: true,\r\n            configurable: true,\r\n            writable: true,\r\n            value: true\r\n        });\r\n        Object.defineProperty(this, \"margin\", {\r\n            enumerable: true,\r\n            configurable: true,\r\n            writable: true,\r\n            value: void 0\r\n        });\r\n        Object.defineProperty(this, \"order\", {\r\n            enumerable: true,\r\n            configurable: true,\r\n            writable: true,\r\n            value: 0\r\n        });\r\n        Object.defineProperty(this, \"visible\", {\r\n            enumerable: true,\r\n            configurable: true,\r\n            writable: true,\r\n            value: true\r\n        });\r\n        Object.defineProperty(this, \"width\", {\r\n            enumerable: true,\r\n            configurable: true,\r\n            writable: true,\r\n            value: void 0\r\n        });\r\n        Object.defineProperty(this, \"height\", {\r\n            enumerable: true,\r\n            configurable: true,\r\n            writable: true,\r\n            value: void 0\r\n        });\r\n        Object.defineProperty(this, \"scale\", {\r\n            enumerable: true,\r\n            configurable: true,\r\n            writable: true,\r\n            value: void 0\r\n        });\r\n        Object.defineProperty(this, \"dirty\", {\r\n            enumerable: true,\r\n            configurable: true,\r\n            writable: true,\r\n            value: true\r\n        });\r\n        Object.defineProperty(this, \"exportableView\", {\r\n            enumerable: true,\r\n            configurable: true,\r\n            writable: true,\r\n            value: void 0\r\n        });\r\n        Object.defineProperty(this, \"exportableContext\", {\r\n            enumerable: true,\r\n            configurable: true,\r\n            writable: true,\r\n            value: void 0\r\n        });\r\n        Object.defineProperty(this, \"_width\", {\r\n            enumerable: true,\r\n            configurable: true,\r\n            writable: true,\r\n            value: 0\r\n        });\r\n        Object.defineProperty(this, \"_height\", {\r\n            enumerable: true,\r\n            configurable: true,\r\n            writable: true,\r\n            value: 0\r\n        });\r\n        this.view = view;\r\n        this.context = context;\r\n    }\r\n    resize(canvasWidth, canvasHeight, domWidth, domHeight, resolution) {\r\n        // TODO should this take into account calculateSize ?\r\n        if (this.width != null) {\r\n            canvasWidth = this.width;\r\n            domWidth = this.width;\r\n        }\r\n        // TODO should this take into account calculateSize ?\r\n        if (this.height != null) {\r\n            canvasHeight = this.height;\r\n            domHeight = this.height;\r\n        }\r\n        if (this.margin) {\r\n            canvasWidth += (this.margin.left + this.margin.right);\r\n            canvasHeight += (this.margin.top + this.margin.bottom);\r\n            // TODO this should take into account calculateSize\r\n            domWidth += (this.margin.left + this.margin.right);\r\n            domHeight += (this.margin.top + this.margin.bottom);\r\n            this.view.style.left = -this.margin.left + \"px\";\r\n            this.view.style.top = -this.margin.top + \"px\";\r\n        }\r\n        else {\r\n            this.view.style.left = \"0px\";\r\n            this.view.style.top = \"0px\";\r\n        }\r\n        this._width = Math.floor(canvasWidth * resolution);\r\n        this._height = Math.floor(canvasHeight * resolution);\r\n        this.view.width = this._width;\r\n        this.view.style.width = domWidth + \"px\";\r\n        this.view.height = this._height;\r\n        this.view.style.height = domHeight + \"px\";\r\n    }\r\n    clear() {\r\n        this.context.save();\r\n        this.context.clearRect(0, 0, this._width, this._height);\r\n    }\r\n}\r\n//# sourceMappingURL=CanvasRenderer.js.map","/** @ignore *//** */\n\nimport {\n\tIRenderer, IContainer, IDisplayObject, IGraphics, IRendererEvents, IMargin,\n\tIText, ITextStyle, IRadialText, IPicture, IRendererEvent, ILayer, ICanvasOptions, BlendMode, IPointerEvent, Id\n} from \"./Renderer\";\nimport type { IBounds } from \"../../util/IBounds\";\nimport type { IPoint } from \"../../util/IPoint\";\nimport { Color } from \"../../util/Color\";\nimport { Matrix } from \"../../util/Matrix\";\nimport { Percent, percent } from \"../../util/Percent\";\n//import { Throttler } from \"../../util/Throttler\";\nimport { ArrayDisposer, Disposer, DisposerClass, IDisposer, CounterDisposer, MultiDisposer } from \"../../util/Disposer\";\nimport { TextFormatter, ITextChunk } from \"../../util/TextFormatter\";\nimport * as $utils from \"../../util/Utils\";\nimport * as $array from \"../../util/Array\";\nimport * as $object from \"../../util/Object\";\nimport * as $type from \"../../util/Type\";\nimport * as $math from \"../../util/Math\";\nimport arcToBezier from 'svg-arc-to-cubic-bezier';\n\n\n/**\n * @ignore\n */\nfunction checkArgs(name: string, actual: number, expected: number) {\n\tif (actual !== expected) {\n\t\tthrow new Error(\"Required \" + expected + \" arguments for \" + name + \" but got \" + actual);\n\t}\n}\n\n/**\n * @ignore\n */\nfunction checkMinArgs(name: string, actual: number, expected: number) {\n\tif (actual < expected) {\n\t\tthrow new Error(\"Required at least \" + expected + \" arguments for \" + name + \" but got \" + actual);\n\t}\n}\n\n/**\n * @ignore\n */\nfunction checkEvenArgs(name: string, actual: number, expected: number) {\n\tcheckMinArgs(name, actual, expected);\n\n\tif ((actual % expected) !== 0) {\n\t\tthrow new Error(\"Arguments for \" + name + \" must be in pairs of \" + expected);\n\t}\n}\n\n/**\n * @ignore\n * This splits the flag so that way 0017 will be processed as 0 0 17\n *\n * This is important for weird paths like `M17 5A1 1 0 0017 30 1 1 0 0017 5`\n */\nfunction splitArcFlags(args: Array<string>) {\n\tfor (let i = 0; i < args.length; i += 7) {\n\t\tlet index = i + 3;\n\t\tlet flag = args[index];\n\n\t\tif (flag.length > 1) {\n\t\t\tconst a = /^([01])([01])(.*)$/.exec(flag);\n\n\t\t\tif (a !== null) {\n\t\t\t\targs.splice(index, 0, a[1]);\n\t\t\t\t++index;\n\n\t\t\t\targs.splice(index, 0, a[2]);\n\t\t\t\t++index;\n\n\t\t\t\tif (a[3].length > 0) {\n\t\t\t\t\targs[index] = a[3];\n\n\t\t\t\t} else {\n\t\t\t\t\targs.splice(index, 1);\n\t\t\t\t}\n\t\t\t}\n\t\t}\n\n\t\t++index;\n\n\t\tflag = args[index];\n\n\t\tif (flag.length > 1) {\n\t\t\tconst a = /^([01])(.+)$/.exec(flag);\n\n\t\t\tif (a !== null) {\n\t\t\t\targs.splice(index, 0, a[1]);\n\t\t\t\t++index;\n\n\t\t\t\targs[index] = a[2];\n\t\t\t}\n\t\t}\n\t}\n}\n\n/**\n * @ignore\n */\nfunction assertBinary(value: number): 0 | 1 {\n\tif (value === 0 || value === 1) {\n\t\treturn value;\n\n\t} else {\n\t\tthrow new Error(\"Flag must be 0 or 1\");\n\t}\n}\n\n//  1 -> 0xffffff * (2 / 2)\n//  2 -> 0xffffff * (1 / 2)\n//\n//  3 -> 0xffffff * (3 / 4)\n//  4 -> 0xffffff * (1 / 4)\n//\n//  5 -> 0xffffff * (7 / 8)\n//  6 -> 0xffffff * (5 / 8)\n//  7 -> 0xffffff * (3 / 8)\n//  8 -> 0xffffff * (1 / 8)\n//\n//  9 -> 0xffffff * (15 / 16)\n// 10 -> 0xffffff * (13 / 16)\n// 11 -> 0xffffff * (11 / 16)\n// 12 -> 0xffffff *  (9 / 16)\n// 13 -> 0xffffff *  (7 / 16)\n// 14 -> 0xffffff *  (5 / 16)\n// 15 -> 0xffffff *  (3 / 16)\n// 16 -> 0xffffff *  (1 / 16)\n// @todo remove this old color distribution algo if the new one pans out\n/*function distributeId(id: number): number {\n\tif (id === 1) {\n\t\treturn 0x000001;\n\n\t} else {\n\t\t// Finds the closest power of 2\n\t\tconst base = Math.pow(2, Math.ceil(Math.log(id) / Math.log(2)));\n\n\t\t// Translates the id into an odd fraction index\n\t\tconst index = ((base - id) * 2) + 1;\n\n\t\t// TODO is Math.round correct ?\n\t\treturn Math.round(0xffffff * (index / base));\n\t}\n}*/\n\n/**\n * Function by smeans:\n * https://lowcode.life/generating-unique-contrasting-colors-in-javascript/\n * @ignore\n */\nfunction distributeId(id: number): number {\n\tconst rgb = [0, 0, 0];\n\n\tfor (let i = 0; i < 24; i++) {\n\t\trgb[i % 3] <<= 1;\n\t\trgb[i % 3] |= id & 0x01;\n\t\tid >>= 1;\n\t}\n\n\treturn (rgb[0] | 0) + (rgb[1] << 8) + (rgb[2] << 16);\n}\n\n/**\n * @ignore\n */\nfunction eachTargets(hitTarget: CanvasDisplayObject, f: (target: CanvasDisplayObject) => boolean): void {\n\tfor (; ;) {\n\t\tif (hitTarget.interactive) {\n\t\t\tif (!f(hitTarget)) {\n\t\t\t\tbreak;\n\t\t\t}\n\t\t}\n\n\t\tif (hitTarget._parent) {\n\t\t\thitTarget = hitTarget._parent;\n\n\t\t} else {\n\t\t\tbreak;\n\t\t}\n\t}\n}\n\n// TODO feature detection for mouse/touch/pointer\n/**\n * @ignore\n */\nfunction onPointerEvent(element: EventTarget, name: string, f: (event: Array<IPointerEvent>, target: Node | null) => void): IDisposer {\n\treturn $utils.addEventListener(element, $utils.getRendererEvent(name), (event: MouseEvent | TouchEvent) => {\n\t\tconst target = $utils.getEventTarget(event);\n\n\t\tlet touches = (<any>event).touches;\n\t\tif (touches) {\n\t\t\tif (touches.length == 0) {\n\t\t\t\ttouches = (<any>event).changedTouches;\n\t\t\t}\n\n\t\t\tf($array.copy(<TouchList>touches), target);\n\n\t\t} else {\n\t\t\tf([<MouseEvent>event], target);\n\t\t}\n\t});\n}\n\n/**\n * @ignore\n */\nfunction isTainted(image: HTMLImageElement): boolean {\n\tconst canvas = document.createElement(\"canvas\");\n\tcanvas.width = 1;\n\tcanvas.height = 1;\n\tconst context = canvas.getContext(\"2d\", { willReadFrequently: true })! as CanvasRenderingContext2D;\n\tcontext.drawImage(image, 0, 0, 1, 1);\n\n\ttry {\n\t\tcontext.getImageData(0, 0, 1, 1);\n\t\treturn false;\n\t}\n\tcatch (err) {\n\t\tconsole.warn(\"Image \\\"\" + image.src + \"\\\" is loaded from different host and is not covered by CORS policy. For more information about the implications read here: https://www.amcharts.com/docs/v5/concepts/cors\");\n\t\treturn true;\n\t}\n}\n\n/**\n * This is needed to workaround a bug in iOS which causes it to not GC canvas elements.\n *\n * @ignore\n */\nfunction clearCanvas(view: HTMLCanvasElement) {\n\tview.width = 0;\n\tview.height = 0;\n\tview.style.width = \"0px\";\n\tview.style.height = \"0px\";\n}\n\n\n/**\n * Aligns the coordinate to the pixel, so it renders crisp\n *\n * @ignore\n */\nfunction crisp(x: number): number {\n\treturn Math.floor(x) + .5;\n}\n\n/**\n * @ignore\n */\nexport class CanvasPivot implements IPoint {\n\tprotected _x: number = 0;\n\tprotected _y: number = 0;\n\n\tget x(): number {\n\t\treturn this._x;\n\t}\n\n\tget y(): number {\n\t\treturn this._y;\n\t}\n\n\tset x(value: number) {\n\t\tthis._x = value;\n\t}\n\n\tset y(value: number) {\n\t\tthis._y = value;\n\t}\n}\n\n\ninterface IStatus {\n\tlayer: CanvasLayer;\n\tinactive: boolean | null;\n}\n\n/**\n * @ignore\n */\nexport class CanvasDisplayObject extends DisposerClass implements IDisplayObject, IDisposer {\n\tpublic _layer?: CanvasLayer;\n\n\tpublic mask: CanvasGraphics | null = null;\n\tpublic visible: boolean = true;\n\tpublic exportable?: boolean = true;\n\tpublic interactive: boolean = false;\n\tpublic inactive: boolean | null = null;\n\tpublic wheelable: boolean = false;\n\tpublic cancelTouch: boolean = false;\n\tpublic isMeasured: boolean = false;\n\tpublic buttonMode: boolean = false;\n\tpublic alpha: number = 1;\n\tpublic compoundAlpha: number = 1;\n\tpublic angle: number = 0;\n\tpublic scale: number = 1;\n\tpublic x: number = 0;\n\tpublic y: number = 0;\n\tpublic crisp: boolean = false;\n\tpublic pivot: CanvasPivot = new CanvasPivot();\n\n\tpublic filter?: string;\n\n\tpublic cursorOverStyle?: string;\n\tpublic _replacedCursorStyle?: string;\n\n\tpublic _localMatrix: Matrix = new Matrix();\n\tpublic _matrix: Matrix = new Matrix();\n\t// TODO can this be replaced with _localMatrix ?\n\tprotected _uMatrix: Matrix = new Matrix();\n\n\tpublic _renderer: CanvasRenderer;\n\tpublic _parent: CanvasContainer | undefined;\n\n\tprotected _localBounds: IBounds | undefined;\n\tprotected _bounds: IBounds | undefined;\n\tpublic _colorId: string | undefined;\n\n\tconstructor(renderer: CanvasRenderer) {\n\t\tsuper();\n\t\tthis._renderer = renderer;\n\t}\n\n\tprotected subStatus(status: IStatus): IStatus {\n\t\treturn {\n\t\t\tinactive: (this.inactive == null ? status.inactive : this.inactive),\n\t\t\tlayer: this._layer || status.layer,\n\t\t};\n\t}\n\n\tprotected _dispose(): void {\n\t\tthis._renderer._removeObject(this);\n\t\tthis.getLayer().dirty = true;\n\t}\n\n\tpublic getCanvas(): HTMLCanvasElement {\n\t\treturn this.getLayer().view;\n\t}\n\n\tpublic getLayer(): CanvasLayer {\n\t\tlet self: CanvasDisplayObject = this;\n\n\t\tfor (; ;) {\n\t\t\tif (self._layer) {\n\t\t\t\treturn self._layer;\n\n\t\t\t} else if (self._parent) {\n\t\t\t\tself = self._parent;\n\n\t\t\t} else {\n\t\t\t\treturn this._renderer.defaultLayer;\n\t\t\t}\n\t\t}\n\t}\n\n\tpublic setLayer(order: number | undefined, margin: IMargin | undefined): void {\n\t\tif (order == null) {\n\t\t\tthis._layer = undefined;\n\n\t\t} else {\n\t\t\tconst visible = true;\n\t\t\tthis._layer = this._renderer.getLayer(order, visible);\n\t\t\tthis._layer.visible = visible;\n\t\t\tthis._layer.margin = margin;\n\t\t\tif (margin) {\n\t\t\t\t$utils.setInteractive(this._layer.view, false);\n\t\t\t}\n\n\t\t\tthis._renderer._ghostLayer.setMargin(this._renderer.layers);\n\n\t\t\tif (this._parent) {\n\t\t\t\tthis._parent.registerChildLayer(this._layer);\n\t\t\t}\n\n\t\t\tthis._layer.dirty = true;\n\t\t\tthis._renderer.resizeLayer(this._layer);\n\t\t\tthis._renderer.resizeGhost();\n\t\t}\n\t}\n\n\tpublic markDirtyLayer(): void {\n\t\tthis.getLayer().dirty = true;\n\t}\n\n\tpublic clear(): void {\n\t\tthis.invalidateBounds();\n\t}\n\n\tpublic invalidateBounds(): void {\n\t\tthis._localBounds = undefined;\n\t}\n\n\tpublic _addBounds(_bounds: IBounds): void { }\n\n\tprotected _getColorId(): string {\n\t\tif (this._colorId === undefined) {\n\t\t\tthis._colorId = this._renderer.paintId(this);\n\t\t}\n\n\t\treturn this._colorId;\n\t}\n\n\tprotected _isInteractive(status: IStatus): boolean {\n\t\treturn !status.inactive && (this.interactive || this._renderer._forceInteractive > 0);\n\t}\n\n\tprotected _isInteractiveMask(status: IStatus): boolean {\n\t\treturn this._isInteractive(status);\n\t}\n\n\tpublic contains(child: CanvasDisplayObject): boolean {\n\t\tfor (; ;) {\n\t\t\tif (child === this) {\n\t\t\t\treturn true;\n\n\t\t\t} else if (child._parent) {\n\t\t\t\tchild = child._parent;\n\n\t\t\t} else {\n\t\t\t\treturn false;\n\t\t\t}\n\t\t}\n\t}\n\n\ttoGlobal(point: IPoint): IPoint {\n\t\treturn this._matrix.apply(point);\n\t}\n\n\ttoLocal(point: IPoint): IPoint {\n\t\treturn this._matrix.applyInverse(point);\n\t}\n\n\tpublic getLocalMatrix(): Matrix {\n\t\tthis._uMatrix.setTransform(0, 0, this.pivot.x, this.pivot.y, this.angle * Math.PI / 180, this.scale);\n\t\treturn this._uMatrix;\n\t}\n\n\tgetLocalBounds(): IBounds {\n\t\tif (!this._localBounds) {\n\n\t\t\tconst bn = 10000000;\n\t\t\tthis._localBounds = {\n\t\t\t\tleft: bn,\n\t\t\t\ttop: bn,\n\t\t\t\tright: -bn,\n\t\t\t\tbottom: -bn\n\t\t\t};\n\n\t\t\tthis._addBounds(this._localBounds);\n\t\t}\n\t\treturn this._localBounds;\n\t}\n\n\tgetAdjustedBounds(bounds: IBounds): IBounds {\n\t\tthis._setMatrix();\n\n\t\tconst matrix = this.getLocalMatrix();\n\n\t\tconst p0 = matrix.apply({ x: bounds.left, y: bounds.top });\n\t\tconst p1 = matrix.apply({ x: bounds.right, y: bounds.top });\n\t\tconst p2 = matrix.apply({ x: bounds.right, y: bounds.bottom });\n\t\tconst p3 = matrix.apply({ x: bounds.left, y: bounds.bottom });\n\n\t\treturn {\n\t\t\tleft: Math.min(p0.x, p1.x, p2.x, p3.x),\n\t\t\ttop: Math.min(p0.y, p1.y, p2.y, p3.y),\n\t\t\tright: Math.max(p0.x, p1.x, p2.x, p3.x),\n\t\t\tbottom: Math.max(p0.y, p1.y, p2.y, p3.y)\n\t\t}\n\t}\n\n\ton<C, Key extends keyof IRendererEvents>(key: Key, callback: (this: C, event: IRendererEvents[Key]) => void, context?: C): IDisposer {\n\t\tif (this.interactive) {\n\t\t\treturn this._renderer._addEvent(this, key, callback, context);\n\n\t\t} else {\n\t\t\treturn new Disposer(() => { });\n\t\t}\n\t}\n\n\tpublic _setMatrix(): void {\n\t\t// TODO only calculate this if it has actually changed\n\t\tthis._localMatrix.setTransform(\n\t\t\tthis.x,\n\t\t\tthis.y,\n\t\t\tthis.pivot.x,\n\t\t\tthis.pivot.y,\n\t\t\t// Converts degrees to radians\n\t\t\tthis.angle * Math.PI / 180,\n\t\t\tthis.scale\n\t\t);\n\n\t\tthis._matrix.copyFrom(this._localMatrix);\n\n\t\tif (this._parent) {\n\t\t\t// TODO only calculate this if it has actually changed\n\t\t\tthis._matrix.prepend(this._parent._matrix);\n\t\t}\n\t}\n\n\tpublic _transform(context: CanvasRenderingContext2D, resolution: number): void {\n\t\tconst m = this._matrix;\n\t\tlet tx = m.tx * resolution;\n\t\tlet ty = m.ty * resolution;\n\t\tif (this.crisp) {\n\t\t\ttx = crisp(tx);\n\t\t\tty = crisp(ty);\n\t\t}\n\n\t\tcontext.setTransform(\n\t\t\tm.a * resolution,\n\t\t\tm.b * resolution,\n\t\t\tm.c * resolution,\n\t\t\tm.d * resolution,\n\t\t\ttx,\n\t\t\tty)\n\n\t}\n\n\tpublic _transformMargin(context: CanvasRenderingContext2D, resolution: number, margin: IMargin): void {\n\t\tconst m = this._matrix;\n\t\tcontext.setTransform(\n\t\t\tm.a * resolution,\n\t\t\tm.b * resolution,\n\t\t\tm.c * resolution,\n\t\t\tm.d * resolution,\n\t\t\t(m.tx + margin.left) * resolution,\n\t\t\t(m.ty + margin.top) * resolution\n\t\t);\n\t}\n\n\tpublic _transformLayer(context: CanvasRenderingContext2D, resolution: number, layer: CanvasLayer): void {\n\t\tif (layer.margin) {\n\t\t\tthis._transformMargin(context, layer.scale || resolution, layer.margin);\n\n\t\t} else {\n\t\t\tthis._transform(context, layer.scale || resolution);\n\t\t}\n\t}\n\n\tpublic render(status: IStatus): void {\n\t\tif (this.visible && (this.exportable !== false || !this._renderer._omitTainted)) {\n\t\t\tthis._setMatrix();\n\n\t\t\tconst subStatus = this.subStatus(status);\n\n\t\t\tconst resolution = this._renderer.resolution;\n\n\t\t\tconst layers = this._renderer.layers;\n\t\t\tconst ghostLayer = this._renderer._ghostLayer;\n\t\t\tconst ghostContext = ghostLayer.context;\n\n\t\t\tconst mask = this.mask;\n\t\t\tif (mask) {\n\t\t\t\tmask._setMatrix();\n\t\t\t}\n\n\t\t\t// TODO improve this\n\t\t\t$array.each(layers, (layer) => {\n\t\t\t\tif (layer) {\n\t\t\t\t\tconst context = layer.context;\n\t\t\t\t\tcontext.save();\n\n\t\t\t\t\t// We must apply the mask before we transform the element\n\t\t\t\t\tif (mask) {\n\t\t\t\t\t\tmask._transformLayer(context, resolution, layer);\n\t\t\t\t\t\tmask._runPath(context);\n\t\t\t\t\t\tcontext.clip();\n\t\t\t\t\t}\n\n\t\t\t\t\tcontext.globalAlpha = this.compoundAlpha * this.alpha;\n\n\t\t\t\t\tthis._transformLayer(context, resolution, layer);\n\n\t\t\t\t\tif (this.filter) {\n\t\t\t\t\t\tcontext.filter = this.filter;\n\t\t\t\t\t}\n\t\t\t\t}\n\t\t\t});\n\n\t\t\tghostContext.save();\n\n\t\t\t// We must apply the mask before we transform the element\n\t\t\tif (mask && this._isInteractiveMask(subStatus)) {\n\t\t\t\tmask._transformMargin(ghostContext, resolution, ghostLayer.margin);\n\t\t\t\tmask._runPath(ghostContext);\n\t\t\t\tghostContext.clip();\n\t\t\t}\n\n\t\t\tthis._transformMargin(ghostContext, resolution, ghostLayer.margin);\n\n\t\t\tthis._render(subStatus);\n\n\t\t\tghostContext.restore();\n\n\t\t\t$array.each(layers, (layer) => {\n\t\t\t\tif (layer) {\n\t\t\t\t\tlayer.context.restore();\n\t\t\t\t}\n\t\t\t});\n\t\t}\n\t}\n\n\tprotected _render(status: IStatus): void {\n\t\tif (this.exportable === false) {\n\t\t\tstatus.layer.tainted = true;\n\t\t}\n\t}\n\n\thovering(): boolean {\n\t\treturn this._renderer._hovering.has(this);\n\t}\n\n\tdragging(): boolean {\n\t\treturn this._renderer._dragging.some((x) => x.value === this);\n\t}\n\n\n\tpublic shouldCancelTouch(): boolean {\n\t\tconst renderer = this._renderer;\n\t\tif (renderer.tapToActivate && !renderer._touchActive) {\n\t\t\treturn false;\n\t\t}\n\t\tif (this.cancelTouch) {\n\t\t\treturn true;\n\t\t}\n\t\telse if (this._parent) {\n\t\t\treturn this._parent.shouldCancelTouch();\n\t\t}\n\t\treturn false;\n\t}\n\n}\n\n/**\n * @ignore\n */\nexport class CanvasContainer extends CanvasDisplayObject implements IContainer {\n\tpublic interactiveChildren: boolean = true;\n\tprivate _childLayers?: CanvasLayer[];\n\n\tprotected _children: Array<CanvasDisplayObject> = [];\n\n\tprotected _isInteractiveMask(status: IStatus): boolean {\n\t\treturn this.interactiveChildren || super._isInteractiveMask(status);\n\t}\n\n\taddChild(child: CanvasDisplayObject): void {\n\t\tchild._parent = this;\n\t\tthis._children.push(child);\n\t\tif (child._layer) {\n\t\t\tthis.registerChildLayer(child._layer);\n\t\t}\n\t}\n\n\taddChildAt(child: CanvasDisplayObject, index: number): void {\n\t\tchild._parent = this;\n\t\tthis._children.splice(index, 0, child);\n\t\tif (child._layer) {\n\t\t\tthis.registerChildLayer(child._layer);\n\t\t}\n\t}\n\n\tremoveChild(child: CanvasDisplayObject): void {\n\t\tchild._parent = undefined;\n\t\t$array.removeFirst(this._children, child);\n\t}\n\n\tprotected _render(status: IStatus): void {\n\t\tsuper._render(status);\n\n\t\tconst renderer = this._renderer;\n\n\t\tif (this.interactive && this.interactiveChildren) {\n\t\t\t++renderer._forceInteractive;\n\t\t}\n\n\t\t$array.each(this._children, (child) => {\n\t\t\tchild.compoundAlpha = this.compoundAlpha * this.alpha;\n\t\t\tchild.render(status);\n\t\t});\n\n\t\tif (this.interactive && this.interactiveChildren) {\n\t\t\t--renderer._forceInteractive;\n\t\t}\n\t}\n\n\tregisterChildLayer(layer: CanvasLayer): void {\n\t\tif (!this._childLayers) {\n\t\t\tthis._childLayers = [];\n\t\t}\n\t\t$array.pushOne(this._childLayers, layer);\n\t\tif (this._parent) {\n\t\t\tthis._parent.registerChildLayer(layer);\n\t\t}\n\t}\n\n\tpublic markDirtyLayer(deep: boolean = false): void {\n\t\tsuper.markDirtyLayer();\n\t\tif (deep && this._childLayers) {\n\t\t\t$array.each(this._childLayers, (layer) => layer.dirty = true);\n\t\t}\n\t}\n\n\tprotected _dispose() {\n\t\tsuper._dispose();\n\t\tif (this._childLayers) {\n\t\t\t$array.each(this._childLayers, (layer) => {\n\t\t\t\tlayer.dirty = true;\n\t\t\t});\n\t\t}\n\t}\n}\n\n/**\n * @ignore\n */\nfunction setPoint(bounds: IBounds, point: IPoint): void {\n\tbounds.left = Math.min(bounds.left, point.x);\n\tbounds.top = Math.min(bounds.top, point.y);\n\tbounds.right = Math.max(bounds.right, point.x);\n\tbounds.bottom = Math.max(bounds.bottom, point.y);\n}\n\n/**\n * @ignore\n */\nabstract class Op {\n\tpublic colorize(_context: CanvasRenderingContext2D, _forceColor: string | undefined): void { }\n\n\tpublic colorizeGhost(context: CanvasRenderingContext2D, forceColor: string | undefined): void {\n\t\tthis.colorize(context, forceColor);\n\t}\n\n\tpublic path(_context: CanvasRenderingContext2D): void { }\n\n\tpublic pathGhost(context: CanvasRenderingContext2D): void {\n\t\tthis.path(context);\n\t}\n\n\tpublic addBounds(_bounds: IBounds): void { }\n}\n\n/**\n * @ignore\n */\nclass BeginPath extends Op {\n\tpublic colorize(context: CanvasRenderingContext2D, _forceColor: string | undefined): void {\n\t\tcontext.beginPath();\n\t}\n}\n\n/**\n * @ignore\n */\nclass BeginFill extends Op {\n\tconstructor(public color: string | CanvasGradient | CanvasPattern) { super(); }\n\n\tpublic colorize(context: CanvasRenderingContext2D, forceColor: string | undefined): void {\n\t\tif (forceColor !== undefined) {\n\t\t\tcontext.fillStyle = forceColor;\n\n\t\t} else {\n\t\t\tcontext.fillStyle = this.color;\n\t\t}\n\t}\n}\n\n/**\n * @ignore\n */\nclass EndFill extends Op {\n\tconstructor(public clearShadow: boolean) { super(); }\n\tpublic colorize(context: CanvasRenderingContext2D, _forceColor: string | undefined): void {\n\t\tcontext.fill();\n\t\tif (this.clearShadow) {\n\t\t\tcontext.shadowColor = \"\";\n\t\t\tcontext.shadowBlur = 0;\n\t\t\tcontext.shadowOffsetX = 0;\n\t\t\tcontext.shadowOffsetY = 0;\n\t\t}\n\t}\n}\n\n/**\n * @ignore\n */\nclass EndStroke extends Op {\n\tpublic colorize(context: CanvasRenderingContext2D, _forceColor: string | undefined): void {\n\t\tcontext.stroke();\n\t}\n}\n\n/**\n * @ignore\n */\nclass LineStyle extends Op {\n\tconstructor(public width: number, public color: string | CanvasGradient | CanvasPattern, public lineJoin?: \"miter\" | \"round\" | \"bevel\", public lineCap?: \"butt\" | \"round\" | \"square\") { super(); }\n\n\tpublic colorize(context: CanvasRenderingContext2D, forceColor: string | undefined): void {\n\t\tif (forceColor !== undefined) {\n\t\t\tcontext.strokeStyle = forceColor;\n\n\t\t} else {\n\t\t\tcontext.strokeStyle = this.color;\n\t\t}\n\n\t\tcontext.lineWidth = this.width;\n\t\tif (this.lineJoin) {\n\t\t\tcontext.lineJoin = this.lineJoin;\n\t\t}\n\n\t\tif (this.lineCap) {\n\t\t\tcontext.lineCap = this.lineCap;\n\t\t}\n\t}\n}\n\n/**\n * @ignore\n */\nclass LineDash extends Op {\n\tconstructor(public dash: number[]) { super(); }\n\n\tpublic colorize(context: CanvasRenderingContext2D, _forceColor: string | undefined): void {\n\t\tcontext.setLineDash(this.dash);\n\t}\n}\n\n/**\n * @ignore\n */\nclass LineDashOffset extends Op {\n\tconstructor(public dashOffset: number) { super(); }\n\n\tpublic colorize(context: CanvasRenderingContext2D, _forceColor: string | undefined): void {\n\t\tcontext.lineDashOffset = this.dashOffset;\n\t}\n}\n\n/**\n * @ignore\n */\nclass DrawRect extends Op {\n\tconstructor(public x: number, public y: number, public width: number, public height: number) { super(); }\n\n\tpublic path(context: CanvasRenderingContext2D): void {\n\t\tcontext.rect(this.x, this.y, this.width, this.height);\n\t}\n\n\tpublic addBounds(bounds: IBounds): void {\n\t\tconst l = this.x;\n\t\tconst t = this.y;\n\t\tconst r = l + this.width;\n\t\tconst b = t + this.height;\n\n\t\tsetPoint(bounds, { x: l, y: t });\n\t\tsetPoint(bounds, { x: r, y: t });\n\t\tsetPoint(bounds, { x: l, y: b });\n\t\tsetPoint(bounds, { x: r, y: b });\n\t}\n}\n\n/**\n * @ignore\n */\nclass DrawCircle extends Op {\n\tconstructor(public x: number, public y: number, public radius: number) { super(); }\n\n\tpublic path(context: CanvasRenderingContext2D): void {\n\t\tcontext.moveTo(this.x + this.radius, this.y);\n\t\tcontext.arc(this.x, this.y, this.radius, 0, 2 * Math.PI);\n\t}\n\n\t// TODO handle skewing and rotation\n\tpublic addBounds(bounds: IBounds): void {\n\t\tsetPoint(bounds, { x: this.x - this.radius, y: this.y - this.radius });\n\t\tsetPoint(bounds, { x: this.x + this.radius, y: this.y + this.radius });\n\t}\n}\n\n/**\n * @ignore\n */\nclass DrawEllipse extends Op {\n\tconstructor(public x: number, public y: number, public radiusX: number, public radiusY: number) { super(); }\n\n\tpublic path(context: CanvasRenderingContext2D): void {\n\t\tcontext.ellipse(0, 0, this.radiusX, this.radiusY, 0, 0, Math.PI * 2);\n\t}\n\n\t// TODO handle skewing and rotation\n\tpublic addBounds(bounds: IBounds): void {\n\t\tsetPoint(bounds, { x: this.x - this.radiusX, y: this.y - this.radiusY });\n\t\tsetPoint(bounds, { x: this.x + this.radiusX, y: this.y + this.radiusY });\n\t}\n}\n\n/**\n * @ignore\n */\nclass Arc extends Op {\n\tconstructor(\n\t\tpublic cx: number,\n\t\tpublic cy: number,\n\t\tpublic radius: number,\n\t\tpublic startAngle: number,\n\t\tpublic endAngle: number,\n\t\tpublic anticlockwise: boolean,\n\t) { super(); }\n\n\tpublic path(context: CanvasRenderingContext2D): void {\n\t\tif (this.radius > 0) {\n\t\t\tcontext.arc(this.cx, this.cy, this.radius, this.startAngle, this.endAngle, this.anticlockwise);\n\t\t}\n\t}\n\n\tpublic addBounds(bounds: IBounds): void {\n\t\tlet arcBounds = $math.getArcBounds(this.cx, this.cy, this.startAngle * $math.DEGREES, this.endAngle * $math.DEGREES, this.radius);\n\t\tsetPoint(bounds, { x: arcBounds.left, y: arcBounds.top });\n\t\tsetPoint(bounds, { x: arcBounds.right, y: arcBounds.bottom });\n\t}\n}\n\n/**\n * @ignore\n */\nclass ArcTo extends Op {\n\tconstructor(\n\t\tpublic x1: number,\n\t\tpublic y1: number,\n\t\tpublic x2: number,\n\t\tpublic y2: number,\n\t\tpublic radius: number,\n\t) { super(); }\n\n\tpublic path(context: CanvasRenderingContext2D): void {\n\t\tif (this.radius > 0) {\n\t\t\tcontext.arcTo(this.x1, this.y1, this.x2, this.y2, this.radius);\n\t\t}\n\t}\n\n\t// TODO: add points\n\tpublic addBounds(_bounds: IBounds): void {\n\t\t/*\n\t\t// not finished\n\t\thttps://math.stackexchange.com/questions/1781438/finding-the-center-of-a-circle-given-two-points-and-a-radius-algebraically\n\n\t\tif (prevPoint) {\n\t\t\tlet x1 = prevPoint.x;\n\t\t\tlet y1 = prevPoint.y;\n\t\t\tlet x2 = this.x2;\n\t\t\tlet y2 = this.y2;\n\t\t\tlet r = this.radius;\n\n\t\t\tlet xa = (x2 - x1) / 2;\n\t\t\tlet ya = (y2 - y1) / 2;\n\n\t\t\tlet x0 = x1 + xa;\n\t\t\tlet y0 = y1 + ya;\n\n\t\t\tlet a = Math.hypot(xa, ya);\n\t\t\tlet b = Math.sqrt(r * r - a * a);\n\n\t\t\tlet cx = x0 + b * ya / a;\n\t\t\tlet cy = y0 - b * xa / a;\n\n\t\t\tconsole.log(cx, cy);\n\t\t}*/\n\t}\n}\n\n/**\n * @ignore\n */\nclass LineTo extends Op {\n\tconstructor(public x: number, public y: number) { super(); }\n\n\tpublic path(context: CanvasRenderingContext2D): void {\n\t\tcontext.lineTo(this.x, this.y);\n\t}\n\n\tpublic addBounds(bounds: IBounds): void {\n\t\tsetPoint(bounds, { x: this.x, y: this.y });\n\t}\n}\n\n/**\n * @ignore\n */\nclass MoveTo extends Op {\n\tconstructor(public x: number, public y: number) { super(); }\n\n\tpublic path(context: CanvasRenderingContext2D): void {\n\t\tcontext.moveTo(this.x, this.y);\n\t}\n\n\tpublic addBounds(bounds: IBounds): void {\n\t\tsetPoint(bounds, { x: this.x, y: this.y });\n\t}\n}\n\n/**\n * @ignore\n */\nclass ClosePath extends Op {\n\tpublic path(context: CanvasRenderingContext2D): void {\n\t\tcontext.closePath();\n\t}\n}\n\n/**\n * @ignore\n */\nclass BezierCurveTo extends Op {\n\tconstructor(\n\t\tpublic cpX: number,\n\t\tpublic cpY: number,\n\t\tpublic cpX2: number,\n\t\tpublic cpY2: number,\n\t\tpublic toX: number,\n\t\tpublic toY: number,\n\t) { super(); }\n\n\tpublic path(context: CanvasRenderingContext2D): void {\n\t\tcontext.bezierCurveTo(this.cpX, this.cpY, this.cpX2, this.cpY2, this.toX, this.toY);\n\t}\n\n\t// TODO: OK?\n\tpublic addBounds(bounds: IBounds): void {\n\t\tsetPoint(bounds, { x: this.cpX, y: this.cpY });\n\t\tsetPoint(bounds, { x: this.cpX2, y: this.cpY2 });\n\t\tsetPoint(bounds, { x: this.toX, y: this.toY });\n\t}\n}\n\n/**\n * @ignore\n */\nclass QuadraticCurveTo extends Op {\n\tconstructor(\n\t\tpublic cpX: number,\n\t\tpublic cpY: number,\n\t\tpublic toX: number,\n\t\tpublic toY: number,\n\t) { super(); }\n\n\tpublic path(context: CanvasRenderingContext2D): void {\n\t\tcontext.quadraticCurveTo(this.cpX, this.cpY, this.toX, this.toY);\n\t}\n\n\t// TODO: OK?\n\tpublic addBounds(bounds: IBounds): void {\n\t\tsetPoint(bounds, { x: this.cpX, y: this.cpY });\n\t\tsetPoint(bounds, { x: this.toX, y: this.toY });\n\t}\n}\n\n/**\n * @ignore\n */\nclass Shadow extends Op {\n\tconstructor(\n\t\tpublic color: string,\n\t\tpublic blur: number,\n\t\tpublic offsetX: number,\n\t\tpublic offsetY: number,\n\t\tpublic opacity?: number\n\t) { super(); }\n\n\tpublic colorize(context: CanvasRenderingContext2D, _forceColor: string | undefined): void {\n\t\tif (this.opacity) {\n\t\t\tcontext.fillStyle = this.color;\n\t\t}\n\t\tcontext.shadowColor = this.color;\n\t\tcontext.shadowBlur = this.blur;\n\t\tcontext.shadowOffsetX = this.offsetX;\n\t\tcontext.shadowOffsetY = this.offsetY;\n\t}\n\n\tpublic colorizeGhost(_context: CanvasRenderingContext2D, _forceColor: string | undefined): void {}\n}\n\n/**\n * @ignore\n */\nclass GraphicsImage extends Op {\n\tconstructor(\n\t\tpublic image: HTMLImageElement | HTMLCanvasElement,\n\t\tpublic width: number,\n\t\tpublic height: number,\n\t\tpublic x: number,\n\t\tpublic y: number\n\t) { super(); }\n\n\tpublic path(context: CanvasRenderingContext2D): void {\n\t\tcontext.drawImage(this.image, this.x, this.y, this.width, this.height);\n\t}\n\n\t// TODO: OK?\n\tpublic addBounds(bounds: IBounds): void {\n\t\tsetPoint(bounds, { x: this.x, y: this.y });\n\t\tsetPoint(bounds, { x: this.width, y: this.height });\n\t}\n}\n\n/**\n * @ignore\n */\nexport class CanvasGraphics extends CanvasDisplayObject implements IGraphics {\n\tprotected _operations: Array<Op> = [];\n\n\tpublic blendMode: BlendMode = BlendMode.NORMAL;\n\n\tprotected _hasShadows: boolean = false;\n\tprotected _fillAlpha?: number;\n\tprotected _strokeAlpha?: number;\n\n\tclear(): void {\n\t\tsuper.clear();\n\t\tthis._operations.length = 0;\n\t}\n\n\tprotected _pushOp(op: Op): void {\n\t\tthis._operations.push(op);\n\t}\n\n\tbeginFill(color?: Color | CanvasGradient | CanvasPattern, alpha: number = 1): void {\n\t\tthis._fillAlpha = alpha;\n\t\tif (color) {\n\t\t\tif (color instanceof Color) {\n\t\t\t\tthis._pushOp(new BeginFill(color.toCSS(alpha)));\n\n\t\t\t} else {\n\t\t\t\tthis.isMeasured = true;\n\t\t\t\tthis._pushOp(new BeginFill(color));\n\t\t\t}\n\t\t} else {\n\t\t\tthis._pushOp(new BeginFill(\"rgba(0, 0, 0, \" + alpha + \")\"));\n\t\t}\n\t}\n\n\tendFill(): void {\n\t\tthis._pushOp(new EndFill(this._hasShadows));\n\t}\n\n\tendStroke(): void {\n\t\tthis._pushOp(new EndStroke());\n\t}\n\n\tbeginPath(): void {\n\t\tthis._pushOp(new BeginPath());\n\t}\n\n\tlineStyle(width: number = 0, color?: Color | CanvasGradient | CanvasPattern, alpha: number = 1, lineJoin?: \"miter\" | \"round\" | \"bevel\", lineCap?: \"butt\" | \"round\" | \"square\"): void {\n\t\tthis._strokeAlpha = alpha;\n\t\tif (color) {\n\t\t\tif (color instanceof Color) {\n\t\t\t\tthis._pushOp(new LineStyle(width, color.toCSS(alpha), lineJoin, lineCap));\n\t\t\t} else {\n\t\t\t\tthis._pushOp(new LineStyle(width, color, lineJoin, lineCap));\n\t\t\t}\n\t\t} else {\n\t\t\tthis._pushOp(new LineStyle(width, \"rgba(0, 0, 0, \" + alpha + \")\", lineJoin, lineCap));\n\t\t}\n\t}\n\n\tsetLineDash(dash?: number[]): void {\n\t\tthis._pushOp(new LineDash(dash ? dash : []));\n\t}\n\n\tsetLineDashOffset(dashOffset: number = 0): void {\n\t\tthis._pushOp(new LineDashOffset(dashOffset));\n\t}\n\n\tdrawRect(x: number, y: number, width: number, height: number): void {\n\t\tthis._pushOp(new DrawRect(x, y, width, height));\n\t}\n\n\tdrawCircle(x: number, y: number, radius: number): void {\n\t\tthis._pushOp(new DrawCircle(x, y, radius));\n\t}\n\n\tdrawEllipse(x: number, y: number, radiusX: number, radiusY: number): void {\n\t\tthis._pushOp(new DrawEllipse(x, y, radiusX, radiusY));\n\t}\n\n\tarc(cx: number, cy: number, radius: number, startAngle: number, endAngle: number, anticlockwise: boolean = false): void {\n\t\tthis._pushOp(new Arc(cx, cy, radius, startAngle, endAngle, anticlockwise));\n\t}\n\n\tarcTo(x1: number, y1: number, x2: number, y2: number, radius: number): void {\n\t\tthis._pushOp(new ArcTo(x1, y1, x2, y2, radius));\n\t}\n\n\tlineTo(x: number, y: number): void {\n\t\tthis._pushOp(new LineTo(x, y));\n\t}\n\n\tmoveTo(x: number, y: number): void {\n\t\tthis._pushOp(new MoveTo(x, y));\n\t}\n\n\tbezierCurveTo(cpX: number, cpY: number, cpX2: number, cpY2: number, toX: number, toY: number): void {\n\t\tthis._pushOp(new BezierCurveTo(cpX, cpY, cpX2, cpY2, toX, toY));\n\t}\n\n\tquadraticCurveTo(cpX: number, cpY: number, toX: number, toY: number): void {\n\t\tthis._pushOp(new QuadraticCurveTo(cpX, cpY, toX, toY));\n\t}\n\n\tclosePath(): void {\n\t\tthis._pushOp(new ClosePath());\n\t}\n\n\tshadow(color: Color, blur: number = 0, offsetX: number = 0, offsetY: number = 0, opacity?: number): void {\n\t\tthis._hasShadows = true;\n\t\tthis._pushOp(new Shadow(opacity ? color.toCSS(opacity) : color.toCSS(this._fillAlpha || this._strokeAlpha), blur, offsetX, offsetY));\n\t}\n\n\timage(image: HTMLImageElement | HTMLCanvasElement, width: number, height: number, x: number, y: number): void {\n\t\tthis._pushOp(new GraphicsImage(image, width, height, x, y));\n\t}\n\n\t// https://svgwg.org/svg2-draft/paths.html#DProperty\n\t// TODO better error checking\n\tsvgPath(path: string): void {\n\t\tlet x = 0;\n\t\tlet y = 0;\n\t\tlet cpx: number | null = null;\n\t\tlet cpy: number | null = null;\n\t\tlet qcpx: number | null = null;\n\t\tlet qcpy: number | null = null;\n\n\t\tconst SEGMENTS_REGEXP = /([MmZzLlHhVvCcSsQqTtAa])([^MmZzLlHhVvCcSsQqTtAa]*)/g;\n\t\tconst ARGS_REGEXP = /[\\u0009\\u0020\\u000A\\u000C\\u000D]*([\\+\\-]?[0-9]*\\.?[0-9]+(?:[eE][\\+\\-]?[0-9]+)?)[\\u0009\\u0020\\u000A\\u000C\\u000D]*,?/g;\n\n\t\tlet match;\n\n\t\twhile ((match = SEGMENTS_REGEXP.exec(path)) !== null) {\n\t\t\tconst name = match[1];\n\t\t\tconst rest = match[2];\n\n\t\t\tconst args: Array<string> = [];\n\n\t\t\twhile ((match = ARGS_REGEXP.exec(rest)) !== null) {\n\t\t\t\targs.push(match[1]);\n\t\t\t}\n\n\t\t\t// Reset control point\n\t\t\tif (name !== \"S\" && name !== \"s\" && name !== \"C\" && name !== \"c\") {\n\t\t\t\tcpx = null;\n\t\t\t\tcpy = null;\n\t\t\t}\n\n\t\t\t// Reset control point\n\t\t\tif (name !== \"Q\" && name !== \"q\" && name !== \"T\" && name !== \"t\") {\n\t\t\t\tqcpx = null;\n\t\t\t\tqcpy = null;\n\t\t\t}\n\n\t\t\tswitch (name) {\n\t\t\t\tcase \"M\":\n\t\t\t\t\tcheckEvenArgs(name, args.length, 2);\n\t\t\t\t\tx = +args[0];\n\t\t\t\t\ty = +args[1];\n\t\t\t\t\tthis.moveTo(x, y);\n\n\t\t\t\t\tfor (let i = 2; i < args.length; i += 2) {\n\t\t\t\t\t\tx = +args[i];\n\t\t\t\t\t\ty = +args[i + 1];\n\t\t\t\t\t\tthis.lineTo(x, y);\n\t\t\t\t\t}\n\t\t\t\t\tbreak;\n\t\t\t\tcase \"m\":\n\t\t\t\t\tcheckEvenArgs(name, args.length, 2);\n\t\t\t\t\tx += +args[0];\n\t\t\t\t\ty += +args[1];\n\t\t\t\t\tthis.moveTo(x, y);\n\n\t\t\t\t\tfor (let i = 2; i < args.length; i += 2) {\n\t\t\t\t\t\tx += +args[i];\n\t\t\t\t\t\ty += +args[i + 1];\n\t\t\t\t\t\tthis.lineTo(x, y);\n\t\t\t\t\t}\n\t\t\t\t\tbreak;\n\n\t\t\t\tcase \"L\":\n\t\t\t\t\tcheckEvenArgs(name, args.length, 2);\n\t\t\t\t\tfor (let i = 0; i < args.length; i += 2) {\n\t\t\t\t\t\tx = +args[i];\n\t\t\t\t\t\ty = +args[i + 1];\n\t\t\t\t\t\tthis.lineTo(x, y);\n\t\t\t\t\t}\n\t\t\t\t\tbreak;\n\t\t\t\tcase \"l\":\n\t\t\t\t\tcheckEvenArgs(name, args.length, 2);\n\t\t\t\t\tfor (let i = 0; i < args.length; i += 2) {\n\t\t\t\t\t\tx += +args[i];\n\t\t\t\t\t\ty += +args[i + 1];\n\t\t\t\t\t\tthis.lineTo(x, y);\n\t\t\t\t\t}\n\t\t\t\t\tbreak;\n\n\t\t\t\tcase \"H\":\n\t\t\t\t\tcheckMinArgs(name, args.length, 1);\n\t\t\t\t\tfor (let i = 0; i < args.length; ++i) {\n\t\t\t\t\t\tx = +args[i];\n\t\t\t\t\t\tthis.lineTo(x, y);\n\t\t\t\t\t}\n\t\t\t\t\tbreak;\n\t\t\t\tcase \"h\":\n\t\t\t\t\tcheckMinArgs(name, args.length, 1);\n\t\t\t\t\tfor (let i = 0; i < args.length; ++i) {\n\t\t\t\t\t\tx += +args[i];\n\t\t\t\t\t\tthis.lineTo(x, y);\n\t\t\t\t\t}\n\t\t\t\t\tbreak;\n\n\t\t\t\tcase \"V\":\n\t\t\t\t\tcheckMinArgs(name, args.length, 1);\n\t\t\t\t\tfor (let i = 0; i < args.length; ++i) {\n\t\t\t\t\t\ty = +args[i];\n\t\t\t\t\t\tthis.lineTo(x, y);\n\t\t\t\t\t}\n\t\t\t\t\tbreak;\n\t\t\t\tcase \"v\":\n\t\t\t\t\tcheckMinArgs(name, args.length, 1);\n\t\t\t\t\tfor (let i = 0; i < args.length; ++i) {\n\t\t\t\t\t\ty += +args[i];\n\t\t\t\t\t\tthis.lineTo(x, y);\n\t\t\t\t\t}\n\t\t\t\t\tbreak;\n\n\t\t\t\tcase \"C\":\n\t\t\t\t\tcheckEvenArgs(name, args.length, 6);\n\t\t\t\t\tfor (let i = 0; i < args.length; i += 6) {\n\t\t\t\t\t\tconst x1 = +args[i];\n\t\t\t\t\t\tconst y1 = +args[i + 1];\n\t\t\t\t\t\tcpx = +args[i + 2];\n\t\t\t\t\t\tcpy = +args[i + 3];\n\t\t\t\t\t\tx = +args[i + 4];\n\t\t\t\t\t\ty = +args[i + 5];\n\t\t\t\t\t\tthis.bezierCurveTo(x1, y1, cpx, cpy, x, y);\n\t\t\t\t\t}\n\t\t\t\t\tbreak;\n\t\t\t\tcase \"c\":\n\t\t\t\t\tcheckEvenArgs(name, args.length, 6);\n\t\t\t\t\tfor (let i = 0; i < args.length; i += 6) {\n\t\t\t\t\t\tconst x1 = +args[i] + x;\n\t\t\t\t\t\tconst y1 = +args[i + 1] + y;\n\t\t\t\t\t\tcpx = +args[i + 2] + x;\n\t\t\t\t\t\tcpy = +args[i + 3] + y;\n\t\t\t\t\t\tx += +args[i + 4];\n\t\t\t\t\t\ty += +args[i + 5];\n\t\t\t\t\t\tthis.bezierCurveTo(x1, y1, cpx, cpy, x, y);\n\t\t\t\t\t}\n\t\t\t\t\tbreak;\n\n\t\t\t\tcase \"S\":\n\t\t\t\t\tcheckEvenArgs(name, args.length, 4);\n\t\t\t\t\tif (cpx === null || cpy === null) {\n\t\t\t\t\t\tcpx = x;\n\t\t\t\t\t\tcpy = y;\n\t\t\t\t\t}\n\t\t\t\t\tfor (let i = 0; i < args.length; i += 4) {\n\t\t\t\t\t\tconst x1 = 2 * x - cpx;\n\t\t\t\t\t\tconst y1 = 2 * y - cpy;\n\t\t\t\t\t\tcpx = +args[i];\n\t\t\t\t\t\tcpy = +args[i + 1];\n\t\t\t\t\t\tx = +args[i + 2];\n\t\t\t\t\t\ty = +args[i + 3];\n\t\t\t\t\t\tthis.bezierCurveTo(x1, y1, cpx, cpy, x, y);\n\t\t\t\t\t}\n\t\t\t\t\tbreak;\n\t\t\t\tcase \"s\":\n\t\t\t\t\tcheckEvenArgs(name, args.length, 4);\n\t\t\t\t\tif (cpx === null || cpy === null) {\n\t\t\t\t\t\tcpx = x;\n\t\t\t\t\t\tcpy = y;\n\t\t\t\t\t}\n\t\t\t\t\tfor (let i = 0; i < args.length; i += 4) {\n\t\t\t\t\t\tconst x1 = 2 * x - cpx;\n\t\t\t\t\t\tconst y1 = 2 * y - cpy;\n\t\t\t\t\t\tcpx = +args[i] + x;\n\t\t\t\t\t\tcpy = +args[i + 1] + y;\n\t\t\t\t\t\tx += +args[i + 2];\n\t\t\t\t\t\ty += +args[i + 3];\n\t\t\t\t\t\tthis.bezierCurveTo(x1, y1, cpx, cpy, x, y);\n\t\t\t\t\t}\n\t\t\t\t\tbreak;\n\n\t\t\t\tcase \"Q\":\n\t\t\t\t\tcheckEvenArgs(name, args.length, 4);\n\t\t\t\t\tfor (let i = 0; i < args.length; i += 4) {\n\t\t\t\t\t\tqcpx = +args[i];\n\t\t\t\t\t\tqcpy = +args[i + 1];\n\t\t\t\t\t\tx = +args[i + 2];\n\t\t\t\t\t\ty = +args[i + 3];\n\t\t\t\t\t\tthis.quadraticCurveTo(qcpx, qcpy, x, y);\n\t\t\t\t\t}\n\t\t\t\t\tbreak;\n\t\t\t\tcase \"q\":\n\t\t\t\t\tcheckEvenArgs(name, args.length, 4);\n\t\t\t\t\tfor (let i = 0; i < args.length; i += 4) {\n\t\t\t\t\t\tqcpx = +args[i] + x;\n\t\t\t\t\t\tqcpy = +args[i + 1] + y;\n\t\t\t\t\t\tx += +args[i + 2];\n\t\t\t\t\t\ty += +args[i + 3];\n\t\t\t\t\t\tthis.quadraticCurveTo(qcpx, qcpy, x, y);\n\t\t\t\t\t}\n\t\t\t\t\tbreak;\n\n\t\t\t\tcase \"T\":\n\t\t\t\t\tcheckEvenArgs(name, args.length, 2);\n\t\t\t\t\tif (qcpx === null || qcpy === null) {\n\t\t\t\t\t\tqcpx = x;\n\t\t\t\t\t\tqcpy = y;\n\t\t\t\t\t}\n\t\t\t\t\tfor (let i = 0; i < args.length; i += 2) {\n\t\t\t\t\t\tqcpx = 2 * x - qcpx;\n\t\t\t\t\t\tqcpy = 2 * y - qcpy;\n\t\t\t\t\t\tx = +args[i];\n\t\t\t\t\t\ty = +args[i + 1];\n\t\t\t\t\t\tthis.quadraticCurveTo(qcpx, qcpy, x, y);\n\t\t\t\t\t}\n\t\t\t\t\tbreak;\n\t\t\t\tcase \"t\":\n\t\t\t\t\tcheckEvenArgs(name, args.length, 2);\n\t\t\t\t\tif (qcpx === null || qcpy === null) {\n\t\t\t\t\t\tqcpx = x;\n\t\t\t\t\t\tqcpy = y;\n\t\t\t\t\t}\n\t\t\t\t\tfor (let i = 0; i < args.length; i += 2) {\n\t\t\t\t\t\tqcpx = 2 * x - qcpx;\n\t\t\t\t\t\tqcpy = 2 * y - qcpy;\n\t\t\t\t\t\tx += +args[i];\n\t\t\t\t\t\ty += +args[i + 1];\n\t\t\t\t\t\tthis.quadraticCurveTo(qcpx, qcpy, x, y);\n\t\t\t\t\t}\n\t\t\t\t\tbreak;\n\n\t\t\t\tcase \"A\":\n\t\t\t\tcase \"a\":\n\t\t\t\t\tconst relative = (name === \"a\");\n\n\t\t\t\t\tsplitArcFlags(args);\n\t\t\t\t\tcheckEvenArgs(name, args.length, 7);\n\n\t\t\t\t\tfor (let i = 0; i < args.length; i += 7) {\n\t\t\t\t\t\tlet cx = +args[i + 5];\n\t\t\t\t\t\tlet cy = +args[i + 6];\n\n\t\t\t\t\t\tif (relative) {\n\t\t\t\t\t\t\tcx += x;\n\t\t\t\t\t\t\tcy += y;\n\t\t\t\t\t\t}\n\n\t\t\t\t\t\tconst bs = arcToBezier({\n\t\t\t\t\t\t\tpx: x,\n\t\t\t\t\t\t\tpy: y,\n\t\t\t\t\t\t\trx: +args[i],\n\t\t\t\t\t\t\try: +args[i + 1],\n\t\t\t\t\t\t\txAxisRotation: +args[i + 2],\n\t\t\t\t\t\t\tlargeArcFlag: assertBinary(+args[i + 3]),\n\t\t\t\t\t\t\tsweepFlag: assertBinary(+args[i + 4]),\n\t\t\t\t\t\t\tcx,\n\t\t\t\t\t\t\tcy,\n\t\t\t\t\t\t});\n\n\t\t\t\t\t\t$array.each(bs, (b) => {\n\t\t\t\t\t\t\tthis.bezierCurveTo(b.x1, b.y1, b.x2, b.y2, b.x, b.y);\n\t\t\t\t\t\t\tx = b.x;\n\t\t\t\t\t\t\ty = b.y;\n\t\t\t\t\t\t});\n\t\t\t\t\t}\n\t\t\t\t\tbreak;\n\t\t\t\tcase \"Z\":\n\t\t\t\tcase \"z\":\n\t\t\t\t\tcheckArgs(name, args.length, 0);\n\t\t\t\t\tthis.closePath();\n\t\t\t\t\tbreak;\n\t\t\t}\n\t\t}\n\t}\n\n\n\tpublic _runPath(context: CanvasRenderingContext2D): void {\n\t\tcontext.beginPath();\n\n\t\t$array.each(this._operations, (op) => {\n\t\t\top.path(context);\n\t\t});\n\t}\n\n\tprotected _render(status: IStatus): void {\n\t\tsuper._render(status);\n\n\t\tconst layerDirty = status.layer.dirty;\n\t\tconst interactive = this._isInteractive(status);\n\n\t\tif (layerDirty || interactive) {\n\n\t\t\tconst context = status.layer.context;\n\t\t\tconst ghostContext = this._renderer._ghostLayer.context;\n\n\t\t\tif (layerDirty) {\n\t\t\t\tcontext.globalCompositeOperation = this.blendMode;\n\n\t\t\t\tcontext.beginPath();\n\t\t\t}\n\n\t\t\tlet color: string | undefined;\n\n\t\t\tif (interactive) {\n\t\t\t\tghostContext.beginPath();\n\t\t\t\tcolor = this._getColorId();\n\t\t\t}\n\n\t\t\t$array.each(this._operations, (op) => {\n\t\t\t\tif (layerDirty) {\n\t\t\t\t\top.path(context);\n\t\t\t\t\top.colorize(context, undefined);\n\t\t\t\t}\n\n\t\t\t\tif (interactive) {\n\t\t\t\t\top.pathGhost(ghostContext);\n\t\t\t\t\top.colorizeGhost(ghostContext, color);\n\t\t\t\t}\n\t\t\t});\n\t\t}\n\t}\n\n\tpublic renderDetached(context: CanvasRenderingContext2D): void {\n\t\tif (this.visible) {\n\t\t\tthis._setMatrix();\n\n\t\t\tcontext.save();\n\n\t\t\t// We must apply the mask before we transform the element\n\t\t\tconst mask = this.mask;\n\t\t\tif (mask) {\n\t\t\t\tmask._setMatrix();\n\t\t\t\tmask._transform(context, 1);\n\t\t\t\tmask._runPath(context);\n\t\t\t\tcontext.clip();\n\t\t\t}\n\n\t\t\t// TODO handle compoundAlpha somehow ?\n\t\t\tcontext.globalAlpha = this.compoundAlpha * this.alpha;\n\n\t\t\tthis._transform(context, 1);\n\n\t\t\tif (this.filter) {\n\t\t\t\tcontext.filter = this.filter;\n\t\t\t}\n\n\t\t\tcontext.globalCompositeOperation = this.blendMode;\n\n\t\t\tcontext.beginPath();\n\n\t\t\t$array.each(this._operations, (op) => {\n\t\t\t\top.path(context);\n\t\t\t\top.colorize(context, undefined);\n\t\t\t});\n\n\t\t\tcontext.restore();\n\t\t}\n\t}\n\n\tpublic _addBounds(bounds: IBounds): void {\n\t\tif (this.visible && this.isMeasured) {\n\t\t\t$array.each(this._operations, (op) => {\n\t\t\t\top.addBounds(bounds);\n\t\t\t});\n\t\t}\n\t}\n}\n\n/**\n * @ignore\n */\ninterface ILineChunk {\n\tstyle: string | undefined,\n\tfill: Color | undefined,\n\ttext: string,\n\twidth: number,\n\theight: number,\n\tleft: number,\n\tright: number,\n\tascent: number,\n\toffsetX: number,\n\toffsetY: number,\n\ttextDecoration: string | undefined,\n\tverticalAlign?: \"baseline\" | \"sub\" | \"super\"\n}\n\n/**\n * @ignore\n */\ninterface ILine {\n\toffsetY: number,\n\tascent: number,\n\twidth: number,\n\theight: number,\n\tleft: number,\n\tright: number,\n\ttextChunks: Array<ILineChunk>,\n}\n\n/**\n * @ignore\n */\nexport class CanvasText extends CanvasDisplayObject implements IText {\n\tpublic text: string;\n\tpublic style: CanvasTextStyle;\n\tpublic resolution: number = 1;\n\tpublic textVisible: boolean = true;\n\n\tprotected _textInfo: Array<ILine> | undefined;\n\tprotected _originalScale?: number = 1;\n\n\tconstructor(renderer: CanvasRenderer, text: string, style: CanvasTextStyle) {\n\t\tsuper(renderer);\n\t\tthis.text = text;\n\t\tthis.style = style;\n\t}\n\n\tpublic invalidateBounds(): void {\n\t\tsuper.invalidateBounds();\n\t\tthis._textInfo = undefined;\n\t}\n\n\tprivate _shared(context: CanvasRenderingContext2D) {\n\t\tif (this.style.textAlign) {\n\t\t\tcontext.textAlign = this.style.textAlign;\n\t\t}\n\n\t\tif (this.style.direction) {\n\t\t\tcontext.direction = this.style.direction;\n\t\t}\n\n\t\tif (this.style.textBaseline) {\n\t\t\tcontext.textBaseline = this.style.textBaseline;\n\t\t}\n\n\t}\n\n\tprotected _prerender(status: IStatus, ignoreGhost = false, ignoreFontWeight = false): void {\n\t\tsuper._render(status);\n\n\t\tconst context = status.layer.context;\n\t\tconst ghostContext = this._renderer._ghostLayer.context;\n\n\t\t// Font style\n\n\t\tconst style = this.style;\n\t\tlet fontStyle = this._getFontStyle(undefined, ignoreFontWeight);\n\n\t\tcontext.font = fontStyle;\n\t\tif (this._isInteractive(status) && !ignoreGhost) {\n\t\t\tghostContext.font = fontStyle;\n\t\t}\n\n\t\t// Other parameters\n\t\tif (style.fill) {\n\t\t\tif (style.fill instanceof Color) {\n\t\t\t\tcontext.fillStyle = style.fill.toCSS(style.fillOpacity != undefined ? style.fillOpacity : 1);\n\t\t\t} else {\n\t\t\t\tcontext.fillStyle = style.fill;\n\t\t\t}\n\t\t}\n\n\t\tif (style.shadowColor) {\n\t\t\tstatus.layer.context.shadowColor = style.shadowColor.toCSS(style.shadowOpacity || 1);\n\t\t}\n\t\tif (style.shadowBlur) {\n\t\t\tstatus.layer.context.shadowBlur = style.shadowBlur;\n\t\t}\n\t\tif (style.shadowOffsetX) {\n\t\t\tstatus.layer.context.shadowOffsetX = style.shadowOffsetX;\n\t\t}\n\t\tif (style.shadowOffsetY) {\n\t\t\tstatus.layer.context.shadowOffsetY = style.shadowOffsetY;\n\t\t}\n\n\t\tthis._shared(context);\n\n\t\tif (this._isInteractive(status) && !ignoreGhost) {\n\t\t\tghostContext.fillStyle = this._getColorId();\n\t\t\tthis._shared(ghostContext);\n\t\t}\n\t}\n\n\tprotected _getFontStyle(style2?: ITextStyle, ignoreFontWeight = false): string {\n\n\t\t// Process defaults\n\t\tconst style = this.style;\n\t\tlet fontStyle: string[] = [];\n\n\t\tif (style2 && style2.fontVariant) {\n\t\t\tfontStyle.push(style2.fontVariant);\n\t\t}\n\t\telse if (style.fontVariant) {\n\t\t\tfontStyle.push(style.fontVariant);\n\t\t}\n\n\t\tif (!ignoreFontWeight) {\n\t\t\tif (style2 && style2.fontWeight) {\n\t\t\t\tfontStyle.push(style2.fontWeight);\n\t\t\t}\n\t\t\telse if (style.fontWeight) {\n\t\t\t\tfontStyle.push(style.fontWeight);\n\t\t\t}\n\t\t}\n\n\t\tif (style2 && style2.fontStyle) {\n\t\t\tfontStyle.push(style2.fontStyle);\n\t\t}\n\t\telse if (style.fontStyle) {\n\t\t\tfontStyle.push(style.fontStyle);\n\t\t}\n\n\t\tif (style2 && style2.fontSize) {\n\t\t\tif ($type.isNumber(style2.fontSize)) {\n\t\t\t\tstyle2.fontSize = style2.fontSize + \"px\";\n\t\t\t}\n\t\t\tfontStyle.push(style2.fontSize);\n\t\t}\n\t\telse if (style.fontSize) {\n\t\t\tif ($type.isNumber(style.fontSize)) {\n\t\t\t\tstyle.fontSize = style.fontSize + \"px\";\n\t\t\t}\n\t\t\tfontStyle.push(style.fontSize);\n\t\t}\n\n\t\tif (style2 && style2.fontFamily) {\n\t\t\tfontStyle.push(style2.fontFamily);\n\t\t}\n\t\telse if (style.fontFamily) {\n\t\t\tfontStyle.push(style.fontFamily);\n\t\t}\n\t\telse if (fontStyle.length) {\n\t\t\tfontStyle.push(\"Arial\");\n\t\t}\n\n\t\treturn fontStyle.join(\" \");\n\t}\n\n\tprotected _render(status: IStatus): void {\n\t\t// We need measurements in order to properly position text for alignment\n\t\tif (!this._textInfo) {\n\t\t\tthis._measure(status);\n\t\t}\n\n\t\tif (this.textVisible) {\n\n\t\t\tconst interactive = this._isInteractive(status);\n\t\t\tconst context = status.layer.context;\n\t\t\tconst layerDirty = status.layer.dirty;\n\t\t\tconst ghostContext = this._renderer._ghostLayer.context;\n\n\t\t\tcontext.save();\n\t\t\tghostContext.save();\n\t\t\tthis._prerender(status);\n\n\t\t\t// const lines = this.text.toString().replace(/\\r/g, \"\").split(/\\n/);\n\t\t\t// const x = this._localBounds && (this._localBounds.left < 0) ? Math.abs(this._localBounds.left) : 0;\n\n\t\t\t// Process text info produced by _measure()\n\t\t\t$array.each(this._textInfo!, (line, _index) => {\n\t\t\t\t$array.each(line.textChunks, (chunk, _index) => {\n\n\t\t\t\t\t// Set style\n\t\t\t\t\tif (chunk.style) {\n\t\t\t\t\t\tcontext.save();\n\t\t\t\t\t\tghostContext.save();\n\n\t\t\t\t\t\tcontext.font = chunk.style;\n\t\t\t\t\t\tif (this._isInteractive(status)) {\n\t\t\t\t\t\t\tghostContext.font = chunk.style;\n\t\t\t\t\t\t}\n\t\t\t\t\t}\n\n\t\t\t\t\tif (chunk.fill) {\n\t\t\t\t\t\tcontext.save();\n\t\t\t\t\t\tcontext.fillStyle = chunk.fill.toCSS();\n\t\t\t\t\t\t// Color does not affect ghostContext so we not set it\n\t\t\t\t\t}\n\n\t\t\t\t\t// Draw text\n\t\t\t\t\tif (layerDirty) {\n\t\t\t\t\t\tcontext.fillText(chunk.text, chunk.offsetX, line.offsetY + chunk.offsetY);\n\t\t\t\t\t}\n\n\t\t\t\t\t// Draw underline\n\t\t\t\t\tif (chunk.textDecoration == \"underline\" || chunk.textDecoration == \"line-through\") {\n\n\t\t\t\t\t\tlet thickness = 1;\n\t\t\t\t\t\tlet offset = 1;\n\t\t\t\t\t\tlet fontSize = chunk.height;\n\n\t\t\t\t\t\tconst oversizedBehavior = this.style.oversizedBehavior || \"\";\n\t\t\t\t\t\tif ([\"truncate\", \"wrap\", \"wrap-no-break\"].indexOf(oversizedBehavior) > -1) {\n\t\t\t\t\t\t\t// Measure actual width of the text so the line fits\n\t\t\t\t\t\t\tconst metrics = this._measureText(chunk.text, context);\n\t\t\t\t\t\t\tchunk.width = metrics.actualBoundingBoxLeft + metrics.actualBoundingBoxRight;\n\t\t\t\t\t\t}\n\n\t\t\t\t\t\tlet offsetX = chunk.offsetX;\n\t\t\t\t\t\tswitch (this.style.textAlign) {\n\t\t\t\t\t\t\tcase \"right\":\n\t\t\t\t\t\t\tcase \"end\":\n\t\t\t\t\t\t\t\toffsetX -= chunk.width;\n\t\t\t\t\t\t\t\tbreak;\n\t\t\t\t\t\t\tcase \"center\":\n\t\t\t\t\t\t\t\toffsetX -= chunk.width / 2;\n\t\t\t\t\t\t\t\tbreak;\n\t\t\t\t\t\t}\n\n\t\t\t\t\t\tif (chunk.style) {\n\t\t\t\t\t\t\tconst format = TextFormatter.getTextStyle(chunk.style);\n\t\t\t\t\t\t\tswitch (format.fontWeight) {\n\t\t\t\t\t\t\t\tcase \"bolder\":\n\t\t\t\t\t\t\t\tcase \"bold\":\n\t\t\t\t\t\t\t\tcase \"700\":\n\t\t\t\t\t\t\t\tcase \"800\":\n\t\t\t\t\t\t\t\tcase \"900\":\n\t\t\t\t\t\t\t\t\tthickness = 2;\n\t\t\t\t\t\t\t\t\tbreak;\n\t\t\t\t\t\t\t}\n\t\t\t\t\t\t}\n\n\t\t\t\t\t\tif (fontSize) {\n\t\t\t\t\t\t\toffset = fontSize / 20;\n\t\t\t\t\t\t}\n\n\t\t\t\t\t\tlet y: number;\n\n\t\t\t\t\t\tif (chunk.textDecoration == \"line-through\") {\n\t\t\t\t\t\t\ty = thickness + line.offsetY + chunk.offsetY - chunk.height / 2;\n\t\t\t\t\t\t}\n\t\t\t\t\t\telse {\n\t\t\t\t\t\t\ty = thickness + offset * 1.5 + line.offsetY + chunk.offsetY;\n\t\t\t\t\t\t}\n\n\t\t\t\t\t\tcontext.save();\n\t\t\t\t\t\tcontext.beginPath();\n\t\t\t\t\t\tif (chunk.fill) {\n\t\t\t\t\t\t\tcontext.strokeStyle = chunk.fill.toCSS();\n\t\t\t\t\t\t}\n\t\t\t\t\t\telse if (this.style.fill && this.style.fill instanceof Color) {\n\t\t\t\t\t\t\tcontext.strokeStyle = this.style.fill.toCSS();\n\t\t\t\t\t\t}\n\t\t\t\t\t\tcontext.lineWidth = thickness * offset;\n\t\t\t\t\t\tcontext.moveTo(offsetX, y);\n\t\t\t\t\t\tcontext.lineTo(offsetX + chunk.width, y);\n\t\t\t\t\t\tcontext.stroke();\n\t\t\t\t\t\tcontext.restore();\n\t\t\t\t\t}\n\n\t\t\t\t\tif (interactive && this.interactive) {\n\t\t\t\t\t\t// Draw text in ghost canvas ONLY if it is set as interactive\n\t\t\t\t\t\t// explicitly. This way we avoid hit test anomalies caused by anti\n\t\t\t\t\t\t// aliasing of text.\n\t\t\t\t\t\tghostContext.fillText(chunk.text, chunk.offsetX, line.offsetY + chunk.offsetY);\n\t\t\t\t\t}\n\n\t\t\t\t\tif (chunk.fill) {\n\t\t\t\t\t\tcontext.restore();\n\t\t\t\t\t\t// Color does not affect ghostContext so we not set it\n\t\t\t\t\t}\n\n\t\t\t\t\t// Reset style\n\t\t\t\t\tif (chunk.style) {\n\t\t\t\t\t\tcontext.restore();\n\t\t\t\t\t\tghostContext.restore();\n\t\t\t\t\t}\n\n\t\t\t\t});\n\t\t\t});\n\n\t\t\tcontext.restore();\n\t\t\tghostContext.restore();\n\t\t}\n\t}\n\n\tpublic _addBounds(bounds: IBounds): void {\n\t\tif (this.visible && this.isMeasured) {\n\t\t\t//if (this._textVisible) {\n\t\t\tconst x = this._measure({\n\t\t\t\tinactive: this.inactive,\n\t\t\t\tlayer: this.getLayer(),\n\t\t\t});\n\t\t\tsetPoint(bounds, { x: x.left, y: x.top });\n\t\t\tsetPoint(bounds, { x: x.right, y: x.bottom });\n\t\t\t//}\n\t\t}\n\t}\n\n\tprotected _ignoreFontWeight(): boolean {\n\t\treturn /apple/i.test(navigator.vendor);\n\t}\n\n\tpublic _measure(status: IStatus): IBounds {\n\t\tconst context = status.layer.context;\n\t\tconst ghostContext = this._renderer._ghostLayer.context;\n\t\tconst rtl = this.style.direction == \"rtl\";\n\n\t\t// Reset text info\n\t\tthis._textInfo = [];\n\n\t\t// Init\n\t\tconst oversizedBehavior = this.style.oversizedBehavior;\n\t\tconst maxWidth = this.style.maxWidth!;\n\n\t\tconst truncate = $type.isNumber(maxWidth) && oversizedBehavior == \"truncate\";\n\t\tconst wrap = $type.isNumber(maxWidth) && (oversizedBehavior == \"wrap\" || oversizedBehavior == \"wrap-no-break\");\n\n\t\t// Pre-render\n\t\tcontext.save();\n\t\tghostContext.save();\n\t\tthis._prerender(status, true, this._ignoreFontWeight());\n\n\t\t// Get default font metrix\n\t\tconst refText = \"abcdefghijklmnopqrstuvwxyzABCDEFGHIJKLMNOPQRSTUVWXYZ0123456789 \";\n\n\t\t// Split up text into lines\n\t\tconst lines = this.text.toString().replace(/\\r/g, \"\").split(/\\n/);\n\t\tlet styleRestored = true;\n\t\tlet minX = 0;\n\t\tlet maxX = 0;\n\n\t\t// Iterate through the lines\n\t\tlet offsetY = 0;\n\t\tlet currentStyle: string | undefined;\n\t\t$array.each(lines, (line, _index) => {\n\n\t\t\t// Split up line into format/value chunks\n\t\t\tlet chunks: ITextChunk[];\n\t\t\tif (line == \"\") {\n\t\t\t\tchunks = [{\n\t\t\t\t\ttype: \"value\",\n\t\t\t\t\ttext: \"\"\n\t\t\t\t}];\n\t\t\t}\n\t\t\telse {\n\t\t\t\tchunks = TextFormatter.chunk(line, false, this.style.ignoreFormatting);\n\t\t\t}\n\n\t\t\twhile (chunks.length > 0) {\n\n\t\t\t\t// Init line object\n\t\t\t\tlet lineInfo: ILine = {\n\t\t\t\t\toffsetY: offsetY,\n\t\t\t\t\tascent: 0,\n\t\t\t\t\twidth: 0,\n\t\t\t\t\theight: 0,\n\t\t\t\t\tleft: 0,\n\t\t\t\t\tright: 0,\n\t\t\t\t\ttextChunks: []\n\t\t\t\t};\n\n\t\t\t\t// Measure reference text\n\t\t\t\tconst metrics = this._measureText(refText, context);\n\n\t\t\t\tconst height = metrics.actualBoundingBoxAscent + metrics.actualBoundingBoxDescent;\n\t\t\t\tlineInfo.height = height;\n\t\t\t\tlineInfo.ascent = metrics.actualBoundingBoxAscent;\n\n\t\t\t\tlet currentFormat: string;\n\t\t\t\tlet currentDecoration: string | undefined = this.style.textDecoration;\n\t\t\t\tlet currentFill: Color | undefined;\n\t\t\t\tlet currentChunkWidth: number | undefined;\n\t\t\t\tlet skipFurtherText = false;\n\t\t\t\tlet firstTextChunk = true;\n\t\t\t\tlet leftoverChunks: Array<ITextChunk> = [];\n\t\t\t\tlet currentVerticalAlign: \"baseline\" | \"sub\" | \"super\" | undefined;\n\t\t\t\t//let offsetX = 0;\n\t\t\t\t//let chunk;\n\n\t\t\t\t//while(chunk = chunks.shift()) {\n\t\t\t\t$array.eachContinue(chunks, (chunk, index) => {\n\n\t\t\t\t\t// Format chunk\n\t\t\t\t\tif (chunk.type == \"format\") {\n\t\t\t\t\t\tif (chunk.text == \"[/]\") {\n\t\t\t\t\t\t\tif (!styleRestored) {\n\t\t\t\t\t\t\t\tcontext.restore();\n\t\t\t\t\t\t\t\tghostContext.restore();\n\t\t\t\t\t\t\t\tstyleRestored = true;\n\t\t\t\t\t\t\t}\n\t\t\t\t\t\t\tcurrentFill = undefined;\n\t\t\t\t\t\t\tcurrentStyle = undefined;\n\t\t\t\t\t\t\tcurrentChunkWidth = undefined;\n\t\t\t\t\t\t\tcurrentDecoration = this.style.textDecoration;\n\t\t\t\t\t\t\tcurrentVerticalAlign = undefined\n\t\t\t\t\t\t\tcurrentFormat = chunk.text;\n\t\t\t\t\t\t}\n\t\t\t\t\t\telse {\n\n\t\t\t\t\t\t\tif (!styleRestored) {\n\t\t\t\t\t\t\t\tcontext.restore();\n\t\t\t\t\t\t\t\tghostContext.restore();\n\t\t\t\t\t\t\t}\n\n\t\t\t\t\t\t\tlet format = TextFormatter.getTextStyle(chunk.text);\n\t\t\t\t\t\t\tconst fontStyle = this._getFontStyle(format);\n\t\t\t\t\t\t\tcontext.save();\n\t\t\t\t\t\t\tghostContext.save();\n\t\t\t\t\t\t\tcontext.font = fontStyle;\n\t\t\t\t\t\t\tcurrentStyle = fontStyle;\n\t\t\t\t\t\t\tcurrentFormat = chunk.text;\n\t\t\t\t\t\t\tif (format.textDecoration) {\n\t\t\t\t\t\t\t\tcurrentDecoration = format.textDecoration;\n\t\t\t\t\t\t\t}\n\t\t\t\t\t\t\tif (format.fill) {\n\t\t\t\t\t\t\t\tcurrentFill = <Color>format.fill;\n\t\t\t\t\t\t\t}\n\t\t\t\t\t\t\tif ((<any>format).width) {\n\t\t\t\t\t\t\t\tcurrentChunkWidth = $type.toNumber((<any>format).width);\n\t\t\t\t\t\t\t}\n\t\t\t\t\t\t\tif (format.verticalAlign) {\n\t\t\t\t\t\t\t\tcurrentVerticalAlign = format.verticalAlign;\n\t\t\t\t\t\t\t}\n\t\t\t\t\t\t\tstyleRestored = false;\n\n\t\t\t\t\t\t\t// Measure reference text after change of format\n\t\t\t\t\t\t\tconst metrics = this._measureText(refText, context);\n\t\t\t\t\t\t\tconst height = metrics.actualBoundingBoxAscent + metrics.actualBoundingBoxDescent;\n\t\t\t\t\t\t\tif (height > lineInfo.height) {\n\t\t\t\t\t\t\t\tlineInfo.height = height;\n\t\t\t\t\t\t\t}\n\t\t\t\t\t\t\tif (metrics.actualBoundingBoxAscent > lineInfo.ascent) {\n\t\t\t\t\t\t\t\tlineInfo.ascent = metrics.actualBoundingBoxAscent;\n\t\t\t\t\t\t\t}\n\t\t\t\t\t\t}\n\t\t\t\t\t}\n\n\t\t\t\t\t// Text chunk\n\t\t\t\t\telse if (chunk.type == \"value\" && !skipFurtherText) {\n\n\t\t\t\t\t\t// Measure\n\t\t\t\t\t\tconst metrics = this._measureText(chunk.text, context);\n\t\t\t\t\t\tlet chunkWidth = metrics.actualBoundingBoxLeft + metrics.actualBoundingBoxRight;\n\n\t\t\t\t\t\t// Check for fit\n\t\t\t\t\t\tif (truncate) {\n\n\t\t\t\t\t\t\t// Break words?\n\t\t\t\t\t\t\tlet breakWords = firstTextChunk || this.style.breakWords || false;\n\n\t\t\t\t\t\t\t// Measure ellipsis and check if it fits\n\t\t\t\t\t\t\tconst ellipsis = this.style.ellipsis || \"\";\n\t\t\t\t\t\t\tconst ellipsisMetrics = this._measureText(ellipsis, context);\n\t\t\t\t\t\t\tconst ellipsisWidth = ellipsisMetrics.actualBoundingBoxLeft + ellipsisMetrics.actualBoundingBoxRight;\n\n\t\t\t\t\t\t\t// Check fit\n\t\t\t\t\t\t\tif ((lineInfo.width + chunkWidth) > maxWidth) {\n\t\t\t\t\t\t\t\tconst excessWidth = maxWidth - lineInfo.width - ellipsisWidth;\n\t\t\t\t\t\t\t\tchunk.text = this._truncateText(context, chunk.text, excessWidth, breakWords);\n\t\t\t\t\t\t\t\tchunk.text += ellipsis;\n\t\t\t\t\t\t\t\tskipFurtherText = true;\n\t\t\t\t\t\t\t}\n\n\t\t\t\t\t\t}\n\t\t\t\t\t\telse if (wrap) {\n\t\t\t\t\t\t\t// Check fit\n\t\t\t\t\t\t\tif ((lineInfo.width + chunkWidth) > maxWidth) {\n\t\t\t\t\t\t\t\tconst excessWidth = maxWidth - lineInfo.width;\n\t\t\t\t\t\t\t\tconst tmpText = this._truncateText(\n\t\t\t\t\t\t\t\t\tcontext,\n\t\t\t\t\t\t\t\t\tchunk.text,\n\t\t\t\t\t\t\t\t\texcessWidth,\n\t\t\t\t\t\t\t\t\tfalse,\n\t\t\t\t\t\t\t\t\t(firstTextChunk && this.style.oversizedBehavior != \"wrap-no-break\")\n\t\t\t\t\t\t\t\t);\n\n\t\t\t\t\t\t\t\tif (tmpText == \"\") {\n\t\t\t\t\t\t\t\t\t// Unable to fit a single letter - hide the whole label\n\t\t\t\t\t\t\t\t\tthis.textVisible = true;\n\t\t\t\t\t\t\t\t\treturn false;\n\t\t\t\t\t\t\t\t}\n\t\t\t\t\t\t\t\t//skipFurtherText = true;\n\n\t\t\t\t\t\t\t\t//Add remaining chunks for the next line\n\t\t\t\t\t\t\t\tleftoverChunks = chunks.slice(index + 1);\n\n\t\t\t\t\t\t\t\t//Add remaining text of current chunk if it was forced-cut\n\t\t\t\t\t\t\t\tif ($utils.trim(tmpText) != $utils.trim(chunk.text)) {\n\t\t\t\t\t\t\t\t\tleftoverChunks.unshift({\n\t\t\t\t\t\t\t\t\t\ttype: \"value\",\n\t\t\t\t\t\t\t\t\t\ttext: chunk.text.substr(tmpText.length)\n\t\t\t\t\t\t\t\t\t});\n\t\t\t\t\t\t\t\t\tif (currentFormat) {\n\t\t\t\t\t\t\t\t\t\tleftoverChunks.unshift({\n\t\t\t\t\t\t\t\t\t\t\ttype: \"format\",\n\t\t\t\t\t\t\t\t\t\t\ttext: currentFormat\n\t\t\t\t\t\t\t\t\t\t});\n\t\t\t\t\t\t\t\t\t}\n\t\t\t\t\t\t\t\t}\n\n\t\t\t\t\t\t\t\t// Set current chunk (truncated)\n\t\t\t\t\t\t\t\tchunk.text = $utils.trim(tmpText);\n\n\t\t\t\t\t\t\t\tchunks = [];\n\t\t\t\t\t\t\t\tskipFurtherText = true;\n\t\t\t\t\t\t\t}\n\n\t\t\t\t\t\t}\n\n\t\t\t\t\t\t// Chunk width?\n\t\t\t\t\t\tlet leftBoundMod = 1;\n\t\t\t\t\t\tlet rightBoundMod = 1;\n\t\t\t\t\t\tif (currentStyle && currentChunkWidth && (currentChunkWidth > chunkWidth)) {\n\t\t\t\t\t\t\t// increase horizontal bounding boxes accordingly\n\t\t\t\t\t\t\tconst boundsMod = chunkWidth / currentChunkWidth\n\t\t\t\t\t\t\tswitch (this.style.textAlign) {\n\t\t\t\t\t\t\t\tcase \"right\":\n\t\t\t\t\t\t\t\tcase \"end\":\n\t\t\t\t\t\t\t\t\tleftBoundMod = boundsMod;\n\t\t\t\t\t\t\t\t\tbreak;\n\t\t\t\t\t\t\t\tcase \"center\":\n\t\t\t\t\t\t\t\t\tleftBoundMod = boundsMod;\n\t\t\t\t\t\t\t\t\trightBoundMod = boundsMod;\n\t\t\t\t\t\t\t\t\tbreak;\n\t\t\t\t\t\t\t\tdefault:\n\t\t\t\t\t\t\t\t\trightBoundMod = boundsMod;\n\t\t\t\t\t\t\t}\n\t\t\t\t\t\t\tchunkWidth = currentChunkWidth;\n\t\t\t\t\t\t}\n\n\t\t\t\t\t\tconst chunkHeight = metrics.actualBoundingBoxAscent + metrics.actualBoundingBoxDescent;\n\n\n\t\t\t\t\t\tif (chunkHeight > lineInfo.height) {\n\t\t\t\t\t\t\tlineInfo.height = chunkHeight;\n\t\t\t\t\t\t}\n\t\t\t\t\t\tif (metrics.actualBoundingBoxAscent > lineInfo.ascent) {\n\t\t\t\t\t\t\tlineInfo.ascent = metrics.actualBoundingBoxAscent;\n\t\t\t\t\t\t}\n\n\t\t\t\t\t\tlineInfo.width += chunkWidth;\n\t\t\t\t\t\tlineInfo.left += metrics.actualBoundingBoxLeft / leftBoundMod;\n\t\t\t\t\t\tlineInfo.right += metrics.actualBoundingBoxRight / rightBoundMod;\n\t\t\t\t\t\tlineInfo.textChunks.push({\n\t\t\t\t\t\t\tstyle: currentStyle,\n\t\t\t\t\t\t\tfill: currentFill,\n\t\t\t\t\t\t\ttext: chunk.text,\n\t\t\t\t\t\t\twidth: chunkWidth,\n\t\t\t\t\t\t\theight: chunkHeight,\n\t\t\t\t\t\t\tleft: metrics.actualBoundingBoxLeft,\n\t\t\t\t\t\t\tright: metrics.actualBoundingBoxRight,\n\t\t\t\t\t\t\tascent: metrics.actualBoundingBoxAscent,\n\t\t\t\t\t\t\toffsetX: 0,\n\t\t\t\t\t\t\toffsetY: 0,\n\t\t\t\t\t\t\ttextDecoration: currentDecoration,\n\t\t\t\t\t\t\tverticalAlign: currentVerticalAlign\n\t\t\t\t\t\t});\n\n\t\t\t\t\t\t//offsetX += chunkWidth;\n\n\t\t\t\t\t\tfirstTextChunk = false;\n\n\t\t\t\t\t}\n\n\t\t\t\t\tif (leftoverChunks) {\n\t\t\t\t\t\t//return false;\n\t\t\t\t\t}\n\n\t\t\t\t\treturn true;\n\n\t\t\t\t\t//}\n\t\t\t\t});\n\n\t\t\t\tif (this.style.lineHeight instanceof Percent) {\n\t\t\t\t\tlineInfo.height *= this.style.lineHeight.value;\n\t\t\t\t\tlineInfo.ascent *= this.style.lineHeight.value;\n\t\t\t\t}\n\t\t\t\telse {\n\t\t\t\t\tlineInfo.height *= this.style.lineHeight || 1.2;\n\t\t\t\t\tlineInfo.ascent *= this.style.lineHeight || 1.2;\n\t\t\t\t}\n\n\t\t\t\tif (minX < lineInfo.left) {\n\t\t\t\t\tminX = lineInfo.left;\n\t\t\t\t}\n\n\t\t\t\tif (maxX < lineInfo.right) {\n\t\t\t\t\tmaxX = lineInfo.right;\n\t\t\t\t}\n\n\t\t\t\tthis._textInfo!.push(lineInfo);\n\n\t\t\t\t//lineInfo.offsetY += lineInfo.ascent;\n\t\t\t\toffsetY += lineInfo.height;\n\n\t\t\t\t// Reset chunks so that it can proceed to the next line\n\t\t\t\tchunks = leftoverChunks || [];\n\t\t\t}\n\n\t\t});\n\n\t\tif (!styleRestored) {\n\t\t\tcontext.restore();\n\t\t\tghostContext.restore();\n\t\t}\n\n\t\t// Adjust chunk internal offsets\n\t\t$array.each(this._textInfo, (lineInfo, _index: number) => {\n\t\t\tlet currentChunkOffset = 0\n\t\t\t$array.each(lineInfo.textChunks, (chunk) => {\n\t\t\t\tchunk.offsetX = currentChunkOffset + chunk.left - lineInfo.left;\n\t\t\t\tchunk.offsetY += lineInfo.height - lineInfo.height * (this.style.baselineRatio || 0.19);\n\t\t\t\tcurrentChunkOffset += chunk.width;\n\n\t\t\t\tif (chunk.verticalAlign) {\n\t\t\t\t\tswitch (chunk.verticalAlign) {\n\t\t\t\t\t\tcase \"super\":\n\t\t\t\t\t\t\tchunk.offsetY -= lineInfo.height / 2 - chunk.height / 2;\n\t\t\t\t\t\t\tbreak;\n\t\t\t\t\t\tcase \"sub\":\n\t\t\t\t\t\t\tchunk.offsetY += chunk.height / 2;\n\t\t\t\t\t\t\tbreak;\n\t\t\t\t\t}\n\t\t\t\t}\n\t\t\t});\n\t\t});\n\n\t\tconst bounds = {\n\t\t\tleft: rtl ? -maxX : -minX,\n\t\t\ttop: 0,\n\t\t\tright: rtl ? minX : maxX,\n\t\t\tbottom: offsetY,\n\t\t};\n\n\n\t\t// We need to fit?\n\t\tif (oversizedBehavior !== \"none\") {\n\t\t\tconst ratio = this._fitRatio(bounds);\n\t\t\tif (ratio < 1) {\n\t\t\t\tif (oversizedBehavior == \"fit\") {\n\t\t\t\t\tif ($type.isNumber(this.style.minScale) && (ratio < this.style.minScale)) {\n\t\t\t\t\t\tthis.textVisible = false;\n\t\t\t\t\t\tbounds.left = 0;\n\t\t\t\t\t\tbounds.top = 0;\n\t\t\t\t\t\tbounds.right = 0;\n\t\t\t\t\t\tbounds.bottom = 0;\n\t\t\t\t\t}\n\t\t\t\t\telse {\n\t\t\t\t\t\tif (!this._originalScale || this._originalScale == 1) {\n\t\t\t\t\t\t\tthis._originalScale = this.scale;\n\t\t\t\t\t\t}\n\t\t\t\t\t\tthis.scale = ratio;\n\t\t\t\t\t\tthis.textVisible = true;\n\t\t\t\t\t}\n\t\t\t\t}\n\t\t\t\telse if (oversizedBehavior == \"hide\") {\n\t\t\t\t\tthis.textVisible = false;\n\t\t\t\t\tbounds.left = 0;\n\t\t\t\t\tbounds.top = 0;\n\t\t\t\t\tbounds.right = 0;\n\t\t\t\t\tbounds.bottom = 0;\n\t\t\t\t}\n\t\t\t\telse {\n\n\t\t\t\t\tswitch (this.style.textAlign) {\n\t\t\t\t\t\tcase \"right\":\n\t\t\t\t\t\tcase \"end\":\n\t\t\t\t\t\t\tbounds.left = rtl ? maxWidth : -maxWidth;\n\t\t\t\t\t\t\tbounds.right = 0;\n\t\t\t\t\t\t\tbreak;\n\t\t\t\t\t\tcase \"center\":\n\t\t\t\t\t\t\tbounds.left = -maxWidth / 2;\n\t\t\t\t\t\t\tbounds.right = maxWidth / 2;\n\t\t\t\t\t\t\tbreak;\n\t\t\t\t\t\tdefault:\n\t\t\t\t\t\t\tbounds.left = 0;\n\t\t\t\t\t\t\tbounds.right = rtl ? -maxWidth : maxWidth;\n\t\t\t\t\t}\n\n\t\t\t\t\tthis.scale = this._originalScale || 1;\n\t\t\t\t\tthis._originalScale = undefined;\n\t\t\t\t\tthis.textVisible = true;\n\t\t\t\t}\n\t\t\t}\n\t\t\telse {\n\t\t\t\tthis.scale = this._originalScale || 1;\n\t\t\t\tthis._originalScale = undefined;\n\t\t\t\tthis.textVisible = true;\n\t\t\t}\n\t\t}\n\n\t\tcontext.restore();\n\t\tghostContext.restore();\n\n\t\treturn bounds;\n\t}\n\n\tprotected _fitRatio(bounds: IBounds): number {\n\t\tconst maxW = this.style.maxWidth;\n\t\tconst maxH = this.style.maxHeight;\n\t\tif (!$type.isNumber(maxW) && !$type.isNumber(maxH)) {\n\t\t\treturn 1;\n\t\t}\n\t\tconst w = bounds.right - bounds.left;\n\t\tconst h = bounds.bottom - bounds.top;\n\t\treturn Math.min(maxW! / w || 1, maxH! / h || 1);\n\t}\n\n\tprotected _truncateText(context: CanvasRenderingContext2D, text: string, maxWidth: number, breakWords: boolean = false, fallbackBreakWords: boolean = true): string {\n\t\tlet width: number;\n\t\tdo {\n\t\t\tif (breakWords) {\n\t\t\t\ttext = text.slice(0, -1);\n\t\t\t}\n\t\t\telse {\n\t\t\t\tlet tmp = text.replace(/[^,;:!?\\\\\\/\\s​]+[,;:!?\\\\\\/\\s​]*$/g, \"\");\n\t\t\t\tif ((tmp == \"\" || tmp === text) && fallbackBreakWords) {\n\t\t\t\t\tbreakWords = true;\n\t\t\t\t}\n\t\t\t\telse if (tmp == \"\") {\n\t\t\t\t\treturn text;\n\t\t\t\t}\n\t\t\t\telse {\n\t\t\t\t\ttext = tmp;\n\t\t\t\t}\n\t\t\t}\n\t\t\tconst metrics = this._measureText(text, context);\n\t\t\twidth = metrics.actualBoundingBoxLeft + metrics.actualBoundingBoxRight;\n\t\t} while ((width > maxWidth) && text != \"\");\n\t\treturn text;\n\t}\n\n\tprotected _measureText(text: string, context: CanvasRenderingContext2D): TextMetrics {\n\t\tlet metrics = context.measureText(text);\n\t\tlet fakeMetrics: any = {};\n\t\tif (metrics.actualBoundingBoxAscent == null) {\n\t\t\tconst div = document.createElement(\"div\");\n\t\t\tdiv.innerText = text;\n\t\t\tdiv.style.visibility = \"hidden\";\n\t\t\tdiv.style.position = \"absolute\";\n\t\t\tdiv.style.top = \"-1000000px;\"\n\t\t\tdiv.style.fontFamily = this.style.fontFamily || \"\";\n\t\t\tdiv.style.fontSize = this.style.fontSize + \"\";\n\t\t\tdocument.body.appendChild(div);\n\t\t\tconst bbox = div.getBoundingClientRect();\n\t\t\tdocument.body.removeChild(div);\n\t\t\tconst h = bbox.height;\n\t\t\tconst w = metrics.width;\n\t\t\tlet left = 0;\n\t\t\tlet right = w;\n\n\t\t\tfakeMetrics = {\n\t\t\t\tactualBoundingBoxAscent: h,\n\t\t\t\tactualBoundingBoxDescent: 0,\n\t\t\t\tactualBoundingBoxLeft: left,\n\t\t\t\tactualBoundingBoxRight: right,\n\t\t\t\tfontBoundingBoxAscent: h,\n\t\t\t\tfontBoundingBoxDescent: 0,\n\t\t\t\twidth: w\n\t\t\t}\n\t\t\t//return fake;\n\t\t}\n\t\telse {\n\t\t\tfakeMetrics = {\n\t\t\t\tactualBoundingBoxAscent: metrics.actualBoundingBoxAscent,\n\t\t\t\tactualBoundingBoxDescent: metrics.actualBoundingBoxDescent,\n\t\t\t\tactualBoundingBoxLeft: metrics.actualBoundingBoxLeft,\n\t\t\t\tactualBoundingBoxRight: metrics.actualBoundingBoxRight,\n\t\t\t\tfontBoundingBoxAscent: metrics.actualBoundingBoxAscent,\n\t\t\t\tfontBoundingBoxDescent: metrics.actualBoundingBoxDescent,\n\t\t\t\twidth: metrics.width\n\t\t\t}\n\t\t}\n\n\t\tconst w = metrics.width;\n\t\tswitch (this.style.textAlign) {\n\t\t\tcase \"right\":\n\t\t\tcase \"end\":\n\t\t\t\tfakeMetrics.actualBoundingBoxLeft = w;\n\t\t\t\tfakeMetrics.actualBoundingBoxRight = 0;\n\t\t\t\tbreak;\n\t\t\tcase \"center\":\n\t\t\t\tfakeMetrics.actualBoundingBoxLeft = w / 2;\n\t\t\t\tfakeMetrics.actualBoundingBoxRight = w / 2;\n\t\t\t\tbreak;\n\t\t\tdefault:\n\t\t\t\tfakeMetrics.actualBoundingBoxLeft = 0;\n\t\t\t\tfakeMetrics.actualBoundingBoxRight = w;\n\t\t}\n\n\t\treturn fakeMetrics;\n\t}\n\n}\n\n/**\n * @ignore\n */\nexport class CanvasTextStyle implements ITextStyle {\n\t//public wordWrapWidth: number = 100;\n\tpublic fill?: Color | CanvasGradient | CanvasPattern;\n\tpublic fillOpacity?: number;\n\tpublic textAlign?: \"start\" | \"end\" | \"left\" | \"right\" | \"center\";\n\tpublic fontFamily?: string;\n\tpublic fontSize?: string | number;\n\tpublic fontWeight?: 'normal' | 'bold' | 'bolder' | 'lighter' | '100' | '200' | '300' | '400' | '500' | '600' | '700' | '800' | '900'\n\tpublic fontStyle?: 'normal' | 'italic' | 'oblique';\n\tpublic fontVariant?: \"normal\" | \"small-caps\";\n\tpublic textDecoration?: \"underline\" | \"line-through\";\n\tpublic shadowColor?: Color | null;\n\tpublic shadowBlur?: number;\n\tpublic shadowOffsetX?: number;\n\tpublic shadowOffsetY?: number;\n\tpublic shadowOpacity?: number;\n\t// leading?: number;\n\t// letterSpacing?: number;\n\tpublic lineHeight?: number | Percent = percent(120);\n\tpublic baselineRatio?: number = 0.19;\n\t// padding?: number;\n\t// stroke?: number;\n\t// strokeThickness?: number;\n\t// trim?: number;\n\t// wordWrap?: boolean;\n\tpublic direction?: \"ltr\" | \"rtl\";\n\tpublic textBaseline?: \"top\" | \"hanging\" | \"middle\" | \"alphabetic\" | \"ideographic\" | \"bottom\";\n\tpublic oversizedBehavior?: \"none\" | \"hide\" | \"fit\" | \"wrap\" | \"wrap-no-break\" | \"truncate\" = \"none\";\n\tpublic breakWords?: boolean = false;\n\tpublic ellipsis?: string = \"…\";\n\tpublic maxWidth?: number;\n\tpublic maxHeight?: number;\n\tpublic minScale?: number;\n\tpublic ignoreFormatting?: boolean = false;\n}\n\n/**\n * @ignore\n */\nexport class CanvasRadialText extends CanvasText implements IRadialText {\n\tpublic textType?: \"regular\" | \"circular\" | \"radial\" | \"aligned\" | \"adjusted\" = \"circular\";\n\tpublic radius?: number;\n\tpublic startAngle?: number;\n\tpublic inside?: boolean = false;\n\tpublic orientation?: \"inward\" | \"outward\" | \"auto\" = \"auto\";\n\tpublic kerning?: number = 0;\n\n\tprivate _textReversed: boolean = false;\n\n\tpublic _render(status: IStatus): void {\n\t\tswitch (this.textType) {\n\t\t\tcase \"circular\":\n\t\t\t\tthis._renderCircular(status);\n\t\t\t\tbreak;\n\t\t\tdefault:\n\t\t\t\tsuper._render(status);\n\t\t\t\tbreak;\n\t\t}\n\t}\n\n\tpublic _renderCircular(status: IStatus): void {\n\t\tif (this.textVisible) {\n\t\t\tthis._prerender(status);\n\n\t\t\tconst interactive = this._isInteractive(status);\n\t\t\tconst context = status.layer.context;\n\t\t\tconst layerDirty = status.layer.dirty;\n\t\t\tconst ghostContext = this._renderer._ghostLayer.context;\n\n\t\t\t// Savepoint\n\t\t\tcontext.save();\n\t\t\tif (interactive) {\n\t\t\t\tghostContext.save();\n\t\t\t}\n\n\t\t\t// We need measurements in order to properly position text for alignment\n\t\t\tif (!this._textInfo) {\n\t\t\t\tthis._measure(status);\n\t\t\t}\n\n\t\t\t// Init\n\t\t\tlet radius = (this.radius || 0);\n\t\t\tlet startAngle = (this.startAngle || 0);\n\t\t\tlet deltaAngle = 0;\n\t\t\tlet orientation = this.orientation;\n\t\t\tlet inward = orientation == \"auto\" ? \"auto\" : orientation == \"inward\";\n\t\t\tconst inside = this.inside;\n\t\t\tconst align = this.style.textAlign || \"left\";\n\t\t\tconst kerning = this.kerning || 0;\n\t\t\tlet clockwise = align == \"left\" ? 1 : -1;\n\t\t\tconst shouldReverse = !this._textReversed;\n\n\t\t\t// Check if we need to invert the whole stuff\n\t\t\tif (inward == \"auto\") {\n\t\t\t\t// Calc max angle so we know whether we need to flip it\n\t\t\t\tlet maxAngle = 0;\n\t\t\t\tlet midAngle = 0;\n\t\t\t\t$array.each(this._textInfo!, (line, _index) => {\n\t\t\t\t\tconst deltaAngle = startAngle + (line.width / (radius - line.height)) / 2 * -clockwise;\n\t\t\t\t\tif (deltaAngle > maxAngle) {\n\t\t\t\t\t\tmaxAngle = deltaAngle;\n\t\t\t\t\t}\n\t\t\t\t});\n\t\t\t\tif (align == \"left\") {\n\t\t\t\t\tmidAngle = (maxAngle + deltaAngle / 2) * $math.DEGREES;\n\t\t\t\t}\n\t\t\t\telse if (align == \"right\") {\n\t\t\t\t\tmidAngle = (maxAngle - deltaAngle / 2) * $math.DEGREES;\n\t\t\t\t}\n\t\t\t\telse {\n\t\t\t\t\tmidAngle = startAngle * $math.DEGREES;\n\t\t\t\t}\n\t\t\t\tmidAngle = $math.normalizeAngle(midAngle);\n\t\t\t\tinward = (midAngle >= 270) || (midAngle <= 90);\n\t\t\t}\n\n\t\t\tif (inward == true && shouldReverse) {\n\t\t\t\tthis._textInfo!.reverse();\n\t\t\t\tthis._textReversed = true;\n\t\t\t}\n\n\t\t\t// if ((inward == false && align == \"left\") || (inward == true && align == \"right\")) {\n\t\t\t// \tclockwise *= -1;\n\t\t\t// }\n\n\t\t\t// Process text info produced by _measure()\n\t\t\t$array.each(this._textInfo!, (line, _index) => {\n\n\t\t\t\tconst textHeight = line.height;\n\n\t\t\t\t// Adjust radius (for `inside = false`)\n\t\t\t\t// Radius adjustment for `inside = false` is below the line calculation\n\t\t\t\tif (!inside) {\n\t\t\t\t\tradius += textHeight;\n\t\t\t\t}\n\n\t\t\t\t// Reverse letters if we're painting them counter-clockwise\n\t\t\t\tif (((clockwise == -1 && inward) || (clockwise == 1 && !inward)) && shouldReverse) {\n\t\t\t\t\tline.textChunks.reverse();\n\t\t\t\t}\n\n\t\t\t\t// Init angles\n\t\t\t\tlet lineStartAngle = startAngle;\n\t\t\t\tdeltaAngle = 0;\n\n\t\t\t\t// Adjust for center-align\n\t\t\t\tif (align == \"center\") {\n\t\t\t\t\tlineStartAngle += (line.width / (radius - textHeight)) / 2 * -clockwise;\n\t\t\t\t\tdeltaAngle = lineStartAngle - startAngle;\n\t\t\t\t}\n\n\t\t\t\t// if (inward == \"auto\") {\n\t\t\t\t// \tlet midAngle;\n\t\t\t\t// \tif (align == \"left\") {\n\t\t\t\t// \t\tmidAngle = (lineStartAngle + deltaAngle / 2) * $math.DEGREES;\n\t\t\t\t// \t}\n\t\t\t\t// \telse if () {\n\t\t\t\t// \t\tmidAngle = (lineStartAngle - deltaAngle / 2) * $math.DEGREES;\n\t\t\t\t// \t}\n\t\t\t\t// \tinward = (midAngle >= 270) || (midAngle <= 90);\n\t\t\t\t// }\n\n\t\t\t\t// Rotate letters if they are facing outward\n\t\t\t\tlineStartAngle += (Math.PI * (inward ? 0 : 1)); // Rotate 180 if outward\n\n\t\t\t\t// Savepoint\n\t\t\t\tcontext.save();\n\t\t\t\tif (interactive) {\n\t\t\t\t\tghostContext.save();\n\t\t\t\t}\n\n\t\t\t\t// Assume starting angle\n\t\t\t\tcontext.rotate(lineStartAngle);\n\t\t\t\tif (interactive) {\n\t\t\t\t\tghostContext.rotate(lineStartAngle);\n\t\t\t\t}\n\n\t\t\t\tlet angleShift = 0;\n\t\t\t\t$array.each(line.textChunks, (chunk, _index) => {\n\n\t\t\t\t\t// Draw the letter\n\t\t\t\t\tconst char = chunk.text;\n\t\t\t\t\tconst charWidth = chunk.width;\n\n\t\t\t\t\t// Rotate half a letter\n\t\t\t\t\tangleShift = (charWidth / 2) / (radius - textHeight) * clockwise;\n\t\t\t\t\tcontext.rotate(angleShift);\n\t\t\t\t\tif (interactive) {\n\t\t\t\t\t\tghostContext.rotate(angleShift);\n\t\t\t\t\t}\n\n\t\t\t\t\t// Set style\n\t\t\t\t\tif (chunk.style) {\n\t\t\t\t\t\tcontext.save();\n\t\t\t\t\t\tghostContext.save();\n\n\t\t\t\t\t\tcontext.font = chunk.style;\n\t\t\t\t\t\tif (interactive) {\n\t\t\t\t\t\t\tghostContext.font = chunk.style;\n\t\t\t\t\t\t}\n\t\t\t\t\t}\n\n\t\t\t\t\tif (chunk.fill) {\n\t\t\t\t\t\tcontext.save();\n\t\t\t\t\t\tcontext.fillStyle = chunk.fill.toCSS();\n\t\t\t\t\t\t// Color does not affect ghostContext so we not set it\n\t\t\t\t\t}\n\n\t\t\t\t\t// Center letters\n\t\t\t\t\tcontext.textBaseline = \"middle\";\n\t\t\t\t\tcontext.textAlign = \"center\";\n\t\t\t\t\tif (interactive) {\n\t\t\t\t\t\tghostContext.textBaseline = \"middle\";\n\t\t\t\t\t\tghostContext.textAlign = \"center\";\n\t\t\t\t\t}\n\n\t\t\t\t\t// Plop the letter\n\t\t\t\t\tif (layerDirty) {\n\t\t\t\t\t\tcontext.fillText(char, 0, (inward ? 1 : -1) * (0 - radius + textHeight / 2));\n\t\t\t\t\t}\n\t\t\t\t\tif (interactive) {\n\t\t\t\t\t\tghostContext.fillText(char, 0, (inward ? 1 : -1) * (0 - radius + textHeight / 2));\n\t\t\t\t\t}\n\n\t\t\t\t\tif (chunk.fill) {\n\t\t\t\t\t\tcontext.restore();\n\t\t\t\t\t\t// Color does not affect ghostContext so we not set it\n\t\t\t\t\t}\n\n\t\t\t\t\t// Reset style\n\t\t\t\t\tif (chunk.style) {\n\t\t\t\t\t\tcontext.restore();\n\t\t\t\t\t\tghostContext.restore();\n\t\t\t\t\t}\n\n\t\t\t\t\t// Rotate half a letter and add spacing\n\t\t\t\t\tangleShift = (charWidth / 2 + kerning) / (radius - textHeight) * clockwise;\n\t\t\t\t\tcontext.rotate(angleShift);\n\t\t\t\t\tif (interactive) {\n\t\t\t\t\t\tghostContext.rotate(angleShift);\n\t\t\t\t\t}\n\n\t\t\t\t});\n\n\t\t\t\t// Restore angle\n\t\t\t\tcontext.restore();\n\t\t\t\tif (interactive) {\n\t\t\t\t\tghostContext.restore();\n\t\t\t\t}\n\n\t\t\t\t// Adjust radius (for `inside = true`)\n\t\t\t\tif (inside) {\n\t\t\t\t\tradius -= textHeight;\n\t\t\t\t}\n\n\t\t\t});\n\n\t\t\t// Restore\n\t\t\tcontext.restore();\n\t\t\tif (interactive) {\n\t\t\t\tghostContext.restore();\n\t\t\t}\n\t\t}\n\t}\n\n\tpublic _measure(status: IStatus): IBounds {\n\t\tswitch (this.textType) {\n\t\t\tcase \"circular\":\n\t\t\t\treturn this._measureCircular(status);\n\t\t\tdefault:\n\t\t\t\treturn super._measure(status);\n\t\t}\n\t}\n\n\tpublic _measureCircular(status: IStatus): IBounds {\n\t\tconst context = status.layer.context;\n\t\tconst ghostContext = this._renderer._ghostLayer.context;\n\t\tconst rtl = this.style.direction == \"rtl\";\n\n\t\tconst oversizedBehavior = this.style.oversizedBehavior;\n\t\tconst maxWidth = this.style.maxWidth!;\n\n\t\tconst truncate = $type.isNumber(maxWidth) && oversizedBehavior == \"truncate\";\n\t\tconst ellipsis = this.style.ellipsis || \"\";\n\t\tlet ellipsisMetrics: TextMetrics;\n\t\t//const wrap = $type.isNumber(maxWidth) && (oversizedBehavior == \"wrap\" || oversizedBehavior == \"wrap-no-break\");\n\n\n\t\t// Reset text info\n\t\tthis.textVisible = true;\n\t\tthis._textInfo = [];\n\t\tthis._textReversed = false;\n\n\t\t// Pre-render\n\t\tcontext.save();\n\t\tghostContext.save();\n\t\tthis._prerender(status, true);\n\n\t\t// Split up text into lines\n\t\tconst lines = this.text.toString().replace(/\\r/g, \"\").split(/\\n/);\n\t\tlet styleRestored = true;\n\t\tlet totalWidth = 0;\n\n\t\t// Iterate through the lines\n\t\tlet offsetY = 0;\n\t\t$array.each(lines, (line, _index) => {\n\n\t\t\t// Split up line into format/value chunks\n\t\t\tlet chunks = TextFormatter.chunk(line, false, this.style.ignoreFormatting);\n\n\t\t\t// Init line object\n\t\t\tlet lineInfo: ILine = {\n\t\t\t\toffsetY: offsetY,\n\t\t\t\tascent: 0,\n\t\t\t\twidth: 0,\n\t\t\t\theight: 0,\n\t\t\t\tleft: 0,\n\t\t\t\tright: 0,\n\t\t\t\ttextChunks: []\n\t\t\t};\n\n\t\t\tlet currentStyle: string | undefined;\n\t\t\tlet currentFill: Color | undefined;\n\t\t\tlet currentChunkWidth: number | undefined;\n\n\t\t\t//while(chunk = chunks.shift()) {\n\t\t\t$array.each(chunks, (chunk, _index) => {\n\n\t\t\t\t// Format chunk\n\t\t\t\tif (chunk.type == \"format\") {\n\t\t\t\t\tif (chunk.text == \"[/]\") {\n\t\t\t\t\t\tif (!styleRestored) {\n\t\t\t\t\t\t\tcontext.restore();\n\t\t\t\t\t\t\tghostContext.restore();\n\t\t\t\t\t\t\tstyleRestored = true;\n\t\t\t\t\t\t}\n\t\t\t\t\t\tcurrentFill = undefined;\n\t\t\t\t\t\tcurrentStyle = undefined;\n\t\t\t\t\t\tcurrentChunkWidth = undefined;\n\t\t\t\t\t}\n\t\t\t\t\telse {\n\t\t\t\t\t\tlet format = TextFormatter.getTextStyle(chunk.text);\n\t\t\t\t\t\tconst fontStyle = this._getFontStyle(format);\n\t\t\t\t\t\tcontext.save();\n\t\t\t\t\t\tghostContext.save();\n\t\t\t\t\t\tcontext.font = fontStyle;\n\t\t\t\t\t\tcurrentStyle = fontStyle;\n\t\t\t\t\t\tif (format.fill) {\n\t\t\t\t\t\t\tcurrentFill = <Color>format.fill;\n\t\t\t\t\t\t}\n\t\t\t\t\t\tif ((<any>format).width) {\n\t\t\t\t\t\t\tcurrentChunkWidth = $type.toNumber((<any>format).width);\n\t\t\t\t\t\t}\n\t\t\t\t\t\tstyleRestored = false;\n\t\t\t\t\t}\n\n\t\t\t\t\tif (truncate) {\n\t\t\t\t\t\tellipsisMetrics = this._measureText(ellipsis, context);\n\t\t\t\t\t}\n\t\t\t\t}\n\n\t\t\t\t// Text format\n\t\t\t\telse if (chunk.type == \"value\") {\n\n\t\t\t\t\t// Measure each letter\n\t\t\t\t\tlet chars = chunk.text.match(/./ug) || [];\n\t\t\t\t\tif (rtl) {\n\t\t\t\t\t\tchars = $utils.splitString(chunk.text);\n\t\t\t\t\t\tchars.reverse();\n\t\t\t\t\t}\n\n\t\t\t\t\tfor (let i = 0; i < chars.length; i++) {\n\n\t\t\t\t\t\tconst char = chars[i];\n\n\t\t\t\t\t\t// Measure\n\t\t\t\t\t\tconst metrics = this._measureText(char, context);\n\t\t\t\t\t\tlet chunkWidth = metrics.width;\n\n\t\t\t\t\t\t// Chunk width?\n\t\t\t\t\t\tif (currentStyle && currentChunkWidth && (currentChunkWidth > chunkWidth)) {\n\t\t\t\t\t\t\tchunkWidth = currentChunkWidth;\n\t\t\t\t\t\t}\n\n\t\t\t\t\t\tconst chunkHeight = metrics.actualBoundingBoxAscent + metrics.actualBoundingBoxDescent;\n\t\t\t\t\t\tif (chunkHeight > lineInfo.height) {\n\t\t\t\t\t\t\tlineInfo.height = chunkHeight;\n\t\t\t\t\t\t}\n\t\t\t\t\t\tif (metrics.actualBoundingBoxAscent > lineInfo.ascent) {\n\t\t\t\t\t\t\tlineInfo.ascent = metrics.actualBoundingBoxAscent;\n\t\t\t\t\t\t}\n\n\t\t\t\t\t\ttotalWidth += chunkWidth;\n\n\t\t\t\t\t\t// Handle oversized behavior\n\t\t\t\t\t\tif (truncate) {\n\t\t\t\t\t\t\t// Measure ellipsis and check if it fits\n\t\t\t\t\t\t\tif (!ellipsisMetrics) {\n\t\t\t\t\t\t\t\tellipsisMetrics = this._measureText(ellipsis, context);\n\t\t\t\t\t\t\t}\n\t\t\t\t\t\t\tconst ellipsisWidth = ellipsisMetrics.actualBoundingBoxLeft + ellipsisMetrics.actualBoundingBoxRight;\n\t\t\t\t\t\t\t//totalWidth += ellipsisWidth;\n\t\t\t\t\t\t\tif ((totalWidth + ellipsisWidth) > maxWidth) {\n\t\t\t\t\t\t\t\tif (lineInfo.textChunks.length == 1) {\n\t\t\t\t\t\t\t\t\tthis.textVisible = false;\n\t\t\t\t\t\t\t\t}\n\t\t\t\t\t\t\t\telse {\n\t\t\t\t\t\t\t\t\tlineInfo.width += ellipsisWidth;\n\t\t\t\t\t\t\t\t\tlineInfo.left += ellipsisMetrics.actualBoundingBoxLeft;\n\t\t\t\t\t\t\t\t\tlineInfo.right += ellipsisMetrics.actualBoundingBoxRight;\n\t\t\t\t\t\t\t\t\tlineInfo.textChunks.push({\n\t\t\t\t\t\t\t\t\t\tstyle: currentStyle,\n\t\t\t\t\t\t\t\t\t\tfill: currentFill,\n\t\t\t\t\t\t\t\t\t\ttext: ellipsis,\n\t\t\t\t\t\t\t\t\t\twidth: ellipsisWidth,\n\t\t\t\t\t\t\t\t\t\theight: chunkHeight + ellipsisMetrics.actualBoundingBoxDescent,\n\t\t\t\t\t\t\t\t\t\tleft: ellipsisMetrics.actualBoundingBoxLeft,\n\t\t\t\t\t\t\t\t\t\tright: ellipsisMetrics.actualBoundingBoxRight,\n\t\t\t\t\t\t\t\t\t\tascent: ellipsisMetrics.actualBoundingBoxAscent,\n\t\t\t\t\t\t\t\t\t\toffsetX: 0,\n\t\t\t\t\t\t\t\t\t\toffsetY: chunkHeight,\n\t\t\t\t\t\t\t\t\t\ttextDecoration: undefined\n\t\t\t\t\t\t\t\t\t});\n\t\t\t\t\t\t\t\t}\n\t\t\t\t\t\t\t\tbreak;\n\t\t\t\t\t\t\t}\n\t\t\t\t\t\t}\n\n\t\t\t\t\t\tlineInfo.width += chunkWidth;\n\t\t\t\t\t\tlineInfo.left += metrics.actualBoundingBoxLeft;\n\t\t\t\t\t\tlineInfo.right += metrics.actualBoundingBoxRight;\n\t\t\t\t\t\tlineInfo.textChunks.push({\n\t\t\t\t\t\t\tstyle: currentStyle,\n\t\t\t\t\t\t\tfill: currentFill,\n\t\t\t\t\t\t\ttext: char,\n\t\t\t\t\t\t\twidth: chunkWidth,\n\t\t\t\t\t\t\theight: chunkHeight + metrics.actualBoundingBoxDescent,\n\t\t\t\t\t\t\tleft: metrics.actualBoundingBoxLeft,\n\t\t\t\t\t\t\tright: metrics.actualBoundingBoxRight,\n\t\t\t\t\t\t\tascent: metrics.actualBoundingBoxAscent,\n\t\t\t\t\t\t\toffsetX: 0,\n\t\t\t\t\t\t\toffsetY: chunkHeight,\n\t\t\t\t\t\t\ttextDecoration: undefined\n\t\t\t\t\t\t});\n\n\t\t\t\t\t\tif (rtl) {\n\t\t\t\t\t\t\t// @todo still needed?\n\t\t\t\t\t\t\t//break;\n\t\t\t\t\t\t}\n\n\t\t\t\t\t}\n\n\t\t\t\t}\n\t\t\t});\n\n\t\t\tif (this.style.lineHeight instanceof Percent) {\n\t\t\t\tlineInfo.height *= this.style.lineHeight.value;\n\t\t\t}\n\t\t\telse {\n\t\t\t\tlineInfo.height *= this.style.lineHeight || 1.2;\n\t\t\t}\n\n\t\t\tthis._textInfo!.push(lineInfo);\n\n\t\t\t//lineInfo.offsetY += lineInfo.ascent;\n\t\t\toffsetY += lineInfo.height;\n\n\n\t\t});\n\n\t\tif (!styleRestored) {\n\t\t\tcontext.restore();\n\t\t\tghostContext.restore();\n\t\t}\n\n\n\t\tif (oversizedBehavior == \"hide\" && (totalWidth > maxWidth)) {\n\t\t\tthis.textVisible = false;\n\t\t}\n\n\t\t// Adjust chunk internal offsets\n\t\t$array.each(this._textInfo, (lineInfo) => {\n\t\t\t$array.each(lineInfo.textChunks, (chunk) => {\n\t\t\t\tchunk.offsetY += Math.round((lineInfo.height - chunk.height + (lineInfo.ascent - chunk.ascent)) / 2);\n\t\t\t});\n\t\t});\n\n\t\tcontext.restore();\n\t\tghostContext.restore();\n\n\t\treturn {\n\t\t\tleft: 0,\n\t\t\ttop: 0,\n\t\t\tright: 0,\n\t\t\tbottom: 0,\n\t\t};\n\t}\n\n}\n\n/**\n * @ignore\n */\nexport class CanvasImage extends CanvasDisplayObject implements IPicture {\n\tpublic width: number | undefined;\n\tpublic height: number | undefined;\n\tpublic image: HTMLImageElement | undefined;\n\tpublic tainted?: boolean;\n\n\tpublic shadowColor?: Color;\n\tpublic shadowBlur?: number;\n\tpublic shadowOffsetX?: number;\n\tpublic shadowOffsetY?: number;\n\tpublic shadowOpacity?: number;\n\n\tprotected _imageMask: HTMLCanvasElement | undefined;\n\n\tconstructor(renderer: CanvasRenderer, image: HTMLImageElement | undefined) {\n\t\tsuper(renderer);\n\t\tthis.image = image;\n\t}\n\n\tprotected _dispose(): void {\n\t\tsuper._dispose();\n\n\t\tif (this._imageMask) {\n\t\t\tclearCanvas(this._imageMask);\n\t\t}\n\t}\n\n\tgetLocalBounds(): IBounds {\n\t\tif (!this._localBounds) {\n\n\n\t\t\tlet w = 0;\n\t\t\tlet h = 0;\n\n\t\t\tif (this.width) {\n\t\t\t\tw = this.width;\n\t\t\t}\n\t\t\tif (this.height) {\n\t\t\t\th = this.height;\n\t\t\t}\n\n\t\t\tthis._localBounds = {\n\t\t\t\tleft: 0,\n\t\t\t\ttop: 0,\n\t\t\t\tright: w,\n\t\t\t\tbottom: h\n\t\t\t};\n\n\t\t\tthis._addBounds(this._localBounds);\n\t\t}\n\t\treturn this._localBounds;\n\t}\n\n\tprotected _render(status: IStatus): void {\n\t\tsuper._render(status);\n\n\t\tif (this.image) {\n\t\t\tif (this.tainted === undefined) {\n\t\t\t\tthis.tainted = isTainted(this.image);\n\t\t\t\tstatus.layer.tainted = true;\n\t\t\t}\n\n\t\t\tif (this.tainted && this._renderer._omitTainted) {\n\t\t\t\treturn;\n\t\t\t}\n\n\t\t\tif (status.layer.dirty) {\n\n\t\t\t\tif (this.shadowColor) {\n\t\t\t\t\tstatus.layer.context.shadowColor = this.shadowColor.toCSS(this.shadowOpacity || 1);\n\t\t\t\t}\n\t\t\t\tif (this.shadowBlur) {\n\t\t\t\t\tstatus.layer.context.shadowBlur = this.shadowBlur;\n\t\t\t\t}\n\t\t\t\tif (this.shadowOffsetX) {\n\t\t\t\t\tstatus.layer.context.shadowOffsetX = this.shadowOffsetX;\n\t\t\t\t}\n\t\t\t\tif (this.shadowOffsetY) {\n\t\t\t\t\tstatus.layer.context.shadowOffsetY = this.shadowOffsetY;\n\t\t\t\t}\n\n\t\t\t\t// TODO should this round ?\n\t\t\t\tconst width = this.width || this.image.naturalWidth;\n\t\t\t\tconst height = this.height || this.image.naturalHeight;\n\n\t\t\t\tstatus.layer.context.drawImage(this.image, 0, 0, width, height);\n\t\t\t}\n\n\t\t\tif (this.interactive && this._isInteractive(status)) {\n\t\t\t\tconst mask = this._getMask(this.image);\n\n\t\t\t\tthis._renderer._ghostLayer.context.drawImage(mask, 0, 0);\n\t\t\t}\n\t\t}\n\t}\n\n\tpublic clear(): void {\n\t\tsuper.clear();\n\t\tthis.image = undefined;\n\t\tthis._imageMask = undefined;\n\t}\n\n\tprotected _getMask(image: HTMLImageElement): HTMLCanvasElement {\n\t\tif (this._imageMask === undefined) {\n\t\t\t// TODO should this round ?\n\t\t\tconst width = this.width || image.naturalWidth;\n\t\t\tconst height = this.height || image.naturalHeight;\n\n\t\t\t// We need to create a second canvas because destination-in clears out the entire canvas\n\t\t\tconst canvas = document.createElement(\"canvas\");\n\t\t\tcanvas.width = width;\n\t\t\tcanvas.height = height;\n\n\t\t\tconst context = canvas.getContext(\"2d\")!;\n\n\t\t\tcontext.imageSmoothingEnabled = false;\n\n\t\t\tcontext.fillStyle = this._getColorId();\n\t\t\tcontext.fillRect(0, 0, width, height);\n\n\t\t\tif (!isTainted(image)) {\n\t\t\t\tcontext.globalCompositeOperation = \"destination-in\";\n\t\t\t\tcontext.drawImage(image, 0, 0, width, height);\n\t\t\t}\n\n\t\t\tthis._imageMask = canvas;\n\t\t}\n\n\t\treturn this._imageMask;\n\t}\n\n}\n\n/**\n * @ignore\n */\nexport class CanvasRendererEvent<A> implements IRendererEvent<A> {\n\tpublic id: Id;\n\tpublic simulated: boolean = false;\n\tpublic native: boolean = true;\n\n\tconstructor(public event: A, public originalPoint: IPoint, public point: IPoint, public bbox: DOMRect) {\n\t\tif ($utils.supports(\"touchevents\") && event instanceof Touch) {\n\t\t\tthis.id = event.identifier;\n\n\t\t} else {\n\t\t\tthis.id = null;\n\t\t}\n\t}\n}\n\n/**\n * @ignore\n */\ninterface IEvent<Key extends keyof IRendererEvents> {\n\tobject: CanvasDisplayObject;\n\tcontext: unknown;\n\tcallback: (event: IRendererEvents[Key]) => void;\n\tdisposed: boolean;\n}\n\n/**\n * @ignore\n */\ninterface IEvents<Key extends keyof IRendererEvents> {\n\tdisposer: IDisposer;\n\tcallbacks: Array<IEvent<Key>>;\n\tdispatching: boolean;\n\tcleanup: boolean;\n}\n\n/**\n * @ignore\n */\nexport class CanvasRenderer extends ArrayDisposer implements IRenderer, IDisposer {\n\tpublic view: HTMLElement = document.createElement(\"div\");\n\tprotected _layerDom: HTMLElement = document.createElement(\"div\");\n\n\tpublic layers: Array<CanvasLayer> = [];\n\tpublic _dirtyLayers: Array<CanvasLayer> = [];\n\tpublic defaultLayer: CanvasLayer = this.getLayer(0);\n\n\tpublic _ghostLayer: GhostLayer = new GhostLayer();\n\n\tprotected _patternCanvas: HTMLCanvasElement = document.createElement(\"canvas\");\n\tprotected _patternContext: CanvasRenderingContext2D = this._patternCanvas.getContext(\"2d\")!;\n\n\tprotected _realWidth: number = 0;\n\tprotected _realHeight: number = 0;\n\n\tprotected _calculatedWidth: number = 0;\n\tprotected _calculatedHeight: number = 0;\n\n\tpublic resolution: number;\n\tpublic interactionsEnabled: boolean = true;\n\n\tprotected _listeners: { [key: string]: CounterDisposer } = {};\n\tprotected _events: { [Key in keyof IRendererEvents]?: IEvents<Key> } = {};\n\n\tprotected _colorId: number = 0;\n\tprotected _colorMap: { [color: string]: CanvasDisplayObject } = {};\n\n\tpublic _forceInteractive: number = 0;\n\tpublic _omitTainted: boolean = false;\n\n\t// TODO this should store the Id as well\n\tpublic _hovering: Set<CanvasDisplayObject> = new Set();\n\tpublic _dragging: Array<{ id: Id, value: CanvasDisplayObject }> = [];\n\tpublic _mousedown: Array<{ id: Id, value: CanvasDisplayObject }> = [];\n\n\tprotected _lastPointerMoveEvent: { events: Array<IPointerEvent>, target: Node | null, native: boolean } | undefined;\n\n\tpublic tapToActivate: boolean = false;\n\tpublic tapToActivateTimeout: number = 3000;\n\tpublic _touchActive: boolean = false;\n\tprotected _touchActiveTimeout?: number;\n\n\t/*protected _mouseMoveThrottler: Throttler = new Throttler(() => {\n\t\tthis._dispatchGlobalMousemove(this._lastPointerMoveEvent.event, this._lastPointerMoveEvent.native);\n\t});\n\t*/\n\n\tpublic resetImageArray() {\n\t\tthis._ghostLayer.imageArray = undefined;\n\t}\n\n\tconstructor(resolution?: number) {\n\t\tsuper();\n\n\t\tif (resolution == null) {\n\t\t\tthis.resolution = window.devicePixelRatio;\n\t\t} else {\n\t\t\tthis.resolution = resolution;\n\t\t}\n\n\t\tthis.view.style.position = \"absolute\";\n\t\tthis.view.setAttribute(\"aria-hidden\", \"true\");\n\t\tthis.view.appendChild(this._layerDom);\n\n\t\tthis._disposers.push(new Disposer(() => {\n\t\t\t$object.each(this._events, (_key, events) => {\n\t\t\t\tevents.disposer.dispose();\n\t\t\t});\n\n\t\t\t$array.each(this.layers, (layer) => {\n\t\t\t\tclearCanvas(layer.view);\n\n\t\t\t\tif (layer.exportableView) {\n\t\t\t\t\tclearCanvas(layer.exportableView);\n\t\t\t\t}\n\t\t\t});\n\n\t\t\tclearCanvas(this._ghostLayer.view);\n\t\t\tclearCanvas(this._patternCanvas);\n\t\t}));\n\n\t\t/*\n\t\tthis._disposers.push($utils.addEventListener(this._ghostLayer.view, \"click\", (originalEvent: MouseEvent) => {\n\t\t\tconst event = this.getEvent(originalEvent);\n\t\t\tconst target = this._getHitTarget(event.originalPoint, event.bbox);\n\t\t\tconsole.debug(target);\n\t\t}));\n\t\t*/\n\n\t\t// Monitor for possible pixel ratio changes (when page is zoomed)\n\t\tthis._disposers.push($utils.onZoom(() => {\n\t\t\tif (resolution == null) {\n\t\t\t\tthis.resolution = window.devicePixelRatio;\n\t\t\t}\n\t\t}));\n\n\t\t// We need this in order top prevent default touch gestures when dragging\n\t\t// draggable elements\n\t\tif ($utils.supports(\"touchevents\")) {\n\t\t\tconst listener = (ev: any) => {\n\t\t\t\tif (this._dragging.length !== 0) {\n\t\t\t\t\t$array.eachContinue(this._dragging, (item) => {\n\t\t\t\t\t\tif (item.value.shouldCancelTouch()) {\n\t\t\t\t\t\t\tev.preventDefault();\n\t\t\t\t\t\t\treturn false;\n\t\t\t\t\t\t}\n\t\t\t\t\t\treturn true;\n\t\t\t\t\t});\n\t\t\t\t}\n\n\t\t\t\t// If touch down happends, delay touch out\n\t\t\t\tif (this._touchActiveTimeout) {\n\t\t\t\t\tthis._delayTouchDeactivate();\n\t\t\t\t}\n\t\t\t};\n\n\t\t\tthis._disposers.push($utils.addEventListener(window, \"touchstart\", listener, { passive: false }));\n\t\t\tthis._disposers.push($utils.addEventListener(this.view, \"touchstart\", listener, { passive: false }));\n\n\t\t\tthis._disposers.push($utils.addEventListener(this.view, \"touchmove\", () => {\n\t\t\t\t// If touch is moving, delay touch out\n\t\t\t\tif (this._touchActiveTimeout) {\n\t\t\t\t\tthis._delayTouchDeactivate();\n\t\t\t\t}\n\t\t\t}, { passive: true }));\n\n\t\t\tthis._disposers.push($utils.addEventListener(window, \"click\", (_ev: any) => {\n\t\t\t\tthis._touchActive = false;\n\t\t\t}, { passive: true }));\n\n\t\t\tthis._disposers.push($utils.addEventListener(this.view, \"click\", (_ev: any) => {\n\t\t\t\twindow.setTimeout(() => {\n\t\t\t\t\tthis._touchActive = true;\n\t\t\t\t\tthis._delayTouchDeactivate();\n\t\t\t\t}, 100);\n\t\t\t}, { passive: true }));\n\n\t\t}\n\n\t\t// Prevent scrolling of the window when hovering on \"wheelable\" object\n\t\tif ($utils.supports(\"wheelevents\")) {\n\t\t\tthis._disposers.push($utils.addEventListener(this.view, \"wheel\", (ev) => {\n\t\t\t\tlet prevent = false;\n\t\t\t\tthis._hovering.forEach((obj) => {\n\t\t\t\t\tif (obj.wheelable) {\n\t\t\t\t\t\tprevent = true;\n\t\t\t\t\t\treturn false;\n\t\t\t\t\t}\n\t\t\t\t});\n\t\t\t\tif (prevent) {\n\t\t\t\t\tev.preventDefault();\n\t\t\t\t}\n\t\t\t}, { passive: false }));\n\t\t}\n\n\t}\n\n\tprotected _delayTouchDeactivate(): void {\n\t\tif (this._touchActiveTimeout) {\n\t\t\tclearTimeout(this._touchActiveTimeout);\n\t\t}\n\t\tif (this.tapToActivateTimeout > 0) {\n\t\t\tthis._touchActiveTimeout = window.setTimeout(() => {\n\t\t\t\tthis._touchActive = false;\n\t\t\t}, this.tapToActivateTimeout);\n\t\t}\n\t}\n\n\tpublic get debugGhostView(): boolean {\n\t\treturn !!this._ghostLayer.view.parentNode;\n\t}\n\n\tpublic set debugGhostView(value: boolean) {\n\t\tif (value) {\n\t\t\tif (!this._ghostLayer.view.parentNode) {\n\t\t\t\tthis.view.appendChild(this._ghostLayer.view);\n\t\t\t}\n\n\t\t} else {\n\t\t\tif (this._ghostLayer.view.parentNode) {\n\t\t\t\tthis._ghostLayer.view.parentNode.removeChild(this._ghostLayer.view);\n\t\t\t}\n\t\t}\n\t}\n\n\tcreateLinearGradient(x1: number, y1: number, x2: number, y2: number): CanvasGradient {\n\t\treturn this.defaultLayer.context.createLinearGradient(x1, y1, x2, y2);\n\t}\n\n\tcreateRadialGradient(x1: number, y1: number, radius1: number, x2: number, y2: number, radius2: number): CanvasGradient {\n\t\treturn this.defaultLayer.context.createRadialGradient(x1, y1, radius1, x2, y2, radius2);\n\t}\n\n\tcreatePattern(graphics: CanvasGraphics, background: CanvasGraphics, repetition: string, width: number, height: number): CanvasPattern {\n\t\t// const patternCanvas = document.createElement(\"canvas\");\n\t\t// const patternContext = patternCanvas.getContext(\"2d\")!;\n\t\t// patternCanvas.width = width;\n\t\t// patternCanvas.height = height;\n\t\t// if (fill) {\n\t\t// \tpatternContext.fillStyle = fill.toCSS();\n\t\t// \tpatternContext.fillRect(0, 0, patternCanvas.width, patternCanvas.height);\n\t\t// }\n\n\t\t// const layer = {\n\t\t// \tview: patternCanvas,\n\t\t// \tcontext: patternContext,\n\t\t// \tvisible: true,\n\t\t// \torder: 0,\n\t\t// \twidth: width,\n\t\t// \theight: height,\n\t\t// \tdirty: true\n\t\t// };\n\n\t\t// // patternContext.arc(0, 0, 50, 0, .5 * Math.PI);\n\t\t// // patternContext.stroke();\n\n\t\t// image.targetLayer = layer;\n\t\t// image.render(layer);\n\n\t\t//this._layerDom.appendChild(patternCanvas);\n\n\t\tthis._patternCanvas.width = width;\n\t\tthis._patternCanvas.height = height;\n\n\t\tthis._patternContext.clearRect(0, 0, width, height);\n\n\t\t// patternCanvas.style.width = width * this.resolution + \"px\";\n\t\t// patternCanvas.style.height = height * this.resolution + \"px\";\n\n\t\tbackground.renderDetached(this._patternContext);\n\t\tgraphics.renderDetached(this._patternContext);\n\n\t\treturn this._patternContext.createPattern(this._patternCanvas, repetition)!;\n\t}\n\n\n\n\tmakeContainer(): CanvasContainer {\n\t\treturn new CanvasContainer(this);\n\t}\n\n\tmakeGraphics(): CanvasGraphics {\n\t\treturn new CanvasGraphics(this);\n\t}\n\n\tmakeText(text: string, style: CanvasTextStyle): CanvasText {\n\t\treturn new CanvasText(this, text, style);\n\t}\n\n\tmakeTextStyle(): CanvasTextStyle {\n\t\treturn new CanvasTextStyle();\n\t}\n\n\tmakeRadialText(text: string, style: CanvasTextStyle): CanvasRadialText {\n\t\treturn new CanvasRadialText(this, text, style);\n\t}\n\n\tmakePicture(image: HTMLImageElement | undefined): CanvasImage {\n\t\treturn new CanvasImage(this, image);\n\t}\n\n\tresizeLayer(layer: CanvasLayer) {\n\t\tlayer.resize(this._calculatedWidth, this._calculatedHeight, this._calculatedWidth, this._calculatedHeight, this.resolution);\n\t}\n\n\tresizeGhost() {\n\t\tthis._ghostLayer.resize(this._calculatedWidth, this._calculatedHeight, this._calculatedWidth, this._calculatedHeight, this.resolution);\n\t}\n\n\tresize(realWidth: number, realHeight: number, calculatedWidth: number, calculatedHeight: number): void {\n\t\tthis._realWidth = realWidth;\n\t\tthis._realHeight = realHeight;\n\n\t\tthis._calculatedWidth = calculatedWidth;\n\t\tthis._calculatedHeight = calculatedHeight;\n\n\t\t$array.each(this.layers, (layer) => {\n\t\t\tif (layer) {\n\t\t\t\tlayer.dirty = true;\n\t\t\t\tthis.resizeLayer(layer);\n\t\t\t}\n\t\t});\n\n\t\tthis.resizeGhost();\n\n\t\tthis.view.style.width = calculatedWidth + \"px\";\n\t\tthis.view.style.height = calculatedHeight + \"px\";\n\t}\n\n\tprivate createDetachedLayer(willReadFrequently: boolean = false): CanvasLayer {\n\t\tconst view = document.createElement(\"canvas\");\n\t\tconst context = view.getContext(\"2d\", { willReadFrequently: willReadFrequently })! as CanvasRenderingContext2D;\n\n\t\tconst layer = new CanvasLayer(view, context);\n\n\t\tview.style.position = \"absolute\";\n\t\tview.style.top = \"0px\";\n\t\tview.style.left = \"0px\";\n\n\t\treturn layer;\n\t}\n\n\tgetLayerByOrder(order: number): CanvasLayer | undefined {\n\t\tconst layers = this.layers;\n\t\tconst length = layers.length;\n\t\tfor (let i = 0; i < length; i++) {\n\t\t\tconst layer = layers[i];\n\t\t\tif (layer.order == order) {\n\t\t\t\treturn layer;\n\t\t\t}\n\t\t}\n\t}\n\n\tgetLayer(order: number, visible: boolean = true): CanvasLayer {\n\t\tlet existingLayer = this.getLayerByOrder(order);\n\t\tif (existingLayer) {\n\t\t\treturn existingLayer;\n\t\t}\n\n\t\tconst layer = this.createDetachedLayer(order == 99);\n\t\tlayer.order = order;\n\t\tlayer.visible = visible;\n\n\t\tlayer.view.className = \"am5-layer-\" + order;\n\n\t\tif (layer.visible) {\n\t\t\tthis.resizeLayer(layer);\n\t\t}\n\n\t\tconst layers = this.layers;\n\n\t\tlayers.push(layer);\n\n\t\tlayers.sort((a, b) => {\n\t\t\tif (a.order > b.order) {\n\t\t\t\treturn 1;\n\t\t\t}\n\t\t\telse if (a.order < b.order) {\n\t\t\t\treturn -1;\n\t\t\t}\n\t\t\telse {\n\t\t\t\treturn 0;\n\t\t\t}\n\t\t});\n\n\t\tconst length = layers.length;\n\t\tconst layerIndex = $array.indexOf(layers, layer);\n\t\tlet next;\n\n\t\tfor (let i = layerIndex + 1; i < length; i++) {\n\t\t\tif (layers[i].visible) {\n\t\t\t\tnext = layers[i];\n\t\t\t\tbreak;\n\t\t\t}\n\t\t}\n\n\t\tif (layer.visible) {\n\t\t\tif (next === undefined) {\n\t\t\t\tthis._layerDom.appendChild(layer.view);\n\n\t\t\t} else {\n\t\t\t\tthis._layerDom.insertBefore(layer.view, next.view);\n\t\t\t}\n\t\t}\n\n\t\treturn layer;\n\t}\n\n\trender(root: CanvasDisplayObject): void {\n\n\t\tthis._dirtyLayers.length = 0;\n\n\t\t$array.each(this.layers, (layer) => {\n\t\t\tif (layer) {\n\t\t\t\tif (layer.dirty && layer.visible) {\n\t\t\t\t\tthis._dirtyLayers.push(layer);\n\t\t\t\t\tlayer.clear();\n\t\t\t\t}\n\t\t\t}\n\t\t});\n\n\t\tthis._ghostLayer.clear();\n\n\t\troot.render({\n\t\t\tinactive: null,\n\t\t\tlayer: this.defaultLayer,\n\t\t});\n\n\t\tthis._ghostLayer.context.restore();\n\n\t\t//setTimeout(() => {\n\n\t\t// Remove this after the Chrome bug is fixed:\n\t\t// https://bugs.chromium.org/p/chromium/issues/detail?id=1279394\n\t\t$array.each(this.layers, (layer) => {\n\t\t\tif (layer) {\n\t\t\t\tconst context = layer.context;\n\t\t\t\tcontext.beginPath();\n\t\t\t\tcontext.moveTo(0, 0);\n\t\t\t\tcontext.stroke();\n\t\t\t}\n\t\t});\n\n\t\t$array.each(this._dirtyLayers, (layer) => {\n\t\t\tlayer.context.restore();\n\t\t\tlayer.dirty = false;\n\t\t});\n\t\t//}, 100)\n\n\t\tif (this._hovering.size && this._lastPointerMoveEvent) {\n\t\t\tconst { events, target, native } = this._lastPointerMoveEvent;\n\n\t\t\t//this._mouseMoveThrottler.run();\n\n\t\t\t$array.each(events, (event) => {\n\t\t\t\tthis._dispatchGlobalMousemove(event, target, native);\n\t\t\t});\n\t\t}\n\t}\n\n\tpaintId(obj: CanvasDisplayObject): string {\n\t\tconst id = distributeId(++this._colorId);\n\t\tconst color = Color.fromHex(id).toCSS();\n\t\tthis._colorMap[color] = obj;\n\t\treturn color;\n\t}\n\n\t_removeObject(obj: CanvasDisplayObject): void {\n\t\tif (obj._colorId !== undefined) {\n\t\t\tdelete this._colorMap[obj._colorId];\n\t\t}\n\t}\n\n\t// protected _identifyObjectByColor(colorId: number): CanvasDisplayObject | undefined {\n\t// \treturn this._colorMap[colorId];\n\t// }\n\n\tprotected _adjustBoundingBox(bbox: DOMRect): DOMRect {\n\t\tconst margin = this._ghostLayer.margin;\n\n\t\treturn new DOMRect(\n\t\t\t-margin.left,\n\t\t\t-margin.top,\n\t\t\tbbox.width + margin.left + margin.right,\n\t\t\tbbox.height + margin.top + margin.bottom,\n\t\t);\n\t}\n\n\tpublic getEvent<A extends IPointerEvent>(originalEvent: A, adjustPoint: boolean = true): CanvasRendererEvent<A> {\n\t\tconst bbox = this.view.getBoundingClientRect();\n\n\t\tconst x = originalEvent.clientX || 0;\n\t\tconst y = originalEvent.clientY || 0;\n\n\t\tconst widthScale = this._calculatedWidth / this._realWidth;\n\t\tconst heightScale = this._calculatedHeight / this._realHeight;\n\n\t\tconst originalPoint: IPoint = {\n\t\t\tx: x - bbox.left,\n\t\t\ty: y - bbox.top,\n\t\t};\n\n\t\tconst point: IPoint = {\n\t\t\tx: (x - (adjustPoint ? bbox.left : 0)) * widthScale,\n\t\t\ty: (y - (adjustPoint ? bbox.top : 0)) * heightScale,\n\t\t};\n\n\t\treturn new CanvasRendererEvent(\n\t\t\toriginalEvent,\n\t\t\toriginalPoint,\n\t\t\tpoint,\n\t\t\tthis._adjustBoundingBox(bbox),\n\t\t);\n\t}\n\n\t_getHitTarget(point: IPoint, bbox: DOMRect, target: Node | null): CanvasDisplayObject | undefined | false {\n\t\tif (bbox.width === 0 || bbox.height === 0 || point.x < bbox.left || point.x > bbox.right || point.y < bbox.top || point.y > bbox.bottom) {\n\t\t\treturn;\n\t\t}\n\n\t\tif (!target || !this._layerDom.contains(target)) {\n\t\t\treturn;\n\t\t}\n\n\t\tconst pixel = this._ghostLayer.getImageData(point, bbox);\n\n\t\tif (pixel.data[0] === 0 && pixel.data[1] === 0 && pixel.data[2] === 0) {\n\t\t\treturn false;\n\t\t}\n\t\tconst colorId = Color.fromRGB(pixel.data[0], pixel.data[1], pixel.data[2]).toCSS();\n\t\tconst hit = this._colorMap[colorId];\n\n\t\treturn hit;\n\t}\n\n\tgetObjectAtPoint(point: IPoint): CanvasDisplayObject | undefined {\n\t\tconst data = this._ghostLayer.getImageArray(point);\n\n\t\tif (data[0] === 0 && data[1] === 0 && data[2] === 0) {\n\t\t\treturn undefined;\n\t\t}\n\t\tconst colorId = Color.fromRGB(data[0], data[1], data[2]).toCSS();\n\t\tconst hit = this._colorMap[colorId];\n\n\t\treturn hit;\n\t}\n\n\t_withEvents<Key extends keyof IRendererEvents>(key: Key, f: (events: IEvents<Key>) => void): void {\n\t\tconst events = this._events[key] as IEvents<Key> | undefined;\n\n\t\tif (events !== undefined) {\n\t\t\tevents.dispatching = true;\n\n\t\t\ttry {\n\t\t\t\tf(events);\n\n\t\t\t} finally {\n\t\t\t\tevents.dispatching = false;\n\n\t\t\t\tif (events.cleanup) {\n\t\t\t\t\tevents.cleanup = false;\n\n\t\t\t\t\t$array.keepIf(events.callbacks, (callback) => {\n\t\t\t\t\t\treturn !callback.disposed;\n\t\t\t\t\t});\n\n\t\t\t\t\tif (events.callbacks.length === 0) {\n\t\t\t\t\t\tevents.disposer.dispose();\n\t\t\t\t\t\tdelete this._events[key];\n\t\t\t\t\t}\n\t\t\t\t}\n\t\t\t}\n\t\t}\n\t}\n\n\t_dispatchEventAll<Key extends keyof IRendererEvents>(key: Key, event: IRendererEvents[Key]): void {\n\t\tif (!this.interactionsEnabled) {\n\t\t\treturn;\n\t\t}\n\n\t\tthis._withEvents(key, (events) => {\n\t\t\t$array.each(events.callbacks, (callback) => {\n\t\t\t\tif (!callback.disposed) {\n\t\t\t\t\tcallback.callback.call(callback.context, event);\n\t\t\t\t}\n\t\t\t});\n\t\t});\n\t}\n\n\t_dispatchEvent<Key extends keyof IRendererEvents>(key: Key, target: CanvasDisplayObject, event: IRendererEvents[Key]): boolean {\n\t\tif (!this.interactionsEnabled) {\n\t\t\treturn false;\n\t\t}\n\n\t\tlet dispatched = false;\n\n\t\tthis._withEvents(key, (events) => {\n\t\t\t$array.each(events.callbacks, (callback) => {\n\t\t\t\tif (!callback.disposed && callback.object === target) {\n\t\t\t\t\tcallback.callback.call(callback.context, event);\n\t\t\t\t\tdispatched = true;\n\t\t\t\t}\n\t\t\t});\n\t\t});\n\n\t\treturn dispatched;\n\t}\n\n\t_dispatchMousedown(originalEvent: IPointerEvent, originalTarget: Node | null): void {\n\t\tconst button = (<PointerEvent>originalEvent).button;\n\t\tif (button != 0 && button != 2 && button != 1 && button !== undefined) {\n\t\t\t// Ignore non-primary mouse buttons\n\t\t\treturn;\n\t\t}\n\n\t\tconst event = this.getEvent(originalEvent);\n\t\tconst target = this._getHitTarget(event.originalPoint, event.bbox, originalTarget);\n\n\n\t\tif (target) {\n\t\t\tconst id = event.id;\n\n\t\t\tlet dragged = false;\n\n\t\t\teachTargets(target, (obj) => {\n\t\t\t\tconst info = { id: id, value: obj };\n\n\t\t\t\tthis._mousedown.push(info);\n\n\t\t\t\tif (!dragged && this._dispatchEvent(\"pointerdown\", obj, event)) {\n\t\t\t\t\t// Only dispatch the first element which matches\n\t\t\t\t\tdragged = true;\n\n\t\t\t\t\tconst has = this._dragging.some((x) => {\n\t\t\t\t\t\treturn x.value === obj && x.id === id;\n\t\t\t\t\t});\n\n\t\t\t\t\tif (!has) {\n\t\t\t\t\t\tthis._dragging.push(info);\n\t\t\t\t\t}\n\n\t\t\t\t}\n\n\t\t\t\treturn true;\n\t\t\t});\n\t\t}\n\t}\n\n\t_dispatchGlobalMousemove(originalEvent: IPointerEvent, originalTarget: Node | null, native: boolean): void {\n\t\tconst event = this.getEvent(originalEvent);\n\n\t\tconst target = this._getHitTarget(event.originalPoint, event.bbox, originalTarget);\n\t\tevent.native = native;\n\n\t\tif (target) {\n\t\t\tthis._hovering.forEach((obj) => {\n\t\t\t\tif (!obj.contains(target)) {\n\t\t\t\t\tthis._hovering.delete(obj);\n\t\t\t\t\tif (obj.cursorOverStyle) {\n\t\t\t\t\t\t$utils.setStyle(document.body, \"cursor\", obj._replacedCursorStyle!);\n\t\t\t\t\t}\n\t\t\t\t\tthis._dispatchEvent(\"pointerout\", obj, event);\n\t\t\t\t}\n\t\t\t});\n\n\t\t\tif (event.native) {\n\t\t\t\teachTargets(target, (obj) => {\n\t\t\t\t\tif (!this._hovering.has(obj)) {\n\t\t\t\t\t\tthis._hovering.add(obj);\n\t\t\t\t\t\tif (obj.cursorOverStyle) {\n\t\t\t\t\t\t\tobj._replacedCursorStyle = $utils.getStyle(document.body, \"cursor\");\n\t\t\t\t\t\t\t$utils.setStyle(document.body, \"cursor\", obj.cursorOverStyle);\n\t\t\t\t\t\t}\n\t\t\t\t\t\tthis._dispatchEvent(\"pointerover\", obj, event);\n\t\t\t\t\t}\n\n\t\t\t\t\treturn true;\n\t\t\t\t});\n\t\t\t}\n\n\t\t\t//} else if (target === false) {\n\t\t} else {\n\t\t\tthis._hovering.forEach((obj) => {\n\t\t\t\tif (obj.cursorOverStyle) {\n\t\t\t\t\t$utils.setStyle(document.body, \"cursor\", obj._replacedCursorStyle!);\n\t\t\t\t}\n\t\t\t\tthis._dispatchEvent(\"pointerout\", obj, event);\n\t\t\t});\n\n\t\t\tthis._hovering.clear();\n\t\t}\n\t\tthis._dispatchEventAll(\"globalpointermove\", event);\n\t}\n\n\tremoveHovering(graphics: CanvasGraphics) {\n\t\tthis._hovering.delete(graphics);\n\t\tif (graphics.cursorOverStyle) {\n\t\t\t$utils.setStyle(document.body, \"cursor\", graphics._replacedCursorStyle!);\n\t\t}\n\t}\n\n\t_dispatchGlobalMouseup(originalEvent: IPointerEvent, native: boolean): void {\n\t\tconst event = this.getEvent(originalEvent);\n\t\tevent.native = native;\n\t\t//const target = this._getHitTarget(event.originalPoint);\n\t\tthis._dispatchEventAll(\"globalpointerup\", event);\n\t}\n\n\t_dispatchDragMove(originalEvent: IPointerEvent): void {\n\t\tif (this._dragging.length !== 0) {\n\t\t\tconst event = this.getEvent(originalEvent);\n\t\t\tconst id = event.id;\n\n\t\t\tthis._dragging.forEach((obj) => {\n\t\t\t\tif (obj.id === id) {\n\t\t\t\t\tthis._dispatchEvent(\"pointermove\", obj.value, event);\n\t\t\t\t}\n\t\t\t});\n\t\t}\n\t}\n\n\t_dispatchDragEnd(originalEvent: IPointerEvent, originalTarget: Node | null): void {\n\t\tconst button = (<PointerEvent>originalEvent).button;\n\t\tlet clickevent: \"click\" | \"rightclick\" | \"middleclick\";\n\t\tif (button == 0 || button === undefined) {\n\t\t\tclickevent = \"click\";\n\t\t}\n\t\telse if (button == 2) {\n\t\t\tclickevent = \"rightclick\";\n\t\t}\n\t\telse if (button == 1) {\n\t\t\tclickevent = \"middleclick\";\n\t\t}\n\t\telse {\n\t\t\t// Ignore non-primary mouse buttons\n\t\t\treturn;\n\t\t}\n\n\t\tconst event = this.getEvent(originalEvent);\n\t\tconst id = event.id;\n\n\t\tif (this._mousedown.length !== 0) {\n\t\t\tconst target = this._getHitTarget(event.originalPoint, event.bbox, originalTarget);\n\n\t\t\tif (target) {\n\t\t\t\tthis._mousedown.forEach((obj) => {\n\t\t\t\t\tif (obj.id === id && obj.value.contains(target)) {\n\t\t\t\t\t\tthis._dispatchEvent(clickevent, obj.value, event);\n\t\t\t\t\t}\n\t\t\t\t});\n\t\t\t}\n\n\t\t\tthis._mousedown.length = 0;\n\t\t}\n\n\t\tif (this._dragging.length !== 0) {\n\t\t\tthis._dragging.forEach((obj) => {\n\t\t\t\tif (obj.id === id) {\n\t\t\t\t\tthis._dispatchEvent(\"pointerup\", obj.value, event);\n\t\t\t\t}\n\t\t\t});\n\n\t\t\tthis._dragging.length = 0;\n\t\t}\n\t}\n\n\t_dispatchDoubleClick(originalEvent: IPointerEvent, originalTarget: Node | null): void {\n\t\tconst event = this.getEvent(originalEvent);\n\t\tconst target = this._getHitTarget(event.originalPoint, event.bbox, originalTarget);\n\n\t\tif (target) {\n\t\t\teachTargets(target, (obj) => {\n\t\t\t\tif (this._dispatchEvent(\"dblclick\", obj, event)) {\n\t\t\t\t\treturn false;\n\t\t\t\t} else {\n\t\t\t\t\treturn true;\n\t\t\t\t}\n\t\t\t});\n\t\t}\n\t}\n\n\t_dispatchWheel(originalEvent: WheelEvent, originalTarget: Node | null): void {\n\t\tconst event = this.getEvent(originalEvent);\n\t\tconst target = this._getHitTarget(event.originalPoint, event.bbox, originalTarget);\n\n\t\tif (target) {\n\t\t\teachTargets(target, (obj) => {\n\t\t\t\tif (this._dispatchEvent(\"wheel\", obj, event)) {\n\t\t\t\t\treturn false;\n\t\t\t\t} else {\n\t\t\t\t\treturn true;\n\t\t\t\t}\n\t\t\t});\n\t\t}\n\t}\n\n\t_makeSharedEvent(key: string, f: () => IDisposer): IDisposer {\n\t\tif (this._listeners[key] === undefined) {\n\t\t\tconst listener = f();\n\n\t\t\tthis._listeners[key] = new CounterDisposer(() => {\n\t\t\t\tdelete this._listeners[key];\n\t\t\t\tlistener.dispose();\n\t\t\t});\n\t\t}\n\n\t\treturn this._listeners[key].increment();\n\t}\n\n\t_onPointerEvent(name: string, f: (event: Array<IPointerEvent>, target: Node | null, native: boolean) => void): IDisposer {\n\t\tlet native = false;\n\t\tlet timer: number | null = null;\n\n\t\tfunction clear() {\n\t\t\ttimer = null;\n\t\t\tnative = false;\n\t\t}\n\n\t\treturn new MultiDisposer([\n\t\t\tnew Disposer(() => {\n\t\t\t\tif (timer !== null) {\n\t\t\t\t\tclearTimeout(timer);\n\t\t\t\t}\n\n\t\t\t\tclear();\n\t\t\t}),\n\n\t\t\t$utils.addEventListener(this.view, $utils.getRendererEvent(name), (_) => {\n\t\t\t\tnative = true;\n\n\t\t\t\tif (timer !== null) {\n\t\t\t\t\tclearTimeout(timer);\n\t\t\t\t}\n\n\t\t\t\ttimer = window.setTimeout(clear, 0);\n\t\t\t}),\n\n\t\t\tonPointerEvent(window, name, (ev, target) => {\n\t\t\t\tif (timer !== null) {\n\t\t\t\t\tclearTimeout(timer);\n\t\t\t\t\ttimer = null;\n\t\t\t\t}\n\n\t\t\t\tf(ev, target, native);\n\n\t\t\t\tnative = false;\n\t\t\t}),\n\t\t]);\n\t}\n\n\t// This ensures that only a single DOM event is added (e.g. only a single mousemove event listener)\n\t_initEvent(key: keyof IRendererEvents): IDisposer | undefined {\n\t\tswitch (key) {\n\t\t\tcase \"globalpointermove\":\n\t\t\tcase \"pointerover\":\n\t\t\tcase \"pointerout\":\n\t\t\t\treturn this._makeSharedEvent(\"pointermove\", () => {\n\t\t\t\t\tconst listener = (events: Array<IPointerEvent>, target: Node | null, native: boolean) => {\n\t\t\t\t\t\tthis._lastPointerMoveEvent = { events, target, native };\n\n\t\t\t\t\t\t$array.each(events, (event) => {\n\t\t\t\t\t\t\tthis._dispatchGlobalMousemove(event, target, native);\n\t\t\t\t\t\t});\n\t\t\t\t\t};\n\n\t\t\t\t\treturn new MultiDisposer([\n\t\t\t\t\t\tthis._onPointerEvent(\"pointerdown\", listener),\n\t\t\t\t\t\tthis._onPointerEvent(\"pointermove\", listener),\n\t\t\t\t\t]);\n\t\t\t\t});\n\t\t\tcase \"globalpointerup\":\n\t\t\t\treturn this._makeSharedEvent(\"pointerup\", () => {\n\t\t\t\t\tconst mouseup = this._onPointerEvent(\"pointerup\", (events, target, native) => {\n\t\t\t\t\t\t$array.each(events, (event) => {\n\t\t\t\t\t\t\tthis._dispatchGlobalMouseup(event, native);\n\t\t\t\t\t\t});\n\t\t\t\t\t\tthis._lastPointerMoveEvent = { events, target, native };\n\t\t\t\t\t});\n\n\t\t\t\t\tconst pointercancel = this._onPointerEvent(\"pointercancel\", (events, target, native) => {\n\t\t\t\t\t\t$array.each(events, (event) => {\n\t\t\t\t\t\t\tthis._dispatchGlobalMouseup(event, native);\n\t\t\t\t\t\t});\n\t\t\t\t\t\tthis._lastPointerMoveEvent = { events, target, native };\n\t\t\t\t\t});\n\n\t\t\t\t\treturn new Disposer(() => {\n\t\t\t\t\t\tmouseup.dispose();\n\t\t\t\t\t\tpointercancel.dispose();\n\t\t\t\t\t});\n\t\t\t\t});\n\t\t\tcase \"click\":\n\t\t\tcase \"rightclick\":\n\t\t\tcase \"middleclick\":\n\t\t\tcase \"pointerdown\":\n\t\t\t/*\n\t\t\t\treturn this._makeSharedEvent(\"pointerdown\", () => {\n\t\t\t\t\treturn this._onPointerEvent(\"pointerdown\", (event, target, native) => {\n\t\t\t\t\t\tthis._lastPointerMoveEvent = { event, target, native };\n\t\t\t\t\t\tthis._dispatchMousedown(event)\n\t\t\t\t\t});\n\t\t\t\t});\n\t\t\t*/\n\t\t\tcase \"pointermove\":\n\t\t\tcase \"pointerup\":\n\t\t\t\treturn this._makeSharedEvent(\"pointerdown\", () => {\n\t\t\t\t\t//const throttler = new Throttler();\n\n\t\t\t\t\tconst mousedown = this._onPointerEvent(\"pointerdown\", (events, target) => {\n\t\t\t\t\t\t$array.each(events, (ev) => {\n\t\t\t\t\t\t\tthis._dispatchMousedown(ev, target);\n\t\t\t\t\t\t});\n\t\t\t\t\t});\n\n\t\t\t\t\t// TODO handle throttling properly for multitouch\n\t\t\t\t\tconst mousemove = this._onPointerEvent(\"pointermove\", (ev: Array<IPointerEvent>) => {\n\t\t\t\t\t\t//throttler.throttle(() => {\n\t\t\t\t\t\t$array.each(ev, (ev) => {\n\t\t\t\t\t\t\tthis._dispatchDragMove(ev);\n\t\t\t\t\t\t});\n\t\t\t\t\t\t//});\n\t\t\t\t\t});\n\n\t\t\t\t\tconst mouseup = this._onPointerEvent(\"pointerup\", (ev: Array<IPointerEvent>, target) => {\n\t\t\t\t\t\t$array.each(ev, (ev) => {\n\t\t\t\t\t\t\tthis._dispatchDragEnd(ev, target);\n\t\t\t\t\t\t});\n\t\t\t\t\t});\n\n\t\t\t\t\tconst pointercancel = this._onPointerEvent(\"pointercancel\", (ev: Array<IPointerEvent>, target) => {\n\t\t\t\t\t\t$array.each(ev, (ev) => {\n\t\t\t\t\t\t\tthis._dispatchDragEnd(ev, target);\n\t\t\t\t\t\t});\n\t\t\t\t\t});\n\n\t\t\t\t\treturn new Disposer(() => {\n\t\t\t\t\t\tmousedown.dispose();\n\t\t\t\t\t\tmousemove.dispose();\n\t\t\t\t\t\tmouseup.dispose();\n\t\t\t\t\t\tpointercancel.dispose();\n\t\t\t\t\t});\n\t\t\t\t});\n\t\t\tcase \"dblclick\":\n\t\t\t\treturn this._makeSharedEvent(\"dblclick\", () => {\n\t\t\t\t\treturn this._onPointerEvent(\"dblclick\", (ev, target) => {\n\t\t\t\t\t\t$array.each(ev, (ev) => {\n\t\t\t\t\t\t\tthis._dispatchDoubleClick(ev, target);\n\t\t\t\t\t\t});\n\t\t\t\t\t});\n\t\t\t\t});\n\t\t\tcase \"wheel\":\n\t\t\t\treturn this._makeSharedEvent(\"wheel\", () => {\n\t\t\t\t\treturn $utils.addEventListener(this.view, $utils.getRendererEvent(\"wheel\"), (event: WheelEvent) => {\n\t\t\t\t\t\tthis._dispatchWheel(event, $utils.getEventTarget(event));\n\t\t\t\t\t}, { passive: false });\n\t\t\t\t});\n\t\t}\n\t}\n\n\t_addEvent<C, Key extends keyof IRendererEvents>(object: CanvasDisplayObject, key: Key, callback: (this: C, event: IRendererEvents[Key]) => void, context?: C): IDisposer {\n\t\tlet events: IEvents<Key> | undefined = this._events[key] as any;\n\n\t\tif (events === undefined) {\n\t\t\tevents = this._events[key] = {\n\t\t\t\tdisposer: this._initEvent(key)!,\n\t\t\t\tcallbacks: [],\n\t\t\t\tdispatching: false,\n\t\t\t\tcleanup: false,\n\t\t\t};\n\t\t}\n\n\t\tconst listener = { object, context, callback, disposed: false };\n\n\t\tevents!.callbacks.push(listener);\n\n\t\treturn new Disposer(() => {\n\t\t\tlistener.disposed = true;\n\n\t\t\tif (events!.dispatching) {\n\t\t\t\tevents!.cleanup = true;\n\n\t\t\t} else {\n\t\t\t\t$array.removeFirst(events!.callbacks, listener);\n\n\t\t\t\tif (events!.callbacks.length === 0) {\n\t\t\t\t\tevents!.disposer.dispose();\n\t\t\t\t\tdelete this._events[key];\n\t\t\t\t}\n\t\t\t}\n\t\t});\n\t}\n\n\tpublic getCanvas(root: CanvasDisplayObject, options?: ICanvasOptions): HTMLCanvasElement {\n\n\t\t// Make sure everything is rendered\n\t\tthis.render(root);\n\n\t\tif (!options) {\n\t\t\toptions = {};\n\t\t}\n\n\t\tlet scale: number = this.resolution;\n\n\t\tlet canvasWidth = Math.floor(this._calculatedWidth * this.resolution);\n\t\tlet canvasHeight = Math.floor(this._calculatedHeight * this.resolution);\n\n\t\t// Check if we need to scale\n\t\tif (options.minWidth && (options.minWidth > canvasWidth)) {\n\t\t\tlet minScale = options.minWidth / canvasWidth;\n\t\t\tif (minScale > scale) {\n\t\t\t\tscale = minScale * this.resolution;\n\t\t\t}\n\t\t}\n\n\t\tif (options.minHeight && (options.minHeight > canvasHeight)) {\n\t\t\tlet minScale = options.minHeight / canvasHeight;\n\t\t\tif (minScale > scale) {\n\t\t\t\tscale = minScale * this.resolution;\n\t\t\t}\n\t\t}\n\n\t\tif (options.maxWidth && (options.maxWidth < canvasWidth)) {\n\t\t\tlet maxScale = options.maxWidth / canvasWidth;\n\t\t\tif (maxScale < scale) {\n\t\t\t\tscale = maxScale * this.resolution;\n\t\t\t}\n\t\t}\n\n\t\tif (options.maxHeight && (options.maxHeight > canvasHeight)) {\n\t\t\tlet maxScale = options.maxHeight / canvasHeight;\n\t\t\tif (maxScale < scale) {\n\t\t\t\tscale = maxScale * this.resolution;\n\t\t\t}\n\t\t}\n\n\t\t// Check if we need to compensate for pixel ratio\n\t\tif (options.maintainPixelRatio) {\n\t\t\tscale /= this.resolution;\n\t\t}\n\n\t\t// Init list canvases to remove from DOM after export\n\t\tconst canvases: HTMLCanvasElement[] = [];\n\n\t\t// Set up new canvas for export\n\t\tlet forceRender = false;\n\t\tconst canvas = document.createElement(\"canvas\");\n\t\tif (scale != this.resolution) {\n\t\t\tforceRender = true;\n\t\t\tcanvasWidth = canvasWidth * scale / this.resolution;\n\t\t\tcanvasHeight = canvasHeight * scale / this.resolution;\n\t\t}\n\n\t\tcanvas.width = canvasWidth;\n\t\tcanvas.height = canvasHeight;\n\n\t\t// Add to DOM so it inherits CSS\n\t\tcanvas.style.position = \"fixed\";\n\t\tcanvas.style.top = \"-10000px\";\n\t\tthis.view.appendChild(canvas);\n\t\tcanvases.push(canvas);\n\n\t\t// Context\n\t\tconst context = canvas.getContext(\"2d\")!;\n\n\t\tlet width = 0;\n\t\tlet height = 0;\n\t\tlet needRerender = false;\n\n\t\t$array.each(this.layers, (layer) => {\n\t\t\tif (layer && layer.visible) {\n\t\t\t\tif (layer.tainted || forceRender) {\n\t\t\t\t\tneedRerender = true;\n\n\t\t\t\t\tlayer.exportableView = layer.view;\n\t\t\t\t\tlayer.exportableContext = layer.context;\n\n\t\t\t\t\tlayer.view = document.createElement(\"canvas\");\n\n\t\t\t\t\t// Add to DOM so it inherits CSS\n\t\t\t\t\tlayer.view.style.position = \"fixed\";\n\t\t\t\t\tlayer.view.style.top = \"-10000px\";\n\t\t\t\t\tthis.view.appendChild(layer.view);\n\t\t\t\t\tcanvases.push(layer.view);\n\n\t\t\t\t\tlet extraX = 0;\n\t\t\t\t\tlet extraY = 0;\n\t\t\t\t\tif (layer.margin) {\n\t\t\t\t\t\textraX += layer.margin.left || 0 + layer.margin.right || 0;\n\t\t\t\t\t\textraY += layer.margin.top || 0 + layer.margin.bottom || 0;\n\t\t\t\t\t}\n\n\t\t\t\t\tlayer.view.width = canvasWidth + extraX;\n\t\t\t\t\tlayer.view.height = canvasHeight + extraY;\n\n\t\t\t\t\tlayer.context = layer.view.getContext(\"2d\")!;\n\n\t\t\t\t\tlayer.dirty = true;\n\t\t\t\t\tlayer.scale = scale;\n\n\t\t\t\t}\n\t\t\t}\n\t\t});\n\n\t\tif (needRerender) {\n\t\t\tthis._omitTainted = true;\n\t\t\tthis.render(root);\n\t\t\tthis._omitTainted = false;\n\t\t}\n\n\t\t$array.each(this.layers, (layer) => {\n\t\t\tif (layer && layer.visible) {\n\n\t\t\t\t// Layer is fine. Just plop it into our target canvas\n\t\t\t\tlet x = 0;\n\t\t\t\tlet y = 0;\n\t\t\t\tif (layer.margin) {\n\t\t\t\t\tx = -(layer.margin.left || 0) * this.resolution;\n\t\t\t\t\ty = -(layer.margin.top || 0) * this.resolution;\n\t\t\t\t}\n\t\t\t\tcontext.drawImage(layer.view, x, y);\n\n\t\t\t\t// Restore layer original canvas\n\t\t\t\tif (layer.exportableView) {\n\t\t\t\t\tlayer.view = layer.exportableView;\n\t\t\t\t\tlayer.exportableView = undefined;\n\t\t\t\t}\n\n\t\t\t\tif (layer.exportableContext) {\n\t\t\t\t\tlayer.context = layer.exportableContext;\n\t\t\t\t\tlayer.exportableContext = undefined;\n\t\t\t\t}\n\n\t\t\t\tif (width < layer.view.clientWidth) {\n\t\t\t\t\twidth = layer.view.clientWidth;\n\t\t\t\t}\n\t\t\t\tif (height < layer.view.clientHeight) {\n\t\t\t\t\theight = layer.view.clientHeight;\n\t\t\t\t}\n\n\t\t\t\tlayer.scale = undefined;\n\t\t\t}\n\t\t});\n\n\t\tcanvas.style.width = width + \"px\";\n\t\tcanvas.style.height = height + \"px\";\n\n\t\t$array.each(canvases, (canvas) => {\n\t\t\tcanvas.style.position = \"\";\n\t\t\tcanvas.style.top = \"\";\n\t\t\tthis.view.removeChild(canvas);\n\t\t})\n\t\treturn canvas;\n\t}\n}\n\n\nclass GhostLayer {\n\tpublic view: HTMLCanvasElement;\n\tpublic context: CanvasRenderingContext2D;\n\tpublic margin: IMargin = {\n\t\tleft: 0,\n\t\tright: 0,\n\t\ttop: 0,\n\t\tbottom: 0,\n\t};\n\n\tprivate _resolution: number = 1;\n\tprivate _width: number = 0;\n\tprivate _height: number = 0;\n\n\tpublic imageArray?: Uint8ClampedArray;\n\n\tconstructor() {\n\t\tthis.view = document.createElement(\"canvas\");\n\t\tthis.context = this.view.getContext(\"2d\", { alpha: false, willReadFrequently: true })! as CanvasRenderingContext2D;\n\t\tthis.context.imageSmoothingEnabled = false;\n\n\t\tthis.view.style.position = \"absolute\";\n\t\tthis.view.style.top = \"0px\";\n\t\tthis.view.style.left = \"0px\";\n\t}\n\n\tresize(canvasWidth: number, canvasHeight: number, domWidth: number, domHeight: number, resolution: number) {\n\t\tthis._resolution = resolution;\n\n\t\tcanvasWidth += (this.margin.left + this.margin.right);\n\t\tcanvasHeight += (this.margin.top + this.margin.bottom);\n\n\t\t// TODO this should take into account calculateSize\n\t\tdomWidth += (this.margin.left + this.margin.right);\n\t\tdomHeight += (this.margin.top + this.margin.bottom);\n\n\t\tthis.view.style.left = -this.margin.left + \"px\";\n\t\tthis.view.style.top = -this.margin.top + \"px\";\n\n\t\tthis._width = Math.floor(canvasWidth * resolution);\n\t\tthis._height = Math.floor(canvasHeight * resolution);\n\n\t\tthis.view.width = this._width;\n\t\tthis.view.style.width = domWidth + \"px\";\n\n\t\tthis.view.height = this._height;\n\t\tthis.view.style.height = domHeight + \"px\";\n\t}\n\n\tgetImageData(point: IPoint, bbox: DOMRect): ImageData {\n\t\treturn this.context.getImageData(\n\t\t\t// TODO should this round ?\n\t\t\tMath.round(((point.x - bbox.left) / bbox.width) * this._width),\n\t\t\tMath.round(((point.y - bbox.top) / bbox.height) * this._height),\n\t\t\t1,\n\t\t\t1,\n\t\t);\n\t}\n\n\tgetImageArray(point: IPoint): Array<number> {\n\n\t\tif (!this.imageArray) {\n\t\t\tthis.imageArray = this.context.getImageData(0, 0, this._width, this._height).data;\n\t\t}\n\n\t\tconst data = this.imageArray;\n\n\t\tconst x = Math.round(point.x * this._resolution);\n\t\tconst y = Math.round(point.y * this._resolution);\n\n\t\tconst i = (y * this._width + x) * 4;\n\t\treturn [data[i], data[i + 1], data[i + 2], data[i + 3]];\n\t}\n\n\tsetMargin(layers: Array<CanvasLayer>): void {\n\t\tthis.margin.left = 0;\n\t\tthis.margin.right = 0;\n\t\tthis.margin.top = 0;\n\t\tthis.margin.bottom = 0;\n\n\t\t$array.each(layers, (layer) => {\n\t\t\tif (layer.margin) {\n\t\t\t\tthis.margin.left = Math.max(this.margin.left, layer.margin.left);\n\t\t\t\tthis.margin.right = Math.max(this.margin.right, layer.margin.right);\n\t\t\t\tthis.margin.top = Math.max(this.margin.top, layer.margin.top);\n\t\t\t\tthis.margin.bottom = Math.max(this.margin.bottom, layer.margin.bottom);\n\t\t\t}\n\t\t});\n\t}\n\n\tclear() {\n\t\tthis.context.save();\n\t\tthis.context.fillStyle = '#000';\n\t\tthis.context.fillRect(0, 0, this._width, this._height);\n\t}\n}\n\n\n/**\n * @ignore\n */\nexport class CanvasLayer implements ILayer {\n\tpublic view: HTMLCanvasElement;\n\tpublic context: CanvasRenderingContext2D;\n\tpublic tainted: boolean = true;\n\tpublic margin: IMargin | undefined;\n\tpublic order: number = 0;\n\tpublic visible: boolean = true;\n\tpublic width: number | undefined;\n\tpublic height: number | undefined;\n\tpublic scale: number | undefined;\n\tpublic dirty: boolean = true;\n\tpublic exportableView: HTMLCanvasElement | undefined;\n\tpublic exportableContext: CanvasRenderingContext2D | undefined;\n\n\tprivate _width: number = 0;\n\tprivate _height: number = 0;\n\n\tconstructor(view: HTMLCanvasElement, context: CanvasRenderingContext2D) {\n\t\tthis.view = view;\n\t\tthis.context = context;\n\t}\n\n\tresize(canvasWidth: number, canvasHeight: number, domWidth: number, domHeight: number, resolution: number) {\n\t\t// TODO should this take into account calculateSize ?\n\t\tif (this.width != null) {\n\t\t\tcanvasWidth = this.width;\n\t\t\tdomWidth = this.width;\n\t\t}\n\n\t\t// TODO should this take into account calculateSize ?\n\t\tif (this.height != null) {\n\t\t\tcanvasHeight = this.height;\n\t\t\tdomHeight = this.height;\n\t\t}\n\n\t\tif (this.margin) {\n\t\t\tcanvasWidth += (this.margin.left + this.margin.right);\n\t\t\tcanvasHeight += (this.margin.top + this.margin.bottom);\n\n\t\t\t// TODO this should take into account calculateSize\n\t\t\tdomWidth += (this.margin.left + this.margin.right);\n\t\t\tdomHeight += (this.margin.top + this.margin.bottom);\n\n\t\t\tthis.view.style.left = -this.margin.left + \"px\";\n\t\t\tthis.view.style.top = -this.margin.top + \"px\";\n\n\t\t} else {\n\t\t\tthis.view.style.left = \"0px\";\n\t\t\tthis.view.style.top = \"0px\";\n\t\t}\n\n\t\tthis._width = Math.floor(canvasWidth * resolution);\n\t\tthis._height = Math.floor(canvasHeight * resolution);\n\n\t\tthis.view.width = this._width;\n\t\tthis.view.style.width = domWidth + \"px\";\n\n\t\tthis.view.height = this._height;\n\t\tthis.view.style.height = domHeight + \"px\";\n\t}\n\n\tclear() {\n\t\tthis.context.save();\n\t\tthis.context.clearRect(0, 0, this._width, this._height);\n\t}\n}\n","/**\r\n * Modified from Pixi:\r\n *\r\n * The MIT License\r\n *\r\n * Copyright (c) 2013-2017 Mathew Groves, Chad Engler\r\n *\r\n * Permission is hereby granted, free of charge, to any person obtaining a copy\r\n * of this software and associated documentation files (the \"Software\"), to deal\r\n * in the Software without restriction, including without limitation the rights\r\n * to use, copy, modify, merge, publish, distribute, sublicense, and/or sell\r\n * copies of the Software, and to permit persons to whom the Software is\r\n * furnished to do so, subject to the following conditions:\r\n *\r\n * The above copyright notice and this permission notice shall be included in\r\n * all copies or substantial portions of the Software.\r\n *\r\n * THE SOFTWARE IS PROVIDED \"AS IS\", WITHOUT WARRANTY OF ANY KIND, EXPRESS OR\r\n * IMPLIED, INCLUDING BUT NOT LIMITED TO THE WARRANTIES OF MERCHANTABILITY,\r\n * FITNESS FOR A PARTICULAR PURPOSE AND NONINFRINGEMENT. IN NO EVENT SHALL THE\r\n * AUTHORS OR COPYRIGHT HOLDERS BE LIABLE FOR ANY CLAIM, DAMAGES OR OTHER\r\n * LIABILITY, WHETHER IN AN ACTION OF CONTRACT, TORT OR OTHERWISE, ARISING FROM,\r\n * OUT OF OR IN CONNECTION WITH THE SOFTWARE OR THE USE OR OTHER DEALINGS IN\r\n * THE SOFTWARE.\r\n */\r\n/**\r\n * @ignore\r\n */\r\nexport class Matrix {\r\n    constructor(a = 1, b = 0, c = 0, d = 1, tx = 0, ty = 0) {\r\n        Object.defineProperty(this, \"a\", {\r\n            enumerable: true,\r\n            configurable: true,\r\n            writable: true,\r\n            value: void 0\r\n        });\r\n        Object.defineProperty(this, \"b\", {\r\n            enumerable: true,\r\n            configurable: true,\r\n            writable: true,\r\n            value: void 0\r\n        });\r\n        Object.defineProperty(this, \"c\", {\r\n            enumerable: true,\r\n            configurable: true,\r\n            writable: true,\r\n            value: void 0\r\n        });\r\n        Object.defineProperty(this, \"d\", {\r\n            enumerable: true,\r\n            configurable: true,\r\n            writable: true,\r\n            value: void 0\r\n        });\r\n        Object.defineProperty(this, \"tx\", {\r\n            enumerable: true,\r\n            configurable: true,\r\n            writable: true,\r\n            value: void 0\r\n        });\r\n        Object.defineProperty(this, \"ty\", {\r\n            enumerable: true,\r\n            configurable: true,\r\n            writable: true,\r\n            value: void 0\r\n        });\r\n        this.a = a;\r\n        this.b = b;\r\n        this.c = c;\r\n        this.d = d;\r\n        this.tx = tx;\r\n        this.ty = ty;\r\n    }\r\n    /**\r\n     * Sets the matrix based on all the available properties\r\n     */\r\n    setTransform(x, y, pivotX, pivotY, rotation, scale = 1) {\r\n        this.a = Math.cos(rotation) * scale;\r\n        this.b = Math.sin(rotation) * scale;\r\n        this.c = -Math.sin(rotation) * scale;\r\n        this.d = Math.cos(rotation) * scale;\r\n        this.tx = x - ((pivotX * this.a) + (pivotY * this.c));\r\n        this.ty = y - ((pivotX * this.b) + (pivotY * this.d));\r\n    }\r\n    /**\r\n     * Get a new position with the current transformation applied.\r\n     * Can be used to go from a child's coordinate space to the world coordinate space. (e.g. rendering)\r\n     */\r\n    apply(origin) {\r\n        return {\r\n            x: (this.a * origin.x) + (this.c * origin.y) + this.tx,\r\n            y: (this.b * origin.x) + (this.d * origin.y) + this.ty\r\n        };\r\n    }\r\n    /**\r\n     * Get a new position with the inverse of the current transformation applied.\r\n     * Can be used to go from the world coordinate space to a child's coordinate space. (e.g. input)\r\n     */\r\n    applyInverse(origin) {\r\n        const id = 1 / ((this.a * this.d) + (this.c * -this.b));\r\n        return {\r\n            x: (this.d * id * origin.x) + (-this.c * id * origin.y) + (((this.ty * this.c) - (this.tx * this.d)) * id),\r\n            y: (this.a * id * origin.y) + (-this.b * id * origin.x) + (((-this.ty * this.a) + (this.tx * this.b)) * id)\r\n        };\r\n    }\r\n    /**\r\n     * Appends the given Matrix to this Matrix.\r\n     */\r\n    append(matrix) {\r\n        const a1 = this.a;\r\n        const b1 = this.b;\r\n        const c1 = this.c;\r\n        const d1 = this.d;\r\n        this.a = (matrix.a * a1) + (matrix.b * c1);\r\n        this.b = (matrix.a * b1) + (matrix.b * d1);\r\n        this.c = (matrix.c * a1) + (matrix.d * c1);\r\n        this.d = (matrix.c * b1) + (matrix.d * d1);\r\n        this.tx = (matrix.tx * a1) + (matrix.ty * c1) + this.tx;\r\n        this.ty = (matrix.tx * b1) + (matrix.ty * d1) + this.ty;\r\n    }\r\n    /**\r\n     * Prepends the given Matrix to this Matrix.\r\n     */\r\n    prepend(matrix) {\r\n        const tx1 = this.tx;\r\n        if (matrix.a !== 1 || matrix.b !== 0 || matrix.c !== 0 || matrix.d !== 1) {\r\n            const a1 = this.a;\r\n            const c1 = this.c;\r\n            this.a = (a1 * matrix.a) + (this.b * matrix.c);\r\n            this.b = (a1 * matrix.b) + (this.b * matrix.d);\r\n            this.c = (c1 * matrix.a) + (this.d * matrix.c);\r\n            this.d = (c1 * matrix.b) + (this.d * matrix.d);\r\n        }\r\n        this.tx = (tx1 * matrix.a) + (this.ty * matrix.c) + matrix.tx;\r\n        this.ty = (tx1 * matrix.b) + (this.ty * matrix.d) + matrix.ty;\r\n    }\r\n    /**\r\n     * Copies the other matrix's properties into this matrix\r\n     */\r\n    copyFrom(matrix) {\r\n        this.a = matrix.a;\r\n        this.b = matrix.b;\r\n        this.c = matrix.c;\r\n        this.d = matrix.d;\r\n        this.tx = matrix.tx;\r\n        this.ty = matrix.ty;\r\n    }\r\n}\r\n//# sourceMappingURL=Matrix.js.map","/**\n * Modified from Pixi:\n *\n * The MIT License\n *\n * Copyright (c) 2013-2017 Mathew Groves, Chad Engler\n *\n * Permission is hereby granted, free of charge, to any person obtaining a copy\n * of this software and associated documentation files (the \"Software\"), to deal\n * in the Software without restriction, including without limitation the rights\n * to use, copy, modify, merge, publish, distribute, sublicense, and/or sell\n * copies of the Software, and to permit persons to whom the Software is\n * furnished to do so, subject to the following conditions:\n *\n * The above copyright notice and this permission notice shall be included in\n * all copies or substantial portions of the Software.\n *\n * THE SOFTWARE IS PROVIDED \"AS IS\", WITHOUT WARRANTY OF ANY KIND, EXPRESS OR\n * IMPLIED, INCLUDING BUT NOT LIMITED TO THE WARRANTIES OF MERCHANTABILITY,\n * FITNESS FOR A PARTICULAR PURPOSE AND NONINFRINGEMENT. IN NO EVENT SHALL THE\n * AUTHORS OR COPYRIGHT HOLDERS BE LIABLE FOR ANY CLAIM, DAMAGES OR OTHER\n * LIABILITY, WHETHER IN AN ACTION OF CONTRACT, TORT OR OTHERWISE, ARISING FROM,\n * OUT OF OR IN CONNECTION WITH THE SOFTWARE OR THE USE OR OTHER DEALINGS IN\n * THE SOFTWARE.\n */\n\nimport type { IPoint } from \"./IPoint\";\n\n/**\n * @ignore\n */\nexport class Matrix {\n\tpublic a: number;\n\tpublic b: number;\n\tpublic c: number;\n\tpublic d: number;\n\tpublic tx: number;\n\tpublic ty: number;\n\n\tconstructor(a = 1, b = 0, c = 0, d = 1, tx = 0, ty = 0) {\n\t\tthis.a = a;\n\t\tthis.b = b;\n\t\tthis.c = c;\n\t\tthis.d = d;\n\t\tthis.tx = tx;\n\t\tthis.ty = ty;\n\t}\n\n\t/**\n\t * Sets the matrix based on all the available properties\n\t */\n\tsetTransform(x: number, y: number, pivotX: number, pivotY: number, rotation: number, scale: number = 1): void {\n\t\tthis.a = Math.cos(rotation) * scale;\n\t\tthis.b = Math.sin(rotation) * scale;\n\t\tthis.c = -Math.sin(rotation) * scale;\n\t\tthis.d = Math.cos(rotation) * scale;\n\t\tthis.tx = x - ((pivotX * this.a) + (pivotY * this.c));\n\t\tthis.ty = y - ((pivotX * this.b) + (pivotY * this.d));\n\t}\n\n\t/**\n\t * Get a new position with the current transformation applied.\n\t * Can be used to go from a child's coordinate space to the world coordinate space. (e.g. rendering)\n\t */\n\tapply(origin: IPoint): IPoint {\n\t\treturn {\n\t\t\tx: (this.a * origin.x) + (this.c * origin.y) + this.tx,\n\t\t\ty: (this.b * origin.x) + (this.d * origin.y) + this.ty\n\t\t};\n\t}\n\n\t/**\n\t * Get a new position with the inverse of the current transformation applied.\n\t * Can be used to go from the world coordinate space to a child's coordinate space. (e.g. input)\n\t */\n\tapplyInverse(origin: IPoint): IPoint {\n\t\tconst id = 1 / ((this.a * this.d) + (this.c * -this.b));\n\n\t\treturn {\n\t\t\tx: (this.d * id * origin.x) + (-this.c * id * origin.y) + (((this.ty * this.c) - (this.tx * this.d)) * id),\n\t\t\ty: (this.a * id * origin.y) + (-this.b * id * origin.x) + (((-this.ty * this.a) + (this.tx * this.b)) * id)\n\t\t};\n\t}\n\n\t/**\n\t * Appends the given Matrix to this Matrix.\n\t */\n\tappend(matrix: Matrix): void {\n\t\tconst a1 = this.a;\n\t\tconst b1 = this.b;\n\t\tconst c1 = this.c;\n\t\tconst d1 = this.d;\n\t\tthis.a = (matrix.a * a1) + (matrix.b * c1);\n\t\tthis.b = (matrix.a * b1) + (matrix.b * d1);\n\t\tthis.c = (matrix.c * a1) + (matrix.d * c1);\n\t\tthis.d = (matrix.c * b1) + (matrix.d * d1);\n\t\tthis.tx = (matrix.tx * a1) + (matrix.ty * c1) + this.tx;\n\t\tthis.ty = (matrix.tx * b1) + (matrix.ty * d1) + this.ty;\n\t}\n\n\t/**\n\t * Prepends the given Matrix to this Matrix.\n\t */\n\tprepend(matrix: Matrix): void {\n\t\tconst tx1 = this.tx;\n\t\tif (matrix.a !== 1 || matrix.b !== 0 || matrix.c !== 0 || matrix.d !== 1) {\n\t\t\tconst a1 = this.a;\n\t\t\tconst c1 = this.c;\n\t\t\tthis.a = (a1 * matrix.a) + (this.b * matrix.c);\n\t\t\tthis.b = (a1 * matrix.b) + (this.b * matrix.d);\n\t\t\tthis.c = (c1 * matrix.a) + (this.d * matrix.c);\n\t\t\tthis.d = (c1 * matrix.b) + (this.d * matrix.d);\n\t\t}\n\t\tthis.tx = (tx1 * matrix.a) + (this.ty * matrix.c) + matrix.tx;\n\t\tthis.ty = (tx1 * matrix.b) + (this.ty * matrix.d) + matrix.ty;\n\t}\n\n\t/**\n\t * Copies the other matrix's properties into this matrix\n\t */\n\tcopyFrom(matrix: Matrix): void {\n\t\tthis.a = matrix.a;\n\t\tthis.b = matrix.b;\n\t\tthis.c = matrix.c;\n\t\tthis.d = matrix.d;\n\t\tthis.tx = matrix.tx;\n\t\tthis.ty = matrix.ty;\n\t}\n}\n\n","var _slicedToArray = function () { function sliceIterator(arr, i) { var _arr = []; var _n = true; var _d = false; var _e = undefined; try { for (var _i = arr[Symbol.iterator](), _s; !(_n = (_s = _i.next()).done); _n = true) { _arr.push(_s.value); if (i && _arr.length === i) break; } } catch (err) { _d = true; _e = err; } finally { try { if (!_n && _i[\"return\"]) _i[\"return\"](); } finally { if (_d) throw _e; } } return _arr; } return function (arr, i) { if (Array.isArray(arr)) { return arr; } else if (Symbol.iterator in Object(arr)) { return sliceIterator(arr, i); } else { throw new TypeError(\"Invalid attempt to destructure non-iterable instance\"); } }; }();\n\nvar TAU = Math.PI * 2;\n\nvar mapToEllipse = function mapToEllipse(_ref, rx, ry, cosphi, sinphi, centerx, centery) {\n  var x = _ref.x,\n      y = _ref.y;\n\n  x *= rx;\n  y *= ry;\n\n  var xp = cosphi * x - sinphi * y;\n  var yp = sinphi * x + cosphi * y;\n\n  return {\n    x: xp + centerx,\n    y: yp + centery\n  };\n};\n\nvar approxUnitArc = function approxUnitArc(ang1, ang2) {\n  // If 90 degree circular arc, use a constant\n  // as derived from http://spencermortensen.com/articles/bezier-circle\n  var a = ang2 === 1.5707963267948966 ? 0.551915024494 : ang2 === -1.5707963267948966 ? -0.551915024494 : 4 / 3 * Math.tan(ang2 / 4);\n\n  var x1 = Math.cos(ang1);\n  var y1 = Math.sin(ang1);\n  var x2 = Math.cos(ang1 + ang2);\n  var y2 = Math.sin(ang1 + ang2);\n\n  return [{\n    x: x1 - y1 * a,\n    y: y1 + x1 * a\n  }, {\n    x: x2 + y2 * a,\n    y: y2 - x2 * a\n  }, {\n    x: x2,\n    y: y2\n  }];\n};\n\nvar vectorAngle = function vectorAngle(ux, uy, vx, vy) {\n  var sign = ux * vy - uy * vx < 0 ? -1 : 1;\n\n  var dot = ux * vx + uy * vy;\n\n  if (dot > 1) {\n    dot = 1;\n  }\n\n  if (dot < -1) {\n    dot = -1;\n  }\n\n  return sign * Math.acos(dot);\n};\n\nvar getArcCenter = function getArcCenter(px, py, cx, cy, rx, ry, largeArcFlag, sweepFlag, sinphi, cosphi, pxp, pyp) {\n  var rxsq = Math.pow(rx, 2);\n  var rysq = Math.pow(ry, 2);\n  var pxpsq = Math.pow(pxp, 2);\n  var pypsq = Math.pow(pyp, 2);\n\n  var radicant = rxsq * rysq - rxsq * pypsq - rysq * pxpsq;\n\n  if (radicant < 0) {\n    radicant = 0;\n  }\n\n  radicant /= rxsq * pypsq + rysq * pxpsq;\n  radicant = Math.sqrt(radicant) * (largeArcFlag === sweepFlag ? -1 : 1);\n\n  var centerxp = radicant * rx / ry * pyp;\n  var centeryp = radicant * -ry / rx * pxp;\n\n  var centerx = cosphi * centerxp - sinphi * centeryp + (px + cx) / 2;\n  var centery = sinphi * centerxp + cosphi * centeryp + (py + cy) / 2;\n\n  var vx1 = (pxp - centerxp) / rx;\n  var vy1 = (pyp - centeryp) / ry;\n  var vx2 = (-pxp - centerxp) / rx;\n  var vy2 = (-pyp - centeryp) / ry;\n\n  var ang1 = vectorAngle(1, 0, vx1, vy1);\n  var ang2 = vectorAngle(vx1, vy1, vx2, vy2);\n\n  if (sweepFlag === 0 && ang2 > 0) {\n    ang2 -= TAU;\n  }\n\n  if (sweepFlag === 1 && ang2 < 0) {\n    ang2 += TAU;\n  }\n\n  return [centerx, centery, ang1, ang2];\n};\n\nvar arcToBezier = function arcToBezier(_ref2) {\n  var px = _ref2.px,\n      py = _ref2.py,\n      cx = _ref2.cx,\n      cy = _ref2.cy,\n      rx = _ref2.rx,\n      ry = _ref2.ry,\n      _ref2$xAxisRotation = _ref2.xAxisRotation,\n      xAxisRotation = _ref2$xAxisRotation === undefined ? 0 : _ref2$xAxisRotation,\n      _ref2$largeArcFlag = _ref2.largeArcFlag,\n      largeArcFlag = _ref2$largeArcFlag === undefined ? 0 : _ref2$largeArcFlag,\n      _ref2$sweepFlag = _ref2.sweepFlag,\n      sweepFlag = _ref2$sweepFlag === undefined ? 0 : _ref2$sweepFlag;\n\n  var curves = [];\n\n  if (rx === 0 || ry === 0) {\n    return [];\n  }\n\n  var sinphi = Math.sin(xAxisRotation * TAU / 360);\n  var cosphi = Math.cos(xAxisRotation * TAU / 360);\n\n  var pxp = cosphi * (px - cx) / 2 + sinphi * (py - cy) / 2;\n  var pyp = -sinphi * (px - cx) / 2 + cosphi * (py - cy) / 2;\n\n  if (pxp === 0 && pyp === 0) {\n    return [];\n  }\n\n  rx = Math.abs(rx);\n  ry = Math.abs(ry);\n\n  var lambda = Math.pow(pxp, 2) / Math.pow(rx, 2) + Math.pow(pyp, 2) / Math.pow(ry, 2);\n\n  if (lambda > 1) {\n    rx *= Math.sqrt(lambda);\n    ry *= Math.sqrt(lambda);\n  }\n\n  var _getArcCenter = getArcCenter(px, py, cx, cy, rx, ry, largeArcFlag, sweepFlag, sinphi, cosphi, pxp, pyp),\n      _getArcCenter2 = _slicedToArray(_getArcCenter, 4),\n      centerx = _getArcCenter2[0],\n      centery = _getArcCenter2[1],\n      ang1 = _getArcCenter2[2],\n      ang2 = _getArcCenter2[3];\n\n  // If 'ang2' == 90.0000000001, then `ratio` will evaluate to\n  // 1.0000000001. This causes `segments` to be greater than one, which is an\n  // unecessary split, and adds extra points to the bezier curve. To alleviate\n  // this issue, we round to 1.0 when the ratio is close to 1.0.\n\n\n  var ratio = Math.abs(ang2) / (TAU / 4);\n  if (Math.abs(1.0 - ratio) < 0.0000001) {\n    ratio = 1.0;\n  }\n\n  var segments = Math.max(Math.ceil(ratio), 1);\n\n  ang2 /= segments;\n\n  for (var i = 0; i < segments; i++) {\n    curves.push(approxUnitArc(ang1, ang2));\n    ang1 += ang2;\n  }\n\n  return curves.map(function (curve) {\n    var _mapToEllipse = mapToEllipse(curve[0], rx, ry, cosphi, sinphi, centerx, centery),\n        x1 = _mapToEllipse.x,\n        y1 = _mapToEllipse.y;\n\n    var _mapToEllipse2 = mapToEllipse(curve[1], rx, ry, cosphi, sinphi, centerx, centery),\n        x2 = _mapToEllipse2.x,\n        y2 = _mapToEllipse2.y;\n\n    var _mapToEllipse3 = mapToEllipse(curve[2], rx, ry, cosphi, sinphi, centerx, centery),\n        x = _mapToEllipse3.x,\n        y = _mapToEllipse3.y;\n\n    return { x1: x1, y1: y1, x2: x2, y2: y2, x: x, y: y };\n  });\n};\n\nexport default arcToBezier;","import { Container } from \"../../core/render/Container\";\r\nimport { p100 } from \"../../core/util/Percent\";\r\nimport { Rectangle } from \"../../core/render/Rectangle\";\r\nimport { color } from \"../../core/util/Color\";\r\nimport * as $utils from \"../../core/util/Utils\";\r\nimport * as $math from \"../../core/util/Math\";\r\nimport * as $object from \"../../core/util/Object\";\r\nimport * as $type from \"../../core/util/Type\";\r\n/**\r\n * A version of [[Container]] which adds zooming capabilities.\r\n *\r\n * @see {@link https://www.amcharts.com/docs/v5/concepts/common-elements/containers/#Zoomable_container} for more info\r\n * @since 5.8.0\r\n * @important\r\n */\r\nexport class ZoomableContainer extends Container {\r\n    constructor() {\r\n        super(...arguments);\r\n        Object.defineProperty(this, \"_za\", {\r\n            enumerable: true,\r\n            configurable: true,\r\n            writable: true,\r\n            value: void 0\r\n        });\r\n        Object.defineProperty(this, \"_txa\", {\r\n            enumerable: true,\r\n            configurable: true,\r\n            writable: true,\r\n            value: void 0\r\n        });\r\n        Object.defineProperty(this, \"_tya\", {\r\n            enumerable: true,\r\n            configurable: true,\r\n            writable: true,\r\n            value: void 0\r\n        });\r\n        Object.defineProperty(this, \"_movePoints\", {\r\n            enumerable: true,\r\n            configurable: true,\r\n            writable: true,\r\n            value: {}\r\n        });\r\n        Object.defineProperty(this, \"_downScale\", {\r\n            enumerable: true,\r\n            configurable: true,\r\n            writable: true,\r\n            value: 1\r\n        });\r\n        Object.defineProperty(this, \"_downX\", {\r\n            enumerable: true,\r\n            configurable: true,\r\n            writable: true,\r\n            value: 0\r\n        });\r\n        Object.defineProperty(this, \"_downY\", {\r\n            enumerable: true,\r\n            configurable: true,\r\n            writable: true,\r\n            value: 0\r\n        });\r\n        Object.defineProperty(this, \"_pinchDP\", {\r\n            enumerable: true,\r\n            configurable: true,\r\n            writable: true,\r\n            value: void 0\r\n        });\r\n        /**\r\n         * All elements must be added to `contents.children` instead of `children` of\r\n         * [[ZoomableContainer]].\r\n         *\r\n         * @see {@link https://www.amcharts.com/docs/v5/concepts/common-elements/containers/#Zoomable_container} for more info\r\n         */\r\n        Object.defineProperty(this, \"contents\", {\r\n            enumerable: true,\r\n            configurable: true,\r\n            writable: true,\r\n            value: this.children.push(Container.new(this._root, {\r\n                width: p100,\r\n                height: p100,\r\n                x: 0,\r\n                y: 0,\r\n                draggable: true,\r\n                background: Rectangle.new(this._root, {\r\n                    fill: color(0xffffff),\r\n                    fillOpacity: 0\r\n                })\r\n            }))\r\n        });\r\n        Object.defineProperty(this, \"_wheelDp\", {\r\n            enumerable: true,\r\n            configurable: true,\r\n            writable: true,\r\n            value: void 0\r\n        });\r\n    }\r\n    _afterNew() {\r\n        super._afterNew();\r\n        const events = this.contents.events;\r\n        this._disposers.push(events.on(\"pointerdown\", (event) => {\r\n            this._handleThisDown(event);\r\n        }));\r\n        this._disposers.push(events.on(\"globalpointerup\", (event) => {\r\n            this._handleThisUp(event);\r\n        }));\r\n        this._disposers.push(events.on(\"globalpointermove\", (event) => {\r\n            this._handleThisMove(event);\r\n        }));\r\n        const bg = this.contents.get(\"background\");\r\n        if (bg) {\r\n            bg.adapters.add(\"width\", (width) => {\r\n                return Number(width) * 5;\r\n            });\r\n            bg.adapters.add(\"height\", (height) => {\r\n                return Number(height) * 5;\r\n            });\r\n            bg.adapters.add(\"x\", (x) => {\r\n                return Number(x) - bg.width() / 5 * 2;\r\n            });\r\n            bg.adapters.add(\"y\", (y) => {\r\n                return Number(y) - bg.height() / 5 * 2;\r\n            });\r\n        }\r\n        const contents = this.contents;\r\n        contents.adapters.add(\"x\", (x) => {\r\n            if ($type.isNumber(x)) {\r\n                let maxPanOut = this.get(\"maxPanOut\", 0.4);\r\n                let w = contents.width();\r\n                x = Math.min(w * maxPanOut, x);\r\n                x = Math.max(this.width() - w * contents.get(\"scale\", 1) * (1 + maxPanOut), x);\r\n            }\r\n            return x;\r\n        });\r\n        contents.adapters.add(\"y\", (y) => {\r\n            if ($type.isNumber(y)) {\r\n                let maxPanOut = this.get(\"maxPanOut\", 0.4);\r\n                let h = contents.height();\r\n                y = Math.min(h * maxPanOut, y);\r\n                y = Math.max(this.height() - h * contents.get(\"scale\", 1) * (1 + maxPanOut), y);\r\n            }\r\n            return y;\r\n        });\r\n    }\r\n    _prepareChildren() {\r\n        super._prepareChildren();\r\n        if (this.isDirty(\"wheelable\")) {\r\n            this._handleSetWheel();\r\n        }\r\n        this.contents._display.cancelTouch = this.get(\"pinchZoom\", false);\r\n    }\r\n    _handleSetWheel() {\r\n        if (this.get(\"wheelable\")) {\r\n            if (this._wheelDp) {\r\n                this._wheelDp.dispose();\r\n            }\r\n            this._wheelDp = this.events.on(\"wheel\", (event) => {\r\n                const wheelEvent = event.originalEvent;\r\n                // Ignore wheel event if it is happening on a non-ZoomableContainer element, e.g. if\r\n                // some page element is over the ZoomableContainer.\r\n                if ($utils.isLocalEvent(wheelEvent, this)) {\r\n                    wheelEvent.preventDefault();\r\n                }\r\n                else {\r\n                    return;\r\n                }\r\n                const point = this.toLocal(event.point);\r\n                this._handleWheelZoom(wheelEvent.deltaY, point);\r\n            });\r\n            this._disposers.push(this._wheelDp);\r\n        }\r\n        else {\r\n            if (this._wheelDp) {\r\n                this._wheelDp.dispose();\r\n            }\r\n        }\r\n    }\r\n    _handleWheelZoom(delta, point) {\r\n        let step = this.get(\"zoomStep\", 2);\r\n        let zoomLevel = this.contents.get(\"scale\", 1);\r\n        let newZoomLevel = zoomLevel;\r\n        if (delta > 0) {\r\n            newZoomLevel = zoomLevel / step;\r\n        }\r\n        else if (delta < 0) {\r\n            newZoomLevel = zoomLevel * step;\r\n        }\r\n        if (newZoomLevel != zoomLevel) {\r\n            this.zoomToPoint(point, newZoomLevel);\r\n        }\r\n    }\r\n    /**\r\n     * Zooms to specific X/Y point.\r\n     *\r\n     * @param   point  Center point\r\n     * @param   level  Zoom level\r\n     * @return         Zoom Animation object\r\n     */\r\n    zoomToPoint(point, level) {\r\n        if (level) {\r\n            level = $math.fitToRange(level, this.get(\"minZoomLevel\", 1), this.get(\"maxZoomLevel\", 32));\r\n        }\r\n        const zoomLevel = this.contents.get(\"scale\", 1);\r\n        let x = point.x;\r\n        let y = point.y;\r\n        let cx = x;\r\n        let cy = y;\r\n        const contents = this.contents;\r\n        let tx = contents.x();\r\n        let ty = contents.y();\r\n        let xx = cx - ((x - tx) / zoomLevel * level);\r\n        let yy = cy - ((y - ty) / zoomLevel * level);\r\n        this._animateTo(xx, yy, level);\r\n        return this._za;\r\n    }\r\n    /**\r\n     * Zooms the container contents in by `zoomStep`.\r\n     *\r\n     * @return Zoom Animation object\r\n     */\r\n    zoomIn() {\r\n        return this.zoomToPoint({ x: this.width() / 2, y: this.height() / 2 }, this.contents.get(\"scale\", 1) * this.get(\"zoomStep\", 2));\r\n    }\r\n    /**\r\n     * Zooms the container contents out by `zoomStep`.\r\n     *\r\n     * @return Zoom Animation object\r\n     */\r\n    zoomOut() {\r\n        return this.zoomToPoint({ x: this.width() / 2, y: this.height() / 2 }, this.contents.get(\"scale\", 1) / this.get(\"zoomStep\", 2));\r\n    }\r\n    /**\r\n     * Fully zooms out the container contents.\r\n     *\r\n     * @return Zoom Animation object\r\n     */\r\n    goHome() {\r\n        return this._animateTo(0, 0, 1);\r\n    }\r\n    _animateTo(x, y, scale) {\r\n        const duration = this.get(\"animationDuration\", 0);\r\n        const easing = this.get(\"animationEasing\");\r\n        const contents = this.contents;\r\n        this._txa = contents.animate({ key: \"x\", to: x, duration: duration, easing: easing });\r\n        this._tya = contents.animate({ key: \"y\", to: y, duration: duration, easing: easing });\r\n        this._za = contents.animate({ key: \"scale\", to: scale, duration: duration, easing: easing });\r\n    }\r\n    _handleThisUp(_event) {\r\n        this._downPoints = {};\r\n    }\r\n    _handleThisDown(event) {\r\n        const contents = this.contents;\r\n        this._downScale = contents.get(\"scale\", 1);\r\n        const downPoints = contents._downPoints;\r\n        let count = $object.keys(downPoints).length;\r\n        if (count == 1) {\r\n            // workaround to solve a problem when events are added to some children of chart container (rotation stops working)\r\n            let downPoint = downPoints[1];\r\n            if (!downPoint) {\r\n                downPoint = downPoints[0];\r\n            }\r\n            if (downPoint && (downPoint.x == event.point.x && downPoint.y == event.point.y)) {\r\n                count = 0;\r\n            }\r\n        }\r\n        if (count > 0) {\r\n            this._downX = contents.x();\r\n            this._downY = contents.y();\r\n            const downId = contents._getDownPointId();\r\n            if (downId) {\r\n                let movePoint = this._movePoints[downId];\r\n                if (movePoint) {\r\n                    contents._downPoints[downId] = movePoint;\r\n                }\r\n            }\r\n        }\r\n    }\r\n    _handleThisMove(event) {\r\n        const originalEvent = event.originalEvent;\r\n        const pointerId = originalEvent.pointerId;\r\n        if (this.get(\"pinchZoom\")) {\r\n            if (pointerId) {\r\n                this._movePoints[pointerId] = event.point;\r\n                if ($object.keys(this.contents._downPoints).length > 1) {\r\n                    this._handlePinch();\r\n                    return;\r\n                }\r\n            }\r\n        }\r\n    }\r\n    _handlePinch() {\r\n        let i = 0;\r\n        let downPoints = [];\r\n        let movePoints = [];\r\n        $object.each(this.contents._downPoints, (k, point) => {\r\n            downPoints[i] = point;\r\n            let movePoint = this._movePoints[k];\r\n            if (movePoint) {\r\n                movePoints[i] = movePoint;\r\n            }\r\n            i++;\r\n        });\r\n        if (downPoints.length > 1 && movePoints.length > 1) {\r\n            this.contents._isDragging = false;\r\n            let downPoint0 = downPoints[0];\r\n            let downPoint1 = downPoints[1];\r\n            let movePoint0 = movePoints[0];\r\n            let movePoint1 = movePoints[1];\r\n            if (downPoint0 && downPoint1 && movePoint0 && movePoint1) {\r\n                downPoint0 = this.toLocal(downPoint0);\r\n                downPoint1 = this.toLocal(downPoint1);\r\n                movePoint0 = this.toLocal(movePoint0);\r\n                movePoint1 = this.toLocal(movePoint1);\r\n                let initialDistance = Math.hypot(downPoint1.x - downPoint0.x, downPoint1.y - downPoint0.y);\r\n                let currentDistance = Math.hypot(movePoint1.x - movePoint0.x, movePoint1.y - movePoint0.y);\r\n                let level = currentDistance / initialDistance * this._downScale;\r\n                let moveCenter = { x: movePoint0.x + (movePoint1.x - movePoint0.x) / 2, y: movePoint0.y + (movePoint1.y - movePoint0.y) / 2 };\r\n                let downCenter = { x: downPoint0.x + (downPoint1.x - downPoint0.x) / 2, y: downPoint0.y + (downPoint1.y - downPoint0.y) / 2 };\r\n                let tx = this._downX || 0;\r\n                let ty = this._downY || 0;\r\n                let zoomLevel = this._downScale;\r\n                let xx = moveCenter.x - (-tx + downCenter.x) / zoomLevel * level;\r\n                let yy = moveCenter.y - (-ty + downCenter.y) / zoomLevel * level;\r\n                this.contents.setAll({\r\n                    x: xx,\r\n                    y: yy,\r\n                    scale: level\r\n                });\r\n            }\r\n        }\r\n    }\r\n}\r\nObject.defineProperty(ZoomableContainer, \"className\", {\r\n    enumerable: true,\r\n    configurable: true,\r\n    writable: true,\r\n    value: \"ZoomableContainer\"\r\n});\r\nObject.defineProperty(ZoomableContainer, \"classNames\", {\r\n    enumerable: true,\r\n    configurable: true,\r\n    writable: true,\r\n    value: Container.classNames.concat([ZoomableContainer.className])\r\n});\r\n//# sourceMappingURL=ZoomableContainer.js.map","import type { Time } from \"../../core/util/Animation\";\r\nimport type { Animation } from \"../../core/util/Entity\";\r\nimport type { IDisposer } from \"../../core/util/Disposer\";\r\nimport type { IPoint } from \"../../core/util/IPoint\";\r\nimport type { ISpritePointerEvent } from \"../../core/render/Sprite\";\r\n\r\nimport { Container, IContainerSettings, IContainerPrivate, IContainerEvents } from \"../../core/render/Container\";\r\nimport { p100 } from \"../../core/util/Percent\";\r\nimport { Rectangle } from \"../../core/render/Rectangle\";\r\nimport { color } from \"../../core/util/Color\";\r\n\r\nimport * as $utils from \"../../core/util/Utils\";\r\nimport * as $math from \"../../core/util/Math\";\r\nimport * as $object from \"../../core/util/Object\";\r\nimport * as $type from \"../../core/util/Type\";\r\n\r\nexport interface IZoomableContainerSettings extends IContainerSettings {\r\n\r\n\t/**\r\n\t * Maximum zoom-in level.\r\n\t * \r\n\t * @default 32\r\n\t */\r\n\tmaxZoomLevel?: number;\r\n\r\n\t/**\r\n\t * Maximum zoom-out level.\r\n\t * \r\n\t * @default 1\r\n\t */\r\n\tminZoomLevel?: number;\r\n\r\n\t/**\r\n\t * Zoom level increase/decrease factor with each zoom action.\r\n\t * \r\n\t * @defult 2\r\n\t */\r\n\tzoomStep?: number;\r\n\r\n\t/**\r\n\t * Pinch-zooming is enabled on touch devices.\r\n\t *\r\n\t * @default true\r\n\t */\r\n\tpinchZoom?: boolean;\r\n\r\n\t/**\r\n\t * Animation duration (ms) for zoom animations.\r\n\t *\r\n\t * @default 600\r\n\t */\r\n\tanimationDuration?: number;\r\n\r\n\t/**\r\n\t * Easing function to use for zoom animations.\r\n\t * \r\n\t * @default am5.ease.out(am5.ease.cubic)\r\n\t */\r\n\tanimationEasing?: (t: Time) => Time;\r\n\r\n\t/**\r\n\t * How much of a content can go outside the viewport.\r\n\t *\r\n\t * @default 0.4\r\n\t */\r\n\tmaxPanOut?: number;\r\n\r\n}\r\n\r\nexport interface IZoomableContainerPrivate extends IContainerPrivate {\r\n}\r\n\r\nexport interface IZoomableContainerEvents extends IContainerEvents {\r\n}\r\n\r\n/**\r\n * A version of [[Container]] which adds zooming capabilities.\r\n *\r\n * @see {@link https://www.amcharts.com/docs/v5/concepts/common-elements/containers/#Zoomable_container} for more info\r\n * @since 5.8.0\r\n * @important\r\n */\r\nexport class ZoomableContainer extends Container {\r\n\tpublic static className: string = \"ZoomableContainer\";\r\n\tpublic static classNames: Array<string> = Container.classNames.concat([ZoomableContainer.className]);\r\n\r\n\tdeclare public _settings: IZoomableContainerSettings;\r\n\tdeclare public _privateSettings: IZoomableContainerPrivate;\r\n\tdeclare public _events: IZoomableContainerEvents;\r\n\r\n\tprotected _za?: Animation<this[\"_settings\"][\"scale\"]>;\r\n\tprotected _txa?: Animation<this[\"_settings\"][\"x\"]>;\r\n\tprotected _tya?: Animation<this[\"_settings\"][\"y\"]>;\r\n\r\n\r\n\tprotected _movePoints: { [index: number]: IPoint } = {};\r\n\tprotected _downScale: number = 1;\r\n\tprotected _downX: number = 0;\r\n\tprotected _downY: number = 0;\r\n\r\n\tprotected _pinchDP?: IDisposer;\r\n\r\n\t/**\r\n\t * All elements must be added to `contents.children` instead of `children` of\r\n\t * [[ZoomableContainer]].\r\n\t *\r\n\t * @see {@link https://www.amcharts.com/docs/v5/concepts/common-elements/containers/#Zoomable_container} for more info\r\n\t */\r\n\tpublic contents = this.children.push(Container.new(this._root, {\r\n\t\twidth: p100,\r\n\t\theight: p100,\r\n\t\tx: 0,\r\n\t\ty: 0,\r\n\t\tdraggable: true,\r\n\t\tbackground: Rectangle.new(this._root, {\r\n\t\t\tfill: color(0xffffff),\r\n\t\t\tfillOpacity: 0\r\n\t\t})\r\n\t}))\r\n\r\n\tprotected _wheelDp: IDisposer | undefined;\r\n\r\n\tprotected _afterNew(): void {\r\n\t\tsuper._afterNew();\r\n\r\n\t\tconst events = this.contents.events;\r\n\r\n\t\tthis._disposers.push(events.on(\"pointerdown\", (event) => {\r\n\t\t\tthis._handleThisDown(event);\r\n\t\t}));\r\n\r\n\t\tthis._disposers.push(events.on(\"globalpointerup\", (event) => {\r\n\t\t\tthis._handleThisUp(event);\r\n\t\t}));\r\n\r\n\t\tthis._disposers.push(events.on(\"globalpointermove\", (event) => {\r\n\t\t\tthis._handleThisMove(event);\r\n\t\t}));\r\n\r\n\t\tconst bg = this.contents.get(\"background\");\r\n\t\tif (bg) {\r\n\t\t\tbg.adapters.add(\"width\", (width) => {\r\n\t\t\t\treturn Number(width) * 5;\r\n\t\t\t})\r\n\t\t\tbg.adapters.add(\"height\", (height) => {\r\n\t\t\t\treturn Number(height) * 5;\r\n\t\t\t})\r\n\t\t\tbg.adapters.add(\"x\", (x) => {\r\n\t\t\t\treturn Number(x) - bg.width() / 5 * 2;\r\n\t\t\t})\r\n\t\t\tbg.adapters.add(\"y\", (y) => {\r\n\t\t\t\treturn Number(y) - bg.height() / 5 * 2;\r\n\t\t\t})\r\n\t\t}\r\n\r\n\t\tconst contents = this.contents;\r\n\r\n\t\tcontents.adapters.add(\"x\", (x) => {\r\n\t\t\tif($type.isNumber(x)){\r\n\t\t\t\tlet maxPanOut = this.get(\"maxPanOut\", 0.4);\r\n\t\t\t\tlet w = contents.width();\r\n\r\n\t\t\t\tx = Math.min(w * maxPanOut, x);\r\n\t\t\t\tx = Math.max(this.width() - w * contents.get(\"scale\", 1) * (1 + maxPanOut), x);\r\n\t\t\t}\r\n\t\t\treturn x;\r\n\t\t})\r\n\r\n\t\tcontents.adapters.add(\"y\", (y) => {\r\n\t\t\tif($type.isNumber(y)){\r\n\t\t\t\tlet maxPanOut = this.get(\"maxPanOut\", 0.4);\r\n\t\t\t\tlet h = contents.height();\r\n\r\n\t\t\t\ty = Math.min(h * maxPanOut, y);\r\n\t\t\t\ty = Math.max(this.height() - h * contents.get(\"scale\", 1) * (1 + maxPanOut), y);\r\n\t\t\t}\r\n\t\t\treturn y;\r\n\t\t})\r\n\t}\r\n\r\n\tpublic _prepareChildren() {\r\n\t\tsuper._prepareChildren();\r\n\t\tif (this.isDirty(\"wheelable\")) {\r\n\t\t\tthis._handleSetWheel();\r\n\t\t}\r\n\r\n\t\tthis.contents._display.cancelTouch = this.get(\"pinchZoom\", false);\r\n\t}\r\n\r\n\r\n\tprotected _handleSetWheel() {\r\n\t\tif (this.get(\"wheelable\")) {\r\n\t\t\tif (this._wheelDp) {\r\n\t\t\t\tthis._wheelDp.dispose();\r\n\t\t\t}\r\n\r\n\t\t\tthis._wheelDp = this.events.on(\"wheel\", (event) => {\r\n\t\t\t\tconst wheelEvent = event.originalEvent;\r\n\r\n\t\t\t\t// Ignore wheel event if it is happening on a non-ZoomableContainer element, e.g. if\r\n\t\t\t\t// some page element is over the ZoomableContainer.\r\n\t\t\t\tif ($utils.isLocalEvent(wheelEvent, this)) {\r\n\t\t\t\t\twheelEvent.preventDefault();\r\n\t\t\t\t}\r\n\t\t\t\telse {\r\n\t\t\t\t\treturn;\r\n\t\t\t\t}\r\n\r\n\t\t\t\tconst point = this.toLocal(event.point);\r\n\r\n\t\t\t\tthis._handleWheelZoom(wheelEvent.deltaY, point);\r\n\t\t\t});\r\n\r\n\t\t\tthis._disposers.push(this._wheelDp);\r\n\t\t}\r\n\t\telse {\r\n\t\t\tif (this._wheelDp) {\r\n\t\t\t\tthis._wheelDp.dispose();\r\n\t\t\t}\r\n\t\t}\r\n\t}\r\n\r\n\tprotected _handleWheelZoom(delta: number, point: IPoint) {\r\n\t\tlet step = this.get(\"zoomStep\", 2);\r\n\t\tlet zoomLevel = this.contents.get(\"scale\", 1);\r\n\r\n\t\tlet newZoomLevel = zoomLevel;\r\n\t\tif (delta > 0) {\r\n\t\t\tnewZoomLevel = zoomLevel / step;\r\n\t\t}\r\n\t\telse if (delta < 0) {\r\n\t\t\tnewZoomLevel = zoomLevel * step;\r\n\t\t}\r\n\r\n\t\tif (newZoomLevel != zoomLevel) {\r\n\t\t\tthis.zoomToPoint(point, newZoomLevel)\r\n\t\t}\r\n\t}\r\n\r\n\t/**\r\n\t * Zooms to specific X/Y point.\r\n\t * \r\n\t * @param   point  Center point\r\n\t * @param   level  Zoom level\r\n\t * @return         Zoom Animation object\r\n\t */\r\n\tpublic zoomToPoint(point: IPoint, level: number): Animation<this[\"_settings\"][\"scale\"]> | undefined {\r\n\t\tif (level) {\r\n\t\t\tlevel = $math.fitToRange(level, this.get(\"minZoomLevel\", 1), this.get(\"maxZoomLevel\", 32));\r\n\t\t}\r\n\r\n\t\tconst zoomLevel = this.contents.get(\"scale\", 1);\r\n\r\n\t\tlet x = point.x;\r\n\t\tlet y = point.y;\r\n\r\n\t\tlet cx = x;\r\n\t\tlet cy = y;\r\n\r\n\t\tconst contents = this.contents;\r\n\r\n\t\tlet tx = contents.x();\r\n\t\tlet ty = contents.y();\r\n\r\n\t\tlet xx = cx - ((x - tx) / zoomLevel * level);\r\n\t\tlet yy = cy - ((y - ty) / zoomLevel * level);\r\n\r\n\t\tthis._animateTo(xx, yy, level);\r\n\r\n\t\treturn this._za;\r\n\t}\r\n\r\n\t/**\r\n\t * Zooms the container contents in by `zoomStep`.\r\n\t * \r\n\t * @return Zoom Animation object\r\n\t */\r\n\tpublic zoomIn(): Animation<this[\"_settings\"][\"scale\"]> | undefined {\r\n\t\treturn this.zoomToPoint({ x: this.width() / 2, y: this.height() / 2 }, this.contents.get(\"scale\", 1) * this.get(\"zoomStep\", 2));\r\n\t}\r\n\r\n\t/**\r\n\t * Zooms the container contents out by `zoomStep`.\r\n\t * \r\n\t * @return Zoom Animation object\r\n\t */\r\n\tpublic zoomOut(): Animation<this[\"_settings\"][\"scale\"]> | undefined {\r\n\t\treturn this.zoomToPoint({ x: this.width() / 2, y: this.height() / 2 }, this.contents.get(\"scale\", 1) / this.get(\"zoomStep\", 2));\r\n\t}\r\n\r\n\t/**\r\n\t * Fully zooms out the container contents.\r\n\t * \r\n\t * @return Zoom Animation object\r\n\t */\r\n\tpublic goHome() {\r\n\t\treturn this._animateTo(0, 0, 1);\r\n\t}\r\n\r\n\tprotected _animateTo(x: number, y: number, scale: number) {\r\n\t\tconst duration = this.get(\"animationDuration\", 0);\r\n\t\tconst easing = this.get(\"animationEasing\");\r\n\r\n\t\tconst contents = this.contents;\r\n\t\tthis._txa = contents.animate({ key: \"x\", to: x, duration: duration, easing: easing });\r\n\t\tthis._tya = contents.animate({ key: \"y\", to: y, duration: duration, easing: easing });\r\n\t\tthis._za = contents.animate({ key: \"scale\", to: scale, duration: duration, easing: easing });\r\n\t}\r\n\r\n\r\n\tprotected _handleThisUp(_event: ISpritePointerEvent) {\r\n\t\tthis._downPoints = {}\r\n\t}\r\n\r\n\tprotected _handleThisDown(event: ISpritePointerEvent) {\r\n\r\n\t\tconst contents = this.contents;\r\n\r\n\t\tthis._downScale = contents.get(\"scale\", 1);\r\n\t\tconst downPoints = contents._downPoints;\r\n\r\n\t\tlet count = $object.keys(downPoints).length;\r\n\r\n\t\tif (count == 1) {\r\n\t\t\t// workaround to solve a problem when events are added to some children of chart container (rotation stops working)\r\n\t\t\tlet downPoint = downPoints[1];\r\n\t\t\tif (!downPoint) {\r\n\t\t\t\tdownPoint = downPoints[0];\r\n\t\t\t}\r\n\r\n\t\t\tif (downPoint && (downPoint.x == event.point.x && downPoint.y == event.point.y)) {\r\n\t\t\t\tcount = 0;\r\n\t\t\t}\r\n\t\t}\r\n\r\n\t\tif (count > 0) {\r\n\t\t\tthis._downX = contents.x();\r\n\t\t\tthis._downY = contents.y();\r\n\r\n\t\t\tconst downId = contents._getDownPointId();\r\n\t\t\tif (downId) {\r\n\t\t\t\tlet movePoint = this._movePoints[downId];\r\n\t\t\t\tif (movePoint) {\r\n\t\t\t\t\tcontents._downPoints[downId] = movePoint;\r\n\t\t\t\t}\r\n\t\t\t}\r\n\t\t}\r\n\t}\r\n\r\n\r\n\tprotected _handleThisMove(event: ISpritePointerEvent) {\r\n\t\tconst originalEvent = event.originalEvent as any;\r\n\r\n\t\tconst pointerId = originalEvent.pointerId;\r\n\r\n\t\tif (this.get(\"pinchZoom\")) {\r\n\t\t\tif (pointerId) {\r\n\t\t\t\tthis._movePoints[pointerId] = event.point;\r\n\r\n\t\t\t\tif ($object.keys(this.contents._downPoints).length > 1) {\r\n\t\t\t\t\tthis._handlePinch();\r\n\t\t\t\t\treturn;\r\n\t\t\t\t}\r\n\t\t\t}\r\n\t\t}\r\n\t}\r\n\r\n\tprotected _handlePinch() {\r\n\t\tlet i = 0;\r\n\t\tlet downPoints: Array<IPoint> = [];\r\n\t\tlet movePoints: Array<IPoint> = [];\r\n\r\n\t\t$object.each(this.contents._downPoints, (k, point) => {\r\n\t\t\tdownPoints[i] = point;\r\n\t\t\tlet movePoint = this._movePoints[k];\r\n\t\t\tif (movePoint) {\r\n\t\t\t\tmovePoints[i] = movePoint;\r\n\t\t\t}\r\n\t\t\ti++;\r\n\t\t});\r\n\r\n\t\tif (downPoints.length > 1 && movePoints.length > 1) {\r\n\r\n\t\t\tthis.contents._isDragging = false;\r\n\r\n\t\t\tlet downPoint0 = downPoints[0];\r\n\t\t\tlet downPoint1 = downPoints[1];\r\n\r\n\t\t\tlet movePoint0 = movePoints[0];\r\n\t\t\tlet movePoint1 = movePoints[1];\r\n\r\n\t\t\tif (downPoint0 && downPoint1 && movePoint0 && movePoint1) {\r\n\t\t\t\tdownPoint0 = this.toLocal(downPoint0);\r\n\t\t\t\tdownPoint1 = this.toLocal(downPoint1);\r\n\r\n\t\t\t\tmovePoint0 = this.toLocal(movePoint0);\r\n\t\t\t\tmovePoint1 = this.toLocal(movePoint1);\r\n\r\n\t\t\t\tlet initialDistance = Math.hypot(downPoint1.x - downPoint0.x, downPoint1.y - downPoint0.y);\r\n\t\t\t\tlet currentDistance = Math.hypot(movePoint1.x - movePoint0.x, movePoint1.y - movePoint0.y);\r\n\r\n\t\t\t\tlet level = currentDistance / initialDistance * this._downScale;\r\n\t\t\t\tlet moveCenter = { x: movePoint0.x + (movePoint1.x - movePoint0.x) / 2, y: movePoint0.y + (movePoint1.y - movePoint0.y) / 2 };\r\n\t\t\t\tlet downCenter = { x: downPoint0.x + (downPoint1.x - downPoint0.x) / 2, y: downPoint0.y + (downPoint1.y - downPoint0.y) / 2 };\r\n\r\n\t\t\t\tlet tx = this._downX || 0;\r\n\t\t\t\tlet ty = this._downY || 0;\r\n\r\n\t\t\t\tlet zoomLevel = this._downScale;\r\n\r\n\t\t\t\tlet xx = moveCenter.x - (- tx + downCenter.x) / zoomLevel * level;\r\n\t\t\t\tlet yy = moveCenter.y - (- ty + downCenter.y) / zoomLevel * level;\r\n\r\n\t\t\t\tthis.contents.setAll({\r\n\t\t\t\t\tx: xx,\r\n\t\t\t\t\ty: yy,\r\n\t\t\t\t\tscale: level\r\n\t\t\t\t});\r\n\t\t\t}\r\n\t\t}\r\n\t}\r\n}","import { Container } from \"../../core/render/Container\";\r\nimport { Button } from \"../../core/render/Button\";\r\nimport { Graphics } from \"../../core/render/Graphics\";\r\nimport { MultiDisposer } from \"../../core/util/Disposer\";\r\nimport { ZoomableContainer } from \"./ZoomableContainer\";\r\n/**\r\n * A tool that displays button for zoomable targets.\r\n *\r\n * @since 5.8.0\r\n * @important\r\n */\r\nexport class ZoomTools extends Container {\r\n    constructor() {\r\n        super(...arguments);\r\n        /**\r\n         * A [[Button]] for home.\r\n         */\r\n        Object.defineProperty(this, \"homeButton\", {\r\n            enumerable: true,\r\n            configurable: true,\r\n            writable: true,\r\n            value: this.children.push(Button.new(this._root, { width: 35, height: 35, themeTags: [\"home\"] }))\r\n        });\r\n        /**\r\n         * A [[Button]] for zoom in.\r\n         */\r\n        Object.defineProperty(this, \"plusButton\", {\r\n            enumerable: true,\r\n            configurable: true,\r\n            writable: true,\r\n            value: this.children.push(Button.new(this._root, { width: 35, height: 35, themeTags: [\"plus\"] }))\r\n        });\r\n        /**\r\n         * A [[Button]] for zoom out.\r\n         */\r\n        Object.defineProperty(this, \"minusButton\", {\r\n            enumerable: true,\r\n            configurable: true,\r\n            writable: true,\r\n            value: this.children.push(Button.new(this._root, { width: 35, height: 35, themeTags: [\"minus\"] }))\r\n        });\r\n        Object.defineProperty(this, \"_disposer\", {\r\n            enumerable: true,\r\n            configurable: true,\r\n            writable: true,\r\n            value: void 0\r\n        });\r\n        Object.defineProperty(this, \"_targetDisposer\", {\r\n            enumerable: true,\r\n            configurable: true,\r\n            writable: true,\r\n            value: void 0\r\n        });\r\n    }\r\n    _afterNew() {\r\n        super._afterNew();\r\n        this.set(\"position\", \"absolute\");\r\n        this.set(\"layout\", this._root.verticalLayout);\r\n        this.addTag(\"zoomtools\");\r\n        this.plusButton.setAll({\r\n            icon: Graphics.new(this._root, { themeTags: [\"icon\"] }),\r\n            layout: undefined\r\n        });\r\n        this.minusButton.setAll({\r\n            icon: Graphics.new(this._root, { themeTags: [\"icon\"] }),\r\n            layout: undefined\r\n        });\r\n        this.homeButton.setAll({\r\n            icon: Graphics.new(this._root, { themeTags: [\"icon\"] }),\r\n            layout: undefined\r\n        });\r\n    }\r\n    _prepareChildren() {\r\n        super._prepareChildren();\r\n        if (this.isDirty(\"target\")) {\r\n            const target = this.get(\"target\");\r\n            const previous = this._prevSettings.target;\r\n            if (target) {\r\n                if (target instanceof ZoomableContainer) {\r\n                    this._targetDisposer = this.addDisposer(target.contents.on(\"scale\", (scale) => {\r\n                        if (scale == target.get(\"minZoomLevel\")) {\r\n                            this.minusButton.set(\"disabled\", true);\r\n                        }\r\n                        else {\r\n                            this.minusButton.set(\"disabled\", false);\r\n                        }\r\n                        if (scale == target.get(\"maxZoomLevel\")) {\r\n                            this.plusButton.set(\"disabled\", true);\r\n                        }\r\n                        else {\r\n                            this.plusButton.set(\"disabled\", false);\r\n                        }\r\n                    }));\r\n                    this.root.events.once(\"frameended\", () => {\r\n                        if (target.get(\"scale\") == target.get(\"minZoomLevel\")) {\r\n                            this.minusButton.set(\"disabled\", true);\r\n                        }\r\n                    });\r\n                }\r\n                this._disposer = new MultiDisposer([\r\n                    this.plusButton.events.on(\"click\", () => {\r\n                        target.zoomIn();\r\n                    }),\r\n                    this.minusButton.events.on(\"click\", () => {\r\n                        target.zoomOut();\r\n                    }),\r\n                    this.homeButton.events.on(\"click\", () => {\r\n                        target.goHome();\r\n                    })\r\n                ]);\r\n            }\r\n            if (previous) {\r\n                if (this._disposer) {\r\n                    this._disposer.dispose();\r\n                }\r\n                if (this._targetDisposer) {\r\n                    this._targetDisposer.dispose();\r\n                }\r\n            }\r\n        }\r\n    }\r\n}\r\nObject.defineProperty(ZoomTools, \"className\", {\r\n    enumerable: true,\r\n    configurable: true,\r\n    writable: true,\r\n    value: \"ZoomTools\"\r\n});\r\nObject.defineProperty(ZoomTools, \"classNames\", {\r\n    enumerable: true,\r\n    configurable: true,\r\n    writable: true,\r\n    value: Container.classNames.concat([ZoomTools.className])\r\n});\r\n//# sourceMappingURL=ZoomTools.js.map","import { Container, IContainerPrivate, IContainerSettings, IContainerEvents } from \"../../core/render/Container\";\r\nimport { Button } from \"../../core/render/Button\";\r\nimport { Graphics } from \"../../core/render/Graphics\";\r\nimport { MultiDisposer, IDisposer } from \"../../core/util/Disposer\";\r\nimport { ZoomableContainer } from \"./ZoomableContainer\";\r\n\r\nexport interface IZoomable {\r\n\tzoomIn(): void;\r\n\tzoomOut(): void;\r\n\tgoHome(): void;\r\n}\r\n\r\nexport interface IZoomToolsSettings extends IContainerSettings {\r\n\r\n\t/**\r\n\t * A target element that zoom tools will control, e.g. [[ZoomableContainer]].\r\n\t */\r\n\ttarget?: IZoomable;\r\n\r\n}\r\n\r\nexport interface IZoomToolsPrivate extends IContainerPrivate {\r\n}\r\n\r\nexport interface IZoomToolsEvents extends IContainerEvents {\r\n}\r\n\r\n/**\r\n * A tool that displays button for zoomable targets.\r\n *\r\n * @since 5.8.0\r\n * @important\r\n */\r\nexport class ZoomTools extends Container {\r\n\r\n\tpublic static className: string = \"ZoomTools\";\r\n\tpublic static classNames: Array<string> = Container.classNames.concat([ZoomTools.className]);\r\n\tdeclare public _events: IContainerEvents;\r\n\r\n\t/**\r\n\t * A [[Button]] for home.\r\n\t */\r\n\tpublic readonly homeButton: Button = this.children.push(Button.new(this._root, { width: 35, height: 35, themeTags: [\"home\"] }));\r\n\r\n\t/**\r\n\t * A [[Button]] for zoom in.\r\n\t */\r\n\tpublic readonly plusButton: Button = this.children.push(Button.new(this._root, { width: 35, height: 35, themeTags: [\"plus\"] }));\r\n\r\n\t/**\r\n\t * A [[Button]] for zoom out.\r\n\t */\r\n\tpublic readonly minusButton: Button = this.children.push(Button.new(this._root, { width: 35, height: 35, themeTags: [\"minus\"] }));\r\n\r\n\tdeclare public _settings: IZoomToolsSettings;\r\n\tdeclare public _privateSettings: IZoomToolsPrivate;\r\n\r\n\tprotected _disposer: MultiDisposer | undefined;\r\n\tprotected _targetDisposer: IDisposer | undefined;\r\n\r\n\tprotected _afterNew() {\r\n\t\tsuper._afterNew();\r\n\r\n\t\tthis.set(\"position\", \"absolute\");\r\n\r\n\t\tthis.set(\"layout\", this._root.verticalLayout);\r\n\t\tthis.addTag(\"zoomtools\");\r\n\r\n\t\tthis.plusButton.setAll({\r\n\t\t\ticon: Graphics.new(this._root, { themeTags: [\"icon\"] }),\r\n\t\t\tlayout: undefined\r\n\t\t});\r\n\r\n\t\tthis.minusButton.setAll({\r\n\t\t\ticon: Graphics.new(this._root, { themeTags: [\"icon\"] }),\r\n\t\t\tlayout: undefined\r\n\t\t});\r\n\r\n\t\tthis.homeButton.setAll({\r\n\t\t\ticon: Graphics.new(this._root, { themeTags: [\"icon\"] }),\r\n\t\t\tlayout: undefined\r\n\t\t});\r\n\t}\r\n\r\n\tpublic _prepareChildren() {\r\n\t\tsuper._prepareChildren();\r\n\r\n\t\tif (this.isDirty(\"target\")) {\r\n\t\t\tconst target = this.get(\"target\");\r\n\r\n\t\t\tconst previous = this._prevSettings.target;\r\n\t\t\tif (target) {\r\n\t\t\t\tif (target instanceof ZoomableContainer) {\r\n\t\t\t\t\tthis._targetDisposer = this.addDisposer(target.contents.on(\"scale\", (scale) => {\r\n\t\t\t\t\t\tif (scale == target.get(\"minZoomLevel\")) {\r\n\t\t\t\t\t\t\tthis.minusButton.set(\"disabled\", true)\r\n\t\t\t\t\t\t}\r\n\t\t\t\t\t\telse {\r\n\t\t\t\t\t\t\tthis.minusButton.set(\"disabled\", false)\r\n\t\t\t\t\t\t}\r\n\r\n\t\t\t\t\t\tif (scale == target.get(\"maxZoomLevel\")) {\r\n\t\t\t\t\t\t\tthis.plusButton.set(\"disabled\", true)\r\n\t\t\t\t\t\t}\r\n\t\t\t\t\t\telse {\r\n\t\t\t\t\t\t\tthis.plusButton.set(\"disabled\", false)\r\n\t\t\t\t\t\t}\r\n\t\t\t\t\t}))\r\n\t\t\t\t\tthis.root.events.once(\"frameended\", () => {\r\n\t\t\t\t\t\tif (target.get(\"scale\") == target.get(\"minZoomLevel\")) {\r\n\t\t\t\t\t\t\tthis.minusButton.set(\"disabled\", true)\r\n\t\t\t\t\t\t}\r\n\t\t\t\t\t})\r\n\t\t\t\t}\r\n\r\n\t\t\t\tthis._disposer = new MultiDisposer([\r\n\t\t\t\t\tthis.plusButton.events.on(\"click\", () => {\r\n\t\t\t\t\t\ttarget.zoomIn()\r\n\t\t\t\t\t}),\r\n\t\t\t\t\tthis.minusButton.events.on(\"click\", () => {\r\n\t\t\t\t\t\ttarget.zoomOut()\r\n\t\t\t\t\t}),\r\n\t\t\t\t\tthis.homeButton.events.on(\"click\", () => {\r\n\t\t\t\t\t\ttarget.goHome()\r\n\t\t\t\t\t})])\r\n\t\t\t}\r\n\r\n\t\t\tif (previous) {\r\n\t\t\t\tif (this._disposer) {\r\n\t\t\t\t\tthis._disposer.dispose();\r\n\t\t\t\t}\r\n\t\t\t\tif (this._targetDisposer) {\r\n\t\t\t\t\tthis._targetDisposer.dispose();\r\n\t\t\t\t}\r\n\t\t\t}\r\n\t\t}\r\n\t}\r\n}\r\n","import { RoundedRectangle } from \"../render/RoundedRectangle\";\r\nimport { Container } from \"./Container\";\r\nimport * as $utils from \"../../core/util/Utils\";\r\n/**\r\n * Draws an interactive button.\r\n *\r\n * @see {@link https://www.amcharts.com/docs/v5/concepts/common-elements/buttons/} for more info\r\n * @important\r\n */\r\nexport class Button extends Container {\r\n    _afterNew() {\r\n        this._settings.themeTags = $utils.mergeTags(this._settings.themeTags, [\"button\"]);\r\n        super._afterNew();\r\n        if (!this._settings.background) {\r\n            this.set(\"background\", RoundedRectangle.new(this._root, {\r\n                themeTags: $utils.mergeTags(this._settings.themeTags, [\"background\"])\r\n            }));\r\n        }\r\n        this.setPrivate(\"trustBounds\", true);\r\n    }\r\n    _prepareChildren() {\r\n        super._prepareChildren();\r\n        if (this.isDirty(\"icon\")) {\r\n            const previous = this._prevSettings.icon;\r\n            const icon = this.get(\"icon\");\r\n            if (icon !== previous) {\r\n                this._disposeProperty(\"icon\");\r\n                if (previous) {\r\n                    previous.dispose();\r\n                }\r\n                if (icon) {\r\n                    this.children.push(icon);\r\n                }\r\n                this._prevSettings.icon = icon;\r\n            }\r\n        }\r\n        if (this.isDirty(\"label\")) {\r\n            const previous = this._prevSettings.label;\r\n            const label = this.get(\"label\");\r\n            if (label !== previous) {\r\n                this._disposeProperty(\"label\");\r\n                if (previous) {\r\n                    previous.dispose();\r\n                }\r\n                if (label) {\r\n                    this.children.push(label);\r\n                }\r\n                this._prevSettings.label = label;\r\n            }\r\n        }\r\n    }\r\n}\r\nObject.defineProperty(Button, \"className\", {\r\n    enumerable: true,\r\n    configurable: true,\r\n    writable: true,\r\n    value: \"Button\"\r\n});\r\nObject.defineProperty(Button, \"classNames\", {\r\n    enumerable: true,\r\n    configurable: true,\r\n    writable: true,\r\n    value: Container.classNames.concat([Button.className])\r\n});\r\n//# sourceMappingURL=Button.js.map","import type { Label } from \"../render/Label\";\nimport type { Graphics } from \"../render/Graphics\";\n\nimport { RoundedRectangle } from \"../render/RoundedRectangle\";\nimport { Container, IContainerPrivate, IContainerSettings } from \"./Container\";\n\nimport * as $utils from \"../../core/util/Utils\";\n\nexport interface IButtonSettings extends IContainerSettings {\n\n\t/**\n\t * A [[Label]] element for the button to show as a label.\n\t */\n\tlabel?: Label;\n\n\t/**\n\t * A [[Graphics]] element for the button to show as icon.\n\t */\n\ticon?: Graphics;\n\n}\n\nexport interface IButtonPrivate extends IContainerPrivate {\n}\n\n/**\n * Draws an interactive button.\n *\n * @see {@link https://www.amcharts.com/docs/v5/concepts/common-elements/buttons/} for more info\n * @important\n */\nexport class Button extends Container {\n\tprotected _afterNew() {\n\t\tthis._settings.themeTags = $utils.mergeTags(this._settings.themeTags, [\"button\"]);\n\n\t\tsuper._afterNew();\n\n\t\tif (!this._settings.background) {\n\t\t\tthis.set(\"background\", RoundedRectangle.new(this._root, {\n\t\t\t\tthemeTags: $utils.mergeTags(this._settings.themeTags, [\"background\"])\n\t\t\t}));\n\t\t}\n\n\t\tthis.setPrivate(\"trustBounds\", true);\n\t}\n\n\tdeclare public _settings: IButtonSettings;\n\tdeclare public _privateSettings: IButtonPrivate;\n\n\tpublic static className: string = \"Button\";\n\tpublic static classNames: Array<string> = Container.classNames.concat([Button.className]);\n\n\n\tpublic _prepareChildren() {\n\t\tsuper._prepareChildren();\n\n\t\tif (this.isDirty(\"icon\")) {\n\t\t\tconst previous = this._prevSettings.icon;\n\t\t\tconst icon = this.get(\"icon\")!;\n\t\t\tif (icon !== previous) {\n\t\t\t\tthis._disposeProperty(\"icon\");\n\n\t\t\t\tif (previous) {\n\t\t\t\t\tprevious.dispose();\n\t\t\t\t}\n\t\t\t\tif (icon) {\n\t\t\t\t\tthis.children.push(icon);\n\t\t\t\t}\n\n\t\t\t\tthis._prevSettings.icon = icon;\n\t\t\t}\n\t\t}\n\n\t\tif (this.isDirty(\"label\")) {\n\t\t\tconst previous = this._prevSettings.label;\n\t\t\tconst label = this.get(\"label\")!;\n\t\t\tif (label !== previous) {\n\t\t\t\tthis._disposeProperty(\"label\");\n\t\t\t\tif (previous) {\n\t\t\t\t\tprevious.dispose();\n\t\t\t\t}\n\n\t\t\t\tif (label) {\n\t\t\t\t\tthis.children.push(label);\n\t\t\t\t}\n\n\t\t\t\tthis._prevSettings.label = label;\n\t\t\t}\n\t\t}\n\t}\n}\n","import * as $type from \"../util/Type\";\r\nimport * as $math from \"../util/Math\";\r\nimport * as $utils from \"../util/Utils\";\r\nimport { Rectangle } from \"./Rectangle\";\r\n/**\r\n * Draws a rectangle with rounded corners.\r\n *\r\n * @see {@link https://www.amcharts.com/docs/v5/concepts/common-elements/graphics/} for more info\r\n * @important\r\n */\r\nexport class RoundedRectangle extends Rectangle {\r\n    _beforeChanged() {\r\n        super._beforeChanged();\r\n        if (this.isDirty(\"cornerRadiusTL\") || this.isDirty(\"cornerRadiusTR\") || this.isDirty(\"cornerRadiusBR\") || this.isDirty(\"cornerRadiusBL\")) {\r\n            this._clear = true;\r\n        }\r\n    }\r\n    _draw() {\r\n        let width = this.width();\r\n        let height = this.height();\r\n        let w = width;\r\n        let h = height;\r\n        let wSign = w / Math.abs(width);\r\n        let hSign = h / Math.abs(height);\r\n        if ($type.isNumber(w) && $type.isNumber(h)) {\r\n            let minSide = Math.min(w, h) / 2;\r\n            let crtl = $utils.relativeToValue(this.get(\"cornerRadiusTL\", 8), minSide);\r\n            let crtr = $utils.relativeToValue(this.get(\"cornerRadiusTR\", 8), minSide);\r\n            let crbr = $utils.relativeToValue(this.get(\"cornerRadiusBR\", 8), minSide);\r\n            let crbl = $utils.relativeToValue(this.get(\"cornerRadiusBL\", 8), minSide);\r\n            let maxcr = Math.min(Math.abs(w / 2), Math.abs(h / 2));\r\n            crtl = $math.fitToRange(crtl, 0, maxcr);\r\n            crtr = $math.fitToRange(crtr, 0, maxcr);\r\n            crbr = $math.fitToRange(crbr, 0, maxcr);\r\n            crbl = $math.fitToRange(crbl, 0, maxcr);\r\n            const display = this._display;\r\n            display.moveTo(crtl * wSign, 0);\r\n            display.lineTo(w - crtr * wSign, 0);\r\n            if (crtr > 0) {\r\n                display.arcTo(w, 0, w, crtr * hSign, crtr);\r\n            }\r\n            display.lineTo(w, h - crbr * hSign);\r\n            if (crbr > 0) {\r\n                display.arcTo(w, h, w - crbr * wSign, h, crbr);\r\n            }\r\n            display.lineTo(crbl * wSign, h);\r\n            if (crbl > 0) {\r\n                display.arcTo(0, h, 0, h - crbl * hSign, crbl);\r\n            }\r\n            display.lineTo(0, crtl * hSign);\r\n            if (crtl > 0) {\r\n                display.arcTo(0, 0, crtl * wSign, 0, crtl);\r\n            }\r\n            display.closePath();\r\n        }\r\n    }\r\n}\r\nObject.defineProperty(RoundedRectangle, \"className\", {\r\n    enumerable: true,\r\n    configurable: true,\r\n    writable: true,\r\n    value: \"RoundedRectangle\"\r\n});\r\nObject.defineProperty(RoundedRectangle, \"classNames\", {\r\n    enumerable: true,\r\n    configurable: true,\r\n    writable: true,\r\n    value: Rectangle.classNames.concat([RoundedRectangle.className])\r\n});\r\n//# sourceMappingURL=RoundedRectangle.js.map","import * as $type from \"../util/Type\";\nimport * as $math from \"../util/Math\";\nimport * as $utils from \"../util/Utils\";\nimport { Rectangle, IRectangleSettings, IRectanglePrivate } from \"./Rectangle\";\n\n\nexport interface IRoundedRectangleSettings extends IRectangleSettings {\n\n\t/**\n\t * Radius of the top-left corner in pixels.\n\t */\n\tcornerRadiusTL?: number;\n\n\t/**\n\t * Radius of the top-right corner in pixels.\n\t */\n\tcornerRadiusTR?: number;\n\n\t/**\n\t * Radius of the botttom-right corner in pixels.\n\t */\n\tcornerRadiusBR?: number;\n\n\t/**\n\t * Radius of the bottom-left corner in pixels.\n\t */\n\tcornerRadiusBL?: number;\n\n}\n\nexport interface IRoundedRectanglePrivate extends IRectanglePrivate {\n}\n\n/**\n * Draws a rectangle with rounded corners.\n *\n * @see {@link https://www.amcharts.com/docs/v5/concepts/common-elements/graphics/} for more info\n * @important\n */\nexport class RoundedRectangle extends Rectangle {\n\n\tdeclare public _settings: IRoundedRectangleSettings;\n\tdeclare public _privateSettings: IRoundedRectanglePrivate;\n\n\tpublic static className: string = \"RoundedRectangle\";\n\tpublic static classNames: Array<string> = Rectangle.classNames.concat([RoundedRectangle.className]);\n\n\tpublic _beforeChanged() {\n\t\tsuper._beforeChanged();\n\n\t\tif (this.isDirty(\"cornerRadiusTL\") || this.isDirty(\"cornerRadiusTR\") || this.isDirty(\"cornerRadiusBR\") || this.isDirty(\"cornerRadiusBL\")) {\n\t\t\tthis._clear = true;\n\t\t}\n\t}\n\n\tpublic _draw() {\n\t\tlet width = this.width();\n\t\tlet height = this.height();\n\n\t\tlet w = width;\n\t\tlet h = height;\n\n\t\tlet wSign = w / Math.abs(width);\n\t\tlet hSign = h / Math.abs(height);\n\n\t\tif ($type.isNumber(w) && $type.isNumber(h)) {\n\n\t\t\tlet minSide = Math.min(w, h) / 2;\n\n\t\t\tlet crtl = $utils.relativeToValue(this.get(\"cornerRadiusTL\", 8), minSide);\n\t\t\tlet crtr = $utils.relativeToValue(this.get(\"cornerRadiusTR\", 8), minSide);\n\t\t\tlet crbr = $utils.relativeToValue(this.get(\"cornerRadiusBR\", 8), minSide);\n\t\t\tlet crbl = $utils.relativeToValue(this.get(\"cornerRadiusBL\", 8), minSide);\n\n\t\t\tlet maxcr = Math.min(Math.abs(w / 2), Math.abs(h / 2));\n\n\t\t\tcrtl = $math.fitToRange(crtl, 0, maxcr);\n\t\t\tcrtr = $math.fitToRange(crtr, 0, maxcr);\n\t\t\tcrbr = $math.fitToRange(crbr, 0, maxcr);\n\t\t\tcrbl = $math.fitToRange(crbl, 0, maxcr);\n\n\t\t\tconst display = this._display;\n\t\t\tdisplay.moveTo(crtl * wSign, 0);\n\t\t\tdisplay.lineTo(w - crtr * wSign, 0);\n\t\t\tif (crtr > 0) {\n\t\t\t\tdisplay.arcTo(w, 0, w, crtr * hSign, crtr);\n\t\t\t}\n\t\t\tdisplay.lineTo(w, h - crbr * hSign);\n\t\t\tif (crbr > 0) {\n\t\t\t\tdisplay.arcTo(w, h, w - crbr * wSign, h, crbr);\n\t\t\t}\n\t\t\tdisplay.lineTo(crbl * wSign, h);\n\t\t\tif (crbl > 0) {\n\t\t\t\tdisplay.arcTo(0, h, 0, h - crbl * hSign, crbl);\n\t\t\t}\n\t\t\tdisplay.lineTo(0, crtl * hSign);\n\t\t\tif (crtl > 0) {\n\t\t\t\tdisplay.arcTo(0, 0, crtl * wSign, 0, crtl);\n\t\t\t}\n\t\t\tdisplay.closePath();\n\t\t}\n\t}\n}\n","import { LinkedHierarchy } from \"./LinkedHierarchy\";\r\nimport * as $array from \"../../core/util/Array\";\r\nimport * as $utils from \"../../core/util/Utils\";\r\nimport * as $type from \"../../core/util/Type\";\r\nimport * as d3Force from \"d3-force\";\r\n;\r\n/**\r\n * Creates a force-directed tree.\r\n *\r\n * @see {@link https://www.amcharts.com/docs/v5/charts/hierarchy/force-directed/} for more info\r\n * @important\r\n */\r\nexport class ForceDirected extends LinkedHierarchy {\r\n    constructor() {\r\n        super(...arguments);\r\n        Object.defineProperty(this, \"_tag\", {\r\n            enumerable: true,\r\n            configurable: true,\r\n            writable: true,\r\n            value: \"forcedirected\"\r\n        });\r\n        /**\r\n         * @ignore\r\n         */\r\n        Object.defineProperty(this, \"d3forceSimulation\", {\r\n            enumerable: true,\r\n            configurable: true,\r\n            writable: true,\r\n            value: d3Force.forceSimulation()\r\n        });\r\n        /**\r\n         * @ignore\r\n         */\r\n        Object.defineProperty(this, \"collisionForce\", {\r\n            enumerable: true,\r\n            configurable: true,\r\n            writable: true,\r\n            value: d3Force.forceCollide(20)\r\n        });\r\n        /**\r\n         * @ignore\r\n         */\r\n        Object.defineProperty(this, \"linkForce\", {\r\n            enumerable: true,\r\n            configurable: true,\r\n            writable: true,\r\n            value: d3Force.forceLink()\r\n        });\r\n        Object.defineProperty(this, \"_nodes\", {\r\n            enumerable: true,\r\n            configurable: true,\r\n            writable: true,\r\n            value: []\r\n        });\r\n        Object.defineProperty(this, \"_links\", {\r\n            enumerable: true,\r\n            configurable: true,\r\n            writable: true,\r\n            value: []\r\n        });\r\n        Object.defineProperty(this, \"_tick\", {\r\n            enumerable: true,\r\n            configurable: true,\r\n            writable: true,\r\n            value: 0\r\n        });\r\n        Object.defineProperty(this, \"_nodesDirty\", {\r\n            enumerable: true,\r\n            configurable: true,\r\n            writable: true,\r\n            value: false\r\n        });\r\n    }\r\n    _afterNew() {\r\n        super._afterNew();\r\n        this.d3forceSimulation.on(\"tick\", () => {\r\n            this._tick++;\r\n            this.updateNodePositions();\r\n        });\r\n    }\r\n    _prepareChildren() {\r\n        super._prepareChildren();\r\n        if (this.isDirty(\"showOnFrame\")) {\r\n            const showOnFrame = this.get(\"showOnFrame\");\r\n            if (showOnFrame > this._tick) {\r\n                this.nodesContainer.setPrivate(\"visible\", false);\r\n                this.linksContainer.setPrivate(\"visible\", false);\r\n            }\r\n        }\r\n        const d3forceSimulation = this.d3forceSimulation;\r\n        if (this.isDirty(\"velocityDecay\")) {\r\n            d3forceSimulation.velocityDecay(this.get(\"velocityDecay\", 0));\r\n        }\r\n        if (this.isDirty(\"initialFrames\")) {\r\n            d3forceSimulation.alphaDecay(1 - Math.pow(0.001, 1 / this.get(\"initialFrames\", 500)));\r\n        }\r\n    }\r\n    /**\r\n     * @ignore\r\n     */\r\n    restartSimulation(alpha) {\r\n        const d3forceSimulation = this.d3forceSimulation;\r\n        if (d3forceSimulation.alpha() < .25) {\r\n            d3forceSimulation.alpha(alpha);\r\n            d3forceSimulation.restart();\r\n        }\r\n    }\r\n    _handleRadiusChange() {\r\n        this._updateForces();\r\n    }\r\n    processDataItem(dataItem) {\r\n        const d3ForceNode = { index: this._index, x: this.innerWidth() / 2, y: this.innerHeight() / 2, dataItem: dataItem };\r\n        const index = this._nodes.push(d3ForceNode) - 1;\r\n        d3ForceNode.index = index;\r\n        this.d3forceSimulation.nodes(this._nodes);\r\n        dataItem.set(\"d3ForceNode\", d3ForceNode);\r\n        super.processDataItem(dataItem);\r\n        const node = dataItem.get(\"node\");\r\n        node.set(\"x\", -10000);\r\n        node.on(\"scale\", () => {\r\n            this._updateForces();\r\n        });\r\n        node.events.on(\"dragged\", () => {\r\n            d3ForceNode.fx = node.x();\r\n            d3ForceNode.fy = node.y();\r\n            this._updateForces();\r\n        });\r\n        node.events.on(\"dragstop\", () => {\r\n            if (dataItem.get(\"x\") == null) {\r\n                d3ForceNode.fx = undefined;\r\n            }\r\n            if (dataItem.get(\"y\") == null) {\r\n                d3ForceNode.fy = undefined;\r\n            }\r\n        });\r\n    }\r\n    _updateValues(d3HierarchyNode) {\r\n        super._updateValues(d3HierarchyNode);\r\n        this._nodesDirty = true;\r\n        const d3forceSimulation = this.d3forceSimulation;\r\n        d3forceSimulation.force(\"collision\", this.collisionForce);\r\n        d3forceSimulation.nodes(this._nodes);\r\n        this.linkForce = d3Force.forceLink(this._links);\r\n        d3forceSimulation.force(\"link\", this.linkForce);\r\n    }\r\n    _updateVisuals() {\r\n        super._updateVisuals();\r\n        this.restartSimulation(.3);\r\n    }\r\n    _updateChildren() {\r\n        super._updateChildren();\r\n        const d3forceSimulation = this.d3forceSimulation;\r\n        if (this._sizeDirty) {\r\n            let w = Math.max(50, this.innerWidth());\r\n            let h = Math.max(50, this.innerHeight());\r\n            let pt = this.get(\"paddingTop\", 0);\r\n            let pl = this.get(\"paddingLeft\", 0);\r\n            let centerStrength = this.get(\"centerStrength\", 1);\r\n            d3forceSimulation.force(\"x\", d3Force.forceX().x(w / 2 + pl).strength(centerStrength * 100 / w));\r\n            d3forceSimulation.force(\"y\", d3Force.forceY().y(h / 2 + pt).strength(centerStrength * 100 / h));\r\n        }\r\n        if (this._nodesDirty) {\r\n            this._updateForces();\r\n        }\r\n    }\r\n    _updateForces() {\r\n        const d3forceSimulation = this.d3forceSimulation;\r\n        d3forceSimulation.force(\"manybody\", d3Force.forceManyBody().strength((d3node) => {\r\n            let dataItem = d3node.dataItem;\r\n            let node = dataItem.get(\"node\");\r\n            let circle = dataItem.get(\"circle\");\r\n            let manyBodyStrength = this.get(\"manyBodyStrength\", -15);\r\n            if (circle) {\r\n                return circle.get(\"radius\", 1) * node.get(\"scale\", 1) * manyBodyStrength;\r\n            }\r\n            return 0;\r\n        }));\r\n        this.collisionForce.radius((d3node) => {\r\n            let dataItem = d3node.dataItem;\r\n            let node = dataItem.get(\"node\");\r\n            let circle = dataItem.get(\"circle\");\r\n            let outerCircle = dataItem.get(\"outerCircle\");\r\n            if (circle && outerCircle) {\r\n                let radius = circle.get(\"radius\", 1);\r\n                if (!outerCircle.isHidden()) {\r\n                    radius = radius * outerCircle.get(\"scale\", 1.1);\r\n                }\r\n                radius *= node.get(\"scale\", 1);\r\n                return radius + this.get(\"nodePadding\", 0);\r\n            }\r\n        });\r\n        this.restartSimulation(0.3);\r\n    }\r\n    _animatePositions(_dataItem) {\r\n        // void, do not remove\r\n    }\r\n    _clearDirty() {\r\n        super._clearDirty();\r\n        this._nodesDirty = false;\r\n    }\r\n    /**\r\n     * @ignore\r\n     */\r\n    updateNodePositions() {\r\n        const linkForce = this.linkForce;\r\n        if (linkForce) {\r\n            linkForce.distance((linkDatum) => {\r\n                return this.getDistance(linkDatum);\r\n            });\r\n            linkForce.strength((linkDatum) => {\r\n                return this.getStrength(linkDatum);\r\n            });\r\n        }\r\n        if (this._tick == this.get(\"showOnFrame\")) {\r\n            this.nodesContainer.setPrivate(\"visible\", true);\r\n            this.linksContainer.setPrivate(\"visible\", true);\r\n        }\r\n        let d3Nodes = this.d3forceSimulation.nodes();\r\n        $array.each(d3Nodes, (d3Node) => {\r\n            const dataItem = d3Node.dataItem;\r\n            const node = dataItem.get(\"node\");\r\n            node.set(\"x\", d3Node.x);\r\n            node.set(\"y\", d3Node.y);\r\n        });\r\n    }\r\n    /**\r\n     * @ignore\r\n     */\r\n    updateLinkWith(dataItems) {\r\n        $array.each(dataItems, (dataItem) => {\r\n            const linkWith = dataItem.get(\"linkWith\");\r\n            if (linkWith) {\r\n                $array.each(linkWith, (id) => {\r\n                    const linkWithDataItem = this._getDataItemById(this.dataItems, id);\r\n                    if (linkWithDataItem) {\r\n                        this.linkDataItems(dataItem, linkWithDataItem, this.get(\"linkWithStrength\"));\r\n                    }\r\n                });\r\n            }\r\n            const children = dataItem.get(\"children\");\r\n            if (children) {\r\n                this.updateLinkWith(children);\r\n            }\r\n        });\r\n    }\r\n    /**\r\n     * @ignore\r\n     */\r\n    getDistance(linkDatum) {\r\n        let sourceDataItem = linkDatum.sourceDataItem;\r\n        let targetDataItem = linkDatum.targetDataItem;\r\n        let distance = 0;\r\n        if (sourceDataItem && targetDataItem) {\r\n            const targetNode = targetDataItem.get(\"node\");\r\n            if (targetNode.isHidden()) {\r\n                return 0;\r\n            }\r\n            let link = linkDatum.link;\r\n            if (link) {\r\n                distance = link.get(\"distance\", 1);\r\n            }\r\n            const sourceNode = sourceDataItem.get(\"node\");\r\n            if (targetNode.isHidden()) {\r\n                distance = 1;\r\n            }\r\n            return (distance * (sourceDataItem.get(\"circle\").get(\"radius\", 1) * sourceNode.get(\"scale\", 1) + targetDataItem.get(\"circle\").get(\"radius\", 1) * targetNode.get(\"scale\", 1)));\r\n        }\r\n        return distance;\r\n    }\r\n    /**\r\n     * @ignore\r\n     */\r\n    getStrength(linkDatum) {\r\n        let strength = 0;\r\n        let link = linkDatum.link;\r\n        if (link) {\r\n            strength = link.get(\"strength\", 1);\r\n        }\r\n        const targetDataItem = linkDatum.targetDataItem;\r\n        strength *= targetDataItem.get(\"node\").get(\"scale\");\r\n        return strength;\r\n    }\r\n    _updateNode(dataItem) {\r\n        super._updateNode(dataItem);\r\n        this._updateRadius(dataItem);\r\n        const x = dataItem.get(\"x\");\r\n        const y = dataItem.get(\"y\");\r\n        const d3Node = dataItem.get(\"d3ForceNode\");\r\n        if (x != null) {\r\n            d3Node.fx = $utils.relativeToValue(x, this.innerWidth());\r\n        }\r\n        else {\r\n            d3Node.fx = undefined;\r\n        }\r\n        if (y != null) {\r\n            d3Node.fy = $utils.relativeToValue(y, this.innerHeight());\r\n        }\r\n        else {\r\n            d3Node.fx = undefined;\r\n        }\r\n    }\r\n    _updateRadius(dataItem) {\r\n        let size = (this.innerWidth() + this.innerHeight()) / 2;\r\n        let minRadius = $utils.relativeToValue(this.get(\"minRadius\", 1), size);\r\n        let maxRadius = $utils.relativeToValue(this.get(\"maxRadius\", 5), size);\r\n        let valueWorking = dataItem.get(\"sum\");\r\n        let radius = maxRadius;\r\n        const min = this.getPrivate(\"valueLow\", 0);\r\n        const max = this.getPrivate(\"valueHigh\", 0);\r\n        if (max > 0) {\r\n            radius = minRadius + (valueWorking - min) / (max - min) * (maxRadius - minRadius);\r\n        }\r\n        if (!$type.isNumber(radius)) {\r\n            radius = minRadius;\r\n        }\r\n        const duration = this.get(\"animationDuration\", 0);\r\n        const easing = this.get(\"animationEasing\");\r\n        dataItem.get(\"circle\").animate({ key: \"radius\", to: radius, duration: duration, easing: easing });\r\n    }\r\n    _processLink(link, source, target) {\r\n        const d3Link = { link: link, source: source.get(\"d3ForceNode\").index, target: target.get(\"d3ForceNode\").index, sourceDataItem: source, targetDataItem: target };\r\n        this._links.push(d3Link);\r\n        link.setPrivate(\"d3Link\", d3Link);\r\n        this.linkForce = d3Force.forceLink(this._links);\r\n        this.d3forceSimulation.force(\"link\", this.linkForce);\r\n        this.restartSimulation(0.5);\r\n    }\r\n    _disposeLink(link) {\r\n        super._disposeLink(link);\r\n        $array.remove(this._links, link.getPrivate(\"d3Link\"));\r\n    }\r\n    _handleUnlink() {\r\n        this.restartSimulation(0.5);\r\n    }\r\n    _onDataClear() {\r\n        super._onDataClear();\r\n        this._nodes = [];\r\n        this._links = [];\r\n    }\r\n}\r\nObject.defineProperty(ForceDirected, \"className\", {\r\n    enumerable: true,\r\n    configurable: true,\r\n    writable: true,\r\n    value: \"ForceDirected\"\r\n});\r\nObject.defineProperty(ForceDirected, \"classNames\", {\r\n    enumerable: true,\r\n    configurable: true,\r\n    writable: true,\r\n    value: LinkedHierarchy.classNames.concat([ForceDirected.className])\r\n});\r\n//# sourceMappingURL=ForceDirected.js.map","import type { DataItem } from \"../../core/render/Component\";\nimport type { Percent } from \"../../core/util/Percent\";\nimport type { LinkedHierarchyNode } from \"./LinkedHierarchyNode\";\nimport type { HierarchyLink } from \"./HierarchyLink\";\nimport type * as d3Hierarchy from \"d3-hierarchy\";\n\nimport { LinkedHierarchy, ILinkedHierarchySettings, ILinkedHierarchyDataItem, ILinkedHierarchyPrivate, ILinkedHierarchyEvents } from \"./LinkedHierarchy\";\n\nimport * as $array from \"../../core/util/Array\";\nimport * as $utils from \"../../core/util/Utils\";\nimport * as $type from \"../../core/util/Type\";\nimport * as d3Force from \"d3-force\";\n\n/**\n * @ignore\n */\nexport interface IForceDirectedDataObject {\n\tname?: string,\n\tvalue?: number,\n\tchildren?: IForceDirectedDataObject[],\n\tdataItem?: DataItem<IForceDirectedDataItem>\n};\n\nexport interface IForceDirectedDataItem extends ILinkedHierarchyDataItem {\n\n\t/**\n\t * An array of data items of child nodes.\n\t */\n\tchildren: Array<DataItem<IForceDirectedDataItem>>;\n\n\t/**\n\t * Data item of a parent node.\n\t */\n\tparent: DataItem<IForceDirectedDataItem>;\n\n\t/**\n\t * @ignore\n\t */\n\td3ForceNode: d3Force.SimulationNodeDatum;\n\n\t/**\n\t * X coordinate.\n\t */\n\tx: number | undefined;\n\n\t/**\n\t * Y coordinate.\n\t */\n\ty: number | undefined;\n}\n\nexport interface IForceDirectedSettings extends ILinkedHierarchySettings {\n\n\t/**\n\t * Minimum gap in pixels between the nodes.\n\t */\n\tnodePadding?: number;\n\n\t/**\n\t * A force that attracts (or pushes back) all nodes to the center of the\n\t * chart.\n\t *\n\t * @see {@link https://www.amcharts.com/docs/v5/charts/hierarchy/force-directed/#Layout_and_force_simulation} for more info\n\t * @default 0.5\n\t */\n\tcenterStrength?: number;\n\n\t/**\n\t * A force that attracts (or pushes back) all nodes to each other.\n\t *\n\t * @see {@link https://www.amcharts.com/docs/v5/charts/hierarchy/force-directed/#Layout_and_force_simulation} for more info\n\t * @default -15\n\t */\n\tmanyBodyStrength?: number;\n\n\t/**\n\t * A force that attracts (or pushes back) nodes that are linked together\n\t * via `linkWithField`.\n\t *\n\t * @see {@link https://www.amcharts.com/docs/v5/charts/hierarchy/force-directed/#Layout_and_force_simulation} for more info\n\t * @default 0.5\n\t */\n\tlinkWithStrength?: number | undefined;\n\n\t/**\n\t * Resistance acting agains node speed.\n\t *\n\t * The greater the value, the more \"sluggish\" the nodes will be.\n\t *\n\t * @see {@link https://www.amcharts.com/docs/v5/charts/hierarchy/force-directed/#Layout_and_force_simulation} for more info\n\t * @default 0.5\n\t */\n\tvelocityDecay?: number;\n\n\t/**\n\t * Length of how long initial force simulation would run in frames.\n\t *\n\t * @see {@link https://www.amcharts.com/docs/v5/charts/hierarchy/force-directed/#Layout_and_force_simulation} for more info\n\t * @default 500\n\t */\n\tinitialFrames?: number;\n\n\t/**\n\t * If set to a number will wait X number of frames before revealing\n\t * the tree.\n\t *\n\t * Can be used to hide initial animations where nodes settle into their\n\t * places.\n\t *\n\t * @see {@link https://www.amcharts.com/docs/v5/charts/hierarchy/force-directed/#Layout_and_force_simulation} for more info\n\t * @default 10\n\t */\n\tshowOnFrame?: number;\n\n\t/**\n\t * Smallest possible radius for a node circle.\n\t *\n\t * Can be a fixed pixel value or percent relative to chart size.\n\t *\n\t * @see {@link https://www.amcharts.com/docs/v5/charts/hierarchy/force-directed/#Sizing_nodes} for more info\n\t * @default 1%\n\t */\n\tminRadius?: number | Percent;\n\n\t/**\n\t * Biggest possible radius for a node circle.\n\t *\n\t * Can be a fixed pixel value or percent relative to chart size.\n\t *\n\t * @see {@link https://www.amcharts.com/docs/v5/charts/hierarchy/force-directed/#Sizing_nodes} for more info\n\t * @default 8%\n\t */\n\tmaxRadius?: number | Percent;\n\n\t/**\n\t * Field in data that holds X coordinate of the node.\n\t *\n\t * @see {@link https://www.amcharts.com/docs/v5/charts/hierarchy/force-directed/#Fixed_nodes} for more info\n\t */\n\txField?: string;\n\n\t/**\n\t * Field in data that holds X coordinate of the node.\n\t *\n\t * @see {@link https://www.amcharts.com/docs/v5/charts/hierarchy/force-directed/#Fixed_nodes} for more info\n\t */\n\tyField?: string;\n\n}\n\nexport interface IForceDirectedPrivate extends ILinkedHierarchyPrivate {\n}\n\nexport interface IForceDirectedEvents extends ILinkedHierarchyEvents {\n}\n\n/**\n * Creates a force-directed tree.\n *\n * @see {@link https://www.amcharts.com/docs/v5/charts/hierarchy/force-directed/} for more info\n * @important\n */\nexport class ForceDirected extends LinkedHierarchy {\n\n\tprotected _tag: string = \"forcedirected\";\n\n\t/**\n\t * @ignore\n\t */\n\tpublic readonly d3forceSimulation: d3Force.Simulation<{}, d3Force.SimulationLinkDatum<d3Force.SimulationNodeDatum>> = d3Force.forceSimulation();\n\n\t/**\n\t * @ignore\n\t */\n\tpublic readonly collisionForce: d3Force.ForceCollide<d3Force.SimulationNodeDatum> = d3Force.forceCollide(20);\n\n\t/**\n\t * @ignore\n\t */\n\tpublic linkForce: d3Force.ForceLink<d3Force.SimulationNodeDatum, d3Force.SimulationLinkDatum<d3Force.SimulationNodeDatum>> = d3Force.forceLink();\n\n\tpublic static className: string = \"ForceDirected\";\n\tpublic static classNames: Array<string> = LinkedHierarchy.classNames.concat([ForceDirected.className]);\n\n\tdeclare public _settings: IForceDirectedSettings;\n\tdeclare public _privateSettings: IForceDirectedPrivate;\n\tdeclare public _dataItemSettings: IForceDirectedDataItem;\n\tdeclare public _events: IForceDirectedEvents;\n\n\tprotected _nodes: Array<any> = [];\n\tprotected _links: Array<any> = [];\n\n\tprotected _afterNew() {\n\t\tsuper._afterNew();\n\n\t\tthis.d3forceSimulation.on(\"tick\", () => {\n\t\t\tthis._tick++;\n\t\t\tthis.updateNodePositions();\n\t\t});\n\t}\n\n\tprotected _tick: number = 0;\n\tprotected _nodesDirty: boolean = false;\n\n\tpublic _prepareChildren() {\n\t\tsuper._prepareChildren();\n\t\tif (this.isDirty(\"showOnFrame\")) {\n\t\t\tconst showOnFrame = this.get(\"showOnFrame\");\n\t\t\tif (showOnFrame > this._tick) {\n\t\t\t\tthis.nodesContainer.setPrivate(\"visible\", false);\n\t\t\t\tthis.linksContainer.setPrivate(\"visible\", false);\n\t\t\t}\n\t\t}\n\n\t\tconst d3forceSimulation = this.d3forceSimulation;\n\n\t\tif (this.isDirty(\"velocityDecay\")) {\n\t\t\td3forceSimulation.velocityDecay(this.get(\"velocityDecay\", 0));\n\t\t}\n\n\t\tif (this.isDirty(\"initialFrames\")) {\n\t\t\td3forceSimulation.alphaDecay(1 - Math.pow(0.001, 1 / this.get(\"initialFrames\", 500)));\n\t\t}\n\t}\n\n\t/**\n\t * @ignore\n\t */\n\tpublic restartSimulation(alpha: number): void {\n\t\tconst d3forceSimulation = this.d3forceSimulation;\n\t\tif (d3forceSimulation.alpha() < .25) {\n\t\t\td3forceSimulation.alpha(alpha);\n\t\t\td3forceSimulation.restart();\n\t\t}\n\t}\n\n\tpublic _handleRadiusChange() {\n\t\tthis._updateForces();\n\t}\n\n\tprotected processDataItem(dataItem: DataItem<this[\"_dataItemSettings\"]>) {\n\t\tconst d3ForceNode: any = { index: this._index, x: this.innerWidth() / 2, y: this.innerHeight() / 2, dataItem: dataItem };\n\t\tconst index = this._nodes.push(d3ForceNode) - 1;\n\t\td3ForceNode.index = index;\n\n\t\tthis.d3forceSimulation.nodes(this._nodes);\n\n\t\tdataItem.set(\"d3ForceNode\", d3ForceNode);\n\t\tsuper.processDataItem(dataItem);\n\n\t\tconst node = dataItem.get(\"node\");\n\t\tnode.set(\"x\", -10000);\n\t\tnode.on(\"scale\", () => {\n\t\t\tthis._updateForces();\n\t\t})\n\n\t\tnode.events.on(\"dragged\", () => {\n\t\t\td3ForceNode.fx = node.x();\n\t\t\td3ForceNode.fy = node.y();\n\t\t\tthis._updateForces();\n\t\t})\n\n\t\tnode.events.on(\"dragstop\", () => {\n\t\t\tif (dataItem.get(\"x\") == null) {\n\t\t\t\td3ForceNode.fx = undefined;\n\t\t\t}\n\t\t\tif (dataItem.get(\"y\") == null) {\n\t\t\t\td3ForceNode.fy = undefined;\n\t\t\t}\n\t\t})\n\t}\n\n\tprotected _updateValues(d3HierarchyNode: d3Hierarchy.HierarchyNode<IForceDirectedDataObject>) {\n\t\tsuper._updateValues(d3HierarchyNode);\n\n\t\tthis._nodesDirty = true;\n\n\t\tconst d3forceSimulation = this.d3forceSimulation;\n\t\td3forceSimulation.force(\"collision\", this.collisionForce);\n\t\td3forceSimulation.nodes(this._nodes);\n\n\t\tthis.linkForce = d3Force.forceLink(this._links);\n\t\td3forceSimulation.force(\"link\", this.linkForce);\n\t}\n\n\tprotected _updateVisuals() {\n\t\tsuper._updateVisuals();\n\t\tthis.restartSimulation(.3);\n\t}\n\n\tpublic _updateChildren() {\n\t\tsuper._updateChildren();\n\n\t\tconst d3forceSimulation = this.d3forceSimulation;\n\n\t\tif (this._sizeDirty) {\n\t\t\tlet w = Math.max(50, this.innerWidth());\n\t\t\tlet h = Math.max(50, this.innerHeight());\n\t\t\tlet pt = this.get(\"paddingTop\", 0);\n\t\t\tlet pl = this.get(\"paddingLeft\", 0);\n\n\t\t\tlet centerStrength = this.get(\"centerStrength\", 1);\n\n\t\t\td3forceSimulation.force(\"x\", d3Force.forceX().x(w / 2 + pl).strength(centerStrength * 100 / w));\n\t\t\td3forceSimulation.force(\"y\", d3Force.forceY().y(h / 2 + pt).strength(centerStrength * 100 / h));\n\t\t}\n\n\t\tif (this._nodesDirty) {\n\t\t\tthis._updateForces();\n\t\t}\n\t}\n\n\tpublic _updateForces() {\n\t\tconst d3forceSimulation = this.d3forceSimulation;\n\t\td3forceSimulation.force(\"manybody\", d3Force.forceManyBody().strength((d3node) => {\n\t\t\tlet dataItem = (d3node as any).dataItem;\n\t\t\tlet node = dataItem.get(\"node\") as LinkedHierarchyNode;\n\t\t\tlet circle = dataItem.get(\"circle\");\n\t\t\tlet manyBodyStrength = this.get(\"manyBodyStrength\", -15);\n\n\t\t\tif (circle) {\n\t\t\t\treturn circle.get(\"radius\", 1) * node.get(\"scale\", 1) * manyBodyStrength;\n\t\t\t}\n\t\t\treturn 0;\n\t\t}));\n\n\t\tthis.collisionForce.radius((d3node) => {\n\t\t\tlet dataItem = (d3node as any).dataItem;\n\t\t\tlet node = dataItem.get(\"node\") as LinkedHierarchyNode;\n\t\t\tlet circle = dataItem.get(\"circle\");\n\t\t\tlet outerCircle = dataItem.get(\"outerCircle\");\n\t\t\tif (circle && outerCircle) {\n\t\t\t\tlet radius = circle.get(\"radius\", 1);\n\n\t\t\t\tif (!outerCircle.isHidden()) {\n\t\t\t\t\tradius = radius * outerCircle.get(\"scale\", 1.1);\n\t\t\t\t}\n\n\t\t\t\tradius *= node.get(\"scale\", 1);\n\n\t\t\t\treturn radius + this.get(\"nodePadding\", 0);\n\t\t\t}\n\t\t})\n\t\tthis.restartSimulation(0.3);\n\t}\n\n\tprotected _animatePositions(_dataItem: DataItem<this[\"_dataItemSettings\"]>) {\n\t\t// void, do not remove\n\t}\n\n\tpublic _clearDirty() {\n\t\tsuper._clearDirty();\n\t\tthis._nodesDirty = false;\n\t}\n\n\t/**\n\t * @ignore\n\t */\n\tpublic updateNodePositions() {\n\t\tconst linkForce = this.linkForce;\n\t\tif (linkForce) {\n\t\t\tlinkForce.distance((linkDatum) => {\n\t\t\t\treturn this.getDistance(linkDatum)\n\t\t\t});\n\t\t\tlinkForce.strength((linkDatum) => {\n\t\t\t\treturn this.getStrength(linkDatum)\n\t\t\t});\n\t\t}\n\t\tif (this._tick == this.get(\"showOnFrame\")) {\n\t\t\tthis.nodesContainer.setPrivate(\"visible\", true);\n\t\t\tthis.linksContainer.setPrivate(\"visible\", true);\n\t\t}\n\n\t\tlet d3Nodes = this.d3forceSimulation.nodes();\n\n\t\t$array.each(d3Nodes, (d3Node: any) => {\n\t\t\tconst dataItem = d3Node.dataItem as DataItem<this[\"_dataItemSettings\"]>;\n\t\t\tconst node = dataItem.get(\"node\");\n\n\t\t\tnode.set(\"x\", d3Node.x);\n\t\t\tnode.set(\"y\", d3Node.y);\n\t\t})\n\n\t}\n\n\t/**\n\t * @ignore\n\t */\n\tpublic updateLinkWith(dataItems: Array<DataItem<this[\"_dataItemSettings\"]>>) {\n\t\t$array.each(dataItems, (dataItem) => {\n\t\t\tconst linkWith = dataItem.get(\"linkWith\");\n\t\t\tif (linkWith) {\n\t\t\t\t$array.each(linkWith, (id) => {\n\t\t\t\t\tconst linkWithDataItem = this._getDataItemById(this.dataItems, id);\n\n\t\t\t\t\tif (linkWithDataItem) {\n\t\t\t\t\t\tthis.linkDataItems(dataItem, linkWithDataItem, this.get(\"linkWithStrength\"));\n\t\t\t\t\t}\n\t\t\t\t})\n\t\t\t}\n\n\t\t\tconst children = dataItem.get(\"children\");\n\t\t\tif (children) {\n\t\t\t\tthis.updateLinkWith(children);\n\t\t\t}\n\t\t})\n\t}\n\n\t/**\n\t * @ignore\n\t */\n\tprotected getDistance(linkDatum: any) {\n\t\tlet sourceDataItem: DataItem<this[\"_dataItemSettings\"]> = <DataItem<this[\"_dataItemSettings\"]>>linkDatum.sourceDataItem;\n\t\tlet targetDataItem: DataItem<this[\"_dataItemSettings\"]> = <DataItem<this[\"_dataItemSettings\"]>>linkDatum.targetDataItem;\n\n\t\tlet distance = 0;\n\n\t\tif (sourceDataItem && targetDataItem) {\n\n\t\t\tconst targetNode = targetDataItem.get(\"node\");\n\t\t\tif (targetNode.isHidden()) {\n\t\t\t\treturn 0;\n\t\t\t}\n\n\t\t\tlet link = linkDatum.link;\n\t\t\tif (link) {\n\t\t\t\tdistance = link.get(\"distance\", 1);\n\t\t\t}\n\n\t\t\tconst sourceNode = sourceDataItem.get(\"node\");\n\n\t\t\tif (targetNode.isHidden()) {\n\t\t\t\tdistance = 1;\n\t\t\t}\n\n\t\t\treturn (distance * (sourceDataItem.get(\"circle\").get(\"radius\", 1) * sourceNode.get(\"scale\", 1) + targetDataItem.get(\"circle\").get(\"radius\", 1) * targetNode.get(\"scale\", 1)));\n\t\t}\n\t\treturn distance;\n\t}\n\n\t/**\n\t * @ignore\n\t */\n\tprotected getStrength(linkDatum: any) {\n\t\tlet strength = 0;\n\n\t\tlet link = linkDatum.link;\n\t\tif (link) {\n\t\t\tstrength = link.get(\"strength\", 1);\n\t\t}\n\n\t\tconst targetDataItem = linkDatum.targetDataItem;\n\t\tstrength *= targetDataItem.get(\"node\").get(\"scale\");\n\n\t\treturn strength;\n\t}\n\n\tprotected _updateNode(dataItem: DataItem<this[\"_dataItemSettings\"]>) {\n\t\tsuper._updateNode(dataItem);\n\t\tthis._updateRadius(dataItem);\n\n\t\tconst x = dataItem.get(\"x\");\n\t\tconst y = dataItem.get(\"y\");\n\n\t\tconst d3Node = dataItem.get(\"d3ForceNode\");\n\n\t\tif (x != null) {\n\t\t\t(d3Node as any).fx = $utils.relativeToValue(x, this.innerWidth());\n\t\t}\n\t\telse {\n\t\t\t(d3Node as any).fx = undefined;\n\t\t}\n\n\t\tif (y != null) {\n\t\t\t(d3Node as any).fy = $utils.relativeToValue(y, this.innerHeight());\n\t\t}\n\t\telse {\n\t\t\t(d3Node as any).fx = undefined;\n\t\t}\n\t}\n\n\tprotected _updateRadius(dataItem: DataItem<this[\"_dataItemSettings\"]>) {\n\t\tlet size = (this.innerWidth() + this.innerHeight()) / 2;\n\n\t\tlet minRadius = $utils.relativeToValue(this.get(\"minRadius\", 1), size);\n\t\tlet maxRadius = $utils.relativeToValue(this.get(\"maxRadius\", 5), size);\n\n\t\tlet valueWorking = dataItem.get(\"sum\");\n\n\t\tlet radius = maxRadius;\n\n\t\tconst min = this.getPrivate(\"valueLow\", 0);\n\t\tconst max = this.getPrivate(\"valueHigh\", 0);\n\n\t\tif (max > 0) {\n\t\t\tradius = minRadius + (valueWorking - min) / (max - min) * (maxRadius - minRadius);\n\t\t}\n\n\t\tif (!$type.isNumber(radius)) {\n\t\t\tradius = minRadius;\n\t\t}\n\n\t\tconst duration = this.get(\"animationDuration\", 0);\n\t\tconst easing = this.get(\"animationEasing\");\n\n\t\tdataItem.get(\"circle\").animate({ key: \"radius\", to: radius, duration: duration, easing: easing });\n\t}\n\n\tprotected _processLink(link: HierarchyLink, source: DataItem<this[\"_dataItemSettings\"]>, target: DataItem<this[\"_dataItemSettings\"]>) {\n\t\tconst d3Link = { link: link, source: source.get(\"d3ForceNode\").index, target: target.get(\"d3ForceNode\").index, sourceDataItem: source, targetDataItem: target };\n\t\tthis._links.push(d3Link);\n\t\tlink.setPrivate(\"d3Link\", d3Link);\n\n\t\tthis.linkForce = d3Force.forceLink(this._links);\n\t\tthis.d3forceSimulation.force(\"link\", this.linkForce);\n\t\tthis.restartSimulation(0.5);\n\t}\n\n\tprotected _disposeLink(link: HierarchyLink) {\n\t\tsuper._disposeLink(link);\n\t\t$array.remove(this._links, link.getPrivate(\"d3Link\"));\n\t}\n\n\tprotected _handleUnlink() {\n\t\tthis.restartSimulation(0.5);\n\t}\n\n\tprotected _onDataClear() {\n\n\t\tsuper._onDataClear();\n\n\t\tthis._nodes = [];\n\t\tthis._links = [];\n\t}\n}\n","import { Hierarchy } from \"./Hierarchy\";\r\nimport { Container } from \"../../core/render/Container\";\r\nimport { LinkedHierarchyNode } from \"./LinkedHierarchyNode\";\r\nimport { HierarchyLink } from \"./HierarchyLink\";\r\nimport { Template } from \"../../core/util/Template\";\r\nimport { Circle } from \"../../core/render/Circle\";\r\nimport { ListTemplate } from \"../../core/util/List\";\r\nimport * as $array from \"../../core/util/Array\";\r\nimport * as $utils from \"../../core/util/Utils\";\r\nimport { List } from \"../../core/util/List\";\r\n;\r\n/**\r\n * A base class for linked hierarchy series.\r\n */\r\nexport class LinkedHierarchy extends Hierarchy {\r\n    constructor() {\r\n        super(...arguments);\r\n        Object.defineProperty(this, \"linkBullets\", {\r\n            enumerable: true,\r\n            configurable: true,\r\n            writable: true,\r\n            value: new List()\r\n        });\r\n        /**\r\n         * A list of nodes in a [[LinkedHierarchy]] chart.\r\n         *\r\n         * @default new ListTemplate<LinkedHierarchyNode>\r\n         */\r\n        Object.defineProperty(this, \"nodes\", {\r\n            enumerable: true,\r\n            configurable: true,\r\n            writable: true,\r\n            value: this.addDisposer(new ListTemplate(Template.new({}), () => LinkedHierarchyNode._new(this._root, {\r\n                themeTags: $utils.mergeTags(this.nodes.template.get(\"themeTags\", []), [this._tag, \"linkedhierarchy\", \"hierarchy\", \"node\"]),\r\n                x: this.width() / 2,\r\n                y: this.height() / 2\r\n            }, [this.nodes.template])))\r\n        });\r\n        /**\r\n         * A list of node circle elements in a [[LinkedHierarchy]] chart.\r\n         *\r\n         * @default new ListTemplate<Circle>\r\n         */\r\n        Object.defineProperty(this, \"circles\", {\r\n            enumerable: true,\r\n            configurable: true,\r\n            writable: true,\r\n            value: this.addDisposer(new ListTemplate(Template.new({}), () => Circle._new(this._root, {\r\n                themeTags: $utils.mergeTags(this.circles.template.get(\"themeTags\", []), [this._tag, \"shape\"])\r\n            }, [this.circles.template])))\r\n        });\r\n        /**\r\n         * A list of node outer circle elements in a [[LinkedHierarchy]] chart.\r\n         *\r\n         * @default new ListTemplate<Circle>\r\n         */\r\n        Object.defineProperty(this, \"outerCircles\", {\r\n            enumerable: true,\r\n            configurable: true,\r\n            writable: true,\r\n            value: this.addDisposer(new ListTemplate(Template.new({}), () => Circle._new(this._root, {\r\n                themeTags: $utils.mergeTags(this.outerCircles.template.get(\"themeTags\", []), [this._tag, \"outer\", \"shape\"])\r\n            }, [this.outerCircles.template])))\r\n        });\r\n        /**\r\n         * A list of link elements in a [[LinkedHierarchy]] chart.\r\n         *\r\n         * @default new ListTemplate<HierarchyLink>\r\n         */\r\n        Object.defineProperty(this, \"links\", {\r\n            enumerable: true,\r\n            configurable: true,\r\n            writable: true,\r\n            value: this.addDisposer(new ListTemplate(Template.new({}), () => HierarchyLink._new(this._root, {\r\n                themeTags: $utils.mergeTags(this.links.template.get(\"themeTags\", []), [this._tag, \"linkedhierarchy\", \"hierarchy\", \"link\"])\r\n            }, [this.links.template])))\r\n        });\r\n        /**\r\n         * A [[Container]] that link elements are placed in.\r\n         *\r\n         * @default Container.new()\r\n         */\r\n        Object.defineProperty(this, \"linksContainer\", {\r\n            enumerable: true,\r\n            configurable: true,\r\n            writable: true,\r\n            value: this.children.moveValue(Container.new(this._root, {}), 0)\r\n        });\r\n    }\r\n    _afterNew() {\r\n        this.fields.push(\"linkWith\", \"x\", \"y\");\r\n        this._disposers.push(this.linkBullets.events.onAll(() => {\r\n            this.links.each((link) => {\r\n                link._handleBullets(this.linkBullets);\r\n            });\r\n        }));\r\n        super._afterNew();\r\n    }\r\n    /**\r\n     * @ignore\r\n     */\r\n    makeNode(dataItem) {\r\n        const node = super.makeNode(dataItem);\r\n        const circle = node.children.moveValue(this.circles.make(), 0);\r\n        this.circles.push(circle);\r\n        node.setPrivate(\"tooltipTarget\", circle);\r\n        dataItem.setRaw(\"circle\", circle);\r\n        const outerCircle = node.children.moveValue(this.outerCircles.make(), 0);\r\n        this.outerCircles.push(outerCircle);\r\n        dataItem.setRaw(\"outerCircle\", outerCircle);\r\n        const label = dataItem.get(\"label\");\r\n        circle.on(\"radius\", () => {\r\n            const d = circle.get(\"radius\", this.width()) * 2;\r\n            label.setAll({ maxWidth: d, maxHeight: d });\r\n            outerCircle.set(\"radius\", d / 2);\r\n            this._handleRadiusChange();\r\n        });\r\n        const d = circle.get(\"radius\", this.width()) * 2;\r\n        label.setAll({ maxWidth: d, maxHeight: d });\r\n        circle._setDataItem(dataItem);\r\n        outerCircle._setDataItem(dataItem);\r\n        return node;\r\n    }\r\n    _handleRadiusChange() {\r\n    }\r\n    processDataItem(dataItem) {\r\n        dataItem.setRaw(\"childLinks\", []);\r\n        dataItem.setRaw(\"links\", []);\r\n        super.processDataItem(dataItem);\r\n    }\r\n    _processDataItem(dataItem) {\r\n        super._processDataItem(dataItem);\r\n        const parentDataItem = dataItem.get(\"parent\");\r\n        if (parentDataItem && parentDataItem.get(\"depth\") >= this.get(\"topDepth\")) {\r\n            const link = this.linkDataItems(parentDataItem, dataItem);\r\n            dataItem.setRaw(\"parentLink\", link);\r\n        }\r\n        const node = dataItem.get(\"node\");\r\n        this.updateLinkWith(this.dataItems);\r\n        node._updateLinks(0);\r\n    }\r\n    /**\r\n     * @ignore\r\n     */\r\n    updateLinkWith(dataItems) {\r\n        $array.each(dataItems, (dataItem) => {\r\n            const linkWith = dataItem.get(\"linkWith\");\r\n            if (linkWith) {\r\n                $array.each(linkWith, (id) => {\r\n                    const linkWithDataItem = this._getDataItemById(this.dataItems, id);\r\n                    if (linkWithDataItem) {\r\n                        this.linkDataItems(dataItem, linkWithDataItem);\r\n                    }\r\n                });\r\n            }\r\n            const children = dataItem.get(\"children\");\r\n            if (children) {\r\n                this.updateLinkWith(children);\r\n            }\r\n        });\r\n    }\r\n    _getPoint(hierarchyNode) {\r\n        return { x: hierarchyNode.x, y: hierarchyNode.y };\r\n    }\r\n    _animatePositions(dataItem) {\r\n        const node = dataItem.get(\"node\");\r\n        const hierarchyNode = dataItem.get(\"d3HierarchyNode\");\r\n        const point = this._getPoint(hierarchyNode);\r\n        const duration = this.get(\"animationDuration\", 0);\r\n        const easing = this.get(\"animationEasing\");\r\n        node.animate({ key: \"x\", to: point.x, duration: duration, easing: easing });\r\n        node.animate({ key: \"y\", to: point.y, duration: duration, easing: easing });\r\n    }\r\n    _updateNode(dataItem) {\r\n        super._updateNode(dataItem);\r\n        this._animatePositions(dataItem);\r\n        const hierarchyNode = dataItem.get(\"d3HierarchyNode\");\r\n        const hierarchyChildren = hierarchyNode.children;\r\n        if (hierarchyChildren) {\r\n            $array.each(hierarchyChildren, (hierarchyChild) => {\r\n                this._updateNodes(hierarchyChild);\r\n            });\r\n        }\r\n        const fill = dataItem.get(\"fill\");\r\n        const fillPattern = dataItem.get(\"fillPattern\");\r\n        const circle = dataItem.get(\"circle\");\r\n        const children = dataItem.get(\"children\");\r\n        if (circle) {\r\n            circle._setDefault(\"fill\", fill);\r\n            circle._setDefault(\"fillPattern\", fillPattern);\r\n            circle._setDefault(\"stroke\", fill);\r\n        }\r\n        const outerCircle = dataItem.get(\"outerCircle\");\r\n        if (outerCircle) {\r\n            outerCircle._setDefault(\"fill\", fill);\r\n            outerCircle._setDefault(\"stroke\", fill);\r\n            if (!children || children.length == 0) {\r\n                outerCircle.setPrivate(\"visible\", false);\r\n            }\r\n            else {\r\n                outerCircle.setPrivate(\"visible\", true);\r\n            }\r\n        }\r\n    }\r\n    /**\r\n     * Link two data items with a link element.\r\n     *\r\n     * @param   source    Source node data item\r\n     * @param   target    Target node data item\r\n     * @param   strength  Link strength\r\n     * @return            Link element\r\n     */\r\n    linkDataItems(source, target, strength) {\r\n        let link;\r\n        const sourceLinks = source.get(\"links\");\r\n        if (sourceLinks) {\r\n            $array.each(sourceLinks, (lnk) => {\r\n                if (lnk.get(\"target\") == target) {\r\n                    link = lnk;\r\n                }\r\n            });\r\n        }\r\n        const targetLinks = target.get(\"links\");\r\n        if (targetLinks) {\r\n            $array.each(targetLinks, (lnk) => {\r\n                if (lnk.get(\"target\") == source) {\r\n                    link = lnk;\r\n                }\r\n            });\r\n        }\r\n        if (!link) {\r\n            link = this.links.make();\r\n            link.series = this;\r\n            this.links.push(link);\r\n            this.linksContainer.children.push(link);\r\n            link.set(\"source\", source);\r\n            link.set(\"target\", target);\r\n            link._setDataItem(source);\r\n            link._handleBullets(this.linkBullets);\r\n            link.set(\"stroke\", source.get(\"fill\"));\r\n            if (strength != null) {\r\n                link.set(\"strength\", strength);\r\n            }\r\n            source.get(\"childLinks\").push(link);\r\n            $array.move(source.get(\"links\"), link);\r\n            $array.move(target.get(\"links\"), link);\r\n            this._processLink(link, source, target);\r\n        }\r\n        return link;\r\n    }\r\n    /**\r\n     * Unlink two linked data items.\r\n     *\r\n     * @param   source  Source node data item\r\n     * @param   target  Target node data item\r\n     */\r\n    unlinkDataItems(source, target) {\r\n        let link;\r\n        const sourceLinks = source.get(\"links\");\r\n        if (sourceLinks) {\r\n            $array.each(sourceLinks, (lnk) => {\r\n                if (lnk && lnk.get(\"target\") == target) {\r\n                    link = lnk;\r\n                    $array.remove(sourceLinks, link);\r\n                }\r\n            });\r\n        }\r\n        const targetLinks = target.get(\"links\");\r\n        if (targetLinks) {\r\n            $array.each(targetLinks, (lnk) => {\r\n                if (lnk && lnk.get(\"target\") == source) {\r\n                    link = lnk;\r\n                    $array.remove(targetLinks, link);\r\n                }\r\n            });\r\n        }\r\n        if (link) {\r\n            this._disposeLink(link);\r\n        }\r\n        this._handleUnlink();\r\n    }\r\n    _handleUnlink() {\r\n    }\r\n    _disposeLink(link) {\r\n        this.links.removeValue(link);\r\n        link.dispose();\r\n    }\r\n    /**\r\n     * Returns `true` if two nodes are linked with each other.\r\n     */\r\n    areLinked(source, target) {\r\n        const sourceLinks = source.get(\"links\");\r\n        let linked = false;\r\n        if (sourceLinks) {\r\n            $array.each(sourceLinks, (lnk) => {\r\n                if (lnk.get(\"target\") == target) {\r\n                    linked = true;\r\n                }\r\n            });\r\n        }\r\n        const targetLinks = target.get(\"links\");\r\n        if (targetLinks) {\r\n            $array.each(targetLinks, (lnk) => {\r\n                if (lnk.get(\"target\") == source) {\r\n                    linked = true;\r\n                }\r\n            });\r\n        }\r\n        return linked;\r\n    }\r\n    _processLink(_link, _source, _target) {\r\n    }\r\n    /**\r\n     * @ignore\r\n     */\r\n    disposeDataItem(dataItem) {\r\n        super.disposeDataItem(dataItem);\r\n        const links = dataItem.get(\"links\");\r\n        if (links) {\r\n            $array.each(links, (link) => {\r\n                this._disposeLink(link);\r\n            });\r\n        }\r\n    }\r\n    /**\r\n     * Select a data item.\r\n     * @param  dataItem  Data item\r\n     */\r\n    selectDataItem(dataItem) {\r\n        const parent = dataItem.get(\"parent\");\r\n        if (!dataItem.get(\"disabled\")) {\r\n            this.set(\"selectedDataItem\", dataItem);\r\n        }\r\n        else {\r\n            if (parent) {\r\n                this.setRaw(\"selectedDataItem\", parent);\r\n                const type = \"dataitemselected\";\r\n                this.events.dispatch(type, { type: type, target: this, dataItem: parent });\r\n                this.disableDataItem(dataItem);\r\n            }\r\n        }\r\n    }\r\n}\r\nObject.defineProperty(LinkedHierarchy, \"className\", {\r\n    enumerable: true,\r\n    configurable: true,\r\n    writable: true,\r\n    value: \"LinkedHierarchy\"\r\n});\r\nObject.defineProperty(LinkedHierarchy, \"classNames\", {\r\n    enumerable: true,\r\n    configurable: true,\r\n    writable: true,\r\n    value: Hierarchy.classNames.concat([LinkedHierarchy.className])\r\n});\r\n//# sourceMappingURL=LinkedHierarchy.js.map","import type { DataItem } from \"../../core/render/Component\";\nimport type { Bullet } from \"../../core/render/Bullet\";\nimport type * as d3hierarchy from \"d3-hierarchy\";\n\nimport { Hierarchy, IHierarchySettings, IHierarchyDataItem, IHierarchyPrivate, IHierarchyEvents } from \"./Hierarchy\";\nimport { Container } from \"../../core/render/Container\";\nimport { LinkedHierarchyNode } from \"./LinkedHierarchyNode\";\nimport { HierarchyLink } from \"./HierarchyLink\";\nimport { Template } from \"../../core/util/Template\";\nimport { Circle } from \"../../core/render/Circle\";\nimport { ListTemplate } from \"../../core/util/List\";\nimport type { IPoint } from \"../../core/util/IPoint\";\n\nimport * as $array from \"../../core/util/Array\";\nimport * as $utils from \"../../core/util/Utils\";\nimport { List } from \"../../core/util/List\";\nimport type { Root } from \"../../core/Root\";\n\n/**\n * @ignore\n */\nexport interface ILinkedHierarchyDataObject {\n\tname?: string,\n\tvalue?: number,\n\tchildren?: ILinkedHierarchyDataObject[],\n\tdataItem?: DataItem<ILinkedHierarchyDataItem>\n};\n\nexport interface ILinkedHierarchyDataItem extends IHierarchyDataItem {\n\n\t/**\n\t * An array of child data items.\n\t */\n\tchildren: Array<DataItem<ILinkedHierarchyDataItem>>;\n\n\t/**\n\t * A data item of a parent node.\n\t */\n\tparent: DataItem<ILinkedHierarchyDataItem>;\n\n\t/**\n\t * A related node.\n\t */\n\tnode: LinkedHierarchyNode;\n\n\t/**\n\t * [[Circle]] element of the related node.\n\t */\n\tcircle: Circle;\n\n\t/**\n\t * [[Circle]] element of the related node, representing outer circle.\n\t */\n\touterCircle: Circle;\n\n\t/**\n\t * A [[HierarchyLink]] leading to parent node.\n\t */\n\tparentLink: HierarchyLink;\n\n\t/**\n\t * An [[HierarchyLink]] leading to parent node.\n\t */\n\tlinks: Array<HierarchyLink>;\n\n\t/**\n\t * An array of [[HierarchyLink]] objects leading to child nodes.\n\t */\n\tchildLinks: Array<HierarchyLink>;\n\n\t/**\n\t * An array of IDs of directly linked nodes.\n\t */\n\tlinkWith: Array<string>;\n\n\t/**\n\t * @ignore\n\t */\n\td3HierarchyNode: d3hierarchy.HierarchyPointNode<ILinkedHierarchyDataObject>;\n}\n\nexport interface ILinkedHierarchySettings extends IHierarchySettings {\n\n\t/**\n\t * A field in data which holds IDs of nodes to link with.\n\t */\n\tlinkWithField?: string;\n\n}\n\nexport interface ILinkedHierarchyPrivate extends IHierarchyPrivate {\n}\n\nexport interface ILinkedHierarchyEvents extends IHierarchyEvents {\n}\n\n/**\n * A base class for linked hierarchy series.\n */\nexport abstract class LinkedHierarchy extends Hierarchy {\n\n\tpublic static className: string = \"LinkedHierarchy\";\n\tpublic static classNames: Array<string> = Hierarchy.classNames.concat([LinkedHierarchy.className]);\n\n\tdeclare public _settings: ILinkedHierarchySettings;\n\tdeclare public _privateSettings: ILinkedHierarchyPrivate;\n\tdeclare public _dataItemSettings: ILinkedHierarchyDataItem;\n\tdeclare public _events: ILinkedHierarchyEvents;\n\n\tpublic linkBullets: List<<D extends DataItem<IHierarchyDataItem>>(root: Root, source: D, target:D) => Bullet | undefined> = new List();\n\n\tprotected _afterNew() {\n\t\tthis.fields.push(\"linkWith\", \"x\", \"y\");\n\n\t\tthis._disposers.push(this.linkBullets.events.onAll(() => {\n\t\t\tthis.links.each((link) => {\n\t\t\t\tlink._handleBullets(this.linkBullets);\n\t\t\t})\n\t\t}))\n\n\t\tsuper._afterNew();\n\t}\n\n\t/**\n\t * A list of nodes in a [[LinkedHierarchy]] chart.\n\t *\n\t * @default new ListTemplate<LinkedHierarchyNode>\n\t */\n\tpublic readonly nodes: ListTemplate<LinkedHierarchyNode> = this.addDisposer(new ListTemplate(\n\t\tTemplate.new({}),\n\t\t() => LinkedHierarchyNode._new(this._root, {\n\t\t\tthemeTags: $utils.mergeTags(this.nodes.template.get(\"themeTags\", []), [this._tag, \"linkedhierarchy\", \"hierarchy\", \"node\"]),\n\t\t\tx: this.width() / 2,\n\t\t\ty: this.height() / 2\n\t\t}, [this.nodes.template])\n\t));\n\n\t/**\n\t * A list of node circle elements in a [[LinkedHierarchy]] chart.\n\t *\n\t * @default new ListTemplate<Circle>\n\t */\n\tpublic readonly circles: ListTemplate<Circle> = this.addDisposer(new ListTemplate(\n\t\tTemplate.new({}),\n\t\t() => Circle._new(this._root, {\n\t\t\tthemeTags: $utils.mergeTags(this.circles.template.get(\"themeTags\", []), [this._tag, \"shape\"])\n\t\t}, [this.circles.template])\n\t));\n\n\t/**\n\t * A list of node outer circle elements in a [[LinkedHierarchy]] chart.\n\t *\n\t * @default new ListTemplate<Circle>\n\t */\n\tpublic readonly outerCircles: ListTemplate<Circle> = this.addDisposer(new ListTemplate(\n\t\tTemplate.new({}),\n\t\t() => Circle._new(this._root, {\n\t\t\tthemeTags: $utils.mergeTags(this.outerCircles.template.get(\"themeTags\", []), [this._tag, \"outer\", \"shape\"])\n\t\t}, [this.outerCircles.template])\n\t));\n\n\t/**\n\t * A list of link elements in a [[LinkedHierarchy]] chart.\n\t *\n\t * @default new ListTemplate<HierarchyLink>\n\t */\n\tpublic readonly links: ListTemplate<HierarchyLink> = this.addDisposer(new ListTemplate(\n\t\tTemplate.new({}),\n\t\t() => HierarchyLink._new(this._root, {\n\t\t\tthemeTags: $utils.mergeTags(this.links.template.get(\"themeTags\", []), [this._tag, \"linkedhierarchy\", \"hierarchy\", \"link\"])\n\t\t}, [this.links.template])\n\t));\n\n\t/**\n\t * A [[Container]] that link elements are placed in.\n\t *\n\t * @default Container.new()\n\t */\n\tpublic readonly linksContainer = this.children.moveValue(Container.new(this._root, {}), 0);\n\n\t/**\n\t * @ignore\n\t */\n\tpublic makeNode(dataItem: DataItem<this[\"_dataItemSettings\"]>): LinkedHierarchyNode {\n\t\tconst node = super.makeNode(dataItem) as LinkedHierarchyNode;\n\n\t\tconst circle = node.children.moveValue(this.circles.make(), 0);\n\t\tthis.circles.push(circle);\n\t\tnode.setPrivate(\"tooltipTarget\", circle);\n\t\tdataItem.setRaw(\"circle\", circle);\n\n\t\tconst outerCircle = node.children.moveValue(this.outerCircles.make(), 0);\n\t\tthis.outerCircles.push(outerCircle);\n\t\tdataItem.setRaw(\"outerCircle\", outerCircle);\n\n\t\tconst label = dataItem.get(\"label\");\n\n\t\tcircle.on(\"radius\", () => {\n\t\t\tconst d = circle.get(\"radius\", this.width()) * 2;\n\t\t\tlabel.setAll({ maxWidth: d, maxHeight: d })\n\t\t\touterCircle.set(\"radius\", d / 2);\n\n\t\t\tthis._handleRadiusChange();\n\t\t})\n\n\t\tconst d = circle.get(\"radius\", this.width()) * 2;\n\t\tlabel.setAll({ maxWidth: d, maxHeight: d });\n\n\t\tcircle._setDataItem(dataItem);\n\t\touterCircle._setDataItem(dataItem);\n\n\t\treturn node;\n\t}\n\n\tpublic _handleRadiusChange() {\n\n\t}\n\n\tprotected processDataItem(dataItem: DataItem<this[\"_dataItemSettings\"]>) {\n\t\tdataItem.setRaw(\"childLinks\", []);\n\t\tdataItem.setRaw(\"links\", []);\n\t\tsuper.processDataItem(dataItem);\n\t}\n\n\tprotected _processDataItem(dataItem: DataItem<this[\"_dataItemSettings\"]>) {\n\t\tsuper._processDataItem(dataItem);\n\n\t\tconst parentDataItem = dataItem.get(\"parent\");\n\t\tif (parentDataItem && parentDataItem.get(\"depth\") >= this.get(\"topDepth\")) {\n\t\t\tconst link = this.linkDataItems(parentDataItem, dataItem);\n\t\t\tdataItem.setRaw(\"parentLink\", link);\n\t\t}\n\n\t\tconst node = dataItem.get(\"node\");\n\t\tthis.updateLinkWith(this.dataItems);\n\t\tnode._updateLinks(0);\n\t}\n\n\t/**\n\t * @ignore\n\t */\n\tpublic updateLinkWith(dataItems: Array<DataItem<this[\"_dataItemSettings\"]>>) {\n\t\t$array.each(dataItems, (dataItem) => {\n\t\t\tconst linkWith = dataItem.get(\"linkWith\");\n\t\t\tif (linkWith) {\n\t\t\t\t$array.each(linkWith, (id) => {\n\t\t\t\t\tconst linkWithDataItem = this._getDataItemById(this.dataItems, id);\n\n\t\t\t\t\tif (linkWithDataItem) {\n\t\t\t\t\t\tthis.linkDataItems(dataItem, linkWithDataItem);\n\t\t\t\t\t}\n\t\t\t\t})\n\t\t\t}\n\n\t\t\tconst children = dataItem.get(\"children\");\n\t\t\tif (children) {\n\t\t\t\tthis.updateLinkWith(children);\n\t\t\t}\n\t\t})\n\t}\n\n\tprotected _getPoint(hierarchyNode: this[\"_dataItemSettings\"][\"d3HierarchyNode\"]): IPoint {\n\t\treturn { x: hierarchyNode.x, y: hierarchyNode.y };\n\t}\n\n\tprotected _animatePositions(dataItem: DataItem<this[\"_dataItemSettings\"]>){\n\t\tconst node = dataItem.get(\"node\");\n\t\tconst hierarchyNode = dataItem.get(\"d3HierarchyNode\");\n\n\t\tconst point = this._getPoint(hierarchyNode);\n\n\t\tconst duration = this.get(\"animationDuration\", 0);\n\t\tconst easing = this.get(\"animationEasing\");\n\n\t\tnode.animate({ key: \"x\", to: point.x, duration: duration, easing: easing });\n\t\tnode.animate({ key: \"y\", to: point.y, duration: duration, easing: easing });\n\t}\n\n\tprotected _updateNode(dataItem: DataItem<this[\"_dataItemSettings\"]>) {\n\t\tsuper._updateNode(dataItem);\n\n\t\tthis._animatePositions(dataItem);\n\n\t\tconst hierarchyNode = dataItem.get(\"d3HierarchyNode\");\n\n\t\tconst hierarchyChildren = hierarchyNode.children;\n\t\tif (hierarchyChildren) {\n\t\t\t$array.each(hierarchyChildren, (hierarchyChild) => {\n\t\t\t\tthis._updateNodes(hierarchyChild)\n\t\t\t})\n\t\t}\n\n\t\tconst fill = dataItem.get(\"fill\");\n\t\tconst fillPattern = dataItem.get(\"fillPattern\");\n\t\tconst circle = dataItem.get(\"circle\");\n\t\tconst children = dataItem.get(\"children\");\n\n\t\tif (circle) {\n\t\t\tcircle._setDefault(\"fill\", fill);\n\t\t\tcircle._setDefault(\"fillPattern\", fillPattern);\n\t\t\tcircle._setDefault(\"stroke\", fill);\n\t\t}\n\n\t\tconst outerCircle = dataItem.get(\"outerCircle\");\n\t\tif (outerCircle) {\n\t\t\touterCircle._setDefault(\"fill\", fill);\n\t\t\touterCircle._setDefault(\"stroke\", fill);\n\n\t\t\tif (!children || children.length == 0) {\n\t\t\t\touterCircle.setPrivate(\"visible\", false);\n\t\t\t}\n\t\t\telse{\n\t\t\t\touterCircle.setPrivate(\"visible\", true);\n\t\t\t}\n\t\t}\n\t}\n\n\t/**\n\t * Link two data items with a link element.\n\t *\n\t * @param   source    Source node data item\n\t * @param   target    Target node data item\n\t * @param   strength  Link strength\n\t * @return            Link element\n\t */\n\tpublic linkDataItems(source: DataItem<this[\"_dataItemSettings\"]>, target: DataItem<this[\"_dataItemSettings\"]>, strength?: number): HierarchyLink {\n\n\t\tlet link!: HierarchyLink;\n\n\t\tconst sourceLinks = source.get(\"links\");\n\n\t\tif (sourceLinks) {\n\t\t\t$array.each(sourceLinks, (lnk) => {\n\t\t\t\tif (lnk.get(\"target\") == target) {\n\t\t\t\t\tlink = lnk;\n\t\t\t\t}\n\t\t\t})\n\t\t}\n\n\t\tconst targetLinks = target.get(\"links\");\n\n\t\tif (targetLinks) {\n\t\t\t$array.each(targetLinks, (lnk) => {\n\t\t\t\tif (lnk.get(\"target\") == source) {\n\t\t\t\t\tlink = lnk;\n\t\t\t\t}\n\t\t\t})\n\t\t}\n\n\t\tif (!link) {\n\t\t\tlink = this.links.make();\n\t\t\tlink.series = this;\n\t\t\tthis.links.push(link);\n\t\t\tthis.linksContainer.children.push(link);\n\t\t\tlink.set(\"source\", source);\n\t\t\tlink.set(\"target\", target);\n\t\t\tlink._setDataItem(source);\n\n\t\t\tlink._handleBullets(this.linkBullets);\n\t\t\tlink.set(\"stroke\", source.get(\"fill\"));\n\t\t\tif (strength != null) {\n\t\t\t\tlink.set(\"strength\", strength)\n\t\t\t}\n\n\t\t\tsource.get(\"childLinks\").push(link);\n\n\t\t\t$array.move(source.get(\"links\"), link);\n\t\t\t$array.move(target.get(\"links\"), link);\n\n\t\t\tthis._processLink(link, source, target);\n\t\t}\n\n\t\treturn link;\n\t}\n\n\n\t/**\n\t * Unlink two linked data items.\n\t *\n\t * @param   source  Source node data item\n\t * @param   target  Target node data item\n\t */\n\tpublic unlinkDataItems(source: DataItem<this[\"_dataItemSettings\"]>, target: DataItem<this[\"_dataItemSettings\"]>) {\n\n\t\tlet link!: HierarchyLink;\n\n\t\tconst sourceLinks = source.get(\"links\");\n\n\t\tif (sourceLinks) {\n\t\t\t$array.each(sourceLinks, (lnk) => {\n\t\t\t\tif (lnk && lnk.get(\"target\") == target) {\n\t\t\t\t\tlink = lnk;\n\t\t\t\t\t$array.remove(sourceLinks, link);\n\t\t\t\t}\n\t\t\t})\n\t\t}\n\n\t\tconst targetLinks = target.get(\"links\");\n\n\t\tif (targetLinks) {\n\t\t\t$array.each(targetLinks, (lnk) => {\n\t\t\t\tif (lnk && lnk.get(\"target\") == source) {\n\t\t\t\t\tlink = lnk;\n\t\t\t\t\t$array.remove(targetLinks, link);\n\t\t\t\t}\n\t\t\t})\n\t\t}\n\n\t\tif (link) {\n\t\t\tthis._disposeLink(link);\n\t\t}\n\n\t\tthis._handleUnlink();\n\t}\n\n\tprotected _handleUnlink() {\n\n\t}\n\n\tprotected _disposeLink(link: HierarchyLink) {\n\t\tthis.links.removeValue(link);\n\t\tlink.dispose();\n\t}\n\n\t/**\n\t * Returns `true` if two nodes are linked with each other.\n\t */\n\tpublic areLinked(source: DataItem<this[\"_dataItemSettings\"]>, target: DataItem<this[\"_dataItemSettings\"]>): boolean {\n\t\tconst sourceLinks = source.get(\"links\");\n\t\tlet linked = false;\n\t\tif (sourceLinks) {\n\t\t\t$array.each(sourceLinks, (lnk) => {\n\t\t\t\tif (lnk.get(\"target\") == target) {\n\t\t\t\t\tlinked = true;\n\t\t\t\t}\n\t\t\t})\n\t\t}\n\n\t\tconst targetLinks = target.get(\"links\");\n\n\t\tif (targetLinks) {\n\t\t\t$array.each(targetLinks, (lnk) => {\n\t\t\t\tif (lnk.get(\"target\") == source) {\n\t\t\t\t\tlinked = true;\n\t\t\t\t}\n\t\t\t})\n\t\t}\n\n\t\treturn linked;\n\t}\n\n\tprotected _processLink(_link: HierarchyLink, _source: DataItem<this[\"_dataItemSettings\"]>, _target: DataItem<this[\"_dataItemSettings\"]>) {\n\n\t}\n\n\t/**\n\t * @ignore\n\t */\n\tpublic disposeDataItem(dataItem: DataItem<this[\"_dataItemSettings\"]>) {\n\t\tsuper.disposeDataItem(dataItem);\n\t\tconst links = dataItem.get(\"links\");\n\t\tif (links) {\n\t\t\t$array.each(links, (link) => {\n\t\t\t\tthis._disposeLink(link)\n\t\t\t})\n\t\t}\n\t}\n\n\t/**\n\t * Select a data item.\n\t * @param  dataItem  Data item\n\t */\n\tpublic selectDataItem(dataItem: DataItem<this[\"_dataItemSettings\"]>) {\n\t\tconst parent = dataItem.get(\"parent\");\n\n\t\tif (!dataItem.get(\"disabled\")) {\n\t\t\tthis.set(\"selectedDataItem\", dataItem);\n\t\t}\n\t\telse {\n\t\t\tif (parent) {\n\t\t\t\tthis.setRaw(\"selectedDataItem\", parent);\n\t\t\t\tconst type = \"dataitemselected\";\n\t\t\t\tthis.events.dispatch(type, { type: type, target: this, dataItem: parent });\n\t\t\t\tthis.disableDataItem(dataItem);\n\t\t\t}\n\t\t}\n\t}\n}\n","import { __awaiter } from \"tslib\";\r\nimport { HierarchyDefaultTheme } from \"./HierarchyDefaultTheme\";\r\nimport { Series } from \"../../core/render/Series\";\r\nimport { DataItem } from \"../../core/render/Component\";\r\nimport { HierarchyNode } from \"./HierarchyNode\";\r\nimport { Container } from \"../../core/render/Container\";\r\nimport { Label } from \"../../core/render/Label\";\r\nimport { Template } from \"../../core/util/Template\";\r\nimport { ListTemplate } from \"../../core/util/List\";\r\nimport * as $array from \"../../core/util/Array\";\r\nimport * as $type from \"../../core/util/Type\";\r\nimport * as $utils from \"../../core/util/Utils\";\r\nimport * as d3hierarchy from \"d3-hierarchy\";\r\n;\r\n/**\r\n * A base class for all hierarchy charts.\r\n *\r\n * @see {@link https://www.amcharts.com/docs/v5/charts/hierarchy/} for more info\r\n */\r\nexport class Hierarchy extends Series {\r\n    constructor() {\r\n        super(...arguments);\r\n        /**\r\n         * A [[Container]] that nodes are placed in.\r\n         *\r\n         * @default Container.new()\r\n         */\r\n        Object.defineProperty(this, \"nodesContainer\", {\r\n            enumerable: true,\r\n            configurable: true,\r\n            writable: true,\r\n            value: this.children.push(Container.new(this._root, { isMeasured: false }))\r\n        });\r\n        Object.defineProperty(this, \"_rootNode\", {\r\n            enumerable: true,\r\n            configurable: true,\r\n            writable: true,\r\n            value: void 0\r\n        });\r\n        Object.defineProperty(this, \"_treeData\", {\r\n            enumerable: true,\r\n            configurable: true,\r\n            writable: true,\r\n            value: void 0\r\n        });\r\n        Object.defineProperty(this, \"_index\", {\r\n            enumerable: true,\r\n            configurable: true,\r\n            writable: true,\r\n            value: 0\r\n        });\r\n        Object.defineProperty(this, \"_tag\", {\r\n            enumerable: true,\r\n            configurable: true,\r\n            writable: true,\r\n            value: \"hierarchy\"\r\n        });\r\n        /**\r\n         * A list of nodes in a [[Hierarchy]] chart.\r\n         *\r\n         * @default new ListTemplate<HierarchyNode>\r\n         */\r\n        Object.defineProperty(this, \"nodes\", {\r\n            enumerable: true,\r\n            configurable: true,\r\n            writable: true,\r\n            value: this.addDisposer(new ListTemplate(Template.new({}), () => HierarchyNode.new(this._root, {\r\n                themeTags: $utils.mergeTags(this.nodes.template.get(\"themeTags\", []), [this._tag, \"hierarchy\", \"node\"])\r\n            }, this.nodes.template)))\r\n        });\r\n        /**\r\n         * A list of label elements in a [[Hierarchy]] chart.\r\n         *\r\n         * @default new ListTemplate<Label>\r\n         */\r\n        Object.defineProperty(this, \"labels\", {\r\n            enumerable: true,\r\n            configurable: true,\r\n            writable: true,\r\n            value: this.addDisposer(new ListTemplate(Template.new({}), () => Label.new(this._root, {\r\n                themeTags: $utils.mergeTags(this.labels.template.get(\"themeTags\", []), [this._tag])\r\n            }, this.labels.template)))\r\n        });\r\n        Object.defineProperty(this, \"_currentDownDepth\", {\r\n            enumerable: true,\r\n            configurable: true,\r\n            writable: true,\r\n            value: void 0\r\n        });\r\n    }\r\n    /**\r\n     * @ignore\r\n     */\r\n    makeNode(dataItem) {\r\n        const childData = dataItem.get(\"childData\");\r\n        const node = this.nodes.make();\r\n        node.series = this;\r\n        node._setDataItem(dataItem);\r\n        this.nodes.push(node);\r\n        dataItem.setRaw(\"node\", node);\r\n        const label = this.labels.make();\r\n        label._setDataItem(dataItem);\r\n        dataItem.setRaw(\"label\", label);\r\n        this.labels.push(label);\r\n        if (!childData || childData.length == 0) {\r\n            node.addTag(\"last\");\r\n        }\r\n        const depth = dataItem.get(\"depth\");\r\n        node.addTag(\"depth\" + depth);\r\n        this.nodesContainer.children.push(node);\r\n        node.children.push(label);\r\n        return node;\r\n    }\r\n    _afterNew() {\r\n        this._defaultThemes.push(HierarchyDefaultTheme.new(this._root));\r\n        this.fields.push(\"category\", \"childData\", \"disabled\", \"fill\");\r\n        this.children.push(this.bulletsContainer);\r\n        super._afterNew();\r\n    }\r\n    _prepareChildren() {\r\n        super._prepareChildren();\r\n        if (this._valuesDirty) {\r\n            this._treeData = {};\r\n            const first = this.dataItems[0];\r\n            if (first) {\r\n                this._makeHierarchyData(this._treeData, first);\r\n                this._index = 0;\r\n                this._rootNode = d3hierarchy.hierarchy(this._treeData);\r\n                if (this._rootNode) {\r\n                    this._rootNode.sum((d) => {\r\n                        return d.value;\r\n                    });\r\n                    const sort = this.get(\"sort\");\r\n                    if (sort == \"descending\") {\r\n                        this._rootNode.sort((a, b) => b.value - a.value);\r\n                    }\r\n                    else if (sort == \"ascending\") {\r\n                        this._rootNode.sort((a, b) => a.value - b.value);\r\n                    }\r\n                    this.setPrivateRaw(\"valueLow\", Infinity);\r\n                    this.setPrivateRaw(\"valueHigh\", -Infinity);\r\n                    this.setPrivateRaw(\"maxDepth\", 0);\r\n                    this._updateValues(this._rootNode);\r\n                }\r\n            }\r\n        }\r\n        if (this._valuesDirty || this._sizeDirty) {\r\n            this._updateVisuals();\r\n        }\r\n        if (this._sizeDirty) {\r\n            const dataItem = this.get(\"selectedDataItem\");\r\n            if (dataItem) {\r\n                this._zoom(dataItem);\r\n            }\r\n        }\r\n    }\r\n    _changed() {\r\n        super._changed();\r\n        if (this.isDirty(\"selectedDataItem\")) {\r\n            this._selectDataItem(this.get(\"selectedDataItem\"));\r\n        }\r\n    }\r\n    _updateVisuals() {\r\n        if (this._rootNode) {\r\n            this._updateNodes(this._rootNode);\r\n        }\r\n    }\r\n    _updateNodes(hierarchyNode) {\r\n        const dataItem = hierarchyNode.data.dataItem;\r\n        if (dataItem) {\r\n            this._updateNode(dataItem);\r\n            if (this.bullets.length > 0 && !dataItem.bullets) {\r\n                this._makeBullets(dataItem);\r\n            }\r\n            const hierarchyChildren = hierarchyNode.children;\r\n            if (hierarchyChildren) {\r\n                $array.each(hierarchyChildren, (hierarchyChild) => {\r\n                    this._updateNodes(hierarchyChild);\r\n                });\r\n            }\r\n        }\r\n    }\r\n    _updateNode(_dataItem) {\r\n    }\r\n    /**\r\n     * Looks up and returns a data item by its ID.\r\n     *\r\n     * @param   id  ID\r\n     * @return      Data item\r\n     */\r\n    getDataItemById(id) {\r\n        return this._getDataItemById(this.dataItems, id);\r\n    }\r\n    _getDataItemById(dataItems, id) {\r\n        let di;\r\n        $array.each(dataItems, (dataItem) => {\r\n            if (dataItem.get(\"id\") == id) {\r\n                di = dataItem;\r\n            }\r\n            const children = dataItem.get(\"children\");\r\n            if (children) {\r\n                let childDataItem = this._getDataItemById(children, id);\r\n                if (childDataItem) {\r\n                    di = childDataItem;\r\n                }\r\n            }\r\n        });\r\n        return di;\r\n    }\r\n    _handleBullets(dataItems) {\r\n        $array.each(dataItems, (dataItem) => {\r\n            const bullets = dataItem.bullets;\r\n            if (bullets) {\r\n                $array.each(bullets, (bullet) => {\r\n                    bullet.dispose();\r\n                });\r\n                dataItem.bullets = undefined;\r\n            }\r\n            const children = dataItem.get(\"children\");\r\n            if (children) {\r\n                this._handleBullets(children);\r\n            }\r\n        });\r\n        this._updateVisuals();\r\n    }\r\n    _onDataClear() {\r\n        super._onDataClear();\r\n        const colors = this.get(\"colors\");\r\n        if (colors) {\r\n            colors.reset();\r\n        }\r\n        const patterns = this.get(\"patterns\");\r\n        if (patterns) {\r\n            patterns.reset();\r\n        }\r\n    }\r\n    processDataItem(dataItem) {\r\n        super.processDataItem(dataItem);\r\n        const childData = dataItem.get(\"childData\");\r\n        const colors = this.get(\"colors\");\r\n        const patterns = this.get(\"patterns\");\r\n        const topDepth = this.get(\"topDepth\", 0);\r\n        if (!dataItem.get(\"parent\")) {\r\n            dataItem.setRaw(\"depth\", 0);\r\n            if (colors && topDepth == 0 && dataItem.get(\"fill\") == null) {\r\n                dataItem.setRaw(\"fill\", colors.next());\r\n                if (patterns) {\r\n                    dataItem.setRaw(\"fillPattern\", patterns.next());\r\n                }\r\n            }\r\n        }\r\n        let depth = dataItem.get(\"depth\");\r\n        const initialDepth = this.get(\"initialDepth\", 1);\r\n        this.makeNode(dataItem);\r\n        this._processDataItem(dataItem);\r\n        if (childData) {\r\n            const children = [];\r\n            dataItem.setRaw(\"children\", children);\r\n            $array.each(childData, (child) => {\r\n                const childDataItem = new DataItem(this, child, this._makeDataItem(child));\r\n                children.push(childDataItem);\r\n                childDataItem.setRaw(\"parent\", dataItem);\r\n                childDataItem.setRaw(\"depth\", depth + 1);\r\n                if (this.dataItems.length == 1 && depth == 0) {\r\n                    if (colors && childDataItem.get(\"fill\") == null) {\r\n                        childDataItem.setRaw(\"fill\", colors.next());\r\n                    }\r\n                    if (patterns && childDataItem.get(\"fillPattern\") == null) {\r\n                        childDataItem.setRaw(\"fillPattern\", patterns.next());\r\n                    }\r\n                }\r\n                else {\r\n                    if (childDataItem.get(\"fill\") == null) {\r\n                        childDataItem.setRaw(\"fill\", dataItem.get(\"fill\"));\r\n                    }\r\n                    if (childDataItem.get(\"fillPattern\") == null) {\r\n                        childDataItem.setRaw(\"fillPattern\", dataItem.get(\"fillPattern\"));\r\n                    }\r\n                }\r\n                this.processDataItem(childDataItem);\r\n            });\r\n        }\r\n        const children = dataItem.get(\"children\");\r\n        if (!children || children.length == 0) {\r\n            const node = dataItem.get(\"node\");\r\n            node.setAll({ toggleKey: undefined });\r\n        }\r\n        if (dataItem.get(\"disabled\") == null) {\r\n            if (depth >= topDepth + initialDepth) {\r\n                this.disableDataItem(dataItem, 0);\r\n            }\r\n        }\r\n    }\r\n    /**\r\n     * Adds children data to the target data item.\r\n     *\r\n     * @see {@link https://www.amcharts.com/docs/v5/charts/hierarchy/hierarchy-api/#Dynamically_adding_child_nodes} for more info\r\n     * @since 5.4.5\r\n     */\r\n    addChildData(dataItem, data) {\r\n        const dataContext = dataItem.dataContext;\r\n        const childDataField = this.get(\"childDataField\");\r\n        let childData = dataContext[childDataField];\r\n        if (!childData) {\r\n            childData = data;\r\n            dataContext[childDataField] = childData;\r\n        }\r\n        else {\r\n            childData.push(...data);\r\n        }\r\n        let children = dataItem.get(\"children\");\r\n        if (!children) {\r\n            children = [];\r\n            dataItem.set(\"children\", children);\r\n        }\r\n        const node = dataItem.get(\"node\");\r\n        if (node) {\r\n            node.set(\"toggleKey\", \"disabled\");\r\n        }\r\n        let depth = dataItem.get(\"depth\");\r\n        $array.each(childData, (child) => {\r\n            let found = false;\r\n            $array.eachContinue(children, (dataItem) => {\r\n                if (dataItem.dataContext == child) {\r\n                    found = true;\r\n                    return false;\r\n                }\r\n                return true;\r\n            });\r\n            if (!found) {\r\n                const childDataItem = new DataItem(this, child, this._makeDataItem(child));\r\n                children.push(childDataItem);\r\n                childDataItem.setRaw(\"parent\", dataItem);\r\n                childDataItem.setRaw(\"depth\", depth + 1);\r\n                if (childDataItem.get(\"fill\") == null) {\r\n                    childDataItem.setRaw(\"fill\", dataItem.get(\"fill\"));\r\n                }\r\n                this.processDataItem(childDataItem);\r\n            }\r\n        });\r\n    }\r\n    _processDataItem(_dataItem) {\r\n    }\r\n    _updateValues(d3HierarchyNode) {\r\n        const dataItem = d3HierarchyNode.data.dataItem;\r\n        if (d3HierarchyNode.depth > this.getPrivate(\"maxDepth\")) {\r\n            this.setPrivateRaw(\"maxDepth\", d3HierarchyNode.depth);\r\n        }\r\n        if (dataItem) {\r\n            dataItem.setRaw(\"d3HierarchyNode\", d3HierarchyNode);\r\n            d3HierarchyNode.index = this._index;\r\n            this._index++;\r\n            this.root.events.once(\"frameended\", () => {\r\n                dataItem.get(\"node\").set(\"disabled\", dataItem.get(\"disabled\"));\r\n            });\r\n            let dataValue = d3HierarchyNode.data.value;\r\n            let value = d3HierarchyNode.value;\r\n            if (dataValue != null) {\r\n                value = dataValue;\r\n                d3HierarchyNode[\"value\"] = value;\r\n            }\r\n            if ($type.isNumber(value)) {\r\n                dataItem.setRaw(\"sum\", value);\r\n                dataItem.setRaw(\"valuePercentTotal\", value / this.dataItems[0].get(\"sum\") * 100);\r\n                let valuePercent = 100;\r\n                const parent = dataItem.get(\"parent\");\r\n                if (parent) {\r\n                    valuePercent = value / parent.get(\"sum\") * 100;\r\n                }\r\n                dataItem.get(\"label\").text.markDirtyText();\r\n                dataItem.setRaw(\"valuePercent\", valuePercent);\r\n                const valueLow = this.getPrivate(\"valueLow\");\r\n                if (valueLow != undefined && valueLow > value) {\r\n                    this.setPrivateRaw(\"valueLow\", value);\r\n                }\r\n                const valueHigh = this.getPrivate(\"valueHigh\");\r\n                if (valueHigh != undefined && valueHigh < value) {\r\n                    this.setPrivateRaw(\"valueHigh\", value);\r\n                }\r\n            }\r\n            this.updateLegendValue(dataItem);\r\n        }\r\n        const hierarchyChildren = d3HierarchyNode.children;\r\n        if (hierarchyChildren) {\r\n            $array.each(hierarchyChildren, (d3HierarchyChild) => {\r\n                this._updateValues(d3HierarchyChild);\r\n            });\r\n        }\r\n    }\r\n    _makeHierarchyData(data, dataItem) {\r\n        data.dataItem = dataItem;\r\n        const children = dataItem.get(\"children\");\r\n        if (children) {\r\n            const childrenDataArray = [];\r\n            data.children = childrenDataArray;\r\n            $array.each(children, (childDataItem) => {\r\n                const childData = {};\r\n                childrenDataArray.push(childData);\r\n                this._makeHierarchyData(childData, childDataItem);\r\n            });\r\n            const value = dataItem.get(\"valueWorking\");\r\n            if ($type.isNumber(value)) {\r\n                data.value = value;\r\n            }\r\n        }\r\n        else {\r\n            const value = dataItem.get(\"valueWorking\");\r\n            if ($type.isNumber(value)) {\r\n                data.value = value;\r\n            }\r\n        }\r\n    }\r\n    /**\r\n     * @ignore\r\n     */\r\n    disposeDataItem(dataItem) {\r\n        super.disposeDataItem(dataItem);\r\n        const node = dataItem.get(\"node\");\r\n        if (node) {\r\n            this.nodes.removeValue(node);\r\n            node.dispose();\r\n        }\r\n        const label = dataItem.get(\"label\");\r\n        if (label) {\r\n            this.labels.removeValue(label);\r\n            label.dispose();\r\n        }\r\n        const children = dataItem.get(\"children\");\r\n        if (children) {\r\n            $array.each(children, (child) => {\r\n                this.disposeDataItem(child);\r\n            });\r\n        }\r\n    }\r\n    /**\r\n     * Hides hierarchy's data item.\r\n     *\r\n     * @param   dataItem  Data item\r\n     * @param   duration  Animation duration in milliseconds\r\n     * @return            Promise\r\n     */\r\n    hideDataItem(dataItem, duration) {\r\n        const _super = Object.create(null, {\r\n            hideDataItem: { get: () => super.hideDataItem }\r\n        });\r\n        return __awaiter(this, void 0, void 0, function* () {\r\n            const promises = [_super.hideDataItem.call(this, dataItem, duration)];\r\n            const hiddenState = this.states.create(\"hidden\", {});\r\n            if (!$type.isNumber(duration)) {\r\n                const stateAnimationDuration = \"stateAnimationDuration\";\r\n                duration = hiddenState.get(stateAnimationDuration, this.get(stateAnimationDuration, 0));\r\n            }\r\n            const stateAnimationEasing = \"stateAnimationEasing\";\r\n            const easing = hiddenState.get(stateAnimationEasing, this.get(stateAnimationEasing));\r\n            const children = dataItem.get(\"children\");\r\n            if ((!children || children.length == 0) && $type.isNumber(dataItem.get(\"value\"))) {\r\n                promises.push(dataItem.animate({ key: \"valueWorking\", to: 0, duration: duration, easing: easing }).waitForStop());\r\n            }\r\n            const node = dataItem.get(\"node\");\r\n            node.hide();\r\n            node.hideTooltip();\r\n            if (children) {\r\n                $array.each(children, (childDataItem) => {\r\n                    promises.push(this.hideDataItem(childDataItem));\r\n                });\r\n            }\r\n            yield Promise.all(promises);\r\n        });\r\n    }\r\n    /**\r\n     * Shows hierarchy's data item.\r\n     *\r\n     * @param   dataItem  Data item\r\n     * @param   duration  Animation duration in milliseconds\r\n     * @return            Promise\r\n     */\r\n    showDataItem(dataItem, duration) {\r\n        const _super = Object.create(null, {\r\n            showDataItem: { get: () => super.showDataItem }\r\n        });\r\n        return __awaiter(this, void 0, void 0, function* () {\r\n            const promises = [_super.showDataItem.call(this, dataItem, duration)];\r\n            if (!$type.isNumber(duration)) {\r\n                duration = this.get(\"stateAnimationDuration\", 0);\r\n            }\r\n            const easing = this.get(\"stateAnimationEasing\");\r\n            const children = dataItem.get(\"children\");\r\n            if ((!children || children.length == 0) && $type.isNumber(dataItem.get(\"value\"))) {\r\n                promises.push(dataItem.animate({ key: \"valueWorking\", to: dataItem.get(\"value\"), duration: duration, easing: easing }).waitForStop());\r\n            }\r\n            const node = dataItem.get(\"node\");\r\n            node.show();\r\n            if (children) {\r\n                $array.each(children, (childDataItem) => {\r\n                    promises.push(this.showDataItem(childDataItem));\r\n                });\r\n            }\r\n            yield Promise.all(promises);\r\n        });\r\n    }\r\n    /**\r\n     * Enables a disabled data item.\r\n     *\r\n     * @param  dataItem  Target data item\r\n     * @param  duration  Animation duration in milliseconds\r\n     */\r\n    enableDataItem(dataItem, maxDepth, depth, duration) {\r\n        if (depth == null) {\r\n            depth = 0;\r\n        }\r\n        if (maxDepth == null) {\r\n            maxDepth = 1;\r\n        }\r\n        dataItem.set(\"disabled\", false);\r\n        dataItem.get(\"node\").set(\"disabled\", false);\r\n        if (!dataItem.isHidden()) {\r\n            dataItem.get(\"node\").show(duration);\r\n        }\r\n        const topDepth = this.get(\"topDepth\", 0);\r\n        if (dataItem.get(\"depth\") < topDepth) {\r\n            dataItem.get(\"node\").hide(0);\r\n        }\r\n        if (depth == 0) {\r\n            const upDepth = this.get(\"upDepth\", Infinity);\r\n            let parent = dataItem;\r\n            let count = 0;\r\n            while (parent !== undefined) {\r\n                if (count > upDepth) {\r\n                    parent.get(\"node\").hide();\r\n                }\r\n                parent = parent.get(\"parent\");\r\n                count++;\r\n            }\r\n        }\r\n        let children = dataItem.get(\"children\");\r\n        if (children) {\r\n            if (depth < maxDepth - 1) {\r\n                $array.each(children, (child) => {\r\n                    const disabledField = this.get(\"disabledField\");\r\n                    if (disabledField) {\r\n                        const dataContext = child.dataContext;\r\n                        if (dataContext[disabledField] != true) {\r\n                            this.enableDataItem(child, maxDepth, depth + 1, duration);\r\n                        }\r\n                        else {\r\n                            this.disableDataItem(child);\r\n                        }\r\n                    }\r\n                    else {\r\n                        this.enableDataItem(child, maxDepth, depth + 1, duration);\r\n                    }\r\n                });\r\n            }\r\n            else {\r\n                $array.each(children, (child) => {\r\n                    if (!child.isHidden()) {\r\n                        child.get(\"node\").show(duration);\r\n                        child.get(\"node\").states.applyAnimate(\"disabled\");\r\n                        child.set(\"disabled\", true);\r\n                        this.disableDataItem(child);\r\n                    }\r\n                });\r\n            }\r\n        }\r\n    }\r\n    /**\r\n     * Disables a data item.\r\n     *\r\n     * @param  dataItem  Target data item\r\n     * @param  duration  Animation duration in milliseconds\r\n     */\r\n    disableDataItem(dataItem, duration) {\r\n        dataItem.set(\"disabled\", true);\r\n        let children = dataItem.get(\"children\");\r\n        if (children) {\r\n            $array.each(children, (child) => {\r\n                this.disableDataItem(child, duration);\r\n                child.get(\"node\").hide(duration);\r\n            });\r\n        }\r\n    }\r\n    _selectDataItem(dataItem, downDepth, skipDisptach) {\r\n        if (dataItem) {\r\n            if (!skipDisptach) {\r\n                const type = \"dataitemselected\";\r\n                this.events.dispatch(type, { type: type, target: this, dataItem: dataItem });\r\n            }\r\n            let maxDepth = this.getPrivate(\"maxDepth\", 1);\r\n            const topDepth = this.get(\"topDepth\", 0);\r\n            if (downDepth == null) {\r\n                downDepth = Math.min(this.get(\"downDepth\", 1), maxDepth - dataItem.get(\"depth\"));\r\n            }\r\n            const hierarchyNode = dataItem.get(\"d3HierarchyNode\");\r\n            let currentDepth = hierarchyNode.depth;\r\n            if (!this.inited) {\r\n                downDepth = Math.min(this.get(\"initialDepth\", 1), maxDepth - topDepth);\r\n                downDepth = Math.max(0, downDepth);\r\n            }\r\n            this._currentDownDepth = downDepth;\r\n            if (currentDepth + downDepth > maxDepth) {\r\n                downDepth = maxDepth - currentDepth;\r\n            }\r\n            if (currentDepth < topDepth) {\r\n                downDepth += topDepth - currentDepth;\r\n                currentDepth = topDepth;\r\n            }\r\n            const children = dataItem.get(\"children\");\r\n            if (children && children.length > 0) {\r\n                if (downDepth > 0) {\r\n                    this.enableDataItem(dataItem, downDepth);\r\n                }\r\n                else {\r\n                    dataItem.get(\"node\").show();\r\n                    $array.each(children, (child) => {\r\n                        child.get(\"node\").hide();\r\n                    });\r\n                }\r\n                if (hierarchyNode.depth < topDepth) {\r\n                    dataItem.get(\"node\").hide(0);\r\n                }\r\n                if (this.get(\"singleBranchOnly\")) {\r\n                    this._handleSingle(dataItem);\r\n                }\r\n            }\r\n            else {\r\n                this.enableDataItem(dataItem, downDepth);\r\n            }\r\n            this._root.events.once(\"frameended\", () => {\r\n                this._zoom(dataItem);\r\n            });\r\n        }\r\n    }\r\n    _zoom(_dataItem) {\r\n    }\r\n    _handleSingle(dataItem) {\r\n        const parent = dataItem.get(\"parent\");\r\n        if (parent) {\r\n            const children = parent.get(\"children\");\r\n            if (children) {\r\n                $array.each(children, (child) => {\r\n                    if (child != dataItem) {\r\n                        this.disableDataItem(child);\r\n                    }\r\n                });\r\n            }\r\n        }\r\n    }\r\n    /**\r\n     * Selects specific data item.\r\n     *\r\n     * @param  dataItem  Target data item\r\n     */\r\n    selectDataItem(dataItem) {\r\n        const parent = dataItem.get(\"parent\");\r\n        const maxDepth = this.getPrivate(\"maxDepth\", 1);\r\n        if (this.get(\"selectedDataItem\") == dataItem) {\r\n            if (parent) {\r\n                this.set(\"selectedDataItem\", parent);\r\n            }\r\n            else {\r\n                let depth = Math.min(this.get(\"downDepth\", 1), maxDepth - dataItem.get(\"depth\"));\r\n                if (this._currentDownDepth == depth) {\r\n                    depth = Math.min(this.get(\"initialDepth\", 1), maxDepth - this.get(\"topDepth\", 0));\r\n                }\r\n                this._selectDataItem(dataItem, depth);\r\n            }\r\n        }\r\n        else {\r\n            this.set(\"selectedDataItem\", dataItem);\r\n        }\r\n    }\r\n    _makeBullet(dataItem, bulletFunction, index) {\r\n        const bullet = super._makeBullet(dataItem, bulletFunction, index);\r\n        if (bullet) {\r\n            const sprite = bullet.get(\"sprite\");\r\n            const node = dataItem.get(\"node\");\r\n            if (sprite) {\r\n                node.children.push(sprite);\r\n                node.on(\"width\", () => {\r\n                    this._positionBullet(bullet);\r\n                });\r\n                node.on(\"height\", () => {\r\n                    this._positionBullet(bullet);\r\n                });\r\n            }\r\n        }\r\n        return bullet;\r\n    }\r\n    _positionBullet(bullet) {\r\n        const sprite = bullet.get(\"sprite\");\r\n        if (sprite) {\r\n            const dataItem = sprite.dataItem;\r\n            const locationX = bullet.get(\"locationX\", 0.5);\r\n            const locationY = bullet.get(\"locationY\", 0.5);\r\n            const node = dataItem.get(\"node\");\r\n            sprite.set(\"x\", node.width() * locationX);\r\n            sprite.set(\"y\", node.height() * locationY);\r\n        }\r\n    }\r\n    /**\r\n     * Triggers hover on a series data item.\r\n     *\r\n     * @since 5.0.7\r\n     * @param  dataItem  Target data item\r\n     */\r\n    hoverDataItem(dataItem) {\r\n        const node = dataItem.get(\"node\");\r\n        if (node && !node.isHidden()) {\r\n            node.hover();\r\n        }\r\n    }\r\n    /**\r\n     * Triggers un-hover on a series data item.\r\n     *\r\n     * @since 5.0.7\r\n     * @param  dataItem  Target data item\r\n     */\r\n    unhoverDataItem(dataItem) {\r\n        const node = dataItem.get(\"node\");\r\n        if (node) {\r\n            node.unhover();\r\n        }\r\n    }\r\n}\r\nObject.defineProperty(Hierarchy, \"className\", {\r\n    enumerable: true,\r\n    configurable: true,\r\n    writable: true,\r\n    value: \"Hierarchy\"\r\n});\r\nObject.defineProperty(Hierarchy, \"classNames\", {\r\n    enumerable: true,\r\n    configurable: true,\r\n    writable: true,\r\n    value: Series.classNames.concat([Hierarchy.className])\r\n});\r\n//# sourceMappingURL=Hierarchy.js.map","import type { Color } from \"../../core/util/Color\";\nimport type { ColorSet } from \"../../core/util/ColorSet\";\nimport type { Bullet } from \"../../core/render/Bullet\";\nimport type { Root } from \"../../core/Root\";\nimport type { Easing } from \"../../core/util/Ease\";\nimport type { PatternSet } from \"../../core/util/PatternSet\";\nimport type { Pattern } from \"../../core/render/patterns/Pattern\";\n\nimport { HierarchyDefaultTheme } from \"./HierarchyDefaultTheme\";\nimport { Series, ISeriesSettings, ISeriesDataItem, ISeriesPrivate, ISeriesEvents } from \"../../core/render/Series\";\nimport { DataItem } from \"../../core/render/Component\";\nimport { HierarchyNode } from \"./HierarchyNode\";\nimport { Container } from \"../../core/render/Container\";\nimport { Label } from \"../../core/render/Label\";\nimport { Template } from \"../../core/util/Template\";\nimport { ListTemplate } from \"../../core/util/List\";\n\nimport * as $array from \"../../core/util/Array\";\nimport * as $type from \"../../core/util/Type\";\nimport * as $utils from \"../../core/util/Utils\";\nimport * as d3hierarchy from \"d3-hierarchy\";\n\n/**\n * @ignore\n */\nexport interface IHierarchyDataObject {\n\tname?: string,\n\tvalue?: number,\n\tchildren?: IHierarchyDataObject[],\n\tdataItem?: DataItem<IHierarchyDataItem>\n\tcustomValue?: boolean;\n};\n\nexport interface IHierarchyDataItem extends ISeriesDataItem {\n\n\t/**\n\t * Value of the node as set in data.\n\t */\n\tvalue: number;\n\n\t/**\n\t * @ignore\n\t */\n\tvalueWorking: number;\n\n\t/**\n\t * Percent value of the node, based on total sum of all nodes in upper level.\n\t */\n\tvaluePercentTotal: number;\n\n\t/**\n\t * Percent value of the node, based on the value of its direct parent.\n\t *\n\t * @since 5.2.21\n\t */\n\tvaluePercent: number;\n\n\t/**\n\t * Sum of child values.\n\t */\n\tsum: number;\n\n\t/**\n\t * Category.\n\t */\n\tcategory: string;\n\n\t/**\n\t * List of child node data items.\n\t */\n\tchildren: Array<DataItem<IHierarchyDataItem>>;\n\n\t/**\n\t * Raw data of the node's children.\n\t */\n\tchildData: Array<any>\n\n\t/**\n\t * Data item of parent node.\n\t */\n\tparent: DataItem<IHierarchyDataItem>;\n\n\t/**\n\t * Node's depth within the hierarchy.\n\t */\n\tdepth: number;\n\n\t/**\n\t * A reference to the related [[HierarchyNode]].\n\t */\n\tnode: HierarchyNode;\n\n\t/**\n\t * A reference to node's [[Label]].\n\t */\n\tlabel: Label;\n\n\t/**\n\t * Node's auto-assigned color.\n\t */\n\tfill: Color;\n\n\t/**\n\t * Node's auto-assigned pattern.\n\t *\n\t * @see {@link https://www.amcharts.com/docs/v5/concepts/colors-gradients-and-patterns/patterns/} for more info\n\t * @since 5.10.0\n\t */\n\tfillPattern: Pattern;\n\n\t/**\n\t * Indicates if node is currently disabled.\n\t */\n\tdisabled: boolean;\n\n\t/**\n\t * @ignore\n\t */\n\td3HierarchyNode: d3hierarchy.HierarchyNode<IHierarchyDataObject>;\n\n}\n\nexport interface IHierarchySettings extends ISeriesSettings {\n\t/**\n\t * How to sort nodes by their value.\n\t *\n\t * @default \"none\"\n\t */\n\tsort?: \"ascending\" | \"descending\" | \"none\"\n\n\n\t/**\n\t * A field in data that holds numeric value for the node.\n\t */\n\tvalueField?: string;\n\n\t/**\n\t * A field in data that holds string-based identificator for node.\n\t */\n\tcategoryField?: string;\n\n\t/**\n\t * A field in data that holds an array of child node data.\n\t */\n\tchildDataField?: string;\n\n\t/**\n\t * A field in data that holds boolean value indicating if node is\n\t * disabled (collapsed).\n\t */\n\tdisabledField?: string;\n\n\t/**\n\t * A field in data that holds color used for fills for various elements, such\n\t * as nodes.\n\t */\n\tfillField?: string;\n\n\t/**\n\t * A [[ColorSet]] to use when asigning colors for nodes.\n\t *\n\t * @see {@link https://www.amcharts.com/docs/v5/charts/hierarchy/#Node_colors} for more info\n\t */\n\tcolors?: ColorSet;\n\n\t/**\n\t * A [[PatternSet]] to use when asigning patterns for nodes.\n\t *\n\t * @see {@link https://www.amcharts.com/docs/v5/concepts/colors-gradients-and-patterns/patterns/#Pattern_sets} for more info\n\t * @since 5.10.0\n\t */\n\tpatterns?: PatternSet;\n\n\t/**\n\t * Number of child levels to open when clicking on a node.\n\t *\n\t * @see {@link https://www.amcharts.com/docs/v5/charts/hierarchy/#Drill_down} for more info\n\t */\n\tdownDepth?: number;\n\n\t/**\n\t * Number of levels parent levels to show from currently selected node.\n\t *\n\t * @see {@link https://www.amcharts.com/docs/v5/charts/hierarchy/#Drill_down} for more info\n\t */\n\tupDepth?: number;\n\n\t/**\n\t * Number of levels to show on chart's first load.\n\t *\n\t * @see {@link https://www.amcharts.com/docs/v5/charts/hierarchy/#Tree_depth} for more info\n\t */\n\tinitialDepth?: number;\n\n\t/**\n\t * If set, will show nodes starting from set level.\n\t *\n\t * It could be used to eliminate top level branches, that do not need to be\n\t * shown.\n\t *\n\t * @see {@link https://www.amcharts.com/docs/v5/charts/hierarchy/#Tree_depth} for more info\n\t */\n\ttopDepth?: number;\n\n\t/**\n\t * If set to `true` will make all other branches collapse when some branch is\n\t * expanded.\n\t */\n\tsingleBranchOnly?: boolean;\n\n\t/**\n\t * A data item for currently selected node.\n\t *\n\t * @see {@link https://www.amcharts.com/docs/v5/charts/hierarchy/#Pre_selected_branch} for more info\n\t */\n\tselectedDataItem?: DataItem<IHierarchyDataItem>;\n\n\t/**\n\t * Duration for all drill animations in milliseconds.\n\t */\n\tanimationDuration?: number;\n\n\t/**\n\t * An easing function to use for drill animations.\n\t */\n\tanimationEasing?: Easing;\n\n}\n\nexport interface IHierarchyPrivate extends ISeriesPrivate {\n\n\t/**\n\t * Level count in series.\n\t */\n\tmaxDepth: number;\n\n}\n\nexport interface IHierarchyEvents extends ISeriesEvents {\n\tdataitemselected: {\n\t\tdataItem?: DataItem<IHierarchyDataItem>\n\t};\n}\n\n/**\n * A base class for all hierarchy charts.\n *\n * @see {@link https://www.amcharts.com/docs/v5/charts/hierarchy/} for more info\n */\nexport abstract class Hierarchy extends Series {\n\tpublic static className: string = \"Hierarchy\";\n\tpublic static classNames: Array<string> = Series.classNames.concat([Hierarchy.className]);\n\n\tdeclare public _settings: IHierarchySettings;\n\tdeclare public _privateSettings: IHierarchyPrivate;\n\tdeclare public _dataItemSettings: IHierarchyDataItem;\n\tdeclare public _events: IHierarchyEvents;\n\n\t/**\n\t * A [[Container]] that nodes are placed in.\n\t *\n\t * @default Container.new()\n\t */\n\tpublic readonly nodesContainer = this.children.push(Container.new(this._root, { isMeasured: false }));\n\n\tpublic _rootNode: d3hierarchy.HierarchyNode<IHierarchyDataObject> | undefined;\n\n\tpublic _treeData: IHierarchyDataObject | undefined;\n\n\tprotected _index: number = 0;\n\n\tprotected _tag: string = \"hierarchy\";\n\n\t/**\n\t * A list of nodes in a [[Hierarchy]] chart.\n\t *\n\t * @default new ListTemplate<HierarchyNode>\n\t */\n\tpublic readonly nodes: ListTemplate<HierarchyNode> = this.addDisposer(new ListTemplate(\n\t\tTemplate.new({}),\n\t\t() => HierarchyNode.new(this._root, {\n\t\t\tthemeTags: $utils.mergeTags(this.nodes.template.get(\"themeTags\", []), [this._tag, \"hierarchy\", \"node\"])\n\t\t}, this.nodes.template)\n\t));\n\n\t/**\n\t * @ignore\n\t */\n\tpublic makeNode(dataItem: DataItem<this[\"_dataItemSettings\"]>): HierarchyNode {\n\n\t\tconst childData = dataItem.get(\"childData\");\n\n\t\tconst node = this.nodes.make();\n\t\tnode.series = this;\n\t\tnode._setDataItem(dataItem);\n\t\tthis.nodes.push(node);\n\t\tdataItem.setRaw(\"node\", node);\n\n\t\tconst label = this.labels.make();\n\t\tlabel._setDataItem(dataItem);\n\t\tdataItem.setRaw(\"label\", label);\n\t\tthis.labels.push(label);\n\n\t\tif (!childData || childData.length == 0) {\n\t\t\tnode.addTag(\"last\");\n\t\t}\n\n\t\tconst depth = dataItem.get(\"depth\");\n\t\tnode.addTag(\"depth\" + depth);\n\n\t\tthis.nodesContainer.children.push(node);\n\t\tnode.children.push(label);\n\n\t\treturn node;\n\t}\n\n\t/**\n\t * A list of label elements in a [[Hierarchy]] chart.\n\t *\n\t * @default new ListTemplate<Label>\n\t */\n\tpublic readonly labels: ListTemplate<Label> = this.addDisposer(new ListTemplate(\n\t\tTemplate.new({}),\n\t\t() => Label.new(this._root, {\n\t\t\tthemeTags: $utils.mergeTags(this.labels.template.get(\"themeTags\", []), [this._tag])\n\t\t}, this.labels.template)\n\t));\n\n\tpublic _currentDownDepth: number | undefined;\n\n\tprotected _afterNew() {\n\t\tthis._defaultThemes.push(HierarchyDefaultTheme.new(this._root));\n\t\tthis.fields.push(\"category\", \"childData\", \"disabled\", \"fill\");\n\t\tthis.children.push(this.bulletsContainer);\n\n\t\tsuper._afterNew();\n\t}\n\n\tpublic _prepareChildren() {\n\t\tsuper._prepareChildren();\n\n\t\tif (this._valuesDirty) {\n\t\t\tthis._treeData = {};\n\n\t\t\tconst first = this.dataItems[0];\n\t\t\tif (first) {\n\t\t\t\tthis._makeHierarchyData(this._treeData, first);\n\t\t\t\tthis._index = 0;\n\t\t\t\tthis._rootNode = (d3hierarchy.hierarchy(this._treeData) as any);\n\t\t\t\tif (this._rootNode) {\n\t\t\t\t\tthis._rootNode.sum((d) => {\n\t\t\t\t\t\treturn d.value as any;\n\t\t\t\t\t});\n\t\t\t\t\tconst sort = this.get(\"sort\")\n\t\t\t\t\tif (sort == \"descending\") {\n\t\t\t\t\t\tthis._rootNode.sort((a, b) => (b.value as any) - (a.value as any));\n\t\t\t\t\t}\n\t\t\t\t\telse if (sort == \"ascending\") {\n\t\t\t\t\t\tthis._rootNode.sort((a, b) => (a.value as any) - (b.value as any));\n\t\t\t\t\t}\n\t\t\t\t\tthis.setPrivateRaw(\"valueLow\", Infinity);\n\t\t\t\t\tthis.setPrivateRaw(\"valueHigh\", -Infinity);\n\t\t\t\t\tthis.setPrivateRaw(\"maxDepth\", 0);\n\t\t\t\t\tthis._updateValues(this._rootNode);\n\t\t\t\t}\n\t\t\t}\n\t\t}\n\n\t\tif (this._valuesDirty || this._sizeDirty) {\n\t\t\tthis._updateVisuals();\n\t\t}\n\n\t\tif (this._sizeDirty) {\n\t\t\tconst dataItem = this.get(\"selectedDataItem\");\n\t\t\tif (dataItem) {\n\t\t\t\tthis._zoom(dataItem);\n\t\t\t}\n\t\t}\n\t}\n\n\tpublic _changed() {\n\t\tsuper._changed();\n\t\tif (this.isDirty(\"selectedDataItem\")) {\n\t\t\tthis._selectDataItem(this.get(\"selectedDataItem\"));\n\t\t}\n\t}\n\n\tprotected _updateVisuals() {\n\t\tif (this._rootNode) {\n\t\t\tthis._updateNodes(this._rootNode);\n\t\t}\n\t}\n\n\tprotected _updateNodes(hierarchyNode: d3hierarchy.HierarchyNode<IHierarchyDataObject>) {\n\t\tconst dataItem = hierarchyNode.data.dataItem;\n\n\t\tif (dataItem) {\n\t\t\tthis._updateNode(dataItem);\n\n\t\t\tif (this.bullets.length > 0 && !dataItem.bullets) {\n\t\t\t\tthis._makeBullets(dataItem);\n\t\t\t}\n\n\t\t\tconst hierarchyChildren = hierarchyNode.children;\n\t\t\tif (hierarchyChildren) {\n\t\t\t\t$array.each(hierarchyChildren, (hierarchyChild) => {\n\t\t\t\t\tthis._updateNodes(hierarchyChild)\n\t\t\t\t})\n\t\t\t}\n\t\t}\n\t}\n\n\tprotected _updateNode(_dataItem: DataItem<this[\"_dataItemSettings\"]>) {\n\n\t}\n\n\t/**\n\t * Looks up and returns a data item by its ID.\n\t *\n\t * @param   id  ID\n\t * @return      Data item\n\t */\n\tpublic getDataItemById(id: string): DataItem<this[\"_dataItemSettings\"]> | undefined {\n\t\treturn this._getDataItemById(this.dataItems, id);\n\t}\n\n\tpublic _getDataItemById(dataItems: Array<DataItem<this[\"_dataItemSettings\"]>>, id: string): DataItem<this[\"_dataItemSettings\"]> | undefined {\n\n\t\tlet di: DataItem<this[\"_dataItemSettings\"]> | undefined;\n\n\t\t$array.each(dataItems, (dataItem: any) => {\n\n\t\t\tif (dataItem.get(\"id\") == id) {\n\t\t\t\tdi = dataItem;\n\t\t\t}\n\n\t\t\tconst children = dataItem.get(\"children\");\n\t\t\tif (children) {\n\t\t\t\tlet childDataItem = this._getDataItemById(children, id);\n\t\t\t\tif (childDataItem) {\n\t\t\t\t\tdi = childDataItem\n\t\t\t\t}\n\t\t\t}\n\t\t})\n\n\t\treturn di;\n\t}\n\n\tprotected _handleBullets(dataItems: Array<DataItem<this[\"_dataItemSettings\"]>>) {\n\t\t$array.each(dataItems, (dataItem) => {\n\t\t\tconst bullets = dataItem.bullets;\n\t\t\tif (bullets) {\n\t\t\t\t$array.each(bullets, (bullet) => {\n\t\t\t\t\tbullet.dispose();\n\t\t\t\t})\n\t\t\t\tdataItem.bullets = undefined;\n\t\t\t}\n\n\t\t\tconst children = dataItem.get(\"children\");\n\n\t\t\tif (children) {\n\t\t\t\tthis._handleBullets(children);\n\t\t\t}\n\t\t})\n\n\t\tthis._updateVisuals();\n\t}\n\n\tprotected _onDataClear() {\n\t\tsuper._onDataClear();\n\t\tconst colors = this.get(\"colors\");\n\t\tif (colors) {\n\t\t\tcolors.reset();\n\t\t}\n\n\t\tconst patterns = this.get(\"patterns\");\n\t\tif (patterns) {\n\t\t\tpatterns.reset();\n\t\t}\n\t}\n\n\tprotected processDataItem(dataItem: DataItem<this[\"_dataItemSettings\"]>) {\n\t\tsuper.processDataItem(dataItem);\n\n\t\tconst childData = dataItem.get(\"childData\");\n\t\tconst colors = this.get(\"colors\");\n\t\tconst patterns = this.get(\"patterns\");\n\t\tconst topDepth = this.get(\"topDepth\", 0);\n\n\t\tif (!dataItem.get(\"parent\")) {\n\t\t\tdataItem.setRaw(\"depth\", 0);\n\t\t\tif (colors && topDepth == 0 && dataItem.get(\"fill\") == null) {\n\t\t\t\tdataItem.setRaw(\"fill\", colors.next());\n\n\t\t\t\tif (patterns) {\n\t\t\t\t\tdataItem.setRaw(\"fillPattern\", patterns.next());\n\t\t\t\t}\n\t\t\t}\n\t\t}\n\n\t\tlet depth = dataItem.get(\"depth\");\n\t\tconst initialDepth = this.get(\"initialDepth\", 1);\n\n\t\tthis.makeNode(dataItem);\n\t\tthis._processDataItem(dataItem);\n\n\t\tif (childData) {\n\t\t\tconst children: Array<DataItem<this[\"_dataItemSettings\"]>> = [];\n\t\t\tdataItem.setRaw(\"children\", children);\n\n\t\t\t$array.each(childData, (child) => {\n\t\t\t\tconst childDataItem = new DataItem(this, child, this._makeDataItem(child));\n\n\t\t\t\tchildren.push(childDataItem);\n\n\t\t\t\tchildDataItem.setRaw(\"parent\", dataItem);\n\t\t\t\tchildDataItem.setRaw(\"depth\", depth + 1);\n\n\t\t\t\tif (this.dataItems.length == 1 && depth == 0) {\n\t\t\t\t\tif (colors && childDataItem.get(\"fill\") == null) {\n\t\t\t\t\t\tchildDataItem.setRaw(\"fill\", colors.next());\n\t\t\t\t\t}\n\t\t\t\t\tif (patterns && childDataItem.get(\"fillPattern\") == null) {\n\t\t\t\t\t\tchildDataItem.setRaw(\"fillPattern\", patterns.next());\n\t\t\t\t\t}\n\t\t\t\t}\n\t\t\t\telse {\n\t\t\t\t\tif (childDataItem.get(\"fill\") == null) {\n\t\t\t\t\t\tchildDataItem.setRaw(\"fill\", dataItem.get(\"fill\"));\n\t\t\t\t\t}\n\t\t\t\t\tif (childDataItem.get(\"fillPattern\") == null) {\n\t\t\t\t\t\tchildDataItem.setRaw(\"fillPattern\", dataItem.get(\"fillPattern\"));\n\t\t\t\t\t}\n\t\t\t\t}\n\n\t\t\t\tthis.processDataItem(childDataItem);\n\t\t\t})\n\t\t}\n\n\t\tconst children = dataItem.get(\"children\");\n\t\tif (!children || children.length == 0) {\n\t\t\tconst node = dataItem.get(\"node\");\n\t\t\tnode.setAll({ toggleKey: undefined });\n\t\t}\n\n\t\tif (dataItem.get(\"disabled\") == null) {\n\t\t\tif (depth >= topDepth + initialDepth) {\n\t\t\t\tthis.disableDataItem(dataItem, 0);\n\t\t\t}\n\t\t}\n\t}\n\n\t/**\n\t * Adds children data to the target data item.\n\t *\n\t * @see {@link https://www.amcharts.com/docs/v5/charts/hierarchy/hierarchy-api/#Dynamically_adding_child_nodes} for more info\n\t * @since 5.4.5\n\t */\n\tpublic addChildData(dataItem: DataItem<this[\"_dataItemSettings\"]>, data: Array<any>) {\n\t\tconst dataContext = dataItem.dataContext as any;\n\t\tconst childDataField = this.get(\"childDataField\");\n\n\t\tlet childData = dataContext[childDataField] as any;\n\t\tif (!childData) {\n\t\t\tchildData = data;\n\t\t\tdataContext[childDataField] = childData;\n\t\t}\n\t\telse {\n\t\t\tchildData.push(...data);\n\t\t}\n\n\t\tlet children = dataItem.get(\"children\");\n\t\tif (!children) {\n\t\t\tchildren = [];\n\t\t\tdataItem.set(\"children\", children);\n\t\t}\n\n\t\tconst node = dataItem.get(\"node\");\n\n\t\tif (node) {\n\t\t\tnode.set(\"toggleKey\", \"disabled\");\n\t\t}\n\n\t\tlet depth = dataItem.get(\"depth\");\n\n\t\t$array.each(childData, (child) => {\n\t\t\tlet found = false;\n\t\t\t$array.eachContinue(children, (dataItem) => {\n\t\t\t\tif (dataItem.dataContext == child) {\n\t\t\t\t\tfound = true;\n\t\t\t\t\treturn false;\n\t\t\t\t}\n\t\t\t\treturn true;\n\t\t\t})\n\n\t\t\tif (!found) {\n\t\t\t\tconst childDataItem = new DataItem(this, child, this._makeDataItem(child));\n\n\t\t\t\tchildren.push(childDataItem);\n\n\t\t\t\tchildDataItem.setRaw(\"parent\", dataItem);\n\t\t\t\tchildDataItem.setRaw(\"depth\", depth + 1);\n\n\t\t\t\tif (childDataItem.get(\"fill\") == null) {\n\t\t\t\t\tchildDataItem.setRaw(\"fill\", dataItem.get(\"fill\"));\n\t\t\t\t}\n\n\t\t\t\tthis.processDataItem(childDataItem);\n\t\t\t}\n\t\t})\n\t}\n\n\tprotected _processDataItem(_dataItem: DataItem<this[\"_dataItemSettings\"]>) {\n\n\t}\n\n\tprotected _updateValues(d3HierarchyNode: d3hierarchy.HierarchyNode<IHierarchyDataObject>) {\n\t\tconst dataItem = d3HierarchyNode.data.dataItem;\n\n\t\tif (d3HierarchyNode.depth > this.getPrivate(\"maxDepth\")) {\n\t\t\tthis.setPrivateRaw(\"maxDepth\", d3HierarchyNode.depth);\n\t\t}\n\n\t\tif (dataItem) {\n\t\t\tdataItem.setRaw(\"d3HierarchyNode\", d3HierarchyNode);\n\n\t\t\t(d3HierarchyNode as any).index = this._index;\n\n\t\t\tthis._index++;\n\n\t\t\tthis.root.events.once(\"frameended\", () => {\n\t\t\t\tdataItem.get(\"node\").set(\"disabled\", dataItem.get(\"disabled\"));\n\t\t\t})\n\n\t\t\tlet dataValue = d3HierarchyNode.data.value;\n\t\t\tlet value = d3HierarchyNode.value\n\n\t\t\tif (dataValue != null) {\n\t\t\t\tvalue = dataValue;\n\t\t\t\t(d3HierarchyNode as any)[\"value\"] = value;\n\t\t\t}\n\n\t\t\tif ($type.isNumber(value)) {\n\t\t\t\tdataItem.setRaw(\"sum\", value);\n\t\t\t\tdataItem.setRaw(\"valuePercentTotal\", value / this.dataItems[0].get(\"sum\") * 100);\n\n\t\t\t\tlet valuePercent = 100;\n\t\t\t\tconst parent = dataItem.get(\"parent\");\n\t\t\t\tif (parent) {\n\t\t\t\t\tvaluePercent = value / parent.get(\"sum\") * 100;\n\t\t\t\t}\n\t\t\t\tdataItem.get(\"label\").text.markDirtyText();\n\t\t\t\tdataItem.setRaw(\"valuePercent\", valuePercent);\n\n\t\t\t\tconst valueLow = this.getPrivate(\"valueLow\");\n\t\t\t\tif (valueLow != undefined && valueLow > value) {\n\t\t\t\t\tthis.setPrivateRaw(\"valueLow\", value);\n\t\t\t\t}\n\n\t\t\t\tconst valueHigh = this.getPrivate(\"valueHigh\");\n\t\t\t\tif (valueHigh != undefined && valueHigh < value) {\n\t\t\t\t\tthis.setPrivateRaw(\"valueHigh\", value);\n\t\t\t\t}\n\t\t\t}\n\n\t\t\tthis.updateLegendValue(dataItem);\n\t\t}\n\n\t\tconst hierarchyChildren = d3HierarchyNode.children;\n\t\tif (hierarchyChildren) {\n\t\t\t$array.each(hierarchyChildren, (d3HierarchyChild) => {\n\t\t\t\tthis._updateValues(d3HierarchyChild);\n\t\t\t})\n\t\t}\n\t}\n\n\tprotected _makeHierarchyData(data: IHierarchyDataObject, dataItem: DataItem<IHierarchyDataItem>) {\n\t\tdata.dataItem = dataItem;\n\n\t\tconst children = dataItem.get(\"children\");\n\t\tif (children) {\n\t\t\tconst childrenDataArray: Array<IHierarchyDataObject> = [];\n\t\t\tdata.children = childrenDataArray;\n\t\t\t$array.each(children, (childDataItem) => {\n\t\t\t\tconst childData = {};\n\t\t\t\tchildrenDataArray.push(childData);\n\t\t\t\tthis._makeHierarchyData(childData, childDataItem);\n\t\t\t})\n\n\t\t\tconst value = dataItem.get(\"valueWorking\");\n\t\t\tif ($type.isNumber(value)) {\n\t\t\t\tdata.value = value;\n\t\t\t}\n\t\t}\n\t\telse {\n\t\t\tconst value = dataItem.get(\"valueWorking\");\n\t\t\tif ($type.isNumber(value)) {\n\t\t\t\tdata.value = value;\n\t\t\t}\n\t\t}\n\t}\n\n\t/**\n\t * @ignore\n\t */\n\tpublic disposeDataItem(dataItem: DataItem<this[\"_dataItemSettings\"]>) {\n\t\tsuper.disposeDataItem(dataItem);\n\t\tconst node = dataItem.get(\"node\");\n\t\tif (node) {\n\t\t\tthis.nodes.removeValue(node);\n\t\t\tnode.dispose();\n\t\t}\n\t\tconst label = dataItem.get(\"label\");\n\t\tif (label) {\n\t\t\tthis.labels.removeValue(label);\n\t\t\tlabel.dispose();\n\t\t}\n\n\t\tconst children = dataItem.get(\"children\");\n\t\tif (children) {\n\t\t\t$array.each(children, (child) => {\n\t\t\t\tthis.disposeDataItem(child);\n\t\t\t})\n\t\t}\n\t}\n\n\t/**\n\t * Hides hierarchy's data item.\n\t *\n\t * @param   dataItem  Data item\n\t * @param   duration  Animation duration in milliseconds\n\t * @return            Promise\n\t */\n\tpublic async hideDataItem(dataItem: DataItem<this[\"_dataItemSettings\"]>, duration?: number): Promise<void> {\n\t\tconst promises = [super.hideDataItem(dataItem, duration)];\n\n\t\tconst hiddenState = this.states.create(\"hidden\", {})\n\n\t\tif (!$type.isNumber(duration)) {\n\t\t\tconst stateAnimationDuration = \"stateAnimationDuration\"\n\t\t\tduration = hiddenState.get(stateAnimationDuration, this.get(stateAnimationDuration, 0));\n\t\t}\n\n\t\tconst stateAnimationEasing = \"stateAnimationEasing\";\n\t\tconst easing = hiddenState.get(stateAnimationEasing, this.get(stateAnimationEasing));\n\n\t\tconst children = dataItem.get(\"children\");\n\n\t\tif ((!children || children.length == 0) && $type.isNumber(dataItem.get(\"value\"))) {\n\t\t\tpromises.push(dataItem.animate({ key: \"valueWorking\" as any, to: 0, duration: duration, easing: easing }).waitForStop());\n\t\t}\n\n\t\tconst node = dataItem.get(\"node\");\n\t\tnode.hide();\n\t\tnode.hideTooltip();\n\n\t\tif (children) {\n\t\t\t$array.each(children, (childDataItem) => {\n\t\t\t\tpromises.push(this.hideDataItem(childDataItem));\n\t\t\t})\n\t\t}\n\n\t\tawait Promise.all(promises);\n\t}\n\n\t/**\n\t * Shows hierarchy's data item.\n\t *\n\t * @param   dataItem  Data item\n\t * @param   duration  Animation duration in milliseconds\n\t * @return            Promise\n\t */\n\tpublic async showDataItem(dataItem: DataItem<this[\"_dataItemSettings\"]>, duration?: number): Promise<void> {\n\t\tconst promises = [super.showDataItem(dataItem, duration)];\n\n\t\tif (!$type.isNumber(duration)) {\n\t\t\tduration = this.get(\"stateAnimationDuration\", 0);\n\t\t}\n\n\t\tconst easing = this.get(\"stateAnimationEasing\");\n\n\t\tconst children = dataItem.get(\"children\");\n\n\t\tif ((!children || children.length == 0) && $type.isNumber(dataItem.get(\"value\"))) {\n\t\t\tpromises.push(dataItem.animate({ key: \"valueWorking\" as any, to: dataItem.get(\"value\"), duration: duration, easing: easing }).waitForStop());\n\t\t}\n\n\t\tconst node = dataItem.get(\"node\");\n\t\tnode.show();\n\n\t\tif (children) {\n\t\t\t$array.each(children, (childDataItem) => {\n\t\t\t\tpromises.push(this.showDataItem(childDataItem));\n\t\t\t})\n\t\t}\n\n\t\tawait Promise.all(promises);\n\t}\n\n\t/**\n\t * Enables a disabled data item.\n\t *\n\t * @param  dataItem  Target data item\n\t * @param  duration  Animation duration in milliseconds\n\t */\n\tpublic enableDataItem(dataItem: DataItem<this[\"_dataItemSettings\"]>, maxDepth?: number, depth?: number, duration?: number) {\n\t\tif (depth == null) {\n\t\t\tdepth = 0;\n\t\t}\n\n\t\tif (maxDepth == null) {\n\t\t\tmaxDepth = 1;\n\t\t}\n\n\t\tdataItem.set(\"disabled\", false);\n\t\tdataItem.get(\"node\").set(\"disabled\", false);\n\n\t\tif (!dataItem.isHidden()) {\n\t\t\tdataItem.get(\"node\").show(duration);\n\t\t}\n\n\n\n\t\tconst topDepth = this.get(\"topDepth\", 0);\n\t\tif (dataItem.get(\"depth\") < topDepth) {\n\t\t\tdataItem.get(\"node\").hide(0);\n\t\t}\n\n\t\tif (depth == 0) {\n\t\t\tconst upDepth = this.get(\"upDepth\", Infinity);\n\t\t\tlet parent = dataItem;\n\t\t\tlet count = 0;\n\n\t\t\twhile (parent !== undefined) {\n\t\t\t\tif (count > upDepth) {\n\t\t\t\t\tparent.get(\"node\").hide();\n\t\t\t\t}\n\t\t\t\tparent = parent.get(\"parent\");\n\t\t\t\tcount++;\n\t\t\t}\n\t\t}\n\n\t\tlet children = dataItem.get(\"children\");\n\t\tif (children) {\n\t\t\tif (depth < maxDepth - 1) {\n\t\t\t\t$array.each(children, (child) => {\n\t\t\t\t\tconst disabledField = this.get(\"disabledField\");\n\t\t\t\t\tif (disabledField) {\n\t\t\t\t\t\tconst dataContext = child.dataContext as any;\n\t\t\t\t\t\tif (dataContext[disabledField] != true) {\n\t\t\t\t\t\t\tthis.enableDataItem(child, maxDepth, depth as number + 1, duration);\n\t\t\t\t\t\t}\n\t\t\t\t\t\telse {\n\t\t\t\t\t\t\tthis.disableDataItem(child);\n\t\t\t\t\t\t}\n\t\t\t\t\t}\n\t\t\t\t\telse {\n\t\t\t\t\t\tthis.enableDataItem(child, maxDepth, depth as number + 1, duration);\n\t\t\t\t\t}\n\t\t\t\t})\n\t\t\t}\n\t\t\telse {\n\t\t\t\t$array.each(children, (child) => {\n\t\t\t\t\tif (!child.isHidden()) {\n\t\t\t\t\t\tchild.get(\"node\").show(duration);\n\t\t\t\t\t\tchild.get(\"node\").states.applyAnimate(\"disabled\");\n\t\t\t\t\t\tchild.set(\"disabled\", true);\n\n\t\t\t\t\t\tthis.disableDataItem(child);\n\t\t\t\t\t}\n\t\t\t\t})\n\t\t\t}\n\t\t}\n\t}\n\n\t/**\n\t * Disables a data item.\n\t *\n\t * @param  dataItem  Target data item\n\t * @param  duration  Animation duration in milliseconds\n\t */\n\tpublic disableDataItem(dataItem: DataItem<this[\"_dataItemSettings\"]>, duration?: number) {\n\t\tdataItem.set(\"disabled\", true);\n\t\tlet children = dataItem.get(\"children\");\n\t\tif (children) {\n\t\t\t$array.each(children, (child) => {\n\t\t\t\tthis.disableDataItem(child, duration);\n\t\t\t\tchild.get(\"node\").hide(duration);\n\t\t\t})\n\t\t}\n\t}\n\n\tprotected _selectDataItem(dataItem?: DataItem<this[\"_dataItemSettings\"]>, downDepth?: number, skipDisptach?: boolean) {\n\t\tif (dataItem) {\n\t\t\tif (!skipDisptach) {\n\t\t\t\tconst type = \"dataitemselected\";\n\t\t\t\tthis.events.dispatch(type, { type: type, target: this, dataItem: dataItem });\n\t\t\t}\n\n\t\t\tlet maxDepth = this.getPrivate(\"maxDepth\", 1);\n\t\t\tconst topDepth = this.get(\"topDepth\", 0);\n\n\t\t\tif (downDepth == null) {\n\t\t\t\tdownDepth = Math.min(this.get(\"downDepth\", 1), maxDepth - dataItem.get(\"depth\"));\n\t\t\t}\n\n\t\t\tconst hierarchyNode = dataItem.get(\"d3HierarchyNode\");\n\t\t\tlet currentDepth = hierarchyNode.depth;\n\t\t\tif (!this.inited) {\n\t\t\t\tdownDepth = Math.min(this.get(\"initialDepth\", 1), maxDepth - topDepth);\n\t\t\t\tdownDepth = Math.max(0, downDepth);\n\t\t\t}\n\n\t\t\tthis._currentDownDepth = downDepth;\n\n\t\t\tif (currentDepth + downDepth > maxDepth) {\n\t\t\t\tdownDepth = maxDepth - currentDepth;\n\t\t\t}\n\n\t\t\tif (currentDepth < topDepth) {\n\t\t\t\tdownDepth += topDepth - currentDepth;\n\t\t\t\tcurrentDepth = topDepth;\n\t\t\t}\n\n\t\t\tconst children = dataItem.get(\"children\");\n\n\t\t\tif (children && children.length > 0) {\n\t\t\t\tif (downDepth > 0) {\n\t\t\t\t\tthis.enableDataItem(dataItem, downDepth);\n\t\t\t\t}\n\t\t\t\telse {\n\t\t\t\t\tdataItem.get(\"node\").show();\n\t\t\t\t\t$array.each(children, (child) => {\n\t\t\t\t\t\tchild.get(\"node\").hide();\n\t\t\t\t\t})\n\t\t\t\t}\n\n\t\t\t\tif (hierarchyNode.depth < topDepth) {\n\t\t\t\t\tdataItem.get(\"node\").hide(0);\n\t\t\t\t}\n\n\t\t\t\tif (this.get(\"singleBranchOnly\")) {\n\t\t\t\t\tthis._handleSingle(dataItem);\n\t\t\t\t}\n\t\t\t}\n\t\t\telse {\n\t\t\t\tthis.enableDataItem(dataItem, downDepth);\n\t\t\t}\n\n\t\t\tthis._root.events.once(\"frameended\", () => {\n\t\t\t\tthis._zoom(dataItem);\n\t\t\t})\n\t\t}\n\t}\n\n\tprotected _zoom(_dataItem: DataItem<this[\"_dataItemSettings\"]>) {\n\t}\n\n\tprotected _handleSingle(dataItem: DataItem<this[\"_dataItemSettings\"]>) {\n\t\tconst parent = dataItem.get(\"parent\");\n\t\tif (parent) {\n\t\t\tconst children = parent.get(\"children\");\n\t\t\tif (children) {\n\t\t\t\t$array.each(children, (child) => {\n\t\t\t\t\tif (child != dataItem) {\n\t\t\t\t\t\tthis.disableDataItem(child);\n\t\t\t\t\t}\n\t\t\t\t})\n\t\t\t}\n\t\t}\n\t}\n\n\t/**\n\t * Selects specific data item.\n\t *\n\t * @param  dataItem  Target data item\n\t */\n\tpublic selectDataItem(dataItem: DataItem<this[\"_dataItemSettings\"]>) {\n\t\tconst parent = dataItem.get(\"parent\");\n\t\tconst maxDepth = this.getPrivate(\"maxDepth\", 1);\n\n\t\tif (this.get(\"selectedDataItem\") == dataItem) {\n\t\t\tif (parent) {\n\t\t\t\tthis.set(\"selectedDataItem\", parent);\n\t\t\t}\n\t\t\telse {\n\t\t\t\tlet depth = Math.min(this.get(\"downDepth\", 1), maxDepth - dataItem.get(\"depth\"));\n\n\t\t\t\tif (this._currentDownDepth == depth) {\n\t\t\t\t\tdepth = Math.min(this.get(\"initialDepth\", 1), maxDepth - this.get(\"topDepth\", 0));\n\t\t\t\t}\n\n\t\t\t\tthis._selectDataItem(dataItem, depth);\n\t\t\t}\n\t\t}\n\t\telse {\n\t\t\tthis.set(\"selectedDataItem\", dataItem);\n\t\t}\n\t}\n\n\n\tprotected _makeBullet(dataItem: DataItem<this[\"_dataItemSettings\"]>, bulletFunction: (root: Root, series: Series, dataItem: DataItem<this[\"_dataItemSettings\"]>) => Bullet | undefined, index?: number) {\n\t\tconst bullet = super._makeBullet(dataItem, bulletFunction, index);\n\t\tif (bullet) {\n\t\t\tconst sprite = bullet.get(\"sprite\");\n\t\t\tconst node = dataItem.get(\"node\");\n\n\t\t\tif (sprite) {\n\t\t\t\tnode.children.push(sprite);\n\t\t\t\tnode.on(\"width\", () => {\n\t\t\t\t\tthis._positionBullet(bullet);\n\t\t\t\t})\n\t\t\t\tnode.on(\"height\", () => {\n\t\t\t\t\tthis._positionBullet(bullet);\n\t\t\t\t})\n\t\t\t}\n\t\t}\n\t\treturn bullet;\n\t}\n\n\tpublic _positionBullet(bullet: Bullet) {\n\n\t\tconst sprite = bullet.get(\"sprite\");\n\t\tif (sprite) {\n\t\t\tconst dataItem = sprite.dataItem as DataItem<this[\"_dataItemSettings\"]>;\n\n\t\t\tconst locationX = bullet.get(\"locationX\", 0.5);\n\t\t\tconst locationY = bullet.get(\"locationY\", 0.5);\n\n\t\t\tconst node = dataItem.get(\"node\");\n\n\t\t\tsprite.set(\"x\", node.width() * locationX);\n\t\t\tsprite.set(\"y\", node.height() * locationY);\n\t\t}\n\t}\n\n\t/**\n\t * Triggers hover on a series data item.\n\t *\n\t * @since 5.0.7\n\t * @param  dataItem  Target data item\n\t */\n\tpublic hoverDataItem(dataItem: DataItem<this[\"_dataItemSettings\"]>) {\n\t\tconst node = dataItem.get(\"node\");\n\t\tif (node && !node.isHidden()) {\n\t\t\tnode.hover();\n\t\t}\n\t}\n\n\t/**\n\t * Triggers un-hover on a series data item.\n\t *\n\t * @since 5.0.7\n\t * @param  dataItem  Target data item\n\t */\n\tpublic unhoverDataItem(dataItem: DataItem<this[\"_dataItemSettings\"]>) {\n\t\tconst node = dataItem.get(\"node\");\n\t\tif (node) {\n\t\t\tnode.unhover();\n\t\t}\n\t}\n}\n","import { Theme } from \"../../core/Theme\";\r\nimport { percent, p100, p50 } from \"../../core/util/Percent\";\r\nimport { ColorSet } from \"../../core/util/ColorSet\";\r\nimport { setColor } from \"../../themes/DefaultTheme\";\r\nimport * as $ease from \"../../core/util/Ease\";\r\n/**\r\n * @ignore\r\n */\r\nexport class HierarchyDefaultTheme extends Theme {\r\n    setupDefaultRules() {\r\n        super.setupDefaultRules();\r\n        const ic = this._root.interfaceColors;\r\n        const gridLayout = this._root.gridLayout;\r\n        const r = this.rule.bind(this);\r\n        /**\r\n         * ========================================================================\r\n         * charts/hierarchy\r\n         * ========================================================================\r\n         */\r\n        r(\"Hierarchy\").setAll({\r\n            legendLabelText: \"{category}\",\r\n            legendValueText: \"{sum.formatNumber('#.#')}\",\r\n            width: p100,\r\n            height: p100,\r\n            colors: ColorSet.new(this._root, { step: 2 }),\r\n            downDepth: 1,\r\n            initialDepth: 5,\r\n            singleBranchOnly: true,\r\n            maskContent: true,\r\n            animationEasing: $ease.out($ease.cubic)\r\n        });\r\n        r(\"HierarchyNode\").setAll({\r\n            toggleKey: \"disabled\",\r\n            setStateOnChildren: true,\r\n            position: \"absolute\",\r\n            isMeasured: false,\r\n            cursorOverStyle: \"pointer\",\r\n            tooltipText: \"{category}: {sum}\"\r\n        });\r\n        r(\"HierarchyNode\", [\"last\"]).setAll({\r\n            cursorOverStyle: \"default\"\r\n        });\r\n        {\r\n            const rule = r(\"Label\", [\"hierarchy\", \"node\"]);\r\n            rule.setAll({\r\n                centerX: p50,\r\n                centerY: p50,\r\n                position: \"absolute\",\r\n                paddingBottom: 1,\r\n                paddingTop: 1,\r\n                paddingRight: 4,\r\n                paddingLeft: 4,\r\n                text: \"{category}\",\r\n                populateText: true,\r\n                oversizedBehavior: \"fit\",\r\n                minScale: 0.3\r\n            });\r\n            setColor(rule, \"fill\", ic, \"alternativeText\");\r\n        }\r\n        {\r\n            const rule = r(\"HierarchyLink\");\r\n            rule.setAll({\r\n                isMeasured: false,\r\n                position: \"absolute\",\r\n                strokeWidth: 1,\r\n                strokeOpacity: 1,\r\n                strength: 0.9,\r\n                distance: 1.1\r\n            });\r\n            setColor(rule, \"stroke\", ic, \"grid\");\r\n        }\r\n        r(\"Circle\", [\"linkedhierarchy\", \"shape\"]).setAll({\r\n            position: \"absolute\",\r\n            fillOpacity: 1,\r\n            strokeOpacity: 0,\r\n            radius: 15,\r\n            tooltipY: 0\r\n        });\r\n        r(\"Circle\", [\"linkedhierarchy\", \"shape\", \"outer\"]).setAll({\r\n            position: \"absolute\",\r\n            opacity: 1,\r\n            fillOpacity: 0,\r\n            strokeDasharray: 0,\r\n            strokeOpacity: 1,\r\n            radius: 15,\r\n            scale: 1.1,\r\n            interactive: false\r\n        });\r\n        r(\"Circle\", [\"linkedhierarchy\", \"shape\", \"outer\"]).states.create(\"disabled\", { opacity: 1, scale: 1.1, strokeDasharray: 2 });\r\n        r(\"Circle\", [\"linkedhierarchy\", \"shape\", \"outer\"]).states.create(\"hoverDisabled\", { scale: 1.2, opacity: 1, strokeDasharray: 2 });\r\n        r(\"Circle\", [\"linkedhierarchy\", \"shape\", \"outer\"]).states.create(\"hover\", { scale: 1.05, strokeDasharray: 0 });\r\n        r(\"Circle\", [\"linkedhierarchy\", \"shape\", \"outer\"]).states.create(\"hidden\", { opacity: 0, strokeDasharray: 0 });\r\n        /**\r\n         * ------------------------------------------------------------------------\r\n         * charts/hierarchy: BreadcrumbBar\r\n         * ------------------------------------------------------------------------\r\n         */\r\n        r(\"BreadcrumbBar\").setAll({\r\n            paddingLeft: 8,\r\n            layout: gridLayout\r\n        });\r\n        {\r\n            const rule = r(\"Label\", [\"breadcrumb\"]);\r\n            rule.setAll({\r\n                paddingRight: 4,\r\n                paddingLeft: 4,\r\n                cursorOverStyle: \"pointer\",\r\n                populateText: true,\r\n                text: \"{category}:\",\r\n            });\r\n            setColor(rule, \"fill\", ic, \"primaryButton\");\r\n        }\r\n        {\r\n            const rule = r(\"Label\", [\"breadcrumb\"]).states.create(\"hover\", {});\r\n            setColor(rule, \"fill\", ic, \"primaryButtonHover\");\r\n        }\r\n        {\r\n            const rule = r(\"Label\", [\"breadcrumb\"]).states.create(\"down\", { stateAnimationDuration: 0 });\r\n            setColor(rule, \"fill\", ic, \"primaryButtonDown\");\r\n        }\r\n        {\r\n            const rule = r(\"Label\", [\"breadcrumb\", \"last\"]);\r\n            rule.setAll({\r\n                populateText: true,\r\n                text: \"{category}\",\r\n                fontWeight: \"bold\",\r\n                cursorOverStyle: \"default\"\r\n            });\r\n            setColor(rule, \"fill\", ic, \"primaryButton\");\r\n        }\r\n        {\r\n            const rule = r(\"RoundedRectangle\", [\"breadcrumb\", \"label\", \"background\"]);\r\n            rule.setAll({\r\n                fillOpacity: 0,\r\n            });\r\n            setColor(rule, \"fill\", ic, \"background\");\r\n        }\r\n        /**\r\n         * ------------------------------------------------------------------------\r\n         * charts/hierarchy: Partition\r\n         * ------------------------------------------------------------------------\r\n         */\r\n        r(\"Partition\").setAll({\r\n            downDepth: 1,\r\n            upDepth: 0,\r\n            initialDepth: 5\r\n        });\r\n        r(\"HierarchyNode\", [\"partition\"]).setAll({\r\n            setStateOnChildren: false\r\n        });\r\n        r(\"HierarchyNode\", [\"partition\"]).states.create(\"hidden\", {\r\n            opacity: 1,\r\n            visible: true\r\n        });\r\n        {\r\n            const rule = r(\"Label\", [\"partition\", \"node\"]);\r\n            rule.setAll({\r\n                x: p50,\r\n                y: p50,\r\n                centerY: p50,\r\n                centerX: p50,\r\n                paddingBottom: 1,\r\n                paddingTop: 1,\r\n                paddingLeft: 1,\r\n                paddingRight: 1,\r\n                rotation: 90,\r\n                populateText: true,\r\n                text: \"{category}\",\r\n                oversizedBehavior: \"fit\",\r\n                minScale: 0.4\r\n            });\r\n            setColor(rule, \"fill\", ic, \"alternativeText\");\r\n        }\r\n        r(\"Label\", [\"horizontal\", \"partition\", \"node\"]).setAll({\r\n            rotation: 0\r\n        });\r\n        {\r\n            const rule = r(\"RoundedRectangle\", [\"partition\", \"node\", \"shape\"]);\r\n            rule.setAll({\r\n                strokeOpacity: 1,\r\n                strokeWidth: 1,\r\n                cornerRadiusBR: 0,\r\n                cornerRadiusTR: 0,\r\n                cornerRadiusBL: 0,\r\n                cornerRadiusTL: 0\r\n            });\r\n            setColor(rule, \"stroke\", ic, \"background\");\r\n        }\r\n        r(\"RoundedRectangle\", [\"partition\", \"node\", \"shape\", \"last\"]).setAll({\r\n            fillOpacity: 0.75\r\n        });\r\n        /**\r\n         * ------------------------------------------------------------------------\r\n         * charts/hierarchy: Sunburst\r\n         * ------------------------------------------------------------------------\r\n         */\r\n        r(\"Sunburst\").setAll({\r\n            singleBranchOnly: true\r\n        });\r\n        r(\"HierarchyNode\", [\"sunburst\"]).setAll({\r\n            setStateOnChildren: false\r\n        });\r\n        r(\"HierarchyNode\", [\"sunburst\"]).states.create(\"hidden\", {\r\n            opacity: 0,\r\n            visible: false\r\n        });\r\n        {\r\n            const rule = r(\"Slice\", [\"sunburst\", \"node\", \"shape\"]);\r\n            rule.setAll({\r\n                strokeOpacity: 1,\r\n                strokeWidth: 1,\r\n                cornerRadius: 0\r\n            });\r\n            setColor(rule, \"stroke\", ic, \"background\");\r\n        }\r\n        r(\"Slice\", [\"sunburst\", \"node\", \"shape\", \"last\"]).setAll({\r\n            fillOpacity: 0.75\r\n        });\r\n        {\r\n            const rule = r(\"RadialLabel\", [\"sunburst\", \"node\"]);\r\n            rule.setAll({\r\n                x: 0,\r\n                y: 0,\r\n                textType: \"radial\",\r\n                paddingBottom: 1,\r\n                paddingTop: 1,\r\n                paddingLeft: 1,\r\n                paddingRight: 1,\r\n                centerX: p50,\r\n                populateText: true,\r\n                text: \"{category}\",\r\n                oversizedBehavior: \"fit\",\r\n                minScale: 0.4,\r\n                baseRadius: p50,\r\n                rotation: 0\r\n            });\r\n            setColor(rule, \"fill\", ic, \"alternativeText\");\r\n        }\r\n        /**\r\n         * ------------------------------------------------------------------------\r\n         * charts/hierarchy: ForceDirected\r\n         * ------------------------------------------------------------------------\r\n         */\r\n        r(\"ForceDirected\").setAll({\r\n            minRadius: percent(1),\r\n            maxRadius: percent(8),\r\n            initialFrames: 500,\r\n            centerStrength: 0.8,\r\n            manyBodyStrength: -14,\r\n            velocityDecay: 0.5,\r\n            linkWithStrength: 0.5,\r\n            showOnFrame: 10,\r\n            singleBranchOnly: false,\r\n            upDepth: Infinity,\r\n            downDepth: 1,\r\n            initialDepth: 5,\r\n            topDepth: 0\r\n        });\r\n        /**\r\n         * ------------------------------------------------------------------------\r\n         * charts/hierarchy: Tree\r\n         * ------------------------------------------------------------------------\r\n         */\r\n        r(\"Tree\").setAll({\r\n            orientation: \"vertical\",\r\n            paddingLeft: 20,\r\n            paddingRight: 20,\r\n            paddingTop: 20,\r\n            paddingBottom: 20,\r\n            singleBranchOnly: false,\r\n            upDepth: Infinity,\r\n            downDepth: 1,\r\n            initialDepth: 5,\r\n            topDepth: 0\r\n        });\r\n        /**\r\n         * ------------------------------------------------------------------------\r\n         * charts/hierarchy: Pack\r\n         * ------------------------------------------------------------------------\r\n         */\r\n        r(\"Pack\").setAll({\r\n            paddingLeft: 20,\r\n            paddingTop: 20,\r\n            paddingBottom: 20,\r\n            paddingRight: 20,\r\n            nodePadding: 0\r\n        });\r\n        {\r\n            const rule = r(\"Label\", [\"pack\", \"node\"]);\r\n            rule.setAll({\r\n                centerY: p50,\r\n                centerX: p50,\r\n                paddingBottom: 1,\r\n                paddingTop: 1,\r\n                paddingLeft: 1,\r\n                paddingRight: 1,\r\n                populateText: true,\r\n                text: \"{category}\",\r\n                oversizedBehavior: \"fit\",\r\n                minScale: 0.4\r\n            });\r\n            setColor(rule, \"fill\", ic, \"alternativeText\");\r\n        }\r\n        {\r\n            const rule = r(\"Circle\", [\"pack\", \"node\", \"shape\"]);\r\n            rule.setAll({\r\n                strokeOpacity: 0.5,\r\n                fillOpacity: 0.8,\r\n                strokeWidth: 1,\r\n            });\r\n            setColor(rule, \"stroke\", ic, \"background\");\r\n        }\r\n        r(\"LinkedHierarchyNode\").setAll({\r\n            draggable: true\r\n        });\r\n        r(\"LinkedHierarchyNode\").states.create(\"hidden\", { scale: 0, opacity: 0, visible: false });\r\n        /**\r\n         * ------------------------------------------------------------------------\r\n         * charts/hierarchy: Treemap\r\n         * ------------------------------------------------------------------------\r\n         */\r\n        r(\"Treemap\").setAll({\r\n            upDepth: 0,\r\n            layoutAlgorithm: \"squarify\"\r\n        });\r\n        {\r\n            const rule = r(\"Label\", [\"treemap\", \"node\"]);\r\n            rule.setAll({\r\n                x: p50,\r\n                y: p50,\r\n                centerY: p50,\r\n                centerX: p50,\r\n                paddingBottom: 1,\r\n                paddingTop: 1,\r\n                paddingLeft: 1,\r\n                paddingRight: 1,\r\n                populateText: true,\r\n                text: \"{category}\",\r\n                oversizedBehavior: \"fit\",\r\n                minScale: 0.4\r\n            });\r\n            setColor(rule, \"fill\", ic, \"alternativeText\");\r\n        }\r\n        r(\"HierarchyNode\", [\"treemap\", \"node\"]).setAll({\r\n            tooltipY: percent(40),\r\n            isMeasured: false,\r\n            position: \"absolute\"\r\n        });\r\n        {\r\n            const rule = r(\"RoundedRectangle\", [\"treemap\", \"node\", \"shape\"]);\r\n            rule.setAll({\r\n                strokeOpacity: 1,\r\n                strokeWidth: 1,\r\n                cornerRadiusBR: 0,\r\n                cornerRadiusTR: 0,\r\n                cornerRadiusBL: 0,\r\n                cornerRadiusTL: 0,\r\n                fillOpacity: 1\r\n            });\r\n            setColor(rule, \"stroke\", ic, \"background\");\r\n        }\r\n        /**\r\n         * ------------------------------------------------------------------------\r\n         * charts/hierarchy: Voronoi Treemap\r\n         * ------------------------------------------------------------------------\r\n         */\r\n        {\r\n            r(\"VoronoiTreemap\").setAll({\r\n                type: \"polygon\",\r\n                minWeightRatio: 0.005,\r\n                convergenceRatio: 0.005,\r\n                maxIterationCount: 100,\r\n                singleBranchOnly: true\r\n            });\r\n        }\r\n        {\r\n            const rule = r(\"Graphics\", [\"voronoitreemap\", \"node\", \"shape\"]);\r\n            rule.setAll({\r\n                strokeOpacity: 1,\r\n                strokeWidth: 1,\r\n                fillOpacity: 1\r\n            });\r\n            setColor(rule, \"stroke\", ic, \"background\");\r\n        }\r\n        {\r\n            r(\"Polygon\", [\"hierarchy\", \"node\", \"shape\", \"depth1\"]).setAll({\r\n                strokeWidth: 3\r\n            });\r\n        }\r\n        {\r\n            const rule = r(\"Label\", [\"voronoitreemap\"]);\r\n            rule.setAll({\r\n                centerY: p50,\r\n                centerX: p50,\r\n                paddingBottom: 1,\r\n                paddingTop: 1,\r\n                paddingLeft: 1,\r\n                paddingRight: 1,\r\n                populateText: true,\r\n                text: \"{category}\",\r\n                oversizedBehavior: \"fit\",\r\n                minScale: 0.4,\r\n                layer: 30\r\n            });\r\n            setColor(rule, \"fill\", ic, \"alternativeText\");\r\n        }\r\n    }\r\n}\r\n//# sourceMappingURL=HierarchyDefaultTheme.js.map","import { Theme } from \"../../core/Theme\";\r\nimport { percent, p100, p50 } from \"../../core/util/Percent\";\r\nimport { ColorSet } from \"../../core/util/ColorSet\";\r\nimport { setColor } from \"../../themes/DefaultTheme\";\r\n\r\nimport * as $ease from \"../../core/util/Ease\";\r\n\r\n\r\n/**\r\n * @ignore\r\n */\r\nexport class HierarchyDefaultTheme extends Theme {\r\n\tprotected setupDefaultRules() {\r\n\t\tsuper.setupDefaultRules();\r\n\r\n\t\tconst ic = this._root.interfaceColors;\r\n\t\tconst gridLayout = this._root.gridLayout;\r\n\t\tconst r = this.rule.bind(this);\r\n\r\n\t\t/**\r\n\t\t * ========================================================================\r\n\t\t * charts/hierarchy\r\n\t\t * ========================================================================\r\n\t\t */\r\n\r\n\t\tr(\"Hierarchy\").setAll({\r\n\t\t\tlegendLabelText: \"{category}\",\r\n\t\t\tlegendValueText: \"{sum.formatNumber('#.#')}\",\r\n\t\t\twidth: p100,\r\n\t\t\theight: p100,\r\n\t\t\tcolors: ColorSet.new(this._root, { step: 2 }),\r\n\t\t\tdownDepth: 1,\r\n\t\t\tinitialDepth: 5,\r\n\t\t\tsingleBranchOnly: true,\r\n\t\t\tmaskContent: true,\r\n\t\t\tanimationEasing: $ease.out($ease.cubic)\r\n\t\t});\r\n\r\n\t\tr(\"HierarchyNode\").setAll({\r\n\t\t\ttoggleKey: \"disabled\",\r\n\t\t\tsetStateOnChildren: true,\r\n\t\t\tposition: \"absolute\",\r\n\t\t\tisMeasured: false,\r\n\t\t\tcursorOverStyle: \"pointer\",\r\n\t\t\ttooltipText: \"{category}: {sum}\"\r\n\t\t});\r\n\r\n\t\tr(\"HierarchyNode\", [\"last\"]).setAll({\r\n\t\t\tcursorOverStyle: \"default\"\r\n\t\t});\r\n\r\n\t\t{\r\n\t\t\tconst rule = r(\"Label\", [\"hierarchy\", \"node\"]);\r\n\r\n\t\t\trule.setAll({\r\n\t\t\t\tcenterX: p50,\r\n\t\t\t\tcenterY: p50,\r\n\t\t\t\tposition: \"absolute\",\r\n\t\t\t\tpaddingBottom: 1,\r\n\t\t\t\tpaddingTop: 1,\r\n\t\t\t\tpaddingRight: 4,\r\n\t\t\t\tpaddingLeft: 4,\r\n\t\t\t\ttext: \"{category}\",\r\n\t\t\t\tpopulateText: true,\r\n\t\t\t\toversizedBehavior: \"fit\",\r\n\t\t\t\tminScale: 0.3\r\n\t\t\t});\r\n\r\n\t\t\tsetColor(rule, \"fill\", ic, \"alternativeText\");\r\n\t\t}\r\n\r\n\t\t{\r\n\t\t\tconst rule = r(\"HierarchyLink\");\r\n\r\n\t\t\trule.setAll({\r\n\t\t\t\tisMeasured: false,\r\n\t\t\t\tposition: \"absolute\",\r\n\t\t\t\tstrokeWidth: 1,\r\n\t\t\t\tstrokeOpacity: 1,\r\n\t\t\t\tstrength: 0.9,\r\n\t\t\t\tdistance: 1.1\r\n\t\t\t});\r\n\r\n\t\t\tsetColor(rule, \"stroke\", ic, \"grid\");\r\n\t\t}\r\n\r\n\t\tr(\"Circle\", [\"linkedhierarchy\", \"shape\"]).setAll({\r\n\t\t\tposition: \"absolute\",\r\n\t\t\tfillOpacity: 1,\r\n\t\t\tstrokeOpacity: 0,\r\n\t\t\tradius: 15,\r\n\t\t\ttooltipY: 0\r\n\t\t});\r\n\r\n\t\tr(\"Circle\", [\"linkedhierarchy\", \"shape\", \"outer\"]).setAll({\r\n\t\t\tposition: \"absolute\",\r\n\t\t\topacity: 1,\r\n\t\t\tfillOpacity: 0,\r\n\t\t\tstrokeDasharray: 0,\r\n\t\t\tstrokeOpacity: 1,\r\n\t\t\tradius: 15,\r\n\t\t\tscale: 1.1,\r\n\t\t\tinteractive: false\r\n\t\t})\r\n\r\n\t\tr(\"Circle\", [\"linkedhierarchy\", \"shape\", \"outer\"]).states.create(\"disabled\", { opacity: 1, scale: 1.1, strokeDasharray: 2 });\r\n\t\tr(\"Circle\", [\"linkedhierarchy\", \"shape\", \"outer\"]).states.create(\"hoverDisabled\", { scale: 1.2, opacity: 1, strokeDasharray: 2 });\r\n\t\tr(\"Circle\", [\"linkedhierarchy\", \"shape\", \"outer\"]).states.create(\"hover\", { scale: 1.05, strokeDasharray: 0 });\r\n\t\tr(\"Circle\", [\"linkedhierarchy\", \"shape\", \"outer\"]).states.create(\"hidden\", { opacity: 0, strokeDasharray: 0 });\r\n\r\n\r\n\t\t/**\r\n\t\t * ------------------------------------------------------------------------\r\n\t\t * charts/hierarchy: BreadcrumbBar\r\n\t\t * ------------------------------------------------------------------------\r\n\t\t */\r\n\r\n\t\tr(\"BreadcrumbBar\").setAll({\r\n\t\t\tpaddingLeft: 8,\r\n\t\t\tlayout: gridLayout\r\n\t\t});\r\n\r\n\t\t{\r\n\t\t\tconst rule = r(\"Label\", [\"breadcrumb\"]);\r\n\r\n\t\t\trule.setAll({\r\n\t\t\t\tpaddingRight: 4,\r\n\t\t\t\tpaddingLeft: 4,\r\n\t\t\t\tcursorOverStyle: \"pointer\",\r\n\t\t\t\tpopulateText: true,\r\n\t\t\t\ttext: \"{category}:\",\r\n\t\t\t});\r\n\r\n\t\t\tsetColor(rule, \"fill\", ic, \"primaryButton\");\r\n\t\t}\r\n\r\n\t\t{\r\n\t\t\tconst rule = r(\"Label\", [\"breadcrumb\"]).states.create(\"hover\", {});\r\n\t\t\tsetColor(rule, \"fill\", ic, \"primaryButtonHover\");\r\n\t\t}\r\n\r\n\t\t{\r\n\t\t\tconst rule = r(\"Label\", [\"breadcrumb\"]).states.create(\"down\", { stateAnimationDuration: 0 });\r\n\t\t\tsetColor(rule, \"fill\", ic, \"primaryButtonDown\");\r\n\t\t}\r\n\r\n\t\t{\r\n\t\t\tconst rule = r(\"Label\", [\"breadcrumb\", \"last\"]);\r\n\r\n\t\t\trule.setAll({\r\n\t\t\t\tpopulateText: true,\r\n\t\t\t\ttext: \"{category}\",\r\n\t\t\t\tfontWeight: \"bold\",\r\n\t\t\t\tcursorOverStyle: \"default\"\r\n\t\t\t});\r\n\r\n\t\t\tsetColor(rule, \"fill\", ic, \"primaryButton\");\r\n\t\t}\r\n\r\n\t\t{\r\n\t\t\tconst rule = r(\"RoundedRectangle\", [\"breadcrumb\", \"label\", \"background\"]);\r\n\r\n\t\t\trule.setAll({\r\n\t\t\t\tfillOpacity: 0,\r\n\t\t\t});\r\n\r\n\t\t\tsetColor(rule, \"fill\", ic, \"background\");\r\n\t\t}\r\n\r\n\r\n\t\t/**\r\n\t\t * ------------------------------------------------------------------------\r\n\t\t * charts/hierarchy: Partition\r\n\t\t * ------------------------------------------------------------------------\r\n\t\t */\r\n\r\n\t\tr(\"Partition\").setAll({\r\n\t\t\tdownDepth: 1,\r\n\t\t\tupDepth: 0,\r\n\t\t\tinitialDepth: 5\r\n\t\t});\r\n\r\n\t\tr(\"HierarchyNode\", [\"partition\"]).setAll({\r\n\t\t\tsetStateOnChildren: false\r\n\t\t});\r\n\r\n\t\tr(\"HierarchyNode\", [\"partition\"]).states.create(\"hidden\", {\r\n\t\t\topacity: 1,\r\n\t\t\tvisible: true\r\n\t\t});\r\n\r\n\t\t{\r\n\t\t\tconst rule = r(\"Label\", [\"partition\", \"node\"]);\r\n\r\n\t\t\trule.setAll({\r\n\t\t\t\tx: p50,\r\n\t\t\t\ty: p50,\r\n\t\t\t\tcenterY: p50,\r\n\t\t\t\tcenterX: p50,\r\n\t\t\t\tpaddingBottom: 1,\r\n\t\t\t\tpaddingTop: 1,\r\n\t\t\t\tpaddingLeft: 1,\r\n\t\t\t\tpaddingRight: 1,\r\n\t\t\t\trotation: 90,\r\n\t\t\t\tpopulateText: true,\r\n\t\t\t\ttext: \"{category}\",\r\n\t\t\t\toversizedBehavior: \"fit\",\r\n\t\t\t\tminScale: 0.4\r\n\t\t\t});\r\n\r\n\t\t\tsetColor(rule, \"fill\", ic, \"alternativeText\");\r\n\t\t}\r\n\r\n\t\tr(\"Label\", [\"horizontal\", \"partition\", \"node\"]).setAll({\r\n\t\t\trotation: 0\r\n\t\t});\r\n\r\n\t\t{\r\n\t\t\tconst rule = r(\"RoundedRectangle\", [\"partition\", \"node\", \"shape\"]);\r\n\r\n\t\t\trule.setAll({\r\n\t\t\t\tstrokeOpacity: 1,\r\n\t\t\t\tstrokeWidth: 1,\r\n\t\t\t\tcornerRadiusBR: 0,\r\n\t\t\t\tcornerRadiusTR: 0,\r\n\t\t\t\tcornerRadiusBL: 0,\r\n\t\t\t\tcornerRadiusTL: 0\r\n\t\t\t});\r\n\r\n\t\t\tsetColor(rule, \"stroke\", ic, \"background\");\r\n\t\t}\r\n\r\n\t\tr(\"RoundedRectangle\", [\"partition\", \"node\", \"shape\", \"last\"]).setAll({\r\n\t\t\tfillOpacity: 0.75\r\n\t\t});\r\n\r\n\r\n\t\t/**\r\n\t\t * ------------------------------------------------------------------------\r\n\t\t * charts/hierarchy: Sunburst\r\n\t\t * ------------------------------------------------------------------------\r\n\t\t */\r\n\r\n\t\tr(\"Sunburst\").setAll({\r\n\t\t\tsingleBranchOnly: true\r\n\t\t});\r\n\r\n\t\tr(\"HierarchyNode\", [\"sunburst\"]).setAll({\r\n\t\t\tsetStateOnChildren: false\r\n\t\t});\r\n\r\n\t\tr(\"HierarchyNode\", [\"sunburst\"]).states.create(\"hidden\", {\r\n\t\t\topacity: 0,\r\n\t\t\tvisible: false\r\n\t\t});\r\n\r\n\t\t{\r\n\t\t\tconst rule = r(\"Slice\", [\"sunburst\", \"node\", \"shape\"]);\r\n\r\n\t\t\trule.setAll({\r\n\t\t\t\tstrokeOpacity: 1,\r\n\t\t\t\tstrokeWidth: 1,\r\n\t\t\t\tcornerRadius: 0\r\n\t\t\t});\r\n\r\n\t\t\tsetColor(rule, \"stroke\", ic, \"background\");\r\n\t\t}\r\n\r\n\t\tr(\"Slice\", [\"sunburst\", \"node\", \"shape\", \"last\"]).setAll({\r\n\t\t\tfillOpacity: 0.75\r\n\t\t});\r\n\r\n\t\t{\r\n\t\t\tconst rule = r(\"RadialLabel\", [\"sunburst\", \"node\"]);\r\n\r\n\t\t\trule.setAll({\r\n\t\t\t\tx: 0,\r\n\t\t\t\ty: 0,\r\n\t\t\t\ttextType: \"radial\",\r\n\t\t\t\tpaddingBottom: 1,\r\n\t\t\t\tpaddingTop: 1,\r\n\t\t\t\tpaddingLeft: 1,\r\n\t\t\t\tpaddingRight: 1,\r\n\t\t\t\tcenterX: p50,\r\n\t\t\t\tpopulateText: true,\r\n\t\t\t\ttext: \"{category}\",\r\n\t\t\t\toversizedBehavior: \"fit\",\r\n\t\t\t\tminScale: 0.4,\r\n\t\t\t\tbaseRadius: p50,\r\n\t\t\t\trotation: 0\r\n\t\t\t});\r\n\r\n\t\t\tsetColor(rule, \"fill\", ic, \"alternativeText\");\r\n\t\t}\r\n\r\n\r\n\t\t/**\r\n\t\t * ------------------------------------------------------------------------\r\n\t\t * charts/hierarchy: ForceDirected\r\n\t\t * ------------------------------------------------------------------------\r\n\t\t */\r\n\r\n\t\tr(\"ForceDirected\").setAll({\r\n\t\t\tminRadius: percent(1),\r\n\t\t\tmaxRadius: percent(8),\r\n\t\t\tinitialFrames: 500,\r\n\t\t\tcenterStrength: 0.8,\r\n\t\t\tmanyBodyStrength: -14,\r\n\t\t\tvelocityDecay: 0.5,\r\n\t\t\tlinkWithStrength: 0.5,\r\n\t\t\tshowOnFrame: 10,\r\n\t\t\tsingleBranchOnly: false,\r\n\t\t\tupDepth: Infinity,\r\n\t\t\tdownDepth: 1,\r\n\t\t\tinitialDepth: 5,\r\n\t\t\ttopDepth: 0\r\n\t\t});\r\n\r\n\r\n\t\t/**\r\n\t\t * ------------------------------------------------------------------------\r\n\t\t * charts/hierarchy: Tree\r\n\t\t * ------------------------------------------------------------------------\r\n\t\t */\r\n\r\n\t\tr(\"Tree\").setAll({\r\n\t\t\torientation: \"vertical\",\r\n\t\t\tpaddingLeft: 20,\r\n\t\t\tpaddingRight: 20,\r\n\t\t\tpaddingTop: 20,\r\n\t\t\tpaddingBottom: 20,\r\n\t\t\tsingleBranchOnly: false,\r\n\t\t\tupDepth: Infinity,\r\n\t\t\tdownDepth: 1,\r\n\t\t\tinitialDepth: 5,\r\n\t\t\ttopDepth: 0\r\n\t\t});\r\n\r\n\r\n\t\t/**\r\n\t\t * ------------------------------------------------------------------------\r\n\t\t * charts/hierarchy: Pack\r\n\t\t * ------------------------------------------------------------------------\r\n\t\t */\r\n\r\n\t\tr(\"Pack\").setAll({\r\n\t\t\tpaddingLeft: 20,\r\n\t\t\tpaddingTop: 20,\r\n\t\t\tpaddingBottom: 20,\r\n\t\t\tpaddingRight: 20,\r\n\t\t\tnodePadding: 0\r\n\t\t});\r\n\r\n\t\t{\r\n\t\t\tconst rule = r(\"Label\", [\"pack\", \"node\"]);\r\n\r\n\t\t\trule.setAll({\r\n\t\t\t\tcenterY: p50,\r\n\t\t\t\tcenterX: p50,\r\n\t\t\t\tpaddingBottom: 1,\r\n\t\t\t\tpaddingTop: 1,\r\n\t\t\t\tpaddingLeft: 1,\r\n\t\t\t\tpaddingRight: 1,\r\n\t\t\t\tpopulateText: true,\r\n\t\t\t\ttext: \"{category}\",\r\n\t\t\t\toversizedBehavior: \"fit\",\r\n\t\t\t\tminScale: 0.4\r\n\t\t\t});\r\n\r\n\t\t\tsetColor(rule, \"fill\", ic, \"alternativeText\");\r\n\t\t}\r\n\r\n\t\t{\r\n\t\t\tconst rule = r(\"Circle\", [\"pack\", \"node\", \"shape\"]);\r\n\r\n\t\t\trule.setAll({\r\n\t\t\t\tstrokeOpacity: 0.5,\r\n\t\t\t\tfillOpacity: 0.8,\r\n\t\t\t\tstrokeWidth: 1,\r\n\t\t\t});\r\n\r\n\t\t\tsetColor(rule, \"stroke\", ic, \"background\");\r\n\t\t}\r\n\r\n\r\n\t\tr(\"LinkedHierarchyNode\").setAll({\r\n\t\t\tdraggable: true\r\n\t\t});\r\n\r\n\t\tr(\"LinkedHierarchyNode\").states.create(\"hidden\", { scale: 0, opacity: 0, visible: false });\r\n\r\n\r\n\t\t/**\r\n\t\t * ------------------------------------------------------------------------\r\n\t\t * charts/hierarchy: Treemap\r\n\t\t * ------------------------------------------------------------------------\r\n\t\t */\r\n\r\n\t\tr(\"Treemap\").setAll({\r\n\t\t\tupDepth: 0,\r\n\t\t\tlayoutAlgorithm: \"squarify\"\r\n\t\t});\r\n\r\n\t\t{\r\n\t\t\tconst rule = r(\"Label\", [\"treemap\", \"node\"]);\r\n\r\n\t\t\trule.setAll({\r\n\t\t\t\tx: p50,\r\n\t\t\t\ty: p50,\r\n\t\t\t\tcenterY: p50,\r\n\t\t\t\tcenterX: p50,\r\n\t\t\t\tpaddingBottom: 1,\r\n\t\t\t\tpaddingTop: 1,\r\n\t\t\t\tpaddingLeft: 1,\r\n\t\t\t\tpaddingRight: 1,\r\n\t\t\t\tpopulateText: true,\r\n\t\t\t\ttext: \"{category}\",\r\n\t\t\t\toversizedBehavior: \"fit\",\r\n\t\t\t\tminScale: 0.4\r\n\t\t\t});\r\n\r\n\t\t\tsetColor(rule, \"fill\", ic, \"alternativeText\");\r\n\t\t}\r\n\r\n\t\tr(\"HierarchyNode\", [\"treemap\", \"node\"]).setAll({\r\n\t\t\ttooltipY: percent(40),\r\n\t\t\tisMeasured: false,\r\n\t\t\tposition: \"absolute\"\r\n\t\t});\r\n\r\n\t\t{\r\n\t\t\tconst rule = r(\"RoundedRectangle\", [\"treemap\", \"node\", \"shape\"]);\r\n\r\n\t\t\trule.setAll({\r\n\t\t\t\tstrokeOpacity: 1,\r\n\t\t\t\tstrokeWidth: 1,\r\n\t\t\t\tcornerRadiusBR: 0,\r\n\t\t\t\tcornerRadiusTR: 0,\r\n\t\t\t\tcornerRadiusBL: 0,\r\n\t\t\t\tcornerRadiusTL: 0,\r\n\t\t\t\tfillOpacity: 1\r\n\t\t\t});\r\n\r\n\t\t\tsetColor(rule, \"stroke\", ic, \"background\");\r\n\t\t}\r\n\r\n\r\n\t\t/**\r\n\t\t * ------------------------------------------------------------------------\r\n\t\t * charts/hierarchy: Voronoi Treemap\r\n\t\t * ------------------------------------------------------------------------\r\n\t\t */\r\n\r\n\t\t{\r\n\t\t\tr(\"VoronoiTreemap\").setAll({\r\n\t\t\t\ttype: \"polygon\",\r\n\t\t\t\tminWeightRatio: 0.005,\r\n\t\t\t\tconvergenceRatio: 0.005,\r\n\t\t\t\tmaxIterationCount: 100,\r\n\t\t\t\tsingleBranchOnly: true\r\n\t\t\t})\r\n\t\t}\r\n\r\n\t\t{\r\n\t\t\tconst rule = r(\"Graphics\", [\"voronoitreemap\", \"node\", \"shape\"]);\r\n\r\n\t\t\trule.setAll({\r\n\t\t\t\tstrokeOpacity: 1,\r\n\t\t\t\tstrokeWidth: 1,\r\n\t\t\t\tfillOpacity: 1\r\n\t\t\t});\r\n\r\n\t\t\tsetColor(rule, \"stroke\", ic, \"background\");\r\n\t\t}\r\n\r\n\t\t{\r\n\t\t\tr(\"Polygon\", [\"hierarchy\", \"node\", \"shape\", \"depth1\"]).setAll({\r\n\t\t\t\tstrokeWidth: 3\r\n\t\t\t});\r\n\t\t}\r\n\r\n\t\t{\r\n\t\t\tconst rule = r(\"Label\", [\"voronoitreemap\"]);\r\n\r\n\t\t\trule.setAll({\r\n\t\t\t\tcenterY: p50,\r\n\t\t\t\tcenterX: p50,\r\n\t\t\t\tpaddingBottom: 1,\r\n\t\t\t\tpaddingTop: 1,\r\n\t\t\t\tpaddingLeft: 1,\r\n\t\t\t\tpaddingRight: 1,\r\n\t\t\t\tpopulateText: true,\r\n\t\t\t\ttext: \"{category}\",\r\n\t\t\t\toversizedBehavior: \"fit\",\r\n\t\t\t\tminScale: 0.4,\r\n\t\t\t\tlayer: 30\r\n\t\t\t});\r\n\r\n\t\t\tsetColor(rule, \"fill\", ic, \"alternativeText\");\r\n\t\t}\r\n\r\n\t}\r\n}\r\n","import { Entity } from \"./Entity\";\r\nimport { Color } from \"./Color\";\r\n/**\r\n * An object which holds list of colors and can generate new ones.\r\n *\r\n * @see {@link https://www.amcharts.com/docs/v5/concepts/colors-gradients-and-patterns/#Color_sets} for more info\r\n */\r\nexport class ColorSet extends Entity {\r\n    //protected _currentPass: number = 0;\r\n    _afterNew() {\r\n        // Applying themes because color set will not have parent\r\n        super._afterNewApplyThemes();\r\n        this._dirty[\"colors\"] = false;\r\n    }\r\n    _beforeChanged() {\r\n        if (this.isDirty(\"colors\")) {\r\n            this.reset();\r\n        }\r\n    }\r\n    /**\r\n     * @ignore\r\n     */\r\n    generateColors() {\r\n        this.setPrivate(\"currentPass\", this.getPrivate(\"currentPass\", 0) + 1);\r\n        const pass = this.getPrivate(\"currentPass\");\r\n        const colors = this.get(\"colors\", [this.get(\"baseColor\", Color.fromHex(0xff0000))]);\r\n        if (!this.getPrivate(\"numColors\")) {\r\n            this.setPrivate(\"numColors\", colors.length);\r\n        }\r\n        //const len = colors.length;\r\n        const len = this.getPrivate(\"numColors\");\r\n        //const start = len - this.getPrivate(\"numColors\")!;\r\n        const start = 0;\r\n        const passOptions = this.get(\"passOptions\");\r\n        const reuse = this.get(\"reuse\");\r\n        for (let i = start; i < len; i++) {\r\n            if (reuse) {\r\n                colors.push(colors[i]);\r\n            }\r\n            else {\r\n                const hsl = colors[i].toHSL();\r\n                let h = hsl.h + (passOptions.hue || 0) * pass;\r\n                while (h > 1)\r\n                    h -= 1;\r\n                let s = hsl.s + (passOptions.saturation || 0) * pass;\r\n                //if (s > 1) s -= Math.floor(s);\r\n                if (s > 1)\r\n                    s = 1;\r\n                if (s < 0)\r\n                    s = 0;\r\n                let l = hsl.l + (passOptions.lightness || 0) * pass;\r\n                //if (l > 1) l -= Math.floor(l);\r\n                while (l > 1)\r\n                    l -= 1;\r\n                colors.push(Color.fromHSL(h, s, l));\r\n            }\r\n        }\r\n    }\r\n    /**\r\n     * Returns a [[Color]] at specific index.\r\n     *\r\n     * If there's no color at this index, a new color is generated.\r\n     *\r\n     * @param   index  Index\r\n     * @return         Color\r\n     */\r\n    getIndex(index) {\r\n        const colors = this.get(\"colors\", []);\r\n        const saturation = this.get(\"saturation\");\r\n        if (index >= colors.length) {\r\n            this.generateColors();\r\n            return this.getIndex(index);\r\n        }\r\n        return saturation != null ? Color.saturate(colors[index], saturation) : colors[index];\r\n    }\r\n    /**\r\n     * Returns next [[Color]] in the list.\r\n     *\r\n     * If the list is out of colors, new ones are generated dynamically.\r\n     */\r\n    next() {\r\n        let currentStep = this.getPrivate(\"currentStep\", this.get(\"startIndex\", 0));\r\n        this.setPrivate(\"currentStep\", currentStep + this.get(\"step\", 1));\r\n        return this.getIndex(currentStep);\r\n    }\r\n    /**\r\n     * Resets counter to the start of the list, so the next call for `next()` will\r\n     * return the first color.\r\n     */\r\n    reset() {\r\n        this.setPrivate(\"currentStep\", this.get(\"startIndex\", 0));\r\n        this.setPrivate(\"currentPass\", 0);\r\n    }\r\n}\r\nObject.defineProperty(ColorSet, \"className\", {\r\n    enumerable: true,\r\n    configurable: true,\r\n    writable: true,\r\n    value: \"ColorSet\"\r\n});\r\nObject.defineProperty(ColorSet, \"classNames\", {\r\n    enumerable: true,\r\n    configurable: true,\r\n    writable: true,\r\n    value: Entity.classNames.concat([ColorSet.className])\r\n});\r\n//# sourceMappingURL=ColorSet.js.map","import { Entity, IEntitySettings, IEntityPrivate } from \"./Entity\";\nimport { Color } from \"./Color\";\n\n\nexport interface IColorSetSettings extends IEntitySettings {\n\n\t/**\n\t * List of colors in the set.\n\t */\n\tcolors?: Color[];\n\n\t/**\n\t * A step size when using `next()`.\n\t *\n\t * E.g. setting to `2` will make it return every second color in the list.\n\t *\n\t * @default 1\n\t */\n\tstep?: number;\n\n\t/**\n\t * Start iterating colors from specific index.\n\t */\n\tstartIndex?: number;\n\n\t/**\n\t * If set to `true`, color set will reuse existing colors from the list\n\t * inestead of generating new ones.\n\t *\n\t * @default false\n\t */\n\treuse?: boolean;\n\n\t/**\n\t * A base color to generate new colors from if `colors` is not specified.\n\t * @type {[type]}\n\t */\n\tbaseColor?: Color;\n\n\t/**\n\t * A set of tranformation to apply to base list of colors when the set runs\n\t * out of colors and generates additional ones.\n\t */\n\tpassOptions?: IColorSetStepOptions;\n\n\t/**\n\t * If set, each returned color will be applied saturation.\n\t */\n\tsaturation?: number;\n\n\t// count?: number;\n}\n\nexport interface IColorSetPrivate extends IEntityPrivate {\n\n\tcurrentStep?: number;\n\tcurrentPass?: number;\n\n\t/**\n\t * @ignore\n\t */\n\tnumColors?: number;\n\n}\n\nexport interface IColorSetStepOptions {\n\n\t/**\n\t * Value to add to \"hue\".\n\t */\n\thue?: number;\n\n\t/**\n\t * Value to add to \"saturation\".\n\t */\n\tsaturation?: number;\n\n\t/**\n\t * Value to add to \"lightness\".\n\t */\n\tlightness?: number;\n\n}\n\n\n/**\n * An object which holds list of colors and can generate new ones.\n *\n * @see {@link https://www.amcharts.com/docs/v5/concepts/colors-gradients-and-patterns/#Color_sets} for more info\n */\nexport class ColorSet extends Entity {\n\tpublic static className: string = \"ColorSet\";\n\tpublic static classNames: Array<string> = Entity.classNames.concat([ColorSet.className]);\n\n\tdeclare public _settings: IColorSetSettings;\n\tdeclare public _privateSettings: IColorSetPrivate;\n\n\t//protected _currentPass: number = 0;\n\n\tprotected _afterNew() {\n\t\t// Applying themes because color set will not have parent\n\t\tsuper._afterNewApplyThemes();\n\t\tthis._dirty[\"colors\"] = false;\n\t}\n\n\tpublic _beforeChanged(): void {\n\t\tif (this.isDirty(\"colors\")) {\n\t\t\tthis.reset();\n\t\t}\n\t}\n\n\t/**\n\t * @ignore\n\t */\n\tpublic generateColors(): void {\n\t\tthis.setPrivate(\"currentPass\", this.getPrivate(\"currentPass\", 0) + 1)\n\t\tconst pass = this.getPrivate(\"currentPass\");\n\t\tconst colors = this.get(\"colors\", [this.get(\"baseColor\", Color.fromHex(0xff0000))]);\n\t\tif (!this.getPrivate(\"numColors\")) {\n\t\t\tthis.setPrivate(\"numColors\", colors.length);\n\t\t}\n\t\t//const len = colors.length;\n\t\tconst len = this.getPrivate(\"numColors\")!;\n\t\t//const start = len - this.getPrivate(\"numColors\")!;\n\t\tconst start = 0;\n\t\tconst passOptions = this.get(\"passOptions\")!;\n\t\tconst reuse = this.get(\"reuse\");\n\t\tfor (let i = start; i < len; i++) {\n\t\t\tif (reuse) {\n\t\t\t\tcolors.push(colors[i])\n\t\t\t}\n\t\t\telse {\n\t\t\t\tconst hsl = colors[i]!.toHSL();\n\t\t\t\tlet h = hsl.h + (passOptions.hue || 0) * pass!;\n\t\t\t\twhile (h > 1) h -= 1;\n\n\t\t\t\tlet s = hsl.s + (passOptions.saturation || 0) * pass!;\n\t\t\t\t//if (s > 1) s -= Math.floor(s);\n\t\t\t\tif (s > 1) s = 1;\n\t\t\t\tif (s < 0) s = 0;\n\n\t\t\t\tlet l = hsl.l + (passOptions.lightness || 0) * pass!;\n\t\t\t\t//if (l > 1) l -= Math.floor(l);\n\t\t\t\twhile (l > 1) l -= 1;\n\t\t\t\tcolors.push(Color.fromHSL(h, s, l));\n\t\t\t}\n\t\t}\n\t}\n\n\t/**\n\t * Returns a [[Color]] at specific index.\n\t *\n\t * If there's no color at this index, a new color is generated.\n\t *\n\t * @param   index  Index\n\t * @return         Color\n\t */\n\tpublic getIndex(index: number): Color {\n\t\tconst colors = this.get(\"colors\", []);\n\t\tconst saturation = this.get(\"saturation\");\n\t\tif (index >= colors.length) {\n\t\t\tthis.generateColors();\n\t\t\treturn this.getIndex(index);\n\t\t}\n\n\t\treturn saturation != null ? Color.saturate(colors[index], saturation!) : colors[index];\n\t}\n\n\t/**\n\t * Returns next [[Color]] in the list.\n\t *\n\t * If the list is out of colors, new ones are generated dynamically.\n\t */\n\tpublic next() {\n\t\tlet currentStep = this.getPrivate(\"currentStep\", this.get(\"startIndex\", 0));\n\t\tthis.setPrivate(\"currentStep\", currentStep + this.get(\"step\", 1));\n\t\treturn this.getIndex(currentStep);\n\t}\n\n\t/**\n\t * Resets counter to the start of the list, so the next call for `next()` will\n\t * return the first color.\n\t */\n\tpublic reset() {\n\t\tthis.setPrivate(\"currentStep\", this.get(\"startIndex\", 0));\n\t\tthis.setPrivate(\"currentPass\", 0);\n\t}\n}\n","import { __awaiter } from \"tslib\";\r\nimport { Component } from \"../../core/render/Component\";\r\nimport { List } from \"../../core/util/List\";\r\nimport { Color } from \"../../core/util/Color\";\r\nimport { percentInterpolate } from \"../../core/util/Animation\";\r\nimport { Percent } from \"../../core/util/Percent\";\r\nimport { p100 } from \"../../core/util/Percent\";\r\nimport { Container } from \"../../core/render/Container\";\r\nimport { Label } from \"../../core/render/Label\";\r\n//import { Animations } from \"../../core/util/Animation\";\r\nimport * as $array from \"../../core/util/Array\";\r\nimport * as $type from \"../../core/util/Type\";\r\nimport * as $time from \"../../core/util/Time\";\r\n/**\r\n * A base class for all series.\r\n */\r\nexport class Series extends Component {\r\n    constructor() {\r\n        super(...arguments);\r\n        Object.defineProperty(this, \"_aggregatesCalculated\", {\r\n            enumerable: true,\r\n            configurable: true,\r\n            writable: true,\r\n            value: false\r\n        });\r\n        Object.defineProperty(this, \"_selectionAggregatesCalculated\", {\r\n            enumerable: true,\r\n            configurable: true,\r\n            writable: true,\r\n            value: false\r\n        });\r\n        Object.defineProperty(this, \"_dataProcessed\", {\r\n            enumerable: true,\r\n            configurable: true,\r\n            writable: true,\r\n            value: false\r\n        });\r\n        Object.defineProperty(this, \"_psi\", {\r\n            enumerable: true,\r\n            configurable: true,\r\n            writable: true,\r\n            value: void 0\r\n        });\r\n        Object.defineProperty(this, \"_pei\", {\r\n            enumerable: true,\r\n            configurable: true,\r\n            writable: true,\r\n            value: void 0\r\n        });\r\n        /**\r\n         * A chart series belongs to.\r\n         */\r\n        Object.defineProperty(this, \"chart\", {\r\n            enumerable: true,\r\n            configurable: true,\r\n            writable: true,\r\n            value: void 0\r\n        });\r\n        /**\r\n         * List of bullets to use for the series.\r\n         *\r\n         * @see {@link https://www.amcharts.com/docs/v5/concepts/common-elements/bullets/} for more info\r\n         */\r\n        Object.defineProperty(this, \"bullets\", {\r\n            enumerable: true,\r\n            configurable: true,\r\n            writable: true,\r\n            value: new List()\r\n        });\r\n        /**\r\n         * A [[Container]] series' bullets are stored in.\r\n         *\r\n         * @default Container.new()\r\n         */\r\n        Object.defineProperty(this, \"bulletsContainer\", {\r\n            enumerable: true,\r\n            configurable: true,\r\n            writable: true,\r\n            value: Container.new(this._root, { width: p100, height: p100, position: \"absolute\" })\r\n        });\r\n    }\r\n    _afterNew() {\r\n        this.valueFields.push(\"value\", \"customValue\");\r\n        super._afterNew();\r\n        this.setPrivate(\"customData\", {});\r\n        this._disposers.push(this.bullets.events.onAll((change) => {\r\n            if (change.type === \"clear\") {\r\n                this._handleBullets(this.dataItems);\r\n            }\r\n            else if (change.type === \"push\") {\r\n                this._handleBullets(this.dataItems);\r\n            }\r\n            else if (change.type === \"setIndex\") {\r\n                this._handleBullets(this.dataItems);\r\n            }\r\n            else if (change.type === \"insertIndex\") {\r\n                this._handleBullets(this.dataItems);\r\n            }\r\n            else if (change.type === \"removeIndex\") {\r\n                this._handleBullets(this.dataItems);\r\n            }\r\n            else if (change.type === \"moveIndex\") {\r\n                this._handleBullets(this.dataItems);\r\n            }\r\n            else {\r\n                throw new Error(\"Unknown IListEvent type\");\r\n            }\r\n        }));\r\n    }\r\n    _dispose() {\r\n        this.bulletsContainer.dispose(); // can be in a different parent\r\n        super._dispose();\r\n    }\r\n    startIndex() {\r\n        let len = this.dataItems.length;\r\n        return Math.min(this.getPrivate(\"startIndex\", 0), len);\r\n    }\r\n    endIndex() {\r\n        let len = this.dataItems.length;\r\n        return Math.min(this.getPrivate(\"endIndex\", len), len);\r\n    }\r\n    _handleBullets(dataItems) {\r\n        $array.each(dataItems, (dataItem) => {\r\n            const bullets = dataItem.bullets;\r\n            if (bullets) {\r\n                $array.each(bullets, (bullet) => {\r\n                    bullet.dispose();\r\n                });\r\n                dataItem.bullets = undefined;\r\n            }\r\n        });\r\n        this.markDirtyValues();\r\n    }\r\n    /**\r\n     * Looks up and returns a data item by its ID.\r\n     *\r\n     * @param   id  ID\r\n     * @return      Data item\r\n     */\r\n    getDataItemById(id) {\r\n        return $array.find(this.dataItems, (dataItem) => {\r\n            return dataItem.get(\"id\") == id;\r\n        });\r\n    }\r\n    _makeBullets(dataItem) {\r\n        if (this._shouldMakeBullet(dataItem)) {\r\n            dataItem.bullets = [];\r\n            this.bullets.each((bulletFunction) => {\r\n                this._makeBullet(dataItem, bulletFunction);\r\n            });\r\n        }\r\n    }\r\n    _shouldMakeBullet(_dataItem) {\r\n        return true;\r\n    }\r\n    _makeBullet(dataItem, bulletFunction, index) {\r\n        const bullet = bulletFunction(this._root, this, dataItem);\r\n        if (bullet) {\r\n            bullet._index = index;\r\n            this._makeBulletReal(dataItem, bullet);\r\n        }\r\n        return bullet;\r\n    }\r\n    _makeBulletReal(dataItem, bullet) {\r\n        let sprite = bullet.get(\"sprite\");\r\n        if (sprite) {\r\n            sprite._setDataItem(dataItem);\r\n            sprite.setRaw(\"position\", \"absolute\");\r\n            this.bulletsContainer.children.push(sprite);\r\n        }\r\n        bullet.series = this;\r\n        dataItem.bullets.push(bullet);\r\n    }\r\n    /**\r\n     * Adds bullet directly to a data item.\r\n     *\r\n     * Please note: method accepts [[Bullet]] instance as a paramter, not a\r\n     * reference to a function.\r\n     *\r\n     * You should add Bullet instance, not a method like you do it on series.\r\n     *\r\n     * @see {@link https://www.amcharts.com/docs/v5/concepts/common-elements/bullets/#Adding_directly_to_data_item} for more info\r\n     * @since 5.6.0\r\n     *\r\n     * @param  dataItem  Target data item\r\n     * @param  bullet    Bullet instance\r\n     */\r\n    addBullet(dataItem, bullet) {\r\n        if (!dataItem.bullets) {\r\n            dataItem.bullets = [];\r\n        }\r\n        if (bullet) {\r\n            this._makeBulletReal(dataItem, bullet);\r\n        }\r\n    }\r\n    _clearDirty() {\r\n        super._clearDirty();\r\n        this._aggregatesCalculated = false;\r\n        this._selectionAggregatesCalculated = false;\r\n    }\r\n    _prepareChildren() {\r\n        super._prepareChildren();\r\n        let startIndex = this.startIndex();\r\n        let endIndex = this.endIndex();\r\n        if (this.isDirty(\"name\")) {\r\n            this.updateLegendValue();\r\n        }\r\n        if (this.isDirty(\"heatRules\")) {\r\n            this._valuesDirty = true;\r\n        }\r\n        if (this.isPrivateDirty(\"baseValueSeries\")) {\r\n            const baseValueSeries = this.getPrivate(\"baseValueSeries\");\r\n            if (baseValueSeries) {\r\n                this._disposers.push(baseValueSeries.onPrivate(\"startIndex\", () => {\r\n                    this.markDirtyValues();\r\n                }));\r\n            }\r\n        }\r\n        const calculateAggregates = this.get(\"calculateAggregates\");\r\n        if (calculateAggregates) {\r\n            if (this._valuesDirty && !this._dataProcessed) {\r\n                if (!this._aggregatesCalculated) {\r\n                    this._calculateAggregates(0, this.dataItems.length);\r\n                    this._aggregatesCalculated = true;\r\n                    if (startIndex != 0) {\r\n                        this._psi = undefined;\r\n                    }\r\n                }\r\n            }\r\n            if ((this._psi != startIndex || this._pei != endIndex || this.isPrivateDirty(\"adjustedStartIndex\")) && !this._selectionAggregatesCalculated) {\r\n                if (startIndex === 0 && endIndex === this.dataItems.length && this._aggregatesCalculated) {\r\n                    // void\r\n                }\r\n                else {\r\n                    this._calculateAggregates(startIndex, endIndex);\r\n                }\r\n                this._selectionAggregatesCalculated = true;\r\n            }\r\n        }\r\n        if (this.isDirty(\"tooltip\")) {\r\n            let tooltip = this.get(\"tooltip\");\r\n            if (tooltip) {\r\n                tooltip.hide(0);\r\n                tooltip.set(\"tooltipTarget\", this);\r\n            }\r\n        }\r\n        if (this.isDirty(\"fill\") || this.isDirty(\"stroke\")) {\r\n            let markerRectangle;\r\n            const legendDataItem = this.get(\"legendDataItem\");\r\n            if (legendDataItem) {\r\n                markerRectangle = legendDataItem.get(\"markerRectangle\");\r\n                if (markerRectangle) {\r\n                    if (this.isVisible()) {\r\n                        if (this.isDirty(\"stroke\")) {\r\n                            let stroke = this.get(\"stroke\");\r\n                            markerRectangle.set(\"stroke\", stroke);\r\n                        }\r\n                        if (this.isDirty(\"fill\")) {\r\n                            let fill = this.get(\"fill\");\r\n                            markerRectangle.set(\"fill\", fill);\r\n                        }\r\n                    }\r\n                }\r\n            }\r\n            this.updateLegendMarker(undefined);\r\n        }\r\n        if (this.bullets.length > 0) {\r\n            let startIndex = this.startIndex();\r\n            let endIndex = this.endIndex();\r\n            if (endIndex < this.dataItems.length) {\r\n                endIndex++;\r\n            }\r\n            for (let i = startIndex; i < endIndex; i++) {\r\n                let dataItem = this.dataItems[i];\r\n                if (!dataItem.bullets) {\r\n                    this._makeBullets(dataItem);\r\n                }\r\n            }\r\n        }\r\n    }\r\n    /**\r\n     * @ignore\r\n     */\r\n    _adjustStartIndex(index) {\r\n        return index;\r\n    }\r\n    _calculateAggregates(startIndex, endIndex) {\r\n        let fields = this._valueFields;\r\n        if (!fields) {\r\n            throw new Error(\"No value fields are set for the series.\");\r\n        }\r\n        const sum = {};\r\n        const absSum = {};\r\n        const count = {};\r\n        const low = {};\r\n        const high = {};\r\n        const open = {};\r\n        const close = {};\r\n        const average = {};\r\n        const previous = {};\r\n        $array.each(fields, (key) => {\r\n            sum[key] = 0;\r\n            absSum[key] = 0;\r\n            count[key] = 0;\r\n        });\r\n        $array.each(fields, (key) => {\r\n            let change = key + \"Change\";\r\n            let changePercent = key + \"ChangePercent\";\r\n            let changePrevious = key + \"ChangePrevious\";\r\n            let changePreviousPercent = key + \"ChangePreviousPercent\";\r\n            let changeSelection = key + \"ChangeSelection\";\r\n            let changeSelectionPercent = key + \"ChangeSelectionPercent\";\r\n            let openKey = \"valueY\";\r\n            if (key == \"valueX\" || key == \"openValueX\" || key == \"lowValueX\" || key == \"highValueX\") {\r\n                openKey = \"valueX\";\r\n            }\r\n            const baseValueSeries = this.getPrivate(\"baseValueSeries\");\r\n            const adjustedStartIndex = this.getPrivate(\"adjustedStartIndex\", startIndex);\r\n            for (let i = adjustedStartIndex; i < endIndex; i++) {\r\n                const dataItem = this.dataItems[i];\r\n                if (dataItem) {\r\n                    let value = dataItem.get(key);\r\n                    if (value != null) {\r\n                        count[key]++;\r\n                        sum[key] += value;\r\n                        absSum[key] += Math.abs(value);\r\n                        average[key] = sum[key] / count[key];\r\n                        if (low[key] > value || low[key] == null) {\r\n                            low[key] = value;\r\n                        }\r\n                        if (high[key] < value || high[key] == null) {\r\n                            high[key] = value;\r\n                        }\r\n                        close[key] = value;\r\n                        if (open[key] == null) {\r\n                            open[key] = value;\r\n                            previous[key] = value;\r\n                            if (baseValueSeries) {\r\n                                open[openKey] = baseValueSeries._getBase(openKey);\r\n                            }\r\n                        }\r\n                        if (startIndex === 0) {\r\n                            dataItem.setRaw((change), value - open[openKey]);\r\n                            dataItem.setRaw((changePercent), (value - open[openKey]) / open[openKey] * 100);\r\n                        }\r\n                        dataItem.setRaw((changePrevious), value - previous[openKey]);\r\n                        dataItem.setRaw((changePreviousPercent), (value - previous[openKey]) / previous[openKey] * 100);\r\n                        dataItem.setRaw((changeSelection), value - open[openKey]);\r\n                        dataItem.setRaw((changeSelectionPercent), (value - open[openKey]) / open[openKey] * 100);\r\n                        previous[key] = value;\r\n                    }\r\n                }\r\n            }\r\n            if (endIndex < this.dataItems.length - 1) {\r\n                const dataItem = this.dataItems[endIndex];\r\n                if (dataItem) {\r\n                    let value = dataItem.get(key);\r\n                    dataItem.setRaw((changePrevious), value - previous[openKey]);\r\n                    dataItem.setRaw((changePreviousPercent), (value - previous[openKey]) / previous[openKey] * 100);\r\n                    dataItem.setRaw((changeSelection), value - open[openKey]);\r\n                    dataItem.setRaw((changeSelectionPercent), (value - open[openKey]) / open[openKey] * 100);\r\n                }\r\n            }\r\n            if (startIndex > 0) {\r\n                startIndex--;\r\n            }\r\n            delete previous[key];\r\n            for (let i = startIndex; i < adjustedStartIndex; i++) {\r\n                const dataItem = this.dataItems[i];\r\n                if (dataItem) {\r\n                    let value = dataItem.get(key);\r\n                    if (previous[key] == null) {\r\n                        previous[key] = value;\r\n                    }\r\n                    if (value != null) {\r\n                        dataItem.setRaw((changePrevious), value - previous[openKey]);\r\n                        dataItem.setRaw((changePreviousPercent), (value - previous[openKey]) / previous[openKey] * 100);\r\n                        dataItem.setRaw((changeSelection), value - open[openKey]);\r\n                        dataItem.setRaw((changeSelectionPercent), (value - open[openKey]) / open[openKey] * 100);\r\n                        previous[key] = value;\r\n                    }\r\n                }\r\n            }\r\n        });\r\n        $array.each(fields, (key) => {\r\n            this.setPrivate((key + \"AverageSelection\"), average[key]);\r\n            this.setPrivate((key + \"CountSelection\"), count[key]);\r\n            this.setPrivate((key + \"SumSelection\"), sum[key]);\r\n            this.setPrivate((key + \"AbsoluteSumSelection\"), absSum[key]);\r\n            this.setPrivate((key + \"LowSelection\"), low[key]);\r\n            this.setPrivate((key + \"HighSelection\"), high[key]);\r\n            this.setPrivate((key + \"OpenSelection\"), open[key]);\r\n            this.setPrivate((key + \"CloseSelection\"), close[key]);\r\n        });\r\n        if (startIndex === 0 && endIndex === this.dataItems.length) {\r\n            $array.each(fields, (key) => {\r\n                this.setPrivate((key + \"Average\"), average[key]);\r\n                this.setPrivate((key + \"Count\"), count[key]);\r\n                this.setPrivate((key + \"Sum\"), sum[key]);\r\n                this.setPrivate((key + \"AbsoluteSum\"), absSum[key]);\r\n                this.setPrivate((key + \"Low\"), low[key]);\r\n                this.setPrivate((key + \"High\"), high[key]);\r\n                this.setPrivate((key + \"Open\"), open[key]);\r\n                this.setPrivate((key + \"Close\"), close[key]);\r\n            });\r\n        }\r\n    }\r\n    _updateChildren() {\r\n        super._updateChildren();\r\n        this._psi = this.startIndex();\r\n        this._pei = this.endIndex();\r\n        if (this.isDirty(\"visible\")) {\r\n            this.bulletsContainer.set(\"visible\", this.get(\"visible\"));\r\n        }\r\n        // Apply heat rules\r\n        const rules = this.get(\"heatRules\");\r\n        if (this._valuesDirty && rules && rules.length > 0) {\r\n            $array.each(rules, (rule) => {\r\n                const minValue = rule.minValue || this.getPrivate((rule.dataField + \"Low\")) || 0;\r\n                const maxValue = rule.maxValue || this.getPrivate((rule.dataField + \"High\")) || 0;\r\n                $array.each(rule.target._entities, (target) => {\r\n                    const value = target.dataItem.get(rule.dataField);\r\n                    if (!$type.isNumber(value)) {\r\n                        if (rule.neutral) {\r\n                            target.set(rule.key, rule.neutral);\r\n                        }\r\n                        const states = target.states;\r\n                        if (states) {\r\n                            const defaultState = states.lookup(\"default\");\r\n                            if (defaultState && rule.neutral) {\r\n                                defaultState.set(rule.key, rule.neutral);\r\n                            }\r\n                        }\r\n                        if (!rule.customFunction) {\r\n                            return;\r\n                        }\r\n                    }\r\n                    if (rule.customFunction) {\r\n                        rule.customFunction.call(this, target, minValue, maxValue, value);\r\n                    }\r\n                    else {\r\n                        let percent;\r\n                        if (rule.logarithmic) {\r\n                            percent = (Math.log(value) * Math.LOG10E - Math.log(minValue) * Math.LOG10E) / ((Math.log(maxValue) * Math.LOG10E - Math.log(minValue) * Math.LOG10E));\r\n                        }\r\n                        else {\r\n                            percent = (value - minValue) / (maxValue - minValue);\r\n                        }\r\n                        if ($type.isNumber(value) && (!$type.isNumber(percent) || Math.abs(percent) == Infinity)) {\r\n                            percent = 0.5;\r\n                        }\r\n                        // fixes problems if all values are the same\r\n                        let propertyValue;\r\n                        if ($type.isNumber(rule.min)) {\r\n                            propertyValue = rule.min + (rule.max - rule.min) * percent;\r\n                        }\r\n                        else if (rule.min instanceof Color) {\r\n                            propertyValue = Color.interpolate(percent, rule.min, rule.max);\r\n                        }\r\n                        else if (rule.min instanceof Percent) {\r\n                            propertyValue = percentInterpolate(percent, rule.min, rule.max);\r\n                        }\r\n                        target.set(rule.key, propertyValue);\r\n                        const states = target.states;\r\n                        if (states) {\r\n                            const defaultState = states.lookup(\"default\");\r\n                            if (defaultState) {\r\n                                defaultState.set(rule.key, propertyValue);\r\n                            }\r\n                        }\r\n                    }\r\n                });\r\n            });\r\n        }\r\n        if (this.get(\"visible\")) {\r\n            let count = this.dataItems.length;\r\n            let startIndex = this.startIndex();\r\n            let endIndex = this.endIndex();\r\n            if (endIndex < count) {\r\n                endIndex++;\r\n            }\r\n            if (startIndex > 0) {\r\n                startIndex--;\r\n            }\r\n            for (let i = 0; i < startIndex; i++) {\r\n                this._hideBullets(this.dataItems[i]);\r\n            }\r\n            for (let i = startIndex; i < endIndex; i++) {\r\n                this._positionBullets(this.dataItems[i]);\r\n            }\r\n            for (let i = endIndex; i < count; i++) {\r\n                this._hideBullets(this.dataItems[i]);\r\n            }\r\n        }\r\n    }\r\n    _positionBullets(dataItem) {\r\n        if (dataItem.bullets) {\r\n            $array.each(dataItem.bullets, (bullet) => {\r\n                this._positionBullet(bullet);\r\n                const sprite = bullet.get(\"sprite\");\r\n                if (bullet.get(\"dynamic\")) {\r\n                    if (sprite) {\r\n                        sprite._markDirtyKey(\"fill\");\r\n                        sprite.markDirtySize();\r\n                    }\r\n                    if (sprite instanceof Container) {\r\n                        sprite.walkChildren((child) => {\r\n                            child._markDirtyKey(\"fill\");\r\n                            child.markDirtySize();\r\n                            if (child instanceof Label) {\r\n                                child.text.markDirtyText();\r\n                            }\r\n                        });\r\n                    }\r\n                }\r\n                if (sprite instanceof Label && sprite.get(\"populateText\")) {\r\n                    sprite.text.markDirtyText();\r\n                }\r\n            });\r\n        }\r\n    }\r\n    _hideBullets(dataItem) {\r\n        if (dataItem.bullets) {\r\n            $array.each(dataItem.bullets, (bullet) => {\r\n                let sprite = bullet.get(\"sprite\");\r\n                if (sprite) {\r\n                    sprite.setPrivate(\"visible\", false);\r\n                }\r\n            });\r\n        }\r\n    }\r\n    _positionBullet(_bullet) {\r\n    }\r\n    _placeBulletsContainer(chart) {\r\n        chart.bulletsContainer.children.moveValue(this.bulletsContainer);\r\n    }\r\n    _removeBulletsContainer() {\r\n        const bulletsContainer = this.bulletsContainer;\r\n        if (bulletsContainer.parent) {\r\n            bulletsContainer.parent.children.removeValue(bulletsContainer);\r\n        }\r\n    }\r\n    /**\r\n     * @ignore\r\n     */\r\n    disposeDataItem(dataItem) {\r\n        //super.disposeDataItem(dataItem); // does nothing\r\n        const bullets = dataItem.bullets;\r\n        if (bullets) {\r\n            $array.each(bullets, (bullet) => {\r\n                bullet.dispose();\r\n            });\r\n        }\r\n    }\r\n    _getItemReaderLabel() {\r\n        return \"\";\r\n    }\r\n    /**\r\n     * Shows series's data item.\r\n     *\r\n     * @param   dataItem  Data item\r\n     * @param   duration  Animation duration in milliseconds\r\n     * @return            Promise\r\n     */\r\n    showDataItem(dataItem, duration) {\r\n        const _super = Object.create(null, {\r\n            showDataItem: { get: () => super.showDataItem }\r\n        });\r\n        return __awaiter(this, void 0, void 0, function* () {\r\n            const promises = [_super.showDataItem.call(this, dataItem, duration)];\r\n            const bullets = dataItem.bullets;\r\n            if (bullets) {\r\n                $array.each(bullets, (bullet) => {\r\n                    const sprite = bullet.get(\"sprite\");\r\n                    if (sprite) {\r\n                        promises.push(sprite.show(duration));\r\n                    }\r\n                });\r\n            }\r\n            yield Promise.all(promises);\r\n        });\r\n    }\r\n    /**\r\n     * Hides series's data item.\r\n     *\r\n     * @param   dataItem  Data item\r\n     * @param   duration  Animation duration in milliseconds\r\n     * @return            Promise\r\n     */\r\n    hideDataItem(dataItem, duration) {\r\n        const _super = Object.create(null, {\r\n            hideDataItem: { get: () => super.hideDataItem }\r\n        });\r\n        return __awaiter(this, void 0, void 0, function* () {\r\n            const promises = [_super.hideDataItem.call(this, dataItem, duration)];\r\n            const bullets = dataItem.bullets;\r\n            if (bullets) {\r\n                $array.each(bullets, (bullet) => {\r\n                    const sprite = bullet.get(\"sprite\");\r\n                    if (sprite) {\r\n                        promises.push(sprite.hide(duration));\r\n                    }\r\n                });\r\n            }\r\n            yield Promise.all(promises);\r\n        });\r\n    }\r\n    _sequencedShowHide(show, duration) {\r\n        return __awaiter(this, void 0, void 0, function* () {\r\n            if (this.get(\"sequencedInterpolation\")) {\r\n                if (!$type.isNumber(duration)) {\r\n                    duration = this.get(\"interpolationDuration\", 0);\r\n                }\r\n                if (duration > 0) {\r\n                    const startIndex = this.startIndex();\r\n                    const endIndex = this.endIndex();\r\n                    yield Promise.all($array.map(this.dataItems, (dataItem, i) => __awaiter(this, void 0, void 0, function* () {\r\n                        let realDuration = duration || 0;\r\n                        if (i < startIndex - 10 || i > endIndex + 10) {\r\n                            realDuration = 0;\r\n                        }\r\n                        //let delay = this.get(\"sequencedDelay\", 0) * i + realDuration * (i - startIndex) / (endIndex - startIndex);\r\n                        let delay = this.get(\"sequencedDelay\", 0) + realDuration / (endIndex - startIndex);\r\n                        yield $time.sleep(delay * (i - startIndex));\r\n                        if (show) {\r\n                            yield this.showDataItem(dataItem, realDuration);\r\n                        }\r\n                        else {\r\n                            yield this.hideDataItem(dataItem, realDuration);\r\n                        }\r\n                    })));\r\n                }\r\n                else {\r\n                    yield Promise.all($array.map(this.dataItems, (dataItem) => {\r\n                        if (show) {\r\n                            return this.showDataItem(dataItem, 0);\r\n                        }\r\n                        else {\r\n                            return this.hideDataItem(dataItem, 0);\r\n                        }\r\n                    }));\r\n                }\r\n            }\r\n        });\r\n    }\r\n    /**\r\n     * @ignore\r\n     */\r\n    updateLegendValue(dataItem) {\r\n        if (dataItem) {\r\n            const legendDataItem = dataItem.get(\"legendDataItem\");\r\n            if (legendDataItem) {\r\n                const valueLabel = legendDataItem.get(\"valueLabel\");\r\n                if (valueLabel) {\r\n                    const text = valueLabel.text;\r\n                    let txt = \"\";\r\n                    valueLabel._setDataItem(dataItem);\r\n                    txt = this.get(\"legendValueText\", text.get(\"text\", \"\"));\r\n                    valueLabel.set(\"text\", txt);\r\n                    text.markDirtyText();\r\n                }\r\n                const label = legendDataItem.get(\"label\");\r\n                if (label) {\r\n                    const text = label.text;\r\n                    let txt = \"\";\r\n                    label._setDataItem(dataItem);\r\n                    txt = this.get(\"legendLabelText\", text.get(\"text\", \"\"));\r\n                    label.set(\"text\", txt);\r\n                    text.markDirtyText();\r\n                }\r\n            }\r\n        }\r\n    }\r\n    /**\r\n     * @ignore\r\n     */\r\n    updateLegendMarker(_dataItem) {\r\n    }\r\n    _onHide() {\r\n        super._onHide();\r\n        const tooltip = this.getTooltip();\r\n        if (tooltip) {\r\n            tooltip.hide();\r\n        }\r\n    }\r\n    /**\r\n     * @ignore\r\n     */\r\n    hoverDataItem(_dataItem) { }\r\n    /**\r\n     * @ignore\r\n     */\r\n    unhoverDataItem(_dataItem) { }\r\n    /**\r\n     * @ignore\r\n     */\r\n    _getBase(key) {\r\n        const dataItem = this.dataItems[this.startIndex()];\r\n        if (dataItem) {\r\n            return dataItem.get(key);\r\n        }\r\n        return 0;\r\n    }\r\n}\r\nObject.defineProperty(Series, \"className\", {\r\n    enumerable: true,\r\n    configurable: true,\r\n    writable: true,\r\n    value: \"Series\"\r\n});\r\nObject.defineProperty(Series, \"classNames\", {\r\n    enumerable: true,\r\n    configurable: true,\r\n    writable: true,\r\n    value: Component.classNames.concat([Series.className])\r\n});\r\n//# sourceMappingURL=Series.js.map","import type { Root } from \"../../core/Root\";\nimport type { Chart } from \"./Chart\";\nimport type { Bullet } from \"./Bullet\";\nimport type { Graphics } from \"../../core/render/Graphics\";\nimport type { ILegendDataItem } from \"./Legend\";\nimport type { Template } from \"../../core/util/Template\";\nimport type { Sprite } from \"../../core/render/Sprite\";\nimport type { Pattern } from \"./patterns/Pattern\";\n\nimport { Component, IComponentSettings, IComponentPrivate, DataItem, IComponentEvents, IComponentDataItem } from \"../../core/render/Component\";\nimport { List } from \"../../core/util/List\";\nimport { Color } from \"../../core/util/Color\";\nimport { percentInterpolate } from \"../../core/util/Animation\";\nimport { Percent } from \"../../core/util/Percent\";\nimport { p100 } from \"../../core/util/Percent\";\nimport { Container } from \"../../core/render/Container\";\nimport { Label } from \"../../core/render/Label\";\n//import { Animations } from \"../../core/util/Animation\";\n\nimport * as $array from \"../../core/util/Array\";\nimport * as $type from \"../../core/util/Type\";\nimport * as $time from \"../../core/util/Time\";\n\n/**\n * Defines interface for a heat rule.\n *\n * @see {@link https://www.amcharts.com/docs/v5/concepts/settings/heat-rules/} for more info\n */\nexport interface IHeatRule {\n\n\t/**\n\t * Target template.\n\t */\n\ttarget: Template<any>;\n\n\t/**\n\t * The setting value to use for items if the lowest value.\n\t */\n\tmin?: any;\n\n\t/**\n\t * The setting value to use for items if the highest value.\n\t */\n\tmax?: any;\n\n\t/**\n\t * The setting value to use for items which do not have value at all.\n\t */\n\tneutral?: any;\n\n\t/**\n\t * Which data field to use when determining item's value.\n\t */\n\tdataField: string;\n\n\t/**\n\t * A setting key to set.\n\t */\n\tkey?: string;\n\n\t/**\n\t * Custom lowest value.\n\t */\n\tminValue?: number;\n\n\t/**\n\t * Custom highest value.\n\t */\n\tmaxValue?: number;\n\n\t/**\n\t * Use logarithmic scale when calculating intermediate setting values.\n\t *\n\t * @default false\n\t */\n\tlogarithmic?: boolean;\n\n\t/**\n\t * A custom function that will set target element's settings.\n\t *\n\t * Can be used to do custom manipulation on complex objects requiring more\n\t * than modifying a setting.\n\t */\n\tcustomFunction?: (target: Sprite, minValue: number, maxValue: number, value?: any) => void;\n\n}\n\n\nexport interface ISeriesDataItem extends IComponentDataItem {\n\tid?: string;\n\tvalue?: number;\n\tvalueWorking?:number;\n\tvalueChange?: number;\n\tvalueChangePercent?: number;\n\tvalueChangeSelection?: number;\n\tvalueChangeSelectionPercent?: number;\n\tvalueChangePrevious?: number;\n\tvalueChangePreviousPercent?: number;\n\tvalueWorkingOpen?: number;\n\tvalueWorkingClose?: number;\n\n\tcustomValue?: number;\n\tcustomValueWorking?:number;\n\tcustomValueChange?: number;\n\tcustomValueChangePercent?: number;\n\tcustomValueChangeSelection?: number;\n\tcustomValueChangeSelectionPercent?: number;\n\tcustomValueChangePrevious?: number;\n\tcustomValueChangePreviousPercent?: number;\n}\n\nexport interface ISeriesSettings extends IComponentSettings {\n\n\t/**\n\t * Name of the series.\n\t */\n\tname?: string;\n\n\t/**\n\t * A key to look up in data for an id of the data item.\n\t */\n\tidField?: string;\n\n\t/**\n\t * A key to look up in data for a numeric value of the data item.\n\t *\n\t * Some series use it to display its elements. It can also be used in heat\n\t * rules.\n\t */\n\tvalueField?: string;\n\n\t/**\n\t * A key to look up in data for a numeric customValue of the data item.\n\t *\n\t * Usually used for storing additional numeric information and heat rules.\n\t */\n\tcustomValueField?: string;\t\n\n\t/**\n\t * A text template to be used for label in legend.\n\t */\n\tlegendLabelText?: string;\n\n\t/**\n\t * A text template to be used for value label in legend.\n\t */\n\tlegendValueText?: string;\n\n\t/**\n\t * If set to `true` the series initial animation will be played item by item\n\t * rather than all at once.\n\t *\n\t * @see {@link https://www.amcharts.com/docs/v5/concepts/animations/#Animation_of_series} for more info\n\t */\n\tsequencedInterpolation?:boolean;\n\n\t/**\n\t * A delay in milliseconds to wait before starting animation of next data\n\t * item.\n\t *\n\t * @see {@link https://www.amcharts.com/docs/v5/concepts/animations/#Animation_of_series} for more info\n\t */\n\tsequencedDelay?:number;\n\n\t/**\n\t * A list of heat rules to apply on series elements.\n\t *\n\t * @see {@link https://www.amcharts.com/docs/v5/concepts/settings/heat-rules/} for more info\n\t */\n\theatRules?:IHeatRule[];\n\n\t/**\n\t * If set to `true`, series will calculate aggregate values, e.g. change\n\t * percent, high, low, etc.\n\t *\n\t * Do not enable unless you are using such aggregate values in tooltips,\n\t * display data fields, heat rules, or similar.\n\t */\n\tcalculateAggregates?: boolean;\n\n\t/**\n\t * Series stroke color.\n\t *\n\t * @see {@link https://www.amcharts.com/docs/v5/charts/xy-chart/series/#Series_colors} for more info\n\t */\n\tstroke?: Color;\n\n\t/**\n\t * Series fill color.\n\t *\n\t * @see {@link https://www.amcharts.com/docs/v5/charts/xy-chart/series/#Series_colors} for more info\n\t */\n\tfill?: Color;\n\n\t/**\n\t * Series fill pattern.\n\t *\n\t * @see {@link https://www.amcharts.com/docs/v5/concepts/colors-gradients-and-patterns/patterns/} for more info\n\t * @since 5.10.0\n\t */\n\tfillPattern?: Pattern;\n\n\t/**\n\t * A data item representing series in a [[Legend]].\n\t *\n\t * @readonly\n\t */\n\tlegendDataItem?: DataItem<ILegendDataItem>;\n\n}\n\nexport interface ISeriesPrivate extends IComponentPrivate {\n\n\t/**\n\t * @ignore\n\t */\n\tchart?: Chart;\n\tstartIndex?: number;\n\tendIndex?: number;\n\tadjustedStartIndex?:number;\n\n\tvalueAverage?: number;\n\tvalueCount?: number;\n\tvalueSum?: number;\n\tvalueAbsoluteSum?: number;\n\tvalueLow?: number;\n\tvalueHigh?: number;\n\tvalueOpen?: number;\n\tvalueClose?: number;\n\n\tcustomValueAverage?: number;\n\tcustomValueCount?: number;\n\tcustomValueSum?: number;\n\tcustomValueAbsoluteSum?: number;\n\tcustomValueLow?: number;\n\tcustomValueHigh?: number;\n\tcustomValueOpen?: number;\n\tcustomValueClose?: number;\t\n\n\tbaseValueSeries?: Series;\n}\n\nexport interface ISeriesEvents extends IComponentEvents {\n\n}\n\n/**\n * A base class for all series.\n */\nexport abstract class Series extends Component {\n\tpublic static className: string = \"Series\";\n\tpublic static classNames: Array<string> = Component.classNames.concat([Series.className]);\n\n\tdeclare public _settings: ISeriesSettings;\n\tdeclare public _privateSettings: ISeriesPrivate;\n\tdeclare public _dataItemSettings: ISeriesDataItem;\n\tdeclare public _events: ISeriesEvents;\n\n\tprotected _aggregatesCalculated: boolean = false;\n\tprotected _selectionAggregatesCalculated: boolean = false;\n\tprotected _dataProcessed: boolean = false;\n\n\tprotected _psi: number | undefined;\n\tprotected _pei: number | undefined;\n\n\t/**\n\t * A chart series belongs to.\n\t */\n\tpublic chart:Chart | undefined;\n\n\t/**\n\t * List of bullets to use for the series.\n\t *\n\t * @see {@link https://www.amcharts.com/docs/v5/concepts/common-elements/bullets/} for more info\n\t */\n\tpublic bullets: List<<D extends DataItem<this[\"_dataItemSettings\"]>>(root: Root, series:Series, dataItem: D) => Bullet | undefined> = new List();\n\n\t/**\n\t * A [[Container]] series' bullets are stored in.\n\t *\n\t * @default Container.new()\n\t */\n\tpublic readonly bulletsContainer: Container = Container.new(this._root, {width:p100, height:p100, position:\"absolute\"});\n\n\tprotected _afterNew() {\n\t\tthis.valueFields.push(\"value\", \"customValue\");\n\n\t\tsuper._afterNew();\n\n\t\tthis.setPrivate(\"customData\", {});\n\n\t\tthis._disposers.push(this.bullets.events.onAll((change) => {\n\t\t\tif (change.type === \"clear\") {\n\t\t\t\tthis._handleBullets(this.dataItems);\n\t\t\t} else if (change.type === \"push\") {\n\t\t\t\tthis._handleBullets(this.dataItems);\n\t\t\t} else if (change.type === \"setIndex\") {\n\t\t\t\tthis._handleBullets(this.dataItems);\n\t\t\t} else if (change.type === \"insertIndex\") {\n\t\t\t\tthis._handleBullets(this.dataItems);\n\t\t\t} else if (change.type === \"removeIndex\") {\n\t\t\t\tthis._handleBullets(this.dataItems);\n\t\t\t} else if (change.type === \"moveIndex\") {\n\t\t\t\tthis._handleBullets(this.dataItems);\n\t\t\t} else {\n\t\t\t\tthrow new Error(\"Unknown IListEvent type\");\n\t\t\t}\n\t\t}));\n\t}\n\n\tprotected _dispose(){\n\t\tthis.bulletsContainer.dispose(); // can be in a different parent\n\t\tsuper._dispose();\n\t}\n\n\tpublic startIndex():number {\n\t\tlet len = this.dataItems.length;\n\t\treturn Math.min(this.getPrivate(\"startIndex\", 0), len);\n\t}\n\n\tpublic endIndex():number {\n\t\tlet len = this.dataItems.length;\n\t\treturn Math.min(this.getPrivate(\"endIndex\", len), len)\n\t}\n\n\tprotected _handleBullets(dataItems:Array<DataItem<this[\"_dataItemSettings\"]>>){\n\t\t$array.each(dataItems, (dataItem)=>{\n\t\t\tconst bullets = dataItem.bullets;\n\t\t\tif(bullets){\n\t\t\t\t$array.each(bullets, (bullet)=>{\n\t\t\t\t\tbullet.dispose();\n\t\t\t\t})\n\n\t\t\t\tdataItem.bullets = undefined;\n\t\t\t}\n\t\t})\n\n\t\tthis.markDirtyValues();\n\t}\n\n\t/**\n\t * Looks up and returns a data item by its ID.\n\t *\n\t * @param   id  ID\n\t * @return      Data item\n\t */\n\tpublic getDataItemById(id: string): DataItem<this[\"_dataItemSettings\"]> | undefined {\n\t\treturn $array.find(this.dataItems, (dataItem: any) => {\n\t\t\treturn dataItem.get(\"id\") == id;\n\t\t})\n\t}\n\n\tprotected _makeBullets(dataItem: DataItem<this[\"_dataItemSettings\"]>) {\n\t\tif(this._shouldMakeBullet(dataItem)){\n\t\t\tdataItem.bullets = [];\n\n\t\t\tthis.bullets.each((bulletFunction) => {\n\t\t\t\tthis._makeBullet(dataItem, bulletFunction);\n\t\t\t})\n\t\t}\n\t}\n\n\tprotected _shouldMakeBullet(_dataItem: DataItem<this[\"_dataItemSettings\"]>):boolean{\n\t\treturn true;\n\t}\n\n\tprotected _makeBullet(dataItem: DataItem<this[\"_dataItemSettings\"]>, bulletFunction:(root: Root, series:Series, dataItem: DataItem<this[\"_dataItemSettings\"]>) => Bullet | undefined, index?:number):Bullet | undefined{\n\t\tconst bullet = bulletFunction(this._root, this, dataItem);\n\t\tif(bullet){\n\t\t\tbullet._index = index;\n\t\t\tthis._makeBulletReal(dataItem, bullet);\n\t\t}\n\t\treturn bullet;\n\t}\n\n\tprotected _makeBulletReal(dataItem: DataItem<this[\"_dataItemSettings\"]>, bullet:Bullet){\n\t\tlet sprite = bullet.get(\"sprite\");\n\n\t\tif (sprite) {\n\t\t\tsprite._setDataItem(dataItem);\n\t\t\tsprite.setRaw(\"position\", \"absolute\");\n\t\t\tthis.bulletsContainer.children.push(sprite);\n\t\t}\n\t\tbullet.series = this;\n\t\tdataItem.bullets!.push(bullet);\n\t}\n\n\t/**\n\t * Adds bullet directly to a data item.\n\t *\n\t * Please note: method accepts [[Bullet]] instance as a paramter, not a\n\t * reference to a function.\n\t *\n\t * You should add Bullet instance, not a method like you do it on series.\n\t *\n\t * @see {@link https://www.amcharts.com/docs/v5/concepts/common-elements/bullets/#Adding_directly_to_data_item} for more info\n\t * @since 5.6.0\n\t *\n\t * @param  dataItem  Target data item\n\t * @param  bullet    Bullet instance\n\t */\n\tpublic addBullet(dataItem:DataItem<this[\"_dataItemSettings\"]>, bullet:Bullet){\n\t\tif(!dataItem.bullets){\n\t\t\tdataItem.bullets = [];\n\t\t}\n\t\tif(bullet){\n\t\t\tthis._makeBulletReal(dataItem, bullet);\n\t\t}\n\t}\t\n\n\tpublic _clearDirty() {\n\t\tsuper._clearDirty();\n\t\tthis._aggregatesCalculated = false;\n\t\tthis._selectionAggregatesCalculated = false;\n\t}\n\n\tpublic _prepareChildren(){\n\t\tsuper._prepareChildren();\n\n\t\tlet startIndex = this.startIndex();\n\t\tlet endIndex = this.endIndex();\n\n\t\tif(this.isDirty(\"name\")){\n\t\t\tthis.updateLegendValue();\n\t\t}\n\n\t\tif(this.isDirty(\"heatRules\")){\n\t\t\tthis._valuesDirty = true;\n\t\t}\n\n\t\tif(this.isPrivateDirty(\"baseValueSeries\")){\n\t\t\tconst baseValueSeries = this.getPrivate(\"baseValueSeries\");\n\t\t\tif(baseValueSeries){\n\t\t\t\tthis._disposers.push(baseValueSeries.onPrivate(\"startIndex\", ()=>{\n\t\t\t\t\tthis.markDirtyValues();\n\t\t\t\t}))\n\t\t\t}\n\t\t}\n\n\t\tconst calculateAggregates = this.get(\"calculateAggregates\");\n\t\tif(calculateAggregates){\n\t\t\tif (this._valuesDirty && !this._dataProcessed) {\n\t\t\t\tif (!this._aggregatesCalculated) {\n\t\t\t\t\tthis._calculateAggregates(0, this.dataItems.length);\n\t\t\t\t\tthis._aggregatesCalculated = true;\n\t\t\t\t\tif(startIndex != 0){\n\t\t\t\t\t\tthis._psi = undefined;\n\t\t\t\t\t}\n\t\t\t\t}\n\t\t\t}\n\n\t\t\tif ((this._psi != startIndex || this._pei != endIndex || this.isPrivateDirty(\"adjustedStartIndex\")) && !this._selectionAggregatesCalculated) {\n\t\t\t\tif (startIndex === 0 && endIndex === this.dataItems.length && this._aggregatesCalculated) {\n\t\t\t\t\t// void\n\t\t\t\t}\n\t\t\t\telse {\n\t\t\t\t\tthis._calculateAggregates(startIndex, endIndex);\n\t\t\t\t}\n\n\t\t\t\tthis._selectionAggregatesCalculated = true;\n\t\t\t}\n\t\t}\n\n\t\tif(this.isDirty(\"tooltip\")){\n\t\t\tlet tooltip = this.get(\"tooltip\");\n\t\t\tif(tooltip){\n\t\t\t\ttooltip.hide(0);\n\t\t\t\ttooltip.set(\"tooltipTarget\", this);\n\t\t\t}\n\t\t}\n\n\t\tif (this.isDirty(\"fill\") || this.isDirty(\"stroke\")) {\n\n\t\t\tlet markerRectangle: Graphics | undefined;\n\t\t\tconst legendDataItem = this.get(\"legendDataItem\");\n\t\t\tif (legendDataItem) {\n\t\t\t\tmarkerRectangle = legendDataItem.get(\"markerRectangle\");\n\n\t\t\t\tif (markerRectangle) {\n\t\t\t\t\tif(this.isVisible()){\n\t\t\t\t\t\tif (this.isDirty(\"stroke\")) {\n\t\t\t\t\t\t\tlet stroke = this.get(\"stroke\");\n\t\t\t\t\t\t\tmarkerRectangle.set(\"stroke\", stroke);\n\t\t\t\t\t\t}\n\t\t\t\t\t\tif (this.isDirty(\"fill\")) {\n\t\t\t\t\t\t\tlet fill = this.get(\"fill\");\n\t\t\t\t\t\t\tmarkerRectangle.set(\"fill\", fill);\n\t\t\t\t\t\t}\n\t\t\t\t\t}\n\t\t\t\t}\n\t\t\t}\n\t\t\tthis.updateLegendMarker(undefined);\n\t\t}\n\n\n\t\tif (this.bullets.length > 0) {\n\t\t\tlet startIndex = this.startIndex();\n\t\t\tlet endIndex = this.endIndex();\n\n\t\t\tif(endIndex < this.dataItems.length){\n\t\t\t\tendIndex++;\n\t\t\t}\n\n\t\t\tfor (let i = startIndex; i < endIndex; i++) {\n\t\t\t\tlet dataItem = this.dataItems[i];\n\t\t\t\tif (!dataItem.bullets) {\n\t\t\t\t\tthis._makeBullets(dataItem);\n\t\t\t\t}\n\t\t\t}\n\t\t}\n\n\t}\n\n\t/**\n\t * @ignore\n\t */\n\tpublic _adjustStartIndex(index:number):number{\n\t\treturn index;\n\t}\n\n\tprotected _calculateAggregates(startIndex: number, endIndex: number) {\n\t\tlet fields = this._valueFields;\n\n\t\tif (!fields) {\n\t\t\tthrow new Error(\"No value fields are set for the series.\");\n\t\t}\n\n\t\tconst sum: { [index: string]: number } = {};\n\t\tconst absSum: { [index: string]: number } = {};\n\t\tconst count: { [index: string]: number } = {};\n\t\tconst low: { [index: string]: number } = {};\n\t\tconst high: { [index: string]: number } = {};\n\t\tconst open: { [index: string]: number } = {};\n\t\tconst close: { [index: string]: number } = {};\n\t\tconst average: { [index: string]: number } = {};\n\t\tconst previous: { [index: string]: number } = {};\n\n\t\t$array.each(fields, (key) => {\n\t\t\tsum[key] = 0;\n\t\t\tabsSum[key] = 0;\n\t\t\tcount[key] = 0;\n\t\t})\n\n\t\t$array.each(fields, (key) => {\n\t\t\tlet change = key + \"Change\";\n\t\t\tlet changePercent = key + \"ChangePercent\";\n\t\t\tlet changePrevious = key + \"ChangePrevious\";\n\t\t\tlet changePreviousPercent = key + \"ChangePreviousPercent\";\n\t\t\tlet changeSelection = key + \"ChangeSelection\";\n\t\t\tlet changeSelectionPercent = key + \"ChangeSelectionPercent\";\n\n\t\t\tlet openKey = \"valueY\";\n\n\t\t\tif(key == \"valueX\" || key == \"openValueX\" || key == \"lowValueX\" || key == \"highValueX\"){\n\t\t\t\topenKey = \"valueX\";\n\t\t\t}\n\n\t\t\tconst baseValueSeries = this.getPrivate(\"baseValueSeries\");\n\t\t\tconst adjustedStartIndex = this.getPrivate(\"adjustedStartIndex\", startIndex);\n\n\t\t\tfor (let i = adjustedStartIndex; i < endIndex; i++) {\n\t\t\t\tconst dataItem = this.dataItems[i];\n\t\t\t\tif(dataItem){\n\t\t\t\t\tlet value = dataItem.get(<any>key)\n\n\t\t\t\t\tif (value != null) {\n\t\t\t\t\t\tcount[key]++;\n\t\t\t\t\t\tsum[key] += value;\n\n\t\t\t\t\t\tabsSum[key] += Math.abs(value);\n\n\t\t\t\t\t\taverage[key] = sum[key] / count[key];\n\n\t\t\t\t\t\tif (low[key] > value || low[key] == null) {\n\t\t\t\t\t\t\tlow[key] = value;\n\t\t\t\t\t\t}\n\t\t\t\t\t\tif (high[key] < value || high[key] == null) {\n\t\t\t\t\t\t\thigh[key] = value;\n\t\t\t\t\t\t}\n\n\t\t\t\t\t\tclose[key] = value;\n\n\t\t\t\t\t\tif (open[key] == null) {\n\t\t\t\t\t\t\topen[key] = value;\n\t\t\t\t\t\t\tprevious[key] = value;\n\n\t\t\t\t\t\t\tif(baseValueSeries){\n\t\t\t\t\t\t\t\topen[openKey] = baseValueSeries._getBase(openKey);\n\t\t\t\t\t\t\t}\n\t\t\t\t\t\t}\n\n\t\t\t\t\t\tif (startIndex === 0) {\n\t\t\t\t\t\t\tdataItem.setRaw(<any>(change), value - open[openKey]);\n\t\t\t\t\t\t\tdataItem.setRaw(<any>(changePercent), (value - open[openKey]) / open[openKey] * 100);\n\t\t\t\t\t\t}\n\n\t\t\t\t\t\tdataItem.setRaw(<any>(changePrevious), value - previous[openKey]);\n\t\t\t\t\t\tdataItem.setRaw(<any>(changePreviousPercent), (value - previous[openKey]) / previous[openKey] * 100);\n\t\t\t\t\t\tdataItem.setRaw(<any>(changeSelection), value - open[openKey]);\n\t\t\t\t\t\tdataItem.setRaw(<any>(changeSelectionPercent), (value - open[openKey]) / open[openKey] * 100);\n\n\t\t\t\t\t\tprevious[key] = value;\n\t\t\t\t\t}\n\t\t\t\t}\n\t\t\t}\n\n\t\t\tif(endIndex < this.dataItems.length - 1){\n\t\t\t\tconst dataItem = this.dataItems[endIndex];\n\t\t\t\tif(dataItem){\n\t\t\t\t\tlet value = dataItem.get(<any>key)\n\t\t\t\t\tdataItem.setRaw(<any>(changePrevious), value - previous[openKey]);\n\t\t\t\t\tdataItem.setRaw(<any>(changePreviousPercent), (value - previous[openKey]) / previous[openKey] * 100);\n\t\t\t\t\tdataItem.setRaw(<any>(changeSelection), value - open[openKey]);\n\t\t\t\t\tdataItem.setRaw(<any>(changeSelectionPercent), (value - open[openKey]) / open[openKey] * 100);\n\t\t\t\t}\n\t\t\t}\n\n\t\t\tif(startIndex > 0){\n\t\t\t\tstartIndex--;\n\t\t\t}\n\n\t\t\tdelete previous[key];\n\n\t\t\tfor (let i = startIndex; i < adjustedStartIndex; i++) {\n\t\t\t\tconst dataItem = this.dataItems[i];\n\t\t\t\tif(dataItem){\n\t\n\t\t\t\t\tlet value = dataItem.get(<any>key);\n\n\t\t\t\t\tif (previous[key] == null) {\n\t\t\t\t\t\tprevious[key] = value;\n\t\t\t\t\t}\t\t\t\t\n\t\t\n\t\t\t\t\tif (value != null) {\n\t\t\t\t\t\tdataItem.setRaw(<any>(changePrevious), value - previous[openKey]);\n\t\t\t\t\t\tdataItem.setRaw(<any>(changePreviousPercent), (value - previous[openKey]) / previous[openKey] * 100);\n\t\t\t\t\t\tdataItem.setRaw(<any>(changeSelection), value - open[openKey]);\n\t\t\t\t\t\tdataItem.setRaw(<any>(changeSelectionPercent), (value - open[openKey]) / open[openKey] * 100);\n\t\t\n\t\t\t\t\t\tprevious[key] = value;\n\t\t\t\t\t}\n\t\t\t\t}\n\t\t\t}\n\t\t})\n\n\t\t$array.each(fields, (key) => {\n\t\t\tthis.setPrivate(<any>(key + \"AverageSelection\"), average[key]);\n\t\t\tthis.setPrivate(<any>(key + \"CountSelection\"), count[key]);\n\t\t\tthis.setPrivate(<any>(key + \"SumSelection\"), sum[key]);\n\t\t\tthis.setPrivate(<any>(key + \"AbsoluteSumSelection\"), absSum[key]);\n\t\t\tthis.setPrivate(<any>(key + \"LowSelection\"), low[key]);\n\t\t\tthis.setPrivate(<any>(key + \"HighSelection\"), high[key]);\n\t\t\tthis.setPrivate(<any>(key + \"OpenSelection\"), open[key]);\n\t\t\tthis.setPrivate(<any>(key + \"CloseSelection\"), close[key]);\n\t\t})\n\n\t\tif (startIndex === 0 && endIndex === this.dataItems.length) {\n\t\t\t$array.each(fields, (key) => {\n\t\t\t\tthis.setPrivate(<any>(key + \"Average\"), average[key]);\n\t\t\t\tthis.setPrivate(<any>(key + \"Count\"), count[key]);\n\t\t\t\tthis.setPrivate(<any>(key + \"Sum\"), sum[key]);\n\t\t\t\tthis.setPrivate(<any>(key + \"AbsoluteSum\"), absSum[key]);\n\t\t\t\tthis.setPrivate(<any>(key + \"Low\"), low[key]);\n\t\t\t\tthis.setPrivate(<any>(key + \"High\"), high[key]);\n\t\t\t\tthis.setPrivate(<any>(key + \"Open\"), open[key]);\n\t\t\t\tthis.setPrivate(<any>(key + \"Close\"), close[key]);\n\t\t\t})\n\t\t}\n\t}\n\n\tpublic _updateChildren() {\n\t\tsuper._updateChildren();\n\n\t\tthis._psi = this.startIndex();\n\t\tthis._pei = this.endIndex();\n\n\t\tif(this.isDirty(\"visible\")){\n\t\t\tthis.bulletsContainer.set(\"visible\", this.get(\"visible\"));\n\t\t}\n\n\n\t\t// Apply heat rules\n\t\tconst rules = this.get(\"heatRules\");\n\n\t\tif (this._valuesDirty && rules && rules.length > 0) {\n\t\t\t$array.each(rules, (rule) => {\n\t\t\t\tconst minValue = rule.minValue || this.getPrivate(<any>(rule.dataField + \"Low\")) || 0;\n\t\t\t\tconst maxValue = rule.maxValue || this.getPrivate(<any>(rule.dataField + \"High\")) || 0;\n\n\t\t\t\t$array.each(rule.target._entities, (target) => {\n\n\t\t\t\t\tconst value = target.dataItem.get(rule.dataField);\n\n\t\t\t\t\tif (!$type.isNumber(value)) {\n\t\t\t\t\t\tif(rule.neutral){\n\t\t\t\t\t\t\ttarget.set(rule.key, rule.neutral);\n\t\t\t\t\t\t}\n\n\t\t\t\t\t\tconst states = target.states;\n\t\t\t\t\t\tif(states){\n\t\t\t\t\t\t\tconst defaultState = states.lookup(\"default\");\n\t\t\t\t\t\t\tif(defaultState && rule.neutral){\n\t\t\t\t\t\t\t\tdefaultState.set(rule.key, rule.neutral);\n\t\t\t\t\t\t\t}\t\t\t\t\t\t\n\t\t\t\t\t\t}\n\t\t\t\t\t\tif(!rule.customFunction){\n\t\t\t\t\t\t\treturn;\n\t\t\t\t\t\t}\n\t\t\t\t\t}\n\n\t\t\t\t\tif (rule.customFunction) {\n\t\t\t\t\t\trule.customFunction.call(this, target, minValue, maxValue, value);\n\t\t\t\t\t}\n\t\t\t\t\telse {\n\t\t\t\t\t\tlet percent: number;\n\t\t\t\t\t\tif (rule.logarithmic) {\n\t\t\t\t\t\t\tpercent = (Math.log(value) * Math.LOG10E - Math.log(minValue) * Math.LOG10E) / ((Math.log(maxValue) * Math.LOG10E - Math.log(minValue) * Math.LOG10E));\n\t\t\t\t\t\t}\n\t\t\t\t\t\telse {\n\t\t\t\t\t\t\tpercent = (value - minValue) / (maxValue - minValue);\n\t\t\t\t\t\t}\n\n\t\t\t\t\t\tif ($type.isNumber(value) && (!$type.isNumber(percent) || Math.abs(percent) == Infinity)) {\n\t\t\t\t\t\t\tpercent = 0.5;\n\t\t\t\t\t\t}\n\n\t\t\t\t\t\t// fixes problems if all values are the same\n\t\t\t\t\t\tlet propertyValue;\n\t\t\t\t\t\tif ($type.isNumber(rule.min)) {\n\t\t\t\t\t\t\tpropertyValue = rule.min + (rule.max - rule.min) * percent;\n\t\t\t\t\t\t}\n\t\t\t\t\t\telse if (rule.min instanceof Color) {\n\t\t\t\t\t\t\tpropertyValue = Color.interpolate(percent, rule.min, rule.max);\n\t\t\t\t\t\t}\n\t\t\t\t\t\telse if (rule.min instanceof Percent) {\n\t\t\t\t\t\t\tpropertyValue = percentInterpolate(percent, rule.min, rule.max);\n\t\t\t\t\t\t}\n\n\t\t\t\t\t\ttarget.set(rule.key, propertyValue);\n\t\t\t\t\t\tconst states = target.states;\n\t\t\t\t\t\tif(states){\n\t\t\t\t\t\t\tconst defaultState = states.lookup(\"default\");\n\t\t\t\t\t\t\tif(defaultState){\n\t\t\t\t\t\t\t\tdefaultState.set(rule.key, propertyValue);\n\t\t\t\t\t\t\t}\t\t\t\t\t\t\n\t\t\t\t\t\t}\n\t\t\t\t\t}\n\t\t\t\t});\n\t\t\t});\n\t\t}\n\n\t\tif(this.get(\"visible\")){\n\t\t\tlet count = this.dataItems.length;\n\t\t\tlet startIndex = this.startIndex();\n\t\t\tlet endIndex = this.endIndex();\n\n\t\t\tif(endIndex < count){\n\t\t\t\tendIndex++;\n\t\t\t}\n\t\t\tif(startIndex > 0){\n\t\t\t\tstartIndex--;\n\t\t\t}\n\n\t\t\tfor (let i = 0; i < startIndex; i++) {\n\t\t\t\tthis._hideBullets(this.dataItems[i]);\n\t\t\t}\n\n\t\t\tfor (let i = startIndex; i < endIndex; i++) {\n\t\t\t\tthis._positionBullets(this.dataItems[i]);\n\t\t\t}\n\n\t\t\tfor (let i = endIndex; i < count; i++) {\n\t\t\t\tthis._hideBullets(this.dataItems[i]);\n\t\t\t}\n\t\t}\n\t}\n\n\tpublic _positionBullets(dataItem: DataItem<this[\"_dataItemSettings\"]>){\n\t\tif(dataItem.bullets){\n\t\t\t$array.each(dataItem.bullets, (bullet) => {\n\t\t\t\tthis._positionBullet(bullet);\n\t\t\t\tconst sprite = bullet.get(\"sprite\");\n\n\t\t\t\tif(bullet.get(\"dynamic\")){\n\n\t\t\t\t\tif(sprite){\n\t\t\t\t\t\tsprite._markDirtyKey(\"fill\" as any);\n\t\t\t\t\t\tsprite.markDirtySize();\n\t\t\t\t\t}\n\t\t\t\t\tif(sprite instanceof Container){\n\t\t\t\t\t\tsprite.walkChildren((child)=>{\n\t\t\t\t\t\t\tchild._markDirtyKey(\"fill\" as any);\n\t\t\t\t\t\t\tchild.markDirtySize();\n\n\t\t\t\t\t\t\tif(child instanceof Label){\n\t\t\t\t\t\t\t\tchild.text.markDirtyText();\n\t\t\t\t\t\t\t}\n\t\t\t\t\t\t})\n\t\t\t\t\t}\n\t\t\t\t}\n\t\t\t\tif(sprite instanceof Label && sprite.get(\"populateText\" as any)){\n\t\t\t\t\tsprite.text.markDirtyText();\n\t\t\t\t}\n\t\t\t})\n\t\t}\n\t}\n\n\tprotected _hideBullets(dataItem: DataItem<this[\"_dataItemSettings\"]>) {\n\t\tif (dataItem.bullets) {\n\t\t\t$array.each(dataItem.bullets, (bullet) => {\n\t\t\t\tlet sprite = bullet.get(\"sprite\");\n\t\t\t\tif (sprite) {\n\t\t\t\t\tsprite.setPrivate(\"visible\", false);\n\t\t\t\t}\n\t\t\t})\n\t\t}\n\t}\n\n\tpublic _positionBullet(_bullet: Bullet) {\n\t}\n\n\tpublic _placeBulletsContainer(chart:Chart){\n\t\tchart.bulletsContainer.children.moveValue(this.bulletsContainer);\n\t}\n\n\tpublic _removeBulletsContainer(){\n\t\tconst bulletsContainer = this.bulletsContainer;\n\t\tif(bulletsContainer.parent){\n\t\t\tbulletsContainer.parent.children.removeValue(bulletsContainer)\n\t\t}\n\t}\n\n\t/**\n\t * @ignore\n\t */\n\tpublic disposeDataItem(dataItem: DataItem<this[\"_dataItemSettings\"]>) {\n\t\t//super.disposeDataItem(dataItem); // does nothing\n\n\t\tconst bullets = dataItem.bullets;\n\n\t\tif(bullets){\n\t\t\t$array.each(bullets, (bullet)=>{\n\t\t\t\tbullet.dispose();\n\t\t\t})\n\t\t}\n\t}\n\n\tprotected _getItemReaderLabel(): string {\n\t\treturn \"\";\n\t}\n\n\t/**\n\t * Shows series's data item.\n\t *\n\t * @param   dataItem  Data item\n\t * @param   duration  Animation duration in milliseconds\n\t * @return            Promise\n\t */\n\tpublic async showDataItem(dataItem: DataItem<this[\"_dataItemSettings\"]>, duration?: number): Promise<void> {\n\t\tconst promises = [super.showDataItem(dataItem, duration)];\n\t\tconst bullets = dataItem.bullets;\n\t\tif(bullets){\n\t\t\t$array.each(bullets, (bullet)=>{\n\t\t\t\tconst sprite = bullet.get(\"sprite\");\n\t\t\t\tif(sprite){\n\t\t\t\t\tpromises.push(sprite.show(duration));\n\t\t\t\t}\n\t\t\t})\n\t\t}\n\t\tawait Promise.all(promises);\n\t}\n\n\t/**\n\t * Hides series's data item.\n\t *\n\t * @param   dataItem  Data item\n\t * @param   duration  Animation duration in milliseconds\n\t * @return            Promise\n\t */\n\tpublic async hideDataItem(dataItem: DataItem<this[\"_dataItemSettings\"]>, duration?: number): Promise<void> {\n\t\tconst promises = [super.hideDataItem(dataItem, duration)];\n\t\tconst bullets = dataItem.bullets;\n\t\tif(bullets){\n\t\t\t$array.each(bullets, (bullet)=>{\n\t\t\t\tconst sprite = bullet.get(\"sprite\");\n\t\t\t\tif(sprite){\t\t\t\t\t\n\t\t\t\t\tpromises.push(sprite.hide(duration));\n\t\t\t\t}\n\t\t\t})\n\t\t}\n\t\tawait Promise.all(promises);\n\t}\n\n\n\tprotected async _sequencedShowHide(show: boolean, duration?: number): Promise<void> {\n\t\tif (this.get(\"sequencedInterpolation\")) {\n\n\t\t\tif (!$type.isNumber(duration)) {\n\t\t\t\tduration = this.get(\"interpolationDuration\", 0);\n\t\t\t}\n\n\t\t\tif (duration > 0) {\n\t\t\t\tconst startIndex = this.startIndex();\n\t\t\t\tconst endIndex = this.endIndex();\n\n\t\t\t\tawait Promise.all($array.map(this.dataItems, async (dataItem, i) => {\n\t\t\t\t\tlet realDuration = duration || 0;\n\n\t\t\t\t\tif (i < startIndex - 10 || i > endIndex + 10) {\n\t\t\t\t\t\trealDuration = 0;\n\t\t\t\t\t}\n\n\t\t\t\t\t//let delay = this.get(\"sequencedDelay\", 0) * i + realDuration * (i - startIndex) / (endIndex - startIndex);\n\t\t\t\t\tlet delay = this.get(\"sequencedDelay\", 0) + realDuration / (endIndex - startIndex);\n\n\t\t\t\t\tawait $time.sleep(delay * (i - startIndex));\n\n\t\t\t\t\tif (show) {\n\t\t\t\t\t\tawait this.showDataItem(dataItem, realDuration);\n\t\t\t\t\t}\n\t\t\t\t\telse {\n\t\t\t\t\t\tawait this.hideDataItem(dataItem, realDuration);\n\t\t\t\t\t}\n\t\t\t\t}));\n\t\t\t}\n\t\t\telse {\n\t\t\t\tawait Promise.all($array.map(this.dataItems, (dataItem) => {\n\t\t\t\t\tif (show) {\n\t\t\t\t\t\treturn this.showDataItem(dataItem, 0);\n\t\t\t\t\t}\n\t\t\t\t\telse {\n\t\t\t\t\t\treturn this.hideDataItem(dataItem, 0);\n\t\t\t\t\t}\n\t\t\t\t}));\n\t\t\t}\n\t\t}\n\t}\n\n\t/**\n\t * @ignore\n\t */\n\tpublic updateLegendValue(dataItem?: DataItem<this[\"_dataItemSettings\"]>) {\n\t\tif(dataItem){\n\t\t\tconst legendDataItem = dataItem.get(\"legendDataItem\" as any) as DataItem<ILegendDataItem>;\n\n\t\t\tif (legendDataItem) {\n\t\t\t\tconst valueLabel = legendDataItem.get(\"valueLabel\");\n\t\t\t\tif (valueLabel) {\n\t\t\t\t\tconst text = valueLabel.text;\n\t\t\t\t\tlet txt = \"\";\n\t\t\t\t\tvalueLabel._setDataItem(dataItem);\n\t\t\t\t\ttxt = this.get(\"legendValueText\", text.get(\"text\", \"\"));\n\n\t\t\t\t\tvalueLabel.set(\"text\", txt);\n\t\t\t\t\ttext.markDirtyText();\n\t\t\t\t}\n\n\t\t\t\tconst label = legendDataItem.get(\"label\");\n\t\t\t\tif (label) {\n\t\t\t\t\tconst text = label.text;\n\t\t\t\t\tlet txt = \"\";\n\t\t\t\t\tlabel._setDataItem(dataItem);\n\t\t\t\t\ttxt = this.get(\"legendLabelText\", text.get(\"text\", \"\"));\n\n\t\t\t\t\tlabel.set(\"text\", txt);\n\t\t\t\t\ttext.markDirtyText();\n\t\t\t\t}\n\t\t\t}\n\t\t}\n\t}\n\n\t/**\n\t * @ignore\n\t */\n\tpublic updateLegendMarker(_dataItem?: DataItem<this[\"_dataItemSettings\"]>) {\n\t}\n\n\tprotected _onHide(){\n\t\tsuper._onHide();\n\n\t\tconst tooltip = this.getTooltip();\n\t\tif(tooltip){\n\t\t\ttooltip.hide();\n\t\t}\n\t}\n\n\t/**\n\t * @ignore\n\t */\n\tpublic hoverDataItem(_dataItem: DataItem<this[\"_dataItemSettings\"]>) {}\n\n\t/**\n\t * @ignore\n\t */\n\tpublic unhoverDataItem(_dataItem: DataItem<this[\"_dataItemSettings\"]>) {}\n\n\t/**\n\t * @ignore\n\t */\n\tpublic _getBase(key: any): number {\n\t\tconst dataItem = this.dataItems[this.startIndex()];\n\t\tif (dataItem) {\n\t\t\treturn dataItem.get(key);\n\t\t}\n\t\treturn 0;\n\t}\n}\n","import { __awaiter } from \"tslib\";\r\nimport { Settings } from \"../util/Entity\";\r\nimport { Container } from \"./Container\";\r\nimport { ListData } from \"../util/Data\";\r\nimport * as $array from \"../util/Array\";\r\nimport * as $object from \"../util/Object\";\r\n/**\r\n * A base element that holds data bit (data item) for any [[Component]].\r\n */\r\nexport class DataItem extends Settings {\r\n    constructor(component, dataContext, settings) {\r\n        super(settings);\r\n        /**\r\n         * A data item's owener [[Component]].\r\n         */\r\n        Object.defineProperty(this, \"component\", {\r\n            enumerable: true,\r\n            configurable: true,\r\n            writable: true,\r\n            value: void 0\r\n        });\r\n        /**\r\n         * A reference to actual item in source data this item is based on.\r\n         */\r\n        Object.defineProperty(this, \"dataContext\", {\r\n            enumerable: true,\r\n            configurable: true,\r\n            writable: true,\r\n            value: void 0\r\n        });\r\n        /**\r\n         * @todo requires description\r\n         */\r\n        Object.defineProperty(this, \"bullets\", {\r\n            enumerable: true,\r\n            configurable: true,\r\n            writable: true,\r\n            value: void 0\r\n        });\r\n        /**\r\n         * A set of \"open\" values.\r\n         */\r\n        Object.defineProperty(this, \"open\", {\r\n            enumerable: true,\r\n            configurable: true,\r\n            writable: true,\r\n            value: void 0\r\n        });\r\n        /**\r\n         * A set of \"close\" values.\r\n         */\r\n        Object.defineProperty(this, \"close\", {\r\n            enumerable: true,\r\n            configurable: true,\r\n            writable: true,\r\n            value: void 0\r\n        });\r\n        this.dataContext = dataContext;\r\n        this.component = component;\r\n        this._settings.visible = true;\r\n        this._checkDirty();\r\n    }\r\n    /**\r\n     * @ignore\r\n     */\r\n    markDirty() {\r\n        this.component.markDirtyValues(this);\r\n    }\r\n    _startAnimation() {\r\n        this.component._root._addAnimation(this);\r\n    }\r\n    _animationTime() {\r\n        return this.component._root.animationTime;\r\n    }\r\n    _dispose() {\r\n        if (this.component) {\r\n            this.component.disposeDataItem(this);\r\n        }\r\n        super._dispose();\r\n    }\r\n    /**\r\n     * Shows a data item that's currently hidden.\r\n     */\r\n    show(duration) {\r\n        this.setRaw(\"visible\", true);\r\n        if (this.component) {\r\n            this.component.showDataItem(this, duration);\r\n        }\r\n    }\r\n    /**\r\n     * Hides a data item that's currently visible.\r\n     */\r\n    hide(duration) {\r\n        this.setRaw(\"visible\", false);\r\n        if (this.component) {\r\n            this.component.hideDataItem(this, duration);\r\n        }\r\n    }\r\n    isHidden() {\r\n        return !this.get(\"visible\");\r\n    }\r\n}\r\n/**\r\n * A base class for elements that make use of data.\r\n */\r\nexport class Component extends Container {\r\n    constructor() {\r\n        super(...arguments);\r\n        Object.defineProperty(this, \"_data\", {\r\n            enumerable: true,\r\n            configurable: true,\r\n            writable: true,\r\n            value: new ListData()\r\n        });\r\n        Object.defineProperty(this, \"_dataItems\", {\r\n            enumerable: true,\r\n            configurable: true,\r\n            writable: true,\r\n            value: []\r\n        });\r\n        Object.defineProperty(this, \"_mainDataItems\", {\r\n            enumerable: true,\r\n            configurable: true,\r\n            writable: true,\r\n            value: this._dataItems\r\n        });\r\n        Object.defineProperty(this, \"valueFields\", {\r\n            enumerable: true,\r\n            configurable: true,\r\n            writable: true,\r\n            value: []\r\n        });\r\n        Object.defineProperty(this, \"fields\", {\r\n            enumerable: true,\r\n            configurable: true,\r\n            writable: true,\r\n            value: [\"id\"]\r\n        });\r\n        Object.defineProperty(this, \"_valueFields\", {\r\n            enumerable: true,\r\n            configurable: true,\r\n            writable: true,\r\n            value: void 0\r\n        });\r\n        Object.defineProperty(this, \"_valueFieldsF\", {\r\n            enumerable: true,\r\n            configurable: true,\r\n            writable: true,\r\n            value: void 0\r\n        });\r\n        Object.defineProperty(this, \"_fields\", {\r\n            enumerable: true,\r\n            configurable: true,\r\n            writable: true,\r\n            value: void 0\r\n        });\r\n        Object.defineProperty(this, \"_fieldsF\", {\r\n            enumerable: true,\r\n            configurable: true,\r\n            writable: true,\r\n            value: void 0\r\n        });\r\n        Object.defineProperty(this, \"_valuesDirty\", {\r\n            enumerable: true,\r\n            configurable: true,\r\n            writable: true,\r\n            value: false\r\n        });\r\n        Object.defineProperty(this, \"_dataChanged\", {\r\n            enumerable: true,\r\n            configurable: true,\r\n            writable: true,\r\n            value: false\r\n        });\r\n        Object.defineProperty(this, \"_dataGrouped\", {\r\n            enumerable: true,\r\n            configurable: true,\r\n            writable: true,\r\n            value: false\r\n        });\r\n        /**\r\n         * Indicates if the component has already been initialized.\r\n         */\r\n        Object.defineProperty(this, \"inited\", {\r\n            enumerable: true,\r\n            configurable: true,\r\n            writable: true,\r\n            value: false\r\n        });\r\n    }\r\n    /**\r\n     * Component's data.\r\n     *\r\n     * @see {@link https://www.amcharts.com/docs/v5/concepts/data/} for more info\r\n     */\r\n    set data(data) {\r\n        data.incrementRef();\r\n        this._data.decrementRef();\r\n        this._data = data;\r\n    }\r\n    /**\r\n     * @return  Data\r\n     */\r\n    get data() {\r\n        return this._data;\r\n    }\r\n    _dispose() {\r\n        super._dispose();\r\n        this._data.decrementRef();\r\n    }\r\n    _onDataClear() {\r\n    }\r\n    _afterNew() {\r\n        super._afterNew();\r\n        this._data.incrementRef();\r\n        this._updateFields();\r\n        this._disposers.push(this.data.events.onAll((change) => {\r\n            const dataItems = this._mainDataItems;\r\n            this.markDirtyValues();\r\n            this._markDirtyGroup();\r\n            this._dataChanged = true;\r\n            if (change.type === \"clear\") {\r\n                $array.each(dataItems, (dataItem) => {\r\n                    dataItem.dispose();\r\n                });\r\n                dataItems.length = 0;\r\n                this._onDataClear();\r\n            }\r\n            else if (change.type === \"push\") {\r\n                const dataItem = new DataItem(this, change.newValue, this._makeDataItem(change.newValue));\r\n                dataItems.push(dataItem);\r\n                this.processDataItem(dataItem);\r\n            }\r\n            else if (change.type === \"setIndex\") {\r\n                const dataItem = dataItems[change.index];\r\n                const properties = this._makeDataItem(change.newValue);\r\n                if (dataItem.bullets && dataItem.bullets.length == 0) {\r\n                    dataItem.bullets = undefined;\r\n                }\r\n                $object.keys(properties).forEach((key) => {\r\n                    dataItem.animate({\r\n                        key: key,\r\n                        to: properties[key],\r\n                        duration: this.get(\"interpolationDuration\", 0),\r\n                        easing: this.get(\"interpolationEasing\"),\r\n                    });\r\n                });\r\n                dataItem.dataContext = change.newValue;\r\n            }\r\n            else if (change.type === \"insertIndex\") {\r\n                const dataItem = new DataItem(this, change.newValue, this._makeDataItem(change.newValue));\r\n                dataItems.splice(change.index, 0, dataItem);\r\n                this.processDataItem(dataItem);\r\n            }\r\n            else if (change.type === \"removeIndex\") {\r\n                const dataItem = dataItems[change.index];\r\n                dataItem.dispose();\r\n                dataItems.splice(change.index, 1);\r\n            }\r\n            else if (change.type === \"moveIndex\") {\r\n                const dataItem = dataItems[change.oldIndex];\r\n                dataItems.splice(change.oldIndex, 1);\r\n                dataItems.splice(change.newIndex, 0, dataItem);\r\n            }\r\n            else {\r\n                throw new Error(\"Unknown IStreamEvent type\");\r\n            }\r\n            this._afterDataChange();\r\n        }));\r\n    }\r\n    _updateFields() {\r\n        if (this.valueFields) {\r\n            this._valueFields = [];\r\n            this._valueFieldsF = {};\r\n            $array.each(this.valueFields, (key) => {\r\n                const field = this.get((key + \"Field\"));\r\n                if (field) {\r\n                    this._valueFields.push(key);\r\n                    this._valueFieldsF[key] = { fieldKey: key + \"Field\", workingKey: key + \"Working\" };\r\n                }\r\n            });\r\n        }\r\n        if (this.fields) {\r\n            this._fields = [];\r\n            this._fieldsF = {};\r\n            $array.each(this.fields, (key) => {\r\n                const field = this.get((key + \"Field\"));\r\n                if (field) {\r\n                    this._fields.push(key);\r\n                    this._fieldsF[key] = key + \"Field\";\r\n                }\r\n            });\r\n        }\r\n    }\r\n    /**\r\n     * A list of component's data items.\r\n     *\r\n     * @return  Data items\r\n     */\r\n    get dataItems() {\r\n        return this._dataItems;\r\n    }\r\n    processDataItem(_dataItem) { }\r\n    _makeDataItem(data) {\r\n        //const output: this[\"_dataItemSettings\"] = {};\r\n        const output = {}; // temporary to solve error\r\n        if (this._valueFields) {\r\n            $array.each(this._valueFields, (key) => {\r\n                const field = this.get((this._valueFieldsF[key].fieldKey));\r\n                output[key] = data[field];\r\n                output[this._valueFieldsF[key].workingKey] = output[key];\r\n            });\r\n        }\r\n        if (this._fields) {\r\n            $array.each(this._fields, (key) => {\r\n                const field = this.get((this._fieldsF[key]));\r\n                output[key] = data[field];\r\n            });\r\n        }\r\n        return output;\r\n    }\r\n    /**\r\n     * Creates a new data item and processes it.\r\n     *\r\n     * @param   data         Data item settings\r\n     * @param   dataContext  Data context\r\n     * @return               New data item\r\n     */\r\n    makeDataItem(data, dataContext) {\r\n        let dataItem = new DataItem(this, dataContext, data);\r\n        this.processDataItem(dataItem);\r\n        return dataItem;\r\n    }\r\n    /**\r\n     * Adds new explicit data item to series.\r\n     *\r\n     * @param   data         Data item settings\r\n     * @param   dataContext  Data context\r\n     * @return               New data item\r\n     */\r\n    pushDataItem(data, dataContext) {\r\n        const dataItem = this.makeDataItem(data, dataContext);\r\n        this._mainDataItems.push(dataItem);\r\n        return dataItem;\r\n    }\r\n    /**\r\n     * @ignore\r\n     */\r\n    disposeDataItem(_dataItem) {\r\n    }\r\n    /**\r\n     * Shows component's data item.\r\n     *\r\n     * @param   dataItem   Data item\r\n     * @param   _duration  Animation duration in milliseconds\r\n     * @return             Promise\r\n     */\r\n    showDataItem(dataItem, _duration) {\r\n        return __awaiter(this, void 0, void 0, function* () {\r\n            dataItem.set(\"visible\", true);\r\n        });\r\n    }\r\n    /**\r\n     * Hides component's data item.\r\n     *\r\n     * @param   dataItem   Data item\r\n     * @param   _duration  Animation duration in milliseconds\r\n     * @return             Promise\r\n     */\r\n    hideDataItem(dataItem, _duration) {\r\n        return __awaiter(this, void 0, void 0, function* () {\r\n            dataItem.set(\"visible\", false);\r\n        });\r\n    }\r\n    _clearDirty() {\r\n        super._clearDirty();\r\n        this._valuesDirty = false;\r\n    }\r\n    _afterDataChange() {\r\n    }\r\n    _afterChanged() {\r\n        super._afterChanged();\r\n        if (this._dataChanged) {\r\n            const type = \"datavalidated\";\r\n            if (this.events.isEnabled(type)) {\r\n                this.events.dispatch(type, { type: type, target: this });\r\n            }\r\n            this._dataChanged = false;\r\n        }\r\n        this.inited = true;\r\n    }\r\n    /**\r\n     * Forces a repaint of the element which relies on data.\r\n     *\r\n     * @since 5.0.21\r\n     */\r\n    markDirtyValues(_dataItem) {\r\n        this.markDirty();\r\n        this._valuesDirty = true;\r\n    }\r\n    _markDirtyGroup() {\r\n        this._dataGrouped = false;\r\n    }\r\n    /**\r\n     * @ignore\r\n     */\r\n    markDirtySize() {\r\n        this._sizeDirty = true;\r\n        this.markDirty();\r\n    }\r\n}\r\nObject.defineProperty(Component, \"className\", {\r\n    enumerable: true,\r\n    configurable: true,\r\n    writable: true,\r\n    value: \"Component\"\r\n});\r\nObject.defineProperty(Component, \"classNames\", {\r\n    enumerable: true,\r\n    configurable: true,\r\n    writable: true,\r\n    value: Container.classNames.concat([Component.className])\r\n});\r\n//# sourceMappingURL=Component.js.map","import { Settings } from \"../util/Entity\";\nimport { Container, IContainerSettings, IContainerPrivate, IContainerEvents } from \"./Container\";\nimport { ListData } from \"../util/Data\";\nimport * as $array from \"../util/Array\";\nimport * as $object from \"../util/Object\";\nimport type * as $ease from \"../util/Ease\";\nimport type { Bullet } from \"./Bullet\";\n\n/**\n * A base element that holds data bit (data item) for any [[Component]].\n */\nexport class DataItem<P extends IComponentDataItem> extends Settings {\n\tdeclare public _settings: P;\n\n\t/**\n\t * A data item's owener [[Component]].\n\t */\n\tpublic component: Component;\n\n\t/**\n\t * A reference to actual item in source data this item is based on.\n\t */\n\tpublic dataContext: unknown;\n\n\t/**\n\t * @todo requires description\n\t */\n\tpublic bullets: Array<Bullet> | undefined;\n\n\t/**\n\t * A set of \"open\" values.\n\t */\n\tpublic open: { [index: string]: any } | undefined;\n\n\t/**\n\t * A set of \"close\" values.\n\t */\n\tpublic close: { [index: string]: any } | undefined;\n\n\tconstructor(component: Component, dataContext: unknown, settings: P) {\n\t\tsuper(settings);\n\n\t\tthis.dataContext = dataContext;\n\t\tthis.component = component;\n\t\tthis._settings.visible = true;\n\t\tthis._checkDirty();\n\t}\n\n\t/**\n\t * @ignore\n\t */\n\tpublic markDirty(): void {\n\t\tthis.component.markDirtyValues(this);\n\t}\n\n\tpublic _startAnimation(): void {\n\t\tthis.component._root._addAnimation(this);\n\t}\n\n\tprotected _animationTime(): number | null {\n\t\treturn this.component._root.animationTime;\n\t}\n\n\tprotected _dispose() {\n\t\tif (this.component) {\n\t\t\tthis.component.disposeDataItem(this);\n\t\t}\n\t\tsuper._dispose();\n\t}\n\n\t/**\n\t * Shows a data item that's currently hidden.\n\t */\n\tpublic show(duration?: number) {\n\t\tthis.setRaw(\"visible\", true);\n\t\tif (this.component) {\n\t\t\tthis.component.showDataItem(this, duration);\n\t\t}\n\t}\n\n\t/**\n\t * Hides a data item that's currently visible.\n\t */\n\tpublic hide(duration?: number) {\n\t\tthis.setRaw(\"visible\", false);\n\t\tif (this.component) {\n\t\t\tthis.component.hideDataItem(this, duration);\n\t\t}\n\t}\n\n\tpublic isHidden() {\n\t\treturn !this.get(\"visible\");\n\t}\n}\n\n\nexport interface IComponentDataItem {\n\tvisible?: boolean;\n}\n\nexport interface IComponentSettings extends IContainerSettings {\n\n\t/**\n\t * A duration of the animation from one setting value to another, in\n\t * milliseconds.\n\t *\n\t * @see {@link https://www.amcharts.com/docs/v5/concepts/animations/#Animating_data_values} for more info\n\t */\n\tinterpolationDuration?: number;\n\n\t/**\n\t * Easing function to use for cross setting value animations.\n\t *\n\t * @see {@link https://www.amcharts.com/docs/v5/concepts/animations/#Easing_functions} for more info\n\t */\n\tinterpolationEasing?: $ease.Easing;\n\n}\n\nexport interface IComponentPrivate extends IContainerPrivate {\n}\n\nexport interface IComponentEvents extends IContainerEvents {\n\tdatavalidated: {}\n}\n\n/**\n * A base class for elements that make use of data.\n */\nexport abstract class Component extends Container {\n\tpublic static className: string = \"Component\";\n\tpublic static classNames: Array<string> = Container.classNames.concat([Component.className]);\n\n\tdeclare public _settings: IComponentSettings;\n\tdeclare public _privateSettings: IComponentPrivate;\n\tdeclare public _dataItemSettings: IComponentDataItem;\n\tdeclare public _events: IComponentEvents;\n\n\tprotected _data: ListData<unknown> = new ListData();\n\n\tprotected _dataItems: Array<DataItem<this[\"_dataItemSettings\"]>> = [];\n\n\tpublic _mainDataItems = this._dataItems;\n\n\tprotected valueFields: Array<string> = [];\n\tprotected fields: Array<string> = [\"id\"];\n\n\tprotected _valueFields!: Array<string>;\n\tprotected _valueFieldsF!: { [index: string]: { fieldKey: string, workingKey: string } };\n\n\tprotected _fields!: Array<string>;\n\tprotected _fieldsF!: { [index: string]: string };\n\n\tpublic _valuesDirty: boolean = false;\n\n\tprotected _dataChanged: boolean = false;\n\n\tprotected _dataGrouped = false;\n\n\t/**\n\t * Indicates if the component has already been initialized.\n\t */\n\tpublic inited: boolean = false;\n\n\t/**\n\t * Component's data.\n\t *\n\t * @see {@link https://www.amcharts.com/docs/v5/concepts/data/} for more info\n\t */\n\tpublic set data(data: ListData<unknown>) {\n\t\tdata.incrementRef();\n\t\tthis._data.decrementRef();\n\t\tthis._data = data;\n\t}\n\n\t/**\n\t * @return  Data\n\t */\n\tpublic get data(): ListData<unknown> {\n\t\treturn this._data;\n\t}\n\n\tprotected _dispose() {\n\t\tsuper._dispose();\n\t\tthis._data.decrementRef();\n\t}\n\n\tprotected _onDataClear() {\n\n\t}\n\n\tprotected _afterNew() {\n\t\tsuper._afterNew();\n\n\t\tthis._data.incrementRef();\n\t\tthis._updateFields();\n\n\t\tthis._disposers.push(this.data.events.onAll((change) => {\n\t\t\tconst dataItems = this._mainDataItems;\n\t\t\tthis.markDirtyValues();\n\t\t\tthis._markDirtyGroup();\n\t\t\tthis._dataChanged = true;\n\t\t\tif (change.type === \"clear\") {\n\t\t\t\t$array.each(dataItems, (dataItem) => {\n\t\t\t\t\tdataItem.dispose();\n\t\t\t\t});\n\n\t\t\t\tdataItems.length = 0;\n\t\t\t\tthis._onDataClear();\n\t\t\t} else if (change.type === \"push\") {\n\t\t\t\tconst dataItem = new DataItem(this, change.newValue, this._makeDataItem(change.newValue));\n\t\t\t\tdataItems.push(dataItem);\n\t\t\t\tthis.processDataItem(dataItem);\n\n\t\t\t} else if (change.type === \"setIndex\") {\n\t\t\t\tconst dataItem = dataItems[change.index];\n\t\t\t\tconst properties = this._makeDataItem(change.newValue);\n\t\t\t\tif (dataItem.bullets && dataItem.bullets.length == 0) {\n\t\t\t\t\tdataItem.bullets = undefined;\n\t\t\t\t}\n\n\t\t\t\t$object.keys(properties).forEach((key) => {\n\t\t\t\t\tdataItem.animate({\n\t\t\t\t\t\tkey: key,\n\t\t\t\t\t\tto: properties[key],\n\t\t\t\t\t\tduration: this.get(\"interpolationDuration\", 0),\n\t\t\t\t\t\teasing: this.get(\"interpolationEasing\"),\n\t\t\t\t\t});\n\t\t\t\t});\n\n\t\t\t\tdataItem.dataContext = change.newValue;\n\n\t\t\t} else if (change.type === \"insertIndex\") {\n\t\t\t\tconst dataItem = new DataItem(this, change.newValue, this._makeDataItem(change.newValue));\n\t\t\t\tdataItems.splice(change.index, 0, dataItem);\n\t\t\t\tthis.processDataItem(dataItem);\n\n\t\t\t} else if (change.type === \"removeIndex\") {\n\t\t\t\tconst dataItem = dataItems[change.index];\n\t\t\t\tdataItem.dispose();\n\t\t\t\tdataItems.splice(change.index, 1);\n\n\t\t\t} else if (change.type === \"moveIndex\") {\n\t\t\t\tconst dataItem = dataItems[change.oldIndex];\n\t\t\t\tdataItems.splice(change.oldIndex, 1);\n\t\t\t\tdataItems.splice(change.newIndex, 0, dataItem);\n\n\t\t\t} else {\n\t\t\t\tthrow new Error(\"Unknown IStreamEvent type\");\n\t\t\t}\n\n\t\t\tthis._afterDataChange();\n\t\t}));\n\t}\n\n\tprotected _updateFields() {\n\t\tif (this.valueFields) {\n\t\t\tthis._valueFields = [];\n\t\t\tthis._valueFieldsF = {};\n\n\t\t\t$array.each(this.valueFields as Array<keyof this[\"_settings\"]>, (key) => {\n\t\t\t\tconst field = this.get(<any>(key + \"Field\"));\n\t\t\t\tif (field) {\n\t\t\t\t\tthis._valueFields.push(<any>key);\n\t\t\t\t\tthis._valueFieldsF[key as string] = { fieldKey: key + \"Field\", workingKey: key + \"Working\" };\n\t\t\t\t}\n\t\t\t});\n\t\t}\n\n\t\tif (this.fields) {\n\t\t\tthis._fields = [];\n\t\t\tthis._fieldsF = {};\n\n\t\t\t$array.each(this.fields as Array<keyof this[\"_settings\"]>, (key) => {\n\t\t\t\tconst field = this.get(<any>(key + \"Field\"));\n\t\t\t\tif (field) {\n\t\t\t\t\tthis._fields.push(<any>key);\n\t\t\t\t\tthis._fieldsF[key as string] = key + \"Field\";\n\t\t\t\t}\n\t\t\t});\n\t\t}\n\t}\n\n\t/**\n\t * A list of component's data items.\n\t *\n\t * @return  Data items\n\t */\n\tpublic get dataItems(): Array<DataItem<this[\"_dataItemSettings\"]>> {\n\t\treturn this._dataItems;\n\t}\n\n\tprotected processDataItem(_dataItem: DataItem<this[\"_dataItemSettings\"]>) { }\n\n\n\tpublic _makeDataItem(data: unknown): this[\"_dataItemSettings\"] {\n\t\t//const output: this[\"_dataItemSettings\"] = {};\n\t\tconst output: any = {}; // temporary to solve error\n\t\tif (this._valueFields) {\n\t\t\t$array.each(this._valueFields, (key) => {\n\t\t\t\tconst field = this.get(<any>(this._valueFieldsF[key].fieldKey));\n\t\t\t\toutput[key] = (data as any)[field];\n\n\t\t\t\toutput[this._valueFieldsF[key].workingKey] = output[key];\n\t\t\t});\n\t\t}\n\t\tif (this._fields) {\n\t\t\t$array.each(this._fields, (key) => {\n\t\t\t\tconst field = this.get(<any>(this._fieldsF[key]));\n\t\t\t\toutput[key] = (data as any)[field];\n\t\t\t});\n\t\t}\n\n\t\treturn output;\n\t}\n\n\t/**\n\t * Creates a new data item and processes it.\n\t * \n\t * @param   data         Data item settings\n\t * @param   dataContext  Data context\n\t * @return               New data item\n\t */\n\tpublic makeDataItem(data: this[\"_dataItemSettings\"], dataContext?: any): DataItem<this[\"_dataItemSettings\"]> {\n\t\tlet dataItem = new DataItem(this, dataContext, data);\n\t\tthis.processDataItem(dataItem);\n\t\treturn dataItem;\n\t}\n\n\t/**\n\t * Adds new explicit data item to series.\n\t * \n\t * @param   data         Data item settings\n\t * @param   dataContext  Data context\n\t * @return               New data item\n\t */\n\tpublic pushDataItem(data: this[\"_dataItemSettings\"], dataContext?: any): DataItem<this[\"_dataItemSettings\"]> {\n\t\tconst dataItem = this.makeDataItem(data, dataContext);\n\t\tthis._mainDataItems.push(dataItem);\n\t\treturn dataItem;\n\t}\n\n\t/**\n\t * @ignore\n\t */\n\tpublic disposeDataItem(_dataItem: DataItem<this[\"_dataItemSettings\"]>) {\n\n\t}\n\n\t/**\n\t * Shows component's data item.\n\t *\n\t * @param   dataItem   Data item\n\t * @param   _duration  Animation duration in milliseconds\n\t * @return             Promise\n\t */\n\tpublic async showDataItem(dataItem: DataItem<this[\"_dataItemSettings\"]>, _duration?: number): Promise<void> {\n\t\tdataItem.set(\"visible\", true);\n\t}\n\n\t/**\n\t * Hides component's data item.\n\t *\n\t * @param   dataItem   Data item\n\t * @param   _duration  Animation duration in milliseconds\n\t * @return             Promise\n\t */\n\tpublic async hideDataItem(dataItem: DataItem<this[\"_dataItemSettings\"]>, _duration?: number): Promise<void> {\n\t\tdataItem.set(\"visible\", false);\n\t}\n\n\tpublic _clearDirty() {\n\t\tsuper._clearDirty();\n\t\tthis._valuesDirty = false;\n\t}\n\n\tprotected _afterDataChange() {\n\n\t}\n\n\tpublic _afterChanged() {\n\t\tsuper._afterChanged();\n\t\tif (this._dataChanged) {\n\t\t\tconst type = \"datavalidated\";\n\t\t\tif (this.events.isEnabled(type)) {\n\t\t\t\tthis.events.dispatch(type, { type: type, target: this });\n\t\t\t}\n\t\t\tthis._dataChanged = false;\n\t\t}\n\n\t\tthis.inited = true;\n\t}\n\n\t/**\n\t * Forces a repaint of the element which relies on data.\n\t *\n\t * @since 5.0.21\n\t */\n\tpublic markDirtyValues(_dataItem?: DataItem<this[\"_dataItemSettings\"]>) {\n\t\tthis.markDirty();\n\t\tthis._valuesDirty = true;\n\t}\n\n\tpublic _markDirtyGroup() {\n\t\tthis._dataGrouped = false;\n\t}\n\n\t/**\n\t * @ignore\n\t */\n\tpublic markDirtySize() {\n\t\tthis._sizeDirty = true;\n\t\tthis.markDirty();\n\t}\n\n}\n","import { List } from \"./List\";\r\n/**\r\n * A [[List]] that holds components data.\r\n *\r\n * @see {@link https://www.amcharts.com/docs/v5/concepts/data/} for more info\r\n */\r\nexport class ListData extends List {\r\n    constructor() {\r\n        super(...arguments);\r\n        /**\r\n         * An optional processor for data.\r\n         *\r\n         * @see {@link https://www.amcharts.com/docs/v5/concepts/data/#Pre_processing_data} for more info\r\n         */\r\n        Object.defineProperty(this, \"processor\", {\r\n            enumerable: true,\r\n            configurable: true,\r\n            writable: true,\r\n            value: void 0\r\n        });\r\n    }\r\n    /**\r\n     * @ignore\r\n     */\r\n    incrementRef() { }\r\n    /**\r\n     * @ignore\r\n     */\r\n    decrementRef() { }\r\n    _onPush(newValue) {\r\n        if (this.processor) {\r\n            this.processor.processRow(newValue);\r\n        }\r\n        super._onPush(newValue);\r\n    }\r\n    _onInsertIndex(index, newValue) {\r\n        if (this.processor) {\r\n            this.processor.processRow(newValue);\r\n        }\r\n        super._onInsertIndex(index, newValue);\r\n    }\r\n    _onSetIndex(index, oldValue, newValue) {\r\n        if (this.processor) {\r\n            this.processor.processRow(newValue);\r\n        }\r\n        super._onSetIndex(index, oldValue, newValue);\r\n    }\r\n}\r\n/**\r\n * @deprecated\r\n * @todo remove\r\n */\r\nexport class JsonData {\r\n    constructor(value) {\r\n        Object.defineProperty(this, \"processor\", {\r\n            enumerable: true,\r\n            configurable: true,\r\n            writable: true,\r\n            value: void 0\r\n        });\r\n        Object.defineProperty(this, \"_value\", {\r\n            enumerable: true,\r\n            configurable: true,\r\n            writable: true,\r\n            value: void 0\r\n        });\r\n        this._value = value;\r\n    }\r\n    incrementRef() { }\r\n    decrementRef() { }\r\n}\r\n//# sourceMappingURL=Data.js.map","import type { ICounterRef } from \"./Counter\";\nimport { List } from \"./List\";\nimport type { DataProcessor } from \"./DataProcessor\";\n\n/**\n * Defines interface for a [[List]] with a data processor.\n */\nexport interface IDataWithProcessor {\n\n\t/**\n\t * An optional processor for data.\n\t *\n\t * @see {@link https://www.amcharts.com/docs/v5/concepts/data/#Pre_processing_data} for more info\n\t */\n\tprocessor?: DataProcessor;\n\n}\n\n/**\n * A [[List]] that holds components data.\n * \n * @see {@link https://www.amcharts.com/docs/v5/concepts/data/} for more info\n */\nexport class ListData<T> extends List<T> implements ICounterRef, IDataWithProcessor {\n\n\t/**\n\t * @ignore\n\t */\n\tpublic incrementRef(): void { }\n\n\t/**\n\t * @ignore\n\t */\n\tpublic decrementRef(): void { }\n\n\t/**\n\t * An optional processor for data.\n\t *\n\t * @see {@link https://www.amcharts.com/docs/v5/concepts/data/#Pre_processing_data} for more info\n\t */\n\tpublic processor?: DataProcessor;\n\n\tprotected _onPush(newValue: T) {\n\t\tif (this.processor) {\n\t\t\tthis.processor.processRow(newValue);\n\t\t}\n\t\tsuper._onPush(newValue);\n\t}\n\n\tprotected _onInsertIndex(index: number, newValue: T) {\n\t\tif (this.processor) {\n\t\t\tthis.processor.processRow(newValue);\n\t\t}\n\t\tsuper._onInsertIndex(index, newValue);\n\t}\n\n\tprotected _onSetIndex(index: number, oldValue: T, newValue: T) {\n\t\tif (this.processor) {\n\t\t\tthis.processor.processRow(newValue);\n\t\t}\n\t\tsuper._onSetIndex(index, oldValue, newValue);\n\t}\n}\n\n/**\n * @deprecated\n * @todo remove\n */\nexport class JsonData<T> implements ICounterRef, IDataWithProcessor {\n\tpublic incrementRef(): void { }\n\tpublic decrementRef(): void { }\n\n\tpublic processor?: DataProcessor;\n\tprotected _value: T;\n\n\tconstructor(value: T) {\n\t\tthis._value = value;\n\t}\n\n\t// TODO: how do we go about calling processor here?\n\n}\n","/**\r\n * ============================================================================\r\n * IMPORTS\r\n * ============================================================================\r\n * @hidden\r\n */\r\nimport * as $type from \"./Type\";\r\nimport * as $utils from \"./Utils\";\r\n/**\r\n * Returns a `Promise` which can be used to execute code after number of\r\n * milliseconds.\r\n *\r\n * @param   ms  Sleep duration in ms\r\n * @return      Promise\r\n */\r\nexport function sleep(ms) {\r\n    return new Promise((resolve, _reject) => {\r\n        setTimeout(resolve, ms);\r\n    });\r\n}\r\n/**\r\n * Maps time period names to their numeric representations in milliseconds.\r\n *\r\n * @ignore Exclude from docs\r\n */\r\nexport let timeUnitDurations = {\r\n    millisecond: 1,\r\n    second: 1000,\r\n    minute: 60000,\r\n    hour: 3600000,\r\n    day: 86400000,\r\n    week: 604800000,\r\n    month: 365.242 / 12 * 86400000,\r\n    year: 31536000000\r\n};\r\n/**\r\n * Returns the next time unit that goes after source `unit`.\r\n *\r\n * E.g. \"hour\" is the next unit after \"minute\", etc.\r\n *\r\n * @ignore Exclude from docs\r\n * @param unit  Source time unit\r\n * @return Next time unit\r\n */\r\nexport function getNextUnit(unit) {\r\n    switch (unit) {\r\n        case \"year\":\r\n            return;\r\n        case \"month\":\r\n            return \"year\";\r\n        case \"week\":\r\n            return \"month\";\r\n        case \"day\":\r\n            return \"month\"; // not a mistake\r\n        case \"hour\":\r\n            return \"day\";\r\n        case \"minute\":\r\n            return \"hour\";\r\n        case \"second\":\r\n            return \"minute\";\r\n        case \"millisecond\":\r\n            return \"second\";\r\n    }\r\n}\r\n/**\r\n * Returns number of milliseconds in the `count` of time `unit`.\r\n *\r\n * Available units: \"millisecond\", \"second\", \"minute\", \"hour\", \"day\", \"week\",\r\n * \"month\", and \"year\".\r\n *\r\n * @param unit   Time unit\r\n * @param count  Number of units\r\n * @return Milliseconds\r\n */\r\nexport function getDuration(unit, count) {\r\n    if (count == null) {\r\n        count = 1;\r\n    }\r\n    return timeUnitDurations[unit] * count;\r\n}\r\n/**\r\n * @ignore\r\n */\r\nexport function getIntervalDuration(interval) {\r\n    if (interval) {\r\n        return timeUnitDurations[interval.timeUnit] * interval.count;\r\n    }\r\n    return 0;\r\n}\r\nexport function getDateIntervalDuration(interval, date, firstDateOfWeek, utc, timezone) {\r\n    const unit = interval.timeUnit;\r\n    const count = interval.count;\r\n    if (unit == \"hour\" || unit == \"minute\" || unit == \"second\" || unit == \"millisecond\") {\r\n        return timeUnitDurations[interval.timeUnit] * interval.count;\r\n    }\r\n    else {\r\n        const firstTime = round(new Date(date.getTime()), unit, count, firstDateOfWeek, utc, undefined, timezone).getTime();\r\n        let lastTime = firstTime + count * getDuration(unit) * 1.05;\r\n        lastTime = round(new Date(lastTime), unit, 1, firstDateOfWeek, utc, undefined, timezone).getTime();\r\n        return lastTime - firstTime;\r\n    }\r\n}\r\n/**\r\n * Returns current `Date` object.\r\n *\r\n * @return Current date\r\n */\r\nexport function now() {\r\n    return new Date();\r\n}\r\n/**\r\n * Returns current timestamp.\r\n *\r\n * @return Current timestamp\r\n */\r\nexport function getTime() {\r\n    return now().getTime();\r\n}\r\n/**\r\n * Returns a copy of the `Date` object.\r\n *\r\n * @param date  Source date\r\n * @return Copy\r\n */\r\nexport function copy(date) {\r\n    return new Date(date.getTime()); // todo: check if this is ok. new Date(date) used to strip milliseconds on FF in v3\r\n}\r\n/**\r\n * Checks if the `unit` part of two `Date` objects do not match. Two dates\r\n * represent a \"range\" of time, rather the same time date.\r\n *\r\n * @param timeOne  timestamp\r\n * @param timeTwo  timestamp\r\n * @param unit     Time unit to check\r\n * @return Range?\r\n */\r\nexport function checkChange(timeOne, timeTwo, unit, utc, timezone) {\r\n    // quick\r\n    if ((timeTwo - timeOne) > getDuration(unit, 1.2)) {\r\n        return true;\r\n    }\r\n    let dateOne = new Date(timeOne);\r\n    let dateTwo = new Date(timeTwo);\r\n    if (timezone) {\r\n        dateOne = timezone.convertLocal(dateOne);\r\n        dateTwo = timezone.convertLocal(dateTwo);\r\n    }\r\n    let timeZoneOffset1 = 0;\r\n    let timeZoneOffset2 = 0;\r\n    if (!utc && unit != \"millisecond\") {\r\n        timeZoneOffset1 = dateOne.getTimezoneOffset();\r\n        dateOne.setUTCMinutes(dateOne.getUTCMinutes() - timeZoneOffset1);\r\n        timeZoneOffset2 = dateTwo.getTimezoneOffset();\r\n        dateTwo.setUTCMinutes(dateTwo.getUTCMinutes() - timeZoneOffset2);\r\n    }\r\n    let changed = false;\r\n    switch (unit) {\r\n        case \"year\":\r\n            if (dateOne.getUTCFullYear() != dateTwo.getUTCFullYear()) {\r\n                changed = true;\r\n            }\r\n            break;\r\n        case \"month\":\r\n            if (dateOne.getUTCFullYear() != dateTwo.getUTCFullYear()) {\r\n                changed = true;\r\n            }\r\n            else if (dateOne.getUTCMonth() != dateTwo.getUTCMonth()) {\r\n                changed = true;\r\n            }\r\n            break;\r\n        case \"day\":\r\n            if (dateOne.getUTCMonth() != dateTwo.getUTCMonth()) {\r\n                changed = true;\r\n            }\r\n            else if (dateOne.getUTCDate() != dateTwo.getUTCDate()) {\r\n                changed = true;\r\n            }\r\n            break;\r\n        case \"hour\":\r\n            if (dateOne.getUTCHours() != dateTwo.getUTCHours()) {\r\n                changed = true;\r\n            }\r\n            break;\r\n        case \"minute\":\r\n            if (dateOne.getUTCMinutes() != dateTwo.getUTCMinutes()) {\r\n                changed = true;\r\n            }\r\n            break;\r\n        case \"second\":\r\n            if (dateOne.getUTCSeconds() != dateTwo.getUTCSeconds()) {\r\n                changed = true;\r\n            }\r\n            break;\r\n        case \"millisecond\":\r\n            if (dateOne.getTime() != dateTwo.getTime()) {\r\n                changed = true;\r\n            }\r\n            break;\r\n    }\r\n    if (changed) {\r\n        return changed;\r\n    }\r\n    let nextUnit = getNextUnit(unit);\r\n    if (nextUnit) {\r\n        return checkChange(timeOne, timeTwo, nextUnit, utc, timezone);\r\n    }\r\n    else {\r\n        return false;\r\n    }\r\n}\r\n/**\r\n * Adds `count` of time `unit` to the source date. Returns a modified `Date` object.\r\n *\r\n * @param date   Source date\r\n * @param unit   Time unit\r\n * @param count  Number of units to add\r\n * @return Modified date\r\n */\r\nexport function add(date, unit, count, utc, timezone) {\r\n    let timeZoneOffset = 0;\r\n    if (!utc && unit != \"millisecond\") {\r\n        timeZoneOffset = date.getTimezoneOffset();\r\n        if (timezone) {\r\n            timeZoneOffset -= timezone.offsetUTC(date);\r\n        }\r\n        date.setUTCMinutes(date.getUTCMinutes() - timeZoneOffset);\r\n    }\r\n    switch (unit) {\r\n        case \"day\":\r\n            let day = date.getUTCDate();\r\n            date.setUTCDate(day + count);\r\n            break;\r\n        case \"second\":\r\n            let seconds = date.getUTCSeconds();\r\n            date.setUTCSeconds(seconds + count);\r\n            break;\r\n        case \"millisecond\":\r\n            let milliseconds = date.getUTCMilliseconds();\r\n            date.setUTCMilliseconds(milliseconds + count);\r\n            break;\r\n        case \"hour\":\r\n            let hours = date.getUTCHours();\r\n            date.setUTCHours(hours + count);\r\n            break;\r\n        case \"minute\":\r\n            let minutes = date.getUTCMinutes();\r\n            date.setUTCMinutes(minutes + count);\r\n            break;\r\n        case \"year\":\r\n            let year = date.getUTCFullYear();\r\n            date.setUTCFullYear(year + count);\r\n            break;\r\n        case \"month\":\r\n            const endDays = date.getUTCDate();\r\n            const startDays = new Date(date.getUTCFullYear(), date.getUTCMonth(), 0).getUTCDate();\r\n            let month = date.getUTCMonth();\r\n            if (endDays > startDays) {\r\n                date.setUTCMonth(month + count, startDays);\r\n            }\r\n            else {\r\n                date.setUTCMonth(month + count);\r\n            }\r\n            break;\r\n        case \"week\":\r\n            let wday = date.getUTCDate();\r\n            date.setUTCDate(wday + count * 7);\r\n            break;\r\n    }\r\n    if (!utc && unit != \"millisecond\") {\r\n        date.setUTCMinutes(date.getUTCMinutes() + timeZoneOffset);\r\n        if (unit == \"day\" || unit == \"week\" || unit == \"month\" || unit == \"year\") {\r\n            let newTimeZoneOffset = date.getTimezoneOffset();\r\n            if (timezone) {\r\n                newTimeZoneOffset += timezone.offsetUTC(date);\r\n            }\r\n            if (newTimeZoneOffset != timeZoneOffset) {\r\n                let diff = newTimeZoneOffset - timeZoneOffset;\r\n                date.setUTCMinutes(date.getUTCMinutes() + diff);\r\n                // solves issues if new time falls back to old time zone\r\n                if (date.getTimezoneOffset() != newTimeZoneOffset) {\r\n                    date.setUTCMinutes(date.getUTCMinutes() - diff);\r\n                }\r\n            }\r\n        }\r\n    }\r\n    return date;\r\n}\r\n/**\r\n * @ignore\r\n */\r\nexport function roun(time, unit, count, root, firstTime) {\r\n    let firstDate;\r\n    if (firstTime != null) {\r\n        firstDate = new Date(firstTime);\r\n    }\r\n    return round(new Date(time), unit, count, root.locale.firstDayOfWeek, root.utc, firstDate, root.timezone).getTime();\r\n}\r\n/**\r\n * \"Rounds\" the date to specific time unit.\r\n *\r\n * @param date             Source date\r\n * @param unit             Time unit\r\n * @param count            Number of units to round to\r\n * @param firstDateOfWeek  First day of week\r\n * @param utc              Use UTC timezone\r\n * @param firstDate        First date to round to\r\n * @param roundMinutes     Minutes to round to (some timezones use non-whole hour)\r\n * @param timezone         Use specific named timezone when rounding\r\n * @return New date\r\n */\r\nexport function round(date, unit, count, firstDateOfWeek, utc, firstDate, timezone) {\r\n    if (!timezone || utc) {\r\n        let timeZoneOffset = 0;\r\n        if (!utc && unit != \"millisecond\") {\r\n            timeZoneOffset = date.getTimezoneOffset();\r\n            date.setUTCMinutes(date.getUTCMinutes() - timeZoneOffset);\r\n        }\r\n        switch (unit) {\r\n            case \"day\":\r\n                let day = date.getUTCDate();\r\n                if (count > 1) {\r\n                    //\tday = Math.floor(day / count) * count;\r\n                    if (firstDate) {\r\n                        firstDate = round(firstDate, \"day\", 1);\r\n                        let difference = date.getTime() - firstDate.getTime();\r\n                        let unitCount = Math.floor(difference / getDuration(\"day\") / count);\r\n                        let duration = getDuration(\"day\", unitCount * count);\r\n                        date.setTime(firstDate.getTime() + duration - timeZoneOffset * getDuration(\"minute\"));\r\n                    }\r\n                }\r\n                else {\r\n                    date.setUTCDate(day);\r\n                }\r\n                date.setUTCHours(0, 0, 0, 0);\r\n                break;\r\n            case \"second\":\r\n                let seconds = date.getUTCSeconds();\r\n                if (count > 1) {\r\n                    seconds = Math.floor(seconds / count) * count;\r\n                }\r\n                date.setUTCSeconds(seconds, 0);\r\n                break;\r\n            case \"millisecond\":\r\n                if (count == 1) {\r\n                    return date; // much better for perf!\r\n                }\r\n                let milliseconds = date.getUTCMilliseconds();\r\n                milliseconds = Math.floor(milliseconds / count) * count;\r\n                date.setUTCMilliseconds(milliseconds);\r\n                break;\r\n            case \"hour\":\r\n                let hours = date.getUTCHours();\r\n                if (count > 1) {\r\n                    hours = Math.floor(hours / count) * count;\r\n                }\r\n                date.setUTCHours(hours, 0, 0, 0);\r\n                break;\r\n            case \"minute\":\r\n                let minutes = date.getUTCMinutes();\r\n                if (count > 1) {\r\n                    minutes = Math.floor(minutes / count) * count;\r\n                }\r\n                date.setUTCMinutes(minutes, 0, 0);\r\n                break;\r\n            case \"month\":\r\n                let month = date.getUTCMonth();\r\n                if (count > 1) {\r\n                    month = Math.floor(month / count) * count;\r\n                }\r\n                date.setUTCMonth(month, 1);\r\n                date.setUTCHours(0, 0, 0, 0);\r\n                break;\r\n            case \"year\":\r\n                let year = date.getUTCFullYear();\r\n                if (count > 1) {\r\n                    year = Math.floor(year / count) * count;\r\n                }\r\n                date.setUTCFullYear(year, 0, 1);\r\n                date.setUTCHours(0, 0, 0, 0);\r\n                break;\r\n            case \"week\":\r\n                if (count > 1) {\r\n                    if (firstDate) {\r\n                        firstDate = round(firstDate, \"week\", 1);\r\n                        let difference = date.getTime() - firstDate.getTime();\r\n                        let unitCount = Math.floor(difference / getDuration(\"week\") / count);\r\n                        let duration = getDuration(\"week\", unitCount * count);\r\n                        date.setTime(firstDate.getTime() + duration - timeZoneOffset * getDuration(\"minute\"));\r\n                    }\r\n                }\r\n                let wday = date.getUTCDate();\r\n                let weekDay = date.getUTCDay();\r\n                if (!$type.isNumber(firstDateOfWeek)) {\r\n                    firstDateOfWeek = 1;\r\n                }\r\n                if (weekDay >= firstDateOfWeek) {\r\n                    wday = wday - weekDay + firstDateOfWeek;\r\n                }\r\n                else {\r\n                    wday = wday - (7 + weekDay) + firstDateOfWeek;\r\n                }\r\n                date.setUTCDate(wday);\r\n                date.setUTCHours(0, 0, 0, 0);\r\n                break;\r\n        }\r\n        if (!utc && unit != \"millisecond\") {\r\n            date.setUTCMinutes(date.getUTCMinutes() + timeZoneOffset);\r\n            if (unit == \"day\" || unit == \"week\" || unit == \"month\" || unit == \"year\") {\r\n                let newTimeZoneOffset = date.getTimezoneOffset();\r\n                if (newTimeZoneOffset != timeZoneOffset) {\r\n                    let diff = newTimeZoneOffset - timeZoneOffset;\r\n                    date.setUTCMinutes(date.getUTCMinutes() + diff);\r\n                }\r\n            }\r\n        }\r\n        return date;\r\n    }\r\n    else {\r\n        if (isNaN(date.getTime())) {\r\n            return date;\r\n        }\r\n        let tzoffset = timezone.offsetUTC(date);\r\n        let timeZoneOffset = date.getTimezoneOffset();\r\n        let parsedDate = timezone.parseDate(date);\r\n        let year = parsedDate.year;\r\n        let month = parsedDate.month;\r\n        let day = parsedDate.day;\r\n        let hour = parsedDate.hour;\r\n        let minute = parsedDate.minute;\r\n        let second = parsedDate.second;\r\n        let millisecond = parsedDate.millisecond;\r\n        let weekday = parsedDate.weekday;\r\n        let offsetDif = tzoffset - timeZoneOffset;\r\n        switch (unit) {\r\n            case \"day\":\r\n                if (count > 1 && firstDate) {\r\n                    firstDate = round(firstDate, \"day\", 1, firstDateOfWeek, utc, undefined, timezone);\r\n                    let difference = date.getTime() - firstDate.getTime();\r\n                    let unitCount = Math.floor(difference / getDuration(\"day\") / count);\r\n                    let duration = getDuration(\"day\", unitCount * count);\r\n                    date.setTime(firstDate.getTime() + duration);\r\n                    parsedDate = timezone.parseDate(date);\r\n                    year = parsedDate.year;\r\n                    month = parsedDate.month;\r\n                    day = parsedDate.day;\r\n                }\r\n                hour = 0;\r\n                minute = offsetDif;\r\n                second = 0;\r\n                millisecond = 0;\r\n                break;\r\n            case \"second\":\r\n                minute += offsetDif;\r\n                if (count > 1) {\r\n                    second = Math.floor(second / count) * count;\r\n                }\r\n                millisecond = 0;\r\n                break;\r\n            case \"millisecond\":\r\n                minute += offsetDif;\r\n                if (count > 1) {\r\n                    millisecond = Math.floor(millisecond / count) * count;\r\n                }\r\n                break;\r\n            case \"hour\":\r\n                if (count > 1) {\r\n                    hour = Math.floor(hour / count) * count;\r\n                }\r\n                minute = offsetDif;\r\n                second = 0;\r\n                millisecond = 0;\r\n                break;\r\n            case \"minute\":\r\n                if (count > 1) {\r\n                    minute = Math.floor(minute / count) * count;\r\n                }\r\n                minute += offsetDif;\r\n                second = 0;\r\n                millisecond = 0;\r\n                break;\r\n            case \"month\":\r\n                if (count > 1) {\r\n                    month = Math.floor(month / count) * count;\r\n                }\r\n                day = 1;\r\n                hour = 0;\r\n                minute = offsetDif;\r\n                second = 0;\r\n                millisecond = 0;\r\n                break;\r\n            case \"year\":\r\n                if (count > 1) {\r\n                    year = Math.floor(year / count) * count;\r\n                }\r\n                month = 0;\r\n                day = 1;\r\n                hour = 0;\r\n                minute = offsetDif;\r\n                second = 0;\r\n                millisecond = 0;\r\n                break;\r\n            case \"week\":\r\n                if (!$type.isNumber(firstDateOfWeek)) {\r\n                    firstDateOfWeek = 1;\r\n                }\r\n                if (weekday >= firstDateOfWeek) {\r\n                    day = day - weekday + firstDateOfWeek;\r\n                }\r\n                else {\r\n                    day = day - (7 + weekday) + firstDateOfWeek;\r\n                }\r\n                hour = 0;\r\n                minute = offsetDif;\r\n                second = 0;\r\n                millisecond = 0;\r\n                break;\r\n        }\r\n        date = new Date(year, month, day, hour, minute, second, millisecond);\r\n        let newTimeZoneOffset = date.getTimezoneOffset();\r\n        let newTzoffset = timezone.offsetUTC(date);\r\n        let newDiff = newTzoffset - newTimeZoneOffset;\r\n        if (newDiff != offsetDif) {\r\n            date.setTime(date.getTime() + (newDiff - offsetDif) * 60000);\r\n        }\r\n        return date;\r\n    }\r\n}\r\n/**\r\n * @ignore\r\n */\r\nexport function chooseInterval(index, duration, gridCount, intervals) {\r\n    let gridInterval = intervals[index];\r\n    let intervalDuration = getIntervalDuration(gridInterval);\r\n    let lastIndex = intervals.length - 1;\r\n    if (index >= lastIndex) {\r\n        return Object.assign({}, intervals[lastIndex]);\r\n    }\r\n    let count = Math.ceil(duration / intervalDuration);\r\n    if (duration < intervalDuration && index > 0) {\r\n        return Object.assign({}, intervals[index - 1]);\r\n    }\r\n    if (count <= gridCount) {\r\n        return Object.assign({}, intervals[index]);\r\n    }\r\n    else {\r\n        if (index + 1 < intervals.length) {\r\n            return chooseInterval(index + 1, duration, gridCount, intervals);\r\n        }\r\n        else {\r\n            return Object.assign({}, intervals[index]);\r\n        }\r\n    }\r\n}\r\n/**\r\n * @ignore\r\n */\r\nexport function getUnitValue(date, unit) {\r\n    switch (unit) {\r\n        case \"day\":\r\n            return date.getDate();\r\n        case \"second\":\r\n            return date.getSeconds();\r\n        case \"millisecond\":\r\n            return date.getMilliseconds();\r\n        case \"hour\":\r\n            return date.getHours();\r\n        case \"minute\":\r\n            return date.getMinutes();\r\n        case \"month\":\r\n            return date.getMonth();\r\n        case \"year\":\r\n            return date.getFullYear();\r\n        case \"week\":\r\n            return $utils.getWeek(date);\r\n    }\r\n}\r\n//# sourceMappingURL=Time.js.map","/**\n * ============================================================================\n * IMPORTS\n * ============================================================================\n * @hidden\n */\nimport * as $type from \"./Type\";\nimport * as $utils from \"./Utils\";\nimport type { Timezone } from \"./Timezone\";\nimport type { Root } from \"../Root\";\n\nexport type TimeUnit = \"millisecond\" | \"second\" | \"minute\" | \"hour\" | \"day\" | \"week\" | \"month\" | \"year\";\n\nexport interface ITimeInterval {\n\ttimeUnit: TimeUnit;\n\tcount: number;\n}\n\n\n/**\n * Returns a `Promise` which can be used to execute code after number of\n * milliseconds.\n *\n * @param   ms  Sleep duration in ms\n * @return      Promise\n */\nexport function sleep(ms: number): Promise<void> {\n\treturn new Promise((resolve, _reject) => {\n\t\tsetTimeout(resolve, ms);\n\t});\n}\n\n\n/**\n * Maps time period names to their numeric representations in milliseconds.\n *\n * @ignore Exclude from docs\n */\nexport let timeUnitDurations: { [Key in TimeUnit]: number } = {\n\tmillisecond: 1,\n\tsecond: 1000,\n\tminute: 60000,\n\thour: 3600000,\n\tday: 86400000,\n\tweek: 604800000,\n\tmonth: 365.242 / 12 * 86400000,\n\tyear: 31536000000\n};\n\n/**\n * Returns the next time unit that goes after source `unit`.\n *\n * E.g. \"hour\" is the next unit after \"minute\", etc.\n *\n * @ignore Exclude from docs\n * @param unit  Source time unit\n * @return Next time unit\n */\nexport function getNextUnit(unit: TimeUnit): TimeUnit | undefined {\n\tswitch (unit) {\n\t\tcase \"year\":\n\t\t\treturn;\n\t\tcase \"month\":\n\t\t\treturn \"year\";\n\n\t\tcase \"week\":\n\t\t\treturn \"month\";\n\n\t\tcase \"day\":\n\t\t\treturn \"month\"; // not a mistake\n\n\t\tcase \"hour\":\n\t\t\treturn \"day\";\n\n\t\tcase \"minute\":\n\t\t\treturn \"hour\";\n\n\t\tcase \"second\":\n\t\t\treturn \"minute\"\n\n\t\tcase \"millisecond\":\n\t\t\treturn \"second\";\n\t}\n}\n\n/**\n * Returns number of milliseconds in the `count` of time `unit`.\n *\n * Available units: \"millisecond\", \"second\", \"minute\", \"hour\", \"day\", \"week\",\n * \"month\", and \"year\".\n *\n * @param unit   Time unit\n * @param count  Number of units\n * @return Milliseconds\n */\nexport function getDuration(unit: TimeUnit, count?: number): number {\n\tif (count == null) {\n\t\tcount = 1;\n\t}\n\treturn timeUnitDurations[unit] * count;\n}\n\n/**\n * @ignore\n */\nexport function getIntervalDuration(interval: ITimeInterval | undefined) {\n\tif (interval) {\n\t\treturn timeUnitDurations[interval.timeUnit] * interval.count;\n\t}\n\treturn 0;\n}\n\n\nexport function getDateIntervalDuration(interval: ITimeInterval, date: Date, firstDateOfWeek?: number, utc?: boolean, timezone?: Timezone) {\n\tconst unit = interval.timeUnit;\n\tconst count = interval.count;\n\tif (unit == \"hour\" || unit == \"minute\" || unit == \"second\" || unit == \"millisecond\") {\n\t\treturn timeUnitDurations[interval.timeUnit] * interval.count;\n\t}\n\telse {\n\t\tconst firstTime = round(new Date(date.getTime()), unit, count, firstDateOfWeek, utc, undefined, timezone).getTime();\n\t\tlet lastTime = firstTime + count * getDuration(unit) * 1.05;\n\t\tlastTime = round(new Date(lastTime), unit, 1, firstDateOfWeek, utc, undefined, timezone).getTime();\n\t\treturn lastTime - firstTime;\n\t}\n}\n\n/**\n * Returns current `Date` object.\n *\n * @return Current date\n */\nexport function now(): Date {\n\treturn new Date();\n}\n\n/**\n * Returns current timestamp.\n *\n * @return Current timestamp\n */\nexport function getTime(): number {\n\treturn now().getTime();\n}\n\n/**\n * Returns a copy of the `Date` object.\n *\n * @param date  Source date\n * @return Copy\n */\nexport function copy(date: Date): Date {\n\treturn new Date(date.getTime()); // todo: check if this is ok. new Date(date) used to strip milliseconds on FF in v3\n}\n\n/**\n * Checks if the `unit` part of two `Date` objects do not match. Two dates\n * represent a \"range\" of time, rather the same time date.\n *\n * @param timeOne  timestamp\n * @param timeTwo  timestamp\n * @param unit     Time unit to check\n * @return Range?\n */\nexport function checkChange(timeOne: number, timeTwo: number, unit: TimeUnit, utc?: boolean, timezone?: Timezone): boolean {\n\t// quick\n\tif ((timeTwo - timeOne) > getDuration(unit, 1.2)) {\n\t\treturn true;\n\t}\n\n\tlet dateOne = new Date(timeOne);\n\tlet dateTwo = new Date(timeTwo);\n\n\tif (timezone) {\n\t\tdateOne = timezone.convertLocal(dateOne);\n\t\tdateTwo = timezone.convertLocal(dateTwo);\n\t}\n\n\tlet timeZoneOffset1 = 0;\n\tlet timeZoneOffset2 = 0;\n\n\tif (!utc && unit != \"millisecond\") {\n\t\ttimeZoneOffset1 = dateOne.getTimezoneOffset();\n\t\tdateOne.setUTCMinutes(dateOne.getUTCMinutes() - timeZoneOffset1);\n\n\t\ttimeZoneOffset2 = dateTwo.getTimezoneOffset();\n\t\tdateTwo.setUTCMinutes(dateTwo.getUTCMinutes() - timeZoneOffset2);\n\t}\n\n\tlet changed = false;\n\tswitch (unit) {\n\t\tcase \"year\":\n\t\t\tif (dateOne.getUTCFullYear() != dateTwo.getUTCFullYear()) {\n\t\t\t\tchanged = true;\n\t\t\t}\n\t\t\tbreak;\n\t\tcase \"month\":\n\t\t\tif (dateOne.getUTCFullYear() != dateTwo.getUTCFullYear()) {\n\t\t\t\tchanged = true;\n\t\t\t}\n\t\t\telse if (dateOne.getUTCMonth() != dateTwo.getUTCMonth()) {\n\t\t\t\tchanged = true;\n\t\t\t}\n\t\t\tbreak;\n\n\t\tcase \"day\":\n\t\t\tif (dateOne.getUTCMonth() != dateTwo.getUTCMonth()) {\n\t\t\t\tchanged = true;\n\t\t\t}\n\t\t\telse if (dateOne.getUTCDate() != dateTwo.getUTCDate()) {\n\t\t\t\tchanged = true;\n\t\t\t}\n\n\t\t\tbreak;\n\n\t\tcase \"hour\":\n\t\t\tif (dateOne.getUTCHours() != dateTwo.getUTCHours()) {\n\t\t\t\tchanged = true;\n\t\t\t}\n\t\t\tbreak;\n\n\t\tcase \"minute\":\n\t\t\tif (dateOne.getUTCMinutes() != dateTwo.getUTCMinutes()) {\n\t\t\t\tchanged = true;\n\t\t\t}\n\n\t\t\tbreak;\n\n\t\tcase \"second\":\n\t\t\tif (dateOne.getUTCSeconds() != dateTwo.getUTCSeconds()) {\n\t\t\t\tchanged = true;\n\t\t\t}\n\t\t\tbreak;\n\n\t\tcase \"millisecond\":\n\t\t\tif (dateOne.getTime() != dateTwo.getTime()) {\n\t\t\t\tchanged = true;\n\t\t\t}\n\t\t\tbreak;\n\t}\n\n\tif (changed) {\n\t\treturn changed;\n\t}\n\n\tlet nextUnit = getNextUnit(unit);\n\tif (nextUnit) {\n\t\treturn checkChange(timeOne, timeTwo, nextUnit, utc, timezone);\n\t}\n\telse {\n\t\treturn false;\n\t}\n}\n\n/**\n * Adds `count` of time `unit` to the source date. Returns a modified `Date` object.\n *\n * @param date   Source date\n * @param unit   Time unit\n * @param count  Number of units to add\n * @return Modified date\n */\nexport function add(date: Date, unit: TimeUnit, count: number, utc?: boolean, timezone?: Timezone): Date {\n\tlet timeZoneOffset = 0;\n\n\tif (!utc && unit != \"millisecond\") {\n\t\ttimeZoneOffset = date.getTimezoneOffset();\n\n\t\tif (timezone) {\n\t\t\ttimeZoneOffset -= timezone.offsetUTC(date);\n\t\t}\n\n\t\tdate.setUTCMinutes(date.getUTCMinutes() - timeZoneOffset);\n\t}\n\n\n\tswitch (unit) {\n\t\tcase \"day\":\n\t\t\tlet day: number = date.getUTCDate();\n\t\t\tdate.setUTCDate(day + count);\n\t\t\tbreak;\n\n\t\tcase \"second\":\n\t\t\tlet seconds: number = date.getUTCSeconds();\n\t\t\tdate.setUTCSeconds(seconds + count);\n\t\t\tbreak;\n\n\t\tcase \"millisecond\":\n\t\t\tlet milliseconds: number = date.getUTCMilliseconds();\n\t\t\tdate.setUTCMilliseconds(milliseconds + count);\n\t\t\tbreak;\n\n\t\tcase \"hour\":\n\t\t\tlet hours: number = date.getUTCHours();\n\t\t\tdate.setUTCHours(hours + count);\n\t\t\tbreak;\n\n\t\tcase \"minute\":\n\t\t\tlet minutes: number = date.getUTCMinutes();\n\t\t\tdate.setUTCMinutes(minutes + count);\n\t\t\tbreak;\n\n\t\tcase \"year\":\n\t\t\tlet year: number = date.getUTCFullYear();\n\t\t\tdate.setUTCFullYear(year + count);\n\t\t\tbreak;\n\n\t\tcase \"month\":\n\t\t\tconst endDays = date.getUTCDate();\n\t\t\tconst startDays = new Date(date.getUTCFullYear(), date.getUTCMonth(), 0).getUTCDate();\n\t\t\tlet month: number = date.getUTCMonth();\n\t\t\tif (endDays > startDays) {\n\t\t\t\tdate.setUTCMonth(month + count, startDays);\n\t\t\t}\n\t\t\telse {\n\t\t\t\tdate.setUTCMonth(month + count);\n\t\t\t}\n\t\t\tbreak;\n\n\t\tcase \"week\":\n\t\t\tlet wday: number = date.getUTCDate();\n\t\t\tdate.setUTCDate(wday + count * 7);\n\t\t\tbreak;\n\t}\n\n\n\tif (!utc && unit != \"millisecond\") {\n\t\tdate.setUTCMinutes(date.getUTCMinutes() + timeZoneOffset);\n\t\tif (unit == \"day\" || unit == \"week\" || unit == \"month\" || unit == \"year\") {\n\n\t\t\tlet newTimeZoneOffset = date.getTimezoneOffset();\n\n\t\t\tif (timezone) {\n\t\t\t\tnewTimeZoneOffset += timezone.offsetUTC(date);\n\t\t\t}\n\n\t\t\tif (newTimeZoneOffset != timeZoneOffset) {\n\t\t\t\tlet diff = newTimeZoneOffset - timeZoneOffset;\n\t\t\t\tdate.setUTCMinutes(date.getUTCMinutes() + diff);\n\n\t\t\t\t// solves issues if new time falls back to old time zone\n\t\t\t\tif (date.getTimezoneOffset() != newTimeZoneOffset) {\n\t\t\t\t\tdate.setUTCMinutes(date.getUTCMinutes() - diff);\n\t\t\t\t}\n\t\t\t}\n\t\t}\n\t}\n\n\treturn date;\n}\n\n/**\n * @ignore\n */\nexport function roun(time: number, unit: TimeUnit, count: number, root: Root, firstTime?: number): number {\n\tlet firstDate;\n\tif (firstTime != null) {\n\t\tfirstDate = new Date(firstTime);\n\t}\n\treturn round(new Date(time), unit, count, root.locale.firstDayOfWeek, root.utc, firstDate, root.timezone).getTime();\n}\n\n\n/**\n * \"Rounds\" the date to specific time unit.\n *\n * @param date             Source date\n * @param unit             Time unit\n * @param count            Number of units to round to\n * @param firstDateOfWeek  First day of week\n * @param utc              Use UTC timezone\n * @param firstDate        First date to round to\n * @param roundMinutes     Minutes to round to (some timezones use non-whole hour)\n * @param timezone         Use specific named timezone when rounding\n * @return New date\n */\nexport function round(date: Date, unit: TimeUnit, count: number, firstDateOfWeek?: number, utc?: boolean, firstDate?: Date, timezone?: Timezone): Date {\n\tif (!timezone || utc) {\n\n\t\tlet timeZoneOffset = 0;\n\n\t\tif (!utc && unit != \"millisecond\") {\n\t\t\ttimeZoneOffset = date.getTimezoneOffset();\n\t\t\tdate.setUTCMinutes(date.getUTCMinutes() - timeZoneOffset);\n\t\t}\n\n\t\tswitch (unit) {\n\n\t\t\tcase \"day\":\n\t\t\t\tlet day = date.getUTCDate();\n\n\t\t\t\tif (count > 1) {\n\t\t\t\t\t//\tday = Math.floor(day / count) * count;\n\t\t\t\t\tif (firstDate) {\n\t\t\t\t\t\tfirstDate = round(firstDate, \"day\", 1);\n\n\t\t\t\t\t\tlet difference = date.getTime() - firstDate.getTime();\n\t\t\t\t\t\tlet unitCount = Math.floor(difference / getDuration(\"day\") / count);\n\t\t\t\t\t\tlet duration = getDuration(\"day\", unitCount * count);\n\t\t\t\t\t\tdate.setTime(firstDate.getTime() + duration - timeZoneOffset * getDuration(\"minute\"));\n\t\t\t\t\t}\n\t\t\t\t}\n\t\t\t\telse {\n\t\t\t\t\tdate.setUTCDate(day);\n\t\t\t\t}\n\t\t\t\tdate.setUTCHours(0, 0, 0, 0);\n\n\t\t\t\tbreak;\n\n\t\t\tcase \"second\":\n\t\t\t\tlet seconds = date.getUTCSeconds();\n\t\t\t\tif (count > 1) {\n\t\t\t\t\tseconds = Math.floor(seconds / count) * count;\n\t\t\t\t}\n\t\t\t\tdate.setUTCSeconds(seconds, 0);\n\t\t\t\tbreak;\n\n\t\t\tcase \"millisecond\":\n\t\t\t\tif (count == 1) {\n\t\t\t\t\treturn date; // much better for perf!\n\t\t\t\t}\n\n\t\t\t\tlet milliseconds = date.getUTCMilliseconds();\n\t\t\t\tmilliseconds = Math.floor(milliseconds / count) * count;\n\t\t\t\tdate.setUTCMilliseconds(milliseconds);\n\t\t\t\tbreak;\n\n\t\t\tcase \"hour\":\n\n\t\t\t\tlet hours = date.getUTCHours();\n\t\t\t\tif (count > 1) {\n\t\t\t\t\thours = Math.floor(hours / count) * count;\n\t\t\t\t}\n\t\t\t\tdate.setUTCHours(hours, 0, 0, 0);\n\n\t\t\t\tbreak;\n\n\t\t\tcase \"minute\":\n\n\t\t\t\tlet minutes = date.getUTCMinutes();\n\t\t\t\tif (count > 1) {\n\t\t\t\t\tminutes = Math.floor(minutes / count) * count;\n\t\t\t\t}\n\n\t\t\t\tdate.setUTCMinutes(minutes, 0, 0);\n\n\t\t\t\tbreak;\n\n\t\t\tcase \"month\":\n\n\t\t\t\tlet month = date.getUTCMonth();\n\t\t\t\tif (count > 1) {\n\t\t\t\t\tmonth = Math.floor(month / count) * count;\n\t\t\t\t}\n\n\t\t\t\tdate.setUTCMonth(month, 1);\n\t\t\t\tdate.setUTCHours(0, 0, 0, 0);\n\n\t\t\t\tbreak;\n\n\t\t\tcase \"year\":\n\n\t\t\t\tlet year = date.getUTCFullYear();\n\t\t\t\tif (count > 1) {\n\t\t\t\t\tyear = Math.floor(year / count) * count;\n\t\t\t\t}\n\t\t\t\tdate.setUTCFullYear(year, 0, 1);\n\t\t\t\tdate.setUTCHours(0, 0, 0, 0);\n\t\t\t\tbreak;\n\n\t\t\tcase \"week\":\n\n\t\t\t\tif (count > 1) {\n\t\t\t\t\tif (firstDate) {\n\t\t\t\t\t\tfirstDate = round(firstDate, \"week\", 1);\n\n\t\t\t\t\t\tlet difference = date.getTime() - firstDate.getTime();\n\t\t\t\t\t\tlet unitCount = Math.floor(difference / getDuration(\"week\") / count);\n\t\t\t\t\t\tlet duration = getDuration(\"week\", unitCount * count);\n\n\t\t\t\t\t\tdate.setTime(firstDate.getTime() + duration - timeZoneOffset * getDuration(\"minute\"));\n\t\t\t\t\t}\n\t\t\t\t}\n\n\t\t\t\tlet wday = date.getUTCDate();\n\t\t\t\tlet weekDay = date.getUTCDay();\n\n\t\t\t\tif (!$type.isNumber(firstDateOfWeek)) {\n\t\t\t\t\tfirstDateOfWeek = 1;\n\t\t\t\t}\n\n\t\t\t\tif (weekDay >= firstDateOfWeek) {\n\t\t\t\t\twday = wday - weekDay + firstDateOfWeek;\n\t\t\t\t} else {\n\t\t\t\t\twday = wday - (7 + weekDay) + firstDateOfWeek;\n\t\t\t\t}\n\n\t\t\t\tdate.setUTCDate(wday);\n\t\t\t\tdate.setUTCHours(0, 0, 0, 0);\n\n\t\t\t\tbreak;\n\t\t}\n\t\tif (!utc && unit != \"millisecond\") {\n\t\t\tdate.setUTCMinutes(date.getUTCMinutes() + timeZoneOffset);\n\n\t\t\tif (unit == \"day\" || unit == \"week\" || unit == \"month\" || unit == \"year\") {\n\t\t\t\tlet newTimeZoneOffset = date.getTimezoneOffset();\n\t\t\t\tif (newTimeZoneOffset != timeZoneOffset) {\n\t\t\t\t\tlet diff = newTimeZoneOffset - timeZoneOffset;\n\n\t\t\t\t\tdate.setUTCMinutes(date.getUTCMinutes() + diff);\n\t\t\t\t}\n\t\t\t}\n\t\t}\n\n\t\treturn date;\n\t}\n\telse {\n\t\tif (isNaN(date.getTime())) {\n\t\t\treturn date;\n\t\t}\n\t\tlet tzoffset = timezone.offsetUTC(date);\n\t\tlet timeZoneOffset = date.getTimezoneOffset();\n\t\tlet parsedDate = timezone.parseDate(date);\n\t\tlet year = parsedDate.year;\n\t\tlet month = parsedDate.month;\n\t\tlet day = parsedDate.day;\n\t\tlet hour = parsedDate.hour;\n\t\tlet minute = parsedDate.minute;\n\t\tlet second = parsedDate.second;\n\t\tlet millisecond = parsedDate.millisecond;\n\t\tlet weekday = parsedDate.weekday;\n\n\t\tlet offsetDif = tzoffset - timeZoneOffset;\n\n\t\tswitch (unit) {\n\n\t\t\tcase \"day\":\n\t\t\t\tif (count > 1 && firstDate) {\n\t\t\t\t\tfirstDate = round(firstDate, \"day\", 1, firstDateOfWeek, utc, undefined, timezone);\n\t\t\t\t\tlet difference = date.getTime() - firstDate.getTime();\n\t\t\t\t\tlet unitCount = Math.floor(difference / getDuration(\"day\") / count);\n\t\t\t\t\tlet duration = getDuration(\"day\", unitCount * count);\n\t\t\t\t\tdate.setTime(firstDate.getTime() + duration);\n\n\t\t\t\t\tparsedDate = timezone.parseDate(date);\n\n\t\t\t\t\tyear = parsedDate.year;\n\t\t\t\t\tmonth = parsedDate.month;\n\t\t\t\t\tday = parsedDate.day;\n\t\t\t\t}\n\n\t\t\t\thour = 0;\n\t\t\t\tminute = offsetDif;\n\n\t\t\t\tsecond = 0;\n\t\t\t\tmillisecond = 0;\n\n\t\t\t\tbreak;\n\n\t\t\tcase \"second\":\n\t\t\t\tminute += offsetDif;\n\t\t\t\tif (count > 1) {\n\t\t\t\t\tsecond = Math.floor(second / count) * count;\n\t\t\t\t}\n\t\t\t\tmillisecond = 0;\n\t\t\t\tbreak;\n\n\t\t\tcase \"millisecond\":\n\t\t\t\tminute += offsetDif;\n\t\t\t\tif (count > 1) {\n\t\t\t\t\tmillisecond = Math.floor(millisecond / count) * count;\n\t\t\t\t}\n\t\t\t\tbreak;\n\n\t\t\tcase \"hour\":\n\t\t\t\tif (count > 1) {\n\t\t\t\t\thour = Math.floor(hour / count) * count;\n\t\t\t\t}\n\t\t\t\tminute = offsetDif;\n\t\t\t\tsecond = 0;\n\t\t\t\tmillisecond = 0;\n\t\t\t\tbreak;\n\n\t\t\tcase \"minute\":\n\t\t\t\tif (count > 1) {\n\t\t\t\t\tminute = Math.floor(minute / count) * count;\n\t\t\t\t}\n\t\t\t\tminute += offsetDif;\n\t\t\t\tsecond = 0;\n\t\t\t\tmillisecond = 0;\n\t\t\t\tbreak;\n\n\t\t\tcase \"month\":\n\t\t\t\tif (count > 1) {\n\t\t\t\t\tmonth = Math.floor(month / count) * count;\n\t\t\t\t}\n\t\t\t\tday = 1;\n\t\t\t\thour = 0;\n\t\t\t\tminute = offsetDif;\n\t\t\t\tsecond = 0;\n\t\t\t\tmillisecond = 0;\n\t\t\t\tbreak;\n\n\t\t\tcase \"year\":\n\t\t\t\tif (count > 1) {\n\t\t\t\t\tyear = Math.floor(year / count) * count;\n\t\t\t\t}\n\t\t\t\tmonth = 0;\n\t\t\t\tday = 1;\n\t\t\t\thour = 0;\n\t\t\t\tminute = offsetDif;\n\t\t\t\tsecond = 0;\n\t\t\t\tmillisecond = 0;\n\t\t\t\tbreak;\n\n\t\t\tcase \"week\":\n\t\t\t\tif (!$type.isNumber(firstDateOfWeek)) {\n\t\t\t\t\tfirstDateOfWeek = 1;\n\t\t\t\t}\n\n\t\t\t\tif (weekday >= firstDateOfWeek) {\n\t\t\t\t\tday = day - weekday + firstDateOfWeek;\n\t\t\t\t} else {\n\t\t\t\t\tday = day - (7 + weekday) + firstDateOfWeek;\n\t\t\t\t}\n\n\t\t\t\thour = 0;\n\t\t\t\tminute = offsetDif;\n\t\t\t\tsecond = 0;\n\t\t\t\tmillisecond = 0;\n\t\t\t\tbreak;\n\t\t}\n\n\t\tdate = new Date(year, month, day, hour, minute, second, millisecond);\n\n\t\tlet newTimeZoneOffset = date.getTimezoneOffset();\n\t\tlet newTzoffset = timezone.offsetUTC(date);\n\t\tlet newDiff = newTzoffset - newTimeZoneOffset;\n\n\t\tif (newDiff != offsetDif) {\n\t\t\tdate.setTime(date.getTime() + (newDiff - offsetDif) * 60000);\n\t\t}\n\n\t\treturn date;\n\t}\n}\n\n\n\n/**\n * @ignore\n */\nexport function chooseInterval(index: number, duration: number, gridCount: number, intervals: Array<ITimeInterval>): ITimeInterval {\n\tlet gridInterval: ITimeInterval = intervals[index];\n\tlet intervalDuration = getIntervalDuration(gridInterval);\n\n\tlet lastIndex = intervals.length - 1;\n\tif (index >= lastIndex) {\n\t\treturn { ...intervals[lastIndex] };\n\t}\n\n\tlet count = Math.ceil(duration / intervalDuration);\n\n\tif (duration < intervalDuration && index > 0) {\n\t\treturn { ...intervals[index - 1] };\n\t}\n\tif (count <= gridCount) {\n\t\treturn { ...intervals[index] };\n\t} else {\n\t\tif (index + 1 < intervals.length) {\n\t\t\treturn chooseInterval(index + 1, duration, gridCount, intervals);\n\t\t} else {\n\t\t\treturn { ...intervals[index] };\n\t\t}\n\t}\n}\n\n/**\n * @ignore\n */\nexport function getUnitValue(date: Date, unit: TimeUnit) {\n\tswitch (unit) {\n\t\tcase \"day\":\n\t\t\treturn date.getDate();\n\t\tcase \"second\":\n\t\t\treturn date.getSeconds();\n\t\tcase \"millisecond\":\n\t\t\treturn date.getMilliseconds();\n\t\tcase \"hour\":\n\t\t\treturn date.getHours();\n\t\tcase \"minute\":\n\t\t\treturn date.getMinutes();\n\t\tcase \"month\":\n\t\t\treturn date.getMonth();\n\t\tcase \"year\":\n\t\t\treturn date.getFullYear();\n\t\tcase \"week\":\n\t\t\treturn $utils.getWeek(date);\n\t}\n}\n","import { Container } from \"../../core/render/Container\";\r\n/**\r\n * Base class for hierarchy nodes.\r\n */\r\nexport class HierarchyNode extends Container {\r\n    constructor() {\r\n        super(...arguments);\r\n        /**\r\n         * Related series.\r\n         */\r\n        Object.defineProperty(this, \"series\", {\r\n            enumerable: true,\r\n            configurable: true,\r\n            writable: true,\r\n            value: void 0\r\n        });\r\n        Object.defineProperty(this, \"_clickDisposer\", {\r\n            enumerable: true,\r\n            configurable: true,\r\n            writable: true,\r\n            value: void 0\r\n        });\r\n    }\r\n    _afterNew() {\r\n        super._afterNew();\r\n        this.states.create(\"disabled\", {});\r\n        this.states.create(\"hover\", {});\r\n        this.states.create(\"hoverDisabled\", {});\r\n        this.on(\"disabled\", () => {\r\n            const dataItem = this.dataItem;\r\n            if (!dataItem.get(\"children\")) {\r\n                this.set(\"disabled\", true);\r\n                return;\r\n            }\r\n            const disabled = this.get(\"disabled\");\r\n            const series = this.series;\r\n            if (dataItem && series) {\r\n                if (dataItem.get(\"disabled\") != disabled) {\r\n                    if (disabled) {\r\n                        series.disableDataItem(dataItem);\r\n                    }\r\n                    else {\r\n                        series.enableDataItem(dataItem, series.get(\"downDepth\", 1), 0);\r\n                    }\r\n                }\r\n            }\r\n        });\r\n    }\r\n    _changed() {\r\n        super._changed();\r\n        if (this.isDirty(\"toggleKey\")) {\r\n            const toggleKey = this.get(\"toggleKey\");\r\n            if (toggleKey == \"disabled\") {\r\n                this._clickDisposer = this.events.on(\"click\", () => {\r\n                    if (!this._isDragging) {\r\n                        let series = this.series;\r\n                        if (series) {\r\n                            series.selectDataItem(this.dataItem);\r\n                        }\r\n                    }\r\n                });\r\n            }\r\n            else {\r\n                if (this._clickDisposer) {\r\n                    this._clickDisposer.dispose();\r\n                }\r\n            }\r\n        }\r\n    }\r\n}\r\nObject.defineProperty(HierarchyNode, \"className\", {\r\n    enumerable: true,\r\n    configurable: true,\r\n    writable: true,\r\n    value: \"HierarchyNode\"\r\n});\r\nObject.defineProperty(HierarchyNode, \"classNames\", {\r\n    enumerable: true,\r\n    configurable: true,\r\n    writable: true,\r\n    value: Container.classNames.concat([HierarchyNode.className])\r\n});\r\n//# sourceMappingURL=HierarchyNode.js.map","import type { DataItem } from \"../../core/render/Component\";\nimport type { IDisposer } from \"../../core/util/Disposer\";\nimport type { Hierarchy, IHierarchyDataItem } from \"./Hierarchy\";\n\nimport { Container, IContainerPrivate, IContainerSettings } from \"../../core/render/Container\";\n\nexport interface IHierarchyNodeSettings extends IContainerSettings {\n}\n\nexport interface IHierarchyNodePrivate extends IContainerPrivate {\n}\n\n/**\n * Base class for hierarchy nodes.\n */\nexport class HierarchyNode extends Container {\n\n\t/**\n\t * Related series.\n\t */\n\tpublic series: Hierarchy | undefined;\n\n\tdeclare public _settings: IHierarchyNodeSettings;\n\tdeclare public _privateSettings: IHierarchyNodePrivate;\n\n\tpublic static className: string = \"HierarchyNode\";\n\tpublic static classNames: Array<string> = Container.classNames.concat([HierarchyNode.className]);\n\n\tdeclare protected _dataItem: DataItem<IHierarchyDataItem> | undefined;\n\n\tprotected _clickDisposer: IDisposer | undefined;\n\n\tprotected _afterNew() {\n\t\tsuper._afterNew();\n\n\t\tthis.states.create(\"disabled\", {});\n\t\tthis.states.create(\"hover\", {});\n\t\tthis.states.create(\"hoverDisabled\", {});\n\n\t\tthis.on(\"disabled\", () => {\n\t\t\tconst dataItem = this.dataItem as DataItem<IHierarchyDataItem>;\n\t\t\tif (!dataItem.get(\"children\")) {\n\t\t\t\tthis.set(\"disabled\", true);\n\t\t\t\treturn;\n\t\t\t}\n\n\t\t\tconst disabled = this.get(\"disabled\");\n\t\t\tconst series = this.series;\n\n\t\t\tif (dataItem && series) {\n\t\t\t\tif (dataItem.get(\"disabled\") != disabled) {\n\t\t\t\t\tif (disabled) {\n\t\t\t\t\t\tseries.disableDataItem(dataItem);\n\t\t\t\t\t}\n\t\t\t\t\telse {\n\t\t\t\t\t\tseries.enableDataItem(dataItem, series.get(\"downDepth\", 1), 0);\n\t\t\t\t\t}\n\t\t\t\t}\n\t\t\t}\n\t\t})\n\t}\n\n\tpublic _changed() {\n\t\tsuper._changed();\n\n\t\tif (this.isDirty(\"toggleKey\")) {\n\t\t\tconst toggleKey = this.get(\"toggleKey\");\n\n\t\t\tif (toggleKey == \"disabled\") {\n\t\t\t\tthis._clickDisposer = this.events.on(\"click\", () => {\n\t\t\t\t\tif (!this._isDragging) {\n\t\t\t\t\t\tlet series = this.series;\n\t\t\t\t\t\tif (series) {\n\t\t\t\t\t\t\tseries.selectDataItem(this.dataItem as DataItem<IHierarchyDataItem>);\n\t\t\t\t\t\t}\n\t\t\t\t\t}\n\t\t\t\t})\n\t\t\t}\n\t\t\telse {\n\t\t\t\tif (this._clickDisposer) {\n\t\t\t\t\tthis._clickDisposer.dispose();\n\t\t\t\t}\n\t\t\t}\n\t\t}\n\t}\n}\n","import node_count from \"./count.js\";\nimport node_each from \"./each.js\";\nimport node_eachBefore from \"./eachBefore.js\";\nimport node_eachAfter from \"./eachAfter.js\";\nimport node_find from \"./find.js\";\nimport node_sum from \"./sum.js\";\nimport node_sort from \"./sort.js\";\nimport node_path from \"./path.js\";\nimport node_ancestors from \"./ancestors.js\";\nimport node_descendants from \"./descendants.js\";\nimport node_leaves from \"./leaves.js\";\nimport node_links from \"./links.js\";\nimport node_iterator from \"./iterator.js\";\n\nexport default function hierarchy(data, children) {\n  if (data instanceof Map) {\n    data = [undefined, data];\n    if (children === undefined) children = mapChildren;\n  } else if (children === undefined) {\n    children = objectChildren;\n  }\n\n  var root = new Node(data),\n      node,\n      nodes = [root],\n      child,\n      childs,\n      i,\n      n;\n\n  while (node = nodes.pop()) {\n    if ((childs = children(node.data)) && (n = (childs = Array.from(childs)).length)) {\n      node.children = childs;\n      for (i = n - 1; i >= 0; --i) {\n        nodes.push(child = childs[i] = new Node(childs[i]));\n        child.parent = node;\n        child.depth = node.depth + 1;\n      }\n    }\n  }\n\n  return root.eachBefore(computeHeight);\n}\n\nfunction node_copy() {\n  return hierarchy(this).eachBefore(copyData);\n}\n\nfunction objectChildren(d) {\n  return d.children;\n}\n\nfunction mapChildren(d) {\n  return Array.isArray(d) ? d[1] : null;\n}\n\nfunction copyData(node) {\n  if (node.data.value !== undefined) node.value = node.data.value;\n  node.data = node.data.data;\n}\n\nexport function computeHeight(node) {\n  var height = 0;\n  do node.height = height;\n  while ((node = node.parent) && (node.height < ++height));\n}\n\nexport function Node(data) {\n  this.data = data;\n  this.depth =\n  this.height = 0;\n  this.parent = null;\n}\n\nNode.prototype = hierarchy.prototype = {\n  constructor: Node,\n  count: node_count,\n  each: node_each,\n  eachAfter: node_eachAfter,\n  eachBefore: node_eachBefore,\n  find: node_find,\n  sum: node_sum,\n  sort: node_sort,\n  path: node_path,\n  ancestors: node_ancestors,\n  descendants: node_descendants,\n  leaves: node_leaves,\n  links: node_links,\n  copy: node_copy,\n  [Symbol.iterator]: node_iterator\n};\n","function count(node) {\n  var sum = 0,\n      children = node.children,\n      i = children && children.length;\n  if (!i) sum = 1;\n  else while (--i >= 0) sum += children[i].value;\n  node.value = sum;\n}\n\nexport default function() {\n  return this.eachAfter(count);\n}\n","export default function(callback, that) {\n  let index = -1;\n  for (const node of this) {\n    callback.call(that, node, ++index, this);\n  }\n  return this;\n}\n","export default function(callback, that) {\n  var node = this, nodes = [node], children, i, index = -1;\n  while (node = nodes.pop()) {\n    callback.call(that, node, ++index, this);\n    if (children = node.children) {\n      for (i = children.length - 1; i >= 0; --i) {\n        nodes.push(children[i]);\n      }\n    }\n  }\n  return this;\n}\n","export default function(callback, that) {\n  var node = this, nodes = [node], next = [], children, i, n, index = -1;\n  while (node = nodes.pop()) {\n    next.push(node);\n    if (children = node.children) {\n      for (i = 0, n = children.length; i < n; ++i) {\n        nodes.push(children[i]);\n      }\n    }\n  }\n  while (node = next.pop()) {\n    callback.call(that, node, ++index, this);\n  }\n  return this;\n}\n","export default function(callback, that) {\n  let index = -1;\n  for (const node of this) {\n    if (callback.call(that, node, ++index, this)) {\n      return node;\n    }\n  }\n}\n","export default function(value) {\n  return this.eachAfter(function(node) {\n    var sum = +value(node.data) || 0,\n        children = node.children,\n        i = children && children.length;\n    while (--i >= 0) sum += children[i].value;\n    node.value = sum;\n  });\n}\n","export default function(compare) {\n  return this.eachBefore(function(node) {\n    if (node.children) {\n      node.children.sort(compare);\n    }\n  });\n}\n","export default function(end) {\n  var start = this,\n      ancestor = leastCommonAncestor(start, end),\n      nodes = [start];\n  while (start !== ancestor) {\n    start = start.parent;\n    nodes.push(start);\n  }\n  var k = nodes.length;\n  while (end !== ancestor) {\n    nodes.splice(k, 0, end);\n    end = end.parent;\n  }\n  return nodes;\n}\n\nfunction leastCommonAncestor(a, b) {\n  if (a === b) return a;\n  var aNodes = a.ancestors(),\n      bNodes = b.ancestors(),\n      c = null;\n  a = aNodes.pop();\n  b = bNodes.pop();\n  while (a === b) {\n    c = a;\n    a = aNodes.pop();\n    b = bNodes.pop();\n  }\n  return c;\n}\n","export default function() {\n  var node = this, nodes = [node];\n  while (node = node.parent) {\n    nodes.push(node);\n  }\n  return nodes;\n}\n","export default function() {\n  return Array.from(this);\n}\n","export default function() {\n  var leaves = [];\n  this.eachBefore(function(node) {\n    if (!node.children) {\n      leaves.push(node);\n    }\n  });\n  return leaves;\n}\n","export default function() {\n  var root = this, links = [];\n  root.each(function(node) {\n    if (node !== root) { // Don’t include the root’s parent, if any.\n      links.push({source: node.parent, target: node});\n    }\n  });\n  return links;\n}\n","export default function*() {\n  var node = this, current, next = [node], children, i, n;\n  do {\n    current = next.reverse(), next = [];\n    while (node = current.pop()) {\n      yield node;\n      if (children = node.children) {\n        for (i = 0, n = children.length; i < n; ++i) {\n          next.push(children[i]);\n        }\n      }\n    }\n  } while (next.length);\n}\n","import { HierarchyNode } from \"./HierarchyNode\";\r\nimport * as $array from \"../../core/util/Array\";\r\n/**\r\n * A node class for [[LinkedHierarchy]].\r\n */\r\nexport class LinkedHierarchyNode extends HierarchyNode {\r\n    _afterNew() {\r\n        super._afterNew();\r\n        this.states.create(\"disabled\", {});\r\n        this.states.create(\"hover\", {});\r\n        this.states.create(\"hoverDisabled\", {});\r\n    }\r\n    _updateLinks(duration) {\r\n        const dataItem = this.dataItem;\r\n        if (dataItem) {\r\n            let links = dataItem.get(\"links\");\r\n            $array.each(links, (link) => {\r\n                let source = link.get(\"source\");\r\n                let target = link.get(\"target\");\r\n                if (source && target) {\r\n                    if (source.get(\"node\").isHidden() || target.get(\"node\").isHidden()) {\r\n                        link.hide(duration);\r\n                    }\r\n                    else {\r\n                        link.show(duration);\r\n                    }\r\n                }\r\n            });\r\n        }\r\n    }\r\n    _prepareChildren() {\r\n        super._prepareChildren();\r\n        if (this.isDirty(\"disabled\")) {\r\n            this._updateLinks();\r\n        }\r\n    }\r\n    _onHide(duration) {\r\n        super._onHide(duration);\r\n        this._updateLinks(duration);\r\n    }\r\n    _onShow(duration) {\r\n        super._onShow(duration);\r\n        this._updateLinks(duration);\r\n    }\r\n}\r\nObject.defineProperty(LinkedHierarchyNode, \"className\", {\r\n    enumerable: true,\r\n    configurable: true,\r\n    writable: true,\r\n    value: \"LinkedHierarchyNode\"\r\n});\r\nObject.defineProperty(LinkedHierarchyNode, \"classNames\", {\r\n    enumerable: true,\r\n    configurable: true,\r\n    writable: true,\r\n    value: HierarchyNode.classNames.concat([LinkedHierarchyNode.className])\r\n});\r\n//# sourceMappingURL=LinkedHierarchyNode.js.map","import type { DataItem } from \"../../core/render/Component\";\nimport type { LinkedHierarchy, ILinkedHierarchyDataItem } from \"./LinkedHierarchy\";\n\nimport { HierarchyNode, IHierarchyNodePrivate, IHierarchyNodeSettings } from \"./HierarchyNode\";\n\nimport * as $array from \"../../core/util/Array\";\n\nexport interface ILinkedHierarchyNodeSettings extends IHierarchyNodeSettings {\n}\n\nexport interface ILinkedHierarchyNodePrivate extends IHierarchyNodePrivate {\n}\n\n/**\n * A node class for [[LinkedHierarchy]].\n */\nexport class LinkedHierarchyNode extends HierarchyNode {\n\n\t/**\n\t * A series node belongs to.\n\t */\n\tdeclare public series: LinkedHierarchy | undefined;\n\n\tdeclare public _settings: ILinkedHierarchyNodeSettings;\n\tdeclare public _privateSettings: ILinkedHierarchyNodePrivate;\n\n\tpublic static className: string = \"LinkedHierarchyNode\";\n\tpublic static classNames: Array<string> = HierarchyNode.classNames.concat([LinkedHierarchyNode.className]);\n\n\tdeclare protected _dataItem: DataItem<ILinkedHierarchyDataItem> | undefined;\n\n\tprotected _afterNew() {\n\t\tsuper._afterNew();\n\n\t\tthis.states.create(\"disabled\", {});\n\t\tthis.states.create(\"hover\", {});\n\t\tthis.states.create(\"hoverDisabled\", {});\n\t}\n\n\n\tpublic _updateLinks(duration?: number) {\n\t\tconst dataItem = this.dataItem;\n\t\tif (dataItem) {\n\t\t\tlet links = (dataItem as DataItem<ILinkedHierarchyDataItem>).get(\"links\");\n\n\t\t\t$array.each(links, (link) => {\n\t\t\t\tlet source = link.get(\"source\")\n\t\t\t\tlet target = link.get(\"target\")\n\n\t\t\t\tif (source && target) {\n\t\t\t\t\tif (source.get(\"node\").isHidden() || target.get(\"node\").isHidden()) {\n\t\t\t\t\t\tlink.hide(duration);\n\t\t\t\t\t}\n\t\t\t\t\telse {\n\t\t\t\t\t\tlink.show(duration);\n\t\t\t\t\t}\n\t\t\t\t}\n\t\t\t})\n\t\t}\n\t}\n\n\tpublic _prepareChildren() {\n\t\tsuper._prepareChildren();\n\n\t\tif (this.isDirty(\"disabled\")) {\n\t\t\tthis._updateLinks();\n\t\t}\n\t}\n\n\tprotected _onHide(duration?: number) {\n\t\tsuper._onHide(duration);\n\t\tthis._updateLinks(duration);\n\t}\n\n\tprotected _onShow(duration?: number) {\n\t\tsuper._onShow(duration);\n\t\tthis._updateLinks(duration);\n\t}\n}\n","import { Graphics } from \"../../core/render/Graphics\";\r\nimport * as $array from \"../../core/util/Array\";\r\n/**\r\n * Draws a link between nodes in a hierarchy series.\r\n */\r\nexport class HierarchyLink extends Graphics {\r\n    constructor() {\r\n        super(...arguments);\r\n        Object.defineProperty(this, \"bullets\", {\r\n            enumerable: true,\r\n            configurable: true,\r\n            writable: true,\r\n            value: []\r\n        });\r\n        Object.defineProperty(this, \"series\", {\r\n            enumerable: true,\r\n            configurable: true,\r\n            writable: true,\r\n            value: void 0\r\n        });\r\n    }\r\n    _handleBullets(bullets) {\r\n        $array.each(this.bullets, (bullet) => {\r\n            bullet.dispose();\r\n        });\r\n        bullets.each((bullet) => {\r\n            const newBullet = bullet(this._root, this.get(\"source\"), this.get(\"target\"));\r\n            if (newBullet) {\r\n                this.bullets.push(newBullet);\r\n                const sprite = newBullet.get(\"sprite\");\r\n                this.addDisposer(newBullet.on(\"locationX\", () => {\r\n                    this._clear = true;\r\n                    this.markDirty();\r\n                }));\r\n                if (sprite) {\r\n                    const series = this.series;\r\n                    if (series) {\r\n                        series.linksContainer.children.push(sprite);\r\n                    }\r\n                }\r\n            }\r\n        });\r\n    }\r\n    _changed() {\r\n        var _a, _b;\r\n        super._changed();\r\n        if (this._clear) {\r\n            let source = this.get(\"source\");\r\n            let target = this.get(\"target\");\r\n            if (source && target) {\r\n                const sourceNode = source.get(\"node\");\r\n                const targetNode = target.get(\"node\");\r\n                const x0 = sourceNode.x();\r\n                const y0 = sourceNode.y();\r\n                const x1 = targetNode.x();\r\n                const y1 = targetNode.y();\r\n                this._display.moveTo(x0, y0);\r\n                this._display.lineTo(x1, y1);\r\n                const sourceRadius = (_a = sourceNode.dataItem) === null || _a === void 0 ? void 0 : _a.get(\"outerCircle\").get(\"radius\", 0);\r\n                const targetRadius = (_b = targetNode.dataItem) === null || _b === void 0 ? void 0 : _b.get(\"outerCircle\").get(\"radius\", 0);\r\n                const distance = Math.hypot(x1 - x0, y1 - y0);\r\n                const trueDistance = distance - sourceRadius - targetRadius;\r\n                $array.each(this.bullets, (bullet) => {\r\n                    const sprite = bullet.get(\"sprite\");\r\n                    if (sprite) {\r\n                        const location = bullet.get(\"locationX\", 0.5);\r\n                        // const tx = trueDistance / distance * (x1 - x0);\r\n                        // const ty = trueDistance / distance * (y1 - y0);\r\n                        sprite.set(\"x\", x0 + sourceRadius / distance * (x1 - x0) + trueDistance / distance * (x1 - x0) * location);\r\n                        sprite.set(\"y\", y0 + sourceRadius / distance * (y1 - y0) + trueDistance / distance * (y1 - y0) * location);\r\n                        if (bullet.get(\"autoRotate\")) {\r\n                            sprite.set(\"rotation\", Math.atan2(y1 - y0, x1 - x0) * 180 / Math.PI + bullet.get(\"autoRotateAngle\", 0));\r\n                        }\r\n                    }\r\n                });\r\n            }\r\n        }\r\n    }\r\n    hide(duration) {\r\n        $array.each(this.bullets, (bullet) => {\r\n            if (bullet) {\r\n                const sprite = bullet.get(\"sprite\");\r\n                if (sprite) {\r\n                    sprite.hide(duration);\r\n                }\r\n            }\r\n        });\r\n        return super.hide();\r\n    }\r\n    show(duration) {\r\n        $array.each(this.bullets, (bullet) => {\r\n            if (bullet) {\r\n                const sprite = bullet.get(\"sprite\");\r\n                if (sprite) {\r\n                    sprite.show(duration);\r\n                }\r\n            }\r\n        });\r\n        return super.show();\r\n    }\r\n    _beforeChanged() {\r\n        super._beforeChanged();\r\n        if (this.isDirty(\"source\")) {\r\n            const source = this.get(\"source\");\r\n            if (source) {\r\n                const sourceNode = source.get(\"node\");\r\n                sourceNode.events.on(\"positionchanged\", () => {\r\n                    this._markDirtyKey(\"stroke\");\r\n                });\r\n            }\r\n        }\r\n        if (this.isDirty(\"target\")) {\r\n            const target = this.get(\"target\");\r\n            if (target) {\r\n                const targetNode = target.get(\"node\");\r\n                targetNode.events.on(\"positionchanged\", () => {\r\n                    this._markDirtyKey(\"stroke\");\r\n                });\r\n            }\r\n        }\r\n    }\r\n    _dispose() {\r\n        super._dispose();\r\n        $array.each(this.bullets, (bullet) => {\r\n            bullet.dispose();\r\n        });\r\n        this.bullets = [];\r\n    }\r\n}\r\nObject.defineProperty(HierarchyLink, \"className\", {\r\n    enumerable: true,\r\n    configurable: true,\r\n    writable: true,\r\n    value: \"HierarchyLink\"\r\n});\r\nObject.defineProperty(HierarchyLink, \"classNames\", {\r\n    enumerable: true,\r\n    configurable: true,\r\n    writable: true,\r\n    value: Graphics.classNames.concat([HierarchyLink.className])\r\n});\r\n//# sourceMappingURL=HierarchyLink.js.map","import type { IHierarchyDataItem } from \"./Hierarchy\";\nimport type { DataItem } from \"../../core/render/Component\";\nimport type { Bullet } from \"../../core/render/Bullet\";\n\nimport { Graphics, IGraphicsSettings, IGraphicsPrivate } from \"../../core/render/Graphics\";\nimport * as $array from \"../../core/util/Array\";\nimport type { Root } from \"../../core/Root\";\nimport type { List } from \"../../core/util/List\";\nimport type { LinkedHierarchy } from \"./LinkedHierarchy\";\n\nexport interface IHierarchyLinkSettings extends IGraphicsSettings {\n\n\t/**\n\t * Source node data item.\n\t */\n\tsource?: DataItem<IHierarchyDataItem>;\n\n\t/**\n\t * Target node data item.\n\t */\n\ttarget?: DataItem<IHierarchyDataItem>;\n\n\t/**\n\t * Strength of the link.\n\t */\n\tstrength?: number;\n\n\t/**\n\t * Distance in pixels.\n\t */\n\tdistance?: number;\n\n}\n\nexport interface IHierarchyLinkPrivate extends IGraphicsPrivate {\n\td3Link: any;\n}\n\n/**\n * Draws a link between nodes in a hierarchy series.\n */\nexport class HierarchyLink extends Graphics {\n\tdeclare public _settings: IHierarchyLinkSettings;\n\tdeclare public _privateSettings: IHierarchyLinkPrivate;\n\n\tpublic static className: string = \"HierarchyLink\";\n\tpublic static classNames: Array<string> = Graphics.classNames.concat([HierarchyLink.className]);\n\n\tpublic bullets: Array<Bullet> = [];\n\n\tpublic series?: LinkedHierarchy;\n\n\tpublic _handleBullets(bullets:List<<D extends DataItem<IHierarchyDataItem>>(root: Root, source: D, target:D) => Bullet | undefined>) {\n\t\t$array.each(this.bullets, (bullet) => {\n\t\t\tbullet.dispose();\n\t\t})\n\n\t\tbullets.each((bullet)=>{\n\t\t\tconst newBullet = bullet(this._root, this.get(\"source\")!, this.get(\"target\")!);\n\t\t\tif (newBullet) {\n\t\t\t\tthis.bullets.push(newBullet);\n\n\t\t\t\tconst sprite = newBullet.get(\"sprite\");\n\n\t\t\t\tthis.addDisposer(newBullet.on(\"locationX\", () => {\n\t\t\t\t\tthis._clear = true;\n\t\t\t\t\tthis.markDirty();\n\t\t\t\t}))\n\n\t\t\t\tif(sprite){\n\t\t\t\t\tconst series = this.series;\n\t\t\t\t\tif(series){\n\t\t\t\t\t\tseries.linksContainer.children.push(sprite);\n\t\t\t\t\t}\n\t\t\t\t}\n\t\t\t}\n\t\t})\n\t}\n\n\tpublic _changed() {\n\t\tsuper._changed();\n\t\tif (this._clear) {\n\t\t\tlet source = this.get(\"source\");\n\t\t\tlet target = this.get(\"target\");\n\t\t\tif (source && target) {\n\t\t\t\tconst sourceNode = source.get(\"node\");\n\t\t\t\tconst targetNode = target.get(\"node\");\n\n\t\t\t\tconst x0 = sourceNode.x();\n\t\t\t\tconst y0 = sourceNode.y();\n\n\t\t\t\tconst x1 = targetNode.x();\n\t\t\t\tconst y1 = targetNode.y();\n\n\t\t\t\tthis._display.moveTo(x0, y0);\n\t\t\t\tthis._display.lineTo(x1, y1);\n\n\t\t\t\tconst sourceRadius = sourceNode.dataItem?.get(\"outerCircle\" as any).get(\"radius\", 0);\n\t\t\t\tconst targetRadius = targetNode.dataItem?.get(\"outerCircle\" as any).get(\"radius\", 0);\n\n\t\t\t\tconst distance = Math.hypot(x1 - x0, y1 - y0);\n\t\t\t\tconst trueDistance = distance - sourceRadius - targetRadius;\n\n\t\t\t\t$array.each(this.bullets, (bullet) => {\n\t\t\t\t\tconst sprite = bullet.get(\"sprite\");\n\t\t\t\t\tif(sprite){\n\t\t\t\t\t\tconst location = bullet.get(\"locationX\", 0.5);\n\n\t\t\t\t\t\t// const tx = trueDistance / distance * (x1 - x0);\n\t\t\t\t\t\t// const ty = trueDistance / distance * (y1 - y0);\n\n\t\t\t\t\t\tsprite.set(\"x\", x0 + sourceRadius / distance * (x1 - x0) + trueDistance / distance * (x1 - x0) * location);\n\t\t\t\t\t\tsprite.set(\"y\", y0 + sourceRadius / distance * (y1 - y0) + trueDistance / distance * (y1 - y0) * location);\n\n\t\t\t\t\t\tif(bullet.get(\"autoRotate\")){\n\t\t\t\t\t\t\tsprite.set(\"rotation\", Math.atan2(y1 - y0, x1 - x0) * 180 / Math.PI + bullet.get(\"autoRotateAngle\", 0));\n\t\t\t\t\t\t}\n\t\t\t\t\t}\n\t\t\t\t})\n\t\t\t}\n\t\t}\n\t}\n\n\tpublic hide(duration?: number){\n\t\t$array.each(this.bullets, (bullet) => {\n\t\t\tif(bullet){\n\t\t\t\tconst sprite = bullet.get(\"sprite\");\n\t\t\t\tif(sprite){\n\t\t\t\t\tsprite.hide(duration);\n\t\t\t\t}\n\t\t\t}\n\t\t})\n\t\treturn super.hide();\n\t}\n\n\tpublic show(duration?: number){\n\t\t$array.each(this.bullets, (bullet) => {\n\t\t\tif(bullet){\n\t\t\t\tconst sprite = bullet.get(\"sprite\");\n\t\t\t\tif(sprite){\n\t\t\t\t\tsprite.show(duration);\n\t\t\t\t}\n\t\t\t}\n\t\t})\n\t\treturn super.show();\n\t}\n\n\tpublic _beforeChanged() {\n\t\tsuper._beforeChanged();\n\n\t\tif (this.isDirty(\"source\")) {\n\t\t\tconst source = this.get(\"source\");\n\t\t\tif (source) {\n\t\t\t\tconst sourceNode = source.get(\"node\");\n\t\t\t\tsourceNode.events.on(\"positionchanged\", () => {\n\t\t\t\t\tthis._markDirtyKey(\"stroke\");\n\t\t\t\t})\n\t\t\t}\n\t\t}\n\t\tif (this.isDirty(\"target\")) {\n\t\t\tconst target = this.get(\"target\");\n\t\t\tif (target) {\n\t\t\t\tconst targetNode = target.get(\"node\");\n\t\t\t\ttargetNode.events.on(\"positionchanged\", () => {\n\t\t\t\t\tthis._markDirtyKey(\"stroke\");\n\t\t\t\t})\n\t\t\t}\n\t\t}\n\t}\n\n\tprotected _dispose(){\n\t\tsuper._dispose();\n\t\t$array.each(this.bullets, (bullet) => {\n\t\t\tbullet.dispose();\n\t\t})\n\t\tthis.bullets = [];\n\t}\n}\n","import { Graphics } from \"./Graphics\";\r\n/**\r\n * Draws a circle.\r\n *\r\n * @see {@link https://www.amcharts.com/docs/v5/concepts/common-elements/graphics/} for more info\r\n * @important\r\n */\r\nexport class Circle extends Graphics {\r\n    _afterNew() {\r\n        super._afterNew();\r\n        this._display.isMeasured = true;\r\n        this.setPrivateRaw(\"trustBounds\", true);\r\n    }\r\n    _beforeChanged() {\r\n        super._beforeChanged();\r\n        if (this.isDirty(\"radius\")) {\r\n            this._clear = true;\r\n        }\r\n    }\r\n    _changed() {\r\n        super._changed();\r\n        if (this._clear) {\r\n            this._display.drawCircle(0, 0, Math.abs(this.get(\"radius\", 10)));\r\n        }\r\n    }\r\n}\r\nObject.defineProperty(Circle, \"className\", {\r\n    enumerable: true,\r\n    configurable: true,\r\n    writable: true,\r\n    value: \"Circle\"\r\n});\r\nObject.defineProperty(Circle, \"classNames\", {\r\n    enumerable: true,\r\n    configurable: true,\r\n    writable: true,\r\n    value: Graphics.classNames.concat([Circle.className])\r\n});\r\n//# sourceMappingURL=Circle.js.map","import { Graphics, IGraphicsSettings, IGraphicsPrivate } from \"./Graphics\";\n\nexport interface ICircleSettings extends IGraphicsSettings {\n\n\t/**\n\t * Circle radius in pixels.\n\t */\n\tradius?: number;\n\n}\n\nexport interface ICirclePrivate extends IGraphicsPrivate {\n}\n\n/**\n * Draws a circle.\n *\n * @see {@link https://www.amcharts.com/docs/v5/concepts/common-elements/graphics/} for more info\n * @important\n */\nexport class Circle extends Graphics {\n\n\tdeclare public _settings: ICircleSettings;\n\tdeclare public _privateSettings: ICirclePrivate;\n\n\tpublic static className: string = \"Circle\";\n\tpublic static classNames: Array<string> = Graphics.classNames.concat([Circle.className]);\n\n\tpublic _afterNew(){\n\t\tsuper._afterNew();\n\t\tthis._display.isMeasured = true;\n\t\tthis.setPrivateRaw(\"trustBounds\", true);\n\t}\t\n\n\tpublic _beforeChanged() {\n\t\tsuper._beforeChanged();\n\n\t\tif (this.isDirty(\"radius\")) {\n\t\t\tthis._clear = true;\n\t\t}\n\t}\n\n\tpublic _changed() {\n\t\tsuper._changed();\n\n\t\tif (this._clear) {\n\t\t\tthis._display.drawCircle(0, 0, Math.abs(this.get(\"radius\", 10)));\n\t\t}\n\t}\n}\n","import {quadtree} from \"d3-quadtree\";\nimport constant from \"./constant.js\";\nimport jiggle from \"./jiggle.js\";\n\nfunction x(d) {\n  return d.x + d.vx;\n}\n\nfunction y(d) {\n  return d.y + d.vy;\n}\n\nexport default function(radius) {\n  var nodes,\n      radii,\n      random,\n      strength = 1,\n      iterations = 1;\n\n  if (typeof radius !== \"function\") radius = constant(radius == null ? 1 : +radius);\n\n  function force() {\n    var i, n = nodes.length,\n        tree,\n        node,\n        xi,\n        yi,\n        ri,\n        ri2;\n\n    for (var k = 0; k < iterations; ++k) {\n      tree = quadtree(nodes, x, y).visitAfter(prepare);\n      for (i = 0; i < n; ++i) {\n        node = nodes[i];\n        ri = radii[node.index], ri2 = ri * ri;\n        xi = node.x + node.vx;\n        yi = node.y + node.vy;\n        tree.visit(apply);\n      }\n    }\n\n    function apply(quad, x0, y0, x1, y1) {\n      var data = quad.data, rj = quad.r, r = ri + rj;\n      if (data) {\n        if (data.index > node.index) {\n          var x = xi - data.x - data.vx,\n              y = yi - data.y - data.vy,\n              l = x * x + y * y;\n          if (l < r * r) {\n            if (x === 0) x = jiggle(random), l += x * x;\n            if (y === 0) y = jiggle(random), l += y * y;\n            l = (r - (l = Math.sqrt(l))) / l * strength;\n            node.vx += (x *= l) * (r = (rj *= rj) / (ri2 + rj));\n            node.vy += (y *= l) * r;\n            data.vx -= x * (r = 1 - r);\n            data.vy -= y * r;\n          }\n        }\n        return;\n      }\n      return x0 > xi + r || x1 < xi - r || y0 > yi + r || y1 < yi - r;\n    }\n  }\n\n  function prepare(quad) {\n    if (quad.data) return quad.r = radii[quad.data.index];\n    for (var i = quad.r = 0; i < 4; ++i) {\n      if (quad[i] && quad[i].r > quad.r) {\n        quad.r = quad[i].r;\n      }\n    }\n  }\n\n  function initialize() {\n    if (!nodes) return;\n    var i, n = nodes.length, node;\n    radii = new Array(n);\n    for (i = 0; i < n; ++i) node = nodes[i], radii[node.index] = +radius(node, i, nodes);\n  }\n\n  force.initialize = function(_nodes, _random) {\n    nodes = _nodes;\n    random = _random;\n    initialize();\n  };\n\n  force.iterations = function(_) {\n    return arguments.length ? (iterations = +_, force) : iterations;\n  };\n\n  force.strength = function(_) {\n    return arguments.length ? (strength = +_, force) : strength;\n  };\n\n  force.radius = function(_) {\n    return arguments.length ? (radius = typeof _ === \"function\" ? _ : constant(+_), initialize(), force) : radius;\n  };\n\n  return force;\n}\n","import tree_add, {addAll as tree_addAll} from \"./add.js\";\nimport tree_cover from \"./cover.js\";\nimport tree_data from \"./data.js\";\nimport tree_extent from \"./extent.js\";\nimport tree_find from \"./find.js\";\nimport tree_remove, {removeAll as tree_removeAll} from \"./remove.js\";\nimport tree_root from \"./root.js\";\nimport tree_size from \"./size.js\";\nimport tree_visit from \"./visit.js\";\nimport tree_visitAfter from \"./visitAfter.js\";\nimport tree_x, {defaultX} from \"./x.js\";\nimport tree_y, {defaultY} from \"./y.js\";\n\nexport default function quadtree(nodes, x, y) {\n  var tree = new Quadtree(x == null ? defaultX : x, y == null ? defaultY : y, NaN, NaN, NaN, NaN);\n  return nodes == null ? tree : tree.addAll(nodes);\n}\n\nfunction Quadtree(x, y, x0, y0, x1, y1) {\n  this._x = x;\n  this._y = y;\n  this._x0 = x0;\n  this._y0 = y0;\n  this._x1 = x1;\n  this._y1 = y1;\n  this._root = undefined;\n}\n\nfunction leaf_copy(leaf) {\n  var copy = {data: leaf.data}, next = copy;\n  while (leaf = leaf.next) next = next.next = {data: leaf.data};\n  return copy;\n}\n\nvar treeProto = quadtree.prototype = Quadtree.prototype;\n\ntreeProto.copy = function() {\n  var copy = new Quadtree(this._x, this._y, this._x0, this._y0, this._x1, this._y1),\n      node = this._root,\n      nodes,\n      child;\n\n  if (!node) return copy;\n\n  if (!node.length) return copy._root = leaf_copy(node), copy;\n\n  nodes = [{source: node, target: copy._root = new Array(4)}];\n  while (node = nodes.pop()) {\n    for (var i = 0; i < 4; ++i) {\n      if (child = node.source[i]) {\n        if (child.length) nodes.push({source: child, target: node.target[i] = new Array(4)});\n        else node.target[i] = leaf_copy(child);\n      }\n    }\n  }\n\n  return copy;\n};\n\ntreeProto.add = tree_add;\ntreeProto.addAll = tree_addAll;\ntreeProto.cover = tree_cover;\ntreeProto.data = tree_data;\ntreeProto.extent = tree_extent;\ntreeProto.find = tree_find;\ntreeProto.remove = tree_remove;\ntreeProto.removeAll = tree_removeAll;\ntreeProto.root = tree_root;\ntreeProto.size = tree_size;\ntreeProto.visit = tree_visit;\ntreeProto.visitAfter = tree_visitAfter;\ntreeProto.x = tree_x;\ntreeProto.y = tree_y;\n","export default function(d) {\n  const x = +this._x.call(null, d),\n      y = +this._y.call(null, d);\n  return add(this.cover(x, y), x, y, d);\n}\n\nfunction add(tree, x, y, d) {\n  if (isNaN(x) || isNaN(y)) return tree; // ignore invalid points\n\n  var parent,\n      node = tree._root,\n      leaf = {data: d},\n      x0 = tree._x0,\n      y0 = tree._y0,\n      x1 = tree._x1,\n      y1 = tree._y1,\n      xm,\n      ym,\n      xp,\n      yp,\n      right,\n      bottom,\n      i,\n      j;\n\n  // If the tree is empty, initialize the root as a leaf.\n  if (!node) return tree._root = leaf, tree;\n\n  // Find the existing leaf for the new point, or add it.\n  while (node.length) {\n    if (right = x >= (xm = (x0 + x1) / 2)) x0 = xm; else x1 = xm;\n    if (bottom = y >= (ym = (y0 + y1) / 2)) y0 = ym; else y1 = ym;\n    if (parent = node, !(node = node[i = bottom << 1 | right])) return parent[i] = leaf, tree;\n  }\n\n  // Is the new point is exactly coincident with the existing point?\n  xp = +tree._x.call(null, node.data);\n  yp = +tree._y.call(null, node.data);\n  if (x === xp && y === yp) return leaf.next = node, parent ? parent[i] = leaf : tree._root = leaf, tree;\n\n  // Otherwise, split the leaf node until the old and new point are separated.\n  do {\n    parent = parent ? parent[i] = new Array(4) : tree._root = new Array(4);\n    if (right = x >= (xm = (x0 + x1) / 2)) x0 = xm; else x1 = xm;\n    if (bottom = y >= (ym = (y0 + y1) / 2)) y0 = ym; else y1 = ym;\n  } while ((i = bottom << 1 | right) === (j = (yp >= ym) << 1 | (xp >= xm)));\n  return parent[j] = node, parent[i] = leaf, tree;\n}\n\nexport function addAll(data) {\n  var d, i, n = data.length,\n      x,\n      y,\n      xz = new Array(n),\n      yz = new Array(n),\n      x0 = Infinity,\n      y0 = Infinity,\n      x1 = -Infinity,\n      y1 = -Infinity;\n\n  // Compute the points and their extent.\n  for (i = 0; i < n; ++i) {\n    if (isNaN(x = +this._x.call(null, d = data[i])) || isNaN(y = +this._y.call(null, d))) continue;\n    xz[i] = x;\n    yz[i] = y;\n    if (x < x0) x0 = x;\n    if (x > x1) x1 = x;\n    if (y < y0) y0 = y;\n    if (y > y1) y1 = y;\n  }\n\n  // If there were no (valid) points, abort.\n  if (x0 > x1 || y0 > y1) return this;\n\n  // Expand the tree to cover the new points.\n  this.cover(x0, y0).cover(x1, y1);\n\n  // Add the new points.\n  for (i = 0; i < n; ++i) {\n    add(this, xz[i], yz[i], data[i]);\n  }\n\n  return this;\n}\n","export default function(x, y) {\n  if (isNaN(x = +x) || isNaN(y = +y)) return this; // ignore invalid points\n\n  var x0 = this._x0,\n      y0 = this._y0,\n      x1 = this._x1,\n      y1 = this._y1;\n\n  // If the quadtree has no extent, initialize them.\n  // Integer extent are necessary so that if we later double the extent,\n  // the existing quadrant boundaries don’t change due to floating point error!\n  if (isNaN(x0)) {\n    x1 = (x0 = Math.floor(x)) + 1;\n    y1 = (y0 = Math.floor(y)) + 1;\n  }\n\n  // Otherwise, double repeatedly to cover.\n  else {\n    var z = x1 - x0 || 1,\n        node = this._root,\n        parent,\n        i;\n\n    while (x0 > x || x >= x1 || y0 > y || y >= y1) {\n      i = (y < y0) << 1 | (x < x0);\n      parent = new Array(4), parent[i] = node, node = parent, z *= 2;\n      switch (i) {\n        case 0: x1 = x0 + z, y1 = y0 + z; break;\n        case 1: x0 = x1 - z, y1 = y0 + z; break;\n        case 2: x1 = x0 + z, y0 = y1 - z; break;\n        case 3: x0 = x1 - z, y0 = y1 - z; break;\n      }\n    }\n\n    if (this._root && this._root.length) this._root = node;\n  }\n\n  this._x0 = x0;\n  this._y0 = y0;\n  this._x1 = x1;\n  this._y1 = y1;\n  return this;\n}\n","export default function() {\n  var data = [];\n  this.visit(function(node) {\n    if (!node.length) do data.push(node.data); while (node = node.next)\n  });\n  return data;\n}\n","export default function(_) {\n  return arguments.length\n      ? this.cover(+_[0][0], +_[0][1]).cover(+_[1][0], +_[1][1])\n      : isNaN(this._x0) ? undefined : [[this._x0, this._y0], [this._x1, this._y1]];\n}\n","import Quad from \"./quad.js\";\n\nexport default function(x, y, radius) {\n  var data,\n      x0 = this._x0,\n      y0 = this._y0,\n      x1,\n      y1,\n      x2,\n      y2,\n      x3 = this._x1,\n      y3 = this._y1,\n      quads = [],\n      node = this._root,\n      q,\n      i;\n\n  if (node) quads.push(new Quad(node, x0, y0, x3, y3));\n  if (radius == null) radius = Infinity;\n  else {\n    x0 = x - radius, y0 = y - radius;\n    x3 = x + radius, y3 = y + radius;\n    radius *= radius;\n  }\n\n  while (q = quads.pop()) {\n\n    // Stop searching if this quadrant can’t contain a closer node.\n    if (!(node = q.node)\n        || (x1 = q.x0) > x3\n        || (y1 = q.y0) > y3\n        || (x2 = q.x1) < x0\n        || (y2 = q.y1) < y0) continue;\n\n    // Bisect the current quadrant.\n    if (node.length) {\n      var xm = (x1 + x2) / 2,\n          ym = (y1 + y2) / 2;\n\n      quads.push(\n        new Quad(node[3], xm, ym, x2, y2),\n        new Quad(node[2], x1, ym, xm, y2),\n        new Quad(node[1], xm, y1, x2, ym),\n        new Quad(node[0], x1, y1, xm, ym)\n      );\n\n      // Visit the closest quadrant first.\n      if (i = (y >= ym) << 1 | (x >= xm)) {\n        q = quads[quads.length - 1];\n        quads[quads.length - 1] = quads[quads.length - 1 - i];\n        quads[quads.length - 1 - i] = q;\n      }\n    }\n\n    // Visit this point. (Visiting coincident points isn’t necessary!)\n    else {\n      var dx = x - +this._x.call(null, node.data),\n          dy = y - +this._y.call(null, node.data),\n          d2 = dx * dx + dy * dy;\n      if (d2 < radius) {\n        var d = Math.sqrt(radius = d2);\n        x0 = x - d, y0 = y - d;\n        x3 = x + d, y3 = y + d;\n        data = node.data;\n      }\n    }\n  }\n\n  return data;\n}\n","export default function(node, x0, y0, x1, y1) {\n  this.node = node;\n  this.x0 = x0;\n  this.y0 = y0;\n  this.x1 = x1;\n  this.y1 = y1;\n}\n","export default function(d) {\n  if (isNaN(x = +this._x.call(null, d)) || isNaN(y = +this._y.call(null, d))) return this; // ignore invalid points\n\n  var parent,\n      node = this._root,\n      retainer,\n      previous,\n      next,\n      x0 = this._x0,\n      y0 = this._y0,\n      x1 = this._x1,\n      y1 = this._y1,\n      x,\n      y,\n      xm,\n      ym,\n      right,\n      bottom,\n      i,\n      j;\n\n  // If the tree is empty, initialize the root as a leaf.\n  if (!node) return this;\n\n  // Find the leaf node for the point.\n  // While descending, also retain the deepest parent with a non-removed sibling.\n  if (node.length) while (true) {\n    if (right = x >= (xm = (x0 + x1) / 2)) x0 = xm; else x1 = xm;\n    if (bottom = y >= (ym = (y0 + y1) / 2)) y0 = ym; else y1 = ym;\n    if (!(parent = node, node = node[i = bottom << 1 | right])) return this;\n    if (!node.length) break;\n    if (parent[(i + 1) & 3] || parent[(i + 2) & 3] || parent[(i + 3) & 3]) retainer = parent, j = i;\n  }\n\n  // Find the point to remove.\n  while (node.data !== d) if (!(previous = node, node = node.next)) return this;\n  if (next = node.next) delete node.next;\n\n  // If there are multiple coincident points, remove just the point.\n  if (previous) return (next ? previous.next = next : delete previous.next), this;\n\n  // If this is the root point, remove it.\n  if (!parent) return this._root = next, this;\n\n  // Remove this leaf.\n  next ? parent[i] = next : delete parent[i];\n\n  // If the parent now contains exactly one leaf, collapse superfluous parents.\n  if ((node = parent[0] || parent[1] || parent[2] || parent[3])\n      && node === (parent[3] || parent[2] || parent[1] || parent[0])\n      && !node.length) {\n    if (retainer) retainer[j] = node;\n    else this._root = node;\n  }\n\n  return this;\n}\n\nexport function removeAll(data) {\n  for (var i = 0, n = data.length; i < n; ++i) this.remove(data[i]);\n  return this;\n}\n","export default function() {\n  return this._root;\n}\n","export default function() {\n  var size = 0;\n  this.visit(function(node) {\n    if (!node.length) do ++size; while (node = node.next)\n  });\n  return size;\n}\n","import Quad from \"./quad.js\";\n\nexport default function(callback) {\n  var quads = [], q, node = this._root, child, x0, y0, x1, y1;\n  if (node) quads.push(new Quad(node, this._x0, this._y0, this._x1, this._y1));\n  while (q = quads.pop()) {\n    if (!callback(node = q.node, x0 = q.x0, y0 = q.y0, x1 = q.x1, y1 = q.y1) && node.length) {\n      var xm = (x0 + x1) / 2, ym = (y0 + y1) / 2;\n      if (child = node[3]) quads.push(new Quad(child, xm, ym, x1, y1));\n      if (child = node[2]) quads.push(new Quad(child, x0, ym, xm, y1));\n      if (child = node[1]) quads.push(new Quad(child, xm, y0, x1, ym));\n      if (child = node[0]) quads.push(new Quad(child, x0, y0, xm, ym));\n    }\n  }\n  return this;\n}\n","import Quad from \"./quad.js\";\n\nexport default function(callback) {\n  var quads = [], next = [], q;\n  if (this._root) quads.push(new Quad(this._root, this._x0, this._y0, this._x1, this._y1));\n  while (q = quads.pop()) {\n    var node = q.node;\n    if (node.length) {\n      var child, x0 = q.x0, y0 = q.y0, x1 = q.x1, y1 = q.y1, xm = (x0 + x1) / 2, ym = (y0 + y1) / 2;\n      if (child = node[0]) quads.push(new Quad(child, x0, y0, xm, ym));\n      if (child = node[1]) quads.push(new Quad(child, xm, y0, x1, ym));\n      if (child = node[2]) quads.push(new Quad(child, x0, ym, xm, y1));\n      if (child = node[3]) quads.push(new Quad(child, xm, ym, x1, y1));\n    }\n    next.push(q);\n  }\n  while (q = next.pop()) {\n    callback(q.node, q.x0, q.y0, q.x1, q.y1);\n  }\n  return this;\n}\n","export function defaultX(d) {\n  return d[0];\n}\n\nexport default function(_) {\n  return arguments.length ? (this._x = _, this) : this._x;\n}\n","export function defaultY(d) {\n  return d[1];\n}\n\nexport default function(_) {\n  return arguments.length ? (this._y = _, this) : this._y;\n}\n","export default function(x) {\n  return function() {\n    return x;\n  };\n}\n","export default function(random) {\n  return (random() - 0.5) * 1e-6;\n}\n","import constant from \"./constant.js\";\nimport jiggle from \"./jiggle.js\";\n\nfunction index(d) {\n  return d.index;\n}\n\nfunction find(nodeById, nodeId) {\n  var node = nodeById.get(nodeId);\n  if (!node) throw new Error(\"node not found: \" + nodeId);\n  return node;\n}\n\nexport default function(links) {\n  var id = index,\n      strength = defaultStrength,\n      strengths,\n      distance = constant(30),\n      distances,\n      nodes,\n      count,\n      bias,\n      random,\n      iterations = 1;\n\n  if (links == null) links = [];\n\n  function defaultStrength(link) {\n    return 1 / Math.min(count[link.source.index], count[link.target.index]);\n  }\n\n  function force(alpha) {\n    for (var k = 0, n = links.length; k < iterations; ++k) {\n      for (var i = 0, link, source, target, x, y, l, b; i < n; ++i) {\n        link = links[i], source = link.source, target = link.target;\n        x = target.x + target.vx - source.x - source.vx || jiggle(random);\n        y = target.y + target.vy - source.y - source.vy || jiggle(random);\n        l = Math.sqrt(x * x + y * y);\n        l = (l - distances[i]) / l * alpha * strengths[i];\n        x *= l, y *= l;\n        target.vx -= x * (b = bias[i]);\n        target.vy -= y * b;\n        source.vx += x * (b = 1 - b);\n        source.vy += y * b;\n      }\n    }\n  }\n\n  function initialize() {\n    if (!nodes) return;\n\n    var i,\n        n = nodes.length,\n        m = links.length,\n        nodeById = new Map(nodes.map((d, i) => [id(d, i, nodes), d])),\n        link;\n\n    for (i = 0, count = new Array(n); i < m; ++i) {\n      link = links[i], link.index = i;\n      if (typeof link.source !== \"object\") link.source = find(nodeById, link.source);\n      if (typeof link.target !== \"object\") link.target = find(nodeById, link.target);\n      count[link.source.index] = (count[link.source.index] || 0) + 1;\n      count[link.target.index] = (count[link.target.index] || 0) + 1;\n    }\n\n    for (i = 0, bias = new Array(m); i < m; ++i) {\n      link = links[i], bias[i] = count[link.source.index] / (count[link.source.index] + count[link.target.index]);\n    }\n\n    strengths = new Array(m), initializeStrength();\n    distances = new Array(m), initializeDistance();\n  }\n\n  function initializeStrength() {\n    if (!nodes) return;\n\n    for (var i = 0, n = links.length; i < n; ++i) {\n      strengths[i] = +strength(links[i], i, links);\n    }\n  }\n\n  function initializeDistance() {\n    if (!nodes) return;\n\n    for (var i = 0, n = links.length; i < n; ++i) {\n      distances[i] = +distance(links[i], i, links);\n    }\n  }\n\n  force.initialize = function(_nodes, _random) {\n    nodes = _nodes;\n    random = _random;\n    initialize();\n  };\n\n  force.links = function(_) {\n    return arguments.length ? (links = _, initialize(), force) : links;\n  };\n\n  force.id = function(_) {\n    return arguments.length ? (id = _, force) : id;\n  };\n\n  force.iterations = function(_) {\n    return arguments.length ? (iterations = +_, force) : iterations;\n  };\n\n  force.strength = function(_) {\n    return arguments.length ? (strength = typeof _ === \"function\" ? _ : constant(+_), initializeStrength(), force) : strength;\n  };\n\n  force.distance = function(_) {\n    return arguments.length ? (distance = typeof _ === \"function\" ? _ : constant(+_), initializeDistance(), force) : distance;\n  };\n\n  return force;\n}\n","import {quadtree} from \"d3-quadtree\";\nimport constant from \"./constant.js\";\nimport jiggle from \"./jiggle.js\";\nimport {x, y} from \"./simulation.js\";\n\nexport default function() {\n  var nodes,\n      node,\n      random,\n      alpha,\n      strength = constant(-30),\n      strengths,\n      distanceMin2 = 1,\n      distanceMax2 = Infinity,\n      theta2 = 0.81;\n\n  function force(_) {\n    var i, n = nodes.length, tree = quadtree(nodes, x, y).visitAfter(accumulate);\n    for (alpha = _, i = 0; i < n; ++i) node = nodes[i], tree.visit(apply);\n  }\n\n  function initialize() {\n    if (!nodes) return;\n    var i, n = nodes.length, node;\n    strengths = new Array(n);\n    for (i = 0; i < n; ++i) node = nodes[i], strengths[node.index] = +strength(node, i, nodes);\n  }\n\n  function accumulate(quad) {\n    var strength = 0, q, c, weight = 0, x, y, i;\n\n    // For internal nodes, accumulate forces from child quadrants.\n    if (quad.length) {\n      for (x = y = i = 0; i < 4; ++i) {\n        if ((q = quad[i]) && (c = Math.abs(q.value))) {\n          strength += q.value, weight += c, x += c * q.x, y += c * q.y;\n        }\n      }\n      quad.x = x / weight;\n      quad.y = y / weight;\n    }\n\n    // For leaf nodes, accumulate forces from coincident quadrants.\n    else {\n      q = quad;\n      q.x = q.data.x;\n      q.y = q.data.y;\n      do strength += strengths[q.data.index];\n      while (q = q.next);\n    }\n\n    quad.value = strength;\n  }\n\n  function apply(quad, x1, _, x2) {\n    if (!quad.value) return true;\n\n    var x = quad.x - node.x,\n        y = quad.y - node.y,\n        w = x2 - x1,\n        l = x * x + y * y;\n\n    // Apply the Barnes-Hut approximation if possible.\n    // Limit forces for very close nodes; randomize direction if coincident.\n    if (w * w / theta2 < l) {\n      if (l < distanceMax2) {\n        if (x === 0) x = jiggle(random), l += x * x;\n        if (y === 0) y = jiggle(random), l += y * y;\n        if (l < distanceMin2) l = Math.sqrt(distanceMin2 * l);\n        node.vx += x * quad.value * alpha / l;\n        node.vy += y * quad.value * alpha / l;\n      }\n      return true;\n    }\n\n    // Otherwise, process points directly.\n    else if (quad.length || l >= distanceMax2) return;\n\n    // Limit forces for very close nodes; randomize direction if coincident.\n    if (quad.data !== node || quad.next) {\n      if (x === 0) x = jiggle(random), l += x * x;\n      if (y === 0) y = jiggle(random), l += y * y;\n      if (l < distanceMin2) l = Math.sqrt(distanceMin2 * l);\n    }\n\n    do if (quad.data !== node) {\n      w = strengths[quad.data.index] * alpha / l;\n      node.vx += x * w;\n      node.vy += y * w;\n    } while (quad = quad.next);\n  }\n\n  force.initialize = function(_nodes, _random) {\n    nodes = _nodes;\n    random = _random;\n    initialize();\n  };\n\n  force.strength = function(_) {\n    return arguments.length ? (strength = typeof _ === \"function\" ? _ : constant(+_), initialize(), force) : strength;\n  };\n\n  force.distanceMin = function(_) {\n    return arguments.length ? (distanceMin2 = _ * _, force) : Math.sqrt(distanceMin2);\n  };\n\n  force.distanceMax = function(_) {\n    return arguments.length ? (distanceMax2 = _ * _, force) : Math.sqrt(distanceMax2);\n  };\n\n  force.theta = function(_) {\n    return arguments.length ? (theta2 = _ * _, force) : Math.sqrt(theta2);\n  };\n\n  return force;\n}\n","import {dispatch} from \"d3-dispatch\";\nimport {timer} from \"d3-timer\";\nimport lcg from \"./lcg.js\";\n\nexport function x(d) {\n  return d.x;\n}\n\nexport function y(d) {\n  return d.y;\n}\n\nvar initialRadius = 10,\n    initialAngle = Math.PI * (3 - Math.sqrt(5));\n\nexport default function(nodes) {\n  var simulation,\n      alpha = 1,\n      alphaMin = 0.001,\n      alphaDecay = 1 - Math.pow(alphaMin, 1 / 300),\n      alphaTarget = 0,\n      velocityDecay = 0.6,\n      forces = new Map(),\n      stepper = timer(step),\n      event = dispatch(\"tick\", \"end\"),\n      random = lcg();\n\n  if (nodes == null) nodes = [];\n\n  function step() {\n    tick();\n    event.call(\"tick\", simulation);\n    if (alpha < alphaMin) {\n      stepper.stop();\n      event.call(\"end\", simulation);\n    }\n  }\n\n  function tick(iterations) {\n    var i, n = nodes.length, node;\n\n    if (iterations === undefined) iterations = 1;\n\n    for (var k = 0; k < iterations; ++k) {\n      alpha += (alphaTarget - alpha) * alphaDecay;\n\n      forces.forEach(function(force) {\n        force(alpha);\n      });\n\n      for (i = 0; i < n; ++i) {\n        node = nodes[i];\n        if (node.fx == null) node.x += node.vx *= velocityDecay;\n        else node.x = node.fx, node.vx = 0;\n        if (node.fy == null) node.y += node.vy *= velocityDecay;\n        else node.y = node.fy, node.vy = 0;\n      }\n    }\n\n    return simulation;\n  }\n\n  function initializeNodes() {\n    for (var i = 0, n = nodes.length, node; i < n; ++i) {\n      node = nodes[i], node.index = i;\n      if (node.fx != null) node.x = node.fx;\n      if (node.fy != null) node.y = node.fy;\n      if (isNaN(node.x) || isNaN(node.y)) {\n        var radius = initialRadius * Math.sqrt(0.5 + i), angle = i * initialAngle;\n        node.x = radius * Math.cos(angle);\n        node.y = radius * Math.sin(angle);\n      }\n      if (isNaN(node.vx) || isNaN(node.vy)) {\n        node.vx = node.vy = 0;\n      }\n    }\n  }\n\n  function initializeForce(force) {\n    if (force.initialize) force.initialize(nodes, random);\n    return force;\n  }\n\n  initializeNodes();\n\n  return simulation = {\n    tick: tick,\n\n    restart: function() {\n      return stepper.restart(step), simulation;\n    },\n\n    stop: function() {\n      return stepper.stop(), simulation;\n    },\n\n    nodes: function(_) {\n      return arguments.length ? (nodes = _, initializeNodes(), forces.forEach(initializeForce), simulation) : nodes;\n    },\n\n    alpha: function(_) {\n      return arguments.length ? (alpha = +_, simulation) : alpha;\n    },\n\n    alphaMin: function(_) {\n      return arguments.length ? (alphaMin = +_, simulation) : alphaMin;\n    },\n\n    alphaDecay: function(_) {\n      return arguments.length ? (alphaDecay = +_, simulation) : +alphaDecay;\n    },\n\n    alphaTarget: function(_) {\n      return arguments.length ? (alphaTarget = +_, simulation) : alphaTarget;\n    },\n\n    velocityDecay: function(_) {\n      return arguments.length ? (velocityDecay = 1 - _, simulation) : 1 - velocityDecay;\n    },\n\n    randomSource: function(_) {\n      return arguments.length ? (random = _, forces.forEach(initializeForce), simulation) : random;\n    },\n\n    force: function(name, _) {\n      return arguments.length > 1 ? ((_ == null ? forces.delete(name) : forces.set(name, initializeForce(_))), simulation) : forces.get(name);\n    },\n\n    find: function(x, y, radius) {\n      var i = 0,\n          n = nodes.length,\n          dx,\n          dy,\n          d2,\n          node,\n          closest;\n\n      if (radius == null) radius = Infinity;\n      else radius *= radius;\n\n      for (i = 0; i < n; ++i) {\n        node = nodes[i];\n        dx = x - node.x;\n        dy = y - node.y;\n        d2 = dx * dx + dy * dy;\n        if (d2 < radius) closest = node, radius = d2;\n      }\n\n      return closest;\n    },\n\n    on: function(name, _) {\n      return arguments.length > 1 ? (event.on(name, _), simulation) : event.on(name);\n    }\n  };\n}\n","var noop = {value: () => {}};\n\nfunction dispatch() {\n  for (var i = 0, n = arguments.length, _ = {}, t; i < n; ++i) {\n    if (!(t = arguments[i] + \"\") || (t in _) || /[\\s.]/.test(t)) throw new Error(\"illegal type: \" + t);\n    _[t] = [];\n  }\n  return new Dispatch(_);\n}\n\nfunction Dispatch(_) {\n  this._ = _;\n}\n\nfunction parseTypenames(typenames, types) {\n  return typenames.trim().split(/^|\\s+/).map(function(t) {\n    var name = \"\", i = t.indexOf(\".\");\n    if (i >= 0) name = t.slice(i + 1), t = t.slice(0, i);\n    if (t && !types.hasOwnProperty(t)) throw new Error(\"unknown type: \" + t);\n    return {type: t, name: name};\n  });\n}\n\nDispatch.prototype = dispatch.prototype = {\n  constructor: Dispatch,\n  on: function(typename, callback) {\n    var _ = this._,\n        T = parseTypenames(typename + \"\", _),\n        t,\n        i = -1,\n        n = T.length;\n\n    // If no callback was specified, return the callback of the given type and name.\n    if (arguments.length < 2) {\n      while (++i < n) if ((t = (typename = T[i]).type) && (t = get(_[t], typename.name))) return t;\n      return;\n    }\n\n    // If a type was specified, set the callback for the given type and name.\n    // Otherwise, if a null callback was specified, remove callbacks of the given name.\n    if (callback != null && typeof callback !== \"function\") throw new Error(\"invalid callback: \" + callback);\n    while (++i < n) {\n      if (t = (typename = T[i]).type) _[t] = set(_[t], typename.name, callback);\n      else if (callback == null) for (t in _) _[t] = set(_[t], typename.name, null);\n    }\n\n    return this;\n  },\n  copy: function() {\n    var copy = {}, _ = this._;\n    for (var t in _) copy[t] = _[t].slice();\n    return new Dispatch(copy);\n  },\n  call: function(type, that) {\n    if ((n = arguments.length - 2) > 0) for (var args = new Array(n), i = 0, n, t; i < n; ++i) args[i] = arguments[i + 2];\n    if (!this._.hasOwnProperty(type)) throw new Error(\"unknown type: \" + type);\n    for (t = this._[type], i = 0, n = t.length; i < n; ++i) t[i].value.apply(that, args);\n  },\n  apply: function(type, that, args) {\n    if (!this._.hasOwnProperty(type)) throw new Error(\"unknown type: \" + type);\n    for (var t = this._[type], i = 0, n = t.length; i < n; ++i) t[i].value.apply(that, args);\n  }\n};\n\nfunction get(type, name) {\n  for (var i = 0, n = type.length, c; i < n; ++i) {\n    if ((c = type[i]).name === name) {\n      return c.value;\n    }\n  }\n}\n\nfunction set(type, name, callback) {\n  for (var i = 0, n = type.length; i < n; ++i) {\n    if (type[i].name === name) {\n      type[i] = noop, type = type.slice(0, i).concat(type.slice(i + 1));\n      break;\n    }\n  }\n  if (callback != null) type.push({name: name, value: callback});\n  return type;\n}\n\nexport default dispatch;\n","var frame = 0, // is an animation frame pending?\n    timeout = 0, // is a timeout pending?\n    interval = 0, // are any timers active?\n    pokeDelay = 1000, // how frequently we check for clock skew\n    taskHead,\n    taskTail,\n    clockLast = 0,\n    clockNow = 0,\n    clockSkew = 0,\n    clock = typeof performance === \"object\" && performance.now ? performance : Date,\n    setFrame = typeof window === \"object\" && window.requestAnimationFrame ? window.requestAnimationFrame.bind(window) : function(f) { setTimeout(f, 17); };\n\nexport function now() {\n  return clockNow || (setFrame(clearNow), clockNow = clock.now() + clockSkew);\n}\n\nfunction clearNow() {\n  clockNow = 0;\n}\n\nexport function Timer() {\n  this._call =\n  this._time =\n  this._next = null;\n}\n\nTimer.prototype = timer.prototype = {\n  constructor: Timer,\n  restart: function(callback, delay, time) {\n    if (typeof callback !== \"function\") throw new TypeError(\"callback is not a function\");\n    time = (time == null ? now() : +time) + (delay == null ? 0 : +delay);\n    if (!this._next && taskTail !== this) {\n      if (taskTail) taskTail._next = this;\n      else taskHead = this;\n      taskTail = this;\n    }\n    this._call = callback;\n    this._time = time;\n    sleep();\n  },\n  stop: function() {\n    if (this._call) {\n      this._call = null;\n      this._time = Infinity;\n      sleep();\n    }\n  }\n};\n\nexport function timer(callback, delay, time) {\n  var t = new Timer;\n  t.restart(callback, delay, time);\n  return t;\n}\n\nexport function timerFlush() {\n  now(); // Get the current time, if not already set.\n  ++frame; // Pretend we’ve set an alarm, if we haven’t already.\n  var t = taskHead, e;\n  while (t) {\n    if ((e = clockNow - t._time) >= 0) t._call.call(undefined, e);\n    t = t._next;\n  }\n  --frame;\n}\n\nfunction wake() {\n  clockNow = (clockLast = clock.now()) + clockSkew;\n  frame = timeout = 0;\n  try {\n    timerFlush();\n  } finally {\n    frame = 0;\n    nap();\n    clockNow = 0;\n  }\n}\n\nfunction poke() {\n  var now = clock.now(), delay = now - clockLast;\n  if (delay > pokeDelay) clockSkew -= delay, clockLast = now;\n}\n\nfunction nap() {\n  var t0, t1 = taskHead, t2, time = Infinity;\n  while (t1) {\n    if (t1._call) {\n      if (time > t1._time) time = t1._time;\n      t0 = t1, t1 = t1._next;\n    } else {\n      t2 = t1._next, t1._next = null;\n      t1 = t0 ? t0._next = t2 : taskHead = t2;\n    }\n  }\n  taskTail = t0;\n  sleep(time);\n}\n\nfunction sleep(time) {\n  if (frame) return; // Soonest alarm already set, or will be.\n  if (timeout) timeout = clearTimeout(timeout);\n  var delay = time - clockNow; // Strictly less than if we recomputed clockNow.\n  if (delay > 24) {\n    if (time < Infinity) timeout = setTimeout(wake, time - clock.now() - clockSkew);\n    if (interval) interval = clearInterval(interval);\n  } else {\n    if (!interval) clockLast = clock.now(), interval = setInterval(poke, pokeDelay);\n    frame = 1, setFrame(wake);\n  }\n}\n","// https://en.wikipedia.org/wiki/Linear_congruential_generator#Parameters_in_common_use\nconst a = 1664525;\nconst c = 1013904223;\nconst m = 4294967296; // 2^32\n\nexport default function() {\n  let s = 1;\n  return () => (s = (a * s + c) % m) / m;\n}\n","import constant from \"./constant.js\";\n\nexport default function(x) {\n  var strength = constant(0.1),\n      nodes,\n      strengths,\n      xz;\n\n  if (typeof x !== \"function\") x = constant(x == null ? 0 : +x);\n\n  function force(alpha) {\n    for (var i = 0, n = nodes.length, node; i < n; ++i) {\n      node = nodes[i], node.vx += (xz[i] - node.x) * strengths[i] * alpha;\n    }\n  }\n\n  function initialize() {\n    if (!nodes) return;\n    var i, n = nodes.length;\n    strengths = new Array(n);\n    xz = new Array(n);\n    for (i = 0; i < n; ++i) {\n      strengths[i] = isNaN(xz[i] = +x(nodes[i], i, nodes)) ? 0 : +strength(nodes[i], i, nodes);\n    }\n  }\n\n  force.initialize = function(_) {\n    nodes = _;\n    initialize();\n  };\n\n  force.strength = function(_) {\n    return arguments.length ? (strength = typeof _ === \"function\" ? _ : constant(+_), initialize(), force) : strength;\n  };\n\n  force.x = function(_) {\n    return arguments.length ? (x = typeof _ === \"function\" ? _ : constant(+_), initialize(), force) : x;\n  };\n\n  return force;\n}\n","import constant from \"./constant.js\";\n\nexport default function(y) {\n  var strength = constant(0.1),\n      nodes,\n      strengths,\n      yz;\n\n  if (typeof y !== \"function\") y = constant(y == null ? 0 : +y);\n\n  function force(alpha) {\n    for (var i = 0, n = nodes.length, node; i < n; ++i) {\n      node = nodes[i], node.vy += (yz[i] - node.y) * strengths[i] * alpha;\n    }\n  }\n\n  function initialize() {\n    if (!nodes) return;\n    var i, n = nodes.length;\n    strengths = new Array(n);\n    yz = new Array(n);\n    for (i = 0; i < n; ++i) {\n      strengths[i] = isNaN(yz[i] = +y(nodes[i], i, nodes)) ? 0 : +strength(nodes[i], i, nodes);\n    }\n  }\n\n  force.initialize = function(_) {\n    nodes = _;\n    initialize();\n  };\n\n  force.strength = function(_) {\n    return arguments.length ? (strength = typeof _ === \"function\" ? _ : constant(+_), initialize(), force) : strength;\n  };\n\n  force.y = function(_) {\n    return arguments.length ? (y = typeof _ === \"function\" ? _ : constant(+_), initialize(), force) : y;\n  };\n\n  return force;\n}\n","import { AnimatedTheme } from \"../.internal/themes/AnimatedTheme\";\r\nexport default AnimatedTheme;\r\n//# sourceMappingURL=Animated.js.map","import { AnimatedTheme } from \"../.internal/themes/AnimatedTheme\";\nexport default AnimatedTheme;","import { Theme } from \"../core/Theme\";\r\n/**\r\n * @ignore\r\n */\r\nexport class AnimatedTheme extends Theme {\r\n    setupDefaultRules() {\r\n        super.setupDefaultRules();\r\n        this.rule(\"Component\").setAll({\r\n            interpolationDuration: 600\r\n        });\r\n        this.rule(\"Hierarchy\").set(\"animationDuration\", 600);\r\n        this.rule(\"Scrollbar\").set(\"animationDuration\", 600);\r\n        this.rule(\"Tooltip\").set(\"animationDuration\", 300);\r\n        this.rule(\"MapChart\").set(\"animationDuration\", 1000);\r\n        this.rule(\"MapChart\").set(\"wheelDuration\", 300);\r\n        this.rule(\"Entity\").setAll({\r\n            stateAnimationDuration: 600\r\n        });\r\n        this.rule(\"Sprite\").states.create(\"default\", { stateAnimationDuration: 600 });\r\n        this.rule(\"Tooltip\", [\"axis\"]).setAll({\r\n            animationDuration: 200\r\n        });\r\n        this.rule(\"WordCloud\").set(\"animationDuration\", 500);\r\n        this.rule(\"Polygon\").set(\"animationDuration\", 600);\r\n        this.rule(\"ArcDiagram\").set(\"animationDuration\", 600);\r\n    }\r\n}\r\n//# sourceMappingURL=AnimatedTheme.js.map","import { Theme } from \"../core/Theme\";\n\n/**\n * @ignore\n */\nexport class AnimatedTheme extends Theme {\n\tprotected setupDefaultRules() {\n\t\tsuper.setupDefaultRules();\n\n\t\tthis.rule(\"Component\").setAll({\n\t\t\tinterpolationDuration: 600\n\t\t});\n\n\t\tthis.rule(\"Hierarchy\").set(\"animationDuration\", 600);\n\t\tthis.rule(\"Scrollbar\").set(\"animationDuration\", 600);\n\n\t\tthis.rule(\"Tooltip\").set(\"animationDuration\", 300);\n\n\t\tthis.rule(\"MapChart\").set(\"animationDuration\", 1000);\n\t\tthis.rule(\"MapChart\").set(\"wheelDuration\", 300);\n\n\t\tthis.rule(\"Entity\").setAll({\n\t\t\tstateAnimationDuration: 600\n\t\t});\n\n\t\tthis.rule(\"Sprite\").states.create(\"default\", { stateAnimationDuration: 600 });\n\n\t\tthis.rule(\"Tooltip\", [\"axis\"]).setAll({\n\t\t\tanimationDuration: 200\n\t\t});\n\n\t\tthis.rule(\"WordCloud\").set(\"animationDuration\", 500);\n\t\tthis.rule(\"Polygon\").set(\"animationDuration\", 600);\n\t\tthis.rule(\"ArcDiagram\").set(\"animationDuration\", 600);\n\t}\n}\n"],"names":["a","$634f9492ccea7012$exports","$cfae44f0dfdf62c0$exports","$cfae44f0dfdf62c0$var$process","$cfae44f0dfdf62c0$var$defaultSetTimout","Error","$cfae44f0dfdf62c0$var$defaultClearTimeout","$cfae44f0dfdf62c0$var$runTimeout","fun","$cfae44f0dfdf62c0$var$cachedSetTimeout","setTimeout","e","call","$cfae44f0dfdf62c0$var$cachedClearTimeout","clearTimeout","$cfae44f0dfdf62c0$var$queue","$cfae44f0dfdf62c0$var$draining","$cfae44f0dfdf62c0$var$queueIndex","$cfae44f0dfdf62c0$var$cleanUpNextTick","$cfae44f0dfdf62c0$var$currentQueue","length","concat","$cfae44f0dfdf62c0$var$drainQueue","timeout","len","run","$cfae44f0dfdf62c0$var$runClearTimeout","marker","$cfae44f0dfdf62c0$var$Item","array","$cfae44f0dfdf62c0$var$noop","$f63bdea45a89cf24$export$c9f5652083b8129d","value","Number","$f63bdea45a89cf24$export$a0a81dc3380ce7d3","$f63bdea45a89cf24$export$7e4aa119212bc614","converted","$f63bdea45a89cf24$export$844ec244b1367d54","replace","$f63bdea45a89cf24$export$76d90c956114f2c2","string","amount","Array","join","$f63bdea45a89cf24$export$871608497c498473","$f63bdea45a89cf24$export$e2b5c5db9e2009fd","toString","$f63bdea45a89cf24$export$a6cdc56e425d0d0a","nextTick","args","arguments","i","push","prototype","apply","title","browser","env","argv","version","versions","on","addListener","once","off","removeListener","removeAllListeners","emit","prependListener","prependOnceListener","listeners","name","binding","cwd","chdir","dir","umask","self","t","n","r","performance","now","exports","hrtime","o","uptime","Date","getTime","window","g","s","u","l","c","p","d","Math","max","slice","cancelled","callback","round","handle","cancel","polyfill","requestAnimationFrame","cancelAnimationFrame","__esModule","default","Object","defineProperty","enumerable","get","globalThis","Function","hasOwnProperty","C","RegExp","test","floor","random","f","v","h","m","y","Symbol","iterator","constructor","E","keys","getOwnPropertySymbols","filter","getOwnPropertyDescriptor","w","forEach","A","getOwnPropertyDescriptors","defineProperties","b","isArray","T","from","TypeError","N","configurable","writable","toPrimitive","String","cursorAnimation","lastFrameTime","pauseUntil","eventQueue","eventLoop","eventLoopPaused","reverseCalledEvents","calledEvents","visibleNodes","initialOptions","elements","container","wrapper","document","createElement","cursor","strings","delay","pauseFor","deleteSpeed","loop","autoStart","devMode","skipAddStyles","wrapperClassName","cursorClassName","stringSplitter","onCreateTextNode","onRemoveNode","state","className","options","innerHTML","appendChild","runEventLoop","addEventToQueue","ms","typeString","deleteAll","typeOutHTMLString","split","typeCharacters","character","node","childNodes","nodeType","parentNode","pasteString","textContent","speed","cb","thisArg","addEventToStateProperty","eventName","eventArgs","shift","S","logInDevMode","currentEvent","createTextNode","_","type","unshift","removingCharacterNode","O","parseInt","L","D","M","x","P","j","R","k","Q","temp","F","H","I","U","pop","q","G","Y","removeChild","querySelector","init","key","setupWrapperElement","___TYPEWRITER_JS_STYLES_ADDED___","head","typeOutAllStrings","start","console","log","$f63bdea45a89cf24$export$55fc5ffc49a23c34","$f63bdea45a89cf24$export$cea82ace3c81ccd9","$2f30431acd054e2f$export$305f7d4e9d4624f2","$2f30431acd054e2f$export$871de8747c9eaa88","fn","output","$2f30431acd054e2f$export$79b2f7037acddd43","$2f30431acd054e2f$export$a40ba8785b7efce8","$2f30431acd054e2f$export$1e016427912bfd78","$2f30431acd054e2f$export$cd7f480d6b8286c3","element","found","index","indexOf","splice","$2f30431acd054e2f$export$2529f734547e2830","$2f30431acd054e2f$export$d947e5f4f4c48d48","toIndex","$2f30431acd054e2f$export$c36ae5e7e50e8840","$2f30431acd054e2f$export$5a98a36321617fd4","$2f30431acd054e2f$export$3589e1fa93f0a8a5","$2f30431acd054e2f$export$de3a4d4a0d731119","matches","$2f30431acd054e2f$export$71aa6c912b956294","$2f30431acd054e2f$export$249f83d169a7c462","keep","$a363f66303166aa1$export$9a67fa5e19f51a52","_disposed","isDisposed","dispose","_dispose","$a363f66303166aa1$export$6039fc6176d96e35","$a363f66303166aa1$export$e5175346f02c1d15","_disposers","$a363f66303166aa1$export$9720df365053d143","disposers","$a363f66303166aa1$export$8a02b29de282f67f","increment","_counter","$7e417cbab1b21893$export$ec8b666c5fe2c75a","_listeners","_killed","_disabled","_iterating","_enabled","disposer","hasListeners","hasListenersByType","$2f30431acd054e2f$export$4154a199d7d90455","killed","enable","disable","enableType","disableType","Infinity","_removeListener","listener","_removeExistingListener","context","_eachListener","info","undefined","isEnabled","removeType","has","_shouldDispatch","count","dispatch","event","_on","shouldClone","onAll","_type","copyFrom","source","$ddd3cfc9bee47cd2$var$checkBounds","$ddd3cfc9bee47cd2$export$54c2e3dc7acea9f5","initial","_values","values","contains","removeValue","removeIndex","hasIndex","getIndex","_onPush","newValue","events","target","_onInsertIndex","_onSetIndex","oldValue","_onRemoveIndex","_onMoveIndex","oldIndex","newIndex","_onClear","oldValues","setIndex","insertIndex","swap","value_a","value_b","moveValue","pushAll","setAll","newArray","old","clear","each","eachReverse","$ddd3cfc9bee47cd2$export$82bb93f974543403","autoDispose","$ddd3cfc9bee47cd2$export$92d9ebaedf6ba994","template","make","$5e30d142a93206ce$export$dca3b0875bd9a954","_container","_events","change","_onRemoved","_onInserted","child","_setParent","childrenDisplay","_childrenDisplay","addChild","_display","addChildAt","markDirtyBounds","markDirty","$bd0d0c10fd30006b$export$cbc348af47898b5e","percent","_value","interpolate","min","normalize","$bd0d0c10fd30006b$export$626336c2cd4b14de","$bd0d0c10fd30006b$export$46342ea78d85883c","$bd0d0c10fd30006b$export$888d047b0ce6de72","$bd0d0c10fd30006b$export$e50269385c77c348","$5c96a02c592fcff1$export$1050f835b63b671e","_arguments","generator","Promise","resolve","reject","fulfilled","step","next","rejected","result","done","adopt","then","$e66f9343b5144e1a$export$ed97f33186d4b816","object","$e66f9343b5144e1a$export$79b2f7037acddd43","$05b1b40b69b15016$export$3f65cefe8380dbea","dom","addEventListener","removeEventListener","$05b1b40b69b15016$export$6981aa66c6e2c48d","_ev","$05b1b40b69b15016$export$cde6a56f9669daf6","cap","$05b1b40b69b15016$export$a845ff6c553b3014","pointerId","$05b1b40b69b15016$export$e9a3efe7940d0764","$05b1b40b69b15016$export$c4dfce035d43d1e0","ev","Touch","PointerEvent","pointerType","MouseEvent","match","$05b1b40b69b15016$export$37a5fde709c1db82","property","style","$05b1b40b69b15016$export$e58f029f0fbfdb29","composedPath","path","$05b1b40b69b15016$export$a3b96849d75e4c53","$05b1b40b69b15016$export$2344b14b097df817","host","root","$05b1b40b69b15016$export$2dc32695cee26cb","interactive","pointerEvents","$05b1b40b69b15016$export$f7a7490116b79d4d","keyCode","$05b1b40b69b15016$export$302dfacf2b0a56fe","full","$05b1b40b69b15016$export$e3f9b6bf3780ff6e","char","$05b1b40b69b15016$export$87c2784dc9fc4ab","text","$05b1b40b69b15016$export$1261c7bb3da8241a","format","$05b1b40b69b15016$export$1fbf6f199c05a66","$05b1b40b69b15016$export$4a325aa52b8c4c19","$05b1b40b69b15016$export$6f157f7a2f040843","date","utc","getFullYear","diff","getTimezoneOffset","$05b1b40b69b15016$export$efe19b760242b2fc","_utc","UTC","getMonth","getDate","day","getUTCDay","setUTCDate","getUTCDate","firstDay","getUTCFullYear","ceil","$05b1b40b69b15016$export$6ef1a68df5e98f69","hours","base","$05b1b40b69b15016$export$c3133dbc11f66777","long","savings","timezone","d1","toLocaleString","timeZone","d2","timeZoneName","substr","wotz","wtz","$05b1b40b69b15016$export$29fb7152bd3f781a","color","hue2rgb","$05b1b40b69b15016$export$c85ca4f4753af384","$05b1b40b69b15016$export$137526ec3f31f69a","$05b1b40b69b15016$export$44af652f4cca9039","$05b1b40b69b15016$export$88ad500ef99d1561","tags1","tags2","$389de129b6cd18b1$var$string2hex","repeat","$389de129b6cd18b1$export$35e9368ef982300f","input","$389de129b6cd18b1$export$892596cec99bc70e","fromAny","SuppressedError","hex","_hex","toCSS","alpha","toCSSHex","toHSL","fromHSL","rgb","fromRGB","fromHex","fromString","fromCSS","$389de129b6cd18b1$export$4e59d32275d2248b","val","alternative","lightAlternative","darkAlternative","$05b1b40b69b15016$export$521a2e6212201f40","light","dark","to","mode","lighten","brighten","$05b1b40b69b15016$export$382cdde3a5b8f440","saturate","$05b1b40b69b15016$export$5fcac96f5a87e3db","saturation","hsl","$43e0e2dc9c95da4e$export$5bfdbf456b754132","animations","promises","animation","waitForStop","all","$43e0e2dc9c95da4e$export$d02631cccf789723","$43e0e2dc9c95da4e$export$f6bd804b3d805842","$43e0e2dc9c95da4e$export$71b5eeb90041857f","$43e0e2dc9c95da4e$export$ac63c65a91c8af0f","AnimationState","$43e0e2dc9c95da4e$export$d0f7a26c90cc1562","$f43e9e04b3f0548b$export$6b5c1ceb16d01dc3","PI","$f43e9e04b3f0548b$export$fd1bf64c4a4ea04a","$f43e9e04b3f0548b$export$e035ae0f6b8ef5d","$f43e9e04b3f0548b$export$386b748ab02f16a0","$f43e9e04b3f0548b$export$5de3937cb4b592ed","angle","sin","$f43e9e04b3f0548b$export$50d414a77b60d802","cos","$f43e9e04b3f0548b$export$7fbabd36a4c7fdd8","radius","arc","$b4231ef84a5f8a61$export$45db2fc2f15997e7","$b4231ef84a5f8a61$export$bdd5293f3cf7a909","$b4231ef84a5f8a61$export$ca49d7cd8ea40ba7","ease","$dad453b54c84e86c$export$7254cc27399e90bd","entity","settings","_entity","_settings","_userSettings","fallback","setRaw","set","remove","_eachSetting","seen","defaultState","states","lookup","applyAnimate","duration","stateAnimationDuration","easing","stateAnimationEasing","animate","$dad453b54c84e86c$export$47283907dceba392","_states","create","newState","_applyState","_applyStateAnimated","$ca44c6881f0f20f2$export$4bb7493d241fd8a5","$919e90129af4490b$export$398604a469f7de9a","left","right","$919e90129af4490b$export$cb07857b027678fa","leftLength","rightLength","order","$baeade534ece7f4c$export$aa533d00238abcca","add","callbacks","_callbacks","_markDirtyKey","fold","$baeade534ece7f4c$export$c35d437ae5945fcd","loops","startingTime","_animation","_from","_to","_duration","_easing","_loops","_interpolate","_oldTime","playing","_playing","stopped","_stopped","stop","pause","play","_startAnimation","percentage","_time","_reject","_checkEnded","_run","currentTime","_reset","$baeade534ece7f4c$var$counter","$baeade534ece7f4c$export$c72f6eaae7b9adff","_checkDirty","_userProperties","resetUserSettings","_runAnimation","Stopped","paused","_animatingSettings","_stopAnimation","_set","_animatingPrivateSettings","_stopAnimationPrivate","setPrivate","_setPrivate","Playing","Paused","_key","_markDirtyPrivateKey","_settingEvents","onPrivate","_privateSettingEvents","offPrivate","getRaw","_sendKeyEvent","_sendPrivateKeyEvent","_setRaw","_prevSettings","removeAll","getPrivate","_privateSettings","_setPrivateRaw","_prevPrivateSettings","setPrivateRaw","removePrivate","_animationTime","animatePrivate","enableDispose","$baeade534ece7f4c$export$bc644a473284d944","isReal","templates","_createEvents","_root","_internalTemplates","id","_registerId","new","_template","_afterNew","_new","shouldApply","_setObjectTemplate","_applyTemplates","_setDefaults","_afterNewApplyThemes","_applyThemes","classNames","_setDefaultFn","_setDefault","_setRawDefault","_clearDirty","_dirty","_dirtyPrivate","isDirty","isPrivateDirty","isType","_pushPropertyDisposer","_disposerProperties","_disposeProperty","_removeObjectTemplate","_addDirtyEntity","_addAnimation","animationTime","_name","adapters","isUserSetting","_setSoft","_removeTemplateProperty","_userPrivateProperties","_removeTemplatePrivateProperty","_setTemplateProperty","_findTemplateByKey","_setTemplatePrivateProperty","_findTemplateByPrivateKey","_walkParents","_rootContainer","_applyStateByKey","other","_eachTemplate","_apply","_applyTemplate","_templateDisposers","privateSettings","_runSetup","setup","_findStaticTemplate","_templates","_disposeTemplates","_findTemplate","$2f30431acd054e2f$export$cda8c4def7b6e027","$2f30431acd054e2f$export$226e5ded3ade49e5","_removeTemplates","force","isConnected","defaults","themes","themeTags","Set","tags","tag","_defaultThemes","theme","allRules","rules","_lookupRules","rule","every","$2f30431acd054e2f$export$227c6173d90c5e68","ordering","end","pivot","_changed","_beforeChanged","prevId","entitiesById","_afterChanged","addDisposer","removeDispose","hasTag","addTag","removeTag","_t","locale","rest","language","translate","$2d9a18dcb72760f7$var$disposeSettings","$2d9a18dcb72760f7$export$39a8ed24daf9361f","_stateChanged","$2d9a18dcb72760f7$export$d10b0e89859ffbd4","$2d9a18dcb72760f7$export$a331a2a1dc9c3ce4","$2d9a18dcb72760f7$export$14416b8d99d47caa","_checkDisposed","entities","_entities","$d3b9c83dc790fa66$var$SpriteEventDispatcher","sprite","_sprite","_makePointerEvent","originalEvent","point","simulated","native","_onRenderer","_rendererDisposers","rendererEvent","RENDERER_EVENTS","stopParentDispatch","_dispatchParents","dispatchParents","parent","isDragging","_hasDown","_hasMoved","_getBounds","bounds","globalBounds","strokeWidth","top","bottom","_renderer","removeHovering","$d3b9c83dc790fa66$export$3075603db8e6204c","markDirtyKey","_addPercentagePositionChildren","markDirtyPosition","_removeTemplateField","_templateField","_processTemplateField","field","dataItem","dataContext","_setDataItem","oldDataItem","_dataItem","eventType","newDataItem","_parent","_addPercentageSizeChildren","_percentageSizeChildren","_percentagePositionChildren","_addDirtyPosition","updatePivotPoint","_localBounds","centerX","centerY","_handleStates","previous","tooltip","setLayer","markDirtyLayer","tooltipMoveDp","_tooltipMoveDp","tooltipPointerDp","_tooltipPointerDp","isHover","showTooltip","_statesHandled","isHidden","markDirtyAccessibility","display","draggable","_dragDp","dragStart","dragMove","dragStop","cancelTouch","tooltipText","tooltipHTML","showTooltipOn","_tooltipDp","getTooltip","hideTooltip","toggleKey","_toggleDp","_isDragging","scale","visible","_prevWidth","_sizeDirty","_updateSize","wheelable","_registerTabindexOrder","_unregisterTabindexOrder","blur","brightness","contrast","sepia","hue","invert","cursorOverStyle","_focusDp","exportable","_hoverDp","_handleOver","_handleOut","_isDown","_handleUp","_handleDown","inactive","_dragEvent","_dragPoint","_downPoint","_downPoints","downPoint","abs","dragEvent","dragPoint","hypot","getLocalBounds","depth","markDirtySize","_addDirtyBounds","isMeasured","invalidateBounds","isFocus","_invalidateAccessibility","_updateBounds","newBounds","oldBounds","_adjustedLocalBounds","_fixMinBounds","getAdjustedBounds","minWidth","minHeight","privateWidth","privateHeight","_removeParent","children","hover","unhover","tooltipPosition","tooltipTarget","_setMatrix","toGlobal","_getTooltipPoint","label","width","height","markDirtyText","promise","show","hide","_updatePosition","dx","dy","_x","xx","yy","position","innerWidth","_y","innerHeight","_removeFocusElement","adjustedLocalBounds","localBounds","p0","p1","p2","p3","_onShow","_onHide","appear","success","_error","_isShowing","_isHidden","_isHiding","isShowing","isHiding","hovering","focused","isVisible","isVisibleDeep","compositeOpacity","opacity","compositeScale","compositeRotation","rotation","maxWidth","maxHeight","_walkParent","updateChildren","prevParent","getNumberFormatter","numberFormatter","getDateFormatter","dateFormatter","getDurationFormatter","durationFormatter","toLocal","_getDownPoint","_getDownPointId","$e66f9343b5144e1a$export$dc3913a2a38a46a4","sort","toFront","toBack","$49f0d49e061737b8$export$47606a6ae3eaed8e","makeGraphics","pattern","_pattern","_draw","_clear","_checkDirtyFill","repetition","fill","fillOpacity","backgroundDisplay","_backgroundDisplay","beginFill","drawRect","endFill","createPattern","$f6091197791da1d7$export$1b09ebb7c225c9a8","_load","canvas","image","_image","patternWidth","patternHeight","fit","centered","src","Image","decode","catch","BlendMode","$26f287a8eb69ba00$export$c9b8fe72ac71821","$2ffdafbe1fe6a946$export$29d3e417456abdad","crisp","gradient","gradientTarget","strokeDasharray","setLineDash","strokeDashoffset","setLineDashOffset","blendMode","NORMAL","draw","svgPath","fillGradient","fillPattern","stroke","strokeGradient","strokePattern","shadowColor","shadowBlur","shadowOffsetX","shadowOffsetY","shadowOpacity","shadow","stops","colorInherited","opacityInherited","getFill","strokeOpacity","resolution","lineJoin","lineCap","lineStyle","endStroke","$9e0cea1ea085e274$export$4617fb02663045ef","$df0987941167623a$export$a435655d785c1180","$df0987941167623a$export$c84671f46d6a1ca","$ce42d27226ec20a0$export$8be7400f61e793f0","updateContainer","paddingLeft","availableWidth","totalPercent","childWidth","prevX","marginLeft","marginRight","$b05f413a7bdbea0f$export$e4d3124dc23dc9c9","paddingTop","availableHeight","childHeight","prevY","marginTop","marginBottom","$9961b4caf46ffbfc$export$7d2b12578154a735","MAX_VALUE","paddingRight","minCellWidth","maxCellWidth","columnCount","columnWidths","getColumnWidths","column","maxColumnHeight","totalWidth","$4b06370a9416d0ab$export$cfc95f342033cc43","escape","prefix","unescape","cleanUp","chunk","quotedBlocks","noFormatting","res","chunks","chunks2","i2","chunk2","isImage","getTextStyle","fontWeight","textDecoration","$8d45a8a77dcd0f75$export$6a40ef019a0fa5f6","$8d45a8a77dcd0f75$var$getTagValue","tagName","parts","reg","exec","prop","dateFields","numericFields","durationFields","method","params","matches2","reg2","$8d45a8a77dcd0f75$export$1aee974227db7753","component","current","formatApplied","part","tmp","$8d45a8a77dcd0f75$var$getCustomDataValue","customData","numberValue","dateValue","$f63bdea45a89cf24$export$e67a095c620b86fe","num","durationValue","encodeURIComponent","formatParts","formatterType","$05b1b40b69b15016$export$f61ac8b6f1f46202","hints","toLowerCase","trim","$5de502da8a72d65e$export$42a852a2b6b56249","makeContainer","allChildren","_removeHTMLContent","interactiveChildren","_prevHeight","layout","contentMask","_contentMask","mask","updateBackground","background","verticalScrollbar","_contentHeight","bg","eachChildren","_contentWidth","pWidth","pHeight","horizontal","vertical","paddingBottom","childBounds","childX","childY","cl","cr","ct","_addDirtyParent","_prepareChildren","_updateHTMLContent","html","_setHTMLContent","_positionHTMLElement","scrollToChild","ch","contentH","pos","_updateChildren","startGrip","endGrip","interfaceColors","_vsbd0","wheelEvent","preventDefault","shiftY","deltaY","_vsbd1","walkChildren","updated","$991c10b390813ab6$export$5f1af8db9871e1d6","makeTextStyle","makeText","textStyle","_getText","updateTooltip","_removeTooltipElement","wordWrapWidth","oversizedBehavior","breakWords","ellipsis","ignoreFormatting","minScale","_textStyles","styleName","$05b1b40b69b15016$export$c1942c34655b7385","maxLength","lastNonAlphanumericIndex","charAt","substring","_getAccessibleText","ariaLabel","$fcc21c9236571fac$var$Native","_observer","ResizeObserver","entries","entry","_targets","addTarget","observe","box","removeTarget","unobserve","$fcc21c9236571fac$var$Raf","_timer","lastTime","newSize","getBoundingClientRect","size","$fcc21c9236571fac$var$observer","$fcc21c9236571fac$export$99e7f5e92b1f0cf9","_sensor","_element","_listener","sensor","$78e10ff73ddf6061$export$8dce48c3552f8697","$f15f09c5037802f9$export$b04be29aa201d4f5","_text","_makeText","_textKeys","propValue","_setMaxDimentions","_maybeUpdateHTMLColor","textAlign","textVisible","htmlElement","getText","getAccessibleText","$b7e6ca628a07e093$export$458c0690b0cc8182","bwh","ybr","xbr","ytr","xtr","moveTo","stemX","lineTo","arcTo","stemY","closePath","$670fc48e4ddbc086$export$28c660c63b792dea","_label","_updateBackground","_updateTextColor","tooltipContainer","_htmlContentHovered","_handleReaderAnnouncement","_tooltips","readerAlert","updateBackgroundColor","_keepHoverDp","outEvent","getEvent","_fillDp","_strokeDp","_labelDp","cw","parentW","parentH","layerMargin","_w","_h","pointTo","pointerOrientation","pointerLength","bgStrokeSizeY","bgStrokeSizeX","pointerX","pointerY","boundsW","boundsH","_fx","_fy","animationDuration","animationEasing","$b20322a184511108$export$cc77c4ff7e8673c5","bns","sns","bs","suffix","precision","formatted","Intl","NumberFormat","details","parseFormat","positive","negative","zero","mod","assign","decimals","active","applyFormat","thousandSeparator","translateEmpty","decimalSeparator","_part","item","parsed","partFormat","mods","modSpacing","thousands","passive","interval","applyPrefix","ol","parseFloat","toPrecision","exp","toExponential","pow","toFixed","$f63bdea45a89cf24$export$f67be9d9b0e25d7b","digits","exponent","zeros","ints","ip","intsr","reverse","separator","decs","prefixes","newvalue","applied","number","$3f31d8df1b17230f$var$parseDate","year","month","hour","minute","second","millisecond","weekday","formatToParts","$3f31d8df1b17230f$var$toUTCDate","$3f31d8df1b17230f$export$5242477c0ef6dc66","DateTimeFormat","hour12","fractionalSecondDigits","_dtf","convertLocal","offset","offsetUTC","userOffset","setUTCMinutes","getUTCMinutes","newUserOffset","parseDate","$31c1b4011aa9c6de$export$ad991b66133851cf","ignoreTimezone","locales","toUpperCase","fullYear","minutes","seconds","milliseconds","timestamp","getUTCMonth","getUTCHours","getUTCSeconds","getUTCMilliseconds","getDay","getHours","getMinutes","getSeconds","getMilliseconds","$05b1b40b69b15016$export$12d572480ceb6e58","_getMonth","_getShortMonth","$05b1b40b69b15016$export$b533a84e84a6dcfa","firstWeek","currentWeek","translateFunc","_getShortWeekday","_getWeekday","firstDayOfWeek","$05b1b40b69b15016$export$4c9db454e2785fd9","utcDate","tzDate","tz","tzh","tzm","toISOString","toUTCString","dateFormat","_months","_shortMonths","_weekdays","_shortWeekdays","parse","parsedIndexes","resValues","indexAdjust","year3","year2","year1","getStringList","monthLong","monthShort","week","yearDay","weekdayLong","weekdayShort","am","hour12Base1","hourBase0","hour12Base0","hourBase1","millisecondDigits","zone","iso","regex","resolveMonth","resolveShortMonth","$05b1b40b69b15016$export$c5933b95cf2ffa17","setUTCFullYear","isAm","ts","resolveTimezoneOffset","isDefault","translateAll","list","$e14cdfadb6108833$export$cee2d4e6b36ce468","dmillisecond","dsecond","dminute","dhour","dday","dweek","dmonth","aminute","ahour","aday","aweek","amonth","ayear","baseUnit","getFormat","dirs","absolute","_unitAliases","tstamp","toTimeStamp","unit","_toTimeUnit","unitValue","_getUnitValue","code","maxValue","maxUnit","getValueUnit","currentUnit","$e66f9343b5144e1a$export$1e016427912bfd78","$e66f9343b5144e1a$export$94df19ecb868bc1a","_getUnitValues","timeUnit","$8ced240747ebccef$export$2e2bcd8739ae039","$a5f7473fad5303dc$export$ce4fe1c9e6520c1a","prompt","translation","translateAny","setTranslationAny","localeTarget","setTranslationsAny","translations","$a953e95d35d4141a$export$14faa19a0f3bbeb2","setupDefaultRules","themeClass","_rules","ruleRaw","$2f30431acd054e2f$export$5637f53fe994488d","$c53b0c859cf33b39$export$130a5dc1bc9cd8e1","ic","$c53b0c859cf33b39$export$48bc85c4a6e4243b","horizontalLayout","verticalLayout","bind","primaryButton","primaryButtonHover","primaryButtonDown","primaryButtonActive","primaryButtonDisabled","primaryButtonTextDisabled","primaryButtonText","primaryButtonStroke","secondaryButton","secondaryButtonHover","secondaryButtonDown","secondaryButtonActive","secondaryButtonText","secondaryButtonStroke","grid","alternativeBackground","alternativeText","disabled","passOptions","lightness","colors","reuse","startIndex","interpolationDuration","interpolationEasing","tooltipX","tooltipY","setStateOnChildren","pinchZoom","maxZoomLevel","minZoomLevel","zoomStep","maxPanOut","gap","colorOpacity","checkered","horizontalGap","verticalGap","density","minOpacity","maxOpacity","fillField","strokeField","nameField","layer","clickTarget","ariaChecked","focusable","role","cornerRadiusBL","cornerRadiusTL","cornerRadiusBR","cornerRadiusTR","populateText","stepCount","fontFamily","fontSize","textType","inside","baseRadius","orientation","editOn","multiLine","pointerBaseWidth","cornerRadius","shiftRadius","dRadius","dInnerRadius","locationX","locationY","getFillFromSprite","getStrokeFromSprite","autoTextColor","forceInactive","ariaValueMin","ariaValueMax","ariaLive","labelText","spikes","innerRadius","rotationStep","$182117fd0d651ae2$export$5b12bf1653c0dd85","tx","ty","setTransform","pivotX","pivotY","origin","applyInverse","append","matrix","a1","b1","c1","prepend","tx1","$2661fd5dfc261885$var$_slicedToArray","arr","sliceIterator","_arr","_n","_d","_e","_s","_i","err","$2661fd5dfc261885$var$TAU","$2661fd5dfc261885$var$mapToEllipse","_ref","rx","ry","cosphi","sinphi","centerx","centery","xp","yp","$2661fd5dfc261885$var$approxUnitArc","ang1","ang2","tan","x1","y1","x2","y2","$2661fd5dfc261885$var$vectorAngle","ux","uy","vx","vy","dot","sign","acos","$2661fd5dfc261885$var$getArcCenter","px","py","cx","cy","largeArcFlag","sweepFlag","pxp","pyp","rxsq","rysq","pxpsq","pypsq","radicant","centerxp","sqrt","centeryp","vx1","vy1","$2661fd5dfc261885$export$2e2bcd8739ae039","_ref2","_ref2$xAxisRotation","xAxisRotation","_ref2$largeArcFlag","_ref2$sweepFlag","curves","lambda","_getArcCenter2","ratio","segments","map","curve","_mapToEllipse","_mapToEllipse2","_mapToEllipse3","$217bcb2fe88d1cdd$var$checkMinArgs","actual","expected","$217bcb2fe88d1cdd$var$checkEvenArgs","$217bcb2fe88d1cdd$var$assertBinary","$217bcb2fe88d1cdd$var$eachTargets","hitTarget","$217bcb2fe88d1cdd$var$isTainted","getContext","willReadFrequently","drawImage","getImageData","warn","$217bcb2fe88d1cdd$var$clearCanvas","view","$217bcb2fe88d1cdd$var$crisp","$217bcb2fe88d1cdd$export$5a134e2faa19e404","$217bcb2fe88d1cdd$export$e0e1ad123bfa6ff4","renderer","subStatus","status","_layer","_removeObject","getLayer","dirty","getCanvas","defaultLayer","margin","_ghostLayer","setMargin","layers","registerChildLayer","resizeLayer","resizeGhost","_addBounds","_bounds","_getColorId","_colorId","paintId","_isInteractive","_forceInteractive","_isInteractiveMask","_matrix","getLocalMatrix","_uMatrix","_addEvent","_localMatrix","_transform","_transformMargin","_transformLayer","render","_omitTainted","ghostLayer","ghostContext","save","_runPath","clip","globalAlpha","compoundAlpha","_render","restore","tainted","_hovering","dragging","_dragging","some","shouldCancelTouch","tapToActivate","_touchActive","$217bcb2fe88d1cdd$export$b859d337447d8a21","_children","_childLayers","deep","$217bcb2fe88d1cdd$var$setPoint","$217bcb2fe88d1cdd$var$Op","colorize","_context","_forceColor","colorizeGhost","forceColor","pathGhost","addBounds","$217bcb2fe88d1cdd$var$BeginPath","beginPath","$217bcb2fe88d1cdd$var$BeginFill","fillStyle","$217bcb2fe88d1cdd$var$EndFill","clearShadow","$217bcb2fe88d1cdd$var$EndStroke","$217bcb2fe88d1cdd$var$LineStyle","strokeStyle","lineWidth","$217bcb2fe88d1cdd$var$LineDash","dash","$217bcb2fe88d1cdd$var$LineDashOffset","dashOffset","lineDashOffset","$217bcb2fe88d1cdd$var$DrawRect","rect","$217bcb2fe88d1cdd$var$DrawCircle","$217bcb2fe88d1cdd$var$DrawEllipse","radiusX","radiusY","ellipse","$217bcb2fe88d1cdd$var$Arc","startAngle","endAngle","anticlockwise","arcBounds","$f43e9e04b3f0548b$export$87d7822d7a31793f","minX","minY","maxX","maxY","bpoints","fromAngle","toAngle","pt","$217bcb2fe88d1cdd$var$ArcTo","$217bcb2fe88d1cdd$var$LineTo","$217bcb2fe88d1cdd$var$MoveTo","$217bcb2fe88d1cdd$var$ClosePath","$217bcb2fe88d1cdd$var$BezierCurveTo","cpX","cpY","cpX2","cpY2","toX","toY","bezierCurveTo","$217bcb2fe88d1cdd$var$QuadraticCurveTo","quadraticCurveTo","$217bcb2fe88d1cdd$var$Shadow","offsetX","offsetY","$217bcb2fe88d1cdd$var$GraphicsImage","$217bcb2fe88d1cdd$export$51df14243a6273b2","_operations","_pushOp","op","_fillAlpha","_hasShadows","_strokeAlpha","drawCircle","drawEllipse","cpx","cpy","qcpx","qcpy","SEGMENTS_REGEXP","ARGS_REGEXP","relative","$217bcb2fe88d1cdd$var$splitArcFlags","flag","$217bcb2fe88d1cdd$var$checkArgs","layerDirty","globalCompositeOperation","renderDetached","$217bcb2fe88d1cdd$export$3def536413f544ed","_textInfo","_shared","direction","textBaseline","_prerender","ignoreGhost","ignoreFontWeight","fontStyle","_getFontStyle","font","style2","fontVariant","_measure","line","_index","textChunks","fillText","thickness","metrics","_measureText","actualBoundingBoxLeft","actualBoundingBoxRight","_ignoreFontWeight","navigator","vendor","currentStyle","rtl","truncate","wrap","refText","lines","styleRestored","currentFormat","currentFill","currentChunkWidth","currentVerticalAlign","lineInfo","ascent","actualBoundingBoxAscent","actualBoundingBoxDescent","currentDecoration","skipFurtherText","firstTextChunk","leftoverChunks","verticalAlign","chunkWidth","ellipsisMetrics","ellipsisWidth","excessWidth","_truncateText","tmpText","leftBoundMod","rightBoundMod","boundsMod","chunkHeight","lineHeight","currentChunkOffset","baselineRatio","_fitRatio","_originalScale","maxW","maxH","fallbackBreakWords","measureText","fakeMetrics","div","innerText","visibility","body","bbox","fontBoundingBoxAscent","fontBoundingBoxDescent","$217bcb2fe88d1cdd$export$14f1f3efc2895a7c","$217bcb2fe88d1cdd$export$6f70e6edef4626e6","_renderCircular","deltaAngle","inward","align","kerning","clockwise","shouldReverse","_textReversed","maxAngle","midAngle","textHeight","lineStartAngle","rotate","angleShift","charWidth","_measureCircular","chars","$05b1b40b69b15016$export$d05bbe0328e41cc6","rtlChar","splitPattern","segment","$217bcb2fe88d1cdd$export$e53fcdbfdf4d0d97","_imageMask","naturalWidth","naturalHeight","_getMask","imageSmoothingEnabled","fillRect","$217bcb2fe88d1cdd$export$4e9e47eb662c1d9f","originalPoint","identifier","$217bcb2fe88d1cdd$export$7adc20298958481a","$217bcb2fe88d1cdd$var$GhostLayer","_patternCanvas","devicePixelRatio","setAttribute","_layerDom","exportableView","_touchActiveTimeout","_delayTouchDeactivate","prevent","obj","resetImageArray","imageArray","tapToActivateTimeout","debugGhostView","createLinearGradient","createRadialGradient","radius1","radius2","graphics","_patternContext","clearRect","makeRadialText","makePicture","resize","_calculatedWidth","_calculatedHeight","realWidth","realHeight","calculatedWidth","calculatedHeight","_realWidth","_realHeight","createDetachedLayer","$217bcb2fe88d1cdd$export$7b8f87dabf3b6ee0","getLayerByOrder","existingLayer","layerIndex","insertBefore","_dirtyLayers","_lastPointerMoveEvent","_dispatchGlobalMousemove","$217bcb2fe88d1cdd$var$distributeId","_colorMap","_adjustBoundingBox","DOMRect","adjustPoint","clientX","clientY","widthScale","heightScale","_getHitTarget","pixel","data","colorId","getObjectAtPoint","getImageArray","_withEvents","dispatching","cleanup","disposed","_dispatchEventAll","interactionsEnabled","_dispatchEvent","dispatched","_dispatchMousedown","originalTarget","button","dragged","_mousedown","delete","_replacedCursorStyle","_dispatchGlobalMouseup","_dispatchDragMove","_dispatchDragEnd","clickevent","_dispatchDoubleClick","_dispatchWheel","_makeSharedEvent","_onPointerEvent","timer","touches","changedTouches","$2f30431acd054e2f$export$784d13d8ee351f07","_initEvent","mouseup","pointercancel","mousedown","mousemove","canvasWidth","canvasHeight","maxScale","maintainPixelRatio","canvases","forceRender","needRerender","exportableContext","extraX","extraY","clientWidth","clientHeight","domWidth","domHeight","_resolution","_width","_height","$7803fe0a06c1ef65$var$rAF","fps","$7803fe0a06c1ef65$export$be92b6f5f03c0fe9","accessible","_a11yD","useSafeResolution","$05b1b40b69b15016$export$d81d0eca22fc682c","HTMLElement","getElementById","rootElements","inner","tooltipContainerBounds","_tooltipContainerSettings","_inner","_updateComputedStyles","_init","moveDOM","_initResizeSensor","_handleLogo","_logo","offsetWidth","offsetHeight","_showBranding","logo","open","_getRealSize","_getCalculatedSize","calculateSize","tabindex","rootContainer","htmlElementContainer","_htmlElementContainer","overflow","readerAlertElement","_readerAlertElement","focusElementContainer","_focusElementContainer","tooltipElementContainer","_tooltipElementContainer","eventKey","_isShift","shiftKey","focusedSprite","_focusedSprite","announceText","downEvent","$05b1b40b69b15016$export$2cc7ff91bcacba5e","activeElement","focus","dragOffsetX","dragOffsetY","_keyboardDragPoint","moveEvent","upEvent","el","group","items","_tabindexes","lastIndex","_focusNext","_startTicker","setThemes","_addTooltip","_hasLicense","_resizeSensorDisposer","autoResize","_focusElementDirty","_updateCurrentFocus","_runTickers","_tickers","_runAnimations","running","_animations","_isDirtyAnimation","_runDirties","allParents","_isDirtyParents","_dirtyParents","uid","objects","_isDirty","depths","_dirtyBounds","_positionHTMLElements","dirtyPositions","_dirtyPositions","_renderFrame","_updateTick","_checkComputedStyles","animationDone","_runTicker","_ticker","_paused","_runTickerNow","endTime","updateTick","_markDirty","_markDirtyRedraw","eachFrame","markDirtyGlobal","_isDisposed","$05b1b40b69b15016$export$f883456a56996078","tooltipContainerSettings","_tooltip","_invalidateTabindexes","aindex","bindex","groups","_moveFocusElement","_makeFocusElement","_decorateFocusElement","_positionFocusElement","focusElement","removeAttribute","ariaCurrent","ariaSelected","ariaOrientation","ariaValueNow","ariaValueText","ariaControls","getAttribute","tabIndex","_handleFocus","_handleBlur","_hideFocusElement","padding","focusPadding","_getSpriteByFocusElement","focusableElements","querySelectorAll","targetElement","tooltipElement","_makeTooltipElement","parentElement","documentPointToRoot","scaleWidth","scaleHeight","rootPointToDocument","styles","getComputedStyle","fontHash","changed","_fontHash","_invalidateLabelBounds","licenses","_licenseApplied","_makeHTMLElement","boxSizing","_htmlEnabledContainers","setting","transform","transformOrigin","lw","lh","ll","lr","lt","lb","previousBounds","originX","originY","$7b05e1e856aa7465$export$8a1414ab037091f9","contents","_handleThisDown","_handleThisUp","_handleThisMove","_handleSetWheel","_wheelDp","_handleWheelZoom","delta","zoomLevel","newZoomLevel","zoomToPoint","level","_animateTo","_za","zoomIn","zoomOut","goHome","_txa","_tya","_event","_downScale","downPoints","_downX","_downY","downId","movePoint","_movePoints","_handlePinch","movePoints","downPoint0","downPoint1","movePoint0","movePoint1","initialDistance","currentDistance","moveCenter","downCenter","$2f85a21744f68190$export$d55ab2e3dc5a4263","wSign","hSign","minSide","crtl","crtr","crbr","crbl","maxcr","$f8fc56a6232808fd$export$353f5b6fc5456de1","icon","$910a40cf2e953cca$export$ba5a51be6dbb03bd","plusButton","minusButton","homeButton","_targetDisposer","_disposer","$02b848ff4571bf92$export$8bc2de8f21739450","reset","generateColors","pass","currentStep","$6fd14349e0991ae8$export$40a77f3497d65048","gridLayout","legendLabelText","legendValueText","downDepth","initialDepth","singleBranchOnly","maskContent","strength","distance","upDepth","minRadius","maxRadius","initialFrames","centerStrength","manyBodyStrength","velocityDecay","linkWithStrength","showOnFrame","topDepth","nodePadding","layoutAlgorithm","minWeightRatio","convergenceRatio","maxIterationCount","$90e96dbd0e98a250$export$c241a244b7e1601c","incrementRef","decrementRef","processor","processRow","$255dd6cbbf32a3ff$export$e9ab04247990d50b","markDirtyValues","disposeDataItem","showDataItem","hideDataItem","$255dd6cbbf32a3ff$export$16fa2f45be04daa8","_dataItems","_data","_onDataClear","_updateFields","dataItems","_mainDataItems","_markDirtyGroup","_dataChanged","_makeDataItem","processDataItem","properties","bullets","_afterDataChange","valueFields","_valueFields","_valueFieldsF","fieldKey","workingKey","fields","_fields","_fieldsF","makeDataItem","pushDataItem","_valuesDirty","inited","_dataGrouped","$1822b64bd10e2c7e$export$ed28a77b2a3badcf","_handleBullets","bulletsContainer","endIndex","bullet","getDataItemById","_makeBullets","_shouldMakeBullet","bulletFunction","_makeBullet","_makeBulletReal","series","addBullet","_aggregatesCalculated","_selectionAggregatesCalculated","updateLegendValue","baseValueSeries","_dataProcessed","_calculateAggregates","_psi","_pei","markerRectangle","legendDataItem","updateLegendMarker","_adjustStartIndex","sum","absSum","low","high","close","average","changePercent","changePrevious","changePreviousPercent","changeSelection","changeSelectionPercent","openKey","adjustedStartIndex","_getBase","minValue","dataField","neutral","customFunction","propertyValue","logarithmic","LOG10E","_hideBullets","_positionBullets","_positionBullet","_bullet","_placeBulletsContainer","chart","_removeBulletsContainer","_getItemReaderLabel","_super","_sequencedShowHide","realDuration","valueLabel","txt","hoverDataItem","unhoverDataItem","$e78693fd548ad8ce$export$b7ac5ab8f71ba2a","disableDataItem","enableDataItem","_clickDisposer","selectDataItem","$06713b77db0b884a$var$count","$9a60c0761eaba32b$export$2e2bcd8739ae039","Map","$9a60c0761eaba32b$var$mapChildren","$9a60c0761eaba32b$var$objectChildren","childs","$9a60c0761eaba32b$export$85c928794f8d04d4","nodes","eachBefore","$9a60c0761eaba32b$export$5af32d52ab5dfd57","$9a60c0761eaba32b$var$copyData","eachAfter","that","find","compare","ancestor","$b87aaeb3b6fa0399$var$leastCommonAncestor","aNodes","ancestors","bNodes","descendants","leaves","links","copy","$b55f04ee4f1bcfc2$export$b3d5c8408bb86dd8","_tag","labels","makeNode","childData","nodesContainer","_treeData","first","_makeHierarchyData","_rootNode","_updateValues","_updateVisuals","_zoom","_selectDataItem","_updateNodes","hierarchyNode","_updateNode","hierarchyChildren","hierarchyChild","_getDataItemById","di","childDataItem","patterns","_processDataItem","addChildData","childDataField","d3HierarchyNode","dataValue","valuePercent","valueLow","valueHigh","d3HierarchyChild","childrenDataArray","hiddenState","maxDepth","disabledField","skipDisptach","currentDepth","_currentDownDepth","_handleSingle","$ad640febdd4b14cd$export$9639a0c046796a48","_updateLinks","link","$6e1c2b5547190239$export$bea43d0de37d38af","newBullet","linksContainer","_a","_b","sourceNode","targetNode","x0","y0","sourceRadius","targetRadius","trueDistance","location","atan2","$c9e5ebd848896eae$export$c89a927ffc67e6fa","$68fcf793a22eaa10$export$e86869c751ae304d","circles","outerCircles","linkBullets","circle","outerCircle","_handleRadiusChange","parentDataItem","linkDataItems","updateLinkWith","linkWith","linkWithDataItem","_getPoint","_animatePositions","sourceLinks","lnk","targetLinks","_processLink","unlinkDataItems","_disposeLink","_handleUnlink","areLinked","linked","_link","_source","_target","$be1b12895c7da8cf$var$add","tree","isNaN","xm","ym","leaf","_x0","_y0","_x1","_y1","$75f49fd5af8d23e7$export$2e2bcd8739ae039","$e002de94352e4f40$export$e6fafc98131d2a44","$6a00482922687876$export$6f0a21aeb844a64c","$977cc0295d3f184c$export$2e2bcd8739ae039","$977cc0295d3f184c$var$Quadtree","NaN","addAll","$977cc0295d3f184c$var$leaf_copy","$977cc0295d3f184c$var$treeProto","$b10509a5c523ef79$export$2e2bcd8739ae039","$2dea4bbaea189065$export$2e2bcd8739ae039","$bdd28c4fe1fd882d$var$x","$bdd28c4fe1fd882d$var$y","$4275f440a0eccb35$var$index","$4275f440a0eccb35$var$find","nodeById","nodeId","$4275f440a0eccb35$export$2e2bcd8739ae039","strengths","distances","bias","iterations","initialize","initializeStrength","initializeDistance","_nodes","_random","cover","xz","yz","z","visit","extent","x3","y3","quads","retainer","visitAfter","$7c4cf709d1826294$var$noop","$7c4cf709d1826294$var$dispatch","$7c4cf709d1826294$var$Dispatch","$7c4cf709d1826294$var$set","typename","typenames","types","$7c4cf709d1826294$var$get","$e782289d8bd71451$var$taskHead","$e782289d8bd71451$var$taskTail","$e782289d8bd71451$var$frame","$e782289d8bd71451$var$timeout","$e782289d8bd71451$var$interval","$e782289d8bd71451$var$clockLast","$e782289d8bd71451$var$clockNow","$e782289d8bd71451$var$clockSkew","$e782289d8bd71451$var$clock","$e782289d8bd71451$var$setFrame","$e782289d8bd71451$export$461939dd4422153","$e782289d8bd71451$var$clearNow","$e782289d8bd71451$export$c57e9b2d8b9e4de","_call","_next","$e782289d8bd71451$export$9dc4ecf953986f04","time","restart","$e782289d8bd71451$var$wake","$e782289d8bd71451$export$d60154c1d7f3990e","$e782289d8bd71451$var$nap","t0","t2","t1","$e782289d8bd71451$var$sleep","$e782289d8bd71451$var$poke","clearInterval","setInterval","$f7ecda670cf68ae1$export$d141bba7fdc215a3","$f7ecda670cf68ae1$export$4a5767248b18ef41","$f7ecda670cf68ae1$var$initialAngle","$5c4a8cfe9c121e62$export$4ec66944d398f662","$f7ecda670cf68ae1$export$2e2bcd8739ae039","simulation","alphaMin","alphaDecay","alphaTarget","forces","stepper","$2a41329dd990bdd6$var$a","tick","fx","fy","initializeNodes","$f7ecda670cf68ae1$var$initialRadius","initializeForce","randomSource","closest","$bdd28c4fe1fd882d$export$2e2bcd8739ae039","radii","xi","yi","ri","ri2","prepare","quad","rj","d3forceSimulation","_tick","updateNodePositions","restartSimulation","_updateForces","d3ForceNode","_nodesDirty","collisionForce","linkForce","_links","pl","$0269baf63e02b6fc$export$2e2bcd8739ae039","$a8abf7da4ed52888$export$2e2bcd8739ae039","$6b6e9bc7f2e1a0ee$export$2e2bcd8739ae039","distanceMin2","distanceMax2","theta2","accumulate","weight","distanceMin","distanceMax","theta","d3node","linkDatum","getDistance","getStrength","d3Node","sourceDataItem","targetDataItem","_updateRadius","valueWorking","d3Link","documentElement","$e73bf42412feb220$var$root","$e73bf42412feb220$var$zoomableContainer","$e73bf42412feb220$var$series","valueField","categoryField","factory","module","define","amd","this","getNanoSeconds","loadTime","moduleLoadTime","nodeLoadTime","upTime","process","hr","vendors","raf","caf","last","queue","_now","cp","__webpack_module_cache__","__webpack_require__","moduleId","cachedModule","__webpack_modules__","getter","definition","EVENT_NAMES","VISIBLE_NODE_TYPES","Typewriter","_this","_classCallCheck","_defineProperty","cancelRaf","doesStringContainHTMLTag","characters","pasteEffect","getDOMElementFromString","nodeHTML","eventItem","_toConsumableArray","nowTime","_objectSpread","getRandomInteger","textNode","textNodeToUse","_currentEvent$eventAr","_currentEvent$eventAr2","removeAllEventItems","_this$state$visibleNo","containerElement","styleBlock","message"],"version":3,"file":"index.32410ad5.js.map"}